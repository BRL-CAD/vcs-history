K 10
svn:author
V 9
tbrowder2
K 8
svn:date
V 27
2012-05-30T17:42:20.051672Z
K 7
svn:log
V 2184
This is a major change to vsl_vprintf (and related files)
incorporating a more modular approach.  In general, this change tries
to separate the parsing of the format string from the handling of the
result, both for valid as well as for obsolete or unknown parts.  The
approach is also intended to ease maintenance and future enhancements.

The function specification has also been modified somewhat.

More specifically:

src/libbu/vls_internals.h
=========================

+ make VP_* bit flags available for multiple files
+ expand the set of VP_* bit flags
+ make the vflags_t type available for multiple files
+ make three of the vls_vprintf helper functions available for
  multiple files

src/libbu/test_vls_vprintf.c
============================

+ add new test function 'check_format_chars' to ensure consistent
  coverage of the defined valid and obsolete format characaters

src/libbu/vls_vprintf.c
=======================

+ hoist the vflags_t definition into vls_internals.h for use by the
  regression test (test_vls_vprinf.c)

+ move functions

+ consolidate vls_printf helper functions into four:

  - format_part_status: uses bit flags to define, for each character,
    what category it's in and whether it's valid, obsolete, or unknown
      
  - handle_obsolete_format_char: contains helper info messages for the
    user of obsolete chars

  - reset flags: resets an instance of the vflags_t to known values

  - handle_format_part: consolidates handling of the different
    categories of valid format characters; only turned on at the moment for
    length modifier type

+ use the new 'handle_format_part' function to hoist handling of the
  length modifiers (LMs) out of the format parsing loop

+ add the formerly implicit handling of the 'c' conversion specifier (CS)
  to the CS handling section

+ consolidate CS error handling in the default section of the CS
  switch statement

+ do some ws and style tidying

Future changes planned
======================

+ turn on modular handling of other categories of format chars

+ incorporate modular handling of compiler oddities such as the 'z'
  length modifier for Visual Studio C

+ improve error handling

END
