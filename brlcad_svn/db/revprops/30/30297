K 10
svn:author
V 6
brlcad
K 8
svn:date
V 27
2008-02-14T07:10:39.862660Z
K 7
svn:log
V 847
rewrite how the BU_BITV_SHIFT is calculated, instead of using hard-coded constants in machine.h it now determines the value automatically at compile-time.  this was achieved using an inlined integer log2 function that computes the size based on sizeof(bitv_t), using a technique from the U. of Kentucky's Aggregate Magic Algorithms collection.  a cursory performance impact analysis was performed testing both unoptimized and optimized compilations (on Mac OS X 10.4, gcc 4.0.1) with results looking quite reasonable.  performance did decrease moderately for unoptimized (by approx 10%) but also interestingly increased (by approx 10%) for optimized, undoubtedly due to cache/alignment and branching effects.  this approach beats a configure-time test since it will acquire the correct shift at run-time from Universal/multi-architecture binaries.
END
