K 10
svn:author
V 6
brlcad
K 8
svn:date
V 27
2013-08-13T03:16:40.607058Z
K 7
svn:log
V 1151
Fix 32-bit TIE.  The problem was someone trying to be far too clever packing bits into a pointer address.  You read that right.  Bits were being set/unset and read from WITHIN the pointer VALUE.  Even remember telling Justin many many years ago this would be a problem, but obviously nothing came of that.  My vague recollection was that he was hijacking particular bits that were always zero given particular struct allocation sizes.  Of course, this is incredibly presumptuous and volatile to struct member type sizes, 32-bit vs 64-bit compilation, implicit padding/alignment issues, and more.

This gets TIE working on 32-bit compilation (and generally more portably all around) by extracting those bit values that were being packed into their own struct element (for both the kdtree and the tri structs) where this was happening.  This took quite a bit of very cautious surgery to extract and propagate the bits correctly.  There may be more needed (e.g., didn't test single-precision), but seems to work swell in all the tests I threw at it.  Made (probably unnecessarily) most of the memory allocation zero-initialize just for good measure too.

END
