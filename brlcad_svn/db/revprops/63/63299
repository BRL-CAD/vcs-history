K 10
svn:author
V 6
brlcad
K 8
svn:date
V 27
2014-11-04T19:39:54.680976Z
K 7
svn:log
V 774
procedural geometry objects have long been on my mind, but recently rekindled with discussions at the gsoc reunion with csaba on the state of the python interface to brl-cad geometry.  the basic idea is to have a geometry object whose definition is not known until runtime, evaluated on-demand as needed per a set of higher-level parameterizations defined for that object.  these are very much related to our proc-db C program notions, but instead of having the procedure rigidly defined at compile-time, it's defined by a runtime definition (e.g., tcl or python).  csaba's demonstrations were exceptionally compelling that pybrlcad should be further developed as at least the first available interface.  the trick will be how to implement our entire object API dynamically.
END
