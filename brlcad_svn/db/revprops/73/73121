K 10
svn:author
V 6
brlcad
K 8
svn:date
V 27
2019-05-22T01:44:11.985945Z
K 7
svn:log
V 1481
this fixes an rtedge bug with occlusion objects.

exposed by the m35 regression test, case D, regression differences
were being caused due to occlusion objects being also in the main
geometry.  when we were determining whether a given point was
occluding our main geometry, we were hitting that same geometry and
finding it occluded (i.e., with itself).

as this determination involved firing another ray at a different
instance with different partitioning, the points could be exactly
equal or within floating point fuzz or at a completely different point
on the geometry if, for example, it were on a grazing edge.  this
reliably (Mac and Windows) resulted in differences with the case D
reference because it was also wrong.

this difference in occlusion determination explains why different
platforms produced different output on some edges of occlusion
objects.  the desired result when the geometry is in both sets is to
treat it as simply exposed (unoccluded geometry) with edges rendered.

this fix makes an assumption that hit points within our typical
distance tolerance are, in fact, the same point and thus probably the
same geometry.  while this is not necessarily true as there could be a
sub-tolerance-thin surface or overlapping geometry cases to consider,
they are close enough to be considered coincident and avoid extra
processing.  we could check and make sure the regions or regionIDs are
also identical, but thus far that has not been demonstrated necessary.


END
