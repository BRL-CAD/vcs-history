head	11.6;
access;
symbols
	ansi-20040405-merged:11.4.2.1
	postmerge-20040405-ansi:11.5
	premerge-20040404-ansi:11.4
	postmerge-autoconf:11.4
	autoconf-freeze:11.4
	premerge-autoconf:11.4
	postmerge-20040315-windows:11.4
	premerge-20040315-windows:11.4
	windows-20040315-freeze:11.4
	autoconf-20031203:11.4
	autoconf-20031202:11.4
	autoconf-branch:11.4.0.10
	phong-branch:11.4.0.8
	photonmap-branch:11.4.0.6
	rel-6-1-DP:11.4
	windows-branch:11.4.0.4
	rel-6-0-2:11.2
	ansi-branch:11.4.0.2
	rel-6-0-1-branch:11.2.0.4
	hartley-6-0-post:11.3
	hartley-6-0-pre:11.2
	rel-6-0-1:11.2
	rel-6-0:11.2
	rel-5-4:11.2
	offsite-5-3-pre:11.2
	rel-5-3:11.2
	rel-5-2:11.2
	rel-5-1-branch:11.2.0.2
	rel-5-1:11.2
	rel-5-0:11.2
	rel-5-0-beta:11.2
	rel-4-5:11.2
	ctj-4-5-post:11.2
	ctj-4-5-pre:11.2
	rel-4-4:11.1
	rel-4-0:10.1;
locks; strict;
comment	@ * @;


11.6
date	2004.05.21.16.45.05;	author morrison;	state dead;
branches;
next	11.5;

11.5
date	2004.04.05.05.46.00;	author morrison;	state Exp;
branches;
next	11.4;

11.4
date	2002.08.20.17.08.44;	author jra;	state Exp;
branches
	11.4.2.1;
next	11.3;

11.3
date	2002.08.15.20.55.56;	author hartley;	state Exp;
branches;
next	11.2;

11.2
date	96.07.17.14.15.11;	author jra;	state Exp;
branches;
next	11.1;

11.1
date	95.01.04.10.19.18;	author mike;	state Rel4_4;
branches;
next	10.1;

10.1
date	91.10.12.06.51.13;	author mike;	state Rel4_0;
branches;
next	1.2;

1.2
date	91.07.02.02.16.00;	author butler;	state Exp;
branches;
next	1.1;

1.1
date	90.10.25.20.13.54;	author butler;	state Exp;
branches;
next	;

11.4.2.1
date	2002.09.19.18.02.24;	author morrison;	state Exp;
branches;
next	;


desc
@safety check in
@


11.6
log
@moved to src/sig/
@
text
@/*
 *  Do the interpolation necessary to change a set of points from
 *  linear to log scale.
 *
 *  Input, a set of linearly seperated samples.
 *  Output, the same number of samples on a log baseline.
 *
 *  This uses fourth order Lagrange Interpolation and may
 *  be too wigly for our purposes.
 *
 *  Sure this is ugly.... I'll be happy if it works at all.
 */
#include <math.h>

#define	MAX	1024

void
LintoLog(double *in, double *out, int num)
{
	int	i;
	double	place, step;
	double	linpt[MAX];
	double	x, y, x1, x2, x3, x4;

	/*
	 * Compute the break points, i.e. the fractional input
	 * sample number corresponding to each of our "num" output
	 * samples.
	 */
	step = pow( (double)num, 1.0/(double)(num-1) );
	place = 1.0;
	for( i = 0; i < num; i++ ) {
		linpt[i] = place - 1.0;
		place *= step;
	}
#ifdef DEBUG
	for( i = 0; i < num; i++ ) {
		printf("linpt[%d] = %f\n", i, linpt[i]);
	}
#endif /* DEBUG */

	for( i = 0; i < num; i++ ) {
		/*
		 * Compute polynomial to interp with.
		 */
		x1 = (int)linpt[i] - 1;
		if( x1 < 0 ) x1 = 0;
		if( x1 > num - 4 ) x1 = num - 4;
		x2 = x1 + 1; x3 = x1 + 2; x4 = x1 + 3;

		x  = linpt[i];
		y  = in[(int)x1] * ((x-x2)*(x-x3)*(x-x4))/((x1-x2)*(x1-x3)*(x1-x4));
		y += in[(int)x2] * ((x-x1)*(x-x3)*(x-x4))/((x2-x1)*(x2-x3)*(x2-x4));
		y += in[(int)x3] * ((x-x1)*(x-x2)*(x-x4))/((x3-x1)*(x3-x2)*(x3-x4));
		y += in[(int)x4] * ((x-x1)*(x-x2)*(x-x3))/((x4-x1)*(x4-x2)*(x4-x3));
		out[i] = y;
	}
}
@


11.5
log
@merge of ansi-6-0-branch into head
@
text
@@


11.4
log
@Restoration of entire source tree to Pre-Hartley state
@
text
@d18 1
a18 3
LintoLog( in, out, num )
double in[], out[];
int num;
@


11.4.2.1
log
@Initial ANSIfication
@
text
@d18 3
a20 1
LintoLog(double *in, double *out, int num)
@


11.3
log
@Converted from K&R to ANSI C - RFH
@
text
@d18 3
a20 1
LintoLog(double *in, double *out, int num)
@


11.2
log
@Minor Mods for Irix 6.2
@
text
@d18 1
a18 3
LintoLog( in, out, num )
double in[], out[];
int num;
@


11.1
log
@Release_4.4
@
text
@d17 1
@


10.1
log
@Release_4.0
@
text
@@


1.2
log
@Minor nits
@
text
@@


1.1
log
@Initial revision
@
text
@d41 1
a41 1
#endif DEBUG
@
