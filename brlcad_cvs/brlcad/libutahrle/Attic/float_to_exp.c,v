head	11.6;
access;
symbols
	ansi-20040405-merged:11.3.2.1
	postmerge-20040405-ansi:11.4
	premerge-20040404-ansi:11.3
	postmerge-autoconf:11.3
	autoconf-freeze:11.3
	premerge-autoconf:11.3
	postmerge-20040315-windows:11.3
	premerge-20040315-windows:11.3
	windows-20040315-freeze:11.3
	autoconf-20031203:11.3
	autoconf-20031202:11.3
	autoconf-branch:11.3.0.10
	phong-branch:11.3.0.8
	photonmap-branch:11.3.0.6
	rel-6-1-DP:11.3
	windows-branch:11.3.0.4
	rel-6-0-2:11.1
	ansi-branch:11.3.0.2
	rel-6-0-1-branch:11.1.0.4
	hartley-6-0-post:11.2
	hartley-6-0-pre:11.1
	rel-6-0-1:11.1
	rel-6-0:11.1
	rel-5-4:11.1
	offsite-5-3-pre:11.1
	rel-5-3:11.1
	rel-5-2:11.1
	rel-5-1-branch:11.1.0.2
	rel-5-1:11.1
	rel-5-0:11.1
	rel-5-0-beta:11.1
	rel-4-5:11.1
	ctj-4-5-post:11.1
	ctj-4-5-pre:11.1
	rel-4-4:11.1
	rel-4-0:10.1;
locks; strict;
comment	@ * @;


11.6
date	2004.05.21.17.59.41;	author morrison;	state dead;
branches;
next	11.5;

11.5
date	2004.05.10.15.30.47;	author erikg;	state Exp;
branches;
next	11.4;

11.4
date	2004.04.05.07.40.44;	author morrison;	state Exp;
branches;
next	11.3;

11.3
date	2002.08.20.17.08.18;	author jra;	state Exp;
branches
	11.3.2.1;
next	11.2;

11.2
date	2002.08.15.20.55.28;	author hartley;	state Exp;
branches;
next	11.1;

11.1
date	95.01.04.10.05.02;	author mike;	state Rel4_4;
branches;
next	10.2;

10.2
date	94.08.10.23.20.11;	author gdurf;	state Exp;
branches;
next	10.1;

10.1
date	91.10.12.06.38.17;	author mike;	state Rel4_0;
branches;
next	1.2;

1.2
date	91.01.09.03.31.40;	author butler;	state Exp;
branches;
next	1.1;

1.1
date	91.01.03.17.30.47;	author butler;	state Exp;
branches;
next	;

11.3.2.1
date	2002.09.19.18.01.55;	author morrison;	state Exp;
branches;
next	;


desc
@Dist 3.0 patchlevel 2 installation
@


11.6
log
@moved from top-level to src/other/.
@
text
@/*
 * This software is copyrighted as noted below.  It may be freely copied,
 * modified, and redistributed, provided that the copyright notice is 
 * preserved on all copies.
 * 
 * There is no warranty or other guarantee of fitness for this software,
 * it is provided solely "as is".  Bug reports or fixes may be sent
 * to the author, who may or may not act on them as he desires.
 *
 * You may not include this software in a program or other software product
 * without supplying the source, or without informing the end-user that the 
 * source is available for no extra charge.
 *
 * If you modify this software, you should include a notice giving the
 * name of the person performing the modification, the date of modification,
 * and the reason for such modification.
 *
 *  Modified at BRL 16-May-88 by Mike Muuss to avoid Alliant STDC problem
 *  with <math.h> having defines for "exp" conflicting with local vars.
 */
/* 
 * float_to_exp.c - Convert floating point values to exponent bytes
 * 
 * Author:	John W. Peterson
 * 		Computer Science Dept.
 * 		University of Utah
 * Date:	Thu Oct 29 1987
 * Copyright (c) 1987, University of Utah
 */

#ifdef HAVE_CONFIG_H
# include "config.h"
#endif



#include <stdio.h>
#include <math.h>

#include "machine.h"
#include "rle.h"

/*****************************************************************
 * TAG( float_to_exp )
 * 
 * Takes an array of count floating point numbers, and makes an array
 * of count+1 pixels out of it.
 */
void
float_to_exp(int count, float *floats, rle_pixel *pixels)
{
    register int i;
    int expon, max_exp = -2000;
    float * fptr = floats;
    double f_exp;

    /* Find largest exponent */
    /* Use "Block normalization":
     * ExpScan[x] is largest exponent of the three
     * color components.  Red/Grn/BluScan[1..3] are the
     * normalized color components.
     */

    for (i = 0; i < count; i++)
    {
	frexp( *fptr++, &expon );
	max_exp = (expon > max_exp) ? expon : max_exp;
    }

    /* Don't over/underflow */
    if (max_exp > 128) max_exp = 128;
    else
	if (max_exp < -127) max_exp = -127;

    f_exp = ldexp( 256.0, -max_exp );

    fptr = floats;
    for( i = 0; i < count; i++ )  /* Extra casts for broken HP compiler */
        *pixels++ = (rle_pixel) ((int)(*fptr++ * f_exp)); 

    /* Excess 127 exponent */
    *pixels = (rle_pixel) (max_exp + 127); 
}
@


11.5
log
@change conf.h to a wrapped config.h
@
text
@@


11.4
log
@merge of ansi-6-0-branch into HEAD
@
text
@d31 5
a35 1
#include "conf.h"
@


11.3
log
@Restoration of entire source tree to Pre-Hartley state
@
text
@d46 1
a46 4
float_to_exp( count, floats, pixels )
int count;
float * floats;
rle_pixel * pixels;
@


11.3.2.1
log
@Initial ANSIfication
@
text
@d46 4
a49 1
float_to_exp(int count, float *floats, rle_pixel *pixels)
@


11.2
log
@Converted from K&R to ANSI C - RFH
@
text
@d46 4
a49 1
float_to_exp(int count, float *floats, rle_pixel *pixels)
@


11.1
log
@Release_4.4
@
text
@d46 1
a46 4
float_to_exp( count, floats, pixels )
int count;
float * floats;
rle_pixel * pixels;
@


10.2
log
@Altered #defines and #includes to conform to BRL-CAD standards
@
text
@@


10.1
log
@Release_4.0
@
text
@d31 2
d35 2
@


1.2
log
@changed include of rle*.h files to use quotes instead of <>
@
text
@@


1.1
log
@Initial revision
@
text
@a31 1
#include <rle.h>
d33 1
@
