head	11.2;
access;
symbols
	ansi-20040405-merged:11.1
	postmerge-20040405-ansi:11.1
	premerge-20040404-ansi:11.1
	postmerge-autoconf:11.1
	autoconf-freeze:11.1
	premerge-autoconf:11.1
	postmerge-20040315-windows:11.1
	premerge-20040315-windows:11.1
	windows-20040315-freeze:11.1
	autoconf-20031203:11.1
	autoconf-20031202:11.1
	autoconf-branch:11.1.0.14
	phong-branch:11.1.0.12
	photonmap-branch:11.1.0.10
	rel-6-1-DP:11.1
	windows-branch:11.1.0.8
	rel-6-0-2:11.1
	ansi-branch:11.1.0.6
	rel-6-0-1-branch:11.1.0.4
	hartley-6-0-post:11.1
	hartley-6-0-pre:11.1
	rel-6-0-1:11.1
	rel-6-0:11.1
	rel-5-4:11.1
	offsite-5-3-pre:11.1
	rel-5-3:11.1
	rel-5-2:11.1
	rel-5-1-branch:11.1.0.2
	rel-5-1:11.1
	rel-5-0:11.1
	rel-5-0-beta:11.1
	rel-4-5:11.1
	ctj-4-5-post:11.1
	ctj-4-5-pre:11.1
	rel-4-4:11.1
	rel-4-0:10.1;
locks; strict;


11.2
date	2004.05.21.17.59.49;	author morrison;	state dead;
branches;
next	11.1;

11.1
date	95.01.04.10.05.28;	author mike;	state Rel4_4;
branches;
next	10.1;

10.1
date	91.10.12.06.38.43;	author mike;	state Rel4_0;
branches;
next	1.1;

1.1
date	91.01.05.02.17.17;	author butler;	state Exp;
branches;
next	;


desc
@Utah Raster Toolkit Release 3 patchlevel 2 distribution
@


11.2
log
@moved from top-level to src/other/.
@
text
@.\" Copyright (c) 1986, 1987, University of Utah
.TH RLE_RAW_ALLOC 3 2/2/87 3
.UC 4 
.SH NAME
.HP
rle_raw_alloc \- Allocate memory for rle_getraw or rle_putraw.
.PD 0
.LP
rle_raw_free \- free memory allocated by rle_raw_alloc.
.PD
.SH SYNOPSIS
.B
#include <rle.h>
.br
.B
#include <rle_raw.h>
.sp
.B
rle_raw_alloc( the_hdr, scanp, nrawp )
.br
.B
rle_hdr * the_hdr;
.br
.B
rle_op *** scanp;
.br
.B
int ** nrawp;
.sp
.B
rle_raw_free( the_hdr, scanp, nrawp )
.br
.B
rle_hdr * the_hdr;
.br
.B
rle_op ** scanp;
.br
.B
int * nrawp;

.SH DESCRIPTION
The function
.I rle_raw_alloc
is provided to make it easier to allocate storage for use by the RLE
"raw" functions.  It examines the
.I the_hdr
structure provided and return (via its other arguments) newly
allocated space suitable for reading from or writing to an RLE file
described by the
.I the_hdr
structure.
.I Rle_raw_alloc
allocates
.RI ( the_hdr \(-> xmax 
\-
.IR the_hdr \(-> xmin
+ 1)
elements per channel, which is more than should ever be needed for a
valid \fIRLE\fP file.

.I Rle_raw_free
should be used to free memory allocated by 
.IR rle_raw_alloc (3).
The arguments are pointers to the allocated storage.
This is distinct from
.IR rle_freeraw (3),
which only frees pixel arrays referenced by individual
.I rle_op
structures, while
.I rle_raw_free
frees the storage consumed by the arrays of pointers and
.I rle_op
structures.
In fact, 
.IR rle_freeraw
should be called before calling
.IR rle_raw_free .
.SH SEE ALSO
.na
.IR rle_hdr (3),
.IR rle_op (3),
.IR rle_putraw (3),
.IR rle_getraw (3),
.IR rle_freeraw (3),
.IR librle (3),
.IR RLE (5).
.ad b
.SH AUTHOR
Spencer W. Thomas
.br
University of Utah
.SH BUGS
The naming confusion between
.I rle_freeraw
and
.I rle_raw_free
is unfortunate.
@


11.1
log
@Release_4.4
@
text
@@


10.1
log
@Release_4.0
@
text
@@


1.1
log
@Initial revision
@
text
@@
