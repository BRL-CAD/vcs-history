head	11.7;
access;
symbols
	ansi-20040405-merged:11.4.2.1
	postmerge-20040405-ansi:11.5
	premerge-20040404-ansi:11.4
	postmerge-autoconf:11.4
	autoconf-freeze:11.4
	premerge-autoconf:11.4
	postmerge-20040315-windows:11.4
	premerge-20040315-windows:11.4
	windows-20040315-freeze:11.4
	autoconf-20031203:11.4
	autoconf-20031202:11.4
	autoconf-branch:11.4.0.10
	phong-branch:11.4.0.8
	photonmap-branch:11.4.0.6
	rel-6-1-DP:11.4
	windows-branch:11.4.0.4
	rel-6-0-2:11.2
	ansi-branch:11.4.0.2
	rel-6-0-1-branch:11.2.0.2
	hartley-6-0-post:11.3
	hartley-6-0-pre:11.2
	rel-6-0-1:11.2
	rel-6-0:11.2
	rel-5-4:11.1
	offsite-5-3-pre:11.2
	rel-5-3:11.1
	rel-5-2:11.1
	rel-5-1-branch:11.1.0.2
	rel-5-1:11.1
	rel-5-0:11.1
	rel-5-0-beta:11.1
	rel-4-5:11.1
	ctj-4-5-post:11.1
	ctj-4-5-pre:11.1
	rel-4-4:11.1
	rel-4-0:10.1;
locks; strict;
comment	@ * @;


11.7
date	2004.05.21.17.59.48;	author morrison;	state dead;
branches;
next	11.6;

11.6
date	2004.05.10.15.30.47;	author erikg;	state Exp;
branches;
next	11.5;

11.5
date	2004.04.05.07.40.44;	author morrison;	state Exp;
branches;
next	11.4;

11.4
date	2002.08.20.17.08.18;	author jra;	state Exp;
branches
	11.4.2.1;
next	11.3;

11.3
date	2002.08.15.20.55.29;	author hartley;	state Exp;
branches;
next	11.2;

11.2
date	2000.09.01.19.19.11;	author mike;	state Exp;
branches;
next	11.1;

11.1
date	95.01.04.10.05.25;	author mike;	state Rel4_4;
branches;
next	10.2;

10.2
date	94.08.10.23.20.26;	author gdurf;	state Exp;
branches;
next	10.1;

10.1
date	91.10.12.06.38.40;	author mike;	state Rel4_0;
branches;
next	1.2;

1.2
date	91.01.09.03.32.31;	author butler;	state Exp;
branches;
next	1.1;

1.1
date	91.01.03.17.30.59;	author butler;	state Exp;
branches;
next	;

11.4.2.1
date	2002.09.19.18.01.56;	author morrison;	state Exp;
branches;
next	;


desc
@Dist 3.0 patchlevel 2 installation
@


11.7
log
@moved from top-level to src/other/.
@
text
@/*
 * This software is copyrighted as noted below.  It may be freely copied,
 * modified, and redistributed, provided that the copyright notice is 
 * preserved on all copies.
 * 
 * There is no warranty or other guarantee of fitness for this software,
 * it is provided solely "as is".  Bug reports or fixes may be sent
 * to the author, who may or may not act on them as he desires.
 *
 * You may not include this software in a program or other software product
 * without supplying the source, or without informing the end-user that the 
 * source is available for no extra charge.
 *
 * If you modify this software, you should include a notice giving the
 * name of the person performing the modification, the date of modification,
 * and the reason for such modification.
 *
 *  Modified at BRL 16-May-88 by Mike Muuss to avoid Alliant STDC desire
 *  to have all "void" functions so declared.
 */
/* 
 * rle_putraw.c - Generate RLE from "raw" form.
 * 
 * Author:	Spencer W. Thomas
 * 		Computer Science Dept.
 * 		University of Utah
 * Date:	Tue Jul  8 1986
 * Copyright (c) 1986, Spencer W. Thomas
 */
#ifndef lint
static const char rcs_ident[] = "$Id: rle_putraw.c,v 11.6 2004/05/10 15:30:47 erikg Exp $";
#endif

#ifdef HAVE_CONFIG_H
# include "config.h"
#endif



#include <stdio.h>

#include "machine.h"
#include "externs.h"

#include "rle_put.h"
#include "rle.h"
#include "rle_code.h"
#include "rle_raw.h"

/*****************************************************************
 * TAG( rle_putraw )
 * 
 * Put "raw" RLE data to an output file.
 * Inputs:
 *	nraw:		Array of lengths of the rows.  One per color channel.
 * 	rows:		array of pointers to individual channels of rle data.
 *			Rows is assumed to have have the_hdr->ncolors (plus
 *			a [-1] element if alpha is being saved) pointers to
 *			arrays of rle_op.  The length of each array is given
 *			by the corresponding nraw element.
 *	the_hdr:	Header struct describing this image.
 *
 * Outputs:
 * 	Writes RLE data to output file.
 * Assumptions:
 *	[None]
 * Algorithm:
 *	[None]
 */
void
rle_putraw(rle_op **scanraw, int *nraw, rle_hdr *the_hdr)
{
    register int channel;
    int scan_x,
	i,
	n_op;
    register rle_op * scan_r;

    for ( channel = (the_hdr->alpha ? -1 : 0);
	  channel < the_hdr->ncolors;
	  channel++ )
    {
	if ( ! RLE_BIT( *the_hdr, channel ) || nraw[channel] == 0 )
	{
	    continue;
	}

	/* If really data on this scanline, skip to here */
	if ( the_hdr->priv.put.nblank > 0 )
	{
	    SkipBlankLines( the_hdr->priv.put.nblank );
	    the_hdr->priv.put.nblank = 0;
	}

	SetColor( channel );
	n_op = nraw[channel] - 1;
	scan_x = the_hdr->xmin;
	for ( i = 0, scan_r = scanraw[channel]; i <= n_op; i++, scan_r++ )
	{
	    if ( scan_r->xloc > scan_x )
		SkipPixels( scan_r->xloc - scan_x, 0,
			    i > 0 && (scan_r - 1)->opcode == RRunDataOp );
	    scan_x = scan_r->xloc + scan_r->length;
	    switch( scan_r->opcode )
	    {
	    case RRunDataOp:
		putrun( scan_r->u.run_val, scan_r->length,
			i < n_op && scan_x == (scan_r + 1)->xloc );
		break;

	    case RByteDataOp:
		putdata( scan_r->u.pixels, scan_r->length );
		break;
	    }
	}
	if ( scan_x <= the_hdr->xmax )
	    SkipPixels( the_hdr->xmax - scan_x,
			1,
			i > 0 && (scan_r - 1)->opcode == RRunDataOp );
	if ( channel != the_hdr->ncolors - 1 )
	    NewScanLine( 0 );
    }

    the_hdr->priv.put.nblank++;	/* increment to next scanline */
    /* Flush each scanline */
/*    fflush( the_hdr->rle_file );*/
}
@


11.6
log
@change conf.h to a wrapped config.h
@
text
@d31 1
a31 1
static const char rcs_ident[] = "$Id: rle_putraw.c,v 11.5 2004/04/05 07:40:44 morrison Exp $";
@


11.5
log
@merge of ansi-6-0-branch into HEAD
@
text
@d31 1
a31 1
static const char rcs_ident[] = "$Id$";
d34 5
a38 1
#include "conf.h"
@


11.4
log
@Restoration of entire source tree to Pre-Hartley state
@
text
@d31 1
a31 1
static const char rcs_ident[] = "$Id: rle_putraw.c,v 11.2 2000/09/01 19:19:11 mike Exp $";
d67 1
a67 4
rle_putraw( scanraw, nraw, the_hdr )
rle_op **scanraw;
int *nraw;
rle_hdr *the_hdr;
@


11.4.2.1
log
@Initial ANSIfication
@
text
@d31 1
a31 1
static const char rcs_ident[] = "$Id: rle_putraw.c,v 11.4 2002/08/20 17:08:18 jra Exp $";
d67 4
a70 1
rle_putraw(rle_op **scanraw, int *nraw, rle_hdr *the_hdr)
@


11.3
log
@Converted from K&R to ANSI C - RFH
@
text
@d67 4
a70 1
rle_putraw(rle_op **scanraw, int *nraw, rle_hdr *the_hdr)
@


11.2
log
@
lint
@
text
@d31 1
a31 1
static const char rcs_ident[] = "$Id: rle_putraw.c,v 11.1 1995/01/04 10:05:25 mike Rel4_4 $";
d67 1
a67 4
rle_putraw( scanraw, nraw, the_hdr )
rle_op **scanraw;
int *nraw;
rle_hdr *the_hdr;
@


11.1
log
@Release_4.4
@
text
@d31 1
a31 1
static char rcs_ident[] = "$Id: rle_putraw.c,v 10.2 94/08/10 23:20:26 gdurf Exp $";
@


10.2
log
@Altered #defines and #includes to conform to BRL-CAD standards
@
text
@d31 1
a31 1
static char rcs_ident[] = "$Id: rle_putraw.c,v 10.1 1991/10/12 06:38:40 mike Rel4_0 gdurf $";
@


10.1
log
@Release_4.0
@
text
@d31 1
a31 1
static char rcs_ident[] = "$Id: rle_putraw.c,v 3.0 90/08/03 15:21:04 spencer Exp $";
d34 2
d37 4
d43 1
@


1.2
log
@changed include of rle*.h files to use quotes instead of <>
@
text
@@


1.1
log
@Initial revision
@
text
@d35 3
a37 3
#include <rle_put.h>
#include <rle.h>
#include <rle_raw.h>
@
