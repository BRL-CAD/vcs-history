head	11.8;
access;
symbols
	ansi-20040405-merged:11.5.2.1
	postmerge-20040405-ansi:11.6
	premerge-20040404-ansi:11.5
	postmerge-autoconf:11.5
	autoconf-freeze:11.5
	premerge-autoconf:11.5
	postmerge-20040315-windows:11.5
	premerge-20040315-windows:11.5
	windows-20040315-freeze:11.5
	autoconf-20031203:11.5
	autoconf-20031202:11.5
	autoconf-branch:11.5.0.10
	phong-branch:11.5.0.8
	photonmap-branch:11.5.0.6
	rel-6-1-DP:11.5
	windows-branch:11.5.0.4
	rel-6-0-2:11.3
	ansi-branch:11.5.0.2
	rel-6-0-1-branch:11.3.0.2
	hartley-6-0-post:11.4
	hartley-6-0-pre:11.3
	rel-6-0-1:11.3
	rel-6-0:11.3
	rel-5-4:11.1
	offsite-5-3-pre:11.2
	rel-5-3:11.1
	rel-5-2:11.1
	rel-5-1-branch:11.1.0.2
	rel-5-1:11.1
	rel-5-0:11.1
	rel-5-0-beta:11.1
	rel-4-5:11.1
	ctj-4-5-post:11.1
	ctj-4-5-pre:11.1
	rel-4-4:11.1
	rel-4-0:10.1;
locks; strict;
comment	@ * @;


11.8
date	2004.05.21.17.59.44;	author morrison;	state dead;
branches;
next	11.7;

11.7
date	2004.05.10.15.30.47;	author erikg;	state Exp;
branches;
next	11.6;

11.6
date	2004.04.05.07.40.44;	author morrison;	state Exp;
branches;
next	11.5;

11.5
date	2002.08.20.17.08.18;	author jra;	state Exp;
branches
	11.5.2.1;
next	11.4;

11.4
date	2002.08.15.20.55.29;	author hartley;	state Exp;
branches;
next	11.3;

11.3
date	2001.04.20.22.31.07;	author morrison;	state Exp;
branches;
next	11.2;

11.2
date	2000.09.01.19.20.25;	author mike;	state Exp;
branches;
next	11.1;

11.1
date	95.01.04.10.05.14;	author mike;	state Rel4_4;
branches;
next	10.3;

10.3
date	94.12.19.16.22.01;	author jra;	state Exp;
branches;
next	10.2;

10.2
date	94.08.10.23.20.17;	author gdurf;	state Exp;
branches;
next	10.1;

10.1
date	91.10.12.06.38.28;	author mike;	state Rel4_0;
branches;
next	1.2;

1.2
date	91.01.09.03.32.22;	author butler;	state Exp;
branches;
next	1.1;

1.1
date	91.01.03.17.30.51;	author butler;	state Exp;
branches;
next	;

11.5.2.1
date	2002.09.19.18.01.56;	author morrison;	state Exp;
branches;
next	;


desc
@Dist 3.0 patchlevel 2 installation
@


11.8
log
@moved from top-level to src/other/.
@
text
@/*
 * This software is copyrighted as noted below.  It may be freely copied,
 * modified, and redistributed, provided that the copyright notice is 
 * preserved on all copies.
 * 
 * There is no warranty or other guarantee of fitness for this software,
 * it is provided solely "as is".  Bug reports or fixes may be sent
 * to the author, who may or may not act on them as he desires.
 *
 * You may not include this software in a program or other software product
 * without supplying the source, or without informing the end-user that the 
 * source is available for no extra charge.
 *
 * If you modify this software, you should include a notice giving the
 * name of the person performing the modification, the date of modification,
 * and the reason for such modification.
 */
/* 
 * rle_getcom.c - Get specific comments from the_hdr structure.
 * 
 * Author:	Spencer W. Thomas
 * 		Computer Science Dept.
 * 		University of Utah
 * Date:	Sun Jan 25 1987
 * Copyright (c) 1987, University of Utah
 */

#ifdef HAVE_CONFIG_H
# include "config.h"
#endif



#include <stdio.h>

#include "machine.h"
#include "rle.h"

/*****************************************************************
 * TAG( match )
 * 
 * Match a name against a test string for "name=value" or "name".
 * If it matches name=value, return pointer to value part, if just
 * name, return pointer to NUL at end of string.  If no match, return NULL.
 *
 * Inputs:
 * 	n:	Name to match.  May also be "name=value" to make it easier
 *		to replace comments.
 *	v:	Test string.
 * Outputs:
 * 	Returns pointer as above.
 * Assumptions:
 *	[None]
 * Algorithm:
 *	[None]
 */
static char *
match(const char *n, const char *v)
{
    for ( ; *n != '\0' && *n != '=' && *n == *v; n++, v++ )
	;
    if (*n == '\0' || *n == '=')
    {
	if ( *v == '\0' )
	    return( (char *) v);
	else if ( *v == '=' )
	    return( (char *) ++v);
    }

    return NULL;
}

/*****************************************************************
 * TAG( rle_getcom )
 * 
 * Return a pointer to the value part of a name=value pair in the comments.
 * Inputs:
 * 	name:		Name part of the comment to search for.
 *	the_hdr:	rle_dflt_hdr structure.
 * Outputs:
 * 	Returns pointer to value part of comment or NULL if no match.
 * Assumptions:
 *	[None]
 * Algorithm:
 *	[None]
 */
char *
rle_getcom(const char *name, rle_hdr *the_hdr)
{
    const char ** cp;
    char * v;

    if ( the_hdr->comments == NULL )
	return NULL;

    for ( cp = the_hdr->comments; *cp; cp++ )
	if ( (v = match( name, *cp )) != NULL )
	    return v;

    return NULL;
}

@


11.7
log
@change conf.h to a wrapped config.h
@
text
@@


11.6
log
@merge of ansi-6-0-branch into HEAD
@
text
@d28 5
a32 1
#include "conf.h"
@


11.5
log
@Restoration of entire source tree to Pre-Hartley state
@
text
@d54 1
a54 3
match( n, v )
const char *n;
const char *v;
d84 1
a84 3
rle_getcom( name, the_hdr )
const char *name;
rle_hdr *the_hdr;
@


11.5.2.1
log
@Initial ANSIfication
@
text
@d54 3
a56 1
match(const char *n, const char *v)
d86 3
a88 1
rle_getcom(const char *name, rle_hdr *the_hdr)
@


11.4
log
@Converted from K&R to ANSI C - RFH
@
text
@d54 3
a56 1
match(const char *n, const char *v)
d86 3
a88 1
rle_getcom(const char *name, rle_hdr *the_hdr)
@


11.3
log
@CONST to const
@
text
@d54 1
a54 3
match( n, v )
const char *n;
const char *v;
d84 1
a84 3
rle_getcom( name, the_hdr )
const char *name;
rle_hdr *the_hdr;
@


11.2
log
@
lint
@
text
@d55 2
a56 2
CONST char *n;
CONST char *v;
d87 1
a87 1
CONST char *name;
d90 1
a90 1
    CONST char ** cp;
@


11.1
log
@Release_4.4
@
text
@d61 1
d66 1
@


10.3
log
@Mods for CRAY.
@
text
@@


10.2
log
@Altered #defines and #includes to conform to BRL-CAD standards
@
text
@d55 2
a56 2
register char *n;
register char *v;
d62 1
a62 1
	    return v;
d64 1
a64 1
	    return ++v;
@


10.1
log
@Release_4.0
@
text
@d28 2
d31 2
d85 1
a85 1
CONST_DECL char *name;
d88 1
a88 1
    CONST_DECL char ** cp;
@


1.2
log
@changed include of rle*.h files to use quotes instead of <>
@
text
@@


1.1
log
@Initial revision
@
text
@d29 1
a29 1
#include <rle.h>
@
