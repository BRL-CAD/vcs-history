head	11.7;
access;
symbols
	ansi-20040405-merged:11.4.2.2
	postmerge-20040405-ansi:11.6
	premerge-20040404-ansi:11.5
	postmerge-autoconf:11.4
	autoconf-freeze:11.4
	premerge-autoconf:11.4
	postmerge-20040315-windows:11.4
	premerge-20040315-windows:11.4
	windows-20040315-freeze:11.4
	autoconf-20031203:11.4
	autoconf-20031202:11.4
	autoconf-branch:11.4.0.10
	phong-branch:11.4.0.8
	photonmap-branch:11.4.0.6
	rel-6-1-DP:11.4
	windows-branch:11.4.0.4
	rel-6-0-2:11.2
	ansi-branch:11.4.0.2
	rel-6-0-1-branch:11.2.0.2
	hartley-6-0-post:11.3
	hartley-6-0-pre:11.2
	rel-6-0-1:11.2
	rel-6-0:11.2
	rel-5-4:11.1
	offsite-5-3-pre:11.2
	rel-5-3:11.1
	rel-5-2:11.1
	rel-5-1-branch:11.1.0.2
	rel-5-1:11.1
	rel-5-0:11.1
	rel-5-0-beta:11.1
	rel-4-5:11.1
	ctj-4-5-post:11.1
	ctj-4-5-pre:11.1
	rel-4-4:11.1
	rel-4-0:10.1;
locks; strict;
comment	@ * @;


11.7
date	2004.05.21.17.59.51;	author morrison;	state dead;
branches;
next	11.6;

11.6
date	2004.04.05.07.40.45;	author morrison;	state Exp;
branches;
next	11.5;

11.5
date	2004.04.02.19.01.03;	author erikg;	state Exp;
branches;
next	11.4;

11.4
date	2002.08.20.17.08.19;	author jra;	state Exp;
branches
	11.4.2.1;
next	11.3;

11.3
date	2002.08.15.20.55.29;	author hartley;	state Exp;
branches;
next	11.2;

11.2
date	2000.09.01.19.20.25;	author mike;	state Exp;
branches;
next	11.1;

11.1
date	95.01.04.10.05.35;	author mike;	state Rel4_4;
branches;
next	10.1;

10.1
date	91.10.12.06.38.49;	author mike;	state Rel4_0;
branches;
next	1.1;

1.1
date	91.01.03.17.31.08;	author butler;	state Exp;
branches;
next	;

11.4.2.1
date	2002.09.19.18.01.57;	author morrison;	state Exp;
branches;
next	11.4.2.2;

11.4.2.2
date	2004.04.02.23.18.29;	author morrison;	state Exp;
branches;
next	;


desc
@Dist 3.0 patchlevel 2 installation
@


11.7
log
@moved from top-level to src/other/.
@
text
@/*
 *			V A X S H O R T
 *
 *  Code to manipulate 16-bit integers in VAX order in a
 *  machine independent manner.
 *
 *  (VAX is a trademark of Digital Equipment Corporation)
 *
 *  Author -
 *	Michael John Muuss
 *  
 *  Source -
 *	SECAD/VLD Computing Consortium, Bldg 394
 *	The U. S. Army Ballistic Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5066
 *  
 *  Distribution Status -
 *	Public Domain, Distribution Unlimitied.
 */
#ifndef lint
static const char RCSid[] = "@@(#)$Id: vaxshort.c,v 11.6 2004/04/05 07:40:45 morrison Exp $ (BRL)";
#endif

#define HAVE_VAX_GSHORT	/* from libbu/vfont.c */

#ifndef HAVE_VAX_GSHORT
/*
 *			V A X _ G S H O R T
 *
 *  Obtain a 16-bit signed integer from two adjacent characters,
 *  stored in VAX order, regardless of word alignment.
 */
int
vax_gshort(char *msgp)
{
	register unsigned char *p = (unsigned char *) msgp;
	register int	i;

	if( (i = (p[1] << 8) | p[0]) & 0x8000 )
		return(i | ~0xFFFF);	/* Sign extend */
	return(i);
}
#endif

#ifndef HAVE_VAX_PSHORT
/*
 *			V A X _ P S H O R T
 */
char *
vax_pshort(char *msgp, unsigned int r)
{
	unsigned short int s = (unsigned short int)r;
	msgp[0] = s & 0xFF;
	msgp[1] = s >> 8;
	return(msgp+2);
}
#endif
@


11.6
log
@merge of ansi-6-0-branch into HEAD
@
text
@d21 1
a21 1
static const char RCSid[] = "@@(#)$Id$ (BRL)";
@


11.5
log
@macosX fixes
@
text
@d21 1
a21 1
static const char RCSid[] = "@@(#)$Id: vaxshort.c,v 11.4 2002/08/20 17:08:19 jra Exp $ (BRL)";
d34 1
a34 2
vax_gshort(msgp)
char *msgp;
d50 1
a50 3
vax_pshort(msgp, s)
register char *msgp;
register unsigned short s;
d52 1
a52 1

@


11.4
log
@Restoration of entire source tree to Pre-Hartley state
@
text
@d21 1
a21 1
static const char RCSid[] = "@@(#)$Id: vaxshort.c,v 11.2 2000/09/01 19:20:25 mike Exp $ (BRL)";
d24 3
d44 1
d46 1
d60 1
@


11.4.2.1
log
@Initial ANSIfication
@
text
@d21 1
a21 1
static const char RCSid[] = "@@(#)$Id: vaxshort.c,v 11.4 2002/08/20 17:08:19 jra Exp $ (BRL)";
d31 2
a32 1
vax_gshort(char *msgp)
d46 3
a48 1
vax_pshort(register char *msgp, register short unsigned int s)
@


11.4.2.2
log
@quell verbose warnings
@
text
@d21 1
a21 1
static const char RCSid[] = "@@(#)$Id: vaxshort.c,v 11.4.2.1 2002/09/19 18:01:57 morrison Exp $ (BRL)";
d45 1
a45 1
vax_pshort(char *msgp, unsigned int r)
d47 1
a47 1
	unsigned short int s = (unsigned short int)r;
@


11.3
log
@Converted from K&R to ANSI C - RFH
@
text
@d31 2
a32 1
vax_gshort(char *msgp)
d46 3
a48 1
vax_pshort(register char *msgp, register short unsigned int s)
@


11.2
log
@
lint
@
text
@d21 1
a21 1
static const char RCSid[] = "@@(#)$Id: vaxshort.c,v 11.1 1995/01/04 10:05:35 mike Rel4_4 $ (BRL)";
d31 1
a31 2
vax_gshort(msgp)
char *msgp;
d45 1
a45 3
vax_pshort(msgp, s)
register char *msgp;
register unsigned short s;
@


11.1
log
@Release_4.4
@
text
@d21 1
a21 1
static char RCSid[] = "@@(#)$Id: vaxshort.c,v 10.1 91/10/12 06:38:49 mike Rel4_0 $ (BRL)";
@


10.1
log
@Release_4.0
@
text
@d21 1
a21 1
static char RCSid[] = "@@(#)$Id: vaxshort.c,v 3.0 90/08/03 15:21:30 spencer Exp $ (BRL)";
@


1.1
log
@Initial revision
@
text
@@
