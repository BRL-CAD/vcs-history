head	11.2;
access;
symbols
	ansi-20040405-merged:11.1
	postmerge-20040405-ansi:11.1
	premerge-20040404-ansi:11.1
	postmerge-autoconf:11.1
	autoconf-freeze:11.1
	premerge-autoconf:11.1
	ansi-20040316-freeze:11.1
	postmerge-20040315-windows:11.1
	premerge-20040315-windows:11.1
	windows-20040315-freeze:11.1
	autoconf-20031203:11.1
	autoconf-20031202:11.1
	autoconf-branch:11.1.0.14
	phong-branch:11.1.0.12
	photonmap-branch:11.1.0.10
	rel-6-1-DP:11.1
	windows-branch:11.1.0.8
	rel-6-0-2:11.1
	ansi-branch:11.1.0.6
	rel-6-0-1-branch:11.1.0.4
	hartley-6-0-post:11.1
	hartley-6-0-pre:11.1
	rel-6-0-1:11.1
	rel-6-0:11.1
	rel-5-4:11.1
	offsite-5-3-pre:11.1
	rel-5-3:11.1
	rel-5-2:11.1
	rel-5-1-branch:11.1.0.2
	rel-5-1:11.1
	rel-5-0:11.1
	rel-5-0-beta:11.1
	rel-4-5:11.1
	ctj-4-5-post:11.1
	ctj-4-5-pre:11.1
	rel-4-4:11.1
	rel-4-0:10.1
	rel-3-5:9.1
	rel-3-0:8.1
	rel-2-3:7.1
	rel-2-0:6.1
	rel-1-24:5.1
	rel-1-20:4.2
	rel-1-10:4.1;
locks; strict;
comment	@ * @;


11.2
date	2004.05.24.04.11.53;	author morrison;	state dead;
branches;
next	11.1;

11.1
date	95.01.04.09.48.29;	author mike;	state Rel4_4;
branches;
next	10.1;

10.1
date	91.10.12.06.35.28;	author mike;	state Rel4_0;
branches;
next	9.4;

9.4
date	91.09.23.20.46.33;	author butler;	state Exp;
branches;
next	9.3;

9.3
date	91.07.22.20.09.51;	author mike;	state Exp;
branches;
next	9.2;

9.2
date	90.11.22.04.56.12;	author mike;	state Exp;
branches;
next	9.1;

9.1
date	89.05.19.05.44.25;	author mike;	state Rel3_5;
branches;
next	8.1;

8.1
date	88.10.05.00.24.33;	author mike;	state Rel3_0;
branches;
next	7.1;

7.1
date	87.11.02.23.22.45;	author mike;	state Rel;
branches;
next	6.1;

6.1
date	87.07.11.07.48.32;	author mike;	state Rel;
branches;
next	5.1;

5.1
date	87.06.24.21.47.30;	author mike;	state Rel;
branches;
next	4.4;

4.4
date	87.06.19.21.16.26;	author mike;	state Exp;
branches;
next	4.3;

4.3
date	87.06.11.14.17.38;	author stay;	state Exp;
branches;
next	4.2;

4.2
date	87.02.12.22.00.32;	author mike;	state Exp;
branches;
next	4.1;

4.1
date	86.12.29.02.46.12;	author mike;	state Rel1;
branches;
next	1.12;

1.12
date	86.10.25.08.51.43;	author mike;	state Exp;
branches;
next	1.11;

1.11
date	86.10.03.07.47.59;	author mike;	state Exp;
branches;
next	1.10;

1.10
date	86.10.03.06.48.26;	author phil;	state Exp;
branches;
next	1.9;

1.9
date	86.09.26.10.48.29;	author moss;	state Exp;
branches;
next	1.8;

1.8
date	86.09.09.20.02.37;	author mike;	state Exp;
branches;
next	1.7;

1.7
date	86.08.13.10.31.28;	author mike;	state Exp;
branches;
next	1.6;

1.6
date	86.08.13.10.31.21;	author mike;	state Exp;
branches;
next	1.5;

1.5
date	86.08.13.10.31.13;	author mike;	state Exp;
branches;
next	1.4;

1.4
date	86.08.13.10.31.06;	author mike;	state Exp;
branches;
next	1.3;

1.3
date	86.08.13.10.31.02;	author mike;	state Exp;
branches;
next	1.2;

1.2
date	86.08.13.10.30.57;	author mike;	state Exp;
branches;
next	1.1;

1.1
date	86.08.13.10.30.53;	author mike;	state Exp;
branches;
next	;


desc
@@


11.2
log
@moved/renamed from top-level h/ to top-level include/
@
text
@/*

	Modified by :		Gary S. Moss
				U. S. Army Ballistic Research Laboratory
				Aberdeen Proving Ground
				Maryland 21005-5066
				(301)278-6647 or AV-283-6647
 *
 *  Note:  Users of this file will need to include "fb.h" first.
 */
/* 
 * Runsv.h - Definitions for Run Length Encoding.
 * 
 * Author:	Spencer W. Thomas
 * 		Computer Science Dept.
 * 		University of Utah
 * Date:	Mon Aug  9 1982
 * Copyright (c) 1982 Spencer W. Thomas
 */

#include "machine.h"		/* for BIG_ENDIAN definition */

#ifdef BIG_ENDIAN
#define SWAB(shrt)  (shrt = ((shrt >> 8) & 0xff) | ((shrt << 8) & 0xff00))
#else
#define	SWAB(shrt)
#endif

/* Opcode definitions.							*/
#define	RSkipLinesOp	1
#define	RSetColorOp	2
#define	RSkipPixelsOp	3
#define	RByteDataOp	5
#define	RRunDataOp	6

/* If this bit is set in inst.opcode, we have a long instruction.	*/
#define LONG            0x40

/* Flags returned by 'rle_rhdr()'.					*/
#define NO_BOX_SAVE	(1<<0)	/* Saved with backgr.== H_CLEARFIRST	*/
#define NO_COLORMAP	(1<<1)	/* Color map not saved.			*/
#define NO_IMAGE	(1<<2)	/* Only color map saved.		*/

typedef struct	/* Extended format RLE header.				*/
	{
	short	h_xpos, h_ypos;	/* Lower-left corner of image.		*/
        short	h_xlen, h_ylen;	/* Size of saved box.			*/
	char	h_flags;	/* Some flags.				*/
#define	H_CLEARFIRST	0x1	/* Clear the fb to background first.	*/
#define H_BOXSAVE	0x0	/* Straight box save.			*/
	char	h_ncolors;	/* Number of color channels.		*/
#define H_LD_CMAP_ONLY	0	/* Load only the color map (if present).*/
#define H_B_W		1	/* We have a black and white image.	*/
#define H_RGB		3	/* We have a normal color image.	*/
	char	h_pixelbits;	/* Bits per pixel per channel.		*/
	char	h_ncmap;	/* Channels in color map (map present).	*/
	char	h_cmaplen;	/* Log base 2 of entries in color map.	*/
	unsigned char  h_background[3]; /* Background color.		*/
} Xtnd_Rle_Header;

typedef struct	/* Old format RLE header minus magic number field.	*/
	{
/***	short	magic;  Read seperately ***/
	short	xpos, ypos;	/* Lower-left corner of image.		*/
	short	xsize, ysize;	/* Size of saved box.			*/
	unsigned char 	bg_r;	/* Background colors.			*/
	unsigned char	bg_g;
	unsigned char	bg_b;
	char	map;		/* Flag for map presence.		*/
	} Old_Rle_Header;

typedef struct /* Old RLE format instruction.				*/
	{
#if __STDC__ || defined(__convexc__)
	/* XXX This won't match the file format, but will at least compile */
	/* ANSI insists that bit-field must be of type signed int, unsigned int or int */
	unsigned int datum:12, opcode:4;
#else
	unsigned short datum:12, opcode:4;
#endif
	} Old_Inst;

typedef struct /* Old RLE format instruction.				*/
	{
#if __STDC__ || defined(__convexc__)
	/* XXX This won't match the file format, but will at least compile */
	/* ANSI insists that bit-field must be of type signed int, unsigned int or int */
	int	opcode:8, datum:8;
#else
	short	opcode:8, datum:8;
#endif
	} Xtnd_Inst;

#define OPCODE(inst) (inst.opcode & ~LONG)
#define LONGP(inst) (inst.opcode & LONG)
#define DATUM(inst) (0x00ff & inst.datum)

/* Old RLE format magic numbers.					*/
#define	    RMAGIC	('R' << 8)	/* Top half of magic number.	*/
#define	    WMAGIC	('W' << 8)	/* Black&white rle image.	*/

#define	    XtndRMAGIC	((short)0xcc52) /* Extended RLE magic number.	*/

#define STRIDE (sizeof(RGBpixel))	/* Distance (bytes) to next pixel.	*/

/* Global data intended mainly for internal (library) use.		*/
extern int	_bg_flag;
extern int	_bw_flag;
extern int	_cm_flag;
extern RGBpixel	_bg_pixel;

/* Global flags for general use.					*/
extern int	rle_debug;
extern int	rle_verbose;

/* Entry points.							*/
void	rle_rlen(), rle_wlen(), rle_rpos(), rle_wpos();
int	rle_rhdr(), rle_whdr(), rle_rmap(), rle_wmap();
int	rle_decode_ln(), rle_encode_ln();
@


11.1
log
@Release_4.4
@
text
@@


10.1
log
@Release_4.0
@
text
@@


9.4
log
@patched for convex
@
text
@@


9.3
log
@ANSI hack.  This software won't work on an ANSI system,
but it will at least compile.
@
text
@d74 1
a74 1
#if __STDC__
d85 1
a85 1
#if __STDC__
@


9.2
log
@Changed to include machine.h, to get BIG_ENDIAN symbol.
@
text
@d74 5
d80 1
d85 5
d91 1
@


9.1
log
@Release_3.5
@
text
@a1 4
	SCCS id:	@@(#) rle.h	1.7
	Last edit: 	8/15/85 at 10:15:45	G S M
	Retrieved: 	8/13/86 at 10:31:24
	SCCS archive:	/m/cad/librle/RCS/s.rle.h
d3 1
a3 1
	Modified for by :	Gary S. Moss
d21 1
a21 6
/********* Be certain to update this!! **********/
#if !defined( vax )
#define BIGENDIAN	/* Byte [0] on left side of word */
#else
/* Little-endian.  Byte [0] on right side of word */
#endif
d23 1
a23 1
#ifdef BIGENDIAN
@


8.1
log
@Release_3.0
@
text
@@


7.1
log
@Release 2.3
@
text
@@


6.1
log
@Release 2.0
@
text
@@


5.1
log
@Release 1.24
@
text
@@


4.4
log
@Flipped sense of VAX/BIGENDIAN test.
@
text
@@


4.3
log
@Added alliant define so it will work on the alliants
@
text
@d26 4
a29 2
#if defined( gould ) || defined( sel ) || defined(sun) || defined(sgi) || defined(alliant)
#define BIGENDIAN
@


4.2
log
@Release 1.20 -- First Formal Release
@
text
@d26 1
a26 1
#if defined( gould ) || defined( sel ) || defined(sun) || defined(sgi)
@


4.1
log
@BRL CAD Distribution Release 1.10
@
text
@@


1.12
log
@Changed to RGBpixel.
@
text
@@


1.11
log
@Expanded BIGENDIAN list
@
text
@d99 1
a99 1
#define STRIDE (sizeof(Pixel))	/* Distance (bytes) to next pixel.	*/
d105 1
a105 1
extern Pixel	_bg_pixel;
@


1.10
log
@Converted to latest arrangement
@
text
@d25 11
a91 9

#if defined( gould ) || defined( sel )
#define BIGENDIAN
#endif
#ifdef BIGENDIAN
#define SWAB(shrt)  (shrt = ((shrt >> 8) & 0xff) | ((shrt << 8) & 0xff00))
#else
#define	SWAB(shrt)
#endif
@


1.9
log
@Changed test for host from "sem" to "sel" for detecting Goulds with /bin/cc.
@
text
@d13 1
a13 1
 *  Note:  Most users of this file will need to include "fb.h" as well.
d97 1
a97 1
#define STRIDE (sizeof(struct pixel))	/* Distance (bytes) to next pixel.	*/
d103 1
a103 1
extern struct pixel	_bg_pixel;
@


1.8
log
@Minor cleanup
@
text
@d82 1
a82 1
#if defined( gould ) || defined( sem )
@


1.7
log
@Pulled length and position parameters out of header access routines.
rle_whdr() and rle_rhdr() and added seperate access routines to set those parameters.
@
text
@d12 3
a14 1
*/
d97 1
a97 1
#define STRIDE (sizeof(Pixel))	/* Distance (bytes) to next pixel.	*/
d103 1
a103 1
extern Pixel	_bg_pixel;
@


1.6
log
@Backport from gould, fixed byte-swapping.
@
text
@d2 3
a4 3
	SCCS id:	@@(#) rle.h	1.6
	Last edit: 	5/28/85 at 10:10:45	G S M
	Retrieved: 	8/13/86 at 10:31:18
d106 5
@


1.5
log
@Seems to work : reads both new and old formats, writes new format.
Must speed it up and remove some debug writes.
@
text
@d2 3
a4 3
	SCCS id:	@@(#) rle.h	1.5
	Last edit: 	3/26/85 at 17:47:49	G S M
	Retrieved: 	8/13/86 at 10:31:09
d80 3
@


1.4
log
@Packaging.
@
text
@d2 3
a4 3
	SCCS id:	@@(#) rle.h	1.4
	Last edit: 	3/22/85 at 14:23:00	G S M
	Retrieved: 	8/13/86 at 10:31:04
d24 5
a28 5
#define	    RSkipLinesOp	1
#define	    RSetColorOp		2
#define	    RSkipPixelsOp	3
#define	    RByteDataOp		5
#define	    RRunDataOp		6
d31 1
a31 1
#define     LONG                0x40
d33 5
d44 1
d55 1
a55 1
typedef struct	/* Old format RLE header.				 */
d57 1
a57 1
	short	magic;
d64 1
a64 1
	} Rle_Header;
d68 2
a69 2
	unsigned short datum: 12, opcode:4;
	} Rle_Word;
d71 15
a92 2
#define _Get_Inst( _fp, _inst ) \
	(fread( (char *)_inst, sizeof(Rle_Word), 1, _fp ) != 1 ? EOF : 1)
@


1.3
log
@First version ready for testing.
@
text
@d2 3
a4 3
	SCCS id:	@@(#) rle.h	1.3
	Last edit: 	3/22/85 at 14:00:10	G S M
	Retrieved: 	8/13/86 at 10:31:00
d80 4
@


1.2
log
@Works well, all options not tested, -i and -p option not 
supported, and buffering is needed.
@
text
@d2 3
a4 3
	SCCS id:	@@(#) rle.h	1.2
	Last edit: 	3/21/85 at 16:22:07	G S M
	Retrieved: 	8/13/86 at 10:30:54
d46 1
a46 1
	u_char  h_background[3];/* Background color.			*/
d54 3
a56 3
	u_char  bg_r;		/* Background colors.			*/
	u_char	bg_g;
	u_char	bg_b;
@


1.1
log
@Initial revision
@
text
@d2 3
a4 3
	SCCS id:	@@(#) rle.h	1.1
	Last edit: 	3/21/85 at 13:59:50	G S M
	Retrieved: 	8/13/86 at 10:30:50
@
