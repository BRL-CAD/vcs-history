head	11.6;
access;
symbols
	ansi-20040405-merged:11.4.4.1
	postmerge-20040405-ansi:11.5
	premerge-20040404-ansi:11.5
	postmerge-autoconf:11.5
	autoconf-freeze:11.4.12.1
	premerge-autoconf:11.5
	ansi-20040316-freeze:11.4
	postmerge-20040315-windows:11.5
	premerge-20040315-windows:11.5
	windows-20040315-freeze:11.4.6.1
	autoconf-20031203:11.4
	autoconf-20031202:11.4
	autoconf-branch:11.4.0.12
	phong-branch:11.4.0.10
	photonmap-branch:11.4.0.8
	rel-6-1-DP:11.4
	windows-branch:11.4.0.6
	rel-6-0-2:11.4
	ansi-branch:11.4.0.4
	rel-6-0-1-branch:11.4.0.2
	hartley-6-0-post:11.4
	hartley-6-0-pre:11.4
	rel-6-0-1:11.4
	rel-6-0:11.4
	rel-5-4:11.3
	offsite-5-3-pre:11.3
	rel-5-3:11.3
	rel-5-2:11.3
	rel-5-1-branch:11.3.0.2
	rel-5-1:11.3
	rel-5-0:11.3
	rel-5-0-beta:11.3
	rel-4-5:11.3
	ctj-4-5-post:11.3
	ctj-4-5-pre:11.3
	rel-4-4:11.1;
locks; strict;
comment	@ * @;


11.6
date	2004.05.24.04.11.51;	author morrison;	state dead;
branches;
next	11.5;

11.5
date	2004.02.02.17.39.02;	author morrison;	state Exp;
branches;
next	11.4;

11.4
date	2001.03.31.01.56.33;	author morrison;	state Exp;
branches
	11.4.4.1
	11.4.6.1
	11.4.12.1;
next	11.3;

11.3
date	97.01.02.21.16.58;	author jra;	state Exp;
branches;
next	11.2;

11.2
date	96.08.29.01.39.09;	author cnuzman;	state Exp;
branches;
next	11.1;

11.1
date	95.01.04.09.48.19;	author mike;	state Rel4_4;
branches;
next	1.3;

1.3
date	94.09.23.14.29.50;	author stay;	state Exp;
branches;
next	1.2;

1.2
date	94.09.16.20.08.29;	author mike;	state Exp;
branches;
next	1.1;

1.1
date	94.06.01.10.31.59;	author stay;	state Exp;
branches;
next	;

11.4.4.1
date	2004.03.17.21.16.10;	author morrison;	state Exp;
branches;
next	;

11.4.6.1
date	2004.03.11.23.40.46;	author morrison;	state Exp;
branches;
next	;

11.4.12.1
date	2004.02.12.18.32.35;	author erikg;	state Exp;
branches;
next	;


desc
@carl nuzman style animation header file 
@


11.6
log
@moved/renamed from top-level h/ to top-level include/
@
text
@/*
 *			A N I M . H
 *
 *  Author -
 *	Carl J. Nuzman
 *  
  Source -
 *      The U. S. Army Research Laboratory
 *      Aberdeen Proving Ground, Maryland  21005-5068  USA
 *  
 *  Distribution Notice -
 *      Re-distribution of this software is restricted, as described in
 *      your "Statement of Terms and Conditions for the Release of
 *      The BRL-CAD Pacakge" agreement.
 *
 *  Copyright Notice -
 *      This software is Copyright (C) 1993-2004 by the United States Army
 *      in all countries except the USA.  All rights reserved.
 */

/* 
 	Be sure to include vmath.h before this file.
*/

#include "compat4.h"

#define ANIM_STEER_NEW	0
#define ANIM_STEER_END	1

#define DTOR    M_PI/180.0
#define RTOD	180.0/M_PI
				
#define VSUBUNIT(a,b,c) {VSUB2(a,b,c);\
                        VUNITIZE(a);}
#define FVSCAN(f,a)	fscanf(f,"%lf %lf %lf", (a),(a)+1,(a)+2)
#define FMATSCAN(f,m)	{FVSCAN(f,(m)); FVSCAN(f,(m)+4);\
			 FVSCAN(f,(m)+8); FVSCAN(f,(m)+12);}
#define VSCAN(a)	scanf("%lf %lf %lf", (a),(a)+1,(a)+2)
#define VPRINTS(t,a)	printf("%s %f %f %f ",t,(a)[0],(a)[1],(a)[2])
#define VPRINTN(t,a)	printf("%s %f %f %f\n",t,(a)[0],(a)[1],(a)[2])

#define MAT_MOVE(m,n)	MAT_COPY(m,n)

/***** 3x3 matrix format *****/

typedef fastf_t  mat3_t[9];

#define MAT3ZERO(m) 	{\
	int _j;	for(_j=0;_j<9;_j++) m[_j]=0.0;}

#define MAT3IDN(m)	{\
	int _j;	for(_j=0;_j<9;_j++) m[_j]=0.0;\
	m[0] = m[4] = m[8] = 1.0;}

#define MAT3MUL(o,a,b)	{\
	(o)[0] = (a)[0]*(b)[0] + (a)[1]*(b)[3] + (a)[2]*(b)[6];\
	(o)[1] = (a)[0]*(b)[1] + (a)[1]*(b)[4] + (a)[2]*(b)[7];\
	(o)[2] = (a)[0]*(b)[2] + (a)[1]*(b)[5] + (a)[2]*(b)[8];\
	(o)[3] = (a)[3]*(b)[0] + (a)[4]*(b)[3] + (a)[5]*(b)[6];\
	(o)[4] = (a)[3]*(b)[1] + (a)[4]*(b)[4] + (a)[5]*(b)[7];\
	(o)[5] = (a)[3]*(b)[2] + (a)[4]*(b)[5] + (a)[5]*(b)[8];\
	(o)[6] = (a)[6]*(b)[0] + (a)[7]*(b)[3] + (a)[8]*(b)[6];\
	(o)[7] = (a)[6]*(b)[1] + (a)[7]*(b)[4] + (a)[8]*(b)[7];\
	(o)[8] = (a)[6]*(b)[2] + (a)[7]*(b)[5] + (a)[8]*(b)[8];}

#define MAT3SUM(o,a,b)	{\
	int _j; for(_j=0;_j<9;_j++) (o)[_j]=(a)[_j]+(b)[_j];}

#define MAT3DIF(o,a,b)	{\
	int _j; for(_j=0;_j<9;_j++) (o)[_j]=(a)[_j]-(b)[_j];}

#define MAT3SCALE(o,a,s)	{\
	int _j; for(_j=0;_j<9;_j++) (o)[_j]=(a)[_j] * (s);}

#define MAT3MOVE(o,a)	{\
	int _j; for(_j=0;_j<9;_j++) (o)[_j] = (a)[_j];}

#define MAT3XVEC(u,m,v)	{\
	(u)[0] = (m)[0]*(v)[0] + (m)[1]*(v)[1] + (m)[2]*(v)[2];\
	(u)[1] = (m)[3]*(v)[0] + (m)[4]*(v)[1] + (m)[5]*(v)[2];\
	(u)[2] = (m)[6]*(v)[0] + (m)[7]*(v)[1] + (m)[8]*(v)[2];}

#define MAT3TO4(o,i)	{\
	(o)[0] = (i)[0];\
	(o)[1] = (i)[1];\
	(o)[2] = (i)[2];\
	(o)[4] = (i)[3];\
	(o)[5] = (i)[4];\
	(o)[6] = (i)[5];\
	(o)[8] = (i)[6];\
	(o)[9] = (i)[7];\
	(o)[10] = (i)[8];\
	(o)[3]=(o)[7]=(o)[11]=(o)[12]=(o)[13]=(o)[14]=0.0;\
	(o)[15]=1.0;}

#define MAT4TO3(o,i)	{\
	(o)[0] = (i)[0];\
	(o)[1] = (i)[1];\
	(o)[2] = (i)[2];\
	(o)[3] = (i)[4];\
	(o)[4] = (i)[5];\
	(o)[5] = (i)[6];\
	(o)[6] = (i)[8];\
	(o)[7] = (i)[9];\
	(o)[8] = (i)[10];}


/* tilde matrix: [M]a = v X a */
#define MAKE_TILDE(m,v)	{\
	MAT3ZERO(m);\
	m[1]= -v[2];	m[2]=v[1];	m[3]= v[2];\
	m[5]= -v[0];	m[6]= -v[1];	m[7]= v[0];}

/* a = Ix Iy Iz    b = Ixy Ixz Iyz*/
#define INERTIAL_MAT3(m,a,b)	{\
	(m)[0] =  (a)[0]; (m)[1] = -(b)[0]; (m)[2] = -(b)[1];\
	(m)[3] = -(b)[0]; (m)[4] =  (a)[1]; (m)[5] = -(b)[2];\
	(m)[6] = -(b)[1]; (m)[7] = -(b)[2]; (m)[8]=  (a)[2];}


@


11.5
log
@update copyright to include span through 2003
@
text
@@


11.4
log
@Deprecated bn_mat_idn() and bn_mat_zero(), updated calls to h/vmath.h's MAT_IDN() and MAT_ZERO() performance improved macros.
@
text
@d17 1
a17 1
 *      This software is Copyright (C) 1993 by the United States Army
@


11.4.4.1
log
@sync branch with HEAD
@
text
@d17 1
a17 1
 *      This software is Copyright (C) 1993-2004 by the United States Army
@


11.4.6.1
log
@sync to HEAD...
@
text
@d17 1
a17 1
 *      This software is Copyright (C) 1993-2004 by the United States Army
@


11.4.12.1
log
@merge from HEAD
@
text
@d17 1
a17 1
 *      This software is Copyright (C) 1993-2004 by the United States Army
@


11.3
log
@Added compat4.h
@
text
@a41 1
#define MAT0(m)		MAT_ZERO(m)
@


11.2
log
@*** empty log message ***
@
text
@d25 2
@


11.1
log
@Release_4.4
@
text
@d21 1
a21 1
/* AMIM.H - Often used macros for animation programs by Carl Nuzman
d25 2
@


1.3
log
@fixed MAT_MOVE wrong number of arguments
@
text
@@


1.2
log
@Moved several handy macros from anim.h to vmath.h
@
text
@d39 1
a39 1
#define MAT_MOVE(m)	MAT_COPY(m)
@


1.1
log
@Initial revision
@
text
@a27 1
#define MAT_MOVE(o,m)   VMOVEN(o,m,16)
d38 2
a39 4
#define VELDIV(a,b,c)	{ \
	(a)[0] = (b)[0] / (c)[0];\
	(a)[1] = (b)[1] / (c)[1];\
	(a)[2] = (b)[2] / (c)[2]; } /*similar to VELMUL*/
a40 11
#define VSETALLN(v,s,n)  {\
	int _ijkx_l;\
	for (_ijkx_l=0;_ijkx_l<n;_ijkx_l++) v[_ijkx_l]=s;}

#define MAT0(m)		{\
	int _ih_;	for(_ih_=0;_ih_<16;_ih_++) m[_ih_]=0.0;}

#define MAT_IDN(m)	{\
	int _ih_;	for(_ih_=0;_ih_<16;_ih_++) m[_ih_]=0.0;\
	m[0] = m[5] = m[10] = m[15] = 1.0;}

d46 1
a46 1
	int _ih_;	for(_ih_=0;_ih_<9;_ih_++) m[_ih_]=0.0;}
d49 1
a49 1
	int _ih_;	for(_ih_=0;_ih_<9;_ih_++) m[_ih_]=0.0;\
d64 1
a64 1
	int _ih_; for(_ih_=0;_ih_<9;_ih_++) (o)[_ih_]=(a)[_ih_]+(b)[_ih_];}
d67 1
a67 1
	int _ih_; for(_ih_=0;_ih_<9;_ih_++) (o)[_ih_]=(a)[_ih_]-(b)[_ih_];}
d70 1
a70 1
	int _ih_; for(_ih_=0;_ih_<9;_ih_++) (o)[_ih_]=(a)[_ih_] * (s);}
d73 1
a73 1
	int _ih_; for(_ih_=0;_ih_<9;_ih_++) (o)[_ih_] = (a)[_ih_];}
@
