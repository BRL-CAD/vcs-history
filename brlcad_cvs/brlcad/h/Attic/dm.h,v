head	1.32;
access;
symbols
	ansi-20040405-merged:1.29.4.1
	postmerge-20040405-ansi:1.30
	premerge-20040404-ansi:1.29
	postmerge-autoconf:1.29
	autoconf-freeze:1.29
	premerge-autoconf:1.29
	ansi-20040316-freeze:1.29
	postmerge-20040315-windows:1.29
	premerge-20040315-windows:1.29
	windows-20040315-freeze:1.29
	autoconf-20031203:1.29
	autoconf-20031202:1.29
	autoconf-branch:1.29.0.12
	phong-branch:1.29.0.10
	photonmap-branch:1.29.0.8
	rel-6-1-DP:1.29
	windows-branch:1.29.0.6
	rel-6-0-2:1.29
	ansi-branch:1.29.0.4
	rel-6-0-1-branch:1.29.0.2
	hartley-6-0-post:1.29
	hartley-6-0-pre:1.29
	rel-6-0-1:1.29
	rel-6-0:1.28
	rel-5-4:1.25.2.1
	offsite-5-3-pre:1.27
	rel-5-3:1.25.2.1
	rel-5-2:1.25.2.1
	rel-5-1-branch:1.25.0.2
	rel-5-1:1.25
	rel-5-0:1.19
	rel-5-0-beta:1.19
	rel-4-5:1.15
	ctj-4-5-post:1.11
	ctj-4-5-pre:1.10;
locks; strict;
comment	@ * @;


1.32
date	2004.05.24.04.11.52;	author morrison;	state dead;
branches;
next	1.31;

1.31
date	2004.05.10.15.25.26;	author morrison;	state Exp;
branches;
next	1.30;

1.30
date	2004.04.05.09.31.17;	author morrison;	state Exp;
branches;
next	1.29;

1.29
date	2002.07.13.17.50.47;	author jra;	state Exp;
branches
	1.29.4.1;
next	1.28;

1.28
date	2001.04.03.19.07.07;	author bparker;	state Exp;
branches;
next	1.27;

1.27
date	2000.08.31.18.11.00;	author bparker;	state Exp;
branches;
next	1.26;

1.26
date	2000.07.12.03.25.42;	author cjohnson;	state Exp;
branches;
next	1.25;

1.25
date	2000.04.20.21.20.07;	author bparker;	state Exp;
branches
	1.25.2.1;
next	1.24;

1.24
date	2000.02.18.17.49.56;	author bparker;	state Exp;
branches;
next	1.23;

1.23
date	2000.01.28.15.44.36;	author bparker;	state Exp;
branches;
next	1.22;

1.22
date	99.12.27.21.02.54;	author bparker;	state Exp;
branches;
next	1.21;

1.21
date	99.12.17.16.09.11;	author bparker;	state Exp;
branches;
next	1.20;

1.20
date	99.12.01.13.26.54;	author bparker;	state Exp;
branches;
next	1.19;

1.19
date	99.01.12.17.54.02;	author bparker;	state Exp;
branches;
next	1.18;

1.18
date	98.06.15.18.56.28;	author bparker;	state Exp;
branches;
next	1.17;

1.17
date	98.06.12.19.50.00;	author bparker;	state Exp;
branches;
next	1.16;

1.16
date	98.04.07.13.41.49;	author bparker;	state Exp;
branches;
next	1.15;

1.15
date	97.11.19.21.50.45;	author bparker;	state Exp;
branches;
next	1.14;

1.14
date	97.11.04.20.15.52;	author bparker;	state Exp;
branches;
next	1.13;

1.13
date	97.10.10.14.28.50;	author bparker;	state Exp;
branches;
next	1.12;

1.12
date	97.09.23.21.19.46;	author bparker;	state Exp;
branches;
next	1.11;

1.11
date	97.08.01.21.34.37;	author bparker;	state Exp;
branches;
next	1.10;

1.10
date	97.05.21.12.57.44;	author bparker;	state Exp;
branches;
next	1.9;

1.9
date	97.05.08.14.00.28;	author bparker;	state Exp;
branches;
next	1.8;

1.8
date	97.04.22.14.57.50;	author bparker;	state Exp;
branches;
next	1.7;

1.7
date	97.01.27.22.19.16;	author bparker;	state Exp;
branches;
next	1.6;

1.6
date	96.12.04.21.32.12;	author bparker;	state Exp;
branches;
next	1.5;

1.5
date	96.10.23.20.35.59;	author bparker;	state Exp;
branches;
next	1.4;

1.4
date	96.10.04.20.31.15;	author bparker;	state Exp;
branches;
next	1.3;

1.3
date	96.09.30.19.34.31;	author bparker;	state Exp;
branches;
next	1.2;

1.2
date	96.09.25.20.31.56;	author bparker;	state Exp;
branches;
next	1.1;

1.1
date	96.09.23.18.03.30;	author bparker;	state Exp;
branches;
next	;

1.25.2.1
date	2000.09.01.17.23.14;	author bparker;	state Exp;
branches;
next	;

1.29.4.1
date	2004.04.02.16.01.05;	author morrison;	state Exp;
branches;
next	;


desc
@Display Manager include file
@


1.32
log
@moved/renamed from top-level h/ to top-level include/
@
text
@#ifndef SEEN_DM_H
#define SEEN_DM_H

#include "fbserv_obj.h"

#define DM_NULL (struct dm *)NULL
#define DM_MIN (-2048)
#define DM_MAX (2047)
#define X	0
#define Y	1
#define Z	2

#define DM_O(_m) offsetof(struct dm, _m)

#define GED_MAX 2047.0
#define GED_MIN -2048.0
#define GED_RANGE 4095.0
#define INV_GED 0.00048828125
#define INV_4096 0.000244140625

/*
 * Display coordinate conversion:
 *  GED is using -2048..+2048,
 *  X is 0..width,0..height
 */
#define DIVBY4096(x) (((double)(x))*INV_4096)
#define	GED_TO_Xx(_dmp, x) ((int)((DIVBY4096(x)+0.5)*_dmp->dm_width))
#define	GED_TO_Xy(_dmp, x) ((int)((0.5-DIVBY4096(x))*_dmp->dm_height))
#define Xx_TO_GED(_dmp, x) ((int)(((x)/(double)_dmp->dm_width - 0.5) * GED_RANGE))
#define Xy_TO_GED(_dmp, x) ((int)((0.5 - (x)/(double)_dmp->dm_height) * GED_RANGE))

#if IR_KNOBS
#define NOISE 16		/* Size of dead spot on knob */
#endif

/* the font used depends on the size of the window opened */
#define FONTBACK	"-adobe-courier-medium-r-normal--10-100-75-75-m-60-iso8859-1"
#define FONT5	"5x7"
#define FONT6	"6x10"
#define FONT7	"7x13"
#define FONT8	"8x13"
#define FONT9	"9x15"

/* Display Manager Types */
#define DM_TYPE_BAD     -1
#define DM_TYPE_NULL	0
#define DM_TYPE_PLOT	1
#define DM_TYPE_PS	2
#define DM_TYPE_X	3
#define DM_TYPE_OGL	4
#define DM_TYPE_GLX	5
#define DM_TYPE_PEX	6

/* Line Styles */
#define DM_SOLID_LINE 0
#define DM_DASHED_LINE 1

#define IS_DM_TYPE_NULL(_t) ((_t) == DM_TYPE_NULL)
#define IS_DM_TYPE_PLOT(_t) ((_t) == DM_TYPE_PLOT)
#define IS_DM_TYPE_PS(_t) ((_t) == DM_TYPE_PS)
#define IS_DM_TYPE_X(_t) ((_t) == DM_TYPE_X)
#define IS_DM_TYPE_OGL(_t) ((_t) == DM_TYPE_OGL)
#define IS_DM_TYPE_GLX(_t) ((_t) == DM_TYPE_GLX)
#define IS_DM_TYPE_PEX(_t) ((_t) == DM_TYPE_PEX)

#define GET_DM(p,structure,w,hp) { \
	register struct structure *tp; \
	for(BU_LIST_FOR(tp, structure, hp)) { \
		if(w == tp->win) { \
			(p) = tp; \
			break; \
		} \
	} \
\
	if(BU_LIST_IS_HEAD(tp, hp)) \
		p = (struct structure *)NULL; \
}

/*  Colors */
#define DM_COLOR_HI	((short)230)
#define DM_COLOR_LOW	((short)0)
#define DM_BLACK_R	DM_COLOR_LOW
#define DM_BLACK_G	DM_COLOR_LOW
#define DM_BLACK_B	DM_COLOR_LOW
#define DM_RED_R	DM_COLOR_HI
#define DM_RED_G	DM_COLOR_LOW
#define DM_RED_B	DM_COLOR_LOW
#define DM_BLUE_R	DM_COLOR_LOW
#define DM_BLUE_G	DM_COLOR_LOW
#define DM_BLUE_B	DM_COLOR_HI
#define DM_YELLOW_R	DM_COLOR_HI
#define DM_YELLOW_G	DM_COLOR_HI
#define DM_YELLOW_B	DM_COLOR_LOW
#define DM_WHITE_R	DM_COLOR_HI
#define DM_WHITE_G	DM_COLOR_HI
#define DM_WHITE_B	DM_COLOR_HI
#define DM_BLACK	DM_BLACK_R, DM_BLACK_G, DM_BLACK_B
#define DM_RED		DM_RED_R, DM_RED_G, DM_RED_B
#define DM_BLUE		DM_BLUE_R, DM_BLUE_G, DM_BLUE_B
#define DM_YELLOW	DM_YELLOW_R, DM_YELLOW_G, DM_YELLOW_B
#define DM_WHITE	DM_WHITE_R, DM_WHITE_G, DM_WHITE_B
#define DM_COPY_COLOR(_dr,_dg,_db,_sr,_sg,_sb){\
	(_dr) = (_sr);\
	(_dg) = (_sg);\
	(_db) = (_sb); }
#define DM_SAME_COLOR(_dr,_dg,_db,_sr,_sg,_sb)(\
	(_dr) == (_sr) &&\
	(_dg) == (_sg) &&\
	(_db) == (_sb))

/* Command parameter to dmr_viewchange() */
#define DM_CHGV_REDO	0	/* Display has changed substantially */
#define DM_CHGV_ADD	1	/* Add an object to the display */
#define DM_CHGV_DEL	2	/* Delete an object from the display */
#define DM_CHGV_REPL	3	/* Replace an object */
#define DM_CHGV_ILLUM	4	/* Make new object the illuminated object */

/*
 * Definitions for dealing with the buttons and lights.
 * BV are for viewing, and BE are for editing functions.
 */
#define LIGHT_OFF	0
#define LIGHT_ON	1
#define LIGHT_RESET	2		/* all lights out */

struct dm_vars {
  genptr_t pub_vars;
  genptr_t priv_vars;
};

/* Interface to a specific Display Manager */
struct dm {
  int (*dm_close)();
  int (*dm_drawBegin)();	/* formerly dmr_prolog */
  int (*dm_drawEnd)();		/* formerly dmr_epilog */
  int (*dm_normal)();
  int (*dm_loadMatrix)();
  int (*dm_drawString2D)();	/* formerly dmr_puts */
  int (*dm_drawLine2D)();	/* formerly dmr_2d_line */
  int (*dm_drawPoint2D)();
  int (*dm_drawVList)();	/* formerly dmr_object */
  int (*dm_setFGColor)(struct dm *dmp, unsigned char r, unsigned char g, unsigned char b, int strict, fastf_t transparency);
  int (*dm_setBGColor)(struct dm *, unsigned char, unsigned char, unsigned char);
  int (*dm_setLineAttr)();	/* currently - linewidth, (not-)dashed */
  int (*dm_configureWin)();
  int (*dm_setWinBounds)();
  int (*dm_setLight)();
  int (*dm_setTransparency)();
  int (*dm_setDepthMask)();
  int (*dm_setZBuffer)();
  int (*dm_debug)();		/* Set DM debug level */
  int (*dm_beginDList)();
  int (*dm_endDList)();
  int (*dm_drawDList)();
  int (*dm_freeDLists)();
  unsigned long dm_id;          /* window id */
  int dm_displaylist;		/* !0 means device has displaylist */
  int dm_stereo;                /* stereo flag */
  double dm_bound;		/* zoom-in limit */
  int dm_boundFlag;
  char *dm_name;		/* short name of device */
  char *dm_lname;		/* long name of device */
  int dm_type;			/* display manager type */
  int dm_top;                   /* !0 means toplevel window */
  int dm_width;
  int dm_height;
  int dm_lineWidth;
  int dm_lineStyle;
  fastf_t dm_aspect;
  fastf_t *dm_vp;		/* XXX--ogl still depends on this--Viewscale pointer */
  struct dm_vars dm_vars;	/* display manager dependant variables */
  struct bu_vls dm_pathName;	/* full Tcl/Tk name of drawing window */
  struct bu_vls dm_tkName;	/* short Tcl/Tk name of drawing window */
  struct bu_vls dm_dName;	/* Display name */
  unsigned char dm_bg[3];	/* background color */
  unsigned char dm_fg[3];	/* foreground color */
  vect_t dm_clipmin;		/* minimum clipping vector */
  vect_t dm_clipmax;		/* maximum clipping vector */
  int dm_debugLevel;		/* !0 means debugging */
  int dm_perspective;		/* !0 means perspective on */
  int dm_light;			/* !0 means lighting on */
  int dm_transparency;		/* !0 means transparency on */
  int dm_depthMask;		/* !0 means depth mask is writable */
  int dm_zbuffer;		/* !0 means zbuffer on */
  int dm_zclip;			/* !0 means zclipping */
  int dm_clearBufferAfter;	/* 1 means clear back buffer after drawing and swap */
  Tcl_Interp *dm_interp;	/* Tcl interpreter */
};

/*
 *			D M _ O B J
 *
 * A display manager object is used for interacting with a display manager.
 */
struct dm_obj {
  struct bu_list	l;
  struct bu_vls		dmo_name;		/* display manager object name/cmd */
  struct dm		*dmo_dmp;		/* display manager pointer */
#ifdef USE_FBSERV
  struct fbserv_obj	dmo_fbs;		/* fbserv object */
#endif
  struct bu_observer	dmo_observers;		/* fbserv observers */
};

#define DM_OPEN(_type,_argc,_argv) dm_open(_type,_argc,_argv)
#define DM_CLOSE(_dmp) _dmp->dm_close(_dmp)
#define DM_DRAW_BEGIN(_dmp) _dmp->dm_drawBegin(_dmp)
#define DM_DRAW_END(_dmp) _dmp->dm_drawEnd(_dmp)
#define DM_NORMAL(_dmp) _dmp->dm_normal(_dmp)
#define DM_LOADMATRIX(_dmp,_mat,_eye) _dmp->dm_loadMatrix(_dmp,_mat,_eye)
#define DM_DRAW_STRING_2D(_dmp,_str,_x,_y,_size,_use_aspect)\
     _dmp->dm_drawString2D(_dmp,_str,_x,_y,_size,_use_aspect)
#define DM_DRAW_LINE_2D(_dmp,_x1,_y1,_x2,_y2) _dmp->dm_drawLine2D(_dmp,_x1,_y1,_x2,_y2)
#define DM_DRAW_POINT_2D(_dmp,_x,_y) _dmp->dm_drawPoint2D(_dmp,_x,_y)
#define DM_DRAW_VLIST(_dmp,_vlist) _dmp->dm_drawVList(_dmp,_vlist)
#define DM_SET_FGCOLOR(_dmp,_r,_g,_b,_strict,_transparency) _dmp->dm_setFGColor(_dmp,_r,_g,_b,_strict,_transparency)
#define DM_SET_BGCOLOR(_dmp,_r,_g,_b) _dmp->dm_setBGColor(_dmp,_r,_g,_b)
#define DM_SET_LINE_ATTR(_dmp,_width,_dashed) _dmp->dm_setLineAttr(_dmp,_width,_dashed)
#define DM_CONFIGURE_WIN(_dmp) _dmp->dm_configureWin(_dmp)
#define DM_SET_WIN_BOUNDS(_dmp,_w) _dmp->dm_setWinBounds(_dmp,_w)
#define DM_SET_LIGHT(_dmp,_on) _dmp->dm_setLight(_dmp,_on)
#define DM_SET_TRANSPARENCY(_dmp,_on) _dmp->dm_setTransparency(_dmp,_on)
#define DM_SET_DEPTH_MASK(_dmp,_on) _dmp->dm_setDepthMask(_dmp,_on)
#define DM_SET_ZBUFFER(_dmp,_on) _dmp->dm_setZBuffer(_dmp,_on)
#define DM_DEBUG(_dmp,_lvl) _dmp->dm_debug(_dmp,_lvl)
#define DM_BEGINDLIST(_dmp,_list) _dmp->dm_beginDList(_dmp,_list)
#define DM_ENDDLIST(_dmp) _dmp->dm_endDList(_dmp)
#define DM_DRAWDLIST(_dmp,_list) _dmp->dm_drawDList(_dmp,_list)
#define DM_FREEDLISTS(_dmp,_list,_range) _dmp->dm_freeDLists(_dmp,_list,_range)

extern int Dm_Init();
extern struct dm *dm_open();
extern int dm_share_dlist();
extern fastf_t dm_Xx2Normal();
extern int dm_Normal2Xx();
extern fastf_t dm_Xy2Normal();
extern int dm_Normal2Xy();
extern void dm_fogHint();
extern int dm_processOptions();
extern int dm_limit();
extern int dm_unlimit();
extern fastf_t dm_wrap();
extern void Nu_void();
extern int Nu_int0();
extern unsigned Nu_unsign();
#if 0
extern void dm_configureWindowShape();
extern void dm_zbuffer();
extern void dm_lighting();
extern Tcl_Interp *interp;   /* This must be defined by the application */
#endif

/* vers.c (created by libdm/Cakefile) */
extern char dm_version[];

/* clip.c */
extern int clip(vect_t, vect_t, vect_t, vect_t);
extern int vclip(vect_t, vect_t, register fastf_t *, register fastf_t *);

/* axes.c */
extern void dmo_drawAxes_cmd(struct dm *dmp,
			     fastf_t viewSize,
			     mat_t rmat,
			     point_t axesPos,
			     fastf_t axesSize,
			     int *axesColor,
			     int *labelColor,
			     int lineWidth,
			     int posOnly,
			     int threeColor,
			     int tickEnable,
			     int tickLen,
			     int majorTickLen,
			     fastf_t tickInterval,
			     int ticksPerMajor,
			     int *tickColor,
			     int *majorTickColor,
			     int tickThreshold);

#endif /* SEEN_DM_H */
@


1.31
log
@Bob Parker's view modifications, png framebuffer support, shaded drawing mode
@
text
@@


1.30
log
@merge of ansi-6-0-branch into HEAD
@
text
@d15 6
d26 1
a26 1
#define DIVBY4096(x) (((double)(x))*0.0002441406)
d29 2
a30 2
#define Xx_TO_GED(_dmp, x) ((int)(((x)/(double)_dmp->dm_width - 0.5) * 4095))
#define Xy_TO_GED(_dmp, x) ((int)((0.5 - (x)/(double)_dmp->dm_height) * 4095))
d142 1
a142 1
  int (*dm_setFGColor)(struct dm *dmp, unsigned char r, unsigned char g, unsigned char b, int strict);
d148 2
d182 2
d186 1
a186 1
  int dm_depthcue;		/* !0 means depthcueing on (not used, only here for X dm to reference) */
d216 1
a216 1
#define DM_SET_FGCOLOR(_dmp,_r,_g,_b,_strict) _dmp->dm_setFGColor(_dmp,_r,_g,_b,_strict)
d222 2
d259 20
@


1.29
log
@Added unused depthcue entry to avoid errors when attempting to do depthcueing under X
@
text
@d136 2
a137 2
  int (*dm_setFGColor)();
  int (*dm_setBGColor)();
@


1.29.4.1
log
@need real function sig to quell warnings
@
text
@d136 2
a137 2
  int (*dm_setFGColor)(struct dm *dmp, unsigned char r, unsigned char g, unsigned char b, int strict);
  int (*dm_setBGColor)(struct dm *, unsigned char, unsigned char, unsigned char);
@


1.28
log
@*- for now just hide declarations for seemingly
   non-existent routines. Remove later.
@
text
@d176 1
@


1.27
log
@Move interp member from 'struct dm_obj'
		     to 'struct dm'
@
text
@d225 1
d233 1
a236 1
#if 0
@


1.26
log
@LINT from gcc -Wall.  These are to support clean up of libdm.
@
text
@d176 1
a191 1
  Tcl_Interp		*dmo_interp;		/* Tcl interpreter */
d235 1
d237 1
@


1.25
log
@*- declare variable to hold package version
@
text
@d239 5
@


1.25.2.1
log
@Moved interp member.
@
text
@a175 1
  Tcl_Interp *dm_interp;	/* Tcl interpreter */
d191 1
a234 1
#if 0
a235 1
#endif
a238 5

/* clip.c */
extern int clip(vect_t, vect_t, vect_t, vect_t);
extern int vclip(vect_t, vect_t, register fastf_t *, register fastf_t *);

@


1.24
log
@*- add observer list to dm_obj
@
text
@d236 3
@


1.23
log
@*- added member to struct dm
@
text
@d190 1
@


1.22
log
@*- add new members to "struct dm":
	dm_configureWin, dm_setLight, dm_setZBuffer
	dm_light, dm_zbuffer
*- struct dm_obj /* display manager object */
@
text
@d190 1
@


1.21
log
@*- changed the signature to dm_drawVList
@
text
@d4 2
d139 1
d141 2
d173 2
d178 14
d206 1
d208 2
@


1.20
log
@*- added members to struct dm
*- added a few macros
@
text
@d167 1
d181 1
a181 1
#define DM_DRAW_VLIST(_dmp,_vlist,_persp) _dmp->dm_drawVList(_dmp,_vlist,_persp)
@


1.19
log
@*- declare dm_share_dlist()
@
text
@d5 7
a117 1

a135 1
  int (*dm_getBGColor)();
d147 1
d162 6
a182 1
#define DM_GET_BGCOLOR(_dmp,_interp) _dmp->dm_getBGColor(_dmp,_interp)
d191 1
a191 1
extern int dm_tclInit();
@


1.18
log
@*- new routine - dm_getBGColor()
@
text
@d182 1
@


1.17
log
@*- change dm_setColor to dm_setFGColor
*- add dm_setBGColor to "struct dm"
@
text
@d130 1
d171 1
@


1.16
log
@*- use "struct dm_vars"
*- add perspective parameter to DM_DRAW_VLIST
@
text
@d128 2
a129 1
  int (*dm_setColor)();
d168 2
a169 1
#define DM_SET_COLOR(_dmp,_r,_g,_b,_strict) _dmp->dm_setColor(_dmp,_r,_g,_b,_strict)
@


1.15
log
@*** empty log message ***
@
text
@d6 11
d111 6
d150 1
a150 1
  genptr_t dm_vars;		/* pointer to display manager dependant variables */
d166 1
a166 1
#define DM_DRAW_VLIST(_dmp,_vlist) _dmp->dm_drawVList(_dmp,_vlist)
d178 4
a181 2
extern fastf_t dm_X2Normal();
extern fastf_t dm_Y2Normal();
@


1.14
log
@change a few function names
@
text
@d159 1
a159 1
extern int dm_Tcl_Init();
d163 1
a163 1
extern int dm_process_options();
d170 3
@


1.13
log
@*- mods to "struct dm"  ----> add dm_id, remove dm_eventHandler
@
text
@d71 5
a75 5
#define DM_BLACK	DM_BLACK_R,DM_BLACK_G,DM_BLACK_B
#define DM_RED		DM_RED_R,DM_RED_G,DM_RED_B
#define DM_BLUE		DM_BLUE_R,DM_BLUE_G,DM_BLUE_B
#define DM_YELLOW	DM_YELLOW_R,DM_YELLOW_G,DM_YELLOW_B
#define DM_WHITE	DM_WHITE_R,DM_WHITE_G,DM_WHITE_B
d106 1
a106 1
  int (*dm_newrot)();
d109 1
a109 1
  int (*dm_drawVertex2D)();
d139 1
d144 1
a144 1
#define DM_NEWROT(_dmp,_mat,_eye) _dmp->dm_newrot(_dmp,_mat,_eye)
d148 1
a148 1
#define DM_DRAW_VERTEX_2D(_dmp,_x,_y) _dmp->dm_drawVertex2D(_dmp,_x,_y)
@


1.12
log
@*- display list support
*- change paramters to DM_DRAW_VLIST
*- add dm_stereo to "struct dm"
@
text
@a4 1
#define DM_EVENT_HANDLER_NULL (int (*)())NULL
a114 1
  int (*dm_eventHandler)();	/* application provided dm-specific event handler */
d119 1
a152 1
#if 1
a156 1
#endif
@


1.11
log
@more declarations
@
text
@a113 2
  unsigned (*dm_cvtvecs)();	/* returns size requirement of subr */
  unsigned (*dm_load)();	/* DMA the subr to device */
d117 4
d122 1
a134 1
  struct mem_map *dm_map;	/* displaylist mem map */
d147 1
a147 2
#define DM_DRAW_LINE_2D(_dmp,_x1,_y1,_x2,_y2)\
     _dmp->dm_drawLine2D(_dmp,_x1,_y1,_x2,_y2)
d149 1
a149 1
#define DM_DRAW_VLIST(_dmp,_vlist,_mat) _dmp->dm_drawVList(_dmp,_vlist,_mat)
d151 1
a151 4
#define DM_SET_LINE_ATTR(_dmp,_width,_dashed)\
     _dmp->dm_setLineAttr(_dmp,_width,_dashed)
#define DM_CVTVECS(_dmp,_sp) _dmp->dm_cvtvecs(_dmp,_sp)
#define DM_LOAD(_dmp,_saddr,_sbytes) _dmp->dm_load(_dmp,_saddr,_sbytes)
d154 6
@


1.10
log
@add members to "struct dm"
@
text
@d20 1
d157 1
d159 2
@


1.9
log
@*- mods to "struct dm" --- added dm_type
                           removed dm_open, dm_initWinProc
*- added a few macros
@
text
@d28 4
d126 2
@


1.8
log
@mods to 'struct dm'
@
text
@d8 1
a8 1
#define NOISE 32		/* Size of dead spot on knob */
d24 3
a26 3
#define DM_TYPE_PEX	4
#define DM_TYPE_OGL	5
#define DM_TYPE_GLX	6
a31 1
#define IS_DM_TYPE_PEX(_t) ((_t) == DM_TYPE_PEX)
d34 1
d50 2
a51 2
#define DM_COLOR_HI	(short)230
#define DM_COLOR_LOW	(short)0
d72 8
a79 8
#define DM_SET_COLOR(dr,dg,db,sr,sg,sb){\
	(dr) = (sr);\
	(dg) = (sg);\
	(db) = (sb); }
#define DM_SAME_COLOR(dr,dg,db,sr,sg,sb)(\
	(dr) == (sr) &&\
	(dg) == (sg) &&\
	(db) == (sb))
a97 1
  struct dm *(*dm_open)();
d118 1
a127 1
  struct bu_vls dm_initWinProc; /* XXX--Tcl/Tk procedure for initializing the drawing window */
d131 20
@


1.7
log
@changed dm_dname to a bu_vls
@
text
@d4 3
d98 1
a98 1
  int (*dm_open)();
d100 2
a101 2
  int (*dm_drawBegin)();	/* was dmr_prolog */
  int (*dm_drawEnd)();		/* was dmr_epilog */
d104 2
a105 2
  int (*dm_drawString2D)();	/* was dmr_puts */
  int (*dm_drawLine2D)();	/* was dmr_2d_line */
d107 1
a107 1
  int (*dm_drawVList)();	/* was dmr_object */
d119 6
a125 1
  genptr_t dm_vars;		/* pointer to display manager dependant variables */
d127 3
a129 3
  struct bu_vls dm_initWinProc; /* Tcl/Tk procedure for initializing the drawing window */
  struct bu_vls dm_dname;	/* Display name */
  fastf_t *dm_vp;		/* XXX--ogl still depends on this--Viewscale pointer */
@


1.6
log
@mods to struct dm
@
text
@d120 2
a121 2
  char dm_dname[80];		/* Display name */
  fastf_t *dm_vp;		/* XXX--ogl still depends on this--XXX Viewscale pointer */
@


1.5
log
@-new names
-new fuctions: dm_drawVertex2D, dm_setColor, dm_setLineAttr
-functions removed: dmr_update, dmr_statechange, dmr_light,
	dmr_viewchange, dmr_cmd, dmr_input, dmr_colorchange
@
text
@a94 1
  int (*dm_init)();
d119 1
d124 1
@


1.4
log
@- declare functions from knob.c
- a few more macros, i.e. IS_DM_TYPE_GLX()
@
text
@d47 30
a76 5
#define DM_BLACK	0
#define DM_RED		1
#define DM_BLUE		2
#define DM_YELLOW	3
#define DM_WHITE	4
d95 27
a121 31
  int   (*dmr_init)();         /* Called first */
  int	(*dmr_open)();
  void	(*dmr_close)();
  void	(*dmr_input)();
  void	(*dmr_prolog)();
  void	(*dmr_epilog)();
  void	(*dmr_normal)();
  void	(*dmr_newrot)();
  void	(*dmr_update)();
  void	(*dmr_puts)();
  void	(*dmr_2d_line)();
  void	(*dmr_light)();
  int	(*dmr_object)();	/* Invoke an object subroutine */
  unsigned (*dmr_cvtvecs)();	/* returns size requirement of subr */
  unsigned (*dmr_load)();	/* DMA the subr to device */
  void	(*dmr_statechange)();	/* application provided -- called on editor state change */
  void	(*dmr_viewchange)();	/* add/drop solids from view */
  void	(*dmr_colorchange)();	/* called when color table changes */
  void	(*dmr_window)();	/* Change window boundry */
  void	(*dmr_debug)();		/* Set DM debug level */
  int	(*dmr_cmd)();		/* application provided dm-specific command handler */
  int	(*dmr_eventhandler)();	/* application provided dm-specific event handler */
  int	dmr_displaylist;	/* !0 means device has displaylist */
  double	dmr_bound;		/* zoom-in limit */
  char	*dmr_name;		/* short name of device */
  char	*dmr_lname;		/* long name of device */
  struct mem_map *dmr_map;	/* displaylist mem map */
  genptr_t dmr_vars;		/* pointer to display manager dependant variables */
  struct bu_vls dmr_pathName;	/* full Tcl/Tk name of drawing window */
  char	dmr_dname[80];		/* Display name */
  fastf_t *dmr_vp;              /* XXX--ogl still depends on this--XXX Viewscale pointer */
d130 1
a130 1
extern Tcl_Interp *interp;
@


1.3
log
@*** empty log message ***
@
text
@d4 4
d25 8
d103 3
@


1.2
log
@added members to "struct dm"
@
text
@d4 30
a80 1
  int	dmr_releasedisplay;	/* !0 release for other programs */
d88 1
a88 3
  fastf_t *dmr_vp;              /* Viewscale pointer */
  void (*dmr_cfunc)();          /* XXX application provided color function */
  struct solid *dmr_hp;         /* XXX - Temporary */
@


1.1
log
@Initial revision
@
text
@d43 1
a43 1
  void	(*dmr_statechange)();	/* called on editor state change */
d59 3
@
