head	11.26;
access;
symbols
	ansi-20040405-merged:11.22.4.1
	postmerge-20040405-ansi:11.25
	premerge-20040404-ansi:11.25
	postmerge-autoconf:11.25
	autoconf-freeze:11.23.6.3
	premerge-autoconf:11.25
	ansi-20040316-freeze:11.22
	postmerge-20040315-windows:11.25
	premerge-20040315-windows:11.25
	windows-20040315-freeze:11.22.6.1
	autoconf-20031203:11.23.6.1
	autoconf-20031202:11.23
	autoconf-branch:11.23.0.6
	phong-branch:11.23.0.4
	photonmap-branch:11.23.0.2
	rel-6-1-DP:11.22
	windows-branch:11.22.0.6
	rel-6-0-2:11.22
	ansi-branch:11.22.0.4
	rel-6-0-1-branch:11.22.0.2
	hartley-6-0-post:11.22
	hartley-6-0-pre:11.22
	rel-6-0-1:11.22
	rel-6-0:11.20
	rel-5-4:11.8
	offsite-5-3-pre:11.18
	rel-5-3:11.8
	rel-5-2:11.8
	rel-5-1-branch:11.8.0.2
	rel-5-1:11.8
	rel-5-0:11.5
	rel-5-0-beta:11.5
	rel-4-5:11.5
	ctj-4-5-post:11.5
	ctj-4-5-pre:11.5
	rel-4-4:11.1
	rel-4-0:10.1
	rel-3-5:9.1
	rel-3-0:8.1;
locks; strict;
comment	@ * @;


11.26
date	2004.05.24.04.11.54;	author morrison;	state dead;
branches;
next	11.25;

11.25
date	2004.02.02.17.39.03;	author morrison;	state Exp;
branches;
next	11.24;

11.24
date	2003.10.29.17.58.35;	author jra;	state Exp;
branches;
next	11.23;

11.23
date	2003.01.31.13.32.10;	author jra;	state Exp;
branches
	11.23.6.1;
next	11.22;

11.22
date	2002.06.20.19.39.20;	author jra;	state Exp;
branches
	11.22.4.1
	11.22.6.1;
next	11.21;

11.21
date	2002.05.17.12.49.11;	author morrison;	state Exp;
branches;
next	11.20;

11.20
date	2001.08.02.17.45.46;	author jra;	state Exp;
branches;
next	11.19;

11.19
date	2001.04.05.19.35.09;	author morrison;	state Exp;
branches;
next	11.18;

11.18
date	2000.08.24.02.40.23;	author mike;	state Exp;
branches;
next	11.17;

11.17
date	2000.08.24.00.36.12;	author mike;	state Exp;
branches;
next	11.16;

11.16
date	2000.08.10.04.19.48;	author mike;	state Exp;
branches;
next	11.15;

11.15
date	2000.07.26.17.17.56;	author mike;	state Exp;
branches;
next	11.14;

11.14
date	2000.07.25.22.40.48;	author mike;	state Exp;
branches;
next	11.13;

11.13
date	2000.07.24.22.22.11;	author mike;	state Exp;
branches;
next	11.12;

11.12
date	2000.07.24.19.27.30;	author mike;	state Exp;
branches;
next	11.11;

11.11
date	2000.07.12.21.58.03;	author mike;	state Exp;
branches;
next	11.10;

11.10
date	2000.07.12.03.17.04;	author mike;	state Exp;
branches;
next	11.9;

11.9
date	2000.07.08.04.01.49;	author mike;	state Exp;
branches;
next	11.8;

11.8
date	2000.01.07.21.55.12;	author mike;	state Exp;
branches;
next	11.7;

11.7
date	2000.01.07.19.46.51;	author mike;	state Exp;
branches;
next	11.6;

11.6
date	99.12.07.01.11.51;	author mike;	state Exp;
branches;
next	11.5;

11.5
date	96.12.04.03.47.58;	author mike;	state Exp;
branches;
next	11.4;

11.4
date	96.08.31.11.02.26;	author mike;	state Exp;
branches;
next	11.3;

11.3
date	95.12.01.05.17.58;	author mike;	state Exp;
branches;
next	11.2;

11.2
date	95.07.28.18.57.44;	author jra;	state Exp;
branches;
next	11.1;

11.1
date	95.01.04.09.48.54;	author mike;	state Rel4_4;
branches;
next	10.6;

10.6
date	94.10.21.19.53.54;	author mike;	state Exp;
branches;
next	10.5;

10.5
date	94.10.21.19.45.29;	author mike;	state Exp;
branches;
next	10.4;

10.4
date	94.10.19.21.17.51;	author mike;	state Exp;
branches;
next	10.3;

10.3
date	93.07.20.15.15.31;	author mike;	state Exp;
branches;
next	10.2;

10.2
date	93.04.01.03.34.13;	author mike;	state Exp;
branches;
next	10.1;

10.1
date	91.10.12.06.35.44;	author mike;	state Rel4_0;
branches;
next	9.15;

9.15
date	91.06.26.15.47.29;	author mike;	state Exp;
branches;
next	9.14;

9.14
date	91.06.23.00.10.33;	author mike;	state Exp;
branches;
next	9.13;

9.13
date	91.06.14.09.55.38;	author stay;	state Exp;
branches;
next	9.12;

9.12
date	91.06.13.02.45.36;	author mike;	state Exp;
branches;
next	9.11;

9.11
date	91.06.13.01.39.57;	author mike;	state Exp;
branches;
next	9.10;

9.10
date	91.02.08.22.46.09;	author mike;	state Exp;
branches;
next	9.9;

9.9
date	91.01.03.23.33.53;	author cjohnson;	state Exp;
branches;
next	9.8;

9.8
date	90.11.01.04.55.02;	author mike;	state Exp;
branches;
next	9.7;

9.7
date	90.10.26.23.57.37;	author sue;	state Exp;
branches;
next	9.6;

9.6
date	90.10.16.11.18.01;	author mike;	state Exp;
branches;
next	9.5;

9.5
date	90.10.11.02.19.45;	author mike;	state Exp;
branches;
next	9.4;

9.4
date	90.03.05.20.33.36;	author mike;	state Exp;
branches;
next	9.3;

9.3
date	90.02.08.01.49.13;	author mike;	state Exp;
branches;
next	9.2;

9.2
date	89.11.03.02.30.46;	author mike;	state Exp;
branches;
next	9.1;

9.1
date	89.05.19.05.44.45;	author mike;	state Rel3_5;
branches;
next	8.2;

8.2
date	89.01.19.19.48.50;	author mike;	state Exp;
branches;
next	8.1;

8.1
date	88.10.05.00.24.43;	author mike;	state Rel3_0;
branches;
next	1.2;

1.2
date	88.09.10.00.00.00;	author phil;	state Exp;
branches;
next	1.1;

1.1
date	87.12.24.02.02.22;	author mike;	state Exp;
branches;
next	;

11.22.4.1
date	2004.03.17.21.16.16;	author morrison;	state Exp;
branches;
next	;

11.22.6.1
date	2004.03.11.23.40.48;	author morrison;	state Exp;
branches;
next	;

11.23.6.1
date	2003.12.03.16.24.05;	author erikg;	state Exp;
branches;
next	11.23.6.2;

11.23.6.2
date	2004.02.12.18.32.36;	author erikg;	state Exp;
branches;
next	11.23.6.3;

11.23.6.3
date	2004.03.15.14.06.12;	author erikg;	state Exp;
branches;
next	;


desc
@Header for libwdb
@


11.26
log
@moved/renamed from top-level h/ to top-level include/
@
text
@/*
 *			W D B . H
 *
 *  Interface structures and routines for libwdb
 *
 *  Note -
 *	Rather than using a stdio (FILE *),
 *	we now use a (struct rt_wdb *) parameter.
 *	Rather than calling fopen(), call wdb_fopen();
 *
 *  Author -
 *	Michael John Muuss
 *  
 *  Source -
 *	SECAD/VLD Computing Consortium, Bldg 394
 *	The U. S. Army Ballistic Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005
 *  
 *  Copyright Notice -
 *	This software is Copyright (C) 1988-2004 by the United States Army.
 *	All rights reserved.
 *
 *  Include Sequencing -
 *	#include <stdio.h>	/_* For FILE * *_/
 *	#include <math.h>
 *	#include "machine.h"	/_* For fastf_t definition on this machine *_/
 *	#include "bu.h"
 *	#include "vmath.h"	/_* For vect_t definition *_/
 *	#include "nmg.h"	/_* OPTIONAL, precedes wdb.h when used *_/
 *	#include "raytrace.h"	/_* OPTIONAL, precedes wdb.h when used *_/
 *	#include "nurb.h"	/_* OPTIONAL, precedes wdb.h when used *_/
 *	#include "rtgeom.h"
 *	#include "wdb.h"
 *
 *  Libraries Used -
 *	LIBWDB LIBRT LIBRT_LIBES -lm -lc
 *
 *  $Header: /n/xoff/cvs/brlcad/h/wdb.h,v 11.25 2004/02/02 17:39:03 morrison Exp $
 */
#ifndef SEEN_BU_H
# include "bu.h"
#endif

#ifndef SEEN_BN_H
# include "bn.h"
#endif

#ifndef RAYTRACE_H
# include "raytrace.h"
#endif

#ifndef SEEN_RTGEOM_H
# include "rtgeom.h"
#endif

#ifndef WDB_H
#define WDB_H seen

#ifdef __cplusplus
extern "C" {
#endif

/*
 *  Macros for providing function prototypes, regardless of whether
 *  the compiler understands them or not.
 *  It is vital that the argument list given for "args" be enclosed
 *  in parens.
 */
#if __STDC__ || USE_PROTOTYPES
#	define	WDB_EXTERN(type_and_name,args)	extern type_and_name args
#	define	WDB_ARGS(args)			args
#else
#	define	WDB_EXTERN(type_and_name,args)	extern type_and_name()
#	define	WDB_ARGS(args)			()
#endif

/*
 *  In-memory form of database combinations
 */
struct wmember  {
	struct bu_list	l;
	int		wm_op;		/* Boolean operation */
	mat_t		wm_mat;		/* XXX Should be matp_t !!! */
	char		*wm_name;
};
#define WMEMBER_NULL	((struct wmember *)0)
#define WMEMBER_MAGIC	0x43128912
#define WDB_CK_WMEMBER(_p)	BU_CKMAG(_p, WMEMBER_MAGIC, "wmember" );

/*
 *  Definitions for pipe (wire) segments
 * XXX Why isn't this in h/rtgeom.h?
 */

struct wdb_pipept {
	struct bu_list	l;		/* doubly linked list support */
	point_t		pp_coord;	/* "control" point for pipe solid */
	fastf_t		pp_id;		/* inner diam, <=0 if solid (wire) */
	fastf_t		pp_od;		/* pipe outer diam */
	fastf_t		pp_bendradius;	/* bend radius to use for a bend at this point */
};

#define WDB_PIPESEG_NULL	((struct wdb_pipeseg *)0)
#define WDB_PIPESEG_MAGIC	0x9723ffef


WDB_EXTERN(int mk_id, (struct rt_wdb *fp, const char *title) );
WDB_EXTERN(int mk_id_units, (struct rt_wdb *fp, const char *title, const char *units) );
int mk_id_editunits(
	struct rt_wdb *fp,
	const char *title,
	double local2mm );

/*
 *  Solid conversion routines
 */
/* wdb.c */
WDB_EXTERN(int mk_half, (struct rt_wdb *fp, const char *name, const vect_t norm, double d) );
int mk_grip( 
	struct rt_wdb *wdbp,
	const char *name,
	const point_t center,
	const vect_t normal,
	const fastf_t magnitude );
WDB_EXTERN(int mk_rpp, (struct rt_wdb *fp, const char *name, const point_t min,
			const point_t max) );
WDB_EXTERN(int mk_wedge, (struct rt_wdb *fp, const char *name, const point_t vert,
			const vect_t xdirv, const vect_t zdirv,
			fastf_t xlen, fastf_t ylen, fastf_t zlen,
			fastf_t x_top_len) );
WDB_EXTERN(int mk_arb4, (struct rt_wdb *fp, const char *name, const fastf_t *pts4) );
WDB_EXTERN(int mk_arb8, (struct rt_wdb *fp, const char *name, const fastf_t *pts8) );
WDB_EXTERN(int mk_sph, (struct rt_wdb *fp, const char *name, const point_t center,
			fastf_t radius) );
WDB_EXTERN(int mk_ell, (struct rt_wdb *fp, const char *name, const point_t center,
			const vect_t a, const vect_t b, const vect_t c) );
WDB_EXTERN(int mk_tor, (struct rt_wdb *fp, const char *name, const point_t center,
			const vect_t inorm, double r1, double r2) );
WDB_EXTERN(int mk_rcc, (struct rt_wdb *fp, const char *name, const point_t base,
			const vect_t height, fastf_t radius) );
WDB_EXTERN(int mk_tgc, (struct rt_wdb *fp, const char *name, const point_t base,
			const vect_t height, const vect_t a, const vect_t b,
			const vect_t c, const vect_t d) );
WDB_EXTERN(int mk_cone, (struct rt_wdb *fp, const char *name, const point_t base,
			const vect_t dirv, fastf_t height, fastf_t rad1,
			fastf_t rad2) );
#define mk_trc(wrong)	+++error_obsolete_libwdb_routine+++	/* This routine no longer exists */
WDB_EXTERN(int mk_trc_h, (struct rt_wdb *fp, const char *name, const point_t base,
			const vect_t height, fastf_t radbase, fastf_t radtop) );
WDB_EXTERN(int mk_trc_top, (struct rt_wdb *fp, const char *name, const point_t ibase,
			const point_t itop, fastf_t radbase, fastf_t radtop) );
int mk_rpc(
	struct rt_wdb *wdbp,
	const char *name,
	const point_t vert,
	const vect_t height,
	const vect_t breadth,
	double half_w );
int mk_rhc(
	struct rt_wdb *wdbp,
	const char *name,
	const point_t vert,
	const vect_t height,
	const vect_t breadth,
	fastf_t	half_w,
	fastf_t asymp );
int mk_epa(
	struct rt_wdb *wdbp,
	const char *name,
	const point_t vert,
	const vect_t height,
	const vect_t breadth,
	fastf_t r1,
	fastf_t r2 );
int mk_ehy(
	struct rt_wdb *wdbp,
	const char *name,
	const point_t vert,
	const vect_t height,
	const vect_t breadth,
	fastf_t r1,
	fastf_t r2,
	fastf_t c );
int mk_eto(
	struct rt_wdb *wdbp,
	const char *name,
	const point_t vert,
	const vect_t norm,
	const vect_t smajor,
	fastf_t rrot,
	fastf_t sminor );

WDB_EXTERN(int mk_arbn, (struct rt_wdb *fp, const char *name, int neqn, plane_t eqn[]) );
WDB_EXTERN(int mk_ars, (struct rt_wdb *fp, const char *name, int ncurves, int pts_per_curve,
			fastf_t	*curves[]) );

#define mk_bsolid(fp,name,nsurf,res)	+++error_obsolete_libwdb_routine+++
#define mk_bsurf(fp,srf)		+++error_obsolete_libwdb_routine+++

/* bot.c */
int
mk_bot(
	struct rt_wdb *fp,
	const char *name,
	unsigned char	mode,
	unsigned char	orientation,
	unsigned char	error_mode,	/* may be used to indicate error handling (ignored for now) */
	int		num_vertices,
	int		num_faces,
	fastf_t		*vertices,	/* array of floats for vertices [num_vertices*3] */
	int		*faces,		/* array of ints for faces [num_faces*3] */
	fastf_t		*thickness,	/* array of plate mode thicknesses (corresponds to array of faces)
					 * NULL for modes RT_BOT_SURFACE and RT_BOT_SOLID.
					 */
	struct bu_bitv	*face_mode );	/* a flag for each face indicating thickness is appended to hit point,
					 * otherwise thickness is centered about hit point
					 */
int
mk_bot_w_normals(
	struct rt_wdb *fp,
	const char *name,
	unsigned char	mode,
	unsigned char	orientation,
	unsigned char	flags,
	int		num_vertices,
	int		num_faces,
	fastf_t		*vertices,	/* array of floats for vertices [num_vertices*3] */
	int		*faces,		/* array of ints for faces [num_faces*3] */
	fastf_t		*thickness,	/* array of plate mode thicknesses (corresponds to array of faces)
					 * NULL for modes RT_BOT_SURFACE and RT_BOT_SOLID.
					 */
	struct bu_bitv	*face_mode,	/* a flag for each face indicating thickness is appended to hit point,
					 * otherwise thickness is centered about hit point
					 */
	int		num_normals,	/* number of unit normals in normals array */
	fastf_t		*normals,	/* array of floats for normals [num_normals*3] */
	int		*face_normals );	/* array of ints (indices into normals array), must have 3*num_faces entries */


/* nurb.c */
int mk_bspline( struct rt_wdb *wdbp, const char *name, struct face_g_snurb **surfs );

/* nmg.c */
int mk_nmg( struct rt_wdb *filep, const char *name, struct model *m );
int mk_bot_from_nmg( struct rt_wdb *ofp, const char *name, struct shell *s );

#define write_shell_as_polysolid(ofp,name,s)	mk_bot_from_nmg(ofp,name,s)

/* skt.c */
int mk_sketch(
	struct rt_wdb *fp,
	const char *name,
	struct rt_sketch_internal *skt );

/* extr.c */
int mk_extrusion(
	struct rt_wdb *fp,
	const char *name,
	const char *sketch_name,
	const point_t V,
	const vect_t h,
	const vect_t u_vec,
	const vect_t v_vec,
	int keypoint );

/* cline.c */
int mk_cline(
	struct rt_wdb *fp,
	const char *name,
	const point_t V,
	const vect_t height,
	fastf_t radius,
	fastf_t thickness );

/* pipe.c */
WDB_EXTERN(int mk_particle, (struct rt_wdb *fp, const char *name, point_t vertex,
			vect_t height, double vradius, double hradius) );
WDB_EXTERN(int mk_pipe, (struct rt_wdb *fp, const char *name, struct bu_list *headp) );
void mk_pipe_free( struct bu_list *headp );
void mk_add_pipe_pt(
	struct bu_list *headp,
	const point_t coord,
	double od,
	double id,
	double bendradius );
void mk_pipe_init( struct bu_list *headp );

/* strsol.c */
WDB_EXTERN(int mk_dsp, (struct rt_wdb *fp, const char *name, const char *file,
			int xdim, int ydim, const matp_t mat));
WDB_EXTERN(int mk_ebm, (struct rt_wdb *fp, const char *name, const char *file,
			int xdim, int ydim, fastf_t tallness, const matp_t mat));
WDB_EXTERN(int mk_vol, (struct rt_wdb *fp, const char *name, const char *file,
			int xdim, int ydim, int zdim, int lo, int hi,
			const vect_t cellsize, const matp_t mat));
#define mk_strsol(fp,name,solid,arg)	+++error_obsolete_libwdb_routine+++
WDB_EXTERN(int mk_submodel, (struct rt_wdb *fp, const char *name, const char *file,
			const char *treetop, int meth));

/* binary_obj.c */
WDB_EXTERN(int mk_binunif, (struct rt_wdb *wdbp, const char *obj_name,
		    const char *file_name, unsigned int minor_type));

/*
 *  The polysolid has been replaced by the BoT.
 *  Automatic conversion is provided by rt_pg_to_bot()
 */
#define mk_polysolid(fp,name)	+++error_obsolete_libwdb_routine+++
#define mk_poly(fp,npts,verts,norms)	+++error_obsolete_libwdb_routine+++
#define mk_fpoly(fp,npts,verts)	+++error_obsolete_libwdb_routine+++

/* mater.c */
int mk_write_color_table( struct rt_wdb *ofp );


/* These routines have been replaced by the construction routines below */
#define mk_rcomb(fp,name,len,reg,shadername,mparam,rgb,id,air,mater,los,flag)	+++error_obsolete_libwdb_routine+++
#define mk_fcomb(fp,name,len,reg)				+++error_obsolete_libwdb_routine+++
#define mk_memb(fp,name,map,op)					+++error_obsolete_libwdb_routine+++

/*
 *  Combination (region&group) construction routines
 *
 *  First you build a list of nodes with mk_addmember,
 *  then you output the combination.
 */
struct wmember *mk_addmember(
	const char	*name,
	struct bu_list	*headp,
	mat_t mat,
	int		op);

#define mk_lcomb(_fp,_name,_headp,_rf,_shadername,_shaderargs,_rgb,_inh)	\
	mk_comb(_fp,_name,&((_headp)->l),_rf,_shadername,_shaderargs,\
		_rgb,0,0,0,0,_inh,0,0)

/* mk_lrcomb() would not append, and did not have GIFT semantics */
/* mk_lrcomb() had (struct wmember *) head, need (struct bu_list *) */
#define mk_lrcomb(fp, name, _headp, region_flag, shadername, shaderargs, rgb, id, air, material, los, inherit_flag )	\
	mk_comb( fp, name, &((_headp)->l), region_flag, shadername, shaderargs, \
		rgb, id, air, material, los, inherit_flag, 0, 0 )

int mk_comb(
	struct rt_wdb		*wdbp,
	const char		*combname,
	struct bu_list		*headp,		/* Made by mk_addmember() */
	int			region_kind,	/* 1 => region.  'P' and 'V' for FASTGEN */
	const char		*shadername,	/* shader name, or NULL */
	const char		*shaderargs,	/* shader args, or NULL */
	const unsigned char	*rgb,		/* NULL => no color */
	int			id,		/* region_id */
	int			air,		/* aircode */
	int			material,	/* GIFTmater */
	int			los,
	int			inherit,
	int			append_ok,	/* 0 = obj must not exit */
	int			gift_semantics);	/* 0 = pure, 1 = gift */

/* Convenience routines for quickly making combinations */
int mk_comb1( struct rt_wdb *fp,
	const char *combname,
	const char *membname,
	int regflag );
int
mk_region1(
	struct rt_wdb *fp,
	const char *combname,
	const char *membname,
	const char *shadername,
	const char *shaderargs,
	const unsigned char *rgb );

#define mk_fastgen_region(fp,name,headp,mode,shadername,shaderargs,rgb,id,air,material,los,inherit)	\
	mk_comb(fp,name,headp,mode,shadername,shaderargs,rgb,id,air,\
		material,los,inherit,0,0)


/* Values for wm_op.  These must track db.h */
#define WMOP_INTERSECT	'+'
#define WMOP_SUBTRACT	'-'
#define WMOP_UNION	'u'

/* Convienient definitions */
#define mk_lfcomb(fp,name,headp,region)		mk_lcomb( fp, name, headp, \
	region, (char *)0, (char *)0, (unsigned char *)0, 0 );

/*
 *  Routines to establish conversion factors
 */
WDB_EXTERN(int mk_conversion, (char *units_string) );
WDB_EXTERN(int mk_set_conversion, (double val) );

/*
 * This internal variable should not be directly modified;
 * call mk_conversion() or mk_set_conversion() instead.
 */
extern double	mk_conv2mm;		/* Conversion factor to mm */

/*
 *  Set this variable to either 4 or 5, depending on which version of
 *  the database you wish to write. 
 */
extern int	mk_version;		/* Which version database to write */

/*
 *  Internal routines
 */
void mk_freemembers( struct bu_list *headp );

#define mk_fwrite_internal(fp,name,ip)		+++error_obsolete_libwdb_routine+++
#define mk_export_fwrite(wdbp,name,gp,id)	wdb_export(wdbp,name,gp,id,mk_conv2mm)

/*
 *	Dynamic geometry routines
 */
WDB_EXTERN( int make_hole, ( struct rt_wdb *wdbp,
			     point_t hole_start,
			     vect_t hole_depth,
			     fastf_t hole_radius,
			     int num_objs,
			     struct directory **dp ) );

WDB_EXTERN( int make_hole_in_prepped_regions, ( struct rt_wdb *wdbp,
						struct rt_i *rtip,
						point_t hole_start,
						vect_t hole_depth,
						fastf_t radius,
						struct bu_ptbl *regions ) );


#ifdef __cplusplus
}
#endif

#endif /* WDB_H */
@


11.25
log
@update copyright to include span through 2003
@
text
@d38 1
a38 1
 *  $Header: /c/CVS/brlcad/h/wdb.h,v 11.24 2003/10/29 17:58:35 jra Exp $
@


11.24
log
@added make_hole() and make_hole_in_prepped_regions()
@
text
@d20 1
a20 1
 *	This software is Copyright (C) 1988 by the United States Army.
d38 1
a38 1
 *  $Header: /c/CVS/brlcad/h/wdb.h,v 11.23 2003/01/31 13:32:10 jra Exp $
@


11.23
log
@Added mk_bot_w_normals()
@
text
@d38 1
a38 1
 *  $Header: /c/CVS/brlcad/h/wdb.h,v 11.22 2002/06/20 19:39:20 jra Exp $
d412 18
@


11.23.6.1
log
@updates from HEAD, part 1
@
text
@d38 1
a38 1
 *  $Header: /c/CVS/brlcad/h/wdb.h,v 11.24 2003/10/29 17:58:35 jra Exp $
a411 18

/*
 *	Dynamic geometry routines
 */
WDB_EXTERN( int make_hole, ( struct rt_wdb *wdbp,
			     point_t hole_start,
			     vect_t hole_depth,
			     fastf_t hole_radius,
			     int num_objs,
			     struct directory **dp ) );

WDB_EXTERN( int make_hole_in_prepped_regions, ( struct rt_wdb *wdbp,
						struct rt_i *rtip,
						point_t hole_start,
						vect_t hole_depth,
						fastf_t radius,
						struct bu_ptbl *regions ) );

@


11.23.6.2
log
@merge from HEAD
@
text
@d20 1
a20 1
 *	This software is Copyright (C) 1988-2004 by the United States Army.
d38 1
a38 1
 *  $Header: /c/CVS/brlcad/h/wdb.h,v 11.25 2004/02/02 17:39:03 morrison Exp $
@


11.23.6.3
log
@merge from head
@
text
@d38 1
a38 1
 *  $Header: /c/CVS/brlcad/h/wdb.h,v 11.23.6.2 2004/02/12 18:32:36 erikg Exp $
@


11.22
log
@Length of member names was limited to 35 characters!!!
@
text
@d38 1
a38 1
 *  $Header: /c/CVS/brlcad/h/wdb.h,v 11.21 2002/05/17 12:49:11 morrison Exp $
d218 22
@


11.22.4.1
log
@sync branch with HEAD
@
text
@d20 1
a20 1
 *	This software is Copyright (C) 1988-2004 by the United States Army.
d38 1
a38 1
 *  $Header$
a217 22
int
mk_bot_w_normals(
	struct rt_wdb *fp,
	const char *name,
	unsigned char	mode,
	unsigned char	orientation,
	unsigned char	flags,
	int		num_vertices,
	int		num_faces,
	fastf_t		*vertices,	/* array of floats for vertices [num_vertices*3] */
	int		*faces,		/* array of ints for faces [num_faces*3] */
	fastf_t		*thickness,	/* array of plate mode thicknesses (corresponds to array of faces)
					 * NULL for modes RT_BOT_SURFACE and RT_BOT_SOLID.
					 */
	struct bu_bitv	*face_mode,	/* a flag for each face indicating thickness is appended to hit point,
					 * otherwise thickness is centered about hit point
					 */
	int		num_normals,	/* number of unit normals in normals array */
	fastf_t		*normals,	/* array of floats for normals [num_normals*3] */
	int		*face_normals );	/* array of ints (indices into normals array), must have 3*num_faces entries */


a389 18

/*
 *	Dynamic geometry routines
 */
WDB_EXTERN( int make_hole, ( struct rt_wdb *wdbp,
			     point_t hole_start,
			     vect_t hole_depth,
			     fastf_t hole_radius,
			     int num_objs,
			     struct directory **dp ) );

WDB_EXTERN( int make_hole_in_prepped_regions, ( struct rt_wdb *wdbp,
						struct rt_i *rtip,
						point_t hole_start,
						vect_t hole_depth,
						fastf_t radius,
						struct bu_ptbl *regions ) );

@


11.22.6.1
log
@sync to HEAD...
@
text
@d20 1
a20 1
 *	This software is Copyright (C) 1988-2004 by the United States Army.
d38 1
a38 1
 *  $Header: /n/cad/c/CVS/brlcad/h/wdb.h,v 11.25 2004/02/02 17:39:03 morrison Exp $
a217 22
int
mk_bot_w_normals(
	struct rt_wdb *fp,
	const char *name,
	unsigned char	mode,
	unsigned char	orientation,
	unsigned char	flags,
	int		num_vertices,
	int		num_faces,
	fastf_t		*vertices,	/* array of floats for vertices [num_vertices*3] */
	int		*faces,		/* array of ints for faces [num_faces*3] */
	fastf_t		*thickness,	/* array of plate mode thicknesses (corresponds to array of faces)
					 * NULL for modes RT_BOT_SURFACE and RT_BOT_SOLID.
					 */
	struct bu_bitv	*face_mode,	/* a flag for each face indicating thickness is appended to hit point,
					 * otherwise thickness is centered about hit point
					 */
	int		num_normals,	/* number of unit normals in normals array */
	fastf_t		*normals,	/* array of floats for normals [num_normals*3] */
	int		*face_normals );	/* array of ints (indices into normals array), must have 3*num_faces entries */


a389 18

/*
 *	Dynamic geometry routines
 */
WDB_EXTERN( int make_hole, ( struct rt_wdb *wdbp,
			     point_t hole_start,
			     vect_t hole_depth,
			     fastf_t hole_radius,
			     int num_objs,
			     struct directory **dp ) );

WDB_EXTERN( int make_hole_in_prepped_regions, ( struct rt_wdb *wdbp,
						struct rt_i *rtip,
						point_t hole_start,
						vect_t hole_depth,
						fastf_t radius,
						struct bu_ptbl *regions ) );

@


11.21
log
@added matrix parameter to mk_addmember()
@
text
@d38 1
a38 1
 *  $Header: /c/CVS/brlcad/h/wdb.h,v 11.20 2001/08/02 17:45:46 jra Exp $
d84 1
a84 1
	char		wm_name[32+3];	/* XXX Should be char* bu_strdup()ed */
@


11.20
log
@Added support for binary objects (just "binunif" so far)
@
text
@d38 1
a38 1
 *  $Header: /c/CVS/brlcad/h/wdb.h,v 11.19 2001/04/05 19:35:09 morrison Exp $
d308 1
@


11.19
log
@updated SIGNED to signed
updated CONST to const
@
text
@d38 1
a38 1
 *  $Header: /c/CVS/brlcad/h/wdb.h,v 11.18 2000/08/24 02:40:23 mike Exp $
d277 4
@


11.18
log
@
New LIBWDB routine mk_comb(), which encompasses all ways of
making a combination, including appending to an existing one,
with GIFT or pure semantics, and support for FASTGEN.
@
text
@d38 1
a38 1
 *  $Header: /c/CVS/brlcad/h/wdb.h,v 11.17 2000/08/24 00:36:12 mike Exp $
d107 2
a108 2
WDB_EXTERN(int mk_id, (struct rt_wdb *fp, CONST char *title) );
WDB_EXTERN(int mk_id_units, (struct rt_wdb *fp, CONST char *title, CONST char *units) );
@


11.17
log
@
Added magic number macro.
Marked bad interface practice with XXX.
@
text
@d38 1
a38 1
 *  $Header: /c/CVS/brlcad/h/wdb.h,v 11.16 2000/08/10 04:19:48 mike Exp $
d92 1
d291 1
a291 2
#define mk_comb(fp,name,len,reg,matname,mparam,rgb,flag)	+++error_obsolete_libwdb_routine+++
#define mk_rcomb(fp,name,len,reg,matname,mparam,rgb,id,air,mater,los,flag)	+++error_obsolete_libwdb_routine+++
d301 30
a330 12
WDB_EXTERN(struct wmember *mk_addmember, (const char *name,
			struct wmember *headp, int op) );

#define mk_lcomb(_fp,_name,_headp,_rf,_matname,_matparm,_rgb,_inh)	\
	mk_lrcomb(_fp,_name,_headp,_rf,_matname,_matparm,_rgb,0,0,0,0,_inh)

WDB_EXTERN(int mk_lrcomb, (struct rt_wdb *fp, const char *name, struct wmember *headp,
			int region_flag,
			const char *matname, const char *matparm,
			const unsigned char *rgb,
			int id, int air, int material, int los,
			int inherit_flag) );
d342 2
a343 2
	const char *matname,
	const char *matparm,
d345 4
a348 14
int
mk_fastgen_region(
	struct rt_wdb *fp,
	const char *name,
	struct wmember *headp,
	char mode,
	const char *matname,
	const char *matparm,
	const unsigned char *rgb,
	int id,
	int air,
	int material,
	int los,
	int inherit );
d381 2
a382 1
WDB_EXTERN(int mk_freemembers, (struct wmember *headp) );
@


11.16
log
@
Fixed name change in comment.
@
text
@d38 1
a38 1
 *  $Header: /c/CVS/brlcad/h/wdb.h,v 11.15 2000/07/26 17:17:56 mike Exp $
d83 2
a84 2
	mat_t		wm_mat;
	char		wm_name[16+3];	/* NAMESIZE */
d88 1
@


11.15
log
@
Improvements in v4->v5 converstion.  Auto conversion of shader strings.
@
text
@d38 1
a38 1
 *  $Header: /c/CVS/brlcad/h/wdb.h,v 11.14 2000/07/25 22:40:48 mike Exp $
d278 1
a278 1
 *  Automatic conversion is provided by rt_pg_bot()
@


11.14
log
@
libwdb additions for writing NMGs at BoTs.
Initial support for writing region-id-based-color table.
@
text
@d38 1
a38 1
 *  $Header: /c/CVS/brlcad/h/wdb.h,v 11.13 2000/07/24 22:22:11 mike Exp $
d302 4
a305 5
WDB_EXTERN(int mk_lcomb, (struct rt_wdb *fp, const char *name, struct wmember *headp,
			int region_flag,
			const char *matname, const char *matparm,
			const unsigned char *rgb,
			int inherit_flag) );
@


11.13
log
@
More new-libwdb-related cleanups
@
text
@d38 1
a38 1
 *  $Header: /c/CVS/brlcad/h/wdb.h,v 11.12 2000/07/24 19:27:30 mike Exp $
d145 1
a145 1
#define mk_trc(wrong)	+++error+++	/* This routine no longer exists */
d195 2
a196 2
#define mk_bsolid(fp,name,nsurf,res)	+++error+++
#define mk_bsurf(fp,srf)		+++error+++
d221 3
d272 1
a272 1
#define mk_strsol(fp,name,solid,arg)	+++error+++
d280 7
a286 3
#define mk_polysolid(fp,name)	+++error+++
#define mk_poly(fp,npts,verts,norms)	+++error+++
#define mk_fpoly(fp,npts,verts)	+++error+++
d289 4
a292 4
#define mk_comb(fp,name,len,reg,matname,mparam,rgb,flag)	+++error+++
#define mk_rcomb(fp,name,len,reg,matname,mparam,rgb,id,air,mater,los,flag)	+++error+++
#define mk_fcomb(fp,name,len,reg)				+++error+++
#define mk_memb(fp,name,map,op)					+++error+++
d374 1
a374 1
#define mk_fwrite_internal(fp,name,ip)		+++error+++
@


11.12
log
@
Changed mged/typin.c to start using libwdb interfaces.
Which means mged/ged.c now also opens a libwdb interface.
@
text
@d38 1
a38 1
 *  $Header: /c/CVS/brlcad/h/wdb.h,v 11.11 2000/07/12 21:58:03 mike Exp $
d251 2
a252 2
WDB_EXTERN(int mk_pipe, (struct rt_wdb *fp, const char *name, struct wdb_pipept *headp) );
void mk_pipe_free( struct wdb_pipept *headp );
d254 1
a254 1
	struct wdb_pipept *headp,
d259 1
a259 4
void mk_pipe_init( struct wdb_pipept *head );

/* g_pipe.c */
int rt_pipe_ck( const struct wdb_pipept *headp );
@


11.11
log
@
New version of LIBWDB which takes a (struct rt_wdb *) rather than a
(FILE *) as the first parameter.
@
text
@d38 1
a38 1
 *  $Header: /c/CVS/brlcad/h/wdb.h,v 11.10 2000/07/12 03:17:04 mike Exp $
d116 1
a116 1
WDB_EXTERN(int mk_half, (struct rt_wdb *fp, char *name, CONST vect_t norm, double d) );
d123 4
a126 4
WDB_EXTERN(int mk_rpp, (struct rt_wdb *fp, char *name, CONST point_t min,
			CONST point_t max) );
WDB_EXTERN(int mk_wedge, (struct rt_wdb *fp, char *name, CONST point_t vert,
			CONST vect_t xdirv, CONST vect_t zdirv,
d129 3
a131 3
WDB_EXTERN(int mk_arb4, (struct rt_wdb *fp, char *name, CONST fastf_t *pts4) );
WDB_EXTERN(int mk_arb8, (struct rt_wdb *fp, char *name, CONST fastf_t *pts8) );
WDB_EXTERN(int mk_sph, (struct rt_wdb *fp, char *name, CONST point_t center,
d133 11
a143 11
WDB_EXTERN(int mk_ell, (struct rt_wdb *fp, char *name, CONST point_t center,
			CONST vect_t a, CONST vect_t b, CONST vect_t c) );
WDB_EXTERN(int mk_tor, (struct rt_wdb *fp, char *name, CONST point_t center,
			CONST vect_t inorm, double r1, double r2) );
WDB_EXTERN(int mk_rcc, (struct rt_wdb *fp, char *name, CONST point_t base,
			CONST vect_t height, fastf_t radius) );
WDB_EXTERN(int mk_tgc, (struct rt_wdb *fp, char *name, CONST point_t base,
			CONST vect_t height, CONST vect_t a, CONST vect_t b,
			CONST vect_t c, CONST vect_t d) );
WDB_EXTERN(int mk_cone, (struct rt_wdb *fp, char *name, CONST point_t base,
			CONST vect_t dirv, fastf_t height, fastf_t rad1,
d146 4
a149 4
WDB_EXTERN(int mk_trc_h, (struct rt_wdb *fp, char *name, CONST point_t base,
			CONST vect_t height, fastf_t radbase, fastf_t radtop) );
WDB_EXTERN(int mk_trc_top, (struct rt_wdb *fp, char *name, CONST point_t ibase,
			CONST point_t itop, fastf_t radbase, fastf_t radtop) );
d191 2
a192 2
WDB_EXTERN(int mk_arbn, (struct rt_wdb *fp, char *name, int neqn, plane_t eqn[]) );
WDB_EXTERN(int mk_ars, (struct rt_wdb *fp, char *name, int ncurves, int pts_per_curve,
d249 1
a249 1
WDB_EXTERN(int mk_particle, (struct rt_wdb *fp, char *name, point_t vertex,
d251 1
a251 1
WDB_EXTERN(int mk_pipe, (struct rt_wdb *fp, char *name, struct wdb_pipept *headp) );
d261 3
d265 5
a269 5
WDB_EXTERN(int mk_dsp, (struct rt_wdb *fp, CONST char *name, CONST char *file,
			int xdim, int ydim, CONST matp_t mat));
WDB_EXTERN(int mk_ebm, (struct rt_wdb *fp, CONST char *name, CONST char *file,
			int xdim, int ydim, fastf_t tallness, CONST matp_t mat));
WDB_EXTERN(int mk_vol, (struct rt_wdb *fp, CONST char *name, CONST char *file,
d271 1
a271 1
			CONST vect_t cellsize, CONST matp_t mat));
d273 2
a274 2
WDB_EXTERN(int mk_submodel, (struct rt_wdb *fp, CONST char *name, CONST char *file,
			CONST char *treetop, int meth));
d296 1
a296 1
WDB_EXTERN(struct wmember *mk_addmember, (CONST char *name,
d298 1
a298 1
WDB_EXTERN(int mk_lcomb, (struct rt_wdb *fp, CONST char *name, struct wmember *headp,
d300 2
a301 2
			CONST char *matname, CONST char *matparm,
			CONST unsigned char *rgb,
d303 1
a303 1
WDB_EXTERN(int mk_lrcomb, (struct rt_wdb *fp, CONST char *name, struct wmember *headp,
d305 2
a306 2
			CONST char *matname, CONST char *matparm,
			CONST unsigned char *rgb,
d312 2
a313 2
	CONST char *combname,
	CONST char *membname,
@


11.10
log
@
Added mk_region1()
@
text
@d6 4
a9 3
 *  Notes -
 *	Any source file that includes this header file must also include
 *	<stdio.h> to obtain the typedef for FILE
d32 1
d38 1
a38 1
 *  $Header: /c/CVS/brlcad/h/wdb.h,v 11.9 2000/07/08 04:01:49 mike Exp $
d48 8
d104 8
d115 9
a123 4
WDB_EXTERN(int mk_id, (FILE *fp, CONST char *title) );
WDB_EXTERN(int mk_id_units, (FILE *fp, CONST char *title, CONST char *units) );
WDB_EXTERN(int mk_half, (FILE *fp, char *name, CONST vect_t norm, double d) );
WDB_EXTERN(int mk_rpp, (FILE *fp, char *name, CONST point_t min,
d125 1
a125 1
WDB_EXTERN(int mk_wedge, (FILE *fp, char *name, CONST point_t vert,
d129 3
a131 3
WDB_EXTERN(int mk_arb4, (FILE *fp, char *name, CONST fastf_t *pts4) );
WDB_EXTERN(int mk_arb8, (FILE *fp, char *name, CONST fastf_t *pts8) );
WDB_EXTERN(int mk_sph, (FILE *fp, char *name, CONST point_t center,
d133 1
a133 1
WDB_EXTERN(int mk_ell, (FILE *fp, char *name, CONST point_t center,
d135 1
a135 1
WDB_EXTERN(int mk_tor, (FILE *fp, char *name, CONST point_t center,
d137 1
a137 1
WDB_EXTERN(int mk_rcc, (FILE *fp, char *name, CONST point_t base,
d139 1
a139 1
WDB_EXTERN(int mk_tgc, (FILE *fp, char *name, CONST point_t base,
d142 1
a142 1
WDB_EXTERN(int mk_cone, (FILE *fp, char *name, CONST point_t base,
d146 1
a146 1
WDB_EXTERN(int mk_trc_h, (FILE *fp, char *name, CONST point_t base,
d148 1
a148 1
WDB_EXTERN(int mk_trc_top, (FILE *fp, char *name, CONST point_t ibase,
d150 40
d191 2
a192 2
WDB_EXTERN(int mk_arbn, (FILE *fp, char *name, int neqn, plane_t eqn[]) );
WDB_EXTERN(int mk_ars, (FILE *fp, char *name, int ncurves, int pts_per_curve,
d194 56
a249 7
WDB_EXTERN(int mk_bsolid, (FILE *fp, char *name, int nsurf, double res) );
#if defined(NMG_H)
WDB_EXTERN(int mk_bsurf, (FILE *fp, struct face_g_snurb *bp) );
#else /* !NMG_H */
WDB_EXTERN(int mk_bsurf, (FILE *fp, genptr_t bp) );
#endif /* NMG_H */
WDB_EXTERN(int mk_particle, (FILE *fp, char *name, point_t vertex,
d251 9
a259 1
WDB_EXTERN(int mk_pipe, (FILE *fp, char *name, struct wdb_pipept *headp) );
d262 1
a262 1
WDB_EXTERN(int mk_dsp, (FILE *fp, CONST char *name, CONST char *file,
d264 1
a264 1
WDB_EXTERN(int mk_ebm, (FILE *fp, CONST char *name, CONST char *file,
d266 1
a266 1
WDB_EXTERN(int mk_vol, (FILE*fp, CONST char *name, CONST char *file,
d269 2
a270 3
WDB_EXTERN(int mk_strsol, (FILE *fp, CONST char *name,
			CONST char *string_solid, CONST char *string_arg));
WDB_EXTERN(int mk_submodel, (FILE *fp, CONST char *name, CONST char *file,
d274 2
a275 2
 *  These routines will be replaced in the next release.
 *  Try not to use them.
d277 9
a285 15
WDB_EXTERN(int mk_polysolid, (FILE *fp, char *name) );
WDB_EXTERN(int mk_poly, (FILE *fp, int npts,
			fastf_t verts[][3], fastf_t norms[][3]) );
WDB_EXTERN(int mk_fpoly, (FILE *fp, int npts, fastf_t verts[][3]) );
WDB_EXTERN(int mk_comb, (FILE *fp, CONST char *name, int len, int region_flag,
			CONST char *matname, CONST char *matparm,
			CONST unsigned char *rgb,
			int inherit_flag) );
WDB_EXTERN(int mk_rcomb, (FILE *fp, CONST char *name, int len, int region_flag,
			CONST char *matname, CONST char *matparm,
			CONST unsigned char *rgb,
			int id, int air, int material, int los,
			int inherit_flag) );
WDB_EXTERN(int mk_fcomb, (FILE *fp, CONST char *name, int len, int region_flag) );
WDB_EXTERN(int mk_memb, (FILE *fp, CONST char *name, CONST mat_t mat, int bool_op) );
d288 4
a291 1
 *  Combination conversion routines
d295 1
a295 1
WDB_EXTERN(int mk_lcomb, (FILE *fp, CONST char *name, struct wmember *headp,
d300 1
a300 1
WDB_EXTERN(int mk_lrcomb, (FILE *fp, CONST char *name, struct wmember *headp,
d307 2
a308 1
int mk_comb1( FILE *fp,
d314 1
a314 1
	FILE *fp,
d320 14
d367 2
a368 2
WDB_EXTERN(int mk_fwrite_internal, (FILE *fp, const char *name, struct rt_db_internal *ip) );
WDB_EXTERN(int mk_export_fwrite, (FILE *fp, CONST char *name, genptr_t gp, int id));
@


11.9
log
@
Added mk_version variable, to indicate what version database to write.
@
text
@d36 1
a36 1
 *  $Header: /c/CVS/brlcad/h/wdb.h,v 11.8 2000/01/07 21:55:12 mike Exp $
d190 14
@


11.8
log
@
Added externs
@
text
@d36 1
a36 1
 *  $Header: /c/CVS/brlcad/h/wdb.h,v 11.7 2000/01/07 19:46:51 mike Exp $
d213 6
d222 1
@


11.7
log
@
mk_export_fwrite() prototype changed
@
text
@d36 1
a36 1
 *  $Header: /c/CVS/brlcad/h/wdb.h,v 11.6 1999/12/07 01:11:51 mike Exp $
d140 13
@


11.6
log
@
Added __cplusplus protection
@
text
@d36 1
a36 1
 *  $Header: /c/CVS/brlcad/h/wdb.h,v 11.5 1996/12/04 03:47:58 mike Exp $
d203 1
a203 1
WDB_EXTERN(int mk_export_fwrite, (FILE *fp, char *name, genptr_t gp, int id));
@


11.5
log
@Auto-include bn.h
@
text
@d36 1
a36 1
 *  $Header: /m/cad/h/RCS/wdb.h,v 11.4 1996/08/31 11:02:26 mike Exp mike $
d48 5
d204 4
@


11.4
log
@bu.h
@
text
@d36 1
a36 1
 *  $Header: /m/cad/h/RCS/wdb.h,v 11.3 1995/12/01 05:17:58 mike Exp mike $
d40 4
@


11.3
log
@Changed to match NURB changes.
@
text
@d26 1
a27 1
 *	#include "rtlist.h"	/_* OPTIONAL, auto-included by wdb.h *_/
d36 1
a36 1
 *  $Header: /m/cad/h/RCS/wdb.h,v 11.2 1995/07/28 18:57:44 jra Exp $
d38 2
a39 3

#ifndef SEEN_RTLIST_H
# include "rtlist.h"
d62 1
a62 1
	struct rt_list	l;
d75 1
a75 1
	struct rt_list	l;		/* doubly linked list support */
@


11.2
log
@Changed definition of pipe solid.
@
text
@d29 1
d36 1
a36 1
 *  $Header: /m/cad/h/RCS/wdb.h,v 11.1 1995/01/04 09:48:54 mike Rel4_4 jra $
d124 3
a126 3
#if defined(NURB_H)
WDB_EXTERN(int mk_bsurf, (FILE *fp, struct snurb *bp) );
#else /* !NURB_H */
d128 1
a128 1
#endif /* NURB_H */
@


11.1
log
@Release_4.4
@
text
@d35 1
a35 1
 *  $Header: /m/cad/h/RCS/wdb.h,v 10.6 94/10/21 19:53:54 mike Exp $
d73 2
a74 1
struct wdb_pipeseg  {
d76 4
a79 5
	point_t		ps_start;	/* start point of centerline */
	point_t		ps_bendcenter;	/* BEND only: center of bend circle */
	fastf_t		ps_id;		/* inner diam, <=0 if solid (wire) */
	fastf_t		ps_od;		/* pipe outer diam */
	int		ps_type;	/* WDB_PIPESEG_TYPE_{END, LINEAR, BEND} */
d81 1
a83 3
#define WDB_PIPESEG_TYPE_END	1	/* End of pipe.  Required, last */
#define WDB_PIPESEG_TYPE_LINEAR	2	/* Linear pipe segment */
#define WDB_PIPESEG_TYPE_BEND	3	/* Bending pipe segment */
d130 1
a130 1
WDB_EXTERN(int mk_pipe, (FILE *fp, char *name, struct wdb_pipeseg *headp) );
@


10.6
log
@Improved arg definitions for combination functions.
@
text
@d35 1
a35 1
 *  $Header: /m/cad/h/RCS/wdb.h,v 10.5 94/10/21 19:45:29 mike Exp Locker: mike $
@


10.5
log
@rgb is unsigned char.
@
text
@d35 1
a35 1
 *  $Header: /m/cad/h/RCS/wdb.h,v 10.4 94/10/19 21:17:51 mike Exp Locker: mike $
d142 3
a144 2
WDB_EXTERN(int mk_comb, (FILE *fp, char *name, int len, int region_flag,
			char *matname, char *matparm, unsigned char *rgb,
d146 3
a148 2
WDB_EXTERN(int mk_rcomb, (FILE *fp, char *name, int len, int region_flag,
			char *matname, char *matparm, unsigned char *rgb,
d151 2
a152 2
WDB_EXTERN(int mk_fcomb, (FILE *fp, char *name, int len, int region_flag) );
WDB_EXTERN(int mk_memb, (FILE *fp, char *name, mat_t mat, int bool_op) );
d157 3
a159 2
WDB_EXTERN(struct wmember *mk_addmember, (char *name, struct wmember *headp, int op) );
WDB_EXTERN(int mk_lcomb, (FILE *fp, char *name, struct wmember *headp,
d161 2
a162 1
			char *matname, char *matparm, unsigned char *rgb,
d164 1
a164 1
WDB_EXTERN(int mk_lrcomb, (FILE *fp, char *name, struct wmember *headp,
d166 2
a167 1
			char *matname, char *matparm, unsigned char *rgb,
@


10.4
log
@Changed from CONST point_t pt[8] to CONST fastf_t *.
      prototype: pointer to array[3] of const double
      argument : pointer to array[3] of double
according to Solaris
@
text
@d35 1
a35 1
 *  $Header: /m/cad/h/RCS/wdb.h,v 10.3 93/07/20 15:15:31 mike Exp Locker: mike $
d143 1
a143 1
			char *matname, char *matparm, char *rgb,
d146 1
a146 1
			char *matname, char *matparm, char *rgb,
d158 1
a158 1
			char *matname, char *matparm, char *rgb,
d162 1
a162 1
			char *matname, char *matparm, char *rgb,
d173 1
a173 1
	region, (char *)0, (char *)0, (char *)0, 0 );
@


10.3
log
@Eliminated nested commenting oddity
@
text
@d35 1
a35 1
 *  $Header: /m/cad/h/RCS/wdb.h,v 10.2 93/04/01 03:34:13 mike Exp Locker: mike $
d99 2
a100 2
WDB_EXTERN(int mk_arb4, (FILE *fp, char *name, CONST point_t pts[4]) );
WDB_EXTERN(int mk_arb8, (FILE *fp, char *name, CONST point_t pts[8]) );
d153 1
a153 1
   *  Combination conversion routines
@


10.2
log
@Added #include sequencing
@
text
@d23 1
a23 1
 *	#include <stdio.h>	/* For FILE * *_/
d25 5
a29 5
 *	#include "machine.h"	/* For fastf_t definition on this machine *_/
 *	#include "vmath.h"	/* For vect_t definition *_/
 *	#include "rtlist.h"	/* OPTIONAL, auto-included by wdb.h *_/
 *	#include "nmg.h"	/* OPTIONAL, precedes wdb.h when used *_/
 *	#include "nurb.h"	/* OPTIONAL, precedes wdb.h when used *_/
d35 1
a35 1
 *  $Header: /m/cad/h/RCS/wdb.h,v 10.1 91/10/12 06:35:44 mike Rel4_0 Locker: mike $
@


10.1
log
@Release_4.0
@
text
@d22 14
a35 1
 *  $Header: /m/cad/h/RCS/wdb.h,v 9.15 91/06/26 15:47:29 mike Exp $
@


9.15
log
@Eliminated compat.
@
text
@d22 1
a22 1
 *  $Header: /m/cad/h/RCS/wdb.h,v 9.14 91/06/23 00:10:33 mike Exp $
@


9.14
log
@Changed mk_trc() to mk_trc_h() to avoid confusion with old routine
of that name with different calling sequence.
@
text
@d22 1
a22 1
 *  $Header: /m/cad/h/RCS/wdb.h,v 9.13 91/06/14 09:55:38 stay Exp $
a166 1
#define mk_cvt_factor(_str)     rt_units_conversion(_str)
@


9.13
log
@changed B_SPLINE_DEFINED to NURB_H
@
text
@d22 1
a22 1
 *  $Header: /m/cad/h/RCS/wdb.h,v 9.12 91/06/13 02:45:36 mike Exp $
d102 2
a103 1
WDB_EXTERN(int mk_trc, (FILE *fp, char *name, CONST point_t base,
@


9.12
log
@Added entries for more routines.
Lots of CONST args
@
text
@d22 1
a22 1
 *  $Header: /m/cad/h/RCS/wdb.h,v 9.11 91/06/13 01:39:57 mike Exp $
d111 3
a113 3
#if defined(B_SPLINE_DEFINED)
WDB_EXTERN(int mk_bsurf, (FILE *fp, struct b_spline *bp) );
#else /* !B_SPLINE_DEFINED */
d115 1
a115 1
#endif /* B_SPLINE_DEFINED */
@


9.11
log
@tweeks
@
text
@d22 1
a22 1
 *  $Header: /m/cad/h/RCS/wdb.h,v 9.10 91/02/08 22:46:09 mike Exp $
d77 12
a88 11
WDB_EXTERN(int mk_id, (FILE *fp, char *title) );
WDB_EXTERN(int mk_half, (FILE *fp, char *name, vect_t norm, double d) );
WDB_EXTERN(int mk_rpp, (FILE *fp, char *name, point_t min, point_t max) );
WDB_EXTERN(int mk_arb4, (FILE *fp, char *name, point_t pts[]) );
WDB_EXTERN(int mk_arb8, (FILE *fp, char *name, point_t pts[]) );
WDB_EXTERN(int mk_sph, (FILE *fp, char *name, point_t center, fastf_t radius) );
WDB_EXTERN(int mk_ell, (FILE *fp, char *name, point_t center,
			vect_t a, vect_t b, vect_t c) );
WDB_EXTERN(int mk_tor, (FILE *fp, char *name, point_t center, vect_t inorm,
			double r1, double r2) );
WDB_EXTERN(int mk_rcc, (FILE *fp, char *name, point_t base, vect_t height,
d90 16
a105 10
WDB_EXTERN(int mk_tgc, (FILE *fp, char *name, point_t base, vect_t height,
			vect_t a, vect_t b, vect_t c, vect_t d) );
WDB_EXTERN(int mk_trc, (FILE *fp, char *name, point_t ibase, vect_t iheight,
			fastf_t radbase, fastf_t radtop) );
WDB_EXTERN(int mk_trc_top, (FILE *fp, char *name, point_t ibase, point_t itop,
			fastf_t radbase, fastf_t radtop) );
WDB_EXTERN(int mk_polysolid, (FILE *fp, char *name) );
WDB_EXTERN(int mk_poly, (FILE *fp, int npts,
			fastf_t verts[][3], fastf_t norms[][3]) );
WDB_EXTERN(int mk_fpoly, (FILE *fp, int npts, fastf_t verts[][3]) );
d121 2
a122 1
 *  Combination conversion routines
d124 4
d137 4
@


9.10
log
@Added mk_export_fwrite, the interface to the LIBRT import/export routines.
@
text
@d22 1
a22 1
 *  $Header: /m/cad/h/RCS/wdb.h,v 9.9 91/01/03 23:33:53 cjohnson Exp $
d37 1
a37 1
#if __STDC__
d104 1
a104 1
#if defined(__STDC__) && defined(B_SPLINE_DEFINED)
d106 1
a106 1
#else /* !__STDC__ || !B_SPLINE_DEFINED */
d108 1
a108 1
#endif /* __STDC__ && B_SPLINE_DEFINED */
d150 1
a150 1
WDB_EXTERN(double mk_cvt_factor, (char *units_string) );
@


9.9
log
@Workaround for not having everything include b_spline.h
@
text
@d22 1
a22 1
 *  $Header: /m/cad/h/RCS/wdb.h,v 9.9 91/01/03 23:23:46 cjohnson Exp $
d162 1
@


9.8
log
@mk_addmember() got another arg.
@
text
@d22 1
a22 1
 *  $Header: /m/cad/h/RCS/wdb.h,v 9.7 90/10/26 23:57:37 sue Exp $
d104 1
d106 3
@


9.7
log
@mk_free() does not exist, it is mk_freemembers().
@
text
@d22 1
a22 1
 *  $Header: /m/cad/h/RCS/wdb.h,v 9.6 90/10/16 11:18:01 mike Exp $
d121 1
a121 1
WDB_EXTERN(struct wmember *mk_addmember, (char *name, struct wmember *headp) );
@


9.6
log
@Changed to using rtlist.h
@
text
@d22 1
a22 1
 *  $Header: /m/cad/h/RCS/wdb.h,v 9.5 90/10/11 02:19:45 mike Exp $
a107 1
WDB_EXTERN(void mk_free, (struct wdb_pipeseg *headp ) );
@


9.5
log
@Added pipe support.
Added ANSI C subroutine prototypes
@
text
@d6 1
a6 1
 *  Note -
d8 1
a8 1
 *	<stdio.h> to obtain the typedef for FILE.
d22 1
a22 1
 *  $Header: wdb.h,v 9.4 90/03/05 20:33:36 mike Exp $
d25 4
d49 4
a52 6
	long	wm_magic;
	char	wm_name[16+3];	/* NAMESIZE */
	char	wm_op;		/* Boolean operation */
	mat_t	wm_mat;
	struct wmember *wm_forw;
	struct wmember *wm_back;
a54 1

a56 2
#define WMEMBER_HEAD_INIT(hp)	{ (hp)->wm_forw = (hp)->wm_back = (hp); }

d61 1
a66 1
	struct wdb_pipeseg *ps_next;
d68 2
a69 1
#define WDB_PIPESEG_NULL		((struct wdb_pipeseg *)0)
d105 4
@


9.4
log
@Added more external declarations.
@
text
@d6 4
d22 1
a22 1
 *  $Header: wdb.h,v 9.3 90/02/08 01:49:13 mike Locked $
d27 13
d41 3
d56 2
d59 16
d77 22
a98 15
extern int	mk_id();
extern int	mk_half();
extern int	mk_rpp();
extern int	mk_arb4();
extern int	mk_arb8();
extern int	mk_sph();
extern int	mk_ell();
extern int	mk_tor();
extern int	mk_rcc();
extern int	mk_tgc();
extern int	mk_trc();
extern int	mk_trc_top();
extern int	mk_polysolid();
extern int	mk_poly();
extern int	mk_fpoly();
d100 5
a104 4
extern int	mk_arbn();
extern int	mk_ars();
extern int	mk_bsolid();
extern int	mk_bsurf();
d109 19
a127 7
extern int	mk_comb();
extern int	mk_rcomb();
extern int	mk_fcomb();
extern int	mk_memb();
extern struct wmember	*mk_addmember();
extern int	mk_lcomb();
extern int	mk_lrcomb();
d141 3
a143 3
extern int		mk_conversion();
extern double		mk_cvt_factor();
extern int		mk_set_conversion();
d150 5
@


9.3
log
@Added support for units conversion in libwdb.
@
text
@d18 1
a18 1
 *  $Header: wdb.h,v 9.2 89/11/03 02:30:46 mike Locked $
d25 1
a25 1
	int	wm_magic;
d33 1
d36 35
d74 1
a74 1
#define WMOP_UNION		'u'
d80 6
a85 1
extern struct wmember	*mk_addmember();
a91 4

extern int		mk_conversion();
extern double		mk_cvt_factor();
extern int		mk_set_conversion();
@


9.2
log
@Added defines for wm_op
@
text
@d18 1
a18 1
 *  $Header: wdb.h,v 9.1 89/05/19 05:44:45 mike Locked $
d26 1
a26 1
	char	wm_name[16];
d44 11
a54 1
extern struct wmember *mk_addmember();
@


9.1
log
@Release_3.5
@
text
@d18 1
a18 1
 *  $Header: wdb.h,v 8.2 89/01/19 19:48:50 mike Exp $
d34 5
@


8.2
log
@For ANSII C, made tokens after #endif into comments
@
text
@d18 1
a18 1
 *  $Header: wdb.h,v 8.1 88/10/05 00:24:43 mike Locked $
@


8.1
log
@Release_3.0
@
text
@d18 1
a18 1
 *  $Header: wdb.h,v 1.2 88/09/10 00:00:00 phil Exp $
d41 1
a41 1
#endif WDB_H
@


1.2
log
@changed arg convention
@
text
@d18 1
a18 1
 *  $Header: wdb.h,v 1.1 87/12/24 02:02:22 phil Locked $
@


1.1
log
@Initial revision
@
text
@d18 1
a18 1
 *  $Header: db.h,v 7.1 87/11/02 23:22:24 mike Rel $
d36 2
a37 2
#define mk_lfcomb(fp,name,region,headp)		mk_lcomb( fp, name, region, \
	(char *)0, (char *)0, 0, (char *)0, headp );
@
