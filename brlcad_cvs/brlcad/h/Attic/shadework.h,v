head	11.17;
access;
symbols
	ansi-20040405-merged:11.16
	postmerge-20040405-ansi:11.16
	premerge-20040404-ansi:11.16
	postmerge-autoconf:11.16
	autoconf-freeze:11.16
	premerge-autoconf:11.16
	ansi-20040316-freeze:11.16
	postmerge-20040315-windows:11.16
	premerge-20040315-windows:11.16
	windows-20040315-freeze:11.16
	autoconf-20031203:11.16
	autoconf-20031202:11.16
	autoconf-branch:11.16.0.12
	phong-branch:11.16.0.10
	photonmap-branch:11.16.0.8
	rel-6-1-DP:11.16
	windows-branch:11.16.0.6
	rel-6-0-2:11.16
	ansi-branch:11.16.0.4
	rel-6-0-1-branch:11.16.0.2
	hartley-6-0-post:11.16
	hartley-6-0-pre:11.16
	rel-6-0-1:11.16
	rel-6-0:11.16
	rel-5-4:11.13
	offsite-5-3-pre:11.15
	rel-5-3:11.13
	rel-5-2:11.13
	rel-5-1-branch:11.13.0.2
	rel-5-1:11.13
	rel-5-0:11.11
	rel-5-0-beta:11.11
	rel-4-5:11.7
	ctj-4-5-post:11.5
	ctj-4-5-pre:11.5
	rel-4-4:11.1
	rel-4-0:10.1
	rel-3-5:9.1
	rel-3-0:8.1
	rel-2-3:7.1
	rel-2-0:6.1
	rel-1-24:5.1
	rel-1-20:4.2
	rel-1-10:4.1;
locks; strict;
comment	@ * @;


11.17
date	2004.05.24.04.11.53;	author morrison;	state dead;
branches;
next	11.16;

11.16
date	2001.04.05.19.35.08;	author morrison;	state Exp;
branches;
next	11.15;

11.15
date	2000.09.11.05.53.01;	author cjohnson;	state Exp;
branches;
next	11.14;

11.14
date	2000.08.19.22.01.16;	author butler;	state Exp;
branches;
next	11.13;

11.13
date	2000.02.03.06.32.12;	author butler;	state Exp;
branches;
next	11.12;

11.12
date	99.12.04.00.16.49;	author mike;	state Exp;
branches;
next	11.11;

11.11
date	98.12.17.04.19.09;	author mike;	state Exp;
branches;
next	11.10;

11.10
date	98.12.11.20.53.54;	author mike;	state Exp;
branches;
next	11.9;

11.9
date	98.11.19.02.16.46;	author mike;	state Exp;
branches;
next	11.8;

11.8
date	98.09.22.01.10.19;	author mike;	state Exp;
branches;
next	11.7;

11.7
date	97.12.31.09.20.43;	author mike;	state Exp;
branches;
next	11.6;

11.6
date	97.12.31.09.01.40;	author mike;	state Exp;
branches;
next	11.5;

11.5
date	96.06.24.21.03.58;	author butler;	state Exp;
branches;
next	11.4;

11.4
date	95.10.20.04.49.43;	author butler;	state Exp;
branches;
next	11.3;

11.3
date	95.08.19.05.03.32;	author butler;	state Exp;
branches;
next	11.2;

11.2
date	95.03.31.22.42.03;	author butler;	state Exp;
branches;
next	11.1;

11.1
date	95.01.04.10.00.42;	author mike;	state Rel4_4;
branches;
next	10.1;

10.1
date	91.10.12.06.41.47;	author mike;	state Rel4_0;
branches;
next	9.1;

9.1
date	89.05.19.05.58.58;	author mike;	state Rel3_5;
branches;
next	8.3;

8.3
date	89.04.28.04.03.01;	author phil;	state Exp;
branches;
next	8.2;

8.2
date	89.01.02.18.26.56;	author mike;	state Exp;
branches;
next	8.1;

8.1
date	88.10.05.00.32.50;	author mike;	state Rel3_0;
branches;
next	7.6;

7.6
date	88.10.01.00.30.00;	author mike;	state Exp;
branches;
next	7.5;

7.5
date	88.09.17.06.48.55;	author mike;	state Exp;
branches;
next	7.4;

7.4
date	88.05.14.01.35.45;	author mike;	state Exp;
branches;
next	7.3;

7.3
date	88.01.26.05.24.46;	author phil;	state Exp;
branches;
next	7.2;

7.2
date	88.01.20.04.13.45;	author mike;	state Exp;
branches;
next	7.1;

7.1
date	87.11.02.23.54.05;	author mike;	state Rel;
branches;
next	6.3;

6.3
date	87.10.15.16.58.52;	author mike;	state Exp;
branches;
next	6.2;

6.2
date	87.09.10.07.10.38;	author mike;	state Exp;
branches;
next	6.1;

6.1
date	87.07.11.07.58.34;	author mike;	state Rel;
branches;
next	5.3;

5.3
date	87.07.11.02.42.02;	author mike;	state Exp;
branches;
next	5.2;

5.2
date	87.06.26.05.53.35;	author mike;	state Exp;
branches;
next	5.1;

5.1
date	87.06.24.22.14.33;	author mike;	state Rel;
branches;
next	4.2;

4.2
date	87.02.13.00.01.25;	author mike;	state Exp;
branches;
next	4.1;

4.1
date	86.12.29.03.48.15;	author mike;	state Rel1;
branches;
next	1.3;

1.3
date	86.12.24.04.26.55;	author mike;	state Exp;
branches;
next	1.2;

1.2
date	86.12.14.21.12.15;	author mike;	state Exp;
branches;
next	1.1;

1.1
date	86.06.11.00.12.30;	author mike;	state Exp;
branches;
next	;


desc
@Definitions for processing material information
.,
@


11.17
log
@moved/renamed from top-level h/ to top-level include/
@
text
@#ifndef SHADEWORK_H
#define SHADEWORK_H
/*
 *			S H A D E W O R K . H
 *  
 *  Source -
 *	SECAD/VLD Computing Consortium, Bldg 394
 *	The U. S. Army Ballistic Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005
 *
 *  $Header: /n/xoff/cvs/brlcad/h/shadework.h,v 11.16 2001/04/05 19:35:08 morrison Exp $
 */

#define SW_NLIGHTS	16		/* Max # of light sources */

/*
 *			S H A D E W O R K
 */
struct shadework {
/* XXX At least the first three of these need to be spectral curves */
	fastf_t		sw_transmit;	/* 0.0 -> 1.0 */
	fastf_t		sw_reflect;	/* 0.0 -> 1.0 */
	fastf_t		sw_extinction;	/* extinction coeff, mm^-1 */
	fastf_t		sw_refrac_index;
	fastf_t		sw_temperature;
#if RT_MULTISPECTRAL
	struct bn_tabdata *msw_color;
	struct bn_tabdata *msw_basecolor;
#else
	fastf_t		sw_color[3];	/* shaded color */
	fastf_t		sw_basecolor[3]; /* base color */
#endif
	struct hit	sw_hit;		/* ray hit (dist,point,normal) */
	struct uvcoord	sw_uv;
#if RT_MULTISPECTRAL
	struct bn_tabdata *msw_intensity[SW_NLIGHTS];
#else
	fastf_t		sw_intensity[3*SW_NLIGHTS]; /* light intensities */
#endif
	fastf_t		sw_tolight[3*SW_NLIGHTS];   /* light directions */
	char		*sw_visible[SW_NLIGHTS]; /* visibility flags/ptrs */
	fastf_t		sw_lightfract[SW_NLIGHTS];/* % light visible */
	int		sw_xmitonly;	/* flag: need sw_transmit only */
					/* sw_xmitonly=1, compute transmission only */
					/* sw_xmitonly=2, want parameters only, not even transmission */
	int		sw_inputs;	/* fields from mf_inputs actually filled */
	int		sw_frame;	/* # of current frame */
	fastf_t		sw_frametime;	/* frame time delta off 1st frame */
	fastf_t		sw_pixeltime;	/* pixel time delta off 1st pixel of 1st frame */
	struct seg	*sw_segs;	/* segs which made partition */
/*
 * The following is experimental.  DO NOT USE
 */
#define	SW_SET_TRANSMIT		0x01
#define SW_SET_REFLECT		0x02
#define SW_SET_REFRAC_INDEX	0x04
#define SW_SET_EXTINCTION	0x10
#define SW_SET_AMBIENT		0x20
#define SW_SET_EMISSION		0x40
	int		sw_phong_set_vector;
	fastf_t		sw_phong_transmit;
	fastf_t		sw_phong_reflect;
	fastf_t		sw_phong_ri;
	fastf_t		sw_phong_extinction;
	fastf_t		sw_phong_ambient;
	fastf_t		sw_phong_emission;
/*
 * End of experimental
 */
};

BU_EXTERN(void		pr_shadework, (const char *str, const struct shadework *swp));
#endif
@


11.16
log
@updated SIGNED to signed
updated CONST to const
@
text
@d11 1
a11 1
 *  $Header: /c/CVS/brlcad/h/shadework.h,v 11.15 2000/09/11 05:53:01 cjohnson Exp $
@


11.15
log
@Add support for an experamental message passing between shaders.
@
text
@d11 1
a11 1
 *  $Header: /c/CVS/brlcad/h/shadework.h,v 11.14 2000/08/19 22:01:16 butler Exp $
d72 1
a72 1
BU_EXTERN(void		pr_shadework, (CONST char *str, CONST struct shadework *swp));
@


11.14
log
@Misc Compilation fixes
@
text
@d11 1
a11 1
 *  $Header: /c/CVS/brlcad/h/shadework.h,v 11.13 2000/02/03 06:32:12 butler Exp $
d51 19
@


11.13
log
@Made the table used by bn_rand_half much larger to reduce aliasing.
@
text
@d1 2
d11 1
a11 1
 *  $Header: /c/CVS/brlcad/h/shadework.h,v 11.12 1999/12/04 00:16:49 mike Exp $
d54 1
@


11.12
log
@
Added important comment.
@
text
@d9 1
a9 1
 *  $Header: /c/CVS/brlcad/h/shadework.h,v 11.11 1998/12/17 04:19:09 mike Exp $
d40 1
@


11.11
log
@Regions now have an associated temperature
@
text
@d9 1
a9 1
 *  $Header: /c/CVS/brlcad/h/shadework.h,v 11.10 1998/12/11 20:53:54 mike Exp $
d41 2
@


11.10
log
@Drat, I missed some more rt_tabdata -> bn_tabdata changes.
@
text
@d9 1
a9 1
 *  $Header: /c/CVS/brlcad/h/shadework.h,v 11.9 1998/11/19 02:16:46 mike Exp $
d23 1
@


11.9
log
@Initial support for multispectral stuff
@
text
@d9 1
a9 1
 *  $Header: /c/CVS/brlcad/h/shadework.h,v 11.8 1998/09/22 01:10:19 mike Exp $
d24 2
a25 2
	struct rt_tabdata *msw_color;
	struct rt_tabdata *msw_basecolor;
d33 1
a33 1
	struct rt_tabdata *msw_intensity[SW_NLIGHTS];
@


11.8
log
@Split and moved rt/material.h into h/shadefuncs.h and h/shadework.h,
in preparation for LIBOPTICAL separation.
@
text
@d9 1
a9 1
 *  $Header: /c/CVS/brlcad/rt/material.h,v 11.7 1997/12/31 09:20:43 mike Exp $
d18 1
d21 1
d23 4
a26 1
	fastf_t		sw_extinction;	/* extinction coeff, mm^-1 */
d29 1
d32 3
d36 1
@


11.7
log
@Oops, these days, magic numbers are supposed to be type "long",
and the m4i64 machines really do care about this!
@
text
@d2 1
a2 1
 *			M A T E R I A L . H
d9 1
a9 1
 *  $Header: /m/cad/rt/RCS/material.h,v 11.6 1997/12/31 09:01:40 mike Exp mike $
a11 33
/*
 *			M F U N C S
 *
 *  The interface to the various material property & texture routines.
 */
struct mfuncs {
	long		mf_magic;	/* To validate structure */
	char		*mf_name;	/* Keyword for material */
	struct mfuncs	*mf_forw;	/* Forward link */
	int		mf_inputs;	/* shadework inputs needed */
	int		mf_flags;	/* Flags describing shader */
	int		(*mf_setup)();	/* Routine for preparing */
	int		(*mf_render)();	/* Routine for rendering */
	void		(*mf_print)();	/* Routine for printing */
	void		(*mf_free)();	/* Routine for releasing storage */
};
#define MF_MAGIC	0x55968058
#define MF_NULL		((struct mfuncs *)0)
#define RT_CK_MF(_p)	BU_CKMAG(_p, MF_MAGIC, "mfuncs")

/*
 *  mf_inputs lists what optional shadework fields are needed.
 *  dist, point, color, & default(trans,reflect,ri) are always provided
 */
#define MFI_NORMAL	0x01		/* Need normal */
#define MFI_UV		0x02		/* Need uv */
#define MFI_LIGHT	0x04		/* Need light visibility */
#define MFI_HIT		0x08		/* Need just hit point */


/* mf_flags lists important details about individual shaders */
#define MFF_PROC	0x01		/* shader is procedural, computes tr/re/hits */

d37 1
a37 1
extern void pr_shadework();
@


11.6
log
@Required magic number to be first in mfunc table,
consistent with all other BRL-CAD magic numbers.
Required magic number to be initialized at compile time.
Added code to check the magic numbers.
Made the xxx_mfunc arrays CONST, so they can't get trashed by
runtime runaway pointer problems.
@
text
@d9 1
a9 1
 *  $Header: /m/cad/rt/RCS/material.h,v 11.5 1996/06/24 21:03:58 butler Exp mike $
d18 1
a18 1
	int		mf_magic;	/* To validate structure */
@


11.5
log
@added sw_segs which indicates the segments which contributed to this
partition.  Useful for "non-solid" regions.
@
text
@d9 1
a9 1
 *  $Header: /m/cad/rt/RCS/material.h,v 11.4 1995/10/20 04:49:43 butler Exp butler $
d18 1
a19 1
	int		mf_magic;	/* To validate structure */
d30 1
@


11.4
log
@added mf_flags variable to struct mfuncs.
@
text
@d9 1
a9 1
 *  $Header: /m/cad/rt/RCS/material.h,v 11.3 1995/08/19 05:03:32 butler Exp butler $
d66 1
@


11.3
log
@added sw_frametime and sw_pixeltime to the shadework structure
@
text
@d9 1
a9 1
 *  $Header: /m/cad/rt/RCS/material.h,v 11.2 1995/03/31 22:42:03 butler Exp butler $
d22 1
d40 3
@


11.2
log
@comments on transmit/reflect bounds
@
text
@d9 1
a9 1
 *  $Header: /m/cad/rt/RCS/material.h,v 11.1 1995/01/04 10:00:42 mike Rel4_4 butler $
d59 3
@


11.1
log
@Release_4.4
@
text
@d9 1
a9 1
 *  $Header: /m/cad/rt/RCS/material.h,v 10.1 91/10/12 06:41:47 mike Rel4_0 $
d46 2
a47 2
	fastf_t		sw_transmit;
	fastf_t		sw_reflect;
@


10.1
log
@Release_4.0
@
text
@d9 1
a9 1
 *  $Header: material.h,v 9.1 89/05/19 05:58:58 mike Rel3_5 $
@


9.1
log
@Release_3.5
@
text
@d9 1
a9 1
 *  $Header: material.h,v 8.3 89/04/28 04:03:01 phil Exp $
@


8.3
log
@added pr_shadework()
@
text
@d9 1
a9 1
 *  $Header: material.h,v 8.3 89/04/28 03:59:42 phil Exp $
@


8.2
log
@local matparse moved to raytrace.h as structparse
@
text
@d9 1
a9 1
 *  $Header: raytrace.h,v 8.7 88/12/15 01:34:18 mike Locked $
d60 2
@


8.1
log
@Release_3.0
@
text
@d3 7
a10 24

#if defined(CRAY)
	/*
	 * CRAY machines have a problem taking the address of an arbitrary
	 * character within a structure.  int pointers have to be used.
	 * There is some matching hackery in the invididual tables.
	 */
	typedef int	*mp_off_ty;
#else
#	ifdef __STDC__
		typedef void	*mp_off_ty;
#	else
		typedef char	*mp_off_ty;
#	endif
#endif

/*
 *			M A T P A R S E
 */
struct matparse {
	char		*mp_name;
	mp_off_ty	mp_offset;
	char		*mp_fmt;
};
@


7.6
log
@Cray isn't quite all better yet!
@
text
@@


7.5
log
@Cray is starting to get better...
@
text
@d5 1
a5 1
#if 0
d7 1
a7 1
	 * CRAY used to have a problem taking the address of an arbitrary
@


7.4
log
@lint
@
text
@d5 7
a11 7
#ifdef cray
/*
 * Cray has a problem taking the address of an arbitrary character within
 * a structure.  int pointers have to be used instead.
 * There is some matching hackery in the invididual tables.
 */
typedef int	*mp_off_ty;
d13 5
a17 1
typedef char	*mp_off_ty;
@


7.3
log
@added extinction coefficient and tolight vector array
@
text
@d37 2
a38 2
	int		(*mf_print)();	/* Routine for printing */
	int		(*mf_free)();	/* Routine for releasing storage */
@


7.2
log
@Added sw_inputs
@
text
@d62 1
d68 1
@


7.1
log
@Release 2.3
@
text
@d69 1
@


6.3
log
@Added MFI_HIT, for handling just hit point.
@
text
@@


6.2
log
@Added light visibility information to shadework structure
For now, the maximum number of lights is SW_NLIGHTS.
Sorry, its not dynamic.
@
text
@d50 1
@


6.1
log
@Release 2.0
@
text
@d49 1
d51 3
d58 2
a59 2
	fastf_t		sw_transmit;	/* Moss "transparency" */
	fastf_t		sw_reflect;	/* Moss "transmission" */
d65 3
@


5.3
log
@Added sw_basecolor
@
text
@@


5.2
log
@Accepted mfuncs from raytrace.h, added shadework struct.
@
text
@d57 2
a58 1
	fastf_t		sw_color[9];	/* color */
@


5.1
log
@Release 1.24
@
text
@d16 3
d23 37
@


4.2
log
@Release 1.20 -- First Formal Release
@
text
@@


4.1
log
@BRL CAD Distribution Release 1.10
@
text
@@


1.3
log
@Typedefs needed for the Cray.
@
text
@@


1.2
log
@Changed from char* to int* for Cray.
@
text
@d4 12
d17 3
a19 3
	char	*mp_name;
	int	*mp_offset;
	char	*mp_fmt;
@


1.1
log
@Initial revision
@
text
@d6 1
a6 1
	int	mp_offset;
@
