head	11.5;
access;
symbols
	ansi-20040405-merged:11.2
	postmerge-20040405-ansi:11.3
	premerge-20040404-ansi:11.3
	postmerge-autoconf:11.2
	autoconf-freeze:11.2
	premerge-autoconf:11.2
	ansi-20040316-freeze:11.2
	postmerge-20040315-windows:11.2
	premerge-20040315-windows:11.2
	windows-20040315-freeze:11.2
	autoconf-20031203:11.2
	autoconf-20031202:11.2
	autoconf-branch:11.2.0.12
	phong-branch:11.2.0.10
	photonmap-branch:11.2.0.8
	rel-6-1-DP:11.2
	windows-branch:11.2.0.6
	rel-6-0-2:11.2
	ansi-branch:11.2.0.4
	rel-6-0-1-branch:11.2.0.2
	hartley-6-0-post:11.2
	hartley-6-0-pre:11.2
	rel-6-0-1:11.2
	rel-6-0:11.2
	rel-5-4:11.1
	offsite-5-3-pre:11.2
	rel-5-3:11.1
	rel-5-2:11.1
	rel-5-1-branch:11.1.0.2
	rel-5-1:11.1
	rel-5-0:11.1
	rel-5-0-beta:11.1
	rel-4-5:11.1
	ctj-4-5-post:11.1
	ctj-4-5-pre:11.1
	rel-4-4:11.1
	rel-4-0:10.1
	rel-3-5:9.1;
locks; strict;
comment	@ * @;


11.5
date	2004.05.24.04.11.52;	author morrison;	state dead;
branches;
next	11.4;

11.4
date	2004.04.05.17.43.10;	author erikg;	state Exp;
branches;
next	11.3;

11.3
date	2004.03.31.20.23.40;	author erikg;	state Exp;
branches;
next	11.2;

11.2
date	2000.08.25.02.27.53;	author mike;	state Exp;
branches;
next	11.1;

11.1
date	95.01.04.09.48.21;	author mike;	state Rel4_4;
branches;
next	10.18;

10.18
date	94.12.30.14.56.54;	author gdurf;	state Exp;
branches;
next	10.17;

10.17
date	94.12.30.14.51.44;	author gdurf;	state Exp;
branches;
next	10.16;

10.16
date	94.12.21.19.57.40;	author gdurf;	state Exp;
branches;
next	10.15;

10.15
date	94.12.20.13.48.25;	author mike;	state Exp;
branches;
next	10.14;

10.14
date	94.12.14.20.32.04;	author mike;	state Exp;
branches;
next	10.13;

10.13
date	94.12.12.15.03.40;	author mike;	state Exp;
branches;
next	10.12;

10.12
date	94.12.09.09.02.43;	author jra;	state Exp;
branches;
next	10.11;

10.11
date	94.12.08.20.35.58;	author mike;	state Exp;
branches;
next	10.10;

10.10
date	94.12.08.20.32.21;	author mike;	state Exp;
branches;
next	10.9;

10.9
date	94.12.01.19.31.33;	author mike;	state Exp;
branches;
next	10.8;

10.8
date	94.11.04.04.23.11;	author mike;	state Exp;
branches;
next	10.7;

10.7
date	94.10.20.00.16.31;	author mike;	state Exp;
branches;
next	10.6;

10.6
date	94.10.18.00.07.49;	author mike;	state Exp;
branches;
next	10.5;

10.5
date	94.10.14.16.19.55;	author mike;	state Exp;
branches;
next	10.4;

10.4
date	94.09.01.05.43.28;	author gdurf;	state Exp;
branches;
next	10.3;

10.3
date	94.08.25.15.03.03;	author gdurf;	state Exp;
branches;
next	10.2;

10.2
date	92.07.23.05.10.20;	author butler;	state Exp;
branches;
next	10.1;

10.1
date	91.10.12.06.35.19;	author mike;	state Rel4_0;
branches;
next	9.17;

9.17
date	91.09.23.22.21.37;	author butler;	state Exp;
branches;
next	9.16;

9.16
date	91.08.30.20.53.06;	author mike;	state Exp;
branches;
next	9.15;

9.15
date	91.08.29.23.48.25;	author mike;	state Exp;
branches;
next	9.14;

9.14
date	91.08.28.02.40.45;	author mike;	state Exp;
branches;
next	9.13;

9.13
date	91.07.16.21.00.44;	author butler;	state Exp;
branches;
next	9.12;

9.12
date	91.07.08.16.30.52;	author butler;	state Exp;
branches;
next	9.11;

9.11
date	91.07.04.01.22.54;	author butler;	state Exp;
branches;
next	9.10;

9.10
date	91.06.12.22.36.18;	author mike;	state Exp;
branches;
next	9.9;

9.9
date	91.01.12.08.49.03;	author mike;	state Exp;
branches;
next	9.8;

9.8
date	91.01.12.07.59.18;	author mike;	state Exp;
branches;
next	9.7;

9.7
date	91.01.12.07.51.08;	author mike;	state Exp;
branches;
next	9.6;

9.6
date	91.01.12.07.12.26;	author mike;	state Exp;
branches;
next	9.5;

9.5
date	90.12.07.03.25.14;	author mike;	state Exp;
branches;
next	9.4;

9.4
date	90.12.05.04.58.43;	author mike;	state Exp;
branches;
next	9.3;

9.3
date	90.11.24.01.53.07;	author mike;	state Exp;
branches;
next	9.2;

9.2
date	89.07.28.03.37.15;	author mike;	state Exp;
branches;
next	9.1;

9.1
date	89.05.19.05.44.04;	author mike;	state Rel3_5;
branches;
next	1.4;

1.4
date	89.04.26.21.33.30;	author mike;	state Exp;
branches;
next	1.3;

1.3
date	89.04.24.08.27.19;	author mike;	state Exp;
branches;
next	1.2;

1.2
date	89.04.14.07.22.05;	author mike;	state Exp;
branches;
next	1.1;

1.1
date	89.04.04.02.14.32;	author mike;	state Exp;
branches;
next	;


desc
@Declarations for C library routines and UNIX system calls.
@


11.5
log
@moved/renamed from top-level h/ to top-level include/
@
text
@/*
 *  			E X T E R N S . H
 *
 *  Declarations for C library routines and UNIX system calls.
 *  Inspired by the ANSI C header file <stdlib.h>
 *  Not claimed to be complete (yet)
 *  
 *  Authors -
 *	Michael John Muuss
 *	Charles M. Kennedy
 *	Phillip Dykstra
 *
 *  Source -
 *	SECAD/VLD Computing Consortium, Bldg 394
 *	The U. S. Army Ballistic Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005
 *  
 *  Distribution Status -
 *	Public Domain, Distribution Unlimitied.
 *
 *  $Header: /n/xoff/cvs/brlcad/h/externs.h,v 11.4 2004/04/05 17:43:10 erikg Exp $
 */
#ifndef EXTERNS_H
#define EXTERNS_H

/* We need sys/select.h under Irix 5 to get fd_set. */

#ifdef HAVE_SYS_SELECT_H
#	undef __APPLE_API_PRIVATE
#	include <sys/select.h>
#endif

/* POSIX says FD_SET() et.al. go in <sys/time.h> rather than <sys/types.h> */
#if defined(_POSIX_SOURCE) || defined(linux)
#	include <sys/time.h>
#endif

/* Some additional fd_set manipulation routines */

#ifndef FD_OR
#define FD_OR(x, a, b) { register int _i; for (_i = 0; _i < FD_SETSIZE; _i++) \
	if (FD_ISSET(_i, a) || FD_ISSET(_i, b)) FD_SET(_i, x); \
	else FD_CLR(_i, x); }
#endif

#ifndef FD_AND
#define FD_AND(x, a, b) { register int _i; for (_i = 0; _i < FD_SETSIZE; _i++)\
	if (FD_ISSET(_i, a) && FD_ISSET(_i, b)) FD_SET(_i, x); \
	else FD_CLR(_i, x); }
#endif

#ifndef FD_MOVE
#define FD_MOVE(a, b) { register int _i; for (_i = 0; _i < FD_SETSIZE; _i++) \
	if (FD_ISSET(_i, b)) FD_SET(_i, a); else FD_CLR(_i, a); }
#endif

#ifndef FD_OREQ
#define FD_OREQ(a, b) { register int _i; for (_i = 0; _i < FD_SETSIZE; _i++) \
	if (FD_ISSET(_i, b)) FD_SET(_i, a); }
#endif

#ifndef FD_ANDEQ
#define FD_ANDEQ(a, b) { register int _i; for (_i = 0; _i < FD_SETSIZE; _i++) \
	if (!FD_ISSET(_i, a) || !FD_ISSET(_i, b)) FD_CLR(_i, a) }
#endif

/* Needed on Irix 6 to declare struct timeval for unistd.h for select() */
#ifdef IRIX
#	include <sys/time.h>
#endif

/* Here, we want to include unistd.h if we have it to get the definitions
   of things such as off_t.  If we don't have it, make some good guesses. */

#ifdef HAVE_UNISTD_H
	/* Has close(), fork(), exec(), getopt() */
	/* But *not* open()!!!! */
#	include <unistd.h>

	/* This is UNIX, pick up the header files for remaining system calls */
#	include <fcntl.h>	/* for open() */
#	include <sys/wait.h>	/* for wait() */

#else /* HAVE_UNISTD_H */

#	if !defined(OFF_T) && !defined(HAVE_OFF_T)
#		define	off_t	long
#		define	OFF_T	long
#	endif

/*
 *	System calls
 */
extern int	close();
extern int	dup();
#ifndef CRAY1		/* Horrid XMP UNICOS 4.0.7 /bin/cc bug if you define this */
extern void	exit();
#endif

extern int	execl();
extern int	fork();
extern int	getuid();

extern int	open();
extern off_t	lseek();
extern int	nice();
extern int	pipe();
extern int	read();
extern unsigned	sleep();
extern void	sync();
extern int	unlink();
extern int	wait();
extern int	write();

extern void	*shmat();
extern int	shmget();
#endif



#ifdef HAVE_STDLIB_H
	/* Has abort(), atof(), exit(), malloc(), free(), qsort(), atof() */
#	include <stdlib.h>
#else /* HAVE_STDLIB_H */

/*
 *	C Library Routines
 */
extern void	perror();
extern void	free();

extern char	*malloc();
extern char	*calloc();
extern char	*getenv();
extern char	*realloc();
extern char	*tempnam();
extern char	*strcpy();
extern char	*strcat();
extern char	*strncat();
extern char	*mktemp();

extern int	atoi();
extern double	atof();
extern int	qsort();
extern int	strcmp();

extern long	time();

#endif /* HAVE_STDLIB_H */


#if defined(alliant) && !defined(__STDC__)
extern double   modf();
#endif


/*
 *  Now, define all the routines found in BRL-CAD's libsysv
 */
#if USE_PROTOTYPES
extern void	port_setlinebuf( FILE *fp );

#	if defined(HAVE_GETOPT_H)
#		include <getopt.h>
#	else
#		if !defined(HAVE_GETOPT_DECL)
extern int	getopt( int argc, char **argv, char *optstr );
#		endif
#	endif

#	if !defined(HAVE_REGEX_DECL)
extern char	*re_comp( char *s );
extern int	re_exec( char *s );
#	endif

#else	/* USE_PROTOTYPES */

extern void	port_setlinebuf();
#	if defined(HAVE_GETOPT_H)
#		include <getopt.h>
#	else
#		if !defined(HAVE_GETOPT_DECL)
extern int	getopt();
#		endif
#	endif
#	if !defined(HAVE_REGEX_DECL)
extern char	*re_comp();
extern int	re_exec();
#	endif
#endif	/* USE_PROTOTYPES */

#if !defined(HAVE_GETOPT_DECL)
/* getopt munchies */
extern char	*optarg;
extern int	optind;
extern int	opterr;
#endif

/* sys_errlist and errno */
extern int	errno;
#ifndef HAVE_SYS_ERRLIST_DECL
extern int	sys_nerr;
extern char *	sys_errlist[];
#endif

#ifndef HAVE_SBRK
extern char *	sbrk();
extern int	brk();
#endif

/* Neither ANSI nor POSIX define these, they are UNIX-specific.
 * But we need them, and all UNIX systems provide them.
 */
#if __STDC__
#	ifndef HAVE_POPEN_DECL
	extern FILE	*fdopen( int filedes, const char *type );
	extern FILE	*popen( const char *command, const char *type );
#	endif
#	ifndef HAVE_STRDUP_DECL
	extern char	*strdup(const char *s);
#	endif
#endif /* __STDC__ */

#endif /* EXTERNS_H */
@


11.4
log
@undef an apple private thingy to avoid macos breaking with a cooked mach header
@
text
@d21 1
a21 1
 *  $Header$
@


11.3
log
@a macosX fix
@
text
@d29 1
@


11.2
log
@
Corrected problem with #else logic.
Now correctly defines open(), wait(), etc.
@
text
@d21 1
a21 1
 *  $Header: /c/CVS/brlcad/h/externs.h,v 11.1 1995/01/04 09:48:21 mike Rel4_4 $
d205 1
a205 1
#ifndef HAVE_SBRK_DECL
@


11.1
log
@Release_4.4
@
text
@d21 1
a21 1
 *  $Header: /m/cad/h/RCS/externs.h,v 10.18 94/12/30 14:56:54 gdurf Exp $
a65 1

d75 13
a87 8
#	include <unistd.h>		/* For many important definitions */
#endif

#ifdef HAVE_STDLIB_H
#	include <stdlib.h>
#	if defined(__stardent)
		extern FILE	*popen( const char *, const char * );
		extern FILE	*fdopen( int, const char * );
a88 7
#else

#if !defined(OFF_T) && !defined(HAVE_OFF_T)
#	define	off_t	long
#endif

#ifndef HAVE_UNISTD_H    /* We will have already included many of these in unistd.h */
d116 8
d142 1
d148 1
a148 11
#endif

/*
 *	STDIO Library Routine supplements
 */
#if defined(alliant) ||  defined(__stardent)
	extern FILE	*popen(); /* Not declared in stdio.h */
#endif
#if defined(__stardent)
	extern FILE	*fdopen();
#endif
a149 6
/*
 *	Math Library Routines
 */
extern double	atof();			/* Should be in math.h or stdlib.h */

#endif /* __STDC__ */
d214 8
a221 8
#ifndef HAVE_POPEN_DECL
extern FILE	*fdopen( int filedes, const char *type );
extern FILE	*popen( const char *command, const char *type );
#endif
#ifndef HAVE_STRDUP_DECL
extern char	*strdup(const char *s);
#endif
#endif
@


10.18
log
@*** empty log message ***
@
text
@d21 1
a21 1
 *  $Header: /m/cad/h/RCS/externs.h,v 10.17 94/12/30 19:51:44 gdurf Exp Locker: gdurf $
@


10.17
log
@errno isn't sys_errlist!
Moved extern for errno outside of HAVE_SYS_ERRLIST_DECL ifndefs.
@
text
@d21 1
a21 1
 *  $Header: /m/cad/h/RCS/externs.h,v 10.16 1994/12/21 19:57:40 gdurf Exp gdurf $
@


10.16
log
@Added support for HAVE_POPEN_DECL, HAVE_STRDUP_DECL
@
text
@d21 1
a21 1
 *  $Header: /m/cad/h/RCS/externs.h,v 10.15 1994/12/20 13:48:25 mike Exp gdurf $
d209 1
a210 1
extern int	errno;
@


10.15
log
@POSIX says FD_SET() et.al. go in <sys/time.h> rather than <sys/types.h>
@
text
@d21 1
a21 1
 *  $Header: /m/cad/h/RCS/externs.h,v 10.14 94/12/14 20:32:04 mike Exp Locker: mike $
d224 1
a224 1
#ifndef CRAY2
d227 2
a228 1
#endif /* CRAY2 */
d230 1
@


10.14
log
@Cleaned up getopt.h handling
@
text
@d21 1
a21 1
 *  $Header: /m/cad/h/RCS/externs.h,v 10.13 94/12/12 15:03:40 mike Exp Locker: mike $
d29 6
a34 1
#include <sys/select.h>
@


10.13
log
@On Linux, just use <getopt.h>
@
text
@d21 1
a21 1
 *  $Header: /m/cad/h/RCS/externs.h,v 10.12 94/12/09 09:02:43 jra Exp Locker: mike $
d166 5
a170 4
# if !defined(HAVE_GETOPT_DECL)
#  if defined(linux)
#	include <getopt.h>
#  else
d172 4
a175 3
#  endif
# endif
#if !defined(HAVE_REGEX_DECL)
d178 1
a178 1
#endif
d180 2
a181 1
#else
d183 4
a186 1
#if !defined(HAVE_GETOPT_DECL)
d188 3
a190 2
#endif
#if !defined(HAVE_REGEX_DECL)
d193 2
a194 2
#endif
#endif
@


10.12
log
@mod for CRAY2
@
text
@d21 1
a21 1
 *  $Header: /n/wolf/m/cad/h/RCS/externs.h,v 10.11 94/12/08 20:35:58 mike Exp Locker: jra $
d168 1
a168 1
extern int	getopt( int argc, char * CONST *argv, CONST char *optstr );
@


10.11
log
@Further discrimination required.
@
text
@d21 1
a21 1
 *  $Header: /m/cad/h/RCS/externs.h,v 10.10 94/12/08 20:32:21 mike Exp Locker: mike $
d212 1
d215 1
@


10.10
log
@Inspired by Linux grumping.
@
text
@d21 1
a21 1
 *  $Header: /m/cad/h/RCS/externs.h,v 10.9 94/12/01 19:31:33 mike Exp Locker: mike $
d166 2
a167 1
#if !defined(HAVE_GETOPT_DECL)
d169 4
a172 1
#endif
@


10.9
log
@Added shared memory routines to non-ANSI list of syscalls.
@
text
@d21 1
a21 1
 *  $Header: /m/cad/h/RCS/externs.h,v 10.8 94/11/04 04:23:11 mike Exp Locker: mike $
d167 1
a167 1
extern int	getopt( int argc, char **argv, char *optstr );
@


10.8
log
@Irix 6 hack.
@
text
@d21 1
a21 1
 *  $Header: /m/cad/h/RCS/externs.h,v 10.7 94/10/20 00:16:31 mike Exp Locker: mike $
d112 2
@


10.7
log
@SunOS 5.4 needs strdup() extern too.
@
text
@d21 1
a21 1
 *  $Header: /m/cad/h/RCS/externs.h,v 10.6 94/10/18 00:07:49 mike Exp Locker: mike $
d61 5
@


10.6
log
@Added popen().
@
text
@d21 1
a21 1
 *  $Header: /m/cad/h/RCS/externs.h,v 10.5 94/10/14 16:19:55 mike Exp Locker: mike $
d197 3
a199 6
   /* IRIX 5 string.h is unwilling to define strdup */
#if (IRIX >= 5)
extern char *	strdup(const char *s);
#endif

/* Even POSIX does not define these, they are UNIX-specific. But we need them. */
d203 1
@


10.5
log
@Handle POSIX fdopen().
@
text
@d21 1
a21 1
 *  $Header: /m/cad/h/RCS/externs.h,v 10.4 94/09/01 05:43:28 gdurf Exp Locker: mike $
d202 1
a202 1
/* POSIX does not define fdopen */
d205 1
@


10.4
log
@Added wrappers for getopt and regex declarations
@
text
@d21 1
a21 1
 *  $Header: /m/cad/h/RCS/externs.h,v 10.3 1994/08/25 15:03:03 gdurf Exp gdurf $
d200 5
@


10.3
log
@Cleaned up some machine-specific #ifdefs
@
text
@d21 1
a21 1
 *  $Header: /m/cad/h/RCS/externs.h,v 10.2 1992/07/23 05:10:20 butler Exp gdurf $
d159 1
a159 1
#if !defined(__stardent) && !defined(__bsdi__)
d162 1
d165 1
d169 1
d171 2
d176 1
d178 1
d183 1
@


10.2
log
@added support for BSDI
@
text
@d21 1
a21 1
 *  $Header: /m/cad/h/RCS/externs.h,v 10.1 1991/10/12 06:35:19 mike Rel4_0 butler $
d23 2
a24 2
#ifndef EXTERNS_H_SEENYET
#define EXTERNS_H_SEENYET
d26 28
a53 7
/*
 *  First, define all the routines found in BRL-CAD's libsysv
 */
#if USE_PROTOTYPES
extern int	bsdselect( long readfds, int sec, int us );
#if !defined(__stardent) && !defined(__bsdi__)
extern int	getopt( int argc, char **argv, char *optstr );
a54 2
extern char	*re_comp( char *s );
extern int	re_exec( char *s );
d56 3
a58 5
#else
extern int	bsdselect();
extern int	getopt();
extern char	*re_comp();
extern int	re_exec();
d61 7
a67 3
extern char	*optarg;
extern int	optind;
extern int	opterr;
d69 1
a69 2
#if (__STDC__ && !apollo) || (sgi && mips)
	/* SGI has this, even though it isn't ANSI */
a70 1

d77 6
a91 1
#if !defined(__convexc__)
a95 6
#ifdef BSD
extern int	lseek();
#else
extern long	lseek();
#endif

d97 1
a97 3

#endif /* !defined(__convexc__) */

a100 1
extern char	*sbrk();
d107 1
d130 2
d145 1
a145 1
extern double	atof();
d148 47
a194 1
#endif /* EXTERNS_H_SEENYET */
@


10.1
log
@Release_4.0
@
text
@d21 1
a21 1
 *  $Header: /m/cad/h/RCS/externs.h,v 9.17 91/09/23 22:21:37 butler Exp $
d31 1
a31 1
#if !defined(__stardent)
@


9.17
log
@convex patches
@
text
@d21 1
a21 1
 *  $Header: /m/cad/h/RCS/externs.h,v 9.16 91/08/30 20:53:06 mike Exp $
@


9.16
log
@fdopen is only defined when _POSIX_SOURCE=1, but then
all the IOCTLs for libtermio, etc., don't compile.
Just define them here.
@
text
@d21 1
a21 1
 *  $Header: /m/cad/h/RCS/externs.h,v 9.16 91/08/30 20:48:12 mike Exp $
a62 1
extern int	execl();
d66 3
d71 1
d77 5
a82 1
extern int	open();
@


9.15
log
@strchr and strrchr have no business being in here.
Affected modules should be using #include <strings.h> or <string.h>
@
text
@d21 1
a21 1
 *  $Header: /m/cad/h/RCS/externs.h,v 9.15 91/08/29 23:38:08 mike Exp $
d51 5
a76 3
#if defined(alliant)
extern FILE	*popen();	/*alliant doesn't declare this in stdio.h */
#endif
d107 13
@


9.14
log
@Stardent had conflict with getopt definition, it uses
char * const * argv.
@
text
@d21 1
a21 1
 *  $Header: /m/cad/h/RCS/externs.h,v 9.13 91/07/16 21:00:44 butler Exp $
a35 4
extern char	*strchr( CONST char *sp, int c );
#if defined(vax) && !defined(SYSV) && (BSD < 44)
extern char	*strrchr( CONST char *sp, int c );
#endif
a41 3
extern char	*strchr();
#if defined(vax) && !defined(SYSV) && (BSD < 44)
extern char	*strrchr();
a43 1
#endif
@


9.13
log
@changed VAX to vax
@
text
@d21 1
a21 1
 *  $Header: /m/cad/h/RCS/externs.h,v 9.12 91/07/08 16:30:52 butler Exp $
d31 1
d33 1
d37 1
a37 1
#if defined(vax) && !defined(SYSV) && BSD < 44
d47 1
a47 1
#if defined(vax) && !defined(SYSV) && BSD < 44
@


9.12
log
@added definition of strrchr() for VAX
@
text
@d21 1
a21 1
 *  $Header: /m/cad/h/RCS/externs.h,v 9.11 91/07/04 01:22:54 butler Exp $
d35 1
a35 1
#if defined(VAX) && !defined(SYSV) && BSD < 44
d45 1
a45 1
#if defined(VAX) && !defined(SYSV) && BSD < 44
@


9.11
log
@added popen() declaration for alliant
@
text
@d21 1
a21 1
 *  $Header: /m/cad/h/RCS/externs.h,v 9.10 91/06/12 22:36:18 mike Exp $
d35 4
d45 4
@


9.10
log
@Added opterr
@
text
@d21 1
a21 1
 *  $Header: /m/cad/h/RCS/externs.h,v 9.9 91/01/12 08:49:03 mike Exp $
d70 3
@


9.9
log
@added sbrk
@
text
@d21 1
a21 1
 *  $Header: /m/cad/h/RCS/externs.h,v 9.8 91/01/12 07:59:18 mike Exp $
d44 1
@


9.8
log
@added optarg and optind to accompany getopt.
@
text
@d21 1
a21 1
 *  $Header: /m/cad/h/RCS/externs.h,v 9.7 91/01/12 07:51:08 mike Exp $
d70 1
@


9.7
log
@Added prototypes for things found in libsysv
@
text
@d21 1
a21 1
 *  $Header: /m/cad/h/RCS/externs.h,v 9.6 91/01/12 07:12:26 mike Exp $
d42 2
@


9.6
log
@SGI hack
@
text
@d21 1
a21 1
 *  $Header: /m/cad/h/RCS/externs.h,v 9.5 90/12/07 03:25:14 mike Exp $
d25 17
@


9.5
log
@another one
@
text
@d21 1
a21 1
 *  $Header: /m/cad/h/RCS/externs.h,v 9.4 90/12/05 04:58:43 mike Exp $
d26 2
a27 1
#if __STDC__ && !apollo
@


9.4
log
@Added atof().
@
text
@d21 1
a21 1
 *  $Header: /m/cad/h/RCS/externs.h,v 9.3 90/11/24 01:53:07 mike Exp $
d69 1
@


9.3
log
@Added strcpy, strcat, and mktemp.
@
text
@d21 1
a21 1
 *  $Header: /m/cad/h/RCS/externs.h,v 9.2 89/07/28 03:37:15 mike Exp $
d76 2
@


9.2
log
@Modifications for the Apollo
@
text
@d21 1
a21 1
 *  $Header: externs.h,v 9.1 89/05/19 05:44:04 mike Rel3_5 $
d67 3
@


9.1
log
@Release_3.5
@
text
@d21 1
a21 1
 *  $Header: externs.h,v 1.4 89/04/26 21:33:30 mike Exp $
d26 1
a26 1
#if __STDC__
@


1.4
log
@Changed to not declare exit() on CRAY1 family machines,
to avoid XMP UNICOS 4.0.7 /bin/cc bug!
@
text
@d21 1
a21 1
 *  $Header: externs.h,v 1.3 89/04/24 08:27:19 mike Locked $
@


1.3
log
@sysv/bsd difference
@
text
@d21 1
a21 1
 *  $Header: externs.h,v 1.2 89/04/14 07:22:05 mike Locked $
d36 1
d38 1
@


1.2
log
@Added some more from fblocal.h
@
text
@d21 1
a21 1
 *  $Header: externs.h,v 1.1 89/04/04 02:14:32 mike Locked $
d39 1
d41 3
@


1.1
log
@Initial revision
@
text
@d21 1
a21 1
 *  $Header: pkg.h,v 8.2 89/01/19 19:48:42 mike Exp $
a32 3
extern void	exit();
extern void	sync();

d36 1
d44 2
d58 1
@
