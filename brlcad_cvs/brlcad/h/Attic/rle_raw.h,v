head	11.2;
access;
symbols
	ansi-20040405-merged:11.1
	postmerge-20040405-ansi:11.1
	premerge-20040404-ansi:11.1
	postmerge-autoconf:11.1
	autoconf-freeze:11.1
	premerge-autoconf:11.1
	ansi-20040316-freeze:11.1
	postmerge-20040315-windows:11.1
	premerge-20040315-windows:11.1
	windows-20040315-freeze:11.1
	autoconf-20031203:11.1
	autoconf-20031202:11.1
	autoconf-branch:11.1.0.14
	phong-branch:11.1.0.12
	photonmap-branch:11.1.0.10
	rel-6-1-DP:11.1
	windows-branch:11.1.0.8
	rel-6-0-2:11.1
	ansi-branch:11.1.0.6
	rel-6-0-1-branch:11.1.0.4
	hartley-6-0-post:11.1
	hartley-6-0-pre:11.1
	rel-6-0-1:11.1
	rel-6-0:11.1
	rel-5-4:11.1
	offsite-5-3-pre:11.1
	rel-5-3:11.1
	rel-5-2:11.1
	rel-5-1-branch:11.1.0.2
	rel-5-1:11.1
	rel-5-0:11.1
	rel-5-0-beta:11.1
	rel-4-5:11.1
	ctj-4-5-post:11.1
	ctj-4-5-pre:11.1
	rel-4-4:11.1
	rel-4-0:10.1;
locks; strict;
comment	@ * @;


11.2
date	2004.05.24.04.11.53;	author morrison;	state dead;
branches;
next	11.1;

11.1
date	95.01.04.09.48.40;	author mike;	state Rel4_4;
branches;
next	10.2;

10.2
date	94.08.25.14.55.47;	author gdurf;	state Exp;
branches;
next	10.1;

10.1
date	91.10.12.06.35.35;	author mike;	state Rel4_0;
branches;
next	1.1;

1.1
date	91.01.04.22.06.17;	author butler;	state Exp;
branches;
next	;


desc
@fresh from Utah Raster Toolkit Release 3 patchlevel 2
@


11.2
log
@moved/renamed from top-level h/ to top-level include/
@
text
@/*
 * This software is copyrighted as noted below.  It may be freely copied,
 * modified, and redistributed, provided that the copyright notice is 
 * preserved on all copies.
 * 
 * There is no warranty or other guarantee of fitness for this software,
 * it is provided solely "as is".  Bug reports or fixes may be sent
 * to the author, who may or may not act on them as he desires.
 *
 * You may not include this software in a program or other software product
 * without supplying the source, or without informing the end-user that the 
 * source is available for no extra charge.
 *
 * If you modify this software, you should include a notice giving the
 * name of the person performing the modification, the date of modification,
 * and the reason for such modification.
 */
/* 
 * rle_raw.h - Definitions for rle_getraw/rle_putraw.
 * 
 * Author:	Spencer W. Thomas
 * 		Computer Science Dept.
 * 		University of Utah
 * Date:	Mon Jul  7 1986
 * Copyright (c) 1986, Spencer W. Thomas
 */

#ifndef RLE_RAW_H
#define RLE_RAW_H


/*****************************************************************
 * TAG( rle_op )
 *
 * Struct representing one rle opcode.
 */
#ifndef c_plusplus
    typedef struct rle_op rle_op;
#endif

struct rle_op {
    int opcode;			/* one of RByteDataOp or RRunDataOp */
    int xloc;			/* X location this op starts at */
    int length;			/* length of run or data */
    union {
	rle_pixel * pixels;	/* for ByteData */
	int run_val;		/* for RunData */
    } u;
};

#ifdef USE_PROTOTYPES
    /*****************************************************************
     * TAG( rle_raw_alloc )
     * 
     * Allocate buffer space for use by rle_getraw and rle_putraw.
     */
    extern int
    rle_raw_alloc( rle_hdr *the_hdr, rle_op ***scanp, int **nrawp );

    /*****************************************************************
     * TAG( rle_raw_free )
     *
     * Free buffer space allocated by rle_raw_alloc.
     */
    extern void rle_raw_free( rle_hdr *the_hdr, rle_op **scanp, int *nrawp );

    /*****************************************************************
     * TAG( rle_getraw )
     * 
     * Get a raw scanline from the input file.
     */
    extern unsigned int
    rle_getraw( rle_hdr *the_hdr, rle_op *scanraw[], int nraw[] );

    /*****************************************************************
     * TAG( rle_freeraw )
     * 
     * Free all the pixel arrays in the raw scan struct.
     */
    extern void
    rle_freeraw( rle_hdr * the_hdr, rle_op *scanraw[], int nraw[] );

    /*****************************************************************
     * TAG( rle_putraw )
     *
     * Put raw scanline data to the output file.
     */
    extern void
    rle_putraw( rle_op **scanraw, int *nraw, rle_hdr *the_hdr );

    /*****************************************************************
     * TAG( rle_rawtorow )
     *
     * Convert raw data to "row" type scanline data.
     */
    extern void
    rle_rawtorow( rle_hdr *the_hdr, rle_op **scanraw, int *nraw,
		  rle_pixel **outrows );
#else
    /* Return value decls only.  See above for detailed declarations. */
    /* From rle_getraw.c. */
    extern unsigned int rle_getraw();
    extern void rle_freeraw();
    /* From rle_putraw.c. */
    extern void rle_putraw();
    /* From rle_raw_alc.c. */
    extern int rle_raw_alloc();
    extern void rle_raw_free();
    /* From rle_rawrow.c. */
    extern void rle_rawtorow();

#endif

#endif /* RLE_RAW_H */
@


11.1
log
@Release_4.4
@
text
@@


10.2
log
@Removed extra include
@
text
@@


10.1
log
@Release_4.0
@
text
@a30 1
#include <rle_code.h>
@


1.1
log
@Initial revision
@
text
@@
