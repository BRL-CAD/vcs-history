head	11.18;
access;
symbols
	ansi-20040405-merged:11.15.4.3
	postmerge-20040405-ansi:11.17
	premerge-20040404-ansi:11.16
	postmerge-autoconf:11.16
	autoconf-freeze:11.15.12.2
	premerge-autoconf:11.16
	ansi-20040316-freeze:11.15.4.2
	postmerge-20040315-windows:11.16
	premerge-20040315-windows:11.16
	windows-20040315-freeze:11.15.6.1
	autoconf-20031203:11.15
	autoconf-20031202:11.15
	autoconf-branch:11.15.0.12
	phong-branch:11.15.0.10
	photonmap-branch:11.15.0.8
	rel-6-1-DP:11.15
	windows-branch:11.15.0.6
	rel-6-0-2:11.15
	ansi-branch:11.15.0.4
	rel-6-0-1-branch:11.15.0.2
	hartley-6-0-post:11.15
	hartley-6-0-pre:11.15
	rel-6-0-1:11.15
	rel-6-0:11.15
	rel-5-4:11.13.2.1
	offsite-5-3-pre:11.14
	rel-5-3:11.13.2.1
	rel-5-2:11.13.2.1
	rel-5-1-branch:11.13.0.2
	rel-5-1:11.13
	rel-5-0:11.6
	rel-5-0-beta:11.6
	rel-4-5:11.5
	ctj-4-5-post:11.5
	ctj-4-5-pre:11.5
	rel-4-4:11.1
	rel-4-0:10.1
	rel-3-5:9.1
	rel-3-0:8.1
	rel-2-3:7.1
	rel-2-0:6.1
	rel-1-24:5.1
	rel-1-20:4.2
	rel-1-10:4.1
	rt-2:2.3;
locks; strict;
comment	@ * @;


11.18
date	2004.05.24.04.11.52;	author morrison;	state dead;
branches;
next	11.17;

11.17
date	2004.04.05.09.31.17;	author morrison;	state Exp;
branches;
next	11.16;

11.16
date	2004.02.02.17.39.02;	author morrison;	state Exp;
branches;
next	11.15;

11.15
date	2001.04.05.19.35.06;	author morrison;	state Exp;
branches
	11.15.4.1
	11.15.6.1
	11.15.12.1;
next	11.14;

11.14
date	2000.07.31.20.45.56;	author jra;	state Exp;
branches;
next	11.13;

11.13
date	2000.05.18.01.41.20;	author mike;	state Exp;
branches
	11.13.2.1;
next	11.12;

11.12
date	2000.03.16.13.39.26;	author jra;	state Exp;
branches;
next	11.11;

11.11
date	2000.03.04.04.38.37;	author mike;	state Exp;
branches;
next	11.10;

11.10
date	2000.03.02.14.40.28;	author jra;	state Exp;
branches;
next	11.9;

11.9
date	99.11.08.14.45.57;	author jra;	state Exp;
branches;
next	11.8;

11.8
date	99.10.19.20.51.26;	author jra;	state Exp;
branches;
next	11.7;

11.7
date	99.10.12.13.58.12;	author jra;	state Exp;
branches;
next	11.6;

11.6
date	98.03.19.14.57.14;	author jra;	state Exp;
branches;
next	11.5;

11.5
date	97.06.03.16.03.59;	author pjt;	state Exp;
branches;
next	11.4;

11.4
date	97.05.19.17.17.21;	author butler;	state Exp;
branches;
next	11.3;

11.3
date	97.04.25.05.59.40;	author butler;	state Exp;
branches;
next	11.2;

11.2
date	95.07.28.18.57.44;	author jra;	state Exp;
branches;
next	11.1;

11.1
date	95.01.04.09.48.20;	author mike;	state Rel4_4;
branches;
next	10.5;

10.5
date	94.09.03.02.32.37;	author mike;	state Exp;
branches;
next	10.4;

10.4
date	94.03.11.04.23.24;	author cjohnson;	state Exp;
branches;
next	10.3;

10.3
date	92.11.10.23.11.08;	author mike;	state Exp;
branches;
next	10.2;

10.2
date	92.02.14.15.23.40;	author mmark;	state Exp;
branches;
next	10.1;

10.1
date	91.10.12.06.35.19;	author mike;	state Rel4_0;
branches;
next	9.15;

9.15
date	91.06.29.21.57.28;	author mike;	state Exp;
branches;
next	9.14;

9.14
date	91.06.14.04.30.03;	author mike;	state Exp;
branches;
next	9.13;

9.13
date	91.02.27.22.41.17;	author mike;	state Exp;
branches;
next	9.12;

9.12
date	91.02.27.19.41.49;	author mike;	state Exp;
branches;
next	9.11;

9.11
date	91.02.27.19.23.12;	author mike;	state Exp;
branches;
next	9.10;

9.10
date	91.02.07.01.10.17;	author mike;	state Exp;
branches;
next	9.9;

9.9
date	91.01.14.22.45.03;	author mike;	state Exp;
branches;
next	9.8;

9.8
date	90.12.10.17.18.33;	author cjohnson;	state Exp;
branches;
next	9.7;

9.7
date	90.12.08.01.29.27;	author mike;	state Exp;
branches;
next	9.6;

9.6
date	90.12.07.02.54.51;	author mike;	state Exp;
branches;
next	9.5;

9.5
date	90.12.05.04.58.53;	author mike;	state Exp;
branches;
next	9.4;

9.4
date	90.10.11.02.18.26;	author mike;	state Exp;
branches;
next	9.3;

9.3
date	90.10.05.23.23.59;	author mike;	state Exp;
branches;
next	9.2;

9.2
date	89.12.08.05.25.34;	author mike;	state Exp;
branches;
next	9.1;

9.1
date	89.05.19.05.44.01;	author mike;	state Rel3_5;
branches;
next	8.3;

8.3
date	89.04.11.10.55.39;	author phil;	state Exp;
branches;
next	8.2;

8.2
date	88.12.05.22.17.01;	author mike;	state Exp;
branches;
next	8.1;

8.1
date	88.10.05.00.23.35;	author mike;	state Rel3_0;
branches;
next	7.1;

7.1
date	87.11.02.23.22.24;	author mike;	state Rel;
branches;
next	6.1;

6.1
date	87.07.11.07.48.12;	author mike;	state Rel;
branches;
next	5.1;

5.1
date	87.06.24.21.47.08;	author mike;	state Rel;
branches;
next	4.5;

4.5
date	87.06.01.16.26.21;	author mike;	state Exp;
branches;
next	4.4;

4.4
date	87.05.30.01.48.13;	author mike;	state Exp;
branches;
next	4.3;

4.3
date	87.05.21.23.50.07;	author mike;	state Exp;
branches;
next	4.2;

4.2
date	87.02.12.22.00.14;	author mike;	state Exp;
branches;
next	4.1;

4.1
date	86.12.29.02.45.51;	author mike;	state Rel1;
branches;
next	2.9;

2.9
date	86.09.23.22.04.43;	author mike;	state Exp;
branches;
next	2.8;

2.8
date	86.07.17.23.55.33;	author mike;	state Exp;
branches;
next	2.7;

2.7
date	86.07.11.01.29.38;	author mike;	state Exp;
branches;
next	2.6;

2.6
date	86.03.14.20.32.14;	author mike;	state Exp;
branches;
next	2.5;

2.5
date	86.03.10.20.33.35;	author mike;	state Exp;
branches;
next	2.4;

2.4
date	86.02.17.15.37.01;	author mike;	state Exp;
branches;
next	2.3;

2.3
date	85.06.19.02.50.28;	author mike;	state Exp;
branches;
next	2.2;

2.2
date	85.03.15.04.58.00;	author mike;	state Exp;
branches;
next	2.1;

2.1
date	85.03.12.01.58.22;	author mike;	state Prod;
branches;
next	1.3;

1.3
date	85.02.01.04.03.06;	author mike;	state Exp;
branches;
next	1.2;

1.2
date	85.01.16.01.53.38;	author mike;	state Exp;
branches;
next	1.1;

1.1
date	84.11.16.19.44.51;	author mike;	state Exp;
branches;
next	;

11.13.2.1
date	2000.08.15.14.20.33;	author jra;	state Exp;
branches;
next	;

11.15.4.1
date	2003.01.31.00.11.53;	author morrison;	state Exp;
branches;
next	11.15.4.2;

11.15.4.2
date	2003.02.02.06.12.43;	author morrison;	state Exp;
branches;
next	11.15.4.3;

11.15.4.3
date	2004.03.17.21.16.11;	author morrison;	state Exp;
branches;
next	;

11.15.6.1
date	2004.03.11.23.40.46;	author morrison;	state Exp;
branches;
next	;

11.15.12.1
date	2004.02.12.18.32.35;	author erikg;	state Exp;
branches;
next	11.15.12.2;

11.15.12.2
date	2004.03.15.14.06.10;	author erikg;	state Exp;
branches;
next	;


desc
@GED database
@


11.18
log
@moved/renamed from top-level h/ to top-level include/
@
text
@/*
 *			D B . H
 *
 *		GED Database Format
 *
 * All records are rounded up to have a fixed length;  each such
 * database record is also known as a "granule", and is the smallest
 * unit of database storage.
 *
 * Every granule can be identified by the first byte, which can
 * be accessed by the u_id name.  Note that the u_id field is not
 * valid when writing the actual data for splines.
 *
 * Each granule is read into a "union record", and is then processed
 * based on the value of u_id.  Each granule will have one of these formats:
 *	A Free record
 *	An ID record
 *	A SOLID record
 *	A COMBINATION record, followed by multiple
 *		MEMBER records
 *	An ARS `A' (header) record, followed by multiple
 *		ARS `B' (data) records
 *	A Polygon header record, followed by multiple
 *		Polygon data records
 *      A B-spline solid header record, followed by multiple
 *		B-spline surface records, followed by
 *			d_kv_size[0] floats,
 *			d_kv_size[1] floats,
 *			padded to d_nknots granules, followed by
 *			ctl_size[0]*ctl_size[1]*geom_type floats,
 *			padded to d_nctls granules.
 *
 * The records are stored as binary records corresponding to PDP-11 and
 * VAX C structs, so padding must be supplied explicitly for alignment.
 *
 * For the time being, the representation of the floating point numbers
 * in the database is machine-specific, requiring conversion to ASCII
 * (via g2asc) and back to binary (via asc2g) when exchanging between
 * machines of dissimilar types.  In time, an external representation
 * for floats might be implemented.
 *
 *  Author -
 *	Michael John Muuss
 *  
 *  Source -
 *	SECAD/VLD Computing Consortium, Bldg 394
 *	The U. S. Army Ballistic Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005
 *  
 *  Copyright Notice -
 *	This software is Copyright (C) 1985-2004 by the United States Army.
 *	All rights reserved.
 *
 *  $Header: /n/xoff/cvs/brlcad/h/db.h,v 11.17 2004/04/05 09:31:17 morrison Exp $
 */

#ifndef DB_H
#define DB_H seen

#define NAMESIZE		16

/*
 *  Define the database format for storing binary floating point values.
 *  The ultimate intention is to store everything in 8 bytes, using
 *  IEEE double precision in network order.
 */
#if defined(CRAY)
typedef double dbfloat_t;
#else
typedef float dbfloat_t;
#endif

#define NAMEMOVE(from,to)	(void)strncpy(to, from, NAMESIZE)

#define DB_MINREC	128

#if !defined(RECORD_DEFINED) || !defined(__STDC__)
#define RECORD_DEFINED
union record  {

	char	u_id;		/* To differentiate record types */
#define ID_IDENT	'I'
#define ID_SOLID	'S'
#define ID_COMB		'C'
#define ID_MEMB		'M'
#define ID_ARS_A	'A'
#define ID_ARS_B	'B'
#define ID_FREE		'F'	/* Free record -- ignore */
#define ID_P_HEAD	'P'	/* Polygon header */
#define ID_P_DATA	'Q'	/* Polygon data record */
#define ID_BSOLID	'b'	/* B-spline solid.  multiple surfs */
#define ID_BSURF	'D'     /* d_spline surface header */
#define ID_MATERIAL	'm'	/* Material description record */
#define DBID_STRSOL	's'	/* String solid description */
#define DBID_ARBN	'n'	/* Convex polyhedron with N faces */
#define DBID_PIPE	'w'	/* pipe (wire) solid */
#define DBID_PARTICLE	'p'	/* a particle (lozenge) */
#define DBID_NMG	'N'	/* NMG solid */
#define	DBID_SKETCH	'd'	/* 2D sketch */
#define	DBID_EXTR	'e'	/* solid of extrusion */
#define DBID_CLINE	'c'	/* FASTGEN4 CLINE solid */
#define	DBID_BOT	't'	/* Bag o' triangles */

	char	u_size[DB_MINREC];	/* Minimum record size */

	struct ident  {
		char	i_id;		/* ID_IDENT */
		char	i_units;	/* units */
/* Values of 0..5 are fixed for file compat with Release 2.3 through 4.5 */
#define ID_NO_UNIT	0		/* unspecified */
#define ID_MM_UNIT	1		/* milimeters (preferred) */
#define ID_CM_UNIT	2		/* centimeters */
#define ID_M_UNIT	3		/* meters */
#define ID_IN_UNIT	4		/* inches */
#define ID_FT_UNIT	5		/* feet */
/* These new values 6..9 added in Release 5.0 */
#define ID_UM_UNIT	6		/* micrometers */
#define ID_KM_UNIT	7		/* kilometers */
#define ID_YD_UNIT	8		/* yards */
#define ID_MI_UNIT	9		/* miles */
		char	i_version[6];	/* Version code of Database format */
#define ID_VERSION	"v4"		/* Current Version */
		char	i_title[72];	/* Title or description */
		/* For the future */
		char	i_byteorder;	/* Byte ordering */
#define ID_BY_UNKNOWN	0		/* unknown */
#define ID_BY_VAX	1		/* VAX (Little Endian) */
#define ED_BY_IBM	2		/* IBM (Big Endian) */
		char	i_floattype;	/* Floating point type */
#define ID_FT_UNKNOWN	0		/* unknown */
#define ID_FT_VAX	1		/* VAX */
#define ID_FT_IBM	2		/* IBM */
#define ID_FT_IEEE	3		/* IEEE */
#define ID_FT_CRAY	4		/* Cray */
	} i;

	struct solidrec  {
		char	s_id;		/* ID_SOLID */
		char	s_type;		/* GED primitive type */
/* also TOR 	16	   toroid */
#define GENTGC	18	/* supergeneralized TGC; internal form */
#define GENELL	19	/* ready for drawing ELL:  V,A,B,C */
#define GENARB8	20	/* generalized ARB8:  V, and 7 other vectors */
#define	ARS	21	/* HACK arbitrary triangular-surfaced polyhedron */
#define ARSCONT 22	/* HACK extension record type for ARS solid */
#define HALFSPACE 24	/* half-space */
#define SPLINE   25	/* HACK and trouble */
#define RPC	26	/* Right Parabolic Cylinder */
#define RHC	27	/* Right Parabolic Cylinder */
#define EPA	28	/* Elliptical Paraboloid */
#define EHY	29	/* Elliptical Hyperboloid */
#define ETO	30	/* Elliptical Torus */
#define GRP	31	/* Grip pseudo solid */
#define SUPERELL 32     /* Superquadtratic Ellipsoid */
		char	s_name[NAMESIZE];	/* unique name */
		short	s_cgtype;		/* COMGEOM solid type */
#define RPP	1	/* axis-aligned rectangular parallelopiped */
#define BOX	2	/* arbitrary rectangular parallelopiped */
#define RAW	3	/* right-angle wedge */
#define ARB4	4	/* tetrahedron */
#define ARB5	5	/* pyramid */
#define ARB6	6	/* extruded triangle */
#define ARB7	7	/* weird 7-vertex shape */
#define ARB8	8	/* hexahedron */
#define ELL	9	/* ellipsoid */
#define ELL1	10	/* another ellipsoid definition */
#define SPH	11	/* sphere */
#define RCC	12	/* right circular cylinder */
#define REC	13	/* right elliptic sylinder */
#define TRC	14	/* truncated regular cone */
#define TEC	15	/* truncated elliptic cone */
#define TOR	16	/* toroid */
#define TGC	17	/* truncated general cone */
#define ELLG	23	/* comgeom version of GENELL ellipsoid */
		dbfloat_t	s_values[24];		/* parameters */
#define s_tgc_V	s_values[0]
#define s_tgc_H	s_values[3]
#define s_tgc_A s_values[6]
#define s_tgc_B s_values[9]
#define s_tgc_C s_values[12]
#define s_tgc_D s_values[15]

#define s_tor_V	s_values[0]
#define s_tor_H	s_values[3]
#define s_tor_A	s_values[6]
#define s_tor_B	s_values[9]
#define s_tor_C	s_values[12]
#define s_tor_D	s_values[15]
#define s_tor_E	s_values[18]
#define s_tor_F	s_values[21]

#define s_ell_V s_values[0]
#define s_ell_A s_values[3]
#define s_ell_B s_values[6]
#define s_ell_C s_values[9]

#define s_superell_V s_values[0]
#define s_superell_A s_values[3]
#define s_superell_B s_values[6]
#define s_superell_C s_values[9]
#define s_superell_n s_values[12]
#define s_superell_e s_values[13]

#define s_half_N s_values[0]
#define s_half_d s_values[3]

#define s_grip_C s_values[0]
#define s_grip_N s_values[3]
#define s_grip_m s_values[6]
	}  s;

	struct combination  {
		char	c_id;			/* ID_COMB */
		char	c_flags;		/* `R' if region, else ` ' */
#define DBV4_NON_REGION			' '
#define DBV4_NON_REGION_NULL		'\0'
#define DBV4_REGION			'R'
#define DBV4_REGION_FASTGEN_PLATE	'P'
#define DBV4_REGION_FASTGEN_VOLUME	'V'
		char	c_name[NAMESIZE];	/* unique name */
		short	c_regionid;		/* region ID code */
		short	c_aircode;		/* air space code */
		short	c_pad1;		/* was c_length, DEPRECATED: # of members */
		short	c_pad2;		/* was c_num, DEPRECATED */
		short	c_material;		/* (GIFT) material code */
		short	c_los;			/* equivalent LOS estimate */
		char	c_override;		/* non-0 ==> c_rgb is color */
		unsigned char c_rgb[3];		/* 0..255 color override */
		char	c_matname[32];		/* Reference: Material name */
		char	c_matparm[60];		/* String Material parms */
		char	c_inherit;		/* Inheritance property */
#define DB_INH_LOWER	0			/* Lower nodes override */
#define DB_INH_HIGHER	1			/* Higher nodes override */
	}  c;
	struct member  {
		char	m_id;			/* ID_MEMB */
		char	m_relation;		/* boolean operation */
#define INTERSECT	'+'
#define SUBTRACT	'-'
#define UNION		'u'
		char	m_brname[NAMESIZE];	/* DEPRECATED: name of this branch */
		char	m_instname[NAMESIZE];	/* name of referred-to obj. */
		short	m_pad1;
		dbfloat_t m_mat[16];		/* homogeneous trans matrix */
		short	m_pad2;	/* was m_num, DEPRECATED: COMGEOM solid # ref */
	}  M;

	struct material_rec {		/* whole record is DEPRECATED */
		char	md_id;		/* = ID_MATERIAL color override */
		char	md_flags;	/* UNUSED */
		short	md_low;		/* lower end of region IDs affected */
		short	md_hi;		/* upper end of region IDs affected */
		unsigned char md_r;
		unsigned char md_g;	/* color of these regions:  0..255 */
		unsigned char md_b;
		char	md_material[100]; /* UNUSED now */
	} md;

	struct B_solid {
		char	B_id;		/* = ID_BSOLID */
		char	B_pad;
		char	B_name[NAMESIZE];
		short	B_nsurf;	/* # of surfaces in this solid */
		dbfloat_t B_resolution;	/* resolution of flatness */
	} B;
	struct b_surf {
		char    d_id;		/* = ID_BSURF */
		short   d_order[2];	/* order of u and v directions */
		short   d_kv_size[2];	/* knot vector size  (u and v) */
		short   d_ctl_size[2];  /* control mesh size ( u and v) */
		short   d_geom_type;	/* geom type 3 or 4 */
		short	d_nknots;	/* # granules of knots */
		short	d_nctls;	/* # granules of ctls */
	} d;
	/* 
	 * The b_surf record is followed by
	 * d_nknots granules of knot vectors (first u, then v),
	 * and then by d_nctls granules of control mesh information.
	 * Note that neither of these have an ID field!
	 */

	struct polyhead  {
		char	p_id;		/* = POLY_HEAD */
		char	p_pad1;
		char	p_name[NAMESIZE];
	} p;
	struct polydata  {
		char	q_id;		/* = POLY_DATA */
		char	q_count;	/* # of vertices <= 5 */
		dbfloat_t q_verts[5][3]; /* Actual vertices for this polygon */
		dbfloat_t q_norms[5][3]; /* Normals at each vertex */
	} q;

	struct ars_rec  {
		char	a_id;			/* ID_ARS_A */
		char	a_type;			/* primitive type */
		char	a_name[NAMESIZE];	/* unique name */
		short	a_m;			/* # of curves */
		short	a_n;			/* # of points per curve */
		short	a_curlen;		/* # of granules per curve */
		short	a_totlen;		/* # of granules for ARS */
		/* Remainder are unused, and exist for ?compatability */
		short	a_pad;
		dbfloat_t a_xmax;		/* max x coordinate */
		dbfloat_t a_xmin;		/* min x coordinate */
		dbfloat_t a_ymax;		/* max y coordinate */
		dbfloat_t a_ymin;		/* min y coordinate */
		dbfloat_t a_zmax;		/* max z coordinate */
		dbfloat_t a_zmin;		/* min z coordinate */
	}  a;
	struct ars_ext  {
		char	b_id;			/* ID_ARS_B */
		char	b_type;			/* primitive type */
		short	b_n;			/* current curve # */
		short	b_ngranule;		/* curr. granule for curve */
		short	b_pad;
		dbfloat_t	b_values[8*3];		/* vectors */
	}  b;
	/*
	 *  All records below here are in machine-independent format.
	 */
	struct strsol  {
		char	ss_id;			/* ID_STRSOL */
		char	ss_pad;
		char	ss_name[NAMESIZE];	/* solid name */
#define DB_SS_NGRAN	8			/* All STRSOL's have this many granules */
#define DB_SS_LEN	(DB_SS_NGRAN*DB_MINREC-2*NAMESIZE-2)
		char	ss_keyword[NAMESIZE];	/* solid keyword */
		char	ss_args[4];		/* DB_SS_LEN bytes of str args */
	}  ss;
	struct arbn_rec  {
		char	n_id;			/* DBID_ARBN */
		char	n_pad;
		char	n_name[NAMESIZE];
		unsigned char	n_neqn[4];	/* # equations which follow */
		unsigned char	n_grans[4];	/* # eqn granules to follow */
		/* Note that eqn granules are in "network" byte order */
	}  n;
	/* new pipe solid */
	struct pipewire_rec  {
		char	pwr_id;			/* DBID_PIPE */
		char	pwr_pad;
		char	pwr_name[NAMESIZE];
		unsigned char	pwr_pt_count[4]; /* number of points in this pipe solid */
		unsigned char	pwr_count[4];	/* # additional granules */
		struct exported_pipept  {
			unsigned char	epp_coord[8*3];
			unsigned char	epp_bendradius[8];
			unsigned char	epp_id[8];
			unsigned char	epp_od[8];
		} pwr_data[1];			/* mach indep segments */
	}  pwr;
	struct particle_rec  {
		char	p_id;			/* DBID_PARTICLE */
		char	p_pad;
		char	p_name[NAMESIZE];
		unsigned char	p_v[8*3];	/* vertex (mach indep fmt) */
		unsigned char	p_h[8*3];	/* height vector */
		unsigned char	p_vrad[8];	/* radius at vertex */
		unsigned char	p_hrad[8];	/* radius at end of height */
	}  part;
	/* Version 0 is Release 4.0 to 4.2, Version 1 is Release 4.4 */
	struct nmg_rec  {
		char	N_id;			/* DBID_NMG */
		char	N_version;		/* Version indicator */
		char	N_name[NAMESIZE];
		char	N_pad2[2];		/* neatness */
		unsigned char	N_count[4];	/* # additional granules */
		unsigned char	N_structs[26*4];/* # of structs needed */
	} nmg;

	/* Solid of extrusion */
	struct extr_rec	{
		char	ex_id;			/* DBID_EXTR */
		char	ex_pad;
		char	ex_name[NAMESIZE];
		unsigned char	ex_V[8*3];	/* Vertex */
		unsigned char	ex_h[8*3];	/* extrusion vector */
		unsigned char	ex_uvec[8*3];	/* vector in U parameter direction */
		unsigned char	ex_vvec[8*3];	/* vector in V parameter direction */
		unsigned char	ex_key[4];	/* keypoint index */
		unsigned char	ex_count[4];	/* number of additional granules
						 * (for now, this will always be 1 ) */
	} extr;

	/* sketch */
	struct sketch_rec	{
		char	skt_id;			/* DBID_SKETCH */
		char	skt_pad;
		char	skt_name[NAMESIZE];
		unsigned char	skt_V[8*3];	/* vertex */
		unsigned char	skt_uvec[8*3];	/* vector in U parameter direction */
		unsigned char	skt_vvec[8*3];	/* vector in V parameter direction */
		unsigned char	skt_vert_count[4];	/* number of vertices in sketch */
		unsigned char	skt_seg_count[4];	/* number of segments in sketch */
		unsigned char	skt_count[4];		/* number of additional granules */
	} skt;

	/* FASTGEN4 CLINE element */
	struct cline_rec {
		char	cli_id;			/* DBID_CLINE */
		char	cli_pad;
		char	cli_name[NAMESIZE];
		unsigned char	cli_V[8*3];	/* vertex */
		unsigned char	cli_h[8*3];	/* height vector */
		unsigned char	cli_radius[8];	/* radius */
		unsigned char	cli_thick[8];	/* plate thickness (0 means volume mode) */
	} cli;

	/* Bag o' triangles
	 *  The vertices are stored in an array
	 *  The faces are arrays of three ints each indexing into the array of vertices
	 */
	struct bot_rec {
		char		bot_id;
		char		bot_pad;
		char		bot_name[NAMESIZE];
		unsigned char	bot_nrec[4];		/* number of additional records required */
		unsigned char	bot_orientation;	/* unoriented, ccw, or cw */
		unsigned char	bot_mode;		/* surface or volume */
		unsigned char	bot_err_mode;
		unsigned char	bot_num_verts[4];	/* number of vertices */
		unsigned char	bot_num_triangles[4];	/* number of triangles */
		unsigned char	bot_data[1];		/* the start of the data:
							 * num_verts*3*8 for the vertex floats
							 * num_triangles*3*4 for the triangle ints
							 * if mode is RT_BOT_PLATE, then additional data is:
							 * num_triangles*8 for the face thicknesses
							 * followed by a null terminated hex digit string "face_mode" (bit vector) */
	} bot;

};
#endif /* !RECORD_DEFINED || !__STDC__ */
#define DB_RECORD_NULL	((union record *)0)

/*
 *  Macros for providing function prototypes, regardless of whether
 *  the compiler understands them or not.
 *  It is vital that the argument list given for "args" be enclosed
 *  in parens.
 */
#if __STDC__
#	define	DB_ARGS(args)			args
#else
#	define	DB_ARGS(args)			()
#endif

/* convert dbfloat->fastf_t */
void rt_fastf_float DB_ARGS( (fastf_t *ff, const dbfloat_t *fp, int n) );

/* convert dbfloat mat->fastf_t */
void rt_mat_dbmat DB_ARGS( (fastf_t *ff, const dbfloat_t *dbp) );
void rt_dbmat_mat DB_ARGS( (dbfloat_t *dbp, const fastf_t *ff) );

#endif	/* DB_H */
@


11.17
log
@merge of ansi-6-0-branch into HEAD
@
text
@d54 1
a54 1
 *  $Header$
@


11.16
log
@update copyright to include span through 2003
@
text
@d54 1
a54 1
 *  $Header: /c/CVS/brlcad/h/db.h,v 11.15 2001/04/05 19:35:06 morrison Exp $
d154 1
d196 7
@


11.15
log
@updated SIGNED to signed
updated CONST to const
@
text
@d51 1
a51 1
 *	This software is Copyright (C) 1985 by the United States Army.
d54 1
a54 1
 *  $Header: /c/CVS/brlcad/h/db.h,v 11.14 2000/07/31 20:45:56 jra Exp $
@


11.15.6.1
log
@sync to HEAD...
@
text
@d51 1
a51 1
 *	This software is Copyright (C) 1985-2004 by the United States Army.
d54 1
a54 1
 *  $Header: /n/cad/c/CVS/brlcad/h/db.h,v 11.16 2004/02/02 17:39:02 morrison Exp $
@


11.15.12.1
log
@merge from HEAD
@
text
@d51 1
a51 1
 *	This software is Copyright (C) 1985-2004 by the United States Army.
d54 1
a54 1
 *  $Header: /c/CVS/brlcad/h/db.h,v 11.16 2004/02/02 17:39:02 morrison Exp $
@


11.15.12.2
log
@merge from head
@
text
@d54 1
a54 1
 *  $Header: /c/CVS/brlcad/h/db.h,v 11.15.12.1 2004/02/12 18:32:35 erikg Exp $
@


11.15.4.1
log
@Added initial stubbed support for a new primitive -- a superquadric ellipsoid.  The primitive may be created in mged, but it has the same guts as the ellipsoid
@
text
@d54 1
a54 1
 *  $Header: /c/CVS/brlcad/h/db.h,v 11.15 2001/04/05 19:35:06 morrison Exp $
a153 1
#define SUPERELL 32     /* Superquadtratic Ellipsoid */
@


11.15.4.2
log
@Added the superell specific options and database support for <n,e>, the north-south and east-west curvature params.
@
text
@d54 1
a54 1
 *  $Header: /c/CVS/brlcad/h/db.h,v 11.15.4.1 2003/01/31 00:11:53 morrison Exp $
a195 7

#define s_superell_V s_values[0]
#define s_superell_A s_values[3]
#define s_superell_B s_values[6]
#define s_superell_C s_values[9]
#define s_superell_n s_values[12]
#define s_superell_e s_values[13]
@


11.15.4.3
log
@sync branch with HEAD
@
text
@d51 1
a51 1
 *	This software is Copyright (C) 1985-2004 by the United States Army.
d54 1
a54 1
 *  $Header$
@


11.14
log
@Added definition for DBV4_NON_REGION_NULL to handle some old
models that had '\0' as the c_flag for non-regions
@
text
@d54 1
a54 1
 *  $Header: /c/CVS/brlcad/h/db.h,v 11.13 2000/05/18 01:41:20 mike Exp $
d441 1
a441 1
void rt_fastf_float DB_ARGS( (fastf_t *ff, CONST dbfloat_t *fp, int n) );
d444 2
a445 2
void rt_mat_dbmat DB_ARGS( (fastf_t *ff, CONST dbfloat_t *dbp) );
void rt_dbmat_mat DB_ARGS( (dbfloat_t *dbp, CONST fastf_t *ff) );
@


11.13
log
@
Corrected units error introduced in version 11.5 and shipped with Release 5.0.
Existing value for "mm" remains unchanged.
Values of um, cm, m, in, and ft were scrambled in Release 5.0
New Release 5.0 values of yd and mi remain unchanged.
@
text
@d54 1
a54 1
 *  $Header: /c/CVS/brlcad/h/db.h,v 11.12 2000/03/16 13:39:26 jra Exp $
d208 1
@


11.13.2.1
log
@Added define for DBV4_NON_REGION_NULL
@
text
@d54 1
a54 1
 *  $Header: /c/CVS/brlcad/h/db.h,v 11.13 2000/05/18 01:41:20 mike Exp $
a207 1
#define DBV4_NON_REGION_NULL		'\0'
@


11.12
log
@Sketch solid can only have one curve now
@
text
@d54 1
a54 1
 *  $Header: /c/CVS/brlcad/h/db.h,v 11.11 2000/03/04 04:38:37 mike Exp $
d109 1
d111 8
a118 7
#define ID_MM_UNIT	1		/* millimeters (preferred) */
#define ID_UM_UNIT	2		/* micrometers */
#define ID_CM_UNIT	3		/* centimeters */
#define ID_M_UNIT	4		/* meters */
#define ID_KM_UNIT	5		/* kilometers */
#define ID_IN_UNIT	6		/* inches */
#define ID_FT_UNIT	7		/* feet */
@


11.11
log
@
Added FASTGEN support
@
text
@d54 1
a54 1
 *  $Header: /c/CVS/brlcad/h/db.h,v 11.10 2000/03/02 14:40:28 jra Exp $
a383 1
		unsigned char	skt_curve_count[4];	/* number of curves in sketch */
@


11.10
log
@Eliminated FGP solids and added CLINE solid
@
text
@d54 1
a54 1
 *  $Header: /c/CVS/brlcad/h/db.h,v 11.9 1999/11/08 14:45:57 jra Exp $
d205 4
@


11.9
log
@
Added a bit to the BOT solid.
@
text
@d54 1
a54 1
 *  $Header: /c/CVS/brlcad/h/db.h,v 11.8 1999/10/19 20:51:26 jra Exp $
d101 1
a101 1
#define DBID_FGP	'f'	/* FASTGEN4 plate mode solid */
d385 10
a394 11
	/* FASTGEN4 plate mode solid */
	struct fgp_rec {
		char	fgp_id;			/* DBID_FGP */
		char	fgp_pad;
		char	fgp_name[NAMESIZE];		/* name of this solid */
		char	fgp_ref_sol[NAMESIZE];		/* referenced solid name */
		unsigned char	fgp_thickness[8];	/* thickness of plate */
		unsigned char	fgp_mode[4];		/* mode: 1 -> thickness is centered no hit point
							 *       2 -> thickness extends in ray direction from hit point
							 */
	} fgp;
@


11.8
log
@Added basics for "Bag O' Triangles".
@
text
@d54 1
a54 1
 *  $Header: /c/CVS/brlcad/h/db.h,v 11.7 1999/10/12 13:58:12 jra Exp $
d405 1
d413 4
a416 1
							 * num_triangles*3*4 for the triangle ints */
@


11.7
log
@Added fgp solid (FastGen Plate mode)
@
text
@d54 1
a54 1
 *  $Header: /c/CVS/brlcad/h/db.h,v 11.6 1998/03/19 14:57:14 jra Exp $
d102 1
d396 19
@


11.6
log
@added sketch and extrusion.
@
text
@d54 1
a54 1
 *  $Header: /m/cad/h/RCS/db.h,v 11.5 1997/06/03 16:03:59 pjt Exp jra $
d101 1
d383 12
@


11.5
log
@Added units um, km, yd, mi, and other minor improvements
@
text
@d54 1
a54 1
 *  $Header: /m/cad/h/RCS/db.h,v 11.4 1997/05/19 17:17:21 butler Exp $
d99 2
d354 28
@


11.4
log
@removed fBm solid
@
text
@d54 1
a54 1
 *  $Header: /m/cad/h/RCS/db.h,v 11.3 1997/04/25 05:59:40 butler Exp butler $
d106 9
a114 5
#define ID_MM_UNIT	1		/* milimeters (preferred) */
#define ID_CM_UNIT	2		/* centimeters */
#define ID_M_UNIT	3		/* meters */
#define ID_IN_UNIT	4		/* inches */
#define ID_FT_UNIT	5		/* feet */
@


11.3
log
@added g_fbm.c support
@
text
@d54 1
a54 1
 *  $Header: /m/cad/h/RCS/db.h,v 11.2 1995/07/28 18:57:44 jra Exp butler $
a143 1
#define FBM	32	/* fBm space sphere */
@


11.2
log
@Changed definition of pipe solid.
@
text
@d54 1
a54 1
 *  $Header: /m/cad/h/RCS/db.h,v 11.1 1995/01/04 09:48:20 mike Rel4_4 jra $
d144 1
@


11.1
log
@Release_4.4
@
text
@d54 1
a54 1
 *  $Header: /m/cad/h/RCS/db.h,v 10.5 94/09/03 02:32:37 mike Exp $
d316 14
a329 13
	struct pipe_wire_rec  {
		char	pw_id;			/* DBID_PIPE */
		char	pw_pad;
		char	pw_name[NAMESIZE];
		unsigned char	pw_count[4];	/* # additional granules */
		struct exported_pipeseg  {
			unsigned char	eps_type[4];
			unsigned char	eps_start[8*3];
			unsigned char	eps_bendcenter[8*3];
			unsigned char	eps_id[8];
			unsigned char	eps_od[8];
		} pw_data[1];			/* mach indep segments */
	}  pw;
@


10.5
log
@Changed N_pad to N_version for NMG.
@
text
@d54 1
a54 1
 *  $Header: /m/cad/h/RCS/db.h,v 10.4 94/03/11 04:23:24 cjohnson Exp Locker: mike $
@


10.4
log
@Add grip pseudo solid.
@
text
@d54 1
a54 1
 *  $Header: /m/cad/h/RCS/db.h,v 10.4 1993/10/22 20:10:12 cjohnson Exp $
d338 1
d341 1
a341 1
		char	N_pad;
@


10.3
log
@External format stuff is unsigned char, not signed char.
@
text
@d54 1
a54 1
 *  $Header: /m/cad/h/RCS/db.h,v 10.2 92/02/14 15:23:40 mmark Exp Locker: mike $
d143 1
d188 4
@


10.2
log
@added erim solids
@
text
@d54 1
a54 1
 *  $Header: /m/cad/h/RCS/db.h,v 9.15 91/06/29 21:57:28 mike Exp $
d307 2
a308 2
		char	n_neqn[4];		/* # equations which follow */
		char	n_grans[4];		/* # eqn granules to follow */
d315 1
a315 1
		char	pw_count[4];		/* # additional granules */
d317 5
a321 5
			char		eps_type[4];
			char		eps_start[8*3];
			char		eps_bendcenter[8*3];
			char		eps_id[8];
			char		eps_od[8];
d328 4
a331 4
		char	p_v[8*3];		/* vertex (mach indep fmt) */
		char	p_h[8*3];		/* height vector */
		char	p_vrad[8];		/* radius at vertex */
		char	p_hrad[8];		/* radius at end of height */
d338 2
a339 2
		char	N_count[4];		/* # additional granules */
		char	N_structs[26*4];	/* # of structs needed */
@


10.1
log
@Release_4.0
@
text
@d98 1
a98 1
#define DBID_NMG	'N'	/* An NMG solid */
d138 5
@


9.15
log
@ANSI lint
@
text
@d54 1
a54 1
 *  $Header: /m/cad/h/RCS/db.h,v 9.14 91/06/14 04:30:03 mike Exp $
@


9.14
log
@Changed string solid to have more room
@
text
@d54 1
a54 1
 *  $Header: /m/cad/h/RCS/db.h,v 9.13 91/02/27 22:41:17 mike Exp $
d353 1
a353 1
void rt_fastf_float DB_ARGS( (fastf_t *ff, dbfloat_t *fp, int n) );
d356 2
a357 2
void rt_mat_dbmat DB_ARGS( (fastf_t *ff, dbfloat_t *dbp) );
void rt_dbmat_mat DB_ARGS( (dbfloat_t *dbp, fastf_t *ff) );
@


9.13
log
@Added 2 bytes of pad to NMG structure, for neatness.
@
text
@d54 1
a54 1
 *  $Header: /m/cad/h/RCS/db.h,v 9.13 91/02/27 22:39:54 mike Exp $
d293 4
a296 2
#define DB_SS_LEN	(DB_MINREC-NAMESIZE-2)
		char	ss_str[DB_SS_LEN];	/* string keyword & values */
@


9.12
log
@Changed pipe so pw_count is # of additional granules
@
text
@d54 1
a54 1
 *  $Header: /m/cad/h/RCS/db.h,v 9.11 91/02/27 19:23:12 mike Exp $
d330 1
@


9.11
log
@Changed arbn, pipe, and nmg records to be completely machine independent.
@
text
@d54 1
a54 1
 *  $Header: /m/cad/h/RCS/db.h,v 9.10 91/02/07 01:10:17 mike Exp $
d308 1
a308 1
		char	pw_count[4];		/* # granules used */
@


9.10
log
@Added DBID_NMG
@
text
@d54 1
a54 1
 *  $Header: /m/cad/h/RCS/db.h,v 9.10 91/02/06 23:47:56 mike Exp $
d286 3
d300 2
a301 2
		int	n_neqn;			/* # equations which follow */
		int	n_grans;		/* # eqn granules to follow */
d308 1
a308 1
		int	pw_count;		/* # granules used */
d330 2
a331 2
		int	N_count;		/* # additional granules */
		char	N_structs[22*4+16];	/* # of structs needed */
@


9.9
log
@STRSOL got DBID prefix
@
text
@d54 1
a54 1
 *  $Header: /m/cad/h/RCS/db.h,v 9.8 90/12/10 17:18:33 cjohnson Exp $
d98 1
d323 7
@


9.8
log
@Add tests and defines for RECORD_DEFINED for union record
@
text
@d54 1
a54 1
 *  $Header: /m/cad/h/RCS/db.h,v 9.7 90/12/08 01:29:27 mike Exp $
d94 1
a94 1
#define ID_STRSOL	's'	/* String solid description */
@


9.7
log
@Moved rt_fastf_float, rt_mat_dbmat, rt_dbmat_mat
from raytrace.h to db.h, to avoid entanglements with dbfloat_t.
@
text
@d54 1
a54 1
 *  $Header: /m/cad/h/RCS/db.h,v 9.6 90/12/07 02:54:51 mike Exp $
d77 2
d323 1
@


9.6
log
@Expunged c_length, c_num, and m_num fields.
@
text
@d54 1
a54 1
 *  $Header: /m/cad/h/RCS/db.h,v 9.5 90/12/05 04:58:53 mike Exp $
d321 20
@


9.5
log
@Added warnings about deprecated structure elements
@
text
@d54 1
a54 1
 *  $Header: /m/cad/h/RCS/db.h,v 9.4 90/10/11 02:18:26 mike Exp $
d187 2
a188 2
		short	c_length;		/* # of members (depricated) */
		short	c_num;			/* DEPRECATED */
d209 1
a209 1
		short	m_num;			/* DEPRECATED: COMGEOM solid # ref */
@


9.4
log
@Added pipes and particles
@
text
@d54 1
a54 1
 *  $Header: /m/cad/h/RCS/db.h,v 9.3 90/10/05 23:23:59 mike Exp $
d205 1
a205 1
		char	m_brname[NAMESIZE];	/* name of this branch */
d209 1
a209 1
		short	m_num;			/* COMGEOM solid # ref */
d212 1
a212 1
	struct material_rec {
@


9.3
log
@Eliminated extern for strncpy.
@
text
@d54 1
a54 1
 *  $Header: /m/cad/h/RCS/db.h,v 9.2 89/12/08 05:25:34 mike Exp $
d94 2
d298 22
@


9.2
log
@Added support for ARBN
@
text
@d54 1
a54 1
 *  $Header: db.h,v 9.1 89/05/19 05:44:01 mike Locked $
a73 1
extern char *strncpy();
@


9.1
log
@Release_3.5
@
text
@d54 1
a54 1
 *  $Header: db.h,v 8.3 89/04/11 10:55:39 phil Exp $
d94 1
d289 8
@


8.3
log
@removed nested if (just for linting purposes)
@
text
@d54 1
a54 1
 *  $Header: db.h,v 8.2 88/12/05 22:17:01 phil Locked $
@


8.2
log
@Added "strsol" solid.
@
text
@d54 1
a54 1
 *  $Header: db.h,v 8.1 88/10/05 00:23:35 mike Rel3_0 $
d125 1
a125 1
/* also TOR 	16	/* toroid */
@


8.1
log
@Release_3.0
@
text
@d54 1
a54 1
 *  $Header: db.h,v 7.1 87/11/02 23:22:24 mike Rel $
d61 9
d71 1
d93 1
d98 1
a98 1
		char	i_id;		/* I */
d123 1
a123 1
		char	s_id;		/* = SOLID */
a130 1
#define SPLINE   22	/* HACK and trouble */
d132 1
d180 1
a180 1
		char	c_id;		/* C */
d198 1
a198 1
		char	m_id;		/* M */
d257 1
a257 1
		char	a_id;		/* A */
d273 2
a274 2
	struct ars_ext  {			/* one "granule" */
		char	b_id;		/* B */
d281 7
d290 1
a290 1
#endif DB_H
@


7.1
log
@Release 2.3
@
text
@d54 1
a54 1
 *  $Header: db.h,v 6.1 87/07/11 07:48:12 mike Rel $
@


6.1
log
@Release 2.0
@
text
@d54 1
a54 1
 *  $Header: db.h,v 5.1 87/06/24 21:47:08 mike Rel $
@


5.1
log
@Release 1.24
@
text
@d54 1
a54 1
 *  $Header: db.h,v 4.5 87/06/01 16:26:21 mike Exp $
@


4.5
log
@Made Alliants, SUNs, and SGIs use 128 byte granules like everbody else..
@
text
@d54 1
a54 1
 *  $Header: db.h,v 4.4 87/05/30 01:48:13 mike Locked $
@


4.4
log
@Codified existing practice with database granule lengths.
@
text
@d54 1
a54 1
 *  $Header: db.h,v 4.3 87/05/21 23:50:07 mike Locked $
a65 3
#if defined(sgi) || defined(alliant) || defined(sun)
#define DB_MINREC	126
#else
a66 1
#endif
@


4.3
log
@Put back minimum record size, to provide allignment
between Sun, Alliant, and SGI.
@
text
@d54 1
a54 1
 *  $Header: db.h,v 4.2 87/02/12 22:00:14 mike Locked $
d66 5
d88 1
a88 1
	char	u_size[126];	/* Minimum record size */
d97 2
a98 2
#define ID_IN_UNIT	4		/* inches (deprecated) */
#define ID_FT_UNIT	5		/* feet (deprecated) */
d102 11
d137 1
a137 1
#define ELL1	10	/* ? another ellipsoid ? */
d178 1
a178 1
		short	c_length;		/* # of members */
d186 3
d257 1
@


4.2
log
@Release 1.20 -- First Formal Release
@
text
@d54 1
a54 1
 *  $Header: db.h,v 4.1 86/12/29 02:45:51 mike Rel1 $
d82 2
@


4.1
log
@BRL CAD Distribution Release 1.10
@
text
@d54 1
a54 1
 *  $Header: db.h,v 2.9 86/09/23 22:04:43 mike Exp $
@


2.9
log
@Defined all database records as dbfloat_t.
@
text
@d54 1
a54 1
 *  $Header: db.h,v 2.8 86/07/17 23:55:33 mike Exp $
@


2.8
log
@Clarified version, with fixed HALFSPACE entry.
@
text
@d54 1
a54 1
 *  $Header: db.h,v 2.7 86/07/11 01:29:38 mike Exp $
d61 2
a82 2
	char	u_size[128];	/* Total record size */

d128 1
a128 1
		float	s_values[24];		/* parameters */
d178 1
a178 1
		float	m_mat[16];		/* homogeneous trans matrix */
a179 1
		short	m_pad2;
d198 1
a198 1
		float   B_resolution;	/* resolution of flatness */
d224 2
a225 2
		float	q_verts[5][3];	/* Actual vertices for this polygon */
		float	q_norms[5][3];	/* Normals at each vertex */
d237 6
a242 6
		float	a_xmax;			/* max x coordinate */
		float	a_xmin;			/* min x coordinate */
		float	a_ymax;			/* max y coordinate */
		float	a_ymin;			/* min y coordinate */
		float	a_zmax;			/* max z coordinate */
		float	a_zmin;			/* min z coordinate */
d250 1
a250 1
		float	b_values[8*3];		/* vectors */
@


2.7
log
@Minor cleanups inspired by the Cray
@
text
@d6 3
a8 11
 *  Author -
 *	Michael John Muuss
 *  
 *  Source -
 *	SECAD/VLD Computing Consortium, Bldg 394
 *	The U. S. Army Ballistic Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005
 *  
 *  Copyright Notice -
 *	This software is Copyright (C) 1985 by the United States Army.
 *	All rights reserved.
d10 3
a12 12
 *  $Header: db.h,v 2.6 86/03/14 20:32:14 mike Exp $
 */

#ifndef DB_H
#define DB_H seen

#define NAMESIZE		16
#define NAMEMOVE(from,to)	(void)strncpy(to, from, NAMESIZE)
extern char *strncpy();

/*
 *		FILE FORMAT
d14 2
a15 1
 * All records are of fixed length, and have one of these formats:
d35 20
d56 9
d66 1
d80 1
d82 1
a82 44
	struct material_rec {
		char	md_id;		/* = ID_MATERIAL color override */
		char	md_flags;	/* UNUSED */
		short	md_low;		/* lower end of region IDs affected */
		short	md_hi;		/* upper end of region IDs affected */
		unsigned char md_r;
		unsigned char md_g;	/* color of these regions:  0..255 */
		unsigned char md_b;
		char	md_material[100]; /* UNUSED now */
	} md;
	struct B_solid {
		char	B_id;		/* = ID_BSOLID */
		char	B_pad;
		char	B_name[NAMESIZE];
		short	B_nsurf;	/* # of surfaces in this solid */
		float   B_resolution;	/* resolution of flatness */
	} B;
	struct b_surf {
		char    d_id;		/* = ID_BSURF */
		short   d_order[2];	/* order of u and v directions */
		short   d_kv_size[2];	/* knot vector size  (u and v) */
		short   d_ctl_size[2];  /* control mesh size ( u and v) */
		short   d_geom_type;	/* geom type 3 or 4 */
		short	d_nknots;	/* # granules of knots */
		short	d_nctls;	/* # granules of ctls */
	} d;
	/* 
	 * The b_surf_head record is followed by
	 * d_nknots granules of knot vectors (first u, then v),
	 * and then by d_nctls granules of control mesh information.
	 * Note that neither of these have an ID field!
	 */
#define SPLINE   22
	struct polyhead  {
		char	p_id;		/* = POLY_HEAD */
		char	p_pad1;
		char	p_name[NAMESIZE];
	} p;
	struct polydata  {
		char	q_id;		/* = POLY_DATA */
		char	q_count;	/* # of vertices <= 5 */
		float	q_verts[5][3];	/* Actual vertices for this polygon */
		float	q_norms[5][3];	/* Normals at each vertex */
	} q;
d96 1
d104 4
a107 1
#define HALFSPACE 21	/* half-space */
d149 3
d153 1
d182 47
a231 1
#define	ARS	21	/* arbitrary triangular-surfaced polyhedron */
a247 1
#define ARSCONT 22	/* extension record type for ARS solid */
@


2.6
log
@Revised spline format.
@
text
@d18 1
a18 1
 *  $Header: db.h,v 2.6 86/03/11 18:23:04 mike Exp $
d21 3
d229 2
@


2.5
log
@Minor shuffles to make the transition easier.
@
text
@d18 1
a18 1
 *  $Header: db.h,v 2.4 86/02/17 15:37:01 mike Exp $
d29 1
d31 14
a44 11
 *	A SOLID description
 *	A COMBINATION description (1 header, 1 member)
 *	A COMBINATION extension (2 members)
 *	An ARS `A' (header) record
 *	An ARS `B' (data) record
 *	A free record
 *	A Polygon header record
 *	A Polygon data record
 *      A B-spline header record
 *      A B-spline knot vector record
 *      A B-spline control mesh record
d60 2
a61 3
#define ID_B_SPL_HEAD   'D'     /* B-spline header. (d is for d_spline) */
#define ID_B_SPL_KV     'K'     /* B-spline knot vector */
#define ID_B_SPL_CTL    'L'     /* B-spline control mesh */
d74 9
a82 4
	struct b_spline_head {
		char    d_id;		/* = B_SPLINE_HEAD */
		char    d_pad1;
		char    d_name[NAMESIZE];
a85 1
		float   d_resolution;	/* resolution of flatness */
d87 2
a88 7
		int     d_totlen;	/* number of total records */
		float   d_minx;		/* bounding box values */
		float   d_miny;
		float   d_minz;
		float   d_maxx;
		float   d_maxy;
		float   d_maxz;
d90 6
a95 2
	struct b_spline_kv {
		char    k_id;		/* = B_SPLINE_KV */
a96 7
		char    k_dir;		/* direction of knots */
		float   k_values[30];   /* knot vector values */
	} k;
	struct b_spline_ctl {
		char    l_id;		/* = B_SPLINE_CTL */
		float   l_pts[ 8 * 3 ];    /* homogeneous points */
	} l; 
@


2.4
log
@Deleted md_material, clarified role of M_MATERIAL record
as a region-ID driven color override mechanism.
Deleted c_num field from COMBINATION record, and added
strings for material name reference, parameters, and color override.
@
text
@d18 1
a18 1
 *  $Header: db.h,v 2.3 85/06/19 02:50:28 mike Exp $
d63 1
a63 1
		char	md_pad;
d69 1
d179 1
a179 1
		short	c_pad;
@


2.3
log
@Additional define from Keith for ELLG comgeom type.
@
text
@d18 1
a18 1
 *  $Header: db.h,v 2.2 85/03/15 04:58:00 mike Exp $
d62 4
a65 4
		char	md_id;		/* = ID_MATERIAL */
		char	md_flags;
		short	md_low;		/* lower end of this material ID */
		short	md_hi;		/* upper end of this material ID */
d67 1
a67 1
		unsigned char md_g;	/* color of this material 0..255 */
a68 1
		char	md_material[100]; /* "handle" in material database */
d178 2
a179 2
		short	c_num;			/* COMGEOM region # */
		short	c_material;		/* material code */
d181 4
@


2.2
log
@Corrected RGB to be unsigned chars.
@
text
@d18 1
a18 1
 *  $Header: db.h,v 2.1 85/03/12 01:58:22 mike Prod $
d149 1
@


2.1
log
@First production version
@
text
@d18 1
a18 1
 *  $Header$
d66 3
a68 3
		char	md_r;		/* color of this material */
		char	md_g;
		char	md_b;
@


1.3
log
@v4, due to implementation of global/local units structure.
Database units are all Metric, in MM.
@
text
@d6 11
a16 1
 *	U. S. Army Ballistic Research Laboratory
d18 1
a18 1
 * This header file describes the object file structure.
d28 1
a28 1
 * All records are of fixed length, and are composed of one of several formats:
d38 3
d49 2
a50 2
#define ID_COMB	'C'
#define ID_MEMB	'M'
d56 4
d61 37
@


1.2
log
@comments
@
text
@d65 1
a65 1
#define ID_VERSION	"v3"		/* Current Version */
@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
 *			3 D . H
d18 1
a18 1
 * All records are 128 bytes long, and are composed of one of several formats:
@
