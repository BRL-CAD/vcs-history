head	11.8;
access;
symbols
	ansi-20040405-merged:11.6.2.1
	postmerge-20040405-ansi:11.7
	premerge-20040404-ansi:11.6
	postmerge-autoconf:11.6
	autoconf-freeze:11.6
	premerge-autoconf:11.6
	ansi-20040316-freeze:11.6.2.1
	postmerge-20040315-windows:11.6
	premerge-20040315-windows:11.6
	windows-20040315-freeze:11.6
	autoconf-20031203:11.6
	autoconf-20031202:11.6
	autoconf-branch:11.6.0.10
	phong-branch:11.6.0.8
	photonmap-branch:11.6.0.6
	rel-6-1-DP:11.6
	windows-branch:11.6.0.4
	rel-6-0-2:11.4
	ansi-branch:11.6.0.2
	rel-6-0-1-branch:11.4.0.2
	hartley-6-0-post:11.5
	hartley-6-0-pre:11.4
	rel-6-0-1:11.4
	rel-6-0:11.4
	rel-5-4:11.3
	offsite-5-3-pre:11.4
	rel-5-3:11.3
	rel-5-2:11.3
	rel-5-1-branch:11.3.0.2
	rel-5-1:11.3
	rel-5-0:11.3
	rel-5-0-beta:11.3
	rel-4-5:11.3
	ctj-4-5-post:11.3
	ctj-4-5-pre:11.3
	rel-4-4:11.1
	rel-4-0:10.1
	rel-3-5:9.1
	rel-3-0:8.1
	rel-2-3:7.1
	rel-2-0:6.1
	rel-1-24:5.1
	rel-1-20:4.4
	rel-1-10:4.1;
locks; strict;
comment	@ * @;


11.8
date	2004.05.24.04.11.53;	author morrison;	state dead;
branches;
next	11.7;

11.7
date	2004.04.05.09.31.17;	author morrison;	state Exp;
branches;
next	11.6;

11.6
date	2002.08.20.17.07.29;	author jra;	state Exp;
branches
	11.6.2.1;
next	11.5;

11.5
date	2002.08.15.20.54.42;	author hartley;	state Exp;
branches;
next	11.4;

11.4
date	2000.07.12.01.34.19;	author cjohnson;	state Exp;
branches;
next	11.3;

11.3
date	97.07.01.19.35.48;	author bparker;	state Exp;
branches;
next	11.2;

11.2
date	97.07.01.18.38.42;	author mike;	state Exp;
branches;
next	11.1;

11.1
date	95.01.04.09.48.29;	author mike;	state Rel4_4;
branches;
next	10.2;

10.2
date	94.11.04.04.54.44;	author mike;	state Exp;
branches;
next	10.1;

10.1
date	91.10.12.06.35.28;	author mike;	state Rel4_0;
branches;
next	9.1;

9.1
date	89.05.19.05.44.17;	author mike;	state Rel3_5;
branches;
next	8.3;

8.3
date	89.04.28.05.16.55;	author mike;	state Exp;
branches;
next	8.2;

8.2
date	89.01.19.19.48.42;	author mike;	state Exp;
branches;
next	8.1;

8.1
date	88.10.05.00.24.26;	author mike;	state Rel3_0;
branches;
next	7.2;

7.2
date	88.05.13.21.46.33;	author mike;	state Exp;
branches;
next	7.1;

7.1
date	87.11.02.23.22.36;	author mike;	state Rel;
branches;
next	6.1;

6.1
date	87.07.11.07.48.23;	author mike;	state Rel;
branches;
next	5.1;

5.1
date	87.06.24.21.47.20;	author mike;	state Rel;
branches;
next	4.5;

4.5
date	87.06.24.20.32.34;	author mike;	state Exp;
branches;
next	4.4;

4.4
date	87.02.12.22.00.24;	author mike;	state Exp;
branches;
next	4.3;

4.3
date	87.02.11.04.46.44;	author mike;	state Exp;
branches;
next	4.2;

4.2
date	87.02.11.03.42.06;	author mike;	state Exp;
branches;
next	4.1;

4.1
date	86.12.29.02.46.03;	author mike;	state Rel1;
branches;
next	1.9;

1.9
date	86.12.19.01.58.13;	author phil;	state Exp;
branches;
next	1.8;

1.8
date	86.11.14.21.51.08;	author phil;	state Exp;
branches;
next	1.7;

1.7
date	86.10.24.04.39.03;	author phil;	state Exp;
branches;
next	1.6;

1.6
date	86.10.24.03.41.51;	author phil;	state Exp;
branches;
next	1.5;

1.5
date	86.10.22.22.02.07;	author phil;	state Exp;
branches;
next	1.4;

1.4
date	86.10.22.20.36.20;	author phil;	state Exp;
branches;
next	1.3;

1.3
date	86.10.22.02.09.20;	author phil;	state Exp;
branches;
next	1.2;

1.2
date	86.10.14.21.59.05;	author phil;	state Exp;
branches;
next	1.1;

1.1
date	86.10.02.02.16.09;	author mike;	state Exp;
branches;
next	;

11.6.2.1
date	2002.09.19.18.00.57;	author morrison;	state Exp;
branches;
next	;


desc
@PKG headers
@


11.8
log
@moved/renamed from top-level h/ to top-level include/
@
text
@/*
 *  			P K G . H
 *
 *  Data structures and manifest constants for use with the PKG library.
 *  
 *  Authors -
 *	Michael John Muuss
 *	Charles M. Kennedy
 *	Phillip Dykstra
 *
 *  Source -
 *	The U. S. Army Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5068  USA
 *  
 *  Distribution Status -
 *	Public Domain, Distribution Unlimited.
 */
#ifndef lint
#define PKG_H_VERSION "@@(#)$Header: /n/xoff/cvs/brlcad/h/pkg.h,v 11.7 2004/04/05 09:31:17 morrison Exp $ (ARL)"
#endif

#ifndef PKG_H_SEENYET
#define PKG_H_SEENYET

struct pkg_switch {
	unsigned short	pks_type;	/* Type code */
	void	(*pks_handler)();	/* Message Handler */
	char	*pks_title;		/* Description of message type */
};

/*
 *  Format of the message header as it is transmitted over the network
 *  connection.  Internet network order is used.
 *  User Code should access pkc_len and pkc_type rather than
 *  looking into the header directly.
 *  Users should never need to know what this header looks like.
 */
#define PKG_MAGIC	0x41FE
struct pkg_header {
	unsigned char	pkh_magic[2];		/* Ident */
	unsigned char	pkh_type[2];		/* Message Type */
	unsigned char	pkh_len[4];		/* Byte count of remainder */
};

#define	PKG_STREAMLEN	(32*1024)
struct pkg_conn {
	int		pkc_fd;		/* TCP connection fd */
	struct pkg_switch *pkc_switch;	/* Array of message handlers */
	void		(*pkc_errlog)(); /* Error message logger */
	struct pkg_header pkc_hdr;	/* hdr of cur msg */
	long		pkc_len;	/* pkg_len, in host order */
	unsigned short	pkc_type;	/* pkg_type, in host order */
	/* OUTPUT BUFFER */
	char		pkc_stream[PKG_STREAMLEN]; /* output stream */
	int		pkc_magic;	/* for validating pointers */
	int		pkc_strpos;	/* index into stream buffer */
	/* FIRST LEVEL INPUT BUFFER */
	char		*pkc_inbuf;	/* input stream buffer */
	int		pkc_incur;	/* current pos in inbuf */
	int		pkc_inend;	/* first unused pos in inbuf */
	int		pkc_inlen;	/* length of pkc_inbuf */
	/* DYNAMIC BUFFER FOR USER */
	int		pkc_left;	/* # bytes pkg_get expects */
		/* neg->read new hdr, 0->all here, >0 ->more to come */
	char		*pkc_buf;	/* start of dynamic buf */
	char		*pkc_curpos;	/* current position in pkg_buf */
};
#define PKC_NULL	((struct pkg_conn *)0)
#define PKC_ERROR	((struct pkg_conn *)(-1L))


#define pkg_send_vls(type,vlsp,pkg)	\
	pkg_send( (type), bu_vls_addr((vlsp)), bu_vls_strlen((vlsp))+1, (pkg) )


extern int pkg_process(register struct pkg_conn *);
extern int pkg_suckin(register struct pkg_conn *);
extern struct pkg_conn *pkg_open();
extern struct pkg_conn *pkg_transerver();
extern int pkg_permserver();
extern struct pkg_conn *pkg_getclient(int fd, struct pkg_switch *switchp, void (*errlog) (/* ??? */), int nodelay);
extern void pkg_close();
extern int pkg_send();
extern int pkg_2send();
extern int pkg_stream();
extern int pkg_flush();
extern int pkg_waitfor();
extern char *pkg_bwaitfor();
extern int pkg_get();
extern int pkg_block();

/* Data conversion routines */
extern unsigned short pkg_gshort();
extern unsigned long pkg_glong();
extern char *pkg_pshort(unsigned char *msgp, short unsigned int s);
extern char *pkg_plong();

#endif /* PKG_H_SEENYET */
@


11.7
log
@merge of ansi-6-0-branch into HEAD
@
text
@d19 1
a19 1
#define PKG_H_VERSION "@@(#)$Header$ (ARL)"
@


11.6
log
@Restoration of entire source tree to Pre-Hartley state
@
text
@d19 1
a19 1
#define PKG_H_VERSION "@@(#)$Header: /c/CVS/brlcad/h/pkg.h,v 11.4 2000/07/12 01:34:19 cjohnson Exp $ (ARL)"
d81 1
a81 1
extern struct pkg_conn *pkg_getclient();
d95 2
a96 1
extern char *pkg_pshort(), *pkg_plong();
@


11.6.2.1
log
@Initial ANSIfication
@
text
@d19 1
a19 1
#define PKG_H_VERSION "@@(#)$Header: /c/CVS/brlcad/h/pkg.h,v 11.6 2002/08/20 17:07:29 jra Exp $ (ARL)"
d81 1
a81 1
extern struct pkg_conn *pkg_getclient(int fd, struct pkg_switch *switchp, void (*errlog) (/* ??? */), int nodelay);
d95 1
a95 2
extern char *pkg_pshort(unsigned char *msgp, short unsigned int s);
extern char *pkg_plong();
@


11.5
log
@Converted from K&R to ANSI C - RFH
@
text
@d81 1
a81 1
extern struct pkg_conn *pkg_getclient(int fd, struct pkg_switch *switchp, void (*errlog) (/* ??? */), int nodelay);
d95 1
a95 2
extern char *pkg_pshort(unsigned char *msgp, short unsigned int s);
extern char *pkg_plong();
@


11.4
log
@Add some externals used by libfb
@
text
@d19 1
a19 1
#define PKG_H_VERSION "@@(#)$Header: /c/CVS/brlcad/h/pkg.h,v 11.3 1997/07/01 19:35:48 bparker Exp $ (ARL)"
d81 1
a81 1
extern struct pkg_conn *pkg_getclient();
d95 2
a96 1
extern char *pkg_pshort(), *pkg_plong();
@


11.3
log
@RCSid is being initialized elsewhere
@
text
@d19 1
a19 1
#define PKG_H_VERSION "@@(#)$Header: /m/cad/h/RCS/pkg.h,v 11.2 1997/07/01 18:38:42 mike Exp bparker $ (ARL)"
d76 2
@


11.2
log
@Added pkg_send_vls() macro
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header$ (ARL)";
@


11.1
log
@Release_4.4
@
text
@d12 2
a13 3
 *	SECAD/VLD Computing Consortium, Bldg 394
 *	The U. S. Army Ballistic Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005
d16 1
a16 3
 *	Public Domain, Distribution Unlimitied.
 *
 *  $Header: /m/cad/h/RCS/pkg.h,v 10.2 94/11/04 04:54:44 mike Exp $
d18 4
d70 5
@


10.2
log
@Irix 6 
@
text
@d19 1
a19 1
 *  $Header: /m/cad/h/RCS/pkg.h,v 10.1 91/10/12 06:35:28 mike Rel4_0 Locker: mike $
@


10.1
log
@Release_4.0
@
text
@d19 1
a19 1
 *  $Header: pkg.h,v 9.1 89/05/19 05:44:17 mike Rel3_5 $
d68 1
a68 1
#define PKC_ERROR	((struct pkg_conn *)(-1))
@


9.1
log
@Release_3.5
@
text
@d19 1
a19 1
 *  $Header: pkg.h,v 8.3 89/04/28 05:16:55 mike Exp $
@


8.3
log
@Rearranged to accomodate extra level of buffering.
@
text
@d19 1
a19 1
 *  $Header: pkg.h,v 8.2 89/01/19 19:48:42 mike Locked $
@


8.2
log
@For ANSII C, made tokens after #endif into comments
@
text
@d19 1
a19 1
 *  $Header: pkg.h,v 8.1 88/10/05 00:24:26 mike Locked $
d44 1
a44 1
#define	PKG_STREAMLEN	4096
d49 5
d55 7
a65 5
	struct pkg_header pkc_hdr;	/* hdr of cur msg */
	long		pkc_len;	/* pkg_len, in host order */
	unsigned short	pkc_type;	/* pkg_type, in host order */
	char		pkc_stream[PKG_STREAMLEN];
	int		pkc_strpos;	/* index into stream buffer */
@


8.1
log
@Release_3.0
@
text
@d19 1
a19 1
 *  $Header: pkg.h,v 7.2 88/05/13 21:46:33 mike Exp $
d82 1
a82 1
#endif PKG_H_SEENYET
@


7.2
log
@pks_handler is now a pointer to a func that returns void.
@
text
@d19 1
a19 1
 *  $Header: pkg.h,v 7.1 87/11/02 23:22:36 mike Locked $
@


7.1
log
@Release 2.3
@
text
@d19 1
a19 1
 *  $Header: pkg.h,v 6.1 87/07/11 07:48:23 mike Rel $
d26 1
a26 1
	int	(*pks_handler)();	/* Message Handler */
@


6.1
log
@Release 2.0
@
text
@d19 1
a19 1
 *  $Header: pkg.h,v 5.1 87/06/24 21:47:20 mike Rel $
@


5.1
log
@Release 1.24
@
text
@d19 1
a19 1
 *  $Header: pkg.h,v 4.5 87/06/24 20:32:34 mike Exp $
@


4.5
log
@Expanded header
@
text
@d19 1
a19 1
 *  $Header: db.h,v 4.5 87/06/01 16:26:21 mike Exp $
@


4.4
log
@Release 1.20 -- First Formal Release
@
text
@d3 17
@


4.3
log
@Added conversion type defs.
@
text
@@


4.2
log
@Changed specification of network header to char arrays.
@
text
@d60 5
@


4.1
log
@BRL CAD Distribution Release 1.10
@
text
@d22 3
a24 3
	unsigned short	pkg_magic;		/* Ident */
	unsigned short	pkg_type;		/* Message Type */
	long		pkg_len;		/* Byte count of remainder */
d38 2
a39 2
#define			pkc_len		pkc_hdr.pkg_len
#define			pkc_type	pkc_hdr.pkg_type
@


1.9
log
@initserver became permserver
added transerver, removed makeconn
@
text
@@


1.8
log
@changed pkg_switch msg_type to unsigned short.
@
text
@d47 2
a48 1
extern int pkg_initserver();
a49 1
extern struct pkg_conn *pkg_makeconn();
@


1.7
log
@added pkg_2send().
@
text
@d8 1
a8 1
	char	pks_type;		/* Type code */
@


1.6
log
@Added stream buffer, pkg_stream() and pkg_flush().
@
text
@d52 1
@


1.5
log
@Added pkg_makeconn function.
@
text
@d27 1
d40 2
d52 2
@


1.4
log
@Added per connection error logger.
@
text
@d46 1
@


1.3
log
@Added per connection pkg_switch.
@
text
@d30 1
@


1.2
log
@Newer version (from ADDCOMPE sources)
@
text
@a11 2
extern struct pkg_switch pkg_switch[];	/* Array of message handlers */
extern int pkg_swlen;			/* Number of message handlers */
d29 1
@


1.1
log
@Initial revision
@
text
@d15 31
a45 2
extern int pkg_open();
extern int pkg_server();
@
