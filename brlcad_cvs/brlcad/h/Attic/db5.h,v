head	11.16;
access;
symbols
	ansi-20040405-merged:11.15
	postmerge-20040405-ansi:11.15
	premerge-20040404-ansi:11.15
	postmerge-autoconf:11.15
	autoconf-freeze:11.15
	premerge-autoconf:11.15
	ansi-20040316-freeze:11.15
	postmerge-20040315-windows:11.15
	premerge-20040315-windows:11.15
	windows-20040315-freeze:11.15
	autoconf-20031203:11.15
	autoconf-20031202:11.15
	autoconf-branch:11.15.0.12
	phong-branch:11.15.0.10
	photonmap-branch:11.15.0.8
	rel-6-1-DP:11.15
	windows-branch:11.15.0.6
	rel-6-0-2:11.15
	ansi-branch:11.15.0.4
	rel-6-0-1-branch:11.15.0.2
	hartley-6-0-post:11.15
	hartley-6-0-pre:11.15
	rel-6-0-1:11.15
	rel-6-0:11.15
	rel-5-4:11.4
	offsite-5-3-pre:11.13
	rel-5-3:11.4
	rel-5-2:11.4
	rel-5-1-branch:11.4.0.2
	rel-5-1:11.4;
locks; strict;
comment	@ * @;


11.16
date	2004.05.24.04.11.52;	author morrison;	state dead;
branches;
next	11.15;

11.15
date	2001.11.13.22.20.55;	author jra;	state Exp;
branches;
next	11.14;

11.14
date	2001.03.22.19.37.25;	author jra;	state Exp;
branches;
next	11.13;

11.13
date	2001.03.16.16.22.42;	author jra;	state Exp;
branches;
next	11.12;

11.12
date	2000.06.30.17.35.34;	author mike;	state Exp;
branches;
next	11.11;

11.11
date	2000.06.30.16.59.28;	author pjt;	state Exp;
branches;
next	11.10;

11.10
date	2000.06.29.15.21.14;	author mike;	state Exp;
branches;
next	11.9;

11.9
date	2000.06.28.17.45.06;	author mike;	state Exp;
branches;
next	11.8;

11.8
date	2000.06.27.21.06.24;	author mike;	state Exp;
branches;
next	11.7;

11.7
date	2000.06.27.19.33.17;	author mike;	state Exp;
branches;
next	11.6;

11.6
date	2000.06.26.21.19.54;	author mike;	state Exp;
branches;
next	11.5;

11.5
date	2000.06.26.18.07.13;	author mike;	state Exp;
branches;
next	11.4;

11.4
date	2000.06.23.21.05.59;	author mike;	state Exp;
branches;
next	11.3;

11.3
date	2000.06.23.05.53.11;	author mike;	state Exp;
branches;
next	11.2;

11.2
date	2000.06.23.02.13.37;	author mike;	state Exp;
branches;
next	11.1;

11.1
date	2000.06.22.23.46.21;	author mike;	state Exp;
branches;
next	;


desc
@@


11.16
log
@moved/renamed from top-level h/ to top-level include/
@
text
@/*
 *			D B 5 . H
 *
 *  Definition of the BRL-CAD "v5" database format used for new ".g" files.
 *
 *  Authors -
 *	Michael John Muuss
 *	Lee A. Butler
 *	Paul J. Tanenbaum
 *	John R. Anderson
 *
 *  Source -
 *	The U. S. Army Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5068  USA
 *  
 *  Distribution Status -
 *	Public Domain, Distribution Unlimited.
 *
 *  $Header: /n/xoff/cvs/brlcad/h/db5.h,v 11.15 2001/11/13 22:20:55 jra Exp $
 */
#ifndef DB5_H
#define DB5_H seen

/*
 * The format of an object's header as it exists on disk,
 * as best we can describe its variable size with a "C" structure.
 */
struct db5_ondisk_header {
	unsigned char	db5h_magic1;		/* [0] */
	unsigned char	db5h_hflags;		/* [1] */
	unsigned char	db5h_aflags;		/* [2] */
	unsigned char	db5h_bflags;		/* [3] */
	unsigned char	db5h_major_type;	/* [4] */
	unsigned char	db5h_minor_type;	/* [5] */
	/* Next is a mandatory variable-size length field starting at [6] */
	/* Next are optional object name length & data fields */
};

#define DB5HDR_MAGIC1	0x76		/* 'v' */
#define DB5HDR_MAGIC2	0x35		/* '5' */

/* hflags */
#define DB5HDR_HFLAGS_DLI_MASK				0x03
#define DB5HDR_HFLAGS_DLI_APPLICATION_DATA_OBJECT	0
#define DB5HDR_HFLAGS_DLI_HEADER_OBJECT			1
#define DB5HDR_HFLAGS_DLI_FREE_STORAGE			2
#define	DB5HDR_HFLAGS_HIDDEN_OBJECT			0x4
#define DB5HDR_HFLAGS_NAME_PRESENT			0x20
#define DB5HDR_HFLAGS_OBJECT_WIDTH_MASK			0xc0
#define DB5HDR_HFLAGS_OBJECT_WIDTH_SHIFT		6
#define DB5HDR_HFLAGS_NAME_WIDTH_MASK			0x18
#define DB5HDR_HFLAGS_NAME_WIDTH_SHIFT			3

#define DB5HDR_WIDTHCODE_8BIT		0
#define DB5HDR_WIDTHCODE_16BIT		1
#define DB5HDR_WIDTHCODE_32BIT		2
#define DB5HDR_WIDTHCODE_64BIT		3

/* aflags */
#define DB5HDR_AFLAGS_ZZZ_MASK				0x07
#define DB5HDR_AFLAGS_PRESENT				0x20
#define DB5HDR_AFLAGS_WIDTH_MASK			0xc0
#define DB5HDR_AFLAGS_WIDTH_SHIFT			6

/* bflags */
#define DB5HDR_BFLAGS_ZZZ_MASK				0x07
#define DB5HDR_BFLAGS_PRESENT				0x20
#define DB5HDR_BFLAGS_WIDTH_MASK			0xc0
#define DB5HDR_BFLAGS_WIDTH_SHIFT			6

/*************************************************************************
 *
 *	What follows is the C programming API for the routines
 *	implementing the v5 database.
 *	It may want to live in a different header file.
 *
 ************************************************************************/

/* Name of global attribute-only object for storing database title & units */
#define DB5_GLOBAL_OBJECT_NAME			"_GLOBAL"

/* Kinds of compression */
#define DB5_ZZZ_UNCOMPRESSED			0
#define DB5_ZZZ_GNU_GZIP			1
#define DB5_ZZZ_BURROUGHS_WHEELER		2


/* major_type */
#define DB5_MAJORTYPE_RESERVED			 0
#define DB5_MAJORTYPE_BRLCAD			 1
#define DB5_MAJORTYPE_ATTRIBUTE_ONLY		 2
#define DB5_MAJORTYPE_BINARY_MASK		 0x18
#define DB5_MAJORTYPE_BINARY_EXPM		 8
#define DB5_MAJORTYPE_BINARY_UNIF		 9
#define DB5_MAJORTYPE_BINARY_MIME		10

/*
 *	Minor types
 */
/* BRL-CAD */
#define DB5_MINORTYPE_BRLCAD_TOR		 1
#define DB5_MINORTYPE_BRLCAD_TGC		 2
#define DB5_MINORTYPE_BRLCAD_ELL		 3
#define DB5_MINORTYPE_BRLCAD_ARB8		 4
#define DB5_MINORTYPE_BRLCAD_ARS		 5
#define DB5_MINORTYPE_BRLCAD_HALF		 6
#define DB5_MINORTYPE_BRLCAD_REC		 7
#define DB5_MINORTYPE_BRLCAD_POLY		 8
#define DB5_MINORTYPE_BRLCAD_BSPLINE		 9
#define DB5_MINORTYPE_BRLCAD_SPH		10
#define	DB5_MINORTYPE_BRLCAD_NMG		11
#define DB5_MINORTYPE_BRLCAD_EBM		12
#define DB5_MINORTYPE_BRLCAD_VOL		13
#define DB5_MINORTYPE_BRLCAD_ARBN		14
#define DB5_MINORTYPE_BRLCAD_PIPE		15
#define DB5_MINORTYPE_BRLCAD_PARTICLE		16
#define DB5_MINORTYPE_BRLCAD_RPC		17
#define DB5_MINORTYPE_BRLCAD_RHC		18
#define DB5_MINORTYPE_BRLCAD_EPA		19
#define DB5_MINORTYPE_BRLCAD_EHY		20
#define DB5_MINORTYPE_BRLCAD_ETO		21
#define DB5_MINORTYPE_BRLCAD_GRIP		22
#define DB5_MINORTYPE_BRLCAD_JOINT		23
#define DB5_MINORTYPE_BRLCAD_HF			24
#define DB5_MINORTYPE_BRLCAD_DSP		25
#define	DB5_MINORTYPE_BRLCAD_SKETCH		26
#define	DB5_MINORTYPE_BRLCAD_EXTRUDE		27
#define DB5_MINORTYPE_BRLCAD_SUBMODEL		28
#define	DB5_MINORTYPE_BRLCAD_CLINE		29
#define	DB5_MINORTYPE_BRLCAD_BOT		30
#define DB5_MINORTYPE_BRLCAD_COMBINATION	31
/* Uniform-array binary */
#define DB5_MINORTYPE_BINU_WID_MASK		0x30
#define DB5_MINORTYPE_BINU_SGN_MASK		0x08
#define DB5_MINORTYPE_BINU_ATM_MASK		0x07
#define DB5_MINORTYPE_BINU_FLOAT		0x02
#define DB5_MINORTYPE_BINU_DOUBLE		0x03
#define DB5_MINORTYPE_BINU_8BITINT_U		0x04
#define DB5_MINORTYPE_BINU_16BITINT_U		0x05
#define DB5_MINORTYPE_BINU_32BITINT_U		0x06
#define DB5_MINORTYPE_BINU_64BITINT_U		0x07
#define DB5_MINORTYPE_BINU_8BITINT		0x0c
#define DB5_MINORTYPE_BINU_16BITINT		0x0d
#define DB5_MINORTYPE_BINU_32BITINT		0x0e
#define DB5_MINORTYPE_BINU_64BITINT		0x0f

/* this array depends on the values of the above definitions and is defined in db5_bin.c */
extern const char *binu_types[];

/*
 *  The "raw internal" form of one database object.
 *  This is what the low-level database routines will operate on.
 *  Magic number1 has already been checked, and is not stored.
 */
struct db5_raw_internal {
	long		magic;
	unsigned char	h_object_width;		/* DB5HDR_WIDTHCODE_x */
	unsigned char	h_name_hidden;
	unsigned char	h_name_present;
	unsigned char	h_name_width;		/* DB5HDR_WIDTHCODE_x */
	unsigned char	h_dli;
	unsigned char	a_width;		/* DB5HDR_WIDTHCODE_x */
	unsigned char	a_present;
	unsigned char	a_zzz;
	unsigned char	b_width;		/* DB5HDR_WIDTHCODE_x */
	unsigned char	b_present;
	unsigned char	b_zzz;
	unsigned char	major_type;
	unsigned char	minor_type;
	long		object_length;		/* in bytes, on disk */
	/* These three MUST NOT be passed to bu_free_external()! */
	struct bu_external name;
	struct bu_external body;
	struct bu_external attributes;
	unsigned char	*buf;		/* if non-null needs to be bu_free()ed */
};
#define DB5_RAW_INTERNAL_MAGIC	0x64357269	/* "d5ri" */
#define RT_CK_RIP(_ptr)		BU_CKMAG( _ptr, DB5_RAW_INTERNAL_MAGIC, "db5_raw_internal" )

extern const int db5_enc_len[4];	/* convert wid to nbytes */

extern unsigned char *db5_encode_length(
	unsigned char	*cp,
	long		val,
	int		format);
const unsigned char *db5_get_raw_internal_ptr(
	struct db5_raw_internal *rip,
	const unsigned char *ip);


#endif	/* DB5_H */


@


11.15
log
@Added binu_types[] array declaration
@
text
@d19 1
a19 1
 *  $Header: /c/CVS/brlcad/h/db5.h,v 11.14 2001/03/22 19:37:25 jra Exp $
@


11.14
log
@Added hidden flag for database objects
@
text
@d19 1
a19 1
 *  $Header: /d/CVS/brlcad/h/db5.h,v 11.13 2001/03/16 16:22:42 jra Exp $
d146 3
@


11.13
log
@Added a magic number check for db5_raw_internal
@
text
@d19 1
a19 1
 *  $Header: /c/CVS/brlcad/h/db5.h,v 11.12 2000/06/30 17:35:34 mike Exp $
d47 1
d155 1
d189 2
@


11.12
log
@
Parameterized name of _GLOBAL object
@
text
@d19 1
a19 1
 *  $Header: /c/CVS/brlcad/h/db5.h,v 11.11 2000/06/30 16:59:28 pjt Exp $
d173 1
@


11.11
log
@Changed lots of #define DB5HDR_blah_blah to DB5_blah_blah
@
text
@d19 1
a19 1
 *  $Header: /c/CVS/brlcad/h/db5.h,v 11.10 2000/06/29 15:21:14 mike Exp $
d77 3
@


11.10
log
@
externs
@
text
@d19 1
a19 1
 *  $Header: /c/CVS/brlcad/h/db5.h,v 11.9 2000/06/28 17:45:06 mike Exp $
a69 12
/* Kinds of compression */
#define DB5HDR_ZZZ_UNCOMPRESSED				0
#define DB5HDR_ZZZ_GNU_GZIP				1
#define DB5HDR_ZZZ_BURROUGHS_WHEELER			2


/* major_type */
#define DB5HDR_MAJORTYPE_RESERVED			0
#define DB5HDR_MAJORTYPE_BRLCAD				1
#define DB5HDR_MAJORTYPE_ATTRIBUTE_ONLY			2
#define DB5HDR_MAJORTYPE_OPAQUE_BINARY			8

d77 65
@


11.9
log
@
Merged BRL-CAD geometric and non-geometric types into one number space.
@
text
@d19 1
a19 1
 *  $Header: /c/CVS/brlcad/h/db5.h,v 11.8 2000/06/27 21:06:24 mike Exp $
d124 3
@


11.8
log
@
Added more API
@
text
@d19 1
a19 1
 *  $Header: /c/CVS/brlcad/h/db5.h,v 11.7 2000/06/27 19:33:17 mike Exp $
d78 3
a80 4
#define DB5HDR_MAJORTYPE_BRLCAD_NONGEOM			1
#define DB5HDR_MAJORTYPE_BRLCAD_GEOMETRY		2
#define DB5HDR_MAJORTYPE_OPAQUE_BINARY			3
#define DB5HDR_MAJORTYPE_ATTRIBUTE_ONLY			4
@


11.7
log
@
Changed to using bu_extern
@
text
@d19 1
a19 1
 *  $Header: /c/CVS/brlcad/h/db5.h,v 11.6 2000/06/26 21:19:54 mike Exp $
d118 8
@


11.6
log
@
Code modified to track design changes --
extra header byte, extra compression bits, separate name_len.
@
text
@d19 1
a19 1
 *  $Header: /c/CVS/brlcad/h/db5.h,v 11.5 2000/06/26 18:07:13 mike Exp $
d111 4
a114 6
	long		name_length;
	long		attribute_length;
	long		body_length;
	char		*name;
	unsigned char	*attributes;
	unsigned char	*body;
@


11.5
log
@
Moved attribute/value pairs off into libbu.
@
text
@d19 1
a19 1
 *  $Header: /c/CVS/brlcad/h/db5.h,v 11.4 2000/06/23 21:05:59 mike Exp $
d31 5
a35 4
	unsigned char	db5h_iflags;		/* [2] */
	unsigned char	db5h_major_type;	/* [3] */
	unsigned char	db5h_minor_type;	/* [4] */
	/* Next is a mandatory variable-size length field starting at [5] */
d50 2
d58 17
a74 9
/* iflags */
#define DB5HDR_IFLAGS_ZZZ_MASK				0x07
#define DB5HDR_IFLAGS_ZZZ_UNCOMPRESSED			0
#define DB5HDR_IFLAGS_ZZZ_GNU_GZIP			1
#define DB5HDR_IFLAGS_ZZZ_BURROUGHS_WHEELER		2
#define DB5HDR_IFLAGS_ATTRIBUTES_PRESENT		0x20
#define DB5HDR_IFLAGS_BODY_PRESENT			0x10
#define DB5HDR_IFLAGS_INTERIOR_WIDTH_MASK		0xc0
#define DB5HDR_IFLAGS_INTERIOR_WIDTH_SHIFT		6
d99 2
d102 6
a107 5
	unsigned char	h_name_present;
	unsigned char	i_object_width;		/* DB5HDR_WIDTHCODE_x */
	unsigned char	i_attributes_present;
	unsigned char	i_body_present;
	unsigned char	i_zzz;
d112 2
d115 2
a116 2
	long		interior_length;
	unsigned char	*interior;
@


11.4
log
@
DLI bits live.
@
text
@d19 1
a19 1
 *  $Header: /c/CVS/brlcad/h/db5.h,v 11.3 2000/06/23 05:53:11 mike Exp $
a103 5

struct attribute_value_pair {
	char	*name;
	char	*value;
};
@


11.3
log
@
Added start of the API
@
text
@d19 1
a19 1
 *  $Header: /c/CVS/brlcad/h/db5.h,v 11.2 2000/06/23 02:13:37 mike Exp $
a24 24
 *  The "raw internal" form of one database object.
 *  This is what the low-level database routines will operate on.
 *  Magic number1 has already been checked, and is not stored.
 */
struct db5_raw_internal {
	long		magic;
	unsigned char	h_object_width;		/* DB5HDR_WIDTHCODE_x */
	unsigned char	h_name_present;
	unsigned char	i_object_width;		/* DB5HDR_WIDTHCODE_x */
	unsigned char	i_attributes_present;
	unsigned char	i_body_present;
	unsigned char	i_zzz;
	unsigned char	major_type;
	unsigned char	minor_type;
	long		object_length;		/* in bytes, on disk */
	long		name_length;
	char		*name;
	long		interior_length;
	unsigned char	*interior;
	unsigned char	*buf;		/* if non-null needs to be bu_free()ed */
};
#define DB5_RAW_INTERNAL_MAGIC	0x64357269	/* "d5ri" */

/*
a41 1
#if 0
a45 1
#endif
d66 1
a70 5
#define DB5HDR_MAJORTYPE_DLI				255

/* minor_type */
#define DB5HDR_MINORTYPE_DLI_FREE			1
#define DB5HDR_MINORTYPE_DLI_HEADER			2
d79 25
@


11.2
log
@
First working draft.
@
text
@d19 1
a19 1
 *  $Header: /c/CVS/brlcad/h/db5.h,v 11.1 2000/06/22 23:46:21 mike Exp $
d41 1
a41 1
	unsigned char	*name;
d101 13
@


11.1
log
@
BRL-CAD v5 database format
@
text
@d19 1
a19 1
 *  $Header: /c/CVS/brlcad/h/db.h,v 11.13 2000/05/18 01:41:20 mike Exp $
d24 35
a58 7
struct db5_header {
	unsigned char	db5h_magic1;
	unsigned char	db5h_hflags;
	unsigned char	db5h_iflags;
	unsigned char	db5h_major_type;
	unsigned char	db5h_minor_type;
	/* Next is a mandatory variable-size length field */
d65 2
d71 1
d81 1
d90 11
@

