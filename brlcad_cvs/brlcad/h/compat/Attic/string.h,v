head	1.4;
access;
symbols
	ansi-20040405-merged:1.2.4.1
	postmerge-20040405-ansi:1.3
	premerge-20040404-ansi:1.3
	postmerge-autoconf:1.3
	autoconf-freeze:1.3
	premerge-autoconf:1.3
	ansi-20040316-freeze:1.2
	postmerge-20040315-windows:1.3
	premerge-20040315-windows:1.3
	windows-20040315-freeze:1.2.6.1
	autoconf-20031203:1.3
	autoconf-20031202:1.3
	autoconf-branch:1.3.0.6
	phong-branch:1.3.0.4
	photonmap-branch:1.3.0.2
	rel-6-1-DP:1.2
	windows-branch:1.2.0.6
	rel-6-0-2:1.2
	ansi-branch:1.2.0.4
	rel-6-0-1-branch:1.2.0.2
	hartley-6-0-post:1.2
	hartley-6-0-pre:1.2
	rel-6-0-1:1.2
	rel-6-0:1.2
	rel-5-4:1.1
	offsite-5-3-pre:1.1
	rel-5-3:1.1
	rel-5-2:1.1
	rel-5-1-branch:1.1.0.2
	rel-5-1:1.1;
locks; strict;
comment	@ * @;


1.4
date	2004.05.24.04.11.55;	author morrison;	state dead;
branches;
next	1.3;

1.3
date	2003.03.13.19.30.33;	author jra;	state Exp;
branches;
next	1.2;

1.2
date	2001.04.05.19.35.12;	author morrison;	state Exp;
branches
	1.2.4.1
	1.2.6.1;
next	1.1;

1.1
date	99.12.17.16.17.25;	author bparker;	state Exp;
branches;
next	;

1.2.4.1
date	2004.03.17.21.16.17;	author morrison;	state Exp;
branches;
next	;

1.2.6.1
date	2004.03.11.23.40.54;	author morrison;	state Exp;
branches;
next	;


desc
@@


1.4
log
@moved/renamed from top-level h/ to top-level include/
@
text
@/*
 * string.h --
 *
 *	Declarations of ANSI C library procedures for string handling.
 *
 * Copyright (c) 1991-1993 The Regents of the University of California.
 * Copyright (c) 1994-1996 Sun Microsystems, Inc.
 *
 * See the file "license.terms" for information on usage and redistribution
 * of this file, and for a DISCLAIMER OF ALL WARRANTIES.
 *
 * RCS: @@(#) $Id: string.h,v 1.3 2003/03/13 19:30:33 jra Exp $
 */

#ifndef _STRING
#define _STRING

#include <tcl.h>

/*
 * The following #include is needed to define size_t. (This used to
 * include sys/stdtypes.h but that doesn't exist on older versions
 * of SunOS, e.g. 4.0.2, so I'm trying sys/types.h now.... hopefully
 * it exists everywhere)
 */

#ifndef MAC_TCL
#include <sys/types.h>
#endif

extern char *		memchr _ANSI_ARGS_((CONST VOID *s, int c, size_t n));
extern int		memcmp _ANSI_ARGS_((CONST VOID *s1, CONST VOID *s2,
			    size_t n));
extern char *		memcpy _ANSI_ARGS_((VOID *t, CONST VOID *f, size_t n));
#ifdef NO_MEMMOVE
#define memmove(d, s, n) bcopy ((s), (d), (n))
#else
extern char *		memmove _ANSI_ARGS_((VOID *t, CONST VOID *f,
			    size_t n));
#endif
extern char *		memset _ANSI_ARGS_((VOID *s, int c, size_t n));

extern int		strcasecmp _ANSI_ARGS_((CONST char *s1,
			    CONST char *s2));
extern char *		strcat _ANSI_ARGS_((char *dst, CONST char *src));
extern char *		strchr _ANSI_ARGS_((CONST char *string, int c));
extern int		strcmp _ANSI_ARGS_((CONST char *s1, CONST char *s2));
extern char *		strcpy _ANSI_ARGS_((char *dst, CONST char *src));
extern size_t		strcspn _ANSI_ARGS_((CONST char *string,
			    CONST char *chars));
extern char *		strdup _ANSI_ARGS_((CONST char *string));
extern char *		strerror _ANSI_ARGS_((int error));
extern size_t		strlen _ANSI_ARGS_((CONST char *string));
extern int		strncasecmp _ANSI_ARGS_((CONST char *s1,
			    CONST char *s2, size_t n));
extern char *		strncat _ANSI_ARGS_((char *dst, CONST char *src,
			    size_t numChars));
extern int		strncmp _ANSI_ARGS_((CONST char *s1, CONST char *s2,
			    size_t nChars));
extern char *		strncpy _ANSI_ARGS_((char *dst, CONST char *src,
			    size_t numChars));
extern char *		strpbrk _ANSI_ARGS_((CONST char *string,
			    CONST char *chars));
extern char *		strrchr _ANSI_ARGS_((CONST char *string, int c));
extern size_t		strspn _ANSI_ARGS_((CONST char *string,
			    CONST char *chars));
extern char *		strstr _ANSI_ARGS_((CONST char *string,
			    CONST char *substring));
extern char *		strtok _ANSI_ARGS_((char *s, CONST char *delim));

#endif /* _STRING */
@


1.3
log
@Update to tcl/tk 8.4
@
text
@d12 1
a12 1
 * RCS: @@(#) $Id: string.h,v 1.4 2000/07/18 18:16:17 ericm Exp $
@


1.2
log
@updated SIGNED to signed
updated CONST to const
@
text
@d12 1
a12 1
 * RCS: @@(#) $Id: string.h,v 1.1 1999/12/17 16:17:25 bparker Exp $
d31 2
a32 2
extern char *		memchr _ANSI_ARGS_((const VOID *s, int c, size_t n));
extern int		memcmp _ANSI_ARGS_((const VOID *s1, const VOID *s2,
d34 1
a34 1
extern char *		memcpy _ANSI_ARGS_((VOID *t, const VOID *f, size_t n));
d38 1
a38 1
extern char *		memmove _ANSI_ARGS_((VOID *t, const VOID *f,
d43 9
a51 9
extern int		strcasecmp _ANSI_ARGS_((const char *s1,
			    const char *s2));
extern char *		strcat _ANSI_ARGS_((char *dst, const char *src));
extern char *		strchr _ANSI_ARGS_((const char *string, int c));
extern int		strcmp _ANSI_ARGS_((const char *s1, const char *s2));
extern char *		strcpy _ANSI_ARGS_((char *dst, const char *src));
extern size_t		strcspn _ANSI_ARGS_((const char *string,
			    const char *chars));
extern char *		strdup _ANSI_ARGS_((const char *string));
d53 4
a56 4
extern size_t		strlen _ANSI_ARGS_((const char *string));
extern int		strncasecmp _ANSI_ARGS_((const char *s1,
			    const char *s2, size_t n));
extern char *		strncat _ANSI_ARGS_((char *dst, const char *src,
d58 1
a58 1
extern int		strncmp _ANSI_ARGS_((const char *s1, const char *s2,
d60 1
a60 1
extern char *		strncpy _ANSI_ARGS_((char *dst, const char *src,
d62 8
a69 7
extern char *		strpbrk _ANSI_ARGS_((const char *string, char *chars));
extern char *		strrchr _ANSI_ARGS_((const char *string, int c));
extern size_t		strspn _ANSI_ARGS_((const char *string,
			    const char *chars));
extern char *		strstr _ANSI_ARGS_((const char *string,
			    const char *substring));
extern char *		strtok _ANSI_ARGS_((const char *s, const char *delim));
@


1.2.4.1
log
@sync branch with HEAD
@
text
@d12 1
a12 1
 * RCS: @@(#) $Id$
d31 2
a32 2
extern char *		memchr _ANSI_ARGS_((CONST VOID *s, int c, size_t n));
extern int		memcmp _ANSI_ARGS_((CONST VOID *s1, CONST VOID *s2,
d34 1
a34 1
extern char *		memcpy _ANSI_ARGS_((VOID *t, CONST VOID *f, size_t n));
d38 1
a38 1
extern char *		memmove _ANSI_ARGS_((VOID *t, CONST VOID *f,
d43 9
a51 9
extern int		strcasecmp _ANSI_ARGS_((CONST char *s1,
			    CONST char *s2));
extern char *		strcat _ANSI_ARGS_((char *dst, CONST char *src));
extern char *		strchr _ANSI_ARGS_((CONST char *string, int c));
extern int		strcmp _ANSI_ARGS_((CONST char *s1, CONST char *s2));
extern char *		strcpy _ANSI_ARGS_((char *dst, CONST char *src));
extern size_t		strcspn _ANSI_ARGS_((CONST char *string,
			    CONST char *chars));
extern char *		strdup _ANSI_ARGS_((CONST char *string));
d53 4
a56 4
extern size_t		strlen _ANSI_ARGS_((CONST char *string));
extern int		strncasecmp _ANSI_ARGS_((CONST char *s1,
			    CONST char *s2, size_t n));
extern char *		strncat _ANSI_ARGS_((char *dst, CONST char *src,
d58 1
a58 1
extern int		strncmp _ANSI_ARGS_((CONST char *s1, CONST char *s2,
d60 1
a60 1
extern char *		strncpy _ANSI_ARGS_((char *dst, CONST char *src,
d62 7
a68 8
extern char *		strpbrk _ANSI_ARGS_((CONST char *string,
			    CONST char *chars));
extern char *		strrchr _ANSI_ARGS_((CONST char *string, int c));
extern size_t		strspn _ANSI_ARGS_((CONST char *string,
			    CONST char *chars));
extern char *		strstr _ANSI_ARGS_((CONST char *string,
			    CONST char *substring));
extern char *		strtok _ANSI_ARGS_((char *s, CONST char *delim));
@


1.2.6.1
log
@sync to HEAD...
@
text
@d12 1
a12 1
 * RCS: @@(#) $Id: string.h,v 1.3 2003/03/13 19:30:33 jra Exp $
d31 2
a32 2
extern char *		memchr _ANSI_ARGS_((CONST VOID *s, int c, size_t n));
extern int		memcmp _ANSI_ARGS_((CONST VOID *s1, CONST VOID *s2,
d34 1
a34 1
extern char *		memcpy _ANSI_ARGS_((VOID *t, CONST VOID *f, size_t n));
d38 1
a38 1
extern char *		memmove _ANSI_ARGS_((VOID *t, CONST VOID *f,
d43 9
a51 9
extern int		strcasecmp _ANSI_ARGS_((CONST char *s1,
			    CONST char *s2));
extern char *		strcat _ANSI_ARGS_((char *dst, CONST char *src));
extern char *		strchr _ANSI_ARGS_((CONST char *string, int c));
extern int		strcmp _ANSI_ARGS_((CONST char *s1, CONST char *s2));
extern char *		strcpy _ANSI_ARGS_((char *dst, CONST char *src));
extern size_t		strcspn _ANSI_ARGS_((CONST char *string,
			    CONST char *chars));
extern char *		strdup _ANSI_ARGS_((CONST char *string));
d53 4
a56 4
extern size_t		strlen _ANSI_ARGS_((CONST char *string));
extern int		strncasecmp _ANSI_ARGS_((CONST char *s1,
			    CONST char *s2, size_t n));
extern char *		strncat _ANSI_ARGS_((char *dst, CONST char *src,
d58 1
a58 1
extern int		strncmp _ANSI_ARGS_((CONST char *s1, CONST char *s2,
d60 1
a60 1
extern char *		strncpy _ANSI_ARGS_((char *dst, CONST char *src,
d62 7
a68 8
extern char *		strpbrk _ANSI_ARGS_((CONST char *string,
			    CONST char *chars));
extern char *		strrchr _ANSI_ARGS_((CONST char *string, int c));
extern size_t		strspn _ANSI_ARGS_((CONST char *string,
			    CONST char *chars));
extern char *		strstr _ANSI_ARGS_((CONST char *string,
			    CONST char *substring));
extern char *		strtok _ANSI_ARGS_((char *s, CONST char *delim));
@


1.1
log
@*- header files that are provided by Tcl in case
   the system does not
@
text
@d12 1
a12 1
 * RCS: @@(#) $Id: string.h,v 1.2 1999/10/19 19:35:31 jra Exp $
d31 2
a32 2
extern char *		memchr _ANSI_ARGS_((CONST VOID *s, int c, size_t n));
extern int		memcmp _ANSI_ARGS_((CONST VOID *s1, CONST VOID *s2,
d34 1
a34 1
extern char *		memcpy _ANSI_ARGS_((VOID *t, CONST VOID *f, size_t n));
d38 1
a38 1
extern char *		memmove _ANSI_ARGS_((VOID *t, CONST VOID *f,
d43 9
a51 9
extern int		strcasecmp _ANSI_ARGS_((CONST char *s1,
			    CONST char *s2));
extern char *		strcat _ANSI_ARGS_((char *dst, CONST char *src));
extern char *		strchr _ANSI_ARGS_((CONST char *string, int c));
extern int		strcmp _ANSI_ARGS_((CONST char *s1, CONST char *s2));
extern char *		strcpy _ANSI_ARGS_((char *dst, CONST char *src));
extern size_t		strcspn _ANSI_ARGS_((CONST char *string,
			    CONST char *chars));
extern char *		strdup _ANSI_ARGS_((CONST char *string));
d53 4
a56 4
extern size_t		strlen _ANSI_ARGS_((CONST char *string));
extern int		strncasecmp _ANSI_ARGS_((CONST char *s1,
			    CONST char *s2, size_t n));
extern char *		strncat _ANSI_ARGS_((char *dst, CONST char *src,
d58 1
a58 1
extern int		strncmp _ANSI_ARGS_((CONST char *s1, CONST char *s2,
d60 1
a60 1
extern char *		strncpy _ANSI_ARGS_((char *dst, CONST char *src,
d62 7
a68 7
extern char *		strpbrk _ANSI_ARGS_((CONST char *string, char *chars));
extern char *		strrchr _ANSI_ARGS_((CONST char *string, int c));
extern size_t		strspn _ANSI_ARGS_((CONST char *string,
			    CONST char *chars));
extern char *		strstr _ANSI_ARGS_((CONST char *string,
			    CONST char *substring));
extern char *		strtok _ANSI_ARGS_((CONST char *s, CONST char *delim));
@

