head	1.8;
access;
symbols
	rel-5-1:1.7
	rel-5-0:1.4
	rel-5-0-beta:1.3
	rel-4-5:1.1
	ctj-4-5-post:1.1
	ctj-4-5-pre:1.1
	rel-5-1-patches:1.7.0.2;
locks; strict;
comment	@ * @;


1.8
date	2000.08.16.17.10.11;	author bparker;	state dead;
branches;
next	1.7;

1.7
date	2000.01.31.16.33.35;	author jra;	state Exp;
branches
	1.7.2.1;
next	1.6;

1.6
date	99.10.22.21.41.32;	author bparker;	state Exp;
branches;
next	1.5;

1.5
date	99.10.19.20.15.54;	author jra;	state Exp;
branches;
next	1.4;

1.4
date	99.06.09.19.48.29;	author mike;	state Exp;
branches;
next	1.3;

1.3
date	99.01.21.03.09.01;	author mike;	state Exp;
branches;
next	1.2;

1.2
date	99.01.21.03.02.53;	author mike;	state Exp;
branches;
next	1.1;

1.1
date	97.01.08.14.26.51;	author jra;	state Exp;
branches;
next	;

1.7.2.1
date	2000.08.16.20.44.30;	author bparker;	state dead;
branches;
next	;


desc
@BRL-CAD version of the wish program.
@


1.8
log
@bwish is being replaced by cwish
@
text
@/*
 * bwish.c --
 *
 *      BRL-CAD version of the WISH program.
 *	Useful for testing and prototyping Tcl code, with access to
 *	the various BRL-CAD libraries.
 *
 *  Authors -
 *	John Anderson
 *	Michael John Muuss
 *  
 *  Source -
 *	The U. S. Army Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5068  USA
 *  
 *  Distribution Notice -
 *	Re-distribution of this software is restricted, as described in
 *	your "Statement of Terms and Conditions for the Release of
 *	The BRL-CAD Package" license agreement.
 *
 *  Copyright Notice -
 *	This software is Copyright (C) 1998 by the United States Army
 *	in all countries except the USA.  All rights reserved.
 * 
 * Based on--
 * 
 * tkAppInit.c --
 *
 *	Provides a default version of the Tcl_AppInit procedure for
 *	use in wish and similar Tk-based applications.
 *
 * Copyright (c) 1993 The Regents of the University of California.
 * Copyright (c) 1994 Sun Microsystems, Inc.
 *
 * See the file "license.terms" for information on usage and redistribution
 * of this file, and for a DISCLAIMER OF ALL WARRANTIES.
 */
#ifndef lint
static char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/tk/bwish.c,v 1.7 2000/01/31 16:33:35 jra Exp $ (ARL)";
#endif

#ifndef lint
static char sccsid[] = "@@(#) tkAppInit.c 1.15 95/06/28 13:14:28";
#endif /* not lint */

#include "tk.h"

extern int tclcad_tk_setup();

/*
 * The following variable is a special hack that is needed in order for
 * Sun shared libraries to be used for Tcl.
 */

extern int matherr();
int *tclDummyMathPtr = (int *) matherr;

/*
 *----------------------------------------------------------------------
 *
 * main --
 *
 *	This is the main program for the application.
 *
 * Results:
 *	None: Tk_Main never returns here, so this procedure never
 *	returns either.
 *
 * Side effects:
 *	Whatever the application does.
 *
 *----------------------------------------------------------------------
 */

int
main(argc, argv)
    int argc;			/* Number of command-line arguments. */
    char **argv;		/* Values of command-line arguments. */
{
	Tcl_Interp *interp;

    interp = Tcl_CreateInterp();
    Tk_MainEx(argc, argv, Tcl_AppInit, interp);
    return 0;			/* Needed only to prevent compiler warning. */
}

/*
 *----------------------------------------------------------------------
 *
 * Tcl_AppInit --
 *
 *	This procedure performs application-specific initialization.
 *	Most applications, especially those that incorporate additional
 *	packages, will have their own version of this procedure.
 *
 * Results:
 *	Returns a standard Tcl completion code, and leaves an error
 *	message in interp->result if an error occurs.
 *
 * Side effects:
 *	Depends on the startup script.
 *
 *----------------------------------------------------------------------
 */

int
Tcl_AppInit(interp)
    Tcl_Interp *interp;		/* Interpreter for application. */
{
    if (Tcl_Init(interp) == TCL_ERROR) {
	return TCL_ERROR;
    }
    if (Tk_Init(interp) == TCL_ERROR) {
	Tcl_AppendResult(interp, "Tk_Init() failure\n", NULL);
	return TCL_ERROR;
    }

#if 0
    /* Initialize [incr Tcl] */
    if (Itcl_Init(interp) == TCL_ERROR)
      return TCL_ERROR;
    if (Itk_Init(interp) == TCL_ERROR)
      return TCL_ERROR;

#if 0
    Tcl_StaticPackage(interp, "Itcl", Itcl_Init, Itcl_SafeInit);
    Tcl_StaticPackage(interp, "Itk", Itk_Init, (Tcl_PackageInitProc *) NULL);
#endif

    /*
     *  This is itkwish, so import all [incr Tcl] commands by
     *  default into the global namespace.  Fix up the autoloader
     *  to do the same.
     */
    if (Tcl_Import(interp, Tcl_GetGlobalNamespace(interp),
		   "::itk::*", /* allowOverwrite */ 1) != TCL_OK)
      return TCL_ERROR;

    if (Tcl_Import(interp, Tcl_GetGlobalNamespace(interp),
            "::itcl::*", /* allowOverwrite */ 1) != TCL_OK)
      return TCL_ERROR;

    if (Tcl_Eval(interp, "auto_mkindex_parser::slavehook { _%@@namespace import -force ::itcl::* ::itk::* }") != TCL_OK)
      return TCL_ERROR;
#endif

    /*
     * Call the init procedures for included packages.  Each call should
     * look like this:
     *
     * if (Mod_Init(interp) == TCL_ERROR) {
     *     return TCL_ERROR;
     * }
     *
     * where "Mod" is the name of the module.
     */
	/* These are all void functions */
	bu_tcl_setup(interp);
	bn_tcl_setup(interp);
	rt_tcl_setup(interp);
	tclcad_tk_setup(interp);

    /*
     * Call Tcl_CreateCommand for application-specific commands, if
     * they weren't already created by the init procedures called above.
     */

    /*
     * Specify a user-specific startup file to invoke if the application
     * is run interactively.  Typically the startup file is "~/.apprc"
     * where "app" is the name of the application.  If this line is deleted
     * then no user-specific startup file will be run under any conditions.
     */

    Tcl_SetVar(interp, "tcl_rcFileName", "~/.bwishrc", TCL_GLOBAL_ONLY);
    return TCL_OK;
}
@


1.7
log
@Eliminated an unused variable
@
text
@d39 1
a39 1
static char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/tk/bwish.c,v 1.6 1999/10/22 21:41:32 bparker Exp $ (ARL)";
@


1.7.2.1
log
@replaced by cwish
@
text
@d39 1
a39 1
static char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/tk/Attic/bwish.c,v 1.7 2000/01/31 16:33:35 jra Exp $ (ARL)";
@


1.6
log
@*- add code to initialize [incr Tcl]; for the moment
   leave turned off
@
text
@d39 1
a39 1
static char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/tk/bwish.c,v 1.5 1999/10/19 20:15:54 jra Exp $ (ARL)";
a109 2
    Tk_Window main;

@


1.5
log
@Changes for Tcl/Tk 8.2.1
@
text
@d39 1
a39 1
static char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/tk/bwish.c,v 1.4 1999/06/09 19:48:29 mike Exp $ (ARL)";
d119 29
@


1.4
log
@
Fixed to not test result codes from void functions.
@
text
@d39 1
a39 1
static char RCSid[] = "@@(#)$Header$ (ARL)";
d80 4
a83 1
    Tk_Main(argc, argv, Tcl_AppInit);
@


1.3
log
@Now it works.
@
text
@d4 20
a23 9
 *      BRL-CAD version of the wish program.
 *
 * Army copyright foo
 *
 * 
 * 
 * 
 * 
 * 
d38 3
d113 1
d127 5
a131 7
	if( bu_tcl_setup(interp) == TCL_ERROR )  return TCL_ERROR;
	if( bn_tcl_setup(interp) == TCL_ERROR )  return TCL_ERROR;
	if( rt_tcl_setup(interp) == TCL_ERROR )  return TCL_ERROR;

    if (tclcad_tk_setup(interp) == TCL_ERROR) {
	return TCL_ERROR;
    }
@


1.2
log
@Fixed so it works
@
text
@d34 1
a34 1
extern int TclCad_Init();
@


1.1
log
@Initial revision
@
text
@d112 3
d116 1
a116 1
    if (TclCad_Init(interp) == TCL_ERROR) {
@
