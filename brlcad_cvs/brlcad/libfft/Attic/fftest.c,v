head	11.5;
access;
symbols
	ansi-20040405-merged:11.3.2.1
	postmerge-20040405-ansi:11.4
	premerge-20040404-ansi:11.3
	postmerge-autoconf:11.3
	autoconf-freeze:11.3
	premerge-autoconf:11.3
	ansi-20040316-freeze:11.3.2.1
	postmerge-20040315-windows:11.3
	premerge-20040315-windows:11.3
	windows-20040315-freeze:11.3
	autoconf-20031203:11.3
	autoconf-20031202:11.3
	autoconf-branch:11.3.0.10
	phong-branch:11.3.0.8
	photonmap-branch:11.3.0.6
	rel-6-1-DP:11.3
	windows-branch:11.3.0.4
	rel-6-0-2:11.1
	ansi-branch:11.3.0.2
	rel-6-0-1-branch:11.1.0.4
	hartley-6-0-post:11.2
	hartley-6-0-pre:11.1
	rel-6-0-1:11.1
	rel-6-0:11.1
	rel-5-4:11.1
	offsite-5-3-pre:11.1
	rel-5-3:11.1
	rel-5-2:11.1
	rel-5-1-branch:11.1.0.2
	rel-5-1:11.1
	rel-5-0:11.1
	rel-5-0-beta:11.1
	rel-4-5:11.1
	ctj-4-5-post:11.1
	ctj-4-5-pre:11.1
	rel-4-4:11.1
	rel-4-0:10.1;
locks; strict;
comment	@ * @;


11.5
date	2004.05.21.18.07.26;	author morrison;	state dead;
branches;
next	11.4;

11.4
date	2004.04.05.07.44.18;	author morrison;	state Exp;
branches;
next	11.3;

11.3
date	2002.08.20.17.07.48;	author jra;	state Exp;
branches
	11.3.2.1;
next	11.2;

11.2
date	2002.08.15.20.55.02;	author hartley;	state Exp;
branches;
next	11.1;

11.1
date	95.01.04.10.05.42;	author mike;	state Rel4_4;
branches;
next	10.1;

10.1
date	91.10.12.06.38.55;	author mike;	state Rel4_0;
branches;
next	1.1;

1.1
date	91.07.02.01.26.01;	author mike;	state Exp;
branches;
next	;

11.3.2.1
date	2002.09.19.18.01.22;	author morrison;	state Exp;
branches;
next	;


desc
@libfft module
@


11.5
log
@moved to src/
@
text
@/*
 * Complex Number and FFT Library
 *
 *  12 Oct 84
 */

typedef struct {
	double	re;	/* Real Part */
	double	im;	/* Imaginary Part */
} COMPLEX;

extern double cos(double), sin(double);

/***** TEST ROUTINES *****/
COMPLEX data[64];

main(void)
{
	int	i;

	for (i = 0; i < 64; i++) {
		data[i].re = sin((double)2.0*3.1415926535*i/64.0);
		data[i].re += 3*cos((double)2.0*3.1415926535*i/32.0);
		data[i].im = (double)0.0;
	}

	printf("Original Data:\n\n");
	display(data, 64);

	fft(data, 64);
	printf("\n\nTransformed Data:\n\n");
	display(data, 64);

	invfft(data, 64);
	printf("\n\nInversed Data:\n\n");
	display(data, 64);
}

display(COMPLEX *dat, int num)
{
	int	i;

	for (i = 0; i < num; i++) {
		printf("%3d : ", i);
		printf("%f, %f\n", dat[i].re, dat[i].im);
	}
}
@


11.4
log
@merge of ansi-6-0-branch into HEAD
@
text
@@


11.3
log
@Restoration of entire source tree to Pre-Hartley state
@
text
@d12 1
a12 1
extern double cos(), sin();
d17 1
a17 1
main()
d39 1
a39 2
display(dat, num)
COMPLEX dat[]; int num;
@


11.3.2.1
log
@Initial ANSIfication
@
text
@d12 1
a12 1
extern double cos(double), sin(double);
d17 1
a17 1
main(void)
d39 2
a40 1
display(COMPLEX *dat, int num)
@


11.2
log
@Converted from K&R to ANSI C - RFH
@
text
@d12 1
a12 1
extern double cos(double), sin(double);
d17 1
a17 1
main(void)
d39 2
a40 1
display(COMPLEX *dat, int num)
@


11.1
log
@Release_4.4
@
text
@d12 1
a12 1
extern double cos(), sin();
d17 1
a17 1
main()
d39 1
a39 2
display(dat, num)
COMPLEX dat[]; int num;
@


10.1
log
@Release_4.0
@
text
@@


1.1
log
@Initial revision
@
text
@@
