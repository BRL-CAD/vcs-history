head	11.7;
access;
symbols
	ansi-20040405-merged:11.2.6.1
	postmerge-20040405-ansi:11.6
	premerge-20040404-ansi:11.6
	postmerge-autoconf:11.6
	autoconf-freeze:11.5.4.2
	premerge-autoconf:11.6
	ansi-20040316-freeze:11.2
	postmerge-20040315-windows:11.6
	premerge-20040315-windows:11.6
	windows-20040315-freeze:11.2.8.1
	autoconf-20031203:11.5
	autoconf-20031202:11.5
	autoconf-branch:11.5.0.4
	phong-branch:11.5.0.2
	photonmap-branch:11.3.0.2
	rel-6-1-DP:11.2
	windows-branch:11.2.0.8
	rel-6-0-2:11.2
	ansi-branch:11.2.0.6
	rel-6-0-1-branch:11.2.0.4
	hartley-6-0-post:11.2
	hartley-6-0-pre:11.2
	rel-6-0-1:11.2
	rel-6-0:11.2
	rel-5-4:11.2
	offsite-5-3-pre:11.2
	rel-5-3:11.2
	rel-5-2:11.2
	rel-5-1-branch:11.2.0.2
	rel-5-1:11.2
	rel-5-0:11.1
	rel-5-0-beta:11.1
	rel-4-5:11.1
	ctj-4-5-post:11.1
	ctj-4-5-pre:11.1
	rel-4-4:11.1
	rel-4-0:10.1
	rel-3-5:9.1
	rel-3-0:8.1
	rel-2-3:7.1
	rel-2-0:6.1
	rel-1-24:5.1
	rel-1-20:4.2
	rel-1-10:4.1
	rt-2:2.1;
locks; strict;
comment	@ * @;


11.7
date	2004.05.21.18.07.34;	author morrison;	state dead;
branches;
next	11.6;

11.6
date	2004.02.02.17.39.28;	author morrison;	state Exp;
branches;
next	11.5;

11.5
date	2003.09.09.12.34.57;	author jra;	state Exp;
branches
	11.5.4.1;
next	11.4;

11.4
date	2003.07.28.18.56.42;	author jra;	state Exp;
branches;
next	11.3;

11.3
date	2002.11.27.13.42.56;	author jra;	state Exp;
branches
	11.3.2.1;
next	11.2;

11.2
date	99.11.08.15.40.05;	author jra;	state Exp;
branches
	11.2.6.1
	11.2.8.1;
next	11.1;

11.1
date	95.01.04.09.58.25;	author mike;	state Rel4_4;
branches;
next	10.1;

10.1
date	91.10.12.06.40.54;	author mike;	state Rel4_0;
branches;
next	9.1;

9.1
date	89.05.19.05.56.56;	author mike;	state Rel3_5;
branches;
next	8.2;

8.2
date	89.01.19.19.52.20;	author mike;	state Exp;
branches;
next	8.1;

8.1
date	88.10.05.00.31.31;	author mike;	state Rel3_0;
branches;
next	7.1;

7.1
date	87.11.02.23.33.48;	author mike;	state Rel;
branches;
next	6.1;

6.1
date	87.07.11.07.56.07;	author mike;	state Rel;
branches;
next	5.1;

5.1
date	87.06.24.22.11.52;	author mike;	state Rel;
branches;
next	4.2;

4.2
date	87.02.12.22.11.33;	author mike;	state Exp;
branches;
next	4.1;

4.1
date	86.12.29.03.45.33;	author mike;	state Rel1;
branches;
next	3.1;

3.1
date	86.07.11.01.31.11;	author mike;	state Exp;
branches;
next	3.0;

3.0
date	86.06.10.01.32.16;	author mike;	state Exp;
branches;
next	2.1;

2.1
date	85.08.31.06.01.59;	author mike;	state Exp;
branches;
next	1.3;

1.3
date	85.03.25.11.43.46;	author mike;	state Exp;
branches;
next	1.2;

1.2
date	84.05.03.19.32.03;	author mike;	state Exp;
branches;
next	1.1;

1.1
date	84.05.01.06.37.55;	author mike;	state Exp;
branches;
next	;

11.2.6.1
date	2004.03.17.21.18.57;	author morrison;	state Exp;
branches;
next	;

11.2.8.1
date	2004.03.11.23.43.45;	author morrison;	state Exp;
branches;
next	;

11.3.2.1
date	2003.08.26.14.03.35;	author justin;	state Exp;
branches;
next	;

11.5.4.1
date	2004.02.12.18.37.47;	author erikg;	state Exp;
branches;
next	11.5.4.2;

11.5.4.2
date	2004.03.15.14.07.29;	author erikg;	state Exp;
branches;
next	;


desc
@Definition of plane_specific for ARB8 and ARS (at least)
@


11.7
log
@moved to src/
@
text
@/*
 *  			P L A N E . H
 *
 *  This header file describes the plane_specific structure, which
 *  is for ARS processing, and the tri_specific structure,
 *  which is for ARB and PG processing.
 *  
 *  Author -
 *	Michael John Muuss
 *  
 *  Source -
 *	SECAD/VLD Computing Consortium, Bldg 394
 *	The U. S. Army Ballistic Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005
 *  
 *  Copyright Notice -
 *	This software is Copyright (C) 1985-2004 by the United States Army.
 *	All rights reserved.
 *
 *  $Header: /n/xoff/cvs/brlcad/librt/plane.h,v 11.6 2004/02/02 17:39:28 morrison Exp $
 */
#ifndef PLANE_H
#define PLANE_H seen

#define MAXPTS	4			/* All we need are 4 points */
#define pl_A	pl_points[0]		/* Synonym for A point */

struct plane_specific  {
	int	pl_npts;		/* number of points on plane */
	point_t	pl_points[MAXPTS];	/* Actual points on plane */
	vect_t	pl_Xbasis;		/* X (B-A) vector (for 2d coords) */
	vect_t	pl_Ybasis;		/* Y (C-A) vector (for 2d coords) */
	vect_t	pl_N;			/* Unit-length Normal (outward) */
	fastf_t	pl_NdotA;		/* Normal dot A */
	fastf_t	pl_2d_x[MAXPTS];	/* X 2d-projection of points */
	fastf_t	pl_2d_y[MAXPTS];	/* Y 2d-projection of points */
	fastf_t	pl_2d_com[MAXPTS];	/* pre-computed common-term */
	struct plane_specific *pl_forw;	/* Forward link */
	char	pl_code[MAXPTS+1];	/* Face code string.  Decorative. */
};

/*
 *  Describe the tri_specific structure.
 */
struct tri_specific  {
	point_t	tri_A;			/* triangle vertex (A) */
	vect_t	tri_BA;			/* B - A (second point) */
	vect_t	tri_CA;			/* C - A (third point) */
	vect_t	tri_wn;			/* facet normal (non-unit) */
	vect_t	tri_N;			/* unit normal vector */
	fastf_t *tri_normals;		/* unit vertex normals A, B, C  (this is malloced storage) */
	int	tri_surfno;		/* solid specific surface number */
	struct tri_specific *tri_forw;	/* Next facet */
};

typedef struct tri_specific tri_specific_double;

/*
 *	A more memory conservative version
 */
struct tri_float_specific  {
	float	tri_A[3];			/* triangle vertex (A) */
	float	tri_BA[3];			/* B - A (second point) */
	float	tri_CA[3];			/* C - A (third point) */
	float	tri_wn[3];			/* facet normal (non-unit) */
	float	tri_N[3];			/* unit normal vector */
	signed char *tri_normals;		/* unit vertex normals A, B, C  (this is malloced storage) */
	int	tri_surfno;		/* solid specific surface number */
	struct tri_float_specific *tri_forw;	/* Next facet */
};

typedef struct tri_float_specific tri_specific_float;

#endif /* PLANE_H */
@


11.6
log
@update copyright to include span through 2003
@
text
@d20 1
a20 1
 *  $Header: /c/CVS/brlcad/librt/plane.h,v 11.5 2003/09/09 12:34:57 jra Exp $
@


11.5
log
@vertex normals are now array of chars (when "use_floats" flag is set) to further save memory
@
text
@d17 1
a17 1
 *	This software is Copyright (C) 1985 by the United States Army.
d20 1
a20 1
 *  $Header: /c/CVS/brlcad/librt/plane.h,v 11.4 2003/07/28 18:56:42 jra Exp $
@


11.5.4.1
log
@merge from HEAD
@
text
@d17 1
a17 1
 *	This software is Copyright (C) 1985-2004 by the United States Army.
d20 1
a20 1
 *  $Header: /c/CVS/brlcad/librt/plane.h,v 11.6 2004/02/02 17:39:28 morrison Exp $
@


11.5.4.2
log
@merge from head
@
text
@d20 1
a20 1
 *  $Header: /c/CVS/brlcad/librt/plane.h,v 11.5.4.1 2004/02/12 18:37:47 erikg Exp $
@


11.4
log
@Mods to allow BOT raytracing to use single precision tri_specific structs
@
text
@d20 1
a20 1
 *  $Header: /c/CVS/brlcad/librt/plane.h,v 11.3 2002/11/27 13:42:56 jra Exp $
d67 1
a67 1
	float *tri_normals;		/* unit vertex normals A, B, C  (this is malloced storage) */
@


11.3
log
@BOT primitives can now have vertex normals
@
text
@d20 1
a20 1
 *  $Header: /c/CVS/brlcad/librt/plane.h,v 11.2 1999/11/08 15:40:05 jra Exp $
d55 18
@


11.3.2.1
log
@updated for merging
@
text
@d20 1
a20 1
 *  $Header: /c/CVS/brlcad/librt/plane.h,v 11.4 2003/07/28 18:56:42 jra Exp $
a54 18

typedef struct tri_specific tri_specific_double;

/*
 *	A more memory conservative version
 */
struct tri_float_specific  {
	float	tri_A[3];			/* triangle vertex (A) */
	float	tri_BA[3];			/* B - A (second point) */
	float	tri_CA[3];			/* C - A (third point) */
	float	tri_wn[3];			/* facet normal (non-unit) */
	float	tri_N[3];			/* unit normal vector */
	float *tri_normals;		/* unit vertex normals A, B, C  (this is malloced storage) */
	int	tri_surfno;		/* solid specific surface number */
	struct tri_float_specific *tri_forw;	/* Next facet */
};

typedef struct tri_float_specific tri_specific_float;
@


11.2
log
@
Added  surfcae number to tri_specific.
@
text
@d20 1
a20 1
 *  $Header: /c/CVS/brlcad/librt/plane.h,v 11.1 1995/01/04 09:58:25 mike Rel4_4 $
d51 1
@


11.2.6.1
log
@sync branch with HEAD
@
text
@d17 1
a17 1
 *	This software is Copyright (C) 1985-2004 by the United States Army.
d20 1
a20 1
 *  $Header$
a50 1
	fastf_t *tri_normals;		/* unit vertex normals A, B, C  (this is malloced storage) */
a53 18

typedef struct tri_specific tri_specific_double;

/*
 *	A more memory conservative version
 */
struct tri_float_specific  {
	float	tri_A[3];			/* triangle vertex (A) */
	float	tri_BA[3];			/* B - A (second point) */
	float	tri_CA[3];			/* C - A (third point) */
	float	tri_wn[3];			/* facet normal (non-unit) */
	float	tri_N[3];			/* unit normal vector */
	signed char *tri_normals;		/* unit vertex normals A, B, C  (this is malloced storage) */
	int	tri_surfno;		/* solid specific surface number */
	struct tri_float_specific *tri_forw;	/* Next facet */
};

typedef struct tri_float_specific tri_specific_float;
@


11.2.8.1
log
@sync to HEAD...
@
text
@d17 1
a17 1
 *	This software is Copyright (C) 1985-2004 by the United States Army.
d20 1
a20 1
 *  $Header: /n/cad/c/CVS/brlcad/librt/plane.h,v 11.6 2004/02/02 17:39:28 morrison Exp $
a50 1
	fastf_t *tri_normals;		/* unit vertex normals A, B, C  (this is malloced storage) */
a53 18

typedef struct tri_specific tri_specific_double;

/*
 *	A more memory conservative version
 */
struct tri_float_specific  {
	float	tri_A[3];			/* triangle vertex (A) */
	float	tri_BA[3];			/* B - A (second point) */
	float	tri_CA[3];			/* C - A (third point) */
	float	tri_wn[3];			/* facet normal (non-unit) */
	float	tri_N[3];			/* unit normal vector */
	signed char *tri_normals;		/* unit vertex normals A, B, C  (this is malloced storage) */
	int	tri_surfno;		/* solid specific surface number */
	struct tri_float_specific *tri_forw;	/* Next facet */
};

typedef struct tri_float_specific tri_specific_float;
@


11.1
log
@Release_4.4
@
text
@d20 1
a20 1
 *  $Header: /m/cad/librt/RCS/plane.h,v 10.1 91/10/12 06:40:54 mike Rel4_0 $
d51 1
@


10.1
log
@Release_4.0
@
text
@d20 1
a20 1
 *  $Header: plane.h,v 9.1 89/05/19 05:56:56 mike Rel3_5 $
@


9.1
log
@Release_3.5
@
text
@d20 1
a20 1
 *  $Header: plane.h,v 8.2 89/01/19 19:52:20 mike Exp $
@


8.2
log
@For ANSI C, made tokens after #endif into comments.
@
text
@d20 1
a20 1
 *  $Header: plane.h,v 8.1 88/10/05 00:31:31 mike Locked $
@


8.1
log
@Release_3.0
@
text
@d20 1
a20 1
 *  $Header: plane.h,v 7.1 87/11/02 23:33:48 mike Rel $
d54 1
a54 1
#endif PLANE_H
@


7.1
log
@Release 2.3
@
text
@d20 1
a20 1
 *  $Header: plane.h,v 6.1 87/07/11 07:56:07 mike Rel $
@


6.1
log
@Release 2.0
@
text
@d20 1
a20 1
 *  $Header: plane.h,v 5.1 87/06/24 22:11:52 mike Rel $
@


5.1
log
@Release 1.24
@
text
@d20 1
a20 1
 *  $Header: plane.h,v 4.2 87/02/12 22:11:33 mike Exp $
@


4.2
log
@Release 1.20 -- First Formal Release
@
text
@d20 1
a20 1
 *  $Header: plane.h,v 4.1 86/12/29 03:45:33 mike Rel1 $
@


4.1
log
@BRL CAD Distribution Release 1.10
@
text
@d20 1
a20 1
 *  $Header: plane.h,v 3.1 86/07/11 01:31:11 mike Exp $
@


3.1
log
@Cleanups inspired by the crummy compiler on the Cray XMP
@
text
@d20 1
a20 1
 *  $Header: plane.h,v 3.0 86/06/10 01:32:16 mike Exp $
@


3.0
log
@rt/ and librt/ separated,
global datastructures simplified.
@
text
@d5 2
a6 1
 *  is for ARS processing.
d20 1
a20 1
 *  $Header: plane.h,v 2.1 85/08/31 06:01:59 mike Exp $
d22 2
d41 14
@


2.1
log
@Version 2 of RT
@
text
@d19 1
a19 1
 *  $Header: plane.h,v 1.3 85/03/25 11:43:46 mike Exp $
@


1.3
log
@Housekeeping
@
text
@d19 1
a19 1
 *  $Header$
@


1.2
log
@Twiddle to revision number
@
text
@d5 1
a5 1
 *  is common to ARB8 and ARS processing.
d7 11
a17 2
 * U. S. Army Ballistic Research Laboratory
 * May 1, 1984
d19 1
a19 1
 * $Revision: 1.1 $
@


1.1
log
@Initial revision
@
text
@d10 1
a10 1
 * $Revision $
@
