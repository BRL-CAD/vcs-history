head	1.9;
access;
symbols
	ansi-20040405-merged:1.5.2.2
	postmerge-20040405-ansi:1.7
	premerge-20040404-ansi:1.6
	postmerge-autoconf:1.6
	autoconf-freeze:1.5.10.2
	premerge-autoconf:1.6
	ansi-20040316-freeze:1.5.2.1
	postmerge-20040315-windows:1.6
	premerge-20040315-windows:1.6
	windows-20040315-freeze:1.5.4.1
	autoconf-20031203:1.5
	autoconf-20031202:1.5
	autoconf-branch:1.5.0.10
	phong-branch:1.5.0.8
	photonmap-branch:1.5.0.6
	rel-6-1-DP:1.5
	windows-branch:1.5.0.4
	rel-6-0-2:1.3
	ansi-branch:1.5.0.2
	rel-6-0-1-branch:1.3.0.2
	hartley-6-0-post:1.4
	hartley-6-0-pre:1.3
	rel-6-0-1:1.3
	rel-6-0:1.3
	rel-5-4:1.2
	offsite-5-3-pre:1.3
	rel-5-3:1.2
	rel-5-2:1.2
	rel-5-1-branch:1.2.0.2
	rel-5-1:1.2
	rel-5-0:1.2
	rel-5-0-beta:1.2
	rel-4-5:1.2
	ctj-4-5-post:1.2
	ctj-4-5-pre:1.2;
locks; strict;
comment	@ * @;


1.9
date	2004.05.21.18.07.34;	author morrison;	state dead;
branches;
next	1.8;

1.8
date	2004.05.10.15.30.46;	author erikg;	state Exp;
branches;
next	1.7;

1.7
date	2004.04.05.08.48.58;	author morrison;	state Exp;
branches;
next	1.6;

1.6
date	2004.02.02.17.39.28;	author morrison;	state Exp;
branches;
next	1.5;

1.5
date	2002.08.20.17.08.08;	author jra;	state Exp;
branches
	1.5.2.1
	1.5.4.1
	1.5.10.1;
next	1.4;

1.4
date	2002.08.15.20.55.20;	author hartley;	state Exp;
branches;
next	1.3;

1.3
date	2000.08.21.02.02.34;	author butler;	state Exp;
branches;
next	1.2;

1.2
date	95.12.01.02.49.33;	author mike;	state Exp;
branches;
next	1.1;

1.1
date	95.09.20.13.03.43;	author stay;	state Exp;
branches;
next	;

1.5.2.1
date	2002.09.19.18.01.45;	author morrison;	state Exp;
branches;
next	1.5.2.2;

1.5.2.2
date	2004.03.17.21.18.56;	author morrison;	state Exp;
branches;
next	;

1.5.4.1
date	2004.03.11.23.43.44;	author morrison;	state Exp;
branches;
next	;

1.5.10.1
date	2004.02.12.18.37.46;	author erikg;	state Exp;
branches;
next	1.5.10.2;

1.5.10.2
date	2004.03.15.14.07.28;	author erikg;	state Exp;
branches;
next	;


desc
@@


1.9
log
@moved to src/
@
text
@/* 
 *	N U R B _ T R I M _ U T I L . C
 *
 * nurb_trim.c - trimming curve Utilities.
 * 
 * Author:  Paul R. Stay
 * Source
 * 	SECAD/VLD Computing Consortium, Bldg 394
 * 	The US Army Ballistic Research Laboratory
 * 	Aberdeen Proving Ground, Maryland 21005
 * 
 * Date: Mon July 3, 1995
 * 
 * Copyright Notice - 
 * 	This software is Copyright (C) 1990-2004 by the United States Army.
 * 	All rights reserved.
 * 
 */
#ifndef lint
static const char rcs_ident[] = "$Header: /n/xoff/cvs/brlcad/librt/nurb_trim_util.c,v 1.8 2004/05/10 15:30:46 erikg Exp $";
#endif

#ifdef HAVE_CONFIG_H
# include "config.h"
#endif



#include <stdio.h>
#include <math.h>

#include "machine.h"
#include "vmath.h"
#include "raytrace.h"
#include "nurb.h"

/* Check to see if the curve conmtrol polygon 
 * wonders outside the parametric range given.
 * This is usefull if a trimming curve control polygon is outside
 * but the evaluated curve is not. We will want to refine the 
 * curve so that is lies within the range;
 * otherwise it breaks the surface evaluation 
 */

int
rt_nurb_crv_in_range(struct edge_g_cnurb *crv, fastf_t u_min, fastf_t u_max, fastf_t v_min, fastf_t v_max)
{
	point_t eval;
	fastf_t *pts;
	int	coords = RT_NURB_EXTRACT_COORDS( crv->pt_type );
	int 	rat = RT_NURB_IS_PT_RATIONAL(crv->pt_type);
	int	i;

	pts = &crv->ctl_points[0];
	
	for( i = 0; i < crv->c_size; i++)
	{
		if (rat)
		{
			eval[0] = pts[0] / pts[2];
			eval[1] = pts[1] / pts[2];
			eval[2] = 1;
		} else	{
			eval[0] = pts[0];
			eval[1] = pts[1];
			eval[2] = 1;
		}

		if( eval[0] < u_min || eval[0] > u_max )
			return 0;

		if( eval[1] < v_min || eval[1] > v_max )
			return 0;

		pts += coords;
	}
	return 1;	
}
@


1.8
log
@change conf.h to a wrapped config.h
@
text
@d20 1
a20 1
static const char rcs_ident[] = "$Header: /cvs/brlcad/librt/nurb_trim_util.c,v 1.7 2004/04/05 08:48:58 morrison Exp $";
@


1.7
log
@merge of ansi-6-0-branch into HEAD
@
text
@d20 1
a20 1
static const char rcs_ident[] = "$Header$";
d23 5
a27 1
#include "conf.h"
@


1.6
log
@update copyright to include span through 2003
@
text
@d20 1
a20 1
static const char rcs_ident[] = "$Header: /c/CVS/brlcad/librt/nurb_trim_util.c,v 1.5 2002/08/20 17:08:08 jra Exp $";
d42 1
a42 4
rt_nurb_crv_in_range( crv, u_min, u_max, v_min, v_max)
struct edge_g_cnurb * crv;
fastf_t u_min, u_max;
fastf_t v_min, v_max;
@


1.5
log
@Restoration of entire source tree to Pre-Hartley state
@
text
@d15 1
a15 1
 * 	This software is Copyright (C) 1990 by the United States Army.
d20 1
a20 1
static const char rcs_ident[] = "$Header: /c/CVS/brlcad/librt/nurb_trim_util.c,v 1.3 2000/08/21 02:02:34 butler Exp $";
@


1.5.4.1
log
@sync to HEAD...
@
text
@d15 1
a15 1
 * 	This software is Copyright (C) 1990-2004 by the United States Army.
d20 1
a20 1
static const char rcs_ident[] = "$Header: /n/cad/c/CVS/brlcad/librt/nurb_trim_util.c,v 1.6 2004/02/02 17:39:28 morrison Exp $";
@


1.5.10.1
log
@merge from HEAD
@
text
@d15 1
a15 1
 * 	This software is Copyright (C) 1990-2004 by the United States Army.
d20 1
a20 1
static const char rcs_ident[] = "$Header: /c/CVS/brlcad/librt/nurb_trim_util.c,v 1.6 2004/02/02 17:39:28 morrison Exp $";
@


1.5.10.2
log
@merge from head
@
text
@d20 1
a20 1
static const char rcs_ident[] = "$Header: /c/CVS/brlcad/librt/nurb_trim_util.c,v 1.5.10.1 2004/02/12 18:37:46 erikg Exp $";
@


1.5.2.1
log
@Initial ANSIfication
@
text
@d20 1
a20 1
static const char rcs_ident[] = "$Header: /c/CVS/brlcad/librt/nurb_trim_util.c,v 1.5 2002/08/20 17:08:08 jra Exp $";
d42 4
a45 1
rt_nurb_crv_in_range(struct edge_g_cnurb *crv, fastf_t u_min, fastf_t u_max, fastf_t v_min, fastf_t v_max)
@


1.5.2.2
log
@sync branch with HEAD
@
text
@d15 1
a15 1
 * 	This software is Copyright (C) 1990-2004 by the United States Army.
d20 1
a20 1
static const char rcs_ident[] = "$Header$";
@


1.4
log
@Converted from K&R to ANSI C - RFH
@
text
@d42 4
a45 1
rt_nurb_crv_in_range(struct edge_g_cnurb *crv, fastf_t u_min, fastf_t u_max, fastf_t v_min, fastf_t v_max)
@


1.3
log
@Massive compilation warnings eliminated
@
text
@d20 1
a20 1
static const char rcs_ident[] = "$Header: /c/CVS/brlcad/librt/nurb_trim_util.c,v 1.2 1995/12/01 02:49:33 mike Exp $";
d42 1
a42 4
rt_nurb_crv_in_range( crv, u_min, u_max, v_min, v_max)
struct edge_g_cnurb * crv;
fastf_t u_min, u_max;
fastf_t v_min, v_max;
@


1.2
log
@LIBNURB data structures have been fully merged withNMG data structures.
@
text
@d20 1
a20 1
static char	rcs_ident[] = "$Header: /n/wolf/m/cad/libnurb/RCS/nurb_trim_util.c,v 1.1 1995/09/20 13:03:43 stay Exp $";
@


1.1
log
@Initial revision
@
text
@d20 1
a20 1
static char	rcs_ident[] = "$Header: /m/cad/libnurb/RCS/nurb_trim.c,v 11.1 95/01/04 09:53:54 mike Rel4_4 $";
d43 1
a43 1
struct cnurb * crv;
@
