head	11.7;
access;
symbols
	ansi-20040405-merged:11.3.2.2
	postmerge-20040405-ansi:11.5
	premerge-20040404-ansi:11.4
	postmerge-autoconf:11.4
	autoconf-freeze:11.3.10.1
	premerge-autoconf:11.4
	ansi-20040316-freeze:11.3.2.1
	postmerge-20040315-windows:11.4
	premerge-20040315-windows:11.4
	windows-20040315-freeze:11.3.4.1
	autoconf-20031203:11.3
	autoconf-20031202:11.3
	autoconf-branch:11.3.0.10
	phong-branch:11.3.0.8
	photonmap-branch:11.3.0.6
	rel-6-1-DP:11.3
	windows-branch:11.3.0.4
	rel-6-0-2:11.1
	ansi-branch:11.3.0.2
	rel-6-0-1-branch:11.1.0.4
	hartley-6-0-post:11.2
	hartley-6-0-pre:11.1
	rel-6-0-1:11.1
	rel-6-0:11.1
	rel-5-4:11.1
	offsite-5-3-pre:11.1
	rel-5-3:11.1
	rel-5-2:11.1
	rel-5-1-branch:11.1.0.2
	rel-5-1:11.1
	rel-5-0:11.1
	rel-5-0-beta:11.1
	rel-4-5:11.1
	ctj-4-5-post:11.1
	ctj-4-5-pre:11.1
	rel-4-4:11.1
	rel-4-0:10.1;
locks; strict;
comment	@ * @;


11.7
date	2004.05.21.18.07.34;	author morrison;	state dead;
branches;
next	11.6;

11.6
date	2004.05.10.15.30.47;	author erikg;	state Exp;
branches;
next	11.5;

11.5
date	2004.04.05.08.48.58;	author morrison;	state Exp;
branches;
next	11.4;

11.4
date	2004.02.02.17.39.28;	author morrison;	state Exp;
branches;
next	11.3;

11.3
date	2002.08.20.17.08.09;	author jra;	state Exp;
branches
	11.3.2.1
	11.3.4.1
	11.3.10.1;
next	11.2;

11.2
date	2002.08.15.20.55.20;	author hartley;	state Exp;
branches;
next	11.1;

11.1
date	95.01.04.09.53.57;	author mike;	state Rel4_4;
branches
	11.1.1.1;
next	10.3;

10.3
date	94.08.11.01.20.54;	author gdurf;	state Exp;
branches;
next	10.2;

10.2
date	92.05.28.22.12.19;	author mike;	state Exp;
branches;
next	10.1;

10.1
date	91.10.12.06.39.16;	author mike;	state Rel4_0;
branches;
next	1.2;

1.2
date	91.06.14.09.42.27;	author stay;	state Exp;
branches;
next	1.1;

1.1
date	91.05.18.02.37.14;	author stay;	state Exp;
branches;
next	;

11.1.1.1
date	98.01.29.06.43.38;	author mike;	state Rel4_5;
branches;
next	;

11.3.2.1
date	2002.09.19.18.01.46;	author morrison;	state Exp;
branches;
next	11.3.2.2;

11.3.2.2
date	2004.03.17.21.18.57;	author morrison;	state Exp;
branches;
next	;

11.3.4.1
date	2004.03.11.23.43.44;	author morrison;	state Exp;
branches;
next	;

11.3.10.1
date	2004.02.12.18.37.46;	author erikg;	state Exp;
branches;
next	;


desc
@Oslo Algorithm Mapping
@


11.7
log
@moved to src/
@
text
@/*
 *       M A P _ O S L O . C
 *
 * Function -
 *     Map the olso matrix with the old curve resulting in a new one.
 * 
 * Author -
 *     Paul R. Stay
 *
 * Source -
 *     SECAD/VLD Computing Consortium, Bldg 394
 *     The U.S. Army Ballistic Research Laboratory
 *     Aberdeen Proving Ground, Maryland 21005
 *
 * Copyright Notice -
 *     This software is Copyright (C) 1990-2004 by the United States Army.
 *     All rights reserved.
 */

#ifdef HAVE_CONFIG_H
# include "config.h"
#endif



#include <stdio.h>
#include "machine.h"
#include "externs.h"
#include "vmath.h"
#include "raytrace.h"
#include "nurb.h"

/* This routine takes a oslo refinement matrix as described in the
 * paper "Making the Oslo Algorithm More Efficient" and maps it to the
 * old control points resulting in new control points.
 * (this procedure should probably never called by a user program but
 * should remain internal to the library. Bounds are given to facilitate
 * easier spliting of the surface.
 */

void
rt_nurb_map_oslo(struct oslo_mat *oslo, fastf_t *old_pts, fastf_t *new_pts, int o_stride, int n_stride, int lower, int upper, int pt_type)
                      			/* Oslo matrix  */
                 			/* Old control points */
                 			/* New control points */
   	         			/* inc to next point of old mesh*/
   	         			/* inc to next point of new mesh*/
   	              	/* Upper and lower bounds for curve generation */
   	        
{
	register fastf_t *c_ptr;		/* new curve pointer */
	register fastf_t *o_pts;
	register struct oslo_mat *o_ptr;	/* oslo matrix pointer */
	register int	k;
	int	j, 				/* j loop */
		i;				/* oslo loop */
	int	coords;

	coords = RT_NURB_EXTRACT_COORDS( pt_type);

	c_ptr = new_pts;

	if ( lower != 0)
		for ( i = 0,  o_ptr = oslo; i < lower; i++,  o_ptr = 
		    o_ptr->next)
			;
	else
		o_ptr = oslo;

	for ( j = lower; j < upper; j++, o_ptr = o_ptr->next) {
		fastf_t o_scale;
		o_pts = &old_pts[(o_ptr->offset * o_stride)];

		o_scale = o_ptr->o_vec[0];

		for ( k = 0; k < coords; k++)
			c_ptr[k] = o_pts[k] * o_scale;

		for ( i = 1; i <= o_ptr->osize; i++) {
			o_scale = o_ptr->o_vec[i];
			o_pts += o_stride;
			for ( k = 0; k < coords; k++)
				c_ptr[k] += o_scale * o_pts[k];
		}
		c_ptr += n_stride;
	}
}
@


11.6
log
@change conf.h to a wrapped config.h
@
text
@@


11.5
log
@merge of ansi-6-0-branch into HEAD
@
text
@d20 5
a24 1
#include "conf.h"
@


11.4
log
@update copyright to include span through 2003
@
text
@d38 8
a45 8
rt_nurb_map_oslo( oslo, old_pts, new_pts, o_stride, n_stride, lower, upper, pt_type)
struct oslo_mat *oslo;			/* Oslo matrix  */
fastf_t *old_pts;			/* Old control points */
fastf_t *new_pts;			/* New control points */
int	o_stride;			/* inc to next point of old mesh*/
int	n_stride;			/* inc to next point of new mesh*/
int	lower,  upper;	/* Upper and lower bounds for curve generation */
int	pt_type;
@


11.3
log
@Restoration of entire source tree to Pre-Hartley state
@
text
@d16 1
a16 1
 *     This software is Copyright (C) 1990 by the United States Army.
@


11.3.4.1
log
@sync to HEAD...
@
text
@d16 1
a16 1
 *     This software is Copyright (C) 1990-2004 by the United States Army.
@


11.3.10.1
log
@merge from HEAD
@
text
@d16 1
a16 1
 *     This software is Copyright (C) 1990-2004 by the United States Army.
@


11.3.2.1
log
@Initial ANSIfication
@
text
@d38 8
a45 8
rt_nurb_map_oslo(struct oslo_mat *oslo, fastf_t *old_pts, fastf_t *new_pts, int o_stride, int n_stride, int lower, int upper, int pt_type)
                      			/* Oslo matrix  */
                 			/* Old control points */
                 			/* New control points */
   	         			/* inc to next point of old mesh*/
   	         			/* inc to next point of new mesh*/
   	              	/* Upper and lower bounds for curve generation */
   	        
@


11.3.2.2
log
@sync branch with HEAD
@
text
@d16 1
a16 1
 *     This software is Copyright (C) 1990-2004 by the United States Army.
@


11.2
log
@Converted from K&R to ANSI C - RFH
@
text
@d38 8
a45 8
rt_nurb_map_oslo(struct oslo_mat *oslo, fastf_t *old_pts, fastf_t *new_pts, int o_stride, int n_stride, int lower, int upper, int pt_type)
                      			/* Oslo matrix  */
                 			/* Old control points */
                 			/* New control points */
   	         			/* inc to next point of old mesh*/
   	         			/* inc to next point of new mesh*/
   	              	/* Upper and lower bounds for curve generation */
   	        
@


11.1
log
@Release_4.4
@
text
@d38 8
a45 8
rt_nurb_map_oslo( oslo, old_pts, new_pts, o_stride, n_stride, lower, upper, pt_type)
struct oslo_mat *oslo;			/* Oslo matrix  */
fastf_t *old_pts;			/* Old control points */
fastf_t *new_pts;			/* New control points */
int	o_stride;			/* inc to next point of old mesh*/
int	n_stride;			/* inc to next point of new mesh*/
int	lower,  upper;	/* Upper and lower bounds for curve generation */
int	pt_type;
@


11.1.1.1
log
@Release_4.5
@
text
@@


10.3
log
@Added includes
@
text
@@


10.2
log
@Expanded names of manifest constants
@
text
@d20 2
d24 1
d26 1
@


10.1
log
@Release_4.0
@
text
@d51 1
a51 1
	coords = EXTRACT_COORDS( pt_type);
@


1.2
log
@fixed nurb.h
@
text
@@


1.1
log
@Initial revision
@
text
@d23 1
a23 1
#include "./nurb.h"
@
