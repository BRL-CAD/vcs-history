head	11.15;
access;
symbols
	ansi-20040405-merged:11.11.2.2
	postmerge-20040405-ansi:11.13
	premerge-20040404-ansi:11.12
	postmerge-autoconf:11.12
	autoconf-freeze:11.11.10.2
	premerge-autoconf:11.12
	ansi-20040316-freeze:11.11.2.1
	postmerge-20040315-windows:11.12
	premerge-20040315-windows:11.12
	windows-20040315-freeze:11.11.4.1
	autoconf-20031203:11.11
	autoconf-20031202:11.11
	autoconf-branch:11.11.0.10
	phong-branch:11.11.0.8
	photonmap-branch:11.11.0.6
	rel-6-1-DP:11.11
	windows-branch:11.11.0.4
	rel-6-0-2:11.9
	ansi-branch:11.11.0.2
	rel-6-0-1-branch:11.9.0.2
	hartley-6-0-post:11.10
	hartley-6-0-pre:11.9
	rel-6-0-1:11.9
	rel-6-0:11.9
	rel-5-4:11.6
	offsite-5-3-pre:11.8
	rel-5-3:11.6
	rel-5-2:11.6
	rel-5-1-branch:11.6.0.2
	rel-5-1:11.6
	rel-5-0:11.4
	rel-5-0-beta:11.3
	rel-4-5:11.3
	ctj-4-5-post:11.2
	ctj-4-5-pre:11.3
	rel-4-4:11.1
	rel-4-0:10.1
	rel-3-5:9.1;
locks; strict;
comment	@ * @;


11.15
date	2004.05.21.18.07.35;	author morrison;	state dead;
branches;
next	11.14;

11.14
date	2004.05.10.15.30.47;	author erikg;	state Exp;
branches;
next	11.13;

11.13
date	2004.04.05.08.48.58;	author morrison;	state Exp;
branches;
next	11.12;

11.12
date	2004.02.02.17.39.28;	author morrison;	state Exp;
branches;
next	11.11;

11.11
date	2002.08.20.17.08.09;	author jra;	state Exp;
branches
	11.11.2.1
	11.11.4.1
	11.11.10.1;
next	11.10;

11.10
date	2002.08.15.20.55.21;	author hartley;	state Exp;
branches;
next	11.9;

11.9
date	2001.05.17.20.05.25;	author morrison;	state Exp;
branches;
next	11.8;

11.8
date	2000.08.23.00.35.53;	author mike;	state Exp;
branches;
next	11.7;

11.7
date	2000.07.10.23.01.48;	author mike;	state Exp;
branches;
next	11.6;

11.6
date	99.12.23.06.00.04;	author mike;	state Exp;
branches;
next	11.5;

11.5
date	99.11.24.21.44.30;	author mike;	state Exp;
branches;
next	11.4;

11.4
date	99.06.03.01.12.52;	author mike;	state Exp;
branches;
next	11.3;

11.3
date	97.10.23.19.13.45;	author cjohnson;	state Exp;
branches;
next	11.2;

11.2
date	95.11.06.19.51.51;	author cjohnson;	state Exp;
branches;
next	11.1;

11.1
date	95.01.04.09.58.32;	author mike;	state Rel4_4;
branches;
next	10.3;

10.3
date	94.08.10.19.42.35;	author gdurf;	state Exp;
branches;
next	10.2;

10.2
date	92.05.08.02.21.26;	author mike;	state Exp;
branches;
next	10.1;

10.1
date	91.10.12.06.41.53;	author mike;	state Rel4_0;
branches;
next	9.3;

9.3
date	91.06.29.23.01.06;	author mike;	state Exp;
branches;
next	9.2;

9.2
date	91.01.12.07.50.49;	author mike;	state Exp;
branches;
next	9.1;

9.1
date	89.05.19.05.59.11;	author mike;	state Rel3_5;
branches;
next	1.2;

1.2
date	89.04.28.07.29.21;	author mike;	state Exp;
branches;
next	1.1;

1.1
date	89.02.13.08.57.32;	author mike;	state Exp;
branches;
next	;

11.11.2.1
date	2002.09.19.18.01.46;	author morrison;	state Exp;
branches;
next	11.11.2.2;

11.11.2.2
date	2004.03.17.21.18.58;	author morrison;	state Exp;
branches;
next	;

11.11.4.1
date	2004.03.11.23.43.46;	author morrison;	state Exp;
branches;
next	;

11.11.10.1
date	2004.02.12.18.37.47;	author erikg;	state Exp;
branches;
next	11.11.10.2;

11.11.10.2
date	2004.03.15.14.07.29;	author erikg;	state Exp;
branches;
next	;


desc
@Code to "adjust" region-ID codes based on input expressions.
For GIFT compatability..
@


11.15
log
@moved to src/
@
text
@/*
 *			R E G I O N F I X
 *
 *  Subroutines for adjusting old GIFT-style region-IDs,
 *  to take into account the presence of instancing.
 *
 *  Author -
 *	Michael John Muuss
 *  
 *  Source -
 *	SECAD/VLD Computing Consortium, Bldg 394
 *	The U. S. Army Ballistic Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5066
 *  
 *  Copyright Notice -
 *	This software is Copyright (C) 1989-2004 by the United States Army.
 *	All rights reserved.
 */
#ifndef lint
static const char RCSregionfix[] = "@@(#)$Header: /n/xoff/cvs/brlcad/librt/regionfix.c,v 11.14 2004/05/10 15:30:47 erikg Exp $ (BRL)";
#endif

#ifdef HAVE_CONFIG_H
# include "config.h"
#endif



#include <stdio.h>
#include <ctype.h>
#if USE_REGCOMP
#include <regex.h>
#endif
#ifdef USE_STRING_H
#include <string.h>
#else
#include <strings.h>
#endif

#include "machine.h"
#include "vmath.h"
#include "externs.h"
#include "raytrace.h"

#include "./debug.h"

/*
 *			R T_ R E G I O N F I X
 *
 *  Apply any deltas to reg_regionid values
 *  to allow old applications that use the reg_regionid number
 *  to distinguish between different instances of the same
 *  prototype region.
 *
 *  Called once, from rt_prep(), before raytracing begins.
 */
void
rt_regionfix(struct rt_i *rtip)
{
	FILE	*fp;
	char	*file;
	char	*line;
	char	*tabp;
	int	linenum = 0;
	register struct region	*rp;
	int	ret;
	int	oldid;
	int	newid;
	struct bu_vls	name;

	RT_CK_RTI(rtip);

	/*  If application has provided an alternative file name
	 *  before rt_prep() was called, then use that.
	 *  Otherwise, replace ".g" suffix on database name
	 *  with ".regexp".
	 */
	bu_vls_init(&name);
	file = rtip->rti_region_fix_file;
	if( file == (char *)NULL )  {
		bu_vls_strcpy( &name, rtip->rti_dbip->dbi_filename );
		if( (tabp = strrchr( bu_vls_addr(&name), '.' )) != NULL )  {
			/* Chop off "." and suffix */
			bu_vls_trunc( &name, tabp-bu_vls_addr(&name) );
		}
		bu_vls_strcat( &name, ".regexp" );
		file = bu_vls_addr(&name);
	}

	if( (fp = fopen( file, "r" )) == NULL )	 {
		if( rtip->rti_region_fix_file ) perror(file);
		bu_vls_free(&name);
		return;
	}
	bu_log("librt/rt_regionfix(%s):  Modifying instanced region-ids.\n", file);

	while( (line = rt_read_cmd( fp )) != (char *) 0 )  {
#if USE_REGCOMP
		regex_t	re_space;
#endif
		linenum++;
		/*  For now, establish a simple format:
		 *  regexp TAB [more_white_space] formula SEMICOLON
		 */
		if( (tabp = strchr( line, '\t' )) == (char *)0 )  {
			bu_log("%s: missing TAB on line %d:\n%s\n", file, linenum, line );
			continue;		/* just ignore it */
		}
		*tabp++ = '\0';
		while( *tabp && isspace( *tabp ) )  tabp++;
#if USE_REGCOMP
		if( (ret = regcomp(&re_space,line,0)) != 0 )  {
			bu_log("%s: line %d, regcomp error '%d'\n", file, line, ret );
			continue;		/* just ignore it */
		}
#else
		{
			char	*err;
			if( (err = re_comp(line)) != (char *)0 )  {
				bu_log("%s: line %d, re_comp error '%s'\n", file, line, err );
				continue;		/* just ignore it */
			}
		}
#endif
		
		for( BU_LIST_FOR( rp, region, &(rtip->HeadRegion) ) )  {
#if USE_REGCOMP
			ret = regexec(&re_space, (char *)rp->reg_name, 0, 0,0);
#else				      
			ret = re_exec((char *)rp->reg_name);
#endif
			if(RT_G_DEBUG&DEBUG_INSTANCE)  {
				bu_log("'%s' %s '%s'\n", line,
					ret==1 ? "==" : "!=",
					rp->reg_name);
			}
			if( (ret) == 0  )
				continue;	/* didn't match */
			if( ret == -1 )  {
				bu_log("%s: line %d, invalid regular expression\n", file, linenum);
				break;		/* on to next RE */
			}
			/*
			 *  RE matched this name, perform indicated operation
			 *  For now, choices are limited.  Later this might
			 *  become an interpreted expression.  For now:
			 *	99	replace old region id with "num"
			 *	+99	increment old region id with "num"
			 *		(which may itself be a negative number)
			 *	+uses	increment old region id by the
			 *		current instance (use) count.
			 */
			oldid = rp->reg_regionid;
			if( strcmp( tabp, "+uses" ) == 0  )  {
				newid = oldid + rp->reg_instnum;
			} else if( *tabp == '+' )  {
				newid = oldid + atoi( tabp+1 );
			} else {
				newid = atoi( tabp );
				if( newid == 0 )  bu_log("%s, line %d Warning:  new id = 0\n", file, linenum );
			}
			if(RT_G_DEBUG&DEBUG_INSTANCE)  {
				bu_log("%s instance %d:  region id changed from %d to %d\n",
					rp->reg_name, rp->reg_instnum,
					oldid, newid );
			}
			rp->reg_regionid = newid;
		}
#if USE_REGCOMP
		regfree(&re_space);
#endif
		bu_free( line, "reg_expr line");
	}
	fclose( fp );
	bu_vls_free(&name);
}
@


11.14
log
@change conf.h to a wrapped config.h
@
text
@d20 1
a20 1
static const char RCSregionfix[] = "@@(#)$Header: /cvs/brlcad/librt/regionfix.c,v 11.13 2004/04/05 08:48:58 morrison Exp $ (BRL)";
@


11.13
log
@merge of ansi-6-0-branch into HEAD
@
text
@d20 1
a20 1
static const char RCSregionfix[] = "@@(#)$Header$ (BRL)";
d23 5
a27 1
#include "conf.h"
@


11.12
log
@update copyright to include span through 2003
@
text
@d20 1
a20 1
static const char RCSregionfix[] = "@@(#)$Header: /c/CVS/brlcad/librt/regionfix.c,v 11.11 2002/08/20 17:08:09 jra Exp $ (BRL)";
d54 1
a54 2
rt_regionfix( rtip )
struct rt_i	*rtip;
@


11.11
log
@Restoration of entire source tree to Pre-Hartley state
@
text
@d16 1
a16 1
 *	This software is Copyright (C) 1989 by the United States Army.
d20 1
a20 1
static const char RCSregionfix[] = "@@(#)$Header: /c/CVS/brlcad/librt/regionfix.c,v 11.9 2001/05/17 20:05:25 morrison Exp $ (BRL)";
@


11.11.4.1
log
@sync to HEAD...
@
text
@d16 1
a16 1
 *	This software is Copyright (C) 1989-2004 by the United States Army.
d20 1
a20 1
static const char RCSregionfix[] = "@@(#)$Header: /n/cad/c/CVS/brlcad/librt/regionfix.c,v 11.12 2004/02/02 17:39:28 morrison Exp $ (BRL)";
@


11.11.10.1
log
@merge from HEAD
@
text
@d16 1
a16 1
 *	This software is Copyright (C) 1989-2004 by the United States Army.
d20 1
a20 1
static const char RCSregionfix[] = "@@(#)$Header: /c/CVS/brlcad/librt/regionfix.c,v 11.12 2004/02/02 17:39:28 morrison Exp $ (BRL)";
@


11.11.10.2
log
@merge from head
@
text
@d20 1
a20 1
static const char RCSregionfix[] = "@@(#)$Header: /c/CVS/brlcad/librt/regionfix.c,v 11.11.10.1 2004/02/12 18:37:47 erikg Exp $ (BRL)";
@


11.11.2.1
log
@Initial ANSIfication
@
text
@d20 1
a20 1
static const char RCSregionfix[] = "@@(#)$Header: /c/CVS/brlcad/librt/regionfix.c,v 11.11 2002/08/20 17:08:09 jra Exp $ (BRL)";
d54 2
a55 1
rt_regionfix(struct rt_i *rtip)
@


11.11.2.2
log
@sync branch with HEAD
@
text
@d16 1
a16 1
 *	This software is Copyright (C) 1989-2004 by the United States Army.
d20 1
a20 1
static const char RCSregionfix[] = "@@(#)$Header$ (BRL)";
@


11.10
log
@Converted from K&R to ANSI C - RFH
@
text
@d54 2
a55 1
rt_regionfix(struct rt_i *rtip)
@


11.9
log
@rt_g.debug -> RT_G_DEBUG
@
text
@d20 1
a20 1
static const char RCSregionfix[] = "@@(#)$Header: /c/CVS/brlcad/librt/regionfix.c,v 11.8 2000/08/23 00:35:53 mike Exp $ (BRL)";
d54 1
a54 2
rt_regionfix( rtip )
struct rt_i	*rtip;
@


11.8
log
@
lint
@
text
@d20 1
a20 1
static const char RCSregionfix[] = "@@(#)$Header: /c/CVS/brlcad/librt/regionfix.c,v 11.7 2000/07/10 23:01:48 mike Exp $ (BRL)";
d129 1
a129 1
			if(rt_g.debug&DEBUG_INSTANCE)  {
d159 1
a159 1
			if(rt_g.debug&DEBUG_INSTANCE)  {
@


11.7
log
@
Added "const" to RCSid string, to silence warnings of unused variable
on GCC compilers
@
text
@d20 1
a20 1
static const char RCSregionfix[] = "@@(#)$Header: /c/CVS/brlcad/librt/regionfix.c,v 11.6 1999/12/23 06:00:04 mike Exp $ (BRL)";
a61 1
	char	*err;
d114 6
a119 3
		if( (err = re_comp(line)) != (char *)0 )  {
			bu_log("%s: line %d, re_comp error '%s'\n", file, line, err );
			continue;		/* just ignore it */
@


11.6
log
@
struct region is now a bu_list
@
text
@d20 1
a20 1
static char RCSregionfix[] = "@@(#)$Header: /c/CVS/brlcad/librt/regionfix.c,v 11.5 1999/11/24 21:44:30 mike Exp $ (BRL)";
@


11.5
log
@
Removed includes of compat header files rtstring.h and rtlist.h
@
text
@d20 1
a20 1
static char RCSregionfix[] = "@@(#)$Header: /c/CVS/brlcad/librt/regionfix.c,v 11.4 1999/06/03 01:12:52 mike Exp $ (BRL)";
d121 1
a121 2
		rp = rtip->HeadRegion;
		for( ; rp != REGION_NULL; rp = rp->reg_forw )  {
@


11.4
log
@
sed4
@
text
@d20 1
a20 1
static char RCSregionfix[] = "@@(#)$Header: /c/CVS/brlcad/librt/regionfix.c,v 11.3 1997/10/23 19:13:45 cjohnson Exp $ (BRL)";
a38 1
#include "rtstring.h"
@


11.3
log
@#ifdef re_comp and re_exec with regcomp and regexec
@
text
@d20 1
a20 1
static char RCSregionfix[] = "@@(#)$Header: /vld/cjohnson/cvsroot/brlcad/librt/regionfix.c,v 11.2 1995/11/06 19:51:51 cjohnson Exp $ (BRL)";
d68 1
a68 1
	struct rt_vls	name;
d77 1
a77 1
	rt_vls_init(&name);
d80 2
a81 2
		rt_vls_strcpy( &name, rtip->rti_dbip->dbi_filename );
		if( (tabp = strrchr( rt_vls_addr(&name), '.' )) != NULL )  {
d83 1
a83 1
			rt_vls_trunc( &name, tabp-rt_vls_addr(&name) );
d85 2
a86 2
		rt_vls_strcat( &name, ".regexp" );
		file = rt_vls_addr(&name);
d91 1
a91 1
		rt_vls_free(&name);
d94 1
a94 1
	rt_log("librt/rt_regionfix(%s):  Modifying instanced region-ids.\n", file);
d105 1
a105 1
			rt_log("%s: missing TAB on line %d:\n%s\n", file, linenum, line );
d112 1
a112 1
			rt_log("%s: line %d, regcomp error '%d'\n", file, line, ret );
d117 1
a117 1
			rt_log("%s: line %d, re_comp error '%s'\n", file, line, err );
d130 1
a130 1
				rt_log("'%s' %s '%s'\n", line,
d137 1
a137 1
				rt_log("%s: line %d, invalid regular expression\n", file, linenum);
d157 1
a157 1
				if( newid == 0 )  rt_log("%s, line %d Warning:  new id = 0\n", file, linenum );
d160 1
a160 1
				rt_log("%s instance %d:  region id changed from %d to %d\n",
d169 1
a169 1
		rt_free( line, "reg_expr line");
d172 1
a172 1
	rt_vls_free(&name);
@


11.2
log
@Fixxed a memory leak.  An rt_vls that was not getting freed in prep.
@
text
@d20 1
a20 1
static char RCSregionfix[] = "@@(#)$Header: /m/cad/librt/RCS/regionfix.c,v 11.1 1995/01/04 09:58:32 mike Rel4_4 cjohnson $ (BRL)";
d27 3
d97 3
d110 6
d120 1
d124 3
d128 1
d166 3
@


11.1
log
@Release_4.4
@
text
@d20 1
a20 1
static char RCSregionfix[] = "@@(#)$Header: /m/cad/librt/RCS/regionfix.c,v 10.3 94/08/10 19:42:35 gdurf Exp $ (BRL)";
d88 1
@


10.3
log
@Factored ifdefs
@
text
@d20 1
a20 1
static char RCSregionfix[] = "@@(#)$Header: /m/cad/librt/RCS/regionfix.c,v 10.2 1992/05/08 02:21:26 mike Exp gdurf $ (BRL)";
@


10.2
log
@Moved from rt/ to librt/, changed calling sequence.
@
text
@d20 1
a20 1
static char RCSregionfix[] = "@@(#)$Header: /m/cad/librt/RCS/regionfix.c,v 10.1 91/10/12 06:41:53 mike Rel4_0 Locker: mike $ (BRL)";
d23 2
d27 3
a29 1
#ifdef BSD
a30 2
#else
#include <string.h>
@


10.1
log
@Release_4.0
@
text
@d20 1
a20 1
static char RCSregionfix[] = "@@(#)$Header: /m/cad/rt/RCS/regionfix.c,v 9.3 91/06/29 23:01:06 mike Exp $ (BRL)";
a35 1
#include "./material.h"
d37 1
a37 1
#include "rdebug.h"
d40 1
a40 1
 *			R E G I O N F I X
d46 2
d50 2
a51 3
regionfix( ap, file )
struct application	*ap;
char			*file;
d54 1
d63 1
d65 19
d85 1
a85 1
		perror(file);
d88 1
d93 1
a93 1
		 *  regexp TAB formula SEMICOLON
d106 1
a106 1
		rp = ap->a_rt_i->HeadRegion;
d109 1
a109 1
			if(rdebug&RDEBUG_INSTANCE)  {
d139 1
a139 1
			if(rdebug&RDEBUG_INSTANCE)  {
d149 1
@


9.3
log
@ANSI lint
@
text
@d20 1
a20 1
static char RCSregionfix[] = "@@(#)$Header: /m/cad/rt/RCS/regionfix.c,v 9.2 91/01/12 07:50:49 mike Exp $ (BRL)";
@


9.2
log
@Externs found in externs.h now
@
text
@d20 1
a20 1
static char RCSregionfix[] = "@@(#)$Header: /m/cad/rt/RCS/regionfix.c,v 9.1 89/05/19 05:59:11 mike Rel3_5 $ (BRL)";
d86 1
a86 1
			ret = re_exec(rp->reg_name);
@


9.1
log
@Release_3.5
@
text
@d20 1
a20 1
static char RCSregionfix[] = "@@(#)$Header: regionfix.c,v 1.2 89/04/28 07:29:21 mike Exp $ (BRL)";
d33 2
a38 4

extern char	*strchr();
extern char	*re_comp();
extern int	re_exec();
@


1.2
log
@Made fxc happy
@
text
@d20 1
a20 1
static char RCSregionfix[] = "@@(#)$Header: regionfix.c,v 1.1 89/02/13 08:57:32 mike Locked $ (BRL)";
@


1.1
log
@Initial revision
@
text
@d20 1
a20 1
static char RCSregionfix[] = "@@(#)$Header: viewray.c,v 8.5 89/01/19 22:17:57 mike Locked $ (BRL)";
d50 1
@
