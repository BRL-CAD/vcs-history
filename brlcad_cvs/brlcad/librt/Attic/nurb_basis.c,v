head	11.8;
access;
symbols
	ansi-20040405-merged:11.4.2.2
	postmerge-20040405-ansi:11.6
	premerge-20040404-ansi:11.5
	postmerge-autoconf:11.5
	autoconf-freeze:11.4.10.2
	premerge-autoconf:11.5
	ansi-20040316-freeze:11.4.2.1
	postmerge-20040315-windows:11.5
	premerge-20040315-windows:11.5
	windows-20040315-freeze:11.4.4.1
	autoconf-20031203:11.4
	autoconf-20031202:11.4
	autoconf-branch:11.4.0.10
	phong-branch:11.4.0.8
	photonmap-branch:11.4.0.6
	rel-6-1-DP:11.4
	windows-branch:11.4.0.4
	rel-6-0-2:11.2
	ansi-branch:11.4.0.2
	rel-6-0-1-branch:11.2.0.2
	hartley-6-0-post:11.3
	hartley-6-0-pre:11.2
	rel-6-0-1:11.2
	rel-6-0:11.2
	rel-5-4:11.1
	offsite-5-3-pre:11.2
	rel-5-3:11.1
	rel-5-2:11.1
	rel-5-1-branch:11.1.0.2
	rel-5-1:11.1
	rel-5-0:11.1
	rel-5-0-beta:11.1
	rel-4-5:11.1
	ctj-4-5-post:11.1
	ctj-4-5-pre:11.1
	rel-4-4:11.1
	rel-4-0:10.1;
locks; strict;
comment	@ * @;


11.8
date	2004.05.21.18.07.34;	author morrison;	state dead;
branches;
next	11.7;

11.7
date	2004.05.10.15.30.46;	author erikg;	state Exp;
branches;
next	11.6;

11.6
date	2004.04.05.08.48.58;	author morrison;	state Exp;
branches;
next	11.5;

11.5
date	2004.02.02.17.39.28;	author morrison;	state Exp;
branches;
next	11.4;

11.4
date	2002.08.20.17.08.06;	author jra;	state Exp;
branches
	11.4.2.1
	11.4.4.1
	11.4.10.1;
next	11.3;

11.3
date	2002.08.15.20.55.19;	author hartley;	state Exp;
branches;
next	11.2;

11.2
date	2000.08.21.02.02.33;	author butler;	state Exp;
branches;
next	11.1;

11.1
date	95.01.04.09.53.42;	author mike;	state Rel4_4;
branches
	11.1.1.1;
next	10.2;

10.2
date	94.08.11.01.09.39;	author gdurf;	state Exp;
branches;
next	10.1;

10.1
date	91.10.12.06.39.04;	author mike;	state Rel4_0;
branches;
next	1.3;

1.3
date	91.06.23.03.42.16;	author mike;	state Exp;
branches;
next	1.2;

1.2
date	91.06.14.09.41.57;	author stay;	state Exp;
branches;
next	1.1;

1.1
date	91.05.18.02.34.53;	author stay;	state Exp;
branches;
next	;

11.1.1.1
date	98.01.29.06.43.38;	author mike;	state Rel4_5;
branches;
next	;

11.4.2.1
date	2002.09.19.18.01.42;	author morrison;	state Exp;
branches;
next	11.4.2.2;

11.4.2.2
date	2004.03.17.21.18.55;	author morrison;	state Exp;
branches;
next	;

11.4.4.1
date	2004.03.11.23.43.43;	author morrison;	state Exp;
branches;
next	;

11.4.10.1
date	2004.02.12.18.37.46;	author erikg;	state Exp;
branches;
next	11.4.10.2;

11.4.10.2
date	2004.03.15.14.07.28;	author erikg;	state Exp;
branches;
next	;


desc
@Basis routines
@


11.8
log
@moved to src/
@
text
@/* 
 *	N U R B _ B A S I S . C
 *
 * nurb_basis.c - Evaluate the B-Spline Basis Functions.
 * 
 * Author:  Paul R. Stay
 * Source
 * 	SECAD/VLD Computing Consortium, Bldg 394
 * 	The US Army Ballistic Research Laboratory
 * 	Aberdeen Proving Ground, Maryland 21005
 * 
 * Date: Mon June 4, 1990
 * 
 * Copyright Notice - 
 * 	This software is Copyright (C) 1990-2004 by the United States Army.
 * 	All rights reserved.
 * 
 */
#ifndef lint
static const char rcs_ident[] = "$Header: /n/xoff/cvs/brlcad/librt/nurb_basis.c,v 11.7 2004/05/10 15:30:46 erikg Exp $";
#endif

#ifdef HAVE_CONFIG_H
# include "config.h"
#endif



#include <stdio.h>

#include "machine.h"
#include "vmath.h"
#include "raytrace.h"
#include "nurb.h"

/* This uses the traditional De Boor-Cox algorithm, 
 *
 *   D[k,i] (u) =
 *
 *	   U[i+n-k] - mu 		        mu - U[i-1]
 *	   ________________ D[k-1, i-1] (mu)+_________________  D[k-1,i] (mu)
 *	   U[i+n-k] - U[i-1]		     U[i+n-k] - U[i-1]
 *
 * For U[i-1]] <= mu < U[i] where U is the knot vector, k is the order,
 * and i is the interval. If the denominator is zero than the term is
 * zero.
 *
 * Arguments -
 *	knts - knot vector of type (struct knot_vector *)
 *	interval - where the parameter mu is defined above.
 *	order - Order of the b-spline.
 *	mu -  value which the basis functions are to be evaluated.
 *
 * Returns -
 *	fastf_t  - a floating point value of the basis evaluation.
 *
 * Reference -
 *	Farin G., "Curves and Surfaces for Computer Aided Geometric Design",
 *	Academic Press, New York 1988.
 */

fastf_t
rt_nurb_basis_eval(register struct knot_vector *knts, int interval, int order, fastf_t mu)
{

	register fastf_t den;
	register fastf_t k1;
	register fastf_t k2;
	register fastf_t k3;
	register fastf_t *kk = knts->knots + interval;
	fastf_t b1, b2;

	k1 = *(kk);
	k2 = *(kk + 1);

	if (order <= 1) {
		if ( ( k1 <= mu) && (mu < k2))
			return 1.0;
		else
			return 0.0;
	}

	k3 = *(kk + order);

	den = ( *(kk + order - 1) - k1);

	if ( den == 0.0)
		b1 = 0.0;
	else
		b1 = ((mu - k1) * 
		    rt_nurb_basis_eval( knts, interval, order - 1, mu)) / den;

	den = ( k3 - k2);

	if (den == 0.0)
		b2 = 0.0;
	else
		b2 = ((k3 - mu) * 
		    rt_nurb_basis_eval( knts, interval + 1, order - 1, mu)) / den;

	return (b1 + b2);
}
@


11.7
log
@change conf.h to a wrapped config.h
@
text
@d20 1
a20 1
static const char rcs_ident[] = "$Header: /cvs/brlcad/librt/nurb_basis.c,v 11.6 2004/04/05 08:48:58 morrison Exp $";
@


11.6
log
@merge of ansi-6-0-branch into HEAD
@
text
@d20 1
a20 1
static const char rcs_ident[] = "$Header$";
d23 5
a27 1
#include "conf.h"
@


11.5
log
@update copyright to include span through 2003
@
text
@d20 1
a20 1
static const char rcs_ident[] = "$Header: /c/CVS/brlcad/librt/nurb_basis.c,v 11.4 2002/08/20 17:08:06 jra Exp $";
d59 1
a59 5
rt_nurb_basis_eval( knts, interval, order, mu)
register struct knot_vector * knts;
int	interval;
int	order;
fastf_t mu;
@


11.4
log
@Restoration of entire source tree to Pre-Hartley state
@
text
@d15 1
a15 1
 * 	This software is Copyright (C) 1990 by the United States Army.
d20 1
a20 1
static const char rcs_ident[] = "$Header: /c/CVS/brlcad/librt/nurb_basis.c,v 11.2 2000/08/21 02:02:33 butler Exp $";
@


11.4.4.1
log
@sync to HEAD...
@
text
@d15 1
a15 1
 * 	This software is Copyright (C) 1990-2004 by the United States Army.
d20 1
a20 1
static const char rcs_ident[] = "$Header: /n/cad/c/CVS/brlcad/librt/nurb_basis.c,v 11.5 2004/02/02 17:39:28 morrison Exp $";
@


11.4.10.1
log
@merge from HEAD
@
text
@d15 1
a15 1
 * 	This software is Copyright (C) 1990-2004 by the United States Army.
d20 1
a20 1
static const char rcs_ident[] = "$Header: /c/CVS/brlcad/librt/nurb_basis.c,v 11.5 2004/02/02 17:39:28 morrison Exp $";
@


11.4.10.2
log
@merge from head
@
text
@d20 1
a20 1
static const char rcs_ident[] = "$Header: /c/CVS/brlcad/librt/nurb_basis.c,v 11.4.10.1 2004/02/12 18:37:46 erikg Exp $";
@


11.4.2.1
log
@Initial ANSIfication
@
text
@d20 1
a20 1
static const char rcs_ident[] = "$Header: /c/CVS/brlcad/librt/nurb_basis.c,v 11.4 2002/08/20 17:08:06 jra Exp $";
d59 5
a63 1
rt_nurb_basis_eval(register struct knot_vector *knts, int interval, int order, fastf_t mu)
@


11.4.2.2
log
@sync branch with HEAD
@
text
@d15 1
a15 1
 * 	This software is Copyright (C) 1990-2004 by the United States Army.
d20 1
a20 1
static const char rcs_ident[] = "$Header$";
@


11.3
log
@Converted from K&R to ANSI C - RFH
@
text
@d59 5
a63 1
rt_nurb_basis_eval(register struct knot_vector *knts, int interval, int order, fastf_t mu)
@


11.2
log
@Massive compilation warnings eliminated
@
text
@d20 1
a20 1
static const char rcs_ident[] = "$Header: /c/CVS/brlcad/librt/nurb_basis.c,v 11.1 1995/01/04 09:53:42 mike Rel4_4 $";
d59 1
a59 5
rt_nurb_basis_eval( knts, interval, order, mu)
register struct knot_vector * knts;
int	interval;
int	order;
fastf_t mu;
@


11.1
log
@Release_4.4
@
text
@d20 1
a20 1
static char	rcs_ident[] = "$Header: /m/cad/libnurb/RCS/nurb_basis.c,v 10.2 94/08/11 01:09:39 gdurf Exp $";
@


11.1.1.1
log
@Release_4.5
@
text
@d20 1
a20 1
static char	rcs_ident[] = "$Header: /m/cad4.5/RCS/nurb_basis.c,v 11.1 1995/01/04 09:53:42 mike Rel4_4 $";
@


10.2
log
@Added includes
@
text
@d20 1
a20 1
static char	rcs_ident[] = "$Header: /m/cad/libnurb/RCS/nurb_basis.c,v 10.1 91/10/12 06:39:04 mike Rel4_0 Locker: mike $";
@


10.1
log
@Release_4.0
@
text
@d20 1
a20 1
static char	rcs_ident[] = "$Header: /m/cad/libnurb/RCS/nurb_basis.c,v 1.3 91/06/23 03:42:16 mike Exp $";
d23 4
d29 1
@


1.3
log
@minor lint
@
text
@d20 1
a20 1
static char	rcs_ident[] = "$Header: /m/cad/libnurb/RCS/nurb_basis.c,v 1.2 91/06/14 09:41:57 stay Exp $";
@


1.2
log
@fixed nurb.h
@
text
@d20 1
a20 1
static char	rcs_ident[] = "$Header: /m/cad/libnurb/RCS/nurb_basis.c,v 1.1 91/05/18 02:34:53 stay Exp $";
a51 2

fastf_t rt_nurb_basis_eval();
@


1.1
log
@Initial revision
@
text
@d20 1
a20 1
static char	rcs_ident[] = "$Header: /m/cad/libnurb/RCS/nurb_basis.c,v 1.1 91/03/06 21:13:05 stay Exp $";
d25 1
a25 1
#include "./nurb.h"
@
