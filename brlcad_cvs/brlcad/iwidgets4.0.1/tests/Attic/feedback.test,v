head	1.2;
access;
symbols
	postmerge-20040405-ansi:1.1
	premerge-20040404-ansi:1.1
	postmerge-autoconf:1.1
	autoconf-freeze:1.1
	premerge-autoconf:1.1
	postmerge-20040315-windows:1.1
	premerge-20040315-windows:1.1
	windows-20040315-freeze:1.1.8.1
	autoconf-20031203:1.1
	autoconf-20031202:1.1
	autoconf-branch:1.1.0.6
	phong-branch:1.1.0.4
	photonmap-branch:1.1.0.2
	windows-branch:1.1.0.8;
locks; strict;
comment	@# @;


1.2
date	2004.05.24.03.59.35;	author morrison;	state dead;
branches;
next	1.1;

1.1
date	2003.03.13.13.20.40;	author jra;	state Exp;
branches
	1.1.8.1;
next	;

1.1.8.1
date	2004.03.12.09.57.43;	author morrison;	state Exp;
branches;
next	;


desc
@@


1.2
log
@moved to src/other/iwidgets/
@
text
@# This file is a Tcl script to test out [incr Widgets] feedback class.
# It is organized in the standard fashion for Tcl tests with the following
# notation for test case labels:
#
#   1.x - Construction/Destruction tests
#   2.x - Configuration option tests
#   3.x - Method tests
#
# Copyright (c) 1995 DSC Technologies Corporation
#
# See the file "license.terms" for information on usage and redistribution
# of this file, and for a DISCLAIMER OF ALL WARRANTIES.
#
# @@(#) $Id: feedback.test

package require tcltest
namespace import -force ::tcltest::*

if [catch {package require Iwidgets 4.0}] {
  # Let's try modifying the auto_path.  Note that the IWIDGETS_LIBRARY
  # env var is initialized in the Makefile when doing a 'make test'.
  # If sourcing this file independently, this variable must be set manually.
  if ![info exists env(IWIDGETS_LIBRARY)] {
    error "Unable to locate Iwidgets package.  Set your IWIDGETS_LIBRARY\
      environment\nvariable to the directory that contains iwidgets.tcl"
  }
  lappend auto_path $env(IWIDGETS_LIBRARY)
  package require Iwidgets 4.0
}

if {[string compare test [info procs test]] == 1} {
    source defs
}

wm geometry . {}
raise .

set c 1
set o 1
set m 1

#
# Initial construction test
#
test Feedback-1.$c {Feedback construction} {
    iwidgets::Feedback .f
    pack .f -padx 10 -pady 10 -fill both -expand yes
    update 
} {}

incr c

#
# Option tests which are successful.
#
test Feedback-2.$o {configuration option} {
    llength [.f configure]
} {22}

incr o

foreach test {
    {-background #d9d9d9 #d9d9d9} 
    {-cursor gumby gumby} 
    {-foreground Black Black} 
    {-labelmargin 5 5} 
    {-labeltext Label Label}
    {-labelpos n n} 
    {-labelpos ne ne} 
    {-labelpos e e} 
    {-labelpos se se} 
    {-labelpos s s} 
    {-labelpos sw sw} 
    {-labelpos w w} 
    {-labelpos nw nw} 
    {-barcolor red red}
    {-steps 50 50}
    {-sticky w w}
    {-sticky nw nw}
    {-sticky n n}
    {-sticky ne ne}
    {-sticky e e}
    {-sticky se se}
    {-sticky s s}
    {-sticky sw sw}
    {-sticky news news}
    {-barheight 20 20}} {
	set option [lindex $test 0]
	test Feedback-2.$o "configuration options, $option" {
	    .f configure $option [lindex $test 1]
	    lindex [.f configure $option] 4
	} [lindex $test 2]
	update 
	incr o
}

#
# Option tests which fail and produce errors.
#
#foreach test {
#  {} {
#	set option [lindex $test 0]
#        test Feedback-2.$o "configuration options, $option" {
#	    list [catch {.f configure $option [lindex $test 1]} msg] $msg
#	} [list 1 [lindex $test 2]]
#	incr o
#}

#
# Method tests which are successful.
#
foreach test {
    {{.f step} {}}} {
	set method [lindex [lindex $test 0] 1]
	test Feedback-3.$m "object methods, $method" {
	    list [catch {eval [lindex $test 0]} msg] $msg
	} [list 0 [lindex $test 1]]
	update 
	incr m
}

#
# Conclusion of construction/destruction tests
#
test Feedback-1.$c {Feedback destruction} {
    destroy .f
    update 
} {}

incr c

test Feedback-1.$c {Feedback construction} {
    iwidgets::feedback .f -labeltext "Label" \
	    -labelpos n -labelmargin 5
    pack .f -padx 10 -pady 10 -fill both -expand yes
    update 
} {}

incr c

test Feedback-1.$c {Feedback destruction} {
    destroy .f
    update 
} {}

incr c

test Feedback-1.$c {Feedback destruction} {
    iwidgets::feedback .f
    pack .f
    destroy .f
    update 
} {}


::tcltest::cleanupTests
exit
@


1.1
log
@*** empty log message ***
@
text
@@


1.1.8.1
log
@merge from HEAD
@
text
@@

