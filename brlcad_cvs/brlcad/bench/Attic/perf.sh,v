head	14.11;
access;
symbols
	stable-branch:14.7
	bobWinPort-20051223-freeze:14.9
	rel-7-6-4:14.10
	rel-7-6-2:14.9
	rel-7-6-branch:14.9.0.6
	rel-7-6-0:14.9
	rel-7-4-2:14.9
	rel-7-4-branch:14.9.0.4
	bobWinPort:14.9.0.2
	rel-7-4-0:14.9
	rel-7-2-6:14.9
	rel-7-2-4:14.7
	rel-7-2-2:14.7
	rel-7-2-0:14.5
	rel-7-0-4:14.3
	rel-7-0-2:14.2
	rel-7-0-1:14.2
	opensource-post:14.2
	opensource-pre:1.15
	rel-7-0-branch:1.15.0.2
	rel-7-0:1.15
	ansi-20040405-merged:1.13
	postmerge-20040405-ansi:1.13
	premerge-20040404-ansi:1.13
	postmerge-autoconf:1.13
	autoconf-freeze:1.13
	premerge-autoconf:1.13
	ansi-20040316-freeze:1.13
	postmerge-20040315-windows:1.13
	premerge-20040315-windows:1.13
	windows-20040315-freeze:1.13
	autoconf-20031203:1.13
	autoconf-20031202:1.13
	autoconf-branch:1.13.0.14
	phong-branch:1.13.0.12
	photonmap-branch:1.13.0.10
	rel-6-1-DP:1.13
	windows-branch:1.13.0.8
	rel-6-0-2:1.13
	ansi-branch:1.13.0.6
	rel-6-0-1-branch:1.13.0.4
	hartley-6-0-post:1.13
	hartley-6-0-pre:1.13
	rel-6-0-1:1.13
	rel-6-0:1.13
	rel-5-4:1.13
	offsite-5-3-pre:1.13
	rel-5-3:1.13
	rel-5-2:1.13
	rel-5-1-branch:1.13.0.2
	rel-5-1:1.13
	rel-5-0:1.12
	rel-5-0-beta:1.12
	rel-4-5:1.12
	ctj-4-5-post:1.12
	ctj-4-5-pre:1.12
	rel-4-4:1.12
	rel-4-0:1.12
	rel-3-5:1.9
	rel-3-0:1.8;
locks; strict;
comment	@# @;


14.11
date	2005.12.07.22.27.28;	author brlcad;	state dead;
branches;
next	14.10;

14.10
date	2005.10.23.04.24.41;	author brlcad;	state Exp;
branches;
next	14.9;

14.9
date	2005.06.01.21.25.46;	author brlcad;	state Exp;
branches
	14.9.6.1;
next	14.8;

14.8
date	2005.06.01.19.47.49;	author brlcad;	state Exp;
branches;
next	14.7;

14.7
date	2005.03.27.03.11.40;	author brlcad;	state Exp;
branches;
next	14.6;

14.6
date	2005.03.27.02.57.04;	author brlcad;	state Exp;
branches;
next	14.5;

14.5
date	2005.02.21.18.04.09;	author brlcad;	state Exp;
branches;
next	14.4;

14.4
date	2005.01.30.20.30.08;	author brlcad;	state Exp;
branches;
next	14.3;

14.3
date	2005.01.25.05.45.21;	author brlcad;	state Exp;
branches;
next	14.2;

14.2
date	2004.12.17.21.16.11;	author morrison;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.08;	author morrison;	state Exp;
branches;
next	1.15;

1.15
date	2004.06.21.19.44.24;	author morrison;	state Exp;
branches;
next	1.14;

1.14
date	2004.05.13.13.18.11;	author morrison;	state Exp;
branches;
next	1.13;

1.13
date	99.11.16.03.06.15;	author mike;	state Exp;
branches;
next	1.12;

1.12
date	91.10.11.02.10.13;	author mike;	state Exp;
branches;
next	1.11;

1.11
date	91.07.02.01.03.51;	author mike;	state Exp;
branches;
next	1.10;

1.10
date	89.12.31.04.12.38;	author mike;	state Exp;
branches;
next	1.9;

1.9
date	89.05.19.05.20.41;	author mike;	state Exp;
branches;
next	1.8;

1.8
date	88.10.03.19.54.52;	author mike;	state Exp;
branches;
next	1.7;

1.7
date	88.10.03.14.35.20;	author mike;	state Exp;
branches;
next	1.6;

1.6
date	88.10.01.01.34.38;	author mike;	state Exp;
branches;
next	1.5;

1.5
date	88.09.24.00.35.38;	author mike;	state Exp;
branches;
next	1.4;

1.4
date	88.09.17.02.37.09;	author mike;	state Exp;
branches;
next	1.3;

1.3
date	88.09.12.01.08.13;	author mike;	state Exp;
branches;
next	1.2;

1.2
date	88.09.12.00.44.32;	author mike;	state Exp;
branches;
next	1.1;

1.1
date	88.09.12.00.37.44;	author mike;	state Exp;
branches;
next	;

14.9.6.1
date	2005.11.13.13.46.08;	author brlcad;	state Exp;
branches;
next	;


desc
@Script to garner performance data
@


14.11
log
@the perf.sh script is completely absorbed into run.sh as the function perf() allowing utilization of run.sh's existing search techniques for locating resources.  This fixes a problem/bug where perf.sh was incorrectly searching the right directory for reference logs.  by bringing the functionality internal, run.sh now gets to control righting to summary and there is no need to blindly tail the summary file for results.
@
text
@#!/bin/sh
#                         P E R F . S H
# BRL-CAD
#
# Copyright (C) 2004-2005 United States Government as represented by
# the U.S. Army Research Laboratory.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
# 1. Redistributions of source code must retain the above copyright
# notice, this list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above
# copyright notice, this list of conditions and the following
# disclaimer in the documentation and/or other materials provided
# with the distribution.
#
# 3. The name of the author may not be used to endorse or promote
# products derived from this software without specific prior written
# permission.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS
# OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
# GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
# NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
###
# A Shell script to extract the benchmark statistics, and build an
# entry suitable for the tables in doc/benchmark.tr.
# Note well that the command-line args may have embedded spaces.
#  Mike Muuss & Susan Muuss, 11-Sept-88.
#  @@(#)$Header: /cvsroot/brlcad/brlcad/bench/perf.sh,v 14.10 2005/10/23 04:24:41 brlcad Exp $ (BRL)

# Ensure /bin/sh
export PATH || (sh $0 $*; kill $$)
path_to_perf_sh=`dirname $0`

NAME=$0
if test "x$1" = x ; then
  echo "Usage:  $NAME hostname [note1] [note2]"
  exit 1
fi

# force locale setting to C so things like date output as expected
LC_ALL=C

#  Save three args, because arg list will be reused below.
#  They may have embedded spaces in them.
HOST="$1"
NOTE1="$2"
NOTE2="$3"

NEW_FILES=" \
	moss.log \
	world.log \
	star.log \
	bldg391.log \
	m35.log \
	sphflake.log \
"

REF_DIR="../pix"
if test -f "$path_to_perf_sh/../pix/sphflake.log" ; then
    REF_DIR="$path_to_perf_sh/../pix"
elif test -f "$path_to_perf_sh/sphflake.log" ; then
    REF_DIR="$path_to_perf_sh"
elif test -f "$path_to_perf_sh/../share/brlcad/pix/sphflake.log" ; then
    REF_DIR="$path_to_perf_sh/../share/brlcad/pix"
fi

REF_FILES=" \
	$REF_DIR/moss.log \
	$REF_DIR/world.log \
	$REF_DIR/star.log \
	$REF_DIR/bldg391.log \
	$REF_DIR/m35.log \
	$REF_DIR/sphflake.log \
"

for i in $NEW_FILES $REF_FILES ;  do
 if test ! -f $i ; then
   echo "${NAME}: file $i does not exist, aborting"
   exit 1
 fi
done

# Use TR to convert newlines to tabs.
VGRREF=`grep RTFM $REF_FILES | \
  sed -n -e 's/^.*= *//' -e 's/ rays.*//p' | \
  tr '\012' '\011' `
CURVALS=`grep RTFM $NEW_FILES | \
  sed -n -e 's/^.*= *//' -e 's/ rays.*//p' | \
  tr '\012' '\011' `

RATIO_LIST=""

if test "x$VGRREF" = "x" ; then
  echo "Cannot locate VGR reference values, aborting"
  exit 1
fi

if test "x$CURVALS" = "x" ; then
  CURVALS="0	0	0	0	0	0	"
fi

# Trick:  Force args $1 through $6 to the numbers in $CURVALS
# This should be "set -- $CURVALS", but 4.2BSD /bin/sh can't handle it,
# and CURVALS are all positive (ie, no leading dashes), so this is safe.

set $CURVALS

while test $# -lt 6 ; do
  echo "${NAME}: Warning, only $# times found, adding a zero."
  CURVALS="${CURVALS}0	"
  set $CURVALS
done

_have_dc=yes
echo "1 1 + p" | dc 2>&1 >/dev/null
if test ! x$? = x0 ; then
  _have_dc=no
fi

for ref in $VGRREF ; do
  cur=$1
  shift

  if test "x$_have_dc" = "xyes" ; then
    RATIO=`echo "2k $cur $ref / p" | dc`
  else
    RATIO=`echo "scale=2; $cur / $ref" | bc`
  fi
        # Note: append new value and a trail TAB to existing list.
  RATIO_LIST="${RATIO_LIST}$RATIO	"
done

# The number of plus signs must be one less than the number of elements.
if test "x$_have_dc" = "xyes" ; then
  MEAN_ABS=`echo 2k $CURVALS +++++ 6/ p | dc`
  MEAN_REL=`echo 2k $RATIO_LIST +++++ 6/ p | dc`
else
  _expr="scale=2; ( 0"
  for val in $CURVALS ; do
    _expr="$_expr + $val"
  done
  _expr="$_expr ) / 6"
  MEAN_ABS=`echo $_expr | bc`

  _expr="scale=2; ( 0"
  for val in $RATIO_LIST ; do
    _expr="$_expr + $val"
  done
  _expr="$_expr ) / 6"
  MEAN_REL=`echo $_expr | bc`
fi

# Note:  Both RATIO_LIST and CURVALS have an extra trailing tab.
# The question mark is for the mean field
echo "Abs  ${HOST} ${CURVALS}${MEAN_ABS}	$NOTE1"
echo "*vgr ${HOST} ${RATIO_LIST}${MEAN_REL}	$NOTE2"

# Local Variables:
# mode: sh
# tab-width: 8
# sh-indentation: 4
# sh-basic-offset: 4
# indent-tabs-mode: t
# End:
# ex: shiftwidth=4 tabstop=8
@


14.10
log
@trailing ws
@
text
@d41 1
a41 1
#  @@(#)$Header: /cvsroot/brlcad/brlcad/bench/perf.sh,v 14.9 2005/06/01 21:25:46 brlcad Exp $ (BRL)
@


14.9
log
@search for the reference log files in the same manner that run.sh searches for the pix files.  this script should probably merge into run.sh
@
text
@d15 1
a15 1
# 2. Redistributions in binary form must reproduce the above 
d41 1
a41 1
#  @@(#)$Header: /cvsroot/brlcad/brlcad/bench/perf.sh,v 14.8 2005/06/01 19:47:49 brlcad Exp $ (BRL)
@


14.9.6.1
log
@merge changes from HEAD aka rel-7-6-4 to the rel-7-6-branch just in case someone peeks a gander or tries to continue/build the branch
@
text
@d15 1
a15 1
# 2. Redistributions in binary form must reproduce the above
d41 1
a41 1
#  @@(#)$Header$ (BRL)
@


14.8
log
@benchmark.doc was renamed to benchmark.tr
@
text
@d41 1
a41 1
#  @@(#)$Header: /cvsroot/brlcad/brlcad/bench/perf.sh,v 14.7 2005/03/27 03:11:40 brlcad Exp $ (BRL)
d70 10
d81 6
a86 6
	$path_to_perf_sh/../pix/moss.log \
	$path_to_perf_sh/../pix/world.log \
	$path_to_perf_sh/../pix/star.log \
	$path_to_perf_sh/../pix/bldg391.log \
	$path_to_perf_sh/../pix/m35.log \
	$path_to_perf_sh/../pix/sphflake.log \
@


14.7
log
@fix the output if there are no summary values -- this happens if the benchmarks fail (crash) or are aborted early.  i believe this happens to fix sf bug #925404 too (bench/run.sh generates garbage if aborted).
@
text
@d38 1
a38 1
# entry suitable for the tables in doc/benchmark.doc.
d41 1
a41 1
#  @@(#)$Header: /cvsroot/brlcad/brlcad/bench/perf.sh,v 14.6 2005/03/27 02:57:04 brlcad Exp $ (BRL)
@


14.6
log
@use same tab spacing for vgr line as the current value line (instead of spaces).  tighten the summary output too.
@
text
@d41 1
a41 1
#  @@(#)$Header: /cvsroot/brlcad/brlcad/bench/perf.sh,v 14.5 2005/02/21 18:04:09 brlcad Exp $ (BRL)
d96 9
d108 1
d112 3
a114 3
 echo "${NAME}: Warning, only $# times found, adding a zero."
 CURVALS="${CURVALS}0	"
 set $CURVALS
@


14.5
log
@force locale setting to C so things like date output as expected
@
text
@d41 1
a41 1
#  @@(#)$Header: /cvsroot/brlcad/brlcad/bench/perf.sh,v 14.4 2005/01/30 20:30:08 brlcad Exp $ (BRL)
d123 1
a123 1
 RATIO_LIST="${RATIO_LIST}$RATIO        "
d148 2
a149 2
echo "Abs	${HOST}	${CURVALS}${MEAN_ABS}	$NOTE1"
echo "*vgr	${HOST}	${RATIO_LIST}${MEAN_REL}	$NOTE2"
@


14.4
log
@update copyright to 2005
@
text
@d41 1
a41 1
#  @@(#)$Header: /cvsroot/brlcad/brlcad/bench/perf.sh,v 14.3 2005/01/25 05:45:21 brlcad Exp $ (BRL)
d53 3
@


14.3
log
@some newer systems seem to find it funny to not include the old dc desktop calculator by default, so try to use the newer bc as an alternate.
@
text
@d5 2
a6 2
# Copyright (c) 2004 United States Government as represented by the
# U.S. Army Research Laboratory.
d41 1
a41 1
#  @@(#)$Header: /cvsroot/brlcad/brlcad/bench/perf.sh,v 14.2 2004/12/17 21:16:11 morrison Exp $ (BRL)
@


14.2
log
@assignment of copyright and BSD license
@
text
@d41 1
a41 1
#  @@(#)$Header: /cvs/brlcad/bench/perf.sh,v 14.1 2004/11/16 19:42:08 morrison Exp $ (BRL)
d104 6
d111 10
a120 5
 cur=$1
 shift
 RATIO=`echo "2k $cur $ref / p" | dc`
	# Note: append new value and a trail TAB to existing list.
 RATIO_LIST="${RATIO_LIST}$RATIO	"
d124 18
a141 2
MEAN_ABS=`echo 2k $CURVALS +++++ 6/ p | dc`
MEAN_REL=`echo 2k $RATIO_LIST +++++ 6/ p | dc`
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d2 35
d41 1
a41 1
#  @@(#)$Header: /cvs/brlcad/bench/perf.sh,v 1.15 2004/06/21 19:44:24 morrison Exp $ (BRL)
@


1.15
log
@M-x indent region formatting and style consistency
@
text
@d6 1
a6 1
#  @@(#)$Header: /cvs/brlcad/bench/perf.sh,v 1.14 2004/05/13 13:18:11 morrison Exp $ (BRL)
d86 8
a93 8
# Local Variables: ***
# mode: sh ***
# tab-width: 8 ***
# sh-indentation: 2 ***
# sh-basic-offset: 2 ***
# indent-tabs-mode: t ***
# End: ***
# ex: shiftwidth=2 tabstop=8
@


1.14
log
@allow the benchmark to run from other directories
@
text
@d6 1
a6 1
#  @@(#)$Header: /c/CVS/brlcad/bench/perf.sh,v 1.13 1999/11/16 03:06:15 mike Exp $ (BRL)
d13 3
a15 4
if test "x$1" = x
then
	echo "Usage:  $NAME hostname [note1] [note2]"
	exit 1
d41 5
a45 7
for i in $NEW_FILES $REF_FILES
do
	if test ! -f $i
	then
		echo "${NAME}: file $i does not exist, aborting"
		exit 1
	fi
d50 2
a51 2
	sed -n -e 's/^.*= *//' -e 's/ rays.*//p' | \
	tr '\012' '\011' `
d53 2
a54 2
	sed -n -e 's/^.*= *//' -e 's/ rays.*//p' | \
	tr '\012' '\011' `
d63 4
a66 4
while test $# -lt 6
do	echo "${NAME}: Warning, only $# times found, adding a zero."
	CURVALS="${CURVALS}0	"
	set $CURVALS
d69 4
a72 5
for ref in $VGRREF
do
	cur=$1
	shift
	RATIO=`echo "2k $cur $ref / p" | dc`
d74 1
a74 1
	RATIO_LIST="${RATIO_LIST}$RATIO	"
d85 9
@


1.13
log
@
Included sphflake in computation of the mean.
@
text
@d6 1
a6 1
#  @@(#)$Header: /c/CVS/brlcad/bench/perf.sh,v 1.12 1991/10/11 02:10:13 mike Exp $ (BRL)
d10 1
d25 16
a40 3
NEW_FILES="moss.log world.log star.log bldg391.log m35.log sphflake.log"
REF_FILES="../pix/moss.log ../pix/world.log ../pix/star.log \
	../pix/bldg391.log ../pix/m35.log ../pix/sphflake.log"
@


1.12
log
@Changed to check that all the input files exist first.
@
text
@d6 1
a6 1
#  @@(#)$Header: /m/cad/bench/RCS/perf.sh,v 1.11 91/07/02 01:03:51 mike Exp Locker: mike $ (BRL)
d24 1
a24 1
NEW_FILES="moss.log world.log star.log bldg391.log m35.log"
d26 1
a26 1
	../pix/bldg391.log ../pix/m35.log"
d47 1
a47 1
# Trick:  Force args $1 through $5 to the numbers in $CURVALS
d52 1
a52 1
while test $# != 5
d68 2
a69 2
MEAN_ABS=`echo 2k $CURVALS ++++ 5/ p | dc`
MEAN_REL=`echo 2k $RATIO_LIST ++++ 5/ p | dc`
@


1.11
log
@Fixed error handling
@
text
@d6 1
a6 1
#  @@(#)$Header: perf.sh,v 1.10 89/12/31 04:12:38 mike Locked $ (BRL)
d27 9
@


1.10
log
@Make more resiliant to errors;  if result files are missing,
just use zero values in their places.
@
text
@d6 1
a6 1
#  @@(#)$Header: perf.sh,v 1.9 89/05/19 05:20:41 mike Locked $ (BRL)
d44 2
a45 2
do	echo "${NAME}: Warning, only $# times found, using zeros"
	CURVALS="$CURVALS 0"
@


1.9
log
@Modified for FIVE benchmarks
@
text
@d6 1
a6 1
#  @@(#)$Header: perf.sh,v 1.8 88/10/03 19:54:52 mike Locked $ (BRL)
d43 5
a47 4
if test $# != 5
then	echo "${NAME}: Error, only $# times found"
	exit 1
fi
@


1.8
log
@Made "note" args optional.
@
text
@d2 3
a4 3
# A Shell script to extract the 4 benchmark statistics, and build an
# entry for the tables in doc/benchmark.doc.
# Note well that the args may have embedded spaces.
d6 1
a6 1
#  @@(#)$Header: perf.sh,v 1.7 88/10/03 14:35:20 mike Locked $ (BRL)
d11 1
d14 1
a14 1
	echo "Usage:  $0 hostname [note1] [note2]"
d24 3
a26 2
NEW_FILES="moss.log world.log star.log bldg391.log"
REF_FILES="../pix/moss.log ../pix/world.log ../pix/star.log ../pix/bldg391.log"
d38 1
a38 1
# Trick:  Force args $1 through $4 to 4 numbers in $CURVALS
d43 5
d57 3
a59 2
MEAN_ABS=`echo 2k $CURVALS +++ 4/ p | dc`
MEAN_REL=`echo 2k $RATIO_LIST +++ 4/ p | dc`
@


1.7
log
@VGR reference speed is no longer hard-coded in;
script looks in ../pix/*.log files.
@
text
@d6 1
a6 1
#  @@(#)$Header: perf.sh,v 1.6 88/10/01 01:34:38 mike Locked $ (BRL)
d9 1
a9 1
export PATH || (echo "This isn't sh.  Feeding myself to sh."; sh $0 $*; kill $$)
d11 1
a11 1
if test "x$3" = x
d13 1
a13 1
	echo "Usage:  $0 hostname note1 note2"
@


1.6
log
@Now handles spaces in $3, too.
@
text
@d6 1
a6 1
#  @@(#)$Header: perf.sh,v 1.5 88/09/24 00:35:38 mike Locked $ (BRL)
d23 2
a24 2
INFILES="moss.log world.log star.log bldg391.log"
VAXREF="122.64 59.33 46.28 45.95"
d27 1
a27 1
CURVALS=`grep RTFM $INFILES | \
d30 3
d41 1
a41 1
for ref in $VAXREF
@


1.5
log
@Removed typo.
4.2BSD /bin/sh can't handle "set --", so re-wrote as "set".
This isn't a good general practice, but is safe here.
@
text
@d4 1
d6 1
a6 1
#  @@(#)$Header: perf.sh,v 1.4 88/09/17 02:37:09 mike Locked $ (BRL)
d11 1
a11 1
if test x$3 = x
@


1.4
log
@Added quoting around args, in case they have embedded spaces.
@
text
@d1 1
a1 1
1#!/bin/sh
d5 1
a5 1
#  @@(#)$Header: perf.sh,v 1.3 88/09/12 01:08:13 mike Exp $ (BRL)
d33 3
a35 1
set -- $CURVALS
@


1.3
log
@Added check to ensure /bin/sh is running the script
@
text
@d5 1
a5 1
#  @@(#)$Header: perf.sh,v 1.2 88/09/12 00:44:32 mike Exp $ (BRL)
d16 5
a20 4
# Save three args, because arg list will be reused below.
HOST=$1
NOTE1=$2
NOTE2=$3
@


1.2
log
@Added calculation of regular (not harmoic) mean.
@
text
@d5 4
a8 1
#  @@(#)$Header$ (BRL)
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
#!/bin/sh
d5 1
d40 3
d44 3
a46 3
# The question mark is for the harmoic mean field
echo "Abs	${HOST}	${CURVALS}?	$NOTE1"
echo "*vgr	${HOST}	${RATIO_LIST}?	$NOTE2"
@
