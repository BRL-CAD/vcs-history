head	1.3;
access;
symbols
	ansi-20040405-merged:1.1.6.1
	postmerge-20040405-ansi:1.2
	premerge-20040404-ansi:1.2
	postmerge-autoconf:1.2
	autoconf-freeze:1.1.14.1
	premerge-autoconf:1.2
	ansi-20040316-freeze:1.1
	postmerge-20040315-windows:1.2
	premerge-20040315-windows:1.2
	windows-20040315-freeze:1.1.8.1
	autoconf-20031203:1.1
	autoconf-20031202:1.1
	autoconf-branch:1.1.0.14
	phong-branch:1.1.0.12
	photonmap-branch:1.1.0.10
	rel-6-1-DP:1.1
	windows-branch:1.1.0.8
	rel-6-0-2:1.1
	ansi-branch:1.1.0.6
	rel-6-0-1-branch:1.1.0.4
	hartley-6-0-post:1.1
	hartley-6-0-pre:1.1
	rel-6-0-1:1.1
	rel-6-0:1.1
	rel-5-4:1.1
	offsite-5-3-pre:1.1
	rel-5-3:1.1
	rel-5-2:1.1
	rel-5-1-branch:1.1.0.2
	rel-5-1:1.1
	rel-5-0:1.1
	rel-5-0-beta:1.1;
locks; strict;
comment	@# @;


1.3
date	2004.05.21.17.50.07;	author morrison;	state dead;
branches;
next	1.2;

1.2
date	2004.02.02.17.39.03;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	99.02.12.19.43.07;	author jra;	state Exp;
branches
	1.1.6.1
	1.1.8.1
	1.1.14.1;
next	;

1.1.6.1
date	2004.03.17.21.16.24;	author morrison;	state Exp;
branches;
next	;

1.1.8.1
date	2004.03.11.23.41.07;	author morrison;	state Exp;
branches;
next	;

1.1.14.1
date	2004.02.12.19.49.27;	author erikg;	state Exp;
branches;
next	;


desc
@Carl's Animation Tutorial
@


1.3
log
@moved to doc/html/
@
text
@<html><head>
<title>BRL-CAD anim_fly Man Page</title>
</head><body>
<h1>NAME</h1>
anim_fly - make animation table to simulate flying motion
<h1>SYNOPSIS</h1>
<b>anim_fly </b>
<b>[-f factor]</b>
<b>[-r]</b>
<b>[-p integer] </b>
<b>[-b max_bank_angle]</b>
<b>[-s step]</b>
<b>&lt; in.table </b>
<b>&gt; out.table</b>
<h1>DESCRIPTION</h1>
This filter is designed to  simulate the motion of an airplane.
Given a four-column table specifying the desired 3D position of the
airplane at each time step, 
<i>anim_fly</i>
produces a seven-column file
which also includes the orientation of the plane in terms of yaw,
pitch, and roll. The yaw and pitch are adjusted so that
the plane faces the direction of motion, while the roll is used to bank
the vehicle.
<h1>OPTIONS</h1>
<dl><dt>
<b>-f#</b>

<dd>
This option specifies a factor to control the severity of the banking.
Choosing the best banking factor for a given animation is a subjective
decision, although a good starting point can 
be obtained with the -b option. Animations representing aircraft
on different scales will need different factors.
If the
slightest curve throws the plane into a 90 degree bank, the factor is
too large; if the plane doesn't bank enough, the factor is too small. The size
of the best factor varies inversely with the size of the imagined
aircraft plane.
A factor of 0 means that there will be no banking, while a negative
factor causes the vehicle to bank in the opposite direction, like a
cart almost overturning as it rounds a curve.
<dt>
<b>-b#</b>

<dd>
This option is used to estimate a good value for the -f option. The
parameter is the maximum desired banking angle. Anim_fly then computes
the factor necessary to keep the banking below the specified angle. This
value is returned instead of anim_fly's usual output.
<dt>
<b>-r</b>

<dd>
Suppress vertical smoothing.
Anim_fly likes to keep the aircraft right-side up, but such a strategy
is unstable when the airplane flies straight up or down. To
counter this there is a smoothing capability which prevents sudden
rolls during vertical flight and allows the vehicle to fly upside-down
if necessary (during a vertical loop, for example). This feature can be
suppressed with the
<b>-r</b>
flag.
<dt>
<b>-p#</b>
<dd>
Specify the ratio of input rows to output rows, which must be
an integer. The default, of course, is one. The accuracy and
smoothness of the banking algorithm 
are best when the frame rate of the input table is high.
This can lead to a degradation of performance when creating a preview
animation with a small frame rate. In this case, the user should still
use a high frame rate table as input to <i>anim_fly</i>, and decrease the
frame rate of the output with the <b>-p</b> option.
For example, if 
<b>in.table </b>
contains 30 rows for each
second of the animation, then the command:
<p>
anim_fly -f0.001 -p10 &lt; in.table &gt; out.table 
<p>
would produce an animation table containing only 3 rows for each
second of the animation.
<dt>
<b>-s</b>

<dd>
Specify the minimum step size for the discrete-time differentiation. At any 
given point on the flight path, the yaw, pitch, and roll are calculated based
on a past point, the current point, and a future point. Normally,
these are consecutive points from the input table. If the time
difference between the points falls below a certain threshold, 
then non-consecutive points are used to avoid
numerical instability. The default time threshhold is 0.1 seconds - this
can be raised or lowered using the -s option. If a vehicle's orientation
semms jumpy or jerky, then the threshold
may need to be increased.
</dl>
<h1>AUTHOR</h1>
Carl J. Nuzman
<h1>COPYRIGHT</h1>
This software is Copyright (C) 1993-2004 by the United States Army
in all countries except the USA.  All rights reserved.
<h1>"BUG REPORTS"</h1>
Reports of bugs or problems should be submitted via electronic
mail to &lt;CAD@@BRL.MIL&gt;.
</body></html>
@


1.2
log
@update copyright to include span through 2003
@
text
@@


1.1
log
@Carl's Animation Tutorial
@
text
@d102 1
a102 1
This software is Copyright (C) 1993 by the United States Army
@


1.1.6.1
log
@sync branch with HEAD
@
text
@d102 1
a102 1
This software is Copyright (C) 1993-2004 by the United States Army
@


1.1.8.1
log
@sync to HEAD...
@
text
@d102 1
a102 1
This software is Copyright (C) 1993-2004 by the United States Army
@


1.1.14.1
log
@merge from HEAD
@
text
@d102 1
a102 1
This software is Copyright (C) 1993-2004 by the United States Army
@


