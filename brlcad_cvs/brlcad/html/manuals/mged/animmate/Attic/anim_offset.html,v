head	1.3;
access;
symbols
	ansi-20040405-merged:1.1.6.1
	postmerge-20040405-ansi:1.2
	premerge-20040404-ansi:1.2
	postmerge-autoconf:1.2
	autoconf-freeze:1.1.14.1
	premerge-autoconf:1.2
	ansi-20040316-freeze:1.1
	postmerge-20040315-windows:1.2
	premerge-20040315-windows:1.2
	windows-20040315-freeze:1.1.8.1
	autoconf-20031203:1.1
	autoconf-20031202:1.1
	autoconf-branch:1.1.0.14
	phong-branch:1.1.0.12
	photonmap-branch:1.1.0.10
	rel-6-1-DP:1.1
	windows-branch:1.1.0.8
	rel-6-0-2:1.1
	ansi-branch:1.1.0.6
	rel-6-0-1-branch:1.1.0.4
	hartley-6-0-post:1.1
	hartley-6-0-pre:1.1
	rel-6-0-1:1.1
	rel-6-0:1.1
	rel-5-4:1.1
	offsite-5-3-pre:1.1
	rel-5-3:1.1
	rel-5-2:1.1
	rel-5-1-branch:1.1.0.2
	rel-5-1:1.1
	rel-5-0:1.1
	rel-5-0-beta:1.1;
locks; strict;
comment	@# @;


1.3
date	2004.05.21.17.50.08;	author morrison;	state dead;
branches;
next	1.2;

1.2
date	2004.02.02.17.39.03;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	99.02.12.19.43.08;	author jra;	state Exp;
branches
	1.1.6.1
	1.1.8.1
	1.1.14.1;
next	;

1.1.6.1
date	2004.03.17.21.16.24;	author morrison;	state Exp;
branches;
next	;

1.1.8.1
date	2004.03.11.23.41.07;	author morrison;	state Exp;
branches;
next	;

1.1.14.1
date	2004.02.12.19.49.27;	author erikg;	state Exp;
branches;
next	;


desc
@Carl's Animation Tutorial
@


1.3
log
@moved to doc/html/
@
text
@<html><head>
<title>BRL-CAD anim_offset Man Page</title>
</head><body>
<h1>NAME</h1>
anim_offset - create an animation table for an object rigidly attached to
another object.
<h1>SYNOPSIS</h1>
<b>anim_offset </b>
<b>-o # # # </b>
<b>[-r] </b>
<b>&lt; in.table </b>
<b>&gt; out.table</b>
<h1>DESCRIPTION</h1>
This filter operates on animation tables of the type used by
<i>tabsub</i>
and 
<i>anim_script.</i>
Given a table specifying the position and
orientation of one object at every applicable time, 
<i>anim_offset</i>
calculates
the position of another object which is rigidly attached to it. 
<p>
The columns of the input table should be time, three columns of
position, followed by yaw, pitch, and roll. The output will be
normally be a four-column file specifying time and position. If the 
<b>-r</b>
option is used, the output is a seven-column file in which the last
three columns are copies of the orientation information from the input
file.
<p>
The position of the object relative to the rigid body should be
given on the command line in the order x, y, z, with the 
<b>-o # # #</b>
option. These offset values
should be as measured from the centroid of the rigid  body.
<h1>EXAMPLES</h1>
This filter could be used, for example, to do an animation where
the camera is placed inside a moving vehicle. 
<p>
Suppose that truck.table contains the desired position of the
center of the front axle of the truck as well as its orientation at each
time. One row of the table might look like this:
<pre>

35.2	12450	-140	600	90.0 	0.0	0.0

</pre>
Thus 35.2 seconds into the animation, the center of the front axle will
be at (12450, -140, 600), and the truck will be pointed in the positive
y direction. (yaw = 90).
<p>
Now, suppose we want the camera to ride along in the cab, above
and behind the front axle and somewhat to the left. To specify this
offset, we use the coordinate frame of the truck, with the origin at the
center of the front axle, the x-axis to the front, y to the left, and z
pointing up. Let the exact offset from the axle to the desired camera
position in this case be (-600, 900, 1200), in units of mm. Now we use
the routine:
<pre>

anim_offset -o -600 900 1200 &lt; truck.table &gt; camera.table

</pre>
The result is a four-column table giving the desired position of the
virtual camera at each time. The row corresponding to the sample row
above would be:
<pre>

35.2	11550	-740	1800

</pre>
With the 
<b>-r </b>
option, the output would have been:
<pre>

35.2	11550	-740	1800	90.0 	0.0	0.0

</pre>
Now 
<i>tabsub </i>
and/or 
<i>anim_script </i>
can be used to process these two animation
tables into an animation script.
<h1>BUGS</h1>
	The program will only use orientations specified as yaw,
pitch, and roll. You can get around this using 
<i>anim_orient</i>,
which converts between different orientation representations.
<h1>AUTHOR</h1>
Carl J. Nuzman
<h1>COPYRIGHT</h1>
	This software is Copyright (C) 1993-2004 by the United States Army
in all countries except the USA.  All rights reserved.
<h1>"BUG REPORTS"</h1>
Reports of bugs or problems should be submitted via electronic
mail to &lt;CAD@@BRL.MIL&gt;.
</body></html>
@


1.2
log
@update copyright to include span through 2003
@
text
@@


1.1
log
@Carl's Animation Tutorial
@
text
@d95 1
a95 1
	This software is Copyright (C) 1993 by the United States Army
@


1.1.6.1
log
@sync branch with HEAD
@
text
@d95 1
a95 1
	This software is Copyright (C) 1993-2004 by the United States Army
@


1.1.8.1
log
@sync to HEAD...
@
text
@d95 1
a95 1
	This software is Copyright (C) 1993-2004 by the United States Army
@


1.1.14.1
log
@merge from HEAD
@
text
@d95 1
a95 1
	This software is Copyright (C) 1993-2004 by the United States Army
@


