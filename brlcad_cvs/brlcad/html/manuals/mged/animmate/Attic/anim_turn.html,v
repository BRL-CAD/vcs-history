head	1.3;
access;
symbols
	ansi-20040405-merged:1.1.6.1
	postmerge-20040405-ansi:1.2
	premerge-20040404-ansi:1.2
	postmerge-autoconf:1.2
	autoconf-freeze:1.1.14.1
	premerge-autoconf:1.2
	ansi-20040316-freeze:1.1
	postmerge-20040315-windows:1.2
	premerge-20040315-windows:1.2
	windows-20040315-freeze:1.1.8.1
	autoconf-20031203:1.1
	autoconf-20031202:1.1
	autoconf-branch:1.1.0.14
	phong-branch:1.1.0.12
	photonmap-branch:1.1.0.10
	rel-6-1-DP:1.1
	windows-branch:1.1.0.8
	rel-6-0-2:1.1
	ansi-branch:1.1.0.6
	rel-6-0-1-branch:1.1.0.4
	hartley-6-0-post:1.1
	hartley-6-0-pre:1.1
	rel-6-0-1:1.1
	rel-6-0:1.1
	rel-5-4:1.1
	offsite-5-3-pre:1.1
	rel-5-3:1.1
	rel-5-2:1.1
	rel-5-1-branch:1.1.0.2
	rel-5-1:1.1
	rel-5-0:1.1
	rel-5-0-beta:1.1;
locks; strict;
comment	@# @;


1.3
date	2004.05.21.17.50.08;	author morrison;	state dead;
branches;
next	1.2;

1.2
date	2004.02.02.17.39.03;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	99.02.12.19.43.09;	author jra;	state Exp;
branches
	1.1.6.1
	1.1.8.1
	1.1.14.1;
next	;

1.1.6.1
date	2004.03.17.21.16.24;	author morrison;	state Exp;
branches;
next	;

1.1.8.1
date	2004.03.11.23.41.07;	author morrison;	state Exp;
branches;
next	;

1.1.14.1
date	2004.02.12.19.49.29;	author erikg;	state Exp;
branches;
next	;


desc
@Carl's Animation Tutorial
@


1.3
log
@moved to doc/html/
@
text
@<html><head>
<title>BRL-CAD anim_turn Man Page</title>
</head><body>
<h1>NAME</h1>
anim_turn - make animation table for vehicle with front-wheel steering.
<h1>SYNOPSIS</h1>
<b>anim_turn -l length </b>
<b>[-a angle]</b>
<b>[-r radius]</b>
<b>[-f factor]</b>
<b>[-p integer]</b>
<b>&lt; in.table </b>
<b>&gt; out.table</b>
<h1>DESCRIPTION</h1>
The motion of a front wheel steered vehicle is not simple - the
instaneous velocity of the front wheels is in the direction they are
pointed, while the instantaneous velocity of the back wheels is the
direction the vehicle is pointed. The purpose of
<i>anim_turn</i>
is to
produce a complete animation table for such a vehicle, given a table
specifying the desired position of the front axle at each relevant
time step. The input table should contain four columns, specifying the
time and 3D position of the center of the front axle. Actually, the path
is assumed to be confined to an x-y plane, but the three columns are
included for consistency with other animation routines.
<p>
The output is normally a seven-column table which is a copy of
the input table with three extra columns specifying the yaw,
pitch, and roll of the truck at each time. The pitch and roll
are always zero, since the motion is assumed be in an x-y plane.
<p>
The 
<b>-l#</b>
option is not optional, and is used to specify the length
of the wheelbase (from the front axle to the rear axle). 
<p>
<h1>OPTIONS</h1>
<dl><dt>
<b>-a#</b>

<dd>
In the first frame of the animation, the truck is normally oriented to
face the direction defined by the first two positions in the input
table. If another initial yaw is desired, then it may be specified
with the <b>-a</b> option.
<dt>
<b>-r#</b>

<dd>
Create an animation table for the front wheels. The argument to this
option is the radius of the front wheels. The output table has four
columns: time, swivel, rotation, and a zero-filled column. These
columns represent the orientation of the front wheels in terms of yaw,
pitch, and roll; the table can be piped directly into
<a href="anim_script.html">anim_script</a> to animate the wheels.
<dt>
<b>-f#</b>

<dd>
Specify a factor to be used to animate a steering wheel. If this option
is selected, the output table will contain four columns: time, swivel,
and two zero columns. This table can be used directly by
<a href="anim_script.html">anim_script</a>
to make an animation script for a steering wheel. The argument to the
option should be the factor by which to exagerate the swiveling of 
the wheels. For
example, on a typical truck, you may need to turn the steering wheel 360=18x20
degrees in order for the wheels to swivel 20 degrees. To model this
effect, a factor of 18 would be used. 
<dt>
<b>-p#</b>

<dd>
Specify the ratio of input rows to output rows, which must be
an integer. The default, of course, is one. The accuracy and
smoothness of the steering algorithm 
are best when the frame rate of the input table is high.
This can lead to a degradation of performance when creating a preview
animation with a small frame rate. In this case, the user should still
use a high frame rate table as input to <i>anim_turn</i>, and decrease the
frame rate of the output with the <b>-p</b> option.
For example, if 
<b>in.table </b>
contains 30 rows for each
second of the animation, then the command:
<p>
anim_turn -l 3000 -p10 &lt; in.table &gt; out.table
<p>
would produce an animation table containing only 3 rows for each second of
the animation.
</dl>
<h1>BUGS</h1>
The algorithm used only works for motion in an x-y plane.
<h1>AUTHOR</h1>
Carl J. Nuzman
<h1>COPYRIGHT</h1>
This software is Copyright (C) 1993-2004 by the United States Army
in all countries except the USA.  All rights reserved.
<h1>"BUG REPORTS"</h1>
Reports of bugs or problems should be submitted via electronic
mail to &lt;CAD@@BRL.MIL&gt;.
</body></html>
@


1.2
log
@update copyright to include span through 2003
@
text
@@


1.1
log
@Carl's Animation Tutorial
@
text
@d98 1
a98 1
This software is Copyright (C) 1993 by the United States Army
@


1.1.6.1
log
@sync branch with HEAD
@
text
@d98 1
a98 1
This software is Copyright (C) 1993-2004 by the United States Army
@


1.1.8.1
log
@sync to HEAD...
@
text
@d98 1
a98 1
This software is Copyright (C) 1993-2004 by the United States Army
@


1.1.14.1
log
@merge from HEAD
@
text
@d98 1
a98 1
This software is Copyright (C) 1993-2004 by the United States Army
@


