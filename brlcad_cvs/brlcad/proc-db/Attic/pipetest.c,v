head	11.18;
access;
symbols
	ansi-20040405-merged:11.14.2.2
	postmerge-20040405-ansi:11.16
	premerge-20040404-ansi:11.15
	postmerge-autoconf:11.15
	autoconf-freeze:11.14.10.2
	premerge-autoconf:11.15
	postmerge-20040315-windows:11.15
	premerge-20040315-windows:11.15
	windows-20040315-freeze:11.14.4.1
	autoconf-20031203:11.14
	autoconf-20031202:11.14
	autoconf-branch:11.14.0.10
	phong-branch:11.14.0.8
	photonmap-branch:11.14.0.6
	rel-6-1-DP:11.14
	windows-branch:11.14.0.4
	rel-6-0-2:11.12
	ansi-branch:11.14.0.2
	rel-6-0-1-branch:11.12.0.2
	hartley-6-0-post:11.13
	hartley-6-0-pre:11.12
	rel-6-0-1:11.12
	rel-6-0:11.12
	rel-5-4:11.8
	offsite-5-3-pre:11.12
	rel-5-3:11.8
	rel-5-2:11.8
	rel-5-1-branch:11.8.0.2
	rel-5-1:11.8
	rel-5-0:11.6
	rel-5-0-beta:11.5
	rel-4-5:11.4
	ctj-4-5-post:11.4
	ctj-4-5-pre:11.4
	rel-4-4:11.1
	rel-4-0:10.1;
locks; strict;
comment	@ * @;


11.18
date	2004.05.21.17.33.45;	author morrison;	state dead;
branches;
next	11.17;

11.17
date	2004.05.10.15.30.49;	author erikg;	state Exp;
branches;
next	11.16;

11.16
date	2004.04.05.05.45.58;	author morrison;	state Exp;
branches;
next	11.15;

11.15
date	2004.02.02.17.39.37;	author morrison;	state Exp;
branches;
next	11.14;

11.14
date	2002.08.20.17.08.34;	author jra;	state Exp;
branches
	11.14.2.1
	11.14.4.1
	11.14.10.1;
next	11.13;

11.13
date	2002.08.15.20.55.46;	author hartley;	state Exp;
branches;
next	11.12;

11.12
date	2000.07.25.18.42.05;	author mike;	state Exp;
branches;
next	11.11;

11.11
date	2000.07.12.21.59.07;	author mike;	state Exp;
branches;
next	11.10;

11.10
date	2000.07.10.23.38.21;	author mike;	state Exp;
branches;
next	11.9;

11.9
date	2000.07.10.23.35.39;	author mike;	state Exp;
branches;
next	11.8;

11.8
date	2000.03.31.03.07.31;	author mike;	state Exp;
branches;
next	11.7;

11.7
date	2000.01.31.15.27.43;	author jra;	state Exp;
branches;
next	11.6;

11.6
date	99.07.27.17.05.00;	author jra;	state Exp;
branches;
next	11.5;

11.5
date	98.07.06.13.17.01;	author jra;	state Exp;
branches;
next	11.4;

11.4
date	96.07.15.18.16.22;	author jra;	state Exp;
branches;
next	11.3;

11.3
date	95.12.04.13.50.05;	author jra;	state Exp;
branches;
next	11.2;

11.2
date	95.05.31.16.04.58;	author jra;	state Exp;
branches;
next	11.1;

11.1
date	95.01.04.10.06.17;	author mike;	state Rel4_4;
branches;
next	10.3;

10.3
date	94.11.14.22.16.24;	author mike;	state Exp;
branches;
next	10.2;

10.2
date	93.10.26.01.57.55;	author mike;	state Exp;
branches;
next	10.1;

10.1
date	91.10.12.06.44.40;	author mike;	state Rel4_0;
branches;
next	1.6;

1.6
date	91.09.09.16.10.10;	author butler;	state Exp;
branches;
next	1.5;

1.5
date	91.08.31.07.30.23;	author mike;	state Exp;
branches;
next	1.4;

1.4
date	90.10.17.16.51.49;	author mike;	state Exp;
branches;
next	1.3;

1.3
date	90.10.16.11.18.23;	author mike;	state Exp;
branches;
next	1.2;

1.2
date	90.10.11.06.09.32;	author mike;	state Exp;
branches;
next	1.1;

1.1
date	90.10.11.02.35.19;	author mike;	state Exp;
branches;
next	;

11.14.2.1
date	2002.09.19.18.02.12;	author morrison;	state Exp;
branches;
next	11.14.2.2;

11.14.2.2
date	2004.03.17.21.22.54;	author morrison;	state Exp;
branches;
next	;

11.14.4.1
date	2004.03.10.15.06.36;	author morrison;	state Exp;
branches;
next	;

11.14.10.1
date	2004.02.12.19.50.51;	author erikg;	state Exp;
branches;
next	11.14.10.2;

11.14.10.2
date	2004.03.15.14.08.05;	author erikg;	state Exp;
branches;
next	;


desc
@Program to test pipes and particles.
@


11.18
log
@moved to src/proc-db/
@
text
@/*
 *			P I P E T E S T . C
 *
 *  Program to generate test pipes and particles.
 *
 *  Author -
 *	Michael John Muuss
 *  
 *  Source -
 *	SECAD/VLD Computing Consortium, Bldg 394
 *	The U. S. Army Ballistic Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5066
 *  
 *  Copyright 
 *	This software is Copyright (C) 1990-2004 by the United States Army.
 *	All rights reserved.
 */
#ifndef lint
static const char RCSid[] = "@@(#)$Header: /n/xoff/cvs/brlcad/proc-db/pipetest.c,v 11.17 2004/05/10 15:30:49 erikg Exp $ (BRL)";
#endif

#ifdef HAVE_CONFIG_H
# include "config.h"
#endif



#include <stdio.h>
#include <math.h>
#include "machine.h"
#include "externs.h"
#include "bu.h"
#include "vmath.h"
#include "raytrace.h"
#include "wdb.h"

void do_bending(struct rt_wdb *fp, char *name, point_t (*pts), int npts, double bend, double od);
void pr_pipe(char *name, struct wdb_pipept *head);

struct wdb_pipept  pipe1[] = {
	{
		{(long)WDB_PIPESEG_MAGIC, 0, 0},
		{0, 1, 0},
		0.05, 0.1, 0.1
	},


	{
		{(long)WDB_PIPESEG_MAGIC, 0, 0},
		{4, 5, 0},
		0.05, 0.1, 0.1
	},

	{
		{(long)WDB_PIPESEG_MAGIC, 0, 0},
		{4, 9, 0},
		0.05, 0.1, 0.1
	},
	{
		{(long)WDB_PIPESEG_MAGIC, 0, 0},
		{9, 9, 0},
		0.05, 0.1, 0.1
	}
};
int	pipe1_npts = sizeof(pipe1)/sizeof(struct wdb_pipept);

#define Q	0.05	/* inset from borders of enclsing cube */
#define R	0.05	/* pushout factor */

#define A	0+Q
#define B	1-Q

point_t	pipe2[] = {
	/* Front face, in Y= A-R plane */
	{A-R, A-R, A+0.5},
	{A-R, A-R, B},
	{B, A-R, B},
	{B, A-R, A-R},
	{A, A-R, A-R},
	/* Bottom face, in Z= A-R plane */
	{A, B, A-R},
	{B+R, B, A-R},
	{B+R, A, A-R},
	/* Right face, in X= B+R plane */
	{B+R, A, B},
	{B+R, B+R, B},
	{B+R, B+R, A},
	/* Rear face, in Y= B+R plane */
	{A, B+R, A},
	{A, B+R, B+R},
	{B, B+R, B+R},
	/* Top face, in Z= B+R plane */
	{B, A, B+R},
	{A-R, A, B+R},
	{A-R, B, B+R},
	/* Left face, in X= A-R plane */
	{A-R, B, A},
	{A-R, A-R, A},
	{A-R, A-R, A+0.5}		/* "repeat" of first point */
};
int	pipe2_npts = sizeof(pipe2)/sizeof(point_t);

struct rt_wdb	*outfp;

int
main(int argc, char **argv)
{
	point_t	vert;
	vect_t	h;
	int	i;
	struct bu_list head;

	outfp = wdb_fopen("pipetest.g");
	mk_conversion("meters");
	mk_id( outfp, "Pipe & Particle Test" );

	/* Spherical part */
	VSET( vert, 1, 0, 0 );
	VSET( h, 0, 0, 0 );
	mk_particle( outfp, "p1", vert, h, 0.5, 0.5 );

	/* Cylindrical part */
	VSET( vert, 3, 0, 0 );
	VSET( h, 2, 0, 0 );
	mk_particle( outfp, "p2", vert, h, 0.5, 0.5 );

	/* Conical particle */
	VSET( vert, 7, 0, 0 );
	VSET( h, 2, 0, 0 );
	mk_particle( outfp, "p3", vert, h, 0.5, 1.0 );

	/* Make a piece of pipe */
	BU_LIST_INIT( &head );
	for( i=0; i<pipe1_npts ; i++ )  {
		BU_LIST_INSERT( &head, &pipe1[i].l );
	}
	pr_pipe( "pipe1", &head );
	if( (i = mk_pipe( outfp, "pipe1", &head )) < 0 )
		fprintf(stderr,"mk_pipe(%s) returns %d\n", "pipe1", i);

	do_bending( outfp, "pipe2", pipe2, pipe2_npts, 0.1, 0.05 );
	return 0;
}

void
do_bending(struct rt_wdb *fp, char *name, point_t (*pts), int npts, double bend, double od)
{
	struct bu_list	head;
	int			i;

	mk_pipe_init( &head );

	for( i=0; i < npts; i++ )  {
		mk_add_pipe_pt( &head, pts[i], od, 0.0, bend );
	}

	pr_pipe( name, &head );

	if( ( i = mk_pipe( fp, name, &head ) ) < 0 )
		fprintf(stderr,"mk_pipe(%s) error %d\n", name, i );

	/* free the storage */
	mk_pipe_free( &head );

}

void
pr_pipe(char *name, struct wdb_pipept *head)
{
	register struct wdb_pipept	*psp;

	fprintf(stderr,"\n--- %s:\n", name);
	for( BU_LIST_FOR( psp, wdb_pipept, &head->l ) )
	{
		fprintf(stderr,"id=%g od=%g, coord=(%g,%g,%g), bend radius=%g\n",
			psp->pp_id, psp->pp_od,
			psp->pp_coord[X],
			psp->pp_coord[Y],
			psp->pp_coord[Z],
			psp->pp_bendradius );
	}
}
@


11.17
log
@change conf.h to a wrapped config.h
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/proc-db/pipetest.c,v 11.16 2004/04/05 05:45:58 morrison Exp $ (BRL)";
@


11.16
log
@merge of ansi-6-0-branch into head
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
d22 5
a26 1
#include "conf.h"
@


11.15
log
@update copyright to include span through 2003
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/proc-db/pipetest.c,v 11.14 2002/08/20 17:08:34 jra Exp $ (BRL)";
d33 2
a34 2
void do_bending();
void pr_pipe();
d102 1
a102 2
main(argc, argv)
char	**argv;
d142 1
a142 7
do_bending( fp, name, pts, npts, bend, od )
struct rt_wdb	*fp;
char	*name;
point_t	pts[];
int	npts;
double	bend;
double	od;
d164 1
a164 3
pr_pipe( name, head )
char	*name;
struct wdb_pipept *head;
@


11.14
log
@Restoration of entire source tree to Pre-Hartley state
@
text
@d15 1
a15 1
 *	This software is Copyright (C) 1990 by the United States Army.
d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/proc-db/pipetest.c,v 11.12 2000/07/25 18:42:05 mike Exp $ (BRL)";
@


11.14.4.1
log
@merge in updates from HEAD
@
text
@d15 1
a15 1
 *	This software is Copyright (C) 1990-2004 by the United States Army.
d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /n/cad/c/CVS/brlcad/proc-db/pipetest.c,v 11.15 2004/02/02 17:39:37 morrison Exp $ (BRL)";
@


11.14.10.1
log
@merge from HEAD
@
text
@d15 1
a15 1
 *	This software is Copyright (C) 1990-2004 by the United States Army.
d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/proc-db/pipetest.c,v 11.15 2004/02/02 17:39:37 morrison Exp $ (BRL)";
@


11.14.10.2
log
@merge from head
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/proc-db/pipetest.c,v 11.14.10.1 2004/02/12 19:50:51 erikg Exp $ (BRL)";
@


11.14.2.1
log
@Initial ANSIfication
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/proc-db/pipetest.c,v 11.14 2002/08/20 17:08:34 jra Exp $ (BRL)";
d33 2
a34 2
void do_bending(struct rt_wdb *fp, char *name, point_t (*pts), int npts, double bend, double od);
void pr_pipe(char *name, struct wdb_pipept *head);
d102 2
a103 1
main(int argc, char **argv)
d143 7
a149 1
do_bending(struct rt_wdb *fp, char *name, point_t (*pts), int npts, double bend, double od)
d171 3
a173 1
pr_pipe(char *name, struct wdb_pipept *head)
@


11.14.2.2
log
@sync branch with HEAD
@
text
@d15 1
a15 1
 *	This software is Copyright (C) 1990-2004 by the United States Army.
d19 1
a19 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
@


11.13
log
@Converted from K&R to ANSI C - RFH
@
text
@d33 2
a34 2
void do_bending(struct rt_wdb *fp, char *name, point_t (*pts), int npts, double bend, double od);
void pr_pipe(char *name, struct wdb_pipept *head);
d102 2
a103 1
main(int argc, char **argv)
d143 7
a149 1
do_bending(struct rt_wdb *fp, char *name, point_t (*pts), int npts, double bend, double od)
d171 3
a173 1
pr_pipe(char *name, struct wdb_pipept *head)
@


11.12
log
@
libwdb change
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/proc-db/pipetest.c,v 11.11 2000/07/12 21:59:07 mike Exp $ (BRL)";
d33 2
a34 2
void do_bending();
void pr_pipe();
d102 1
a102 2
main(argc, argv)
char	**argv;
d142 1
a142 7
do_bending( fp, name, pts, npts, bend, od )
struct rt_wdb	*fp;
char	*name;
point_t	pts[];
int	npts;
double	bend;
double	od;
d164 1
a164 3
pr_pipe( name, head )
char	*name;
struct wdb_pipept *head;
@


11.11
log
@
Converted to use new version of LIBWDB.
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/proc-db/pipetest.c,v 11.10 2000/07/10 23:38:21 mike Exp $ (BRL)";
d108 1
a108 1
	struct wdb_pipept head;
d130 1
a130 1
	BU_LIST_INIT( &head.l );
d132 1
a132 1
		BU_LIST_INSERT( &head.l, &pipe1[i].l );
d151 1
a151 1
	struct wdb_pipept	head;
@


11.10
log
@
const RCSid
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/proc-db/pipetest.c,v 11.9 2000/07/10 23:35:39 mike Exp $ (BRL)";
d39 1
a39 1
		0, 1, 0,
d46 1
a46 1
		4, 5, 0,
d52 1
a52 1
		4, 9, 0,
d57 1
a57 1
		9, 9, 0,
d71 5
a75 5
	A-R, A-R, A+0.5,
	A-R, A-R, B,
	B, A-R, B,
	B, A-R, A-R,
	A, A-R, A-R,
d77 3
a79 3
	A, B, A-R,
	B+R, B, A-R,
	B+R, A, A-R,
d81 3
a83 3
	B+R, A, B,
	B+R, B+R, B,
	B+R, B+R, A,
d85 3
a87 3
	A, B+R, A,
	A, B+R, B+R,
	B, B+R, B+R,
d89 3
a91 3
	B, A, B+R,
	A-R, A, B+R,
	A-R, B, B+R,
d93 3
a95 3
	A-R, B, A,
	A-R, A-R, A,
	A-R, A-R, A+0.5		/* "repeat" of first point */
d99 3
d110 1
d112 1
a112 1
	mk_id( stdout, "Pipe & Particle Test" );
d117 1
a117 1
	mk_particle( stdout, "p1", vert, h, 0.5, 0.5 );
d122 1
a122 1
	mk_particle( stdout, "p2", vert, h, 0.5, 0.5 );
d127 1
a127 1
	mk_particle( stdout, "p3", vert, h, 0.5, 1.0 );
d135 1
a135 1
	if( (i = mk_pipe( stdout, "pipe1", &head )) < 0 )
d138 2
a139 1
	do_bending( stdout, "pipe2", pipe2, pipe2_npts, 0.1, 0.05 );
d144 1
a144 1
FILE	*fp;
@


11.9
log
@
raytrace.h before wdb.h
Eliminated use of db.h
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/proc-db/pipetest.c,v 11.8 2000/03/31 03:07:31 mike Exp $ (BRL)";
@


11.8
log
@
Changed RT_ to BU_ / BN_
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/proc-db/pipetest.c,v 11.7 2000/01/31 15:27:43 jra Exp $ (BRL)";
d28 1
d30 1
a30 1
#include "rtlist.h"
@


11.7
log
@Eliminated some unused variables
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/proc-db/pipetest.c,v 11.6 1999/07/27 17:05:00 jra Exp $ (BRL)";
d125 1
a125 1
	RT_LIST_INIT( &head.l );
d127 1
a127 1
		RT_LIST_INSERT( &head.l, &pipe1[i].l );
d172 1
a172 1
	for( RT_LIST_FOR( psp, wdb_pipept, &head->l ) )
@


11.6
log
@Corrected call to mk_pipe_init()
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/proc-db/pipetest.c,v 11.5 1998/07/06 13:17:01 jra Exp $ (BRL)";
a145 2
	vect_t			prev, next;
	point_t			my_end, next_start;
@


11.5
log
@Updateed to use latest pipe building routines.
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/proc-db/pipetest.c,v 11.4 1996/07/15 18:16:22 jra Exp $ (BRL)";
d150 1
a150 1
	mk_pipe_init( &head, pts[0], od, 0.0, bend );
@


11.4
log
@Minor Mods for IRIX 6.2
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/proc-db/RCS/pipetest.c,v 11.3 1995/12/04 13:50:05 jra Exp jra $ (BRL)";
d94 1
a94 1
	A-R, A-R, A+0.2		/* "repeat" of first point */
a145 1
	struct wdb_pipept	*ps;
d150 1
a150 17
	RT_LIST_INIT( &head.l );
	ps = (struct wdb_pipept *)calloc(1,sizeof(struct wdb_pipept));
	ps->l.magic = WDB_PIPESEG_MAGIC;
	ps->pp_id = 0;
	ps->pp_od = od;
	ps->pp_bendradius = bend;
	VMOVE( ps->pp_coord, pts[0] );
	RT_LIST_INSERT( &head.l, &ps->l );

	for( i=1; i < npts-1; i++ )  {
		ps = (struct wdb_pipept *)calloc(1,sizeof(struct wdb_pipept));
		ps->l.magic = WDB_PIPESEG_MAGIC;
		ps->pp_id = 0;
		ps->pp_od = od;
		ps->pp_bendradius = bend;
		VMOVE( ps->pp_coord, pts[i] );
		RT_LIST_INSERT( &head.l, &ps->l );
d152 2
d163 1
@


11.3
log
@Mods due to new pipe solid definition.
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/proc-db/RCS/pipetest.c,v 11.2 1995/05/31 16:04:58 jra Exp jra $ (BRL)";
d32 3
d136 1
d180 1
@


11.2
log
@Fixed a few small bugs.
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/proc-db/RCS/pipetest.c,v 11.1 1995/01/04 10:06:17 mike Rel4_4 jra $ (BRL)";
d32 1
a32 1
struct wdb_pipeseg  pipe1[] = {
d36 1
a36 2
		0, 0, 0,
		0.05, 0.1, WDB_PIPESEG_TYPE_LINEAR
a41 1
		0, 5, 0,
d43 1
a43 1
		0.05, 0.1, WDB_PIPESEG_TYPE_BEND
d49 1
a49 2
		0, 0, 0,
		0.05, 0.1, WDB_PIPESEG_TYPE_LINEAR
d54 1
a54 2
		0, 0, 0,
		0.05, 0.1, WDB_PIPESEG_TYPE_END
d57 1
d101 1
a101 1
	struct wdb_pipeseg head;
d123 1
a123 1
	for( i=0; ; i++ )  {
a124 2
		if( pipe1[i].ps_type == WDB_PIPESEG_TYPE_END )
			break;
d141 2
a142 2
	struct wdb_pipeseg	head;
	struct wdb_pipeseg	*ps;
d148 1
a148 2
	ps = (struct wdb_pipeseg *)calloc(1,sizeof(struct wdb_pipeseg));
	ps->ps_type = WDB_PIPESEG_TYPE_LINEAR;
d150 4
a153 3
	ps->ps_id = 0;
	ps->ps_od = od;
	VMOVE( ps->ps_start, pts[0] );
d157 1
a157 9
		VSUB2( prev, pts[i-1], pts[i] );
		VSUB2( next, pts[i+1], pts[i] );
		VUNITIZE( prev );
		VUNITIZE( next );
		VJOIN1( my_end, pts[i], bend, prev );
		VJOIN1( next_start, pts[i], bend, next );
		/* End the linear segment by starting the bend */
		ps = (struct wdb_pipeseg *)calloc(1,sizeof(struct wdb_pipeseg));
		ps->ps_type = WDB_PIPESEG_TYPE_BEND;
d159 4
a162 4
		ps->ps_id = 0;
		ps->ps_od = od;
		VMOVE( ps->ps_start, my_end );
		VJOIN1( ps->ps_bendcenter, my_end, bend, next );
a164 8
		/* End the bend by starting the next linear section */
		ps = (struct wdb_pipeseg *)calloc(1,sizeof(struct wdb_pipeseg));
		ps->ps_type = WDB_PIPESEG_TYPE_LINEAR;
		ps->l.magic = WDB_PIPESEG_MAGIC;
		ps->ps_id = 0;
		ps->ps_od = od;
		VMOVE( ps->ps_start, next_start );
		RT_LIST_INSERT( &head.l, &ps->l );
a166 8
	ps = (struct wdb_pipeseg *)calloc(1,sizeof(struct wdb_pipeseg));
	ps->ps_type = WDB_PIPESEG_TYPE_END;
	ps->l.magic = WDB_PIPESEG_MAGIC;
	ps->ps_id = 0;
	ps->ps_od = od;
	VMOVE( ps->ps_start, pts[npts-1] );
	RT_LIST_INSERT( &head.l, &ps->l );

d178 1
a178 1
struct wdb_pipeseg *head;
d180 1
a180 1
	register struct wdb_pipeseg	*psp;
d183 8
a190 32
	for( RT_LIST_FOR( psp, wdb_pipeseg, &head->l ) )  {
		switch( psp->ps_type )  {
		case WDB_PIPESEG_TYPE_END:
			fprintf(stderr,"END	id=%g od=%g, start=(%g,%g,%g)\n",
				psp->ps_id, psp->ps_od,
				psp->ps_start[X],
				psp->ps_start[Y],
				psp->ps_start[Z] );
			break;
		case WDB_PIPESEG_TYPE_LINEAR:
			fprintf(stderr,"LINEAR	id=%g od=%g, start=(%g,%g,%g)\n",
				psp->ps_id, psp->ps_od,
				psp->ps_start[X],
				psp->ps_start[Y],
				psp->ps_start[Z] );
			break;
		case WDB_PIPESEG_TYPE_BEND:
			fprintf(stderr,"BEND	id=%g od=%g, start=(%g,%g,%g)\n",
				psp->ps_id, psp->ps_od,
				psp->ps_start[X],
				psp->ps_start[Y],
				psp->ps_start[Z] );
			fprintf(stderr,"		bendcenter=(%g,%g,%g)\n",
				psp->ps_bendcenter[X],
				psp->ps_bendcenter[Y],
				psp->ps_bendcenter[Z] );
			break;
		default:
			fprintf(stderr," *** unknown ps_type=%d psp=x%x ***\n",
				psp->ps_type, psp );
			break;
		}
@


11.1
log
@Release_4.4
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/proc-db/RCS/pipetest.c,v 10.3 94/11/14 22:16:24 mike Exp $ (BRL)";
d40 1
d44 2
a45 2
		0, 0, 0,
		0.05, 0.1, WDB_PIPESEG_TYPE_LINEAR
d50 3
a52 3
		4, 5, 0,
		0, 5, 0,
		0.05, 0.1, WDB_PIPESEG_TYPE_BEND
a53 1

d56 1
a56 1
		0, 1, 0,
d155 1
d171 1
d181 1
d190 1
@


10.3
log
@Irix 6
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/proc-db/RCS/pipetest.c,v 10.2 93/10/26 01:57:55 mike Exp Locker: mike $ (BRL)";
@


10.2
log
@Track change in rtlist.h
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/proc-db/RCS/pipetest.c,v 10.1 91/10/12 06:44:40 mike Rel4_0 Locker: mike $ (BRL)";
d22 2
d27 1
@


10.1
log
@Release_4.0
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/proc-db/RCS/pipetest.c,v 1.6 91/09/09 16:10:10 butler Exp $ (BRL)";
d205 1
a205 1
	for( RT_LIST( psp, wdb_pipeseg, &head->l ) )  {
@


1.6
log
@Added {} around elements in wdb_pipeseg array "pipe1".
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/proc-db/RCS/pipetest.c,v 1.5 91/08/31 07:30:23 mike Exp $ (BRL)";
@


1.5
log
@Slightly neater initialization
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/proc-db/RCS/pipetest.c,v 1.4 90/10/17 16:51:49 mike Exp $ (BRL)";
d31 1
a31 1
		(long)WDB_PIPESEG_MAGIC, 0, 0,
d38 1
a38 1
		(long)WDB_PIPESEG_MAGIC, 0, 0,
d45 1
a45 1
		(long)WDB_PIPESEG_MAGIC, 0, 0,
d52 1
a52 1
		(long)WDB_PIPESEG_MAGIC, 0, 0,
@


1.4
log
@Fixed bug introduced by changing to rtlist.h
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/proc-db/RCS/pipetest.c,v 1.3 90/10/16 11:18:23 mike Exp $ (BRL)";
d30 6
a35 4
	WDB_PIPESEG_MAGIC, 0, 0,
	0, 1, 0,
	0, 0, 0,
	0.05, 0.1, WDB_PIPESEG_TYPE_LINEAR,
d37 6
a42 4
	WDB_PIPESEG_MAGIC, 0, 0,
	0, 5, 0,
	0, 0, 0,
	0.05, 0.1, WDB_PIPESEG_TYPE_LINEAR,
d44 6
a49 4
	WDB_PIPESEG_MAGIC, 0, 0,
	4, 5, 0,
	0, 5, 0,
	0.05, 0.1, WDB_PIPESEG_TYPE_BEND,
d51 6
a56 4
	WDB_PIPESEG_MAGIC, 0, 0,
	0, 1, 0,
	0, 0, 0,
	0.05, 0.1, WDB_PIPESEG_TYPE_END
@


1.3
log
@Changed to using rtlist.h
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/proc-db/RCS/pipetest.c,v 1.2 90/10/11 06:09:32 mike Exp $ (BRL)";
d115 1
a115 1
	for( i=0; pipe1[i].ps_type != WDB_PIPESEG_TYPE_END; i++ )  {
d117 2
d120 3
a122 2
	pr_pipe( "pipe1", pipe1 );
	mk_pipe( stdout, "pipe1", &head );
d225 2
a226 1
			fprintf(stderr," *** unknown ***\n");
@


1.2
log
@Added 2 pipe tests, including "SGI logo" as a pipe.
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: pipetest.c,v 9.1 89/05/19 06:04:56 mike Rel3_5 $ (BRL)";
d26 1
d30 1
d33 3
a35 1
	0.05, 0.1, WDB_PIPESEG_TYPE_LINEAR, 0,
d38 3
a40 1
	0.05, 0.1, WDB_PIPESEG_TYPE_LINEAR, 0,
d43 3
a45 1
	0.05, 0.1, WDB_PIPESEG_TYPE_BEND, 0,
d48 1
a48 1
	0.05, 0.1, WDB_PIPESEG_TYPE_END, 0,
d93 1
d114 4
a117 2
	for( i=0; pipe1[i].ps_type != WDB_PIPESEG_TYPE_END; i++ )
		pipe1[i].ps_next = &pipe1[i+1];
d119 1
a119 1
	mk_pipe( stdout, "pipe1", pipe1 );
d132 1
a132 1
	struct wdb_pipeseg	*head, *tail;
d138 1
d144 1
a144 1
	head = tail = ps;
d160 1
a160 2
		tail->ps_next = ps;
		tail = ps;
d168 1
a168 2
		tail->ps_next = ps;
		tail = ps;
d176 1
a176 2
	tail->ps_next = ps;
	tail = ps;
d178 1
a178 1
	pr_pipe( name, head );
d180 1
a180 1
	if( ( i = mk_pipe( fp, name, head ) ) < 0 )
d182 3
a184 1
	/* XXX free the storage */
d194 1
a194 1
	for( psp = head; psp != WDB_PIPESEG_NULL; psp = psp->ps_next )  {
@


1.1
log
@Initial revision
@
text
@d28 51
d84 1
d105 110
@
