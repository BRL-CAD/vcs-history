head	11.13;
access;
symbols
	ansi-20040405-merged:11.10.2.1
	postmerge-20040405-ansi:11.11
	premerge-20040404-ansi:11.10
	postmerge-autoconf:11.10
	autoconf-freeze:11.10
	premerge-autoconf:11.10
	postmerge-20040315-windows:11.10
	premerge-20040315-windows:11.10
	windows-20040315-freeze:11.10
	autoconf-20031203:11.10
	autoconf-20031202:11.10
	autoconf-branch:11.10.0.10
	phong-branch:11.10.0.8
	photonmap-branch:11.10.0.6
	rel-6-1-DP:11.10
	windows-branch:11.10.0.4
	rel-6-0-2:11.8
	ansi-branch:11.10.0.2
	rel-6-0-1-branch:11.8.0.2
	hartley-6-0-post:11.9
	hartley-6-0-pre:11.8
	rel-6-0-1:11.8
	rel-6-0:11.8
	rel-5-4:11.3
	offsite-5-3-pre:11.7
	rel-5-3:11.3
	rel-5-2:11.3
	rel-5-1-branch:11.3.0.2
	rel-5-1:11.3
	rel-5-0:11.2
	rel-5-0-beta:11.2
	rel-4-5:11.2
	ctj-4-5-post:11.2
	ctj-4-5-pre:11.2
	rel-4-4:11.1;
locks; strict;
comment	@ * @;


11.13
date	2004.05.21.17.33.47;	author morrison;	state dead;
branches;
next	11.12;

11.12
date	2004.05.10.15.30.49;	author erikg;	state Exp;
branches;
next	11.11;

11.11
date	2004.04.05.05.45.58;	author morrison;	state Exp;
branches;
next	11.10;

11.10
date	2002.08.20.17.08.35;	author jra;	state Exp;
branches
	11.10.2.1;
next	11.9;

11.9
date	2002.08.15.20.55.47;	author hartley;	state Exp;
branches;
next	11.8;

11.8
date	2001.05.17.20.05.56;	author morrison;	state Exp;
branches;
next	11.7;

11.7
date	2000.08.25.02.28.50;	author mike;	state Exp;
branches;
next	11.6;

11.6
date	2000.07.12.21.59.08;	author mike;	state Exp;
branches;
next	11.5;

11.5
date	2000.07.10.23.38.22;	author mike;	state Exp;
branches;
next	11.4;

11.4
date	2000.07.10.23.35.40;	author mike;	state Exp;
branches;
next	11.3;

11.3
date	2000.03.31.03.07.32;	author mike;	state Exp;
branches;
next	11.2;

11.2
date	96.07.15.18.16.22;	author jra;	state Exp;
branches;
next	11.1;

11.1
date	95.01.04.10.06.21;	author mike;	state Rel4_4;
branches;
next	1.7;

1.7
date	94.11.14.22.18.39;	author mike;	state Exp;
branches;
next	1.6;

1.6
date	94.10.22.07.14.10;	author mike;	state Exp;
branches;
next	1.5;

1.5
date	94.10.22.06.18.18;	author mike;	state Exp;
branches;
next	1.4;

1.4
date	94.09.22.04.15.35;	author mike;	state Exp;
branches;
next	1.3;

1.3
date	94.09.16.23.38.20;	author mike;	state Exp;
branches;
next	1.2;

1.2
date	94.09.16.21.40.29;	author mike;	state Exp;
branches;
next	1.1;

1.1
date	94.09.14.17.00.58;	author jra;	state Exp;
branches;
next	;

11.10.2.1
date	2002.09.19.18.02.13;	author morrison;	state Exp;
branches;
next	;


desc
@First cut at the teapot using NMG TNURB faces.
@


11.13
log
@moved to src/proc-db/
@
text
@/*		T E A . C
 *
 * Convert the Utah Teapot description from the IEEE CG&A database to the
 * BRL-CAD t-NURBS NMG format. (Note that this has the closed bottom)
 *
 *  Authors -
 *	John R. Anderson
 *	Paul R. Stay
 *  
 *  Source -
 *	The U. S. Army Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5068  USA
 *  
 *  Distribution Status -
 *	Public Domain, Distribution Unlimited.
 */
#ifndef lint
static const char RCSid[] = "@@(#)$Header: /n/xoff/cvs/brlcad/proc-db/tea_nmg.c,v 11.12 2004/05/10 15:30:49 erikg Exp $ (ARL)";
#endif

/* Header files which are used for this example */

#ifdef HAVE_CONFIG_H
# include "config.h"
#endif



#include <stdio.h>		/* Direct the output to stdout */
#include "machine.h"		/* BRLCAD specific machine data types */
#include "externs.h"
#include "vmath.h"		/* BRLCAD Vector macros */
#include "nmg.h"
#include "nurb.h"		/* BRLCAD Spline data structures */
#include "raytrace.h"
#include "wdb.h"
#include "../librt/debug.h"	/* RT_G_DEBUG flag settings */

#include "./tea.h"		/* IEEE Data Structures */
#include "./ducks.h"		/* Teapot Vertex data */
#include "./patches.h"		/* Teapot Patch data */

extern dt ducks[DUCK_COUNT];		/* Vertex data of teapot */
extern pt patches[PATCH_COUNT];		/* Patch data of teapot */

char *Usage = "This program ordinarily generates a database on stdout.\n\
	Your terminal probably wouldn't like it.";

static struct shell *s;
static struct model *m;
static struct bn_tol tol;

void dump_patch(int (*patch)[4]);

struct rt_wdb *outfp;

int
main(int argc, char **argv) 			/* really has no arguments */
                       
{
	struct nmgregion *r;
	char * id_name = "BRL-CAD t-NURBS NMG Example";
	char * tea_name = "UtahTeapot";
	char * uplot_name = "teapot.pl";
	struct bu_list vhead;
	FILE *fp;
	int i;

        tol.magic = BN_TOL_MAGIC;
        tol.dist = 0.005;
        tol.dist_sq = tol.dist * tol.dist;
        tol.perp = 1e-6;
        tol.para = 1 - tol.perp;

	BU_LIST_INIT( &rt_g.rtg_vlfree );

	outfp = wdb_fopen( "tea_nmg.g" );

	rt_g.debug |= DEBUG_ALLRAYS;	/* Cause core dumps on rt_bomb(), but no extra messages */

	while ((i=getopt(argc, argv, "d")) != EOF) {
		switch (i) {
		case 'd' : rt_g.debug |= DEBUG_MEM | DEBUG_MEM_FULL; break;
		default	:
			(void)fprintf(stderr,
				"Usage: %s [-d] > database.g\n", *argv);
			return(-1);
		}
	}

	mk_id( outfp, id_name);

	m = nmg_mm();
	NMG_CK_MODEL( m );
	r = nmg_mrsv( m );
	NMG_CK_REGION( r );
	s = BU_LIST_FIRST( shell , &r->s_hd );
	NMG_CK_SHELL( s );

	/* Step through each patch and create a NMG TNURB face
	 * representing the patch then dump them out.
	 */

	for( i = 0; i < PATCH_COUNT; i++)
	{
		dump_patch( patches[i] );
	}

	/* Connect up the coincident vertexuses and edges */
	(void)nmg_model_fuse( m , &tol );

	/* write NMG to output file */
	(void)mk_nmg( outfp , tea_name , m );
	wdb_close(outfp);

	/* Make a vlist drawing of the model */
	BU_LIST_INIT( &vhead );
	nmg_m_to_vlist( &vhead , m , 0 );

	/* Make a UNIX plot file from this vlist */
	if( (fp=fopen( uplot_name , "w" )) == NULL )
	{
		bu_log( "Cannot open plot file: %s\n" , uplot_name );
		perror( "teapot_nmg" );
	}
	else
		rt_vlist_to_uplot( fp , &vhead );

	return(0);
}

/* IEEE patch number of the Bi-Cubic Bezier patch and convert it
 * to a B-Spline surface (Bezier surfaces are a subset of B-spline surfaces
 * and output it to a BRLCAD binary format.
 */
void
dump_patch(int (*patch)[4])
{
	struct vertex *verts[4];
	struct faceuse *fu;
	struct loopuse *lu;
	struct edgeuse *eu;
	int i,j, pt_type;
	fastf_t *mesh=NULL;
	fastf_t *ukv=NULL;
	fastf_t *vkv=NULL;

	/* U and V parametric Direction Spline parameters
	 * Cubic = order 4, 
	 * knot size is Control point + order = 8
	 * control point size is 4
	 * point size is 3
	 */

	for( i=0 ; i<4 ; i++ )
		verts[i] = (struct vertex *)NULL;

	fu = nmg_cface( s , verts , 4 );
	NMG_CK_FACEUSE( fu );

	for( i=0 ; i<4 ; i++ )
	{
		struct vertexuse *vu;
		vect_t uvw;
		point_t pnt;
		int k,j;

		switch( i )
		{
			default:
			case 0:
				VSET( uvw , 0.0 , 0.0 , 0.0 );
				k = 0;
				j = 0;
				break;
			case 1:
				VSET( uvw , 1.0 , 0.0 , 0.0 );
				k = 0;
				j = 3;
				break;
			case 2:
				VSET( uvw , 1.0 , 1.0 , 0.0 );
				k = 3;
				j = 3;
				break;
			case 3:
				VSET( uvw , 0.0 , 1.0 , 0.0 );
				k = 3;
				j = 0;
				break;
		}

		VSET( pnt ,
			ducks[patch[k][j]-1].x * 1000 ,
			ducks[patch[k][j]-1].y * 1000 ,
			ducks[patch[k][j]-1].z * 1000 );
		nmg_vertex_gv( verts[i] , pnt );

		for( BU_LIST_FOR( vu , vertexuse , &verts[i]->vu_hd ) )
			nmg_vertexuse_a_cnurb( vu , uvw );
	}

	pt_type = RT_NURB_MAKE_PT_TYPE(3, RT_NURB_PT_XYZ, 0); /* see nurb.h for details */

	nmg_face_g_snurb( fu , 4 , 4 , 8 , 8 , ukv , vkv , 4 , 4 , pt_type , mesh );

	NMG_CK_FACE( fu->f_p );
	NMG_CK_FACE_G_SNURB( fu->f_p->g.snurb_p );
	mesh = fu->f_p->g.snurb_p->ctl_points;

	/* Copy the control points */

	for( i = 0; i< 4; i++)
	for( j = 0; j < 4; j++)
	{
		*mesh = ducks[patch[i][j]-1].x * 1000;
		*(mesh+1) = ducks[patch[i][j]-1].y * 1000;
		*(mesh+2) = ducks[patch[i][j]-1].z * 1000;
		mesh += 3;
	}

	/* Both u and v knot vectors are [ 0 0 0 0 1 1 1 1] */
	ukv = fu->f_p->g.snurb_p->u.knots;
	vkv = fu->f_p->g.snurb_p->v.knots;
	/* set the knot vectors */
	for( i=0 ; i<4 ; i++ )
	{
		*(ukv+i) = 0.0;
		*(vkv+i) = 0.0;
	}
	for( i=0 ; i<4 ; i++ )
	{
		*(ukv+4+i) = 1.0;
		*(vkv+4+i) = 1.0;
	}

	/* set eu geometry */
	pt_type = RT_NURB_MAKE_PT_TYPE(2, RT_NURB_PT_UV,0); /* see nurb.h for details */
	lu = BU_LIST_FIRST( loopuse , &fu->lu_hd );
	NMG_CK_LOOPUSE( lu );
	for( BU_LIST_FOR( eu , edgeuse , &lu->down_hd ) )
	{
#if 0
		nmg_edge_g_cnurb( eu , 2 , 0 , (fastf_t *)NULL , 2 ,
			pt_type , (fastf_t *)NULL );
#else
		nmg_edge_g_cnurb_plinear( eu );
#endif
	}
	nmg_face_bb( fu->f_p , &tol );
}
@


11.12
log
@change conf.h to a wrapped config.h
@
text
@d18 1
a18 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/proc-db/tea_nmg.c,v 11.11 2004/04/05 05:45:58 morrison Exp $ (ARL)";
@


11.11
log
@merge of ansi-6-0-branch into head
@
text
@d18 1
a18 1
static const char RCSid[] = "@@(#)$Header$ (ARL)";
d23 5
a27 1
#include "conf.h"
@


11.10
log
@Restoration of entire source tree to Pre-Hartley state
@
text
@d18 1
a18 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/proc-db/tea_nmg.c,v 11.8 2001/05/17 20:05:56 morrison Exp $ (ARL)";
d49 1
a49 1
void dump_patch();
d54 2
a55 2
main(argc, argv) 			/* really has no arguments */
int argc; char *argv[];
d133 1
a133 2
dump_patch( patch )
pt patch;
@


11.10.2.1
log
@Initial ANSIfication
@
text
@d18 1
a18 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/proc-db/tea_nmg.c,v 11.10 2002/08/20 17:08:35 jra Exp $ (ARL)";
d49 1
a49 1
void dump_patch(int (*patch)[4]);
d54 2
a55 2
main(int argc, char **argv) 			/* really has no arguments */
                       
d133 2
a134 1
dump_patch(int (*patch)[4])
@


11.9
log
@Converted from K&R to ANSI C - RFH
@
text
@d49 1
a49 1
void dump_patch(int (*patch)[4]);
d54 2
a55 2
main(int argc, char **argv) 			/* really has no arguments */
                       
d133 2
a134 1
dump_patch(int (*patch)[4])
@


11.8
log
@rt_g.debug -> RT_G_DEBUG
@
text
@d18 1
a18 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/proc-db/tea_nmg.c,v 11.7 2000/08/25 02:28:50 mike Exp $ (ARL)";
d49 1
a49 1
void dump_patch();
d54 2
a55 2
main(argc, argv) 			/* really has no arguments */
int argc; char *argv[];
d133 1
a133 2
dump_patch( patch )
pt patch;
@


11.7
log
@
lint
@
text
@d18 1
a18 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/proc-db/tea_nmg.c,v 11.6 2000/07/12 21:59:08 mike Exp $ (ARL)";
d33 1
a33 1
#include "../librt/debug.h"	/* rt_g.debug flag settings */
@


11.6
log
@
Converted to use new version of LIBWDB.
@
text
@d18 1
a18 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/proc-db/tea_nmg.c,v 11.5 2000/07/10 23:38:22 mike Exp $ (ARL)";
d167 1
@


11.5
log
@
const RCSid
@
text
@d18 1
a18 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/proc-db/tea_nmg.c,v 11.4 2000/07/10 23:35:40 mike Exp $ (ARL)";
d51 3
d73 1
a73 4
	if (isatty(fileno(stdout))) {
		(void)fprintf(stderr, "%s: %s\n", *argv, Usage);
		return(-1);
	}
d87 1
a87 1
	mk_id( stdout, id_name);
d109 2
a110 2
	(void)mk_nmg( stdout , tea_name , m );
	fflush( stdout );
@


11.4
log
@
raytrace.h before wdb.h
Eliminated use of db.h
@
text
@d18 1
a18 1
static char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/proc-db/tea_nmg.c,v 11.3 2000/03/31 03:07:32 mike Exp $ (ARL)";
@


11.3
log
@
Changed RT_ to BU_ / BN_
@
text
@d18 1
a18 1
static char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/proc-db/tea_nmg.c,v 11.2 1996/07/15 18:16:22 jra Exp $ (ARL)";
a26 1
#include "db.h"			/* BRLCAD data base format */
@


11.2
log
@Minor Mods for IRIX 6.2
@
text
@d18 1
a18 1
static char RCSid[] = "@@(#)$Header: /m/cad/proc-db/RCS/tea_nmg.c,v 11.1 1995/01/04 10:06:21 mike Rel4_4 jra $ (ARL)";
d48 1
a48 1
static struct rt_tol tol;
d59 1
a59 1
	struct rt_list vhead;
d63 1
a63 1
        tol.magic = RT_TOL_MAGIC;
d69 1
a69 1
	RT_LIST_INIT( &rt_g.rtg_vlfree );
d94 1
a94 1
	s = RT_LIST_FIRST( shell , &r->s_hd );
d114 1
a114 1
	RT_LIST_INIT( &vhead );
d120 1
a120 1
		rt_log( "Cannot open plot file: %s\n" , uplot_name );
d196 1
a196 1
		for( RT_LIST_FOR( vu , vertexuse , &verts[i]->vu_hd ) )
d236 1
a236 1
	lu = RT_LIST_FIRST( loopuse , &fu->lu_hd );
d238 1
a238 1
	for( RT_LIST_FOR( eu , edgeuse , &lu->down_hd ) )
@


11.1
log
@Release_4.4
@
text
@d18 1
a18 1
static char RCSid[] = "@@(#)$Header: /m/cad/proc-db/RCS/tea_nmg.c,v 1.7 94/11/14 22:18:39 mike Exp $ (ARL)";
d50 2
d133 1
a133 1

@


1.7
log
@Irix 6
@
text
@d18 1
a18 1
static char RCSid[] = "@@(#)$Header: /m/cad/proc-db/RCS/tea_nmg.c,v 1.6 94/10/22 07:14:10 mike Exp Locker: mike $ (ARL)";
@


1.6
log
@Fixed it so XYZ and UV values of the cnurbs matched up!
Major bug!
@
text
@d18 1
a18 1
static char RCSid[] = "@@(#)$Header: /m/cad/proc-db/RCS/tea_nmg.c,v 1.5 94/10/22 06:18:18 mike Exp Locker: mike $ (ARL)";
a82 1
			break;
a237 3
		fastf_t *kv=NULL;
		fastf_t *points=NULL;

d239 2
a240 1
		nmg_edge_g_cnurb( eu , 2 , 0 , kv , 2 , pt_type , points );
@


1.5
log
@JRA changes
@
text
@d18 1
a18 1
static char RCSid[] = "@@(#)$Header: /m/cad/proc-db/RCS/tea_nmg.c,v 1.4 94/09/22 04:15:35 mike Exp Locker: jra $ (ARL)";
d174 2
a175 2
				k = 3;
				j = 0;
d184 2
a185 2
				k = 0;
				j = 3;
d189 4
a192 1
		VSET( pnt , ducks[patch[k][j]-1].x * 1000 , ducks[patch[k][j]-1].y * 1000 , ducks[patch[k][j]-1].z * 1000 );
d199 1
a199 1
	pt_type = RT_NURB_MAKE_PT_TYPE(3, 2,0); /* see nurb.h for details */
d234 1
d243 1
a243 1
		nmg_edge_g_cnurb( eu , 4 , 0 , kv , 2 , pt_type , points );
@


1.4
log
@Changed name of variable "pt" to avoid typedef "pt".
Sun compiler doesn't like this, neither do I.
@
text
@d18 1
a18 1
static char RCSid[] = "@@(#)$Header: /m/cad/proc-db/RCS/tea_nmg.c,v 1.3 94/09/16 23:38:20 mike Exp Locker: mike $ (ARL)";
d48 1
a57 1
	struct rt_tol tol;
d108 4
a124 3
	/* write NMG to output file */
	(void)mk_nmg( stdout , tea_name , m );

d244 1
@


1.3
log
@Added call to nmg_edge_g_cnurb_plinear()
@
text
@d18 1
a18 1
static char RCSid[] = "@@(#)$Header$ (ARL)";
d161 1
a161 1
		point_t pt;
d188 2
a189 2
		VSET( pt , ducks[patch[k][j]-1].x * 1000 , ducks[patch[k][j]-1].y * 1000 , ducks[patch[k][j]-1].z * 1000 );
		nmg_vertex_gv( verts[i] , pt );
@


1.2
log
@JRA's additions to plot the t-NURBS NMG, and to output it into the .g file.
@
text
@d4 1
a4 1
 * BRL-CAD NMG TNURB format. (Note that this has the closed bottom)
d6 10
d17 3
d53 1
a53 1
	char * id_name = "NMG TNURB Example";
d55 1
a55 1
	char * uplot_name = "teapot.upl";
d105 2
a106 1
/*	(void)nmg_model_fuse( m , &tol );	*/
d108 1
a108 1
	/* Make a vlist for the model */
d237 1
d239 3
@


1.1
log
@Initial revision
@
text
@d42 4
d48 8
d61 2
d92 17
a108 1
	(void)mk_nmg( stdout , "teapot" , m );
@
