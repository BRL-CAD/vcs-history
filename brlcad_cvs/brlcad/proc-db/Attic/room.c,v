head	11.17;
access;
symbols
	ansi-20040405-merged:11.13.2.2
	postmerge-20040405-ansi:11.15
	premerge-20040404-ansi:11.14
	postmerge-autoconf:11.14
	autoconf-freeze:11.13.10.2
	premerge-autoconf:11.14
	postmerge-20040315-windows:11.14
	premerge-20040315-windows:11.14
	windows-20040315-freeze:11.13.4.1
	autoconf-20031203:11.13
	autoconf-20031202:11.13
	autoconf-branch:11.13.0.10
	phong-branch:11.13.0.8
	photonmap-branch:11.13.0.6
	rel-6-1-DP:11.13
	windows-branch:11.13.0.4
	rel-6-0-2:11.11
	ansi-branch:11.13.0.2
	rel-6-0-1-branch:11.11.0.2
	hartley-6-0-post:11.12
	hartley-6-0-pre:11.11
	rel-6-0-1:11.11
	rel-6-0:11.10
	rel-5-4:11.4
	offsite-5-3-pre:11.9
	rel-5-3:11.4
	rel-5-2:11.4
	rel-5-1-branch:11.4.0.2
	rel-5-1:11.4
	rel-5-0:11.1
	rel-5-0-beta:11.1
	rel-4-5:11.1
	ctj-4-5-post:11.1
	ctj-4-5-pre:11.1
	rel-4-4:11.1
	rel-4-0:10.1
	rel-3-5:9.1
	rel-3-0:8.1;
locks; strict;
comment	@ * @;


11.17
date	2004.05.21.17.33.46;	author morrison;	state dead;
branches;
next	11.16;

11.16
date	2004.05.10.15.30.49;	author erikg;	state Exp;
branches;
next	11.15;

11.15
date	2004.04.05.05.45.58;	author morrison;	state Exp;
branches;
next	11.14;

11.14
date	2004.02.02.17.39.37;	author morrison;	state Exp;
branches;
next	11.13;

11.13
date	2002.08.20.17.08.34;	author jra;	state Exp;
branches
	11.13.2.1
	11.13.4.1
	11.13.10.1;
next	11.12;

11.12
date	2002.08.15.20.55.46;	author hartley;	state Exp;
branches;
next	11.11;

11.11
date	2002.05.17.12.42.24;	author morrison;	state Exp;
branches;
next	11.10;

11.10
date	2001.03.31.01.57.28;	author morrison;	state Exp;
branches;
next	11.9;

11.9
date	2000.08.24.04.40.25;	author mike;	state Exp;
branches;
next	11.8;

11.8
date	2000.07.12.21.59.07;	author mike;	state Exp;
branches;
next	11.7;

11.7
date	2000.07.12.03.44.53;	author mike;	state Exp;
branches;
next	11.6;

11.6
date	2000.07.10.23.38.22;	author mike;	state Exp;
branches;
next	11.5;

11.5
date	2000.07.10.23.35.39;	author mike;	state Exp;
branches;
next	11.4;

11.4
date	2000.03.31.03.07.31;	author mike;	state Exp;
branches;
next	11.3;

11.3
date	2000.01.31.15.27.43;	author jra;	state Exp;
branches;
next	11.2;

11.2
date	99.10.30.03.06.26;	author butler;	state Exp;
branches;
next	11.1;

11.1
date	95.01.04.10.06.18;	author mike;	state Rel4_4;
branches;
next	10.3;

10.3
date	94.10.21.20.02.22;	author mike;	state Exp;
branches;
next	10.2;

10.2
date	94.08.23.18.51.49;	author gdurf;	state Exp;
branches;
next	10.1;

10.1
date	91.10.12.06.44.42;	author mike;	state Rel4_0;
branches;
next	9.4;

9.4
date	90.12.08.06.11.13;	author mike;	state Exp;
branches;
next	9.3;

9.3
date	90.11.01.05.15.17;	author mike;	state Exp;
branches;
next	9.2;

9.2
date	90.10.16.11.18.24;	author mike;	state Exp;
branches;
next	9.1;

9.1
date	89.05.19.06.04.52;	author mike;	state Rel3_5;
branches;
next	8.2;

8.2
date	89.04.30.21.38.30;	author mike;	state Exp;
branches;
next	8.1;

8.1
date	88.10.05.00.38.26;	author mike;	state Rel3_0;
branches;
next	1.3;

1.3
date	88.08.20.07.26.42;	author phil;	state Exp;
branches;
next	1.2;

1.2
date	88.05.15.23.00.19;	author mike;	state Exp;
branches;
next	1.1;

1.1
date	87.12.24.06.56.32;	author mike;	state Exp;
branches;
next	;

11.13.2.1
date	2002.09.19.18.02.13;	author morrison;	state Exp;
branches;
next	11.13.2.2;

11.13.2.2
date	2004.03.17.21.22.55;	author morrison;	state Exp;
branches;
next	;

11.13.4.1
date	2004.03.10.15.06.37;	author morrison;	state Exp;
branches;
next	;

11.13.10.1
date	2004.02.12.19.50.51;	author erikg;	state Exp;
branches;
next	11.13.10.2;

11.13.10.2
date	2004.03.15.14.08.05;	author erikg;	state Exp;
branches;
next	;


desc
@Program to procedurally generate a room
@


11.17
log
@moved to src/proc-db/
@
text
@/*
 *			R O O M . C
 * 
 *  Program to generate procedural rooms.
 *
 *  Author -
 *	Michael John Muuss
 *  
 *  Source -
 *	SECAD/VLD Computing Consortium, Bldg 394
 *	The U. S. Army Ballistic Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5066
 *  
 *  Copyright 
 *	This software is Copyright (C) 1988-2004 by the United States Army.
 *	All rights reserved.
 */
#ifndef lint
static const char RCSid[] = "@@(#)$Header: /n/xoff/cvs/brlcad/proc-db/room.c,v 11.16 2004/05/10 15:30:49 erikg Exp $ (BRL)";
#endif

#ifdef HAVE_CONFIG_H
# include "config.h"
#endif



#include <stdio.h>
#include <math.h>
#include "machine.h"
#include "vmath.h"
#include "externs.h"
#include "bu.h"
#include "bn.h"
#include "vmath.h"
#include "raytrace.h"
#include "wdb.h"


#define HEIGHT	4000		/* 4 meter high walls */

#define EAST	1
#define NORTH	2
#define WEST	4
#define	SOUTH	8

mat_t	identity;
double degtorad = 0.0174532925199433;
double sin60;

struct mtab {
	char	mt_name[64];
	char	mt_param[96];
} mtab[] = {
	{"plastic",	""},
	{"glass",	""},
	{"plastic",	""},
	{"mirror",	""},
	{"plastic",	""},
	{"testmap",	""},
	{"plastic",	""}
};
int	nmtab = sizeof(mtab)/sizeof(struct mtab);

#define PICK_MAT	((rand() % nmtab) )

void make_room(char *rname, fastf_t *imin, fastf_t *imax, fastf_t *thickness, struct wmember *headp);
void make_walls(char *rname, fastf_t *imin, fastf_t *imax, fastf_t *thickness, int bits, struct wmember *headp);
void make_pillar(char *prefix, int ix, int iy, fastf_t *center, fastf_t *lwh, struct wmember *headp);
void make_carpet(char *rname, fastf_t *min, fastf_t *max, char *file, struct wmember *headp);
extern void get_rgb( unsigned char *rgb );

struct rt_wdb	*outfp;

int
main(int argc, char **argv)
{
	vect_t	norm;
	unsigned char	rgb[3];
	int	ix;
	double	x;
	double	size;
	int	quant;
	struct wmember head;
	vect_t	bmin, bmax, bthick;
	vect_t	r1min, r1max, r1thick;
	vect_t	lwh;		/* length, width, height */
	vect_t	pbase;

	BU_LIST_INIT( &head.l );

	MAT_IDN( identity );
	sin60 = sin(60.0 * 3.14159265358979323846264 / 180.0);

	outfp = wdb_fopen("room.g");
	mk_id( outfp, "Procedural Rooms" );

	/* Create the building */
	VSET( bmin, 0, 0, 0 );
	VSET( bmax, 80000, 60000, HEIGHT );
	VSET( bthick, 100, 100, 100 );
	make_room( "bldg", bmin, bmax, bthick, &head );

	/* Create the first room */
	VSET( r1thick, 100, 100, 0 );
	VMOVE( r1min, bmin );
	VSET( r1max, 40000, 10000, HEIGHT );
	VADD2( r1max, r1min, r1max );
	make_walls( "rm1", r1min, r1max, r1thick, NORTH|EAST, &head );
	make_carpet( "rm1carpet", r1min, r1max, "carpet.pix", &head );

	/* Create the golden earth */
	VSET( norm, 0, 0, 1 );
	mk_half( outfp, "plane", norm, -bthick[Z]-10.0 );
	rgb[0] = 240;	/* gold/brown */
	rgb[1] = 180;
	rgb[2] = 64;
	mk_region1( outfp, "plane.r", "plane", NULL, NULL, rgb );
	(void)mk_addmember( "plane.r", &head.l, NULL, WMOP_UNION );

	/* Create the display pillars */
	size = 4000;	/* separation between centers */
	quant = 5;	/* pairs */
	VSET( lwh, 400, 400, 1000 );
	for( ix=quant-1; ix>=0; ix-- )  {
		x = 10000 + ix*size;
		VSET( pbase, x, 10000*.25, r1min[Z] );
		make_pillar( "Pil", ix, 0, pbase, lwh, &head );
		VSET( pbase, x, 10000*.75, r1min[Z] );
		make_pillar( "Pil", ix, 1, pbase, lwh, &head );
	}

#ifdef never
	/* Create some light */
	white[0] = white[1] = white[2] = 255;
	base = size*(quant/2+1);
	VSET( aim, 0, 0, 0 );
	VSET( pos, base, base, minheight+maxheight*bn_rand0to1(randp) );
	do_light( "l1", pos, aim, 1, 100.0, white, &head );
	VSET( pos, -base, base, minheight+maxheight*bn_rand0to1(randp) );
	do_light( "l2", pos, aim, 1, 100.0, white, &head );
	VSET( pos, -base, -base, minheight+maxheight*bn_rand0to1(randp) );
	do_light( "l3", pos, aim, 1, 100.0, white, &head );
	VSET( pos, base, -base, minheight+maxheight*bn_rand0to1(randp) );
	do_light( "l4", pos, aim, 1, 100.0, white, &head );
#endif

	/* Build the overall combination */
	mk_lfcomb( outfp, "room", &head, 0 );

	return 0;
}

void
make_room(char *rname, fastf_t *imin, fastf_t *imax, fastf_t *thickness, struct wmember *headp)
    	       
      	     		/* Interior RPP min point */
      	     
      	          
                      
{
	struct wmember head;
	char	name[32];
	vect_t	omin;
	vect_t	omax;

	BU_LIST_INIT( &head.l );

	VSUB2( omin, imin, thickness );
	VADD2( omax, imax, thickness );

	sprintf( name, "o%s", rname );
	mk_rpp( outfp, name, omin, omax );
	(void)mk_addmember( name, &head.l, NULL, WMOP_UNION );

	sprintf( name, "i%s", rname );
	mk_rpp( outfp, name, imin, imax );
	mk_addmember( name, &head.l, NULL, WMOP_SUBTRACT );

	mk_lfcomb( outfp, rname, &head, 1 );
	(void)mk_addmember( rname, &(headp->l), NULL, WMOP_UNION );
}

void
make_walls(char *rname, fastf_t *imin, fastf_t *imax, fastf_t *thickness, int bits, struct wmember *headp)
    	       
      	     		/* Interior RPP min point */
      	     
      	          
   	     
                      
{
	struct wmember head;
	char	name[32];
	vect_t	omin, omax;	/* outer dimensions */
	vect_t	wmin, wmax;
	int	mask;

	BU_LIST_INIT( &head.l );

	/* thickness[Z] = 0; */

	/*
	 *  Set exterior dimensions to interior dimensions.
	 *  Then, thicken them as necessary due to presence of
	 *  exterior walls.
	 *  It may be useful to return the exterior min,max.
	 */
	VMOVE( omin, imin );
	VMOVE( omax, imax );
	if( bits & EAST )
		omax[X] += thickness[X];
	if( bits & WEST )
		omin[X] -= thickness[X];
	if( bits & NORTH )
		omax[Y] += thickness[Y];
	if( bits & SOUTH )
		omin[Y] -= thickness[Y];

	for( mask=8; mask > 0; mask >>= 1 )  {
		if( (bits & mask) == 0 )  continue;

		VMOVE( wmin, omin );
		VMOVE( wmax, omax );

		switch( mask )  {
		case SOUTH:
			/* South (-Y) wall */
			sprintf( name, "S%s", rname );
			wmax[Y] = imin[Y];
			break;
		case WEST:
			/* West (-X) wall */
			sprintf( name, "W%s", rname );
			wmax[X] = imin[X];
			break;
		case NORTH:
			/* North (+Y) wall */
			sprintf( name, "N%s", rname );
			wmin[Y] = imax[Y];
			break;
		case EAST:
			/* East (+X) wall */
			sprintf( name, "E%s", rname );
			wmin[X] = imax[X];
			break;
		}
		mk_rpp( outfp, name, wmin, wmax );
		(void)mk_addmember( name, &head.l, NULL, WMOP_UNION );
	}

	mk_lfcomb( outfp, rname, &head, 1 );
	(void)mk_addmember( rname, &(headp->l), NULL, WMOP_UNION );
}

void
make_pillar(char *prefix, int ix, int iy, fastf_t *center, fastf_t *lwh, struct wmember *headp)
    	        
   	   
   	   
      	       			/* center of base */
      	    
                      
{
	vect_t	min, max;
	unsigned char	rgb[4];		/* needs all 4 */
	char	pilname[32], rname[32], sname[32], oname[32];
	int	i;
	struct wmember head;
	struct wmember *wp;

	BU_LIST_INIT( &head.l );

	sprintf( pilname, "%s%d,%d", prefix, ix, iy );
	sprintf( rname, "%s.r", pilname );
	sprintf( sname, "%s.s", pilname );
	sprintf( oname, "Obj%d,%d", ix, iy );

	VMOVE( min, center );
	min[X] -= lwh[X];
	min[Y] -= lwh[Y];
	VADD2( max, center, lwh );
	mk_rpp( outfp, sname, min, max );

	/* Needs to be in a region, with color!  */
	get_rgb(rgb);
	i = PICK_MAT;
	mk_region1( outfp, rname, sname,
		mtab[i].mt_name, mtab[i].mt_param, rgb );

	(void)mk_addmember( rname, &head.l, NULL, WMOP_UNION );
	wp = mk_addmember( oname, &head.l, NULL, WMOP_UNION );
	MAT_DELTAS( wp->wm_mat, center[X], center[Y], center[Z]+lwh[Z] );
	mk_lfcomb( outfp, pilname, &head, 0 );

	(void)mk_addmember( pilname, &(headp->l), NULL, WMOP_UNION );
}

void
make_carpet(char *rname, fastf_t *min, fastf_t *max, char *file, struct wmember *headp)
{
	char	sname[32];
	char	args[128];
	vect_t	cmin, cmax;

	VMOVE( cmin, min );
	VMOVE( cmax, max );
	cmax[Z] = cmin[Z] + 10;		/* not very plush carpet */
	min[Z] = cmax[Z];		/* raise the caller's floor */

	sprintf( sname, "%s.s", rname );
	sprintf( args, "texture file=%s;plastic", file );
	mk_rpp( outfp, sname, cmin, cmax );
	mk_region1( outfp, rname, sname,
		"stack", args,
		(unsigned char *)0 );

	(void)mk_addmember( rname, &(headp->l), NULL, WMOP_UNION );
}
@


11.16
log
@change conf.h to a wrapped config.h
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/proc-db/room.c,v 11.15 2004/04/05 05:45:58 morrison Exp $ (BRL)";
@


11.15
log
@merge of ansi-6-0-branch into head
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
d22 5
a26 1
#include "conf.h"
@


11.14
log
@update copyright to include span through 2003
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/proc-db/room.c,v 11.13 2002/08/20 17:08:34 jra Exp $ (BRL)";
d63 4
a66 1
void	make_room(), make_walls(), make_pillar(), make_carpet();
d72 1
a72 2
main(argc, argv)
char	**argv;
d151 6
a156 6
make_room( rname, imin, imax, thickness, headp )
char	*rname;
vect_t	imin;		/* Interior RPP min point */
vect_t	imax;
vect_t	thickness;
struct wmember *headp;
d181 7
a187 7
make_walls( rname, imin, imax, thickness, bits, headp )
char	*rname;
vect_t	imin;		/* Interior RPP min point */
vect_t	imax;
vect_t	thickness;
int	bits;
struct wmember *headp;
d253 7
a259 7
make_pillar( prefix, ix, iy, center, lwh, headp )
char	*prefix;
int	ix;
int	iy;
vect_t	center;			/* center of base */
vect_t	lwh;
struct wmember *headp;
d296 1
a296 5
make_carpet( rname, min, max, file, headp )
char	*rname;
vect_t	min, max;
char	*file;
struct wmember *headp;
@


11.13
log
@Restoration of entire source tree to Pre-Hartley state
@
text
@d15 1
a15 1
 *	This software is Copyright (C) 1988 by the United States Army.
d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/proc-db/room.c,v 11.11 2002/05/17 12:42:24 morrison Exp $ (BRL)";
@


11.13.4.1
log
@merge in updates from HEAD
@
text
@d15 1
a15 1
 *	This software is Copyright (C) 1988-2004 by the United States Army.
d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /n/cad/c/CVS/brlcad/proc-db/room.c,v 11.14 2004/02/02 17:39:37 morrison Exp $ (BRL)";
@


11.13.10.1
log
@merge from HEAD
@
text
@d15 1
a15 1
 *	This software is Copyright (C) 1988-2004 by the United States Army.
d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/proc-db/room.c,v 11.14 2004/02/02 17:39:37 morrison Exp $ (BRL)";
@


11.13.10.2
log
@merge from head
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/proc-db/room.c,v 11.13.10.1 2004/02/12 19:50:51 erikg Exp $ (BRL)";
@


11.13.2.1
log
@Initial ANSIfication
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/proc-db/room.c,v 11.13 2002/08/20 17:08:34 jra Exp $ (BRL)";
d63 1
a63 1
void	make_room(char *rname, fastf_t *imin, fastf_t *imax, fastf_t *thickness, struct wmember *headp), make_walls(char *rname, fastf_t *imin, fastf_t *imax, fastf_t *thickness, int bits, struct wmember *headp), make_pillar(char *prefix, int ix, int iy, fastf_t *center, fastf_t *lwh, struct wmember *headp), make_carpet(char *rname, fastf_t *min, fastf_t *max, char *file, struct wmember *headp);
d69 2
a70 1
main(int argc, char **argv)
d149 6
a154 6
make_room(char *rname, fastf_t *imin, fastf_t *imax, fastf_t *thickness, struct wmember *headp)
    	       
      	     		/* Interior RPP min point */
      	     
      	          
                      
d179 7
a185 7
make_walls(char *rname, fastf_t *imin, fastf_t *imax, fastf_t *thickness, int bits, struct wmember *headp)
    	       
      	     		/* Interior RPP min point */
      	     
      	          
   	     
                      
d251 7
a257 7
make_pillar(char *prefix, int ix, int iy, fastf_t *center, fastf_t *lwh, struct wmember *headp)
    	        
   	   
   	   
      	       			/* center of base */
      	    
                      
d294 5
a298 1
make_carpet(char *rname, fastf_t *min, fastf_t *max, char *file, struct wmember *headp)
@


11.13.2.2
log
@sync branch with HEAD
@
text
@d15 1
a15 1
 *	This software is Copyright (C) 1988-2004 by the United States Army.
d19 1
a19 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
@


11.12
log
@Converted from K&R to ANSI C - RFH
@
text
@d63 1
a63 1
void	make_room(char *rname, fastf_t *imin, fastf_t *imax, fastf_t *thickness, struct wmember *headp), make_walls(char *rname, fastf_t *imin, fastf_t *imax, fastf_t *thickness, int bits, struct wmember *headp), make_pillar(char *prefix, int ix, int iy, fastf_t *center, fastf_t *lwh, struct wmember *headp), make_carpet(char *rname, fastf_t *min, fastf_t *max, char *file, struct wmember *headp);
d69 2
a70 1
main(int argc, char **argv)
d149 6
a154 6
make_room(char *rname, fastf_t *imin, fastf_t *imax, fastf_t *thickness, struct wmember *headp)
    	       
      	     		/* Interior RPP min point */
      	     
      	          
                      
d179 7
a185 7
make_walls(char *rname, fastf_t *imin, fastf_t *imax, fastf_t *thickness, int bits, struct wmember *headp)
    	       
      	     		/* Interior RPP min point */
      	     
      	          
   	     
                      
d251 7
a257 7
make_pillar(char *prefix, int ix, int iy, fastf_t *center, fastf_t *lwh, struct wmember *headp)
    	        
   	   
   	   
      	       			/* center of base */
      	    
                      
d294 5
a298 1
make_carpet(char *rname, fastf_t *min, fastf_t *max, char *file, struct wmember *headp)
@


11.11
log
@added matrix parameter to mk_addmember()
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/proc-db/room.c,v 11.10 2001/03/31 01:57:28 morrison Exp $ (BRL)";
d63 1
a63 1
void	make_room(), make_walls(), make_pillar(), make_carpet();
d69 1
a69 2
main(argc, argv)
char	**argv;
d148 6
a153 6
make_room( rname, imin, imax, thickness, headp )
char	*rname;
vect_t	imin;		/* Interior RPP min point */
vect_t	imax;
vect_t	thickness;
struct wmember *headp;
d178 7
a184 7
make_walls( rname, imin, imax, thickness, bits, headp )
char	*rname;
vect_t	imin;		/* Interior RPP min point */
vect_t	imax;
vect_t	thickness;
int	bits;
struct wmember *headp;
d250 7
a256 7
make_pillar( prefix, ix, iy, center, lwh, headp )
char	*prefix;
int	ix;
int	iy;
vect_t	center;			/* center of base */
vect_t	lwh;
struct wmember *headp;
d293 1
a293 5
make_carpet( rname, min, max, file, headp )
char	*rname;
vect_t	min, max;
char	*file;
struct wmember *headp;
@


11.10
log
@Deprecated bn_mat_idn() and bn_mat_zero(), updated calls to h/vmath.h's MAT_IDN() and MAT_ZERO() performance improved macros.
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/proc-db/room.c,v 11.9 2000/08/24 04:40:25 mike Exp $ (BRL)";
d113 1
a113 1
	(void)mk_addmember( "plane.r", &head.l, WMOP_UNION );
d168 1
a168 1
	(void)mk_addmember( name, &head.l, WMOP_UNION );
d172 1
a172 1
	mk_addmember( name, &head.l, WMOP_SUBTRACT );
d175 1
a175 1
	(void)mk_addmember( rname, &(headp->l), WMOP_UNION );
d243 1
a243 1
		(void)mk_addmember( name, &head.l, WMOP_UNION );
d247 1
a247 1
	(void)mk_addmember( rname, &(headp->l), WMOP_UNION );
d285 2
a286 2
	(void)mk_addmember( rname, &head.l, WMOP_UNION );
	wp = mk_addmember( oname, &head.l, WMOP_UNION );
d290 1
a290 1
	(void)mk_addmember( pilname, &(headp->l), WMOP_UNION );
d316 1
a316 1
	(void)mk_addmember( rname, &(headp->l), WMOP_UNION );
@


11.9
log
@
mk_addmember
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/proc-db/room.c,v 11.8 2000/07/12 21:59:07 mike Exp $ (BRL)";
d86 1
a86 1
	bn_mat_idn( identity );
@


11.8
log
@
Converted to use new version of LIBWDB.
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/proc-db/room.c,v 11.7 2000/07/12 03:44:53 mike Exp $ (BRL)";
d113 1
a113 1
	(void)mk_addmember( "plane.r", &head, WMOP_UNION );
d168 1
a168 1
	(void)mk_addmember( name, &head, WMOP_UNION );
d172 1
a172 1
	mk_addmember( name, &head, WMOP_SUBTRACT );
d175 1
a175 1
	(void)mk_addmember( rname, headp, WMOP_UNION );
d243 1
a243 1
		(void)mk_addmember( name, &head, WMOP_UNION );
d247 1
a247 1
	(void)mk_addmember( rname, headp, WMOP_UNION );
d285 2
a286 2
	(void)mk_addmember( rname, &head, WMOP_UNION );
	wp = mk_addmember( oname, &head, WMOP_UNION );
d290 1
a290 1
	(void)mk_addmember( pilname, headp, WMOP_UNION );
d316 1
a316 1
	(void)mk_addmember( rname, headp, WMOP_UNION );
@


11.7
log
@
Converted to new way, using mk_lfcomb().
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/proc-db/room.c,v 11.6 2000/07/10 23:38:22 mike Exp $ (BRL)";
d51 7
a57 7
	"plastic",	"",
	"glass",	"",
	"plastic",	"",
	"mirror",	"",
	"plastic",	"",
	"testmap",	"",
	"plastic",	""
d64 1
d66 3
d89 2
a90 1
	mk_id( stdout, "Procedural Rooms" );
d108 1
a108 1
	mk_half( stdout, "plane", norm, -bthick[Z]-10.0 );
d112 1
a112 1
	mk_region1( stdout, "plane.r", "plane", NULL, NULL, rgb );
d143 1
a143 1
	mk_lfcomb( stdout, "room", &head, 0 );
d167 1
a167 1
	mk_rpp( stdout, name, omin, omax );
d171 1
a171 1
	mk_rpp( stdout, name, imin, imax );
d174 1
a174 1
	mk_lfcomb( stdout, rname, &head, 1 );
d242 1
a242 1
		mk_rpp( stdout, name, wmin, wmax );
d246 1
a246 1
	mk_lfcomb( stdout, rname, &head, 1 );
d277 1
a277 1
	mk_rpp( stdout, sname, min, max );
d282 1
a282 1
	mk_region1( stdout, rname, sname,
d288 1
a288 1
	mk_lfcomb( stdout, pilname, &head, 0 );
d311 2
a312 2
	mk_rpp( stdout, sname, cmin, cmax );
	mk_region1( stdout, rname, sname,
@


11.6
log
@
const RCSid
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/proc-db/room.c,v 11.5 2000/07/10 23:35:39 mike Exp $ (BRL)";
d107 1
a107 2
	mk_comb( stdout, "plane.r", 1, 1, "", "", rgb, 0 );
	mk_memb( stdout, "plane", identity, WMOP_UNION );
d277 2
a278 3
	mk_comb( stdout, rname, 1, 1,
		mtab[i].mt_name, mtab[i].mt_param, rgb, 0 );
	mk_memb( stdout, sname, identity, WMOP_UNION );
d307 1
a307 1
	mk_comb( stdout, rname, 1, 1,
d309 1
a309 2
		(unsigned char *)0, 0 );
	mk_memb( stdout, sname, identity, WMOP_UNION );
@


11.5
log
@
raytrace.h before wdb.h
Eliminated use of db.h
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/proc-db/room.c,v 11.4 2000/03/31 03:07:31 mike Exp $ (BRL)";
@


11.4
log
@
Changed RT_ to BU_ / BN_
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/proc-db/room.c,v 11.3 2000/01/31 15:27:43 jra Exp $ (BRL)";
a30 1
#include "db.h"
d32 1
a32 1
#include "rtlist.h"
d108 1
a108 1
	mk_memb( stdout, "plane", identity, UNION );
d280 1
a280 1
	mk_memb( stdout, sname, identity, UNION );
d312 1
a312 1
	mk_memb( stdout, sname, identity, UNION );
@


11.3
log
@Eliminated some unused variables
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/proc-db/room.c,v 11.2 1999/10/30 03:06:26 butler Exp $ (BRL)";
d81 1
a81 1
	RT_LIST_INIT( &head.l );
d83 1
a83 1
	mat_idn( identity );
d158 1
a158 1
	RT_LIST_INIT( &head.l );
d190 1
a190 1
	RT_LIST_INIT( &head.l );
d263 1
a263 1
	RT_LIST_INIT( &head.l );
@


11.2
log
@Moved mathtab/rand_half from rt into libbn
Expanded structparse to include description and default
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/proc-db/room.c,v 11.1 1995/01/04 10:06:18 mike Rel4_4 $ (BRL)";
d71 2
a72 2
	int	ix, iy;
	double	x, y;
a73 1
	double	base;
a74 5
	char	name[64];
	vect_t	pos, aim;
	char	white[3];
	int	n;
	double	height, maxheight, minheight;
a79 1
	float	*randp;
@


11.1
log
@Release_4.4
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/proc-db/RCS/room.c,v 10.3 94/10/21 20:02:22 mike Exp $ (BRL)";
d27 4
a35 1
#include "../rt/mathtab.h"
d136 1
a136 1
	VSET( pos, base, base, minheight+maxheight*rand0to1(randp) );
d138 1
a138 1
	VSET( pos, -base, base, minheight+maxheight*rand0to1(randp) );
d140 1
a140 1
	VSET( pos, -base, -base, minheight+maxheight*rand0to1(randp) );
d142 1
a142 1
	VSET( pos, base, -base, minheight+maxheight*rand0to1(randp) );
@


10.3
log
@Match prototypes of unsigned char rgb
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/proc-db/RCS/room.c,v 10.2 94/08/23 18:51:49 gdurf Exp Locker: mike $ (BRL)";
@


10.2
log
@Added include of conf.h
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/proc-db/RCS/room.c,v 10.1 1991/10/12 06:44:42 mike Rel4_0 gdurf $ (BRL)";
d67 1
a67 1
	char	rgb[3];
d261 1
a261 1
	char	rgb[4];		/* needs all 4 */
d316 1
a316 1
		(char *)0, 0 );
@


10.1
log
@Release_4.0
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/proc-db/RCS/room.c,v 9.4 90/12/08 06:11:13 mike Exp $ (BRL)";
d22 2
d145 2
@


9.4
log
@lint
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/proc-db/RCS/room.c,v 9.3 90/11/01 05:15:17 mike Exp $ (BRL)";
@


9.3
log
@Changed calling sequence to mk_addmember().  Added boolean op as 3rd arg.
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/proc-db/RCS/room.c,v 9.2 90/10/16 11:18:24 mike Exp $ (BRL)";
d171 1
a171 1
	mk_lfcomb( stdout, rname, 1, &head );
d243 1
a243 1
	mk_lfcomb( stdout, rname, 1, &head );
@


9.2
log
@Changed to using rtlist.h
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/proc-db/RCS/room.c,v 9.1 89/05/19 06:04:52 mike Rel3_5 $ (BRL)";
d112 1
a112 1
	(void)mk_addmember( "plane.r", &head );
d165 1
a165 1
	(void)mk_addmember( name, &head );
d169 1
a169 1
	mk_addmember( name, &head )->wm_op = SUBTRACT;
d172 1
a172 1
	(void)mk_addmember( rname, headp );
d240 1
a240 1
		(void)mk_addmember( name, &head );
d244 1
a244 1
	(void)mk_addmember( rname, headp );
d283 2
a284 2
	(void)mk_addmember( rname, &head );
	wp = mk_addmember( oname, &head );
d288 1
a288 1
	(void)mk_addmember( pilname, headp );
d315 1
a315 1
	(void)mk_addmember( rname, headp );
@


9.1
log
@Release_3.5
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: room.c,v 8.2 89/04/30 21:38:30 mike Exp $ (BRL)";
d27 1
d83 1
a83 1
	head.wm_forw = head.wm_back = &head;
d158 1
a158 1
	head.wm_forw = head.wm_back = &head;
d190 1
a190 1
	head.wm_forw = head.wm_back = &head;
d263 1
a263 1
	head.wm_forw = head.wm_back = &head;
@


8.2
log
@New rand() needs table pointer arg.
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: room.c,v 8.1 88/10/05 00:38:26 mike Locked $ (BRL)";
@


8.1
log
@Release_3.0
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: room.c,v 1.3 88/08/20 07:26:42 phil Exp $ (BRL)";
d80 1
d130 1
a130 1
	VSET( pos, base, base, minheight+maxheight*rand0to1() );
d132 1
a132 1
	VSET( pos, -base, base, minheight+maxheight*rand0to1() );
d134 1
a134 1
	VSET( pos, -base, -base, minheight+maxheight*rand0to1() );
d136 1
a136 1
	VSET( pos, base, -base, minheight+maxheight*rand0to1() );
@


1.3
log
@libwdb changes
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: room.c,v 1.2 88/05/15 23:00:19 phil Locked $ (BRL)";
@


1.2
log
@lint fixes
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: room.c,v 1.1 87/12/24 06:56:32 mike Locked $ (BRL)";
d104 1
a104 1
	mk_half( stdout, "plane", -bthick[Z]-10.0, norm );
d108 1
a108 1
	mk_mcomb( stdout, "plane.r", 1, 1, "", "", 1, rgb );
d140 1
a140 1
	mk_lfcomb( stdout, "room", 0, &head );
d277 2
a278 2
	mk_mcomb( stdout, rname, 1, 1,
		mtab[i].mt_name, mtab[i].mt_param, 1, rgb );
d284 1
a284 1
	mk_lfcomb( stdout, pilname, 0, &head );
d308 1
a308 1
	mk_mcomb( stdout, rname, 1, 1,
d310 1
a310 1
		0, (char *)0 );
@


1.1
log
@Initial revision
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: clutter.c,v 1.7 87/10/30 15:34:11 mike Exp $ (BRL)";
d58 2
d143 1
d173 1
d245 1
d289 1
@
