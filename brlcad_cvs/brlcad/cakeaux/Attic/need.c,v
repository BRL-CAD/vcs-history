head	11.2;
access;
symbols
	ansi-20040405-merged:11.1
	postmerge-20040405-ansi:11.1
	premerge-20040404-ansi:11.1
	postmerge-autoconf:11.1
	autoconf-freeze:11.1
	premerge-autoconf:11.1
	ansi-20040316-freeze:11.1
	postmerge-20040315-windows:11.1
	premerge-20040315-windows:11.1
	windows-20040315-freeze:11.1
	autoconf-20031203:11.1
	autoconf-20031202:11.1
	autoconf-branch:11.1.0.14
	phong-branch:11.1.0.12
	photonmap-branch:11.1.0.10
	rel-6-1-DP:11.1
	windows-branch:11.1.0.8
	rel-6-0-2:11.1
	ansi-branch:11.1.0.6
	rel-6-0-1-branch:11.1.0.4
	hartley-6-0-post:11.1
	hartley-6-0-pre:11.1
	rel-6-0-1:11.1
	rel-6-0:11.1
	rel-5-4:11.1
	offsite-5-3-pre:11.1
	rel-5-3:11.1
	rel-5-2:11.1
	rel-5-1-branch:11.1.0.2
	rel-5-1:11.1
	rel-5-0:11.1
	rel-5-0-beta:11.1
	rel-4-5:11.1
	ctj-4-5-post:11.1
	ctj-4-5-pre:11.1
	rel-4-4:1.2
	rel-4-0:1.2;
locks; strict;
comment	@ * @;


11.2
date	2004.05.19.15.45.58;	author morrison;	state dead;
branches;
next	11.1;

11.1
date	95.01.05.06.03.14;	author mike;	state Rel4_4;
branches;
next	1.2;

1.2
date	91.07.03.22.28.37;	author mike;	state Exp;
branches;
next	1.1;

1.1
date	91.07.03.22.25.09;	author mike;	state Exp;
branches;
next	;


desc
@cakeaux program
@


11.2
log
@cake is no more and theres no incentive to maintain it any more so .. buh bye.
@
text
@/*
**	need: a simple utility for text processing with cake
*/

#include	<stdio.h>
#include	"std.h"

#define	MAXLINE	256

main(argc, argv)
int	argc;
char	**argv;
{
	register	FILE	*fp;
	char		line[MAXLINE];

	if (argc != 2 && argc != 3)
	{
		printf("Usage: need program [file]\n");
		exit(127);
	}

	if (argc == 2)
		fp = stdin;
	else
	{
		if ((fp = fopen(argv[2], "r")) == NULL)
		{
			printf("need: cannot open %s\n", argv[2]);
			exit(127);
		}
	}

	while (getline(fp, line, MAXLINE) > 0)
		if (match(line, "NEED"))
			exit(match(line, argv[1])? 0: 1);
	
	exit(127);
}

int
getline(fp, s, lim)
register	FILE	*fp;
char		s[];
register	int	lim;
{
	register	int	c, i;

	i = 0;
	while (--lim > 0 && (c = getc(fp)) != EOF && c != '\n')
		s[i++] = c;

	if (c == '\n')
		s[i++] = c;

	s[i] = '\0';
	return i;
}

int
match(s, t)
register	char	*s;
register	char	*t;
{
	register	int	i, j;

	for (; *s != '\0'; s++)
	{
		for (i = 0, j = 0; t[j] != '\0' && s[i] == t[j]; i++, j++)
			;
		if (t[j] == '\0')
			return TRUE;
	}

	return FALSE;
}
@


11.1
log
@Release_4_4
@
text
@@


1.2
log
@
@
text
@@


1.1
log
@Initial revision
@
text
@d14 1
a14 1
	reg	FILE	*fp;
d43 1
a43 1
reg	FILE	*fp;
d45 1
a45 1
reg	int	lim;
d47 1
a47 1
	reg	int	c, i;
d62 2
a63 2
reg	char	*s;
reg	char	*t;
d65 1
a65 1
	reg	int	i, j;
@
