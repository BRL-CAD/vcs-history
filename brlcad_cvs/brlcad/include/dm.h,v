head	14.24;
access;
symbols
	rel-7-10-4:14.24
	STABLE:14.24.0.2
	stable-branch:14.5
	rel-7-10-2:14.24
	rel-7-10-0:14.17
	rel-7-8-4:14.13
	rel-7-8-2:14.8
	rel-7-8-0:14.8
	trimnurbs-branch:14.8.0.2
	help:14.8
	temp_tag:14.7
	bobWinPort-20051223-freeze:14.6.2.1
	postmerge-20051223-bobWinPort:14.7
	premerge-20051223-bobWinPort:14.6
	rel-7-6-6:14.6
	rel-7-6-4:14.6
	rel-7-6-2:14.6
	rel-7-6-branch:14.6.0.6
	rel-7-6-0:14.6
	rel-7-4-2:14.6
	rel-7-4-branch:14.6.0.4
	bobWinPort:14.6.0.2
	rel-7-4-0:14.6
	rel-7-2-6:14.6
	rel-7-2-4:14.5
	rel-7-2-2:14.5
	rel-7-2-0:14.4
	rel-7-0-4:14.3
	rel-7-0-2:14.3
	rel-7-0-1:14.3
	opensource-post:14.3
	opensource-pre:1.3
	rel-7-0-branch:1.3.0.2
	rel-7-0:1.3;
locks; strict;
comment	@ * @;


14.24
date	2007.06.28.06.04.22;	author brlcad;	state Exp;
branches;
next	14.23;

14.23
date	2007.05.26.02.08.01;	author brlcad;	state Exp;
branches;
next	14.22;

14.22
date	2007.05.12.22.26.23;	author brlcad;	state Exp;
branches;
next	14.21;

14.21
date	2007.05.12.22.06.49;	author brlcad;	state Exp;
branches;
next	14.20;

14.20
date	2007.04.23.13.30.19;	author joevalleyfield;	state Exp;
branches;
next	14.19;

14.19
date	2007.04.16.23.08.51;	author brlcad;	state Exp;
branches;
next	14.18;

14.18
date	2007.04.11.18.54.25;	author bob1961;	state Exp;
branches;
next	14.17;

14.17
date	2007.01.27.01.01.39;	author brlcad;	state Exp;
branches;
next	14.16;

14.16
date	2007.01.23.01.13.20;	author brlcad;	state Exp;
branches;
next	14.15;

14.15
date	2007.01.21.04.45.40;	author brlcad;	state Exp;
branches;
next	14.14;

14.14
date	2007.01.20.14.36.40;	author brlcad;	state Exp;
branches;
next	14.13;

14.13
date	2006.09.18.05.24.07;	author lbutler;	state Exp;
branches;
next	14.12;

14.12
date	2006.08.07.16.04.38;	author brlcad;	state Exp;
branches;
next	14.11;

14.11
date	2006.08.07.15.34.50;	author brlcad;	state Exp;
branches;
next	14.10;

14.10
date	2006.08.07.14.08.42;	author brlcad;	state Exp;
branches;
next	14.9;

14.9
date	2006.07.06.19.35.17;	author brlcad;	state Exp;
branches;
next	14.8;

14.8
date	2006.01.18.06.46.10;	author brlcad;	state Exp;
branches;
next	14.7;

14.7
date	2005.12.23.21.26.25;	author bob1961;	state Exp;
branches;
next	14.6;

14.6
date	2005.05.28.02.14.49;	author brlcad;	state Exp;
branches
	14.6.2.1;
next	14.5;

14.5
date	2005.03.24.16.34.46;	author bob1961;	state Exp;
branches;
next	14.4;

14.4
date	2005.01.30.20.30.10;	author brlcad;	state Exp;
branches;
next	14.3;

14.3
date	2004.12.21.06.23.18;	author morrison;	state Exp;
branches;
next	14.2;

14.2
date	2004.12.21.06.06.38;	author butler;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.10;	author morrison;	state Exp;
branches;
next	1.3;

1.3
date	2004.09.24.14.51.28;	author morrison;	state Exp;
branches;
next	1.2;

1.2
date	2004.08.03.20.42.29;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.24.04.10.50;	author morrison;	state Exp;
branches;
next	;

14.6.2.1
date	2005.09.08.16.11.51;	author bob1961;	state Exp;
branches;
next	;


desc
@@


14.24
log
@add a new dm_applicationfocus() call that will attempt to bring the invoked application to the current focus -- this is useful/interesting on Mac OS X where X11 applications are not focused by default when invoked via various means (e.g. double-clicking or via Terminal).
@
text
@/*                          D M . H
 * BRL-CAD
 *
 * Copyright (c) 1993-2007 United States Government as represented by
 * the U.S. Army Research Laboratory.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * version 2.1 as published by the Free Software Foundation.
 *
 * This library is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this file; see the file named COPYING for more
 * information.
 */
/** @@addtogroup libdm */
/** @@{ */
/** @@file dm.h
 *
 */

#ifndef __DM_H__
#define __DM_H__

#include "common.h"

#include "machine.h"
#include "bu.h"
#include "vmath.h"
#ifdef USE_FBSERV
#  include "fbserv_obj.h"
#endif


#ifndef DM_EXPORT
#if defined(_WIN32) && !defined(__CYGWIN__) && defined(BRLCAD_DLL)
#  ifdef DM_EXPORT_DLL
#    define DM_EXPORT __declspec(dllexport)
#  else
#    define DM_EXPORT __declspec(dllimport)
#  endif
#else
#  define DM_EXPORT
#endif
#endif

#define DM_NULL (struct dm *)NULL
#define DM_MIN (-2048)
#define DM_MAX (2047)
#define X	0
#define Y	1
#define Z	2

#define DM_O(_m) offsetof(struct dm, _m)

#define GED_MAX 2047.0
#define GED_MIN -2048.0
#define GED_RANGE 4095.0
#define INV_GED 0.00048828125
#define INV_4096 0.000244140625

/*
 * Display coordinate conversion:
 *  GED is using -2048..+2048,
 *  X is 0..width,0..height
 */
#define DIVBY4096(x) (((double)(x))*INV_4096)
#define	GED_TO_Xx(_dmp, x) ((int)((DIVBY4096(x)+0.5)*_dmp->dm_width))
#define	GED_TO_Xy(_dmp, x) ((int)((0.5-DIVBY4096(x))*_dmp->dm_height))
#define Xx_TO_GED(_dmp, x) ((int)(((x)/(double)_dmp->dm_width - 0.5) * GED_RANGE))
#define Xy_TO_GED(_dmp, x) ((int)((0.5 - (x)/(double)_dmp->dm_height) * GED_RANGE))

#if IR_KNOBS
#define NOISE 16		/* Size of dead spot on knob */
#endif

/* the font used depends on the size of the window opened */
#define FONTBACK	"-adobe-courier-medium-r-normal--10-100-75-75-m-60-iso8859-1"
#define FONT5	"5x7"
#define FONT6	"6x10"
#define FONT7	"7x13"
#define FONT8	"8x13"
#define FONT9	"9x15"

/* Display Manager Types */
#define DM_TYPE_BAD     -1
#define DM_TYPE_NULL	0
#define DM_TYPE_PLOT	1
#define DM_TYPE_PS	2
#define DM_TYPE_X	3
#define DM_TYPE_TK	8
#define DM_TYPE_OGL	4
#define DM_TYPE_GLX	5
#define DM_TYPE_PEX	6
#define DM_TYPE_WGL     7

/* Line Styles */
#define DM_SOLID_LINE 0
#define DM_DASHED_LINE 1

#define IS_DM_TYPE_NULL(_t) ((_t) == DM_TYPE_NULL)
#define IS_DM_TYPE_PLOT(_t) ((_t) == DM_TYPE_PLOT)
#define IS_DM_TYPE_PS(_t) ((_t) == DM_TYPE_PS)
#define IS_DM_TYPE_X(_t) ((_t) == DM_TYPE_X)
#define IS_DM_TYPE_TK(_t) ((_t) == DM_TYPE_TK)
#define IS_DM_TYPE_OGL(_t) ((_t) == DM_TYPE_OGL)
#define IS_DM_TYPE_GLX(_t) ((_t) == DM_TYPE_GLX)
#define IS_DM_TYPE_PEX(_t) ((_t) == DM_TYPE_PEX)
#define IS_DM_TYPE_WGL(_t) ((_t) == DM_TYPE_WGL)

#define GET_DM(p,structure,w,hp) { \
	register struct structure *tp; \
	for(BU_LIST_FOR(tp, structure, hp)) { \
		if(w == tp->win) { \
			(p) = tp; \
			break; \
		} \
	} \
\
	if(BU_LIST_IS_HEAD(tp, hp)) \
		p = (struct structure *)NULL; \
}

/*  Colors */
#define DM_COLOR_HI	((short)230)
#define DM_COLOR_LOW	((short)0)
#define DM_BLACK_R	DM_COLOR_LOW
#define DM_BLACK_G	DM_COLOR_LOW
#define DM_BLACK_B	DM_COLOR_LOW
#define DM_RED_R	DM_COLOR_HI
#define DM_RED_G	DM_COLOR_LOW
#define DM_RED_B	DM_COLOR_LOW
#define DM_BLUE_R	DM_COLOR_LOW
#define DM_BLUE_G	DM_COLOR_LOW
#define DM_BLUE_B	DM_COLOR_HI
#define DM_YELLOW_R	DM_COLOR_HI
#define DM_YELLOW_G	DM_COLOR_HI
#define DM_YELLOW_B	DM_COLOR_LOW
#define DM_WHITE_R	DM_COLOR_HI
#define DM_WHITE_G	DM_COLOR_HI
#define DM_WHITE_B	DM_COLOR_HI
#define DM_BLACK	DM_BLACK_R, DM_BLACK_G, DM_BLACK_B
#define DM_RED		DM_RED_R, DM_RED_G, DM_RED_B
#define DM_BLUE		DM_BLUE_R, DM_BLUE_G, DM_BLUE_B
#define DM_YELLOW	DM_YELLOW_R, DM_YELLOW_G, DM_YELLOW_B
#define DM_WHITE	DM_WHITE_R, DM_WHITE_G, DM_WHITE_B
#define DM_COPY_COLOR(_dr,_dg,_db,_sr,_sg,_sb){\
	(_dr) = (_sr);\
	(_dg) = (_sg);\
	(_db) = (_sb); }
#define DM_SAME_COLOR(_dr,_dg,_db,_sr,_sg,_sb)(\
	(_dr) == (_sr) &&\
	(_dg) == (_sg) &&\
	(_db) == (_sb))

/* Command parameter to dmr_viewchange() */
#define DM_CHGV_REDO	0	/* Display has changed substantially */
#define DM_CHGV_ADD	1	/* Add an object to the display */
#define DM_CHGV_DEL	2	/* Delete an object from the display */
#define DM_CHGV_REPL	3	/* Replace an object */
#define DM_CHGV_ILLUM	4	/* Make new object the illuminated object */

/*
 * Definitions for dealing with the buttons and lights.
 * BV are for viewing, and BE are for editing functions.
 */
#define LIGHT_OFF	0
#define LIGHT_ON	1
#define LIGHT_RESET	2		/* all lights out */

struct dm_vars {
  genptr_t pub_vars;
  genptr_t priv_vars;
};

/**
 * Interface to a specific Display Manager
 */
struct dm {
  int (*dm_close)();
  int (*dm_drawBegin)();	/**< @@brief formerly dmr_prolog */
  int (*dm_drawEnd)();		/**< @@brief formerly dmr_epilog */
  int (*dm_normal)();
  int (*dm_loadMatrix)();
  int (*dm_drawString2D)();	/**< @@brief formerly dmr_puts */
  int (*dm_drawLine2D)();	/**< @@brief formerly dmr_2d_line */
  int (*dm_drawPoint2D)();
  int (*dm_drawVList)();	/**< @@brief formerly dmr_object */
  int (*dm_setFGColor)(struct dm *dmp, unsigned char r, unsigned char g, unsigned char b, int strict, fastf_t transparency);
  int (*dm_setBGColor)(struct dm *, unsigned char, unsigned char, unsigned char);
  int (*dm_setLineAttr)();	/**< @@brief currently - linewidth, (not-)dashed */
  int (*dm_configureWin)();
  int (*dm_setWinBounds)();
  int (*dm_setLight)();
  int (*dm_setTransparency)();
  int (*dm_setDepthMask)();
  int (*dm_setZBuffer)();
  int (*dm_debug)();		/**< @@brief Set DM debug level */
  int (*dm_beginDList)();
  int (*dm_endDList)();
  int (*dm_drawDList)();
  int (*dm_freeDLists)();
  unsigned long dm_id;          /**< @@brief window id */
  int dm_displaylist;		/**< @@brief !0 means device has displaylist */
  int dm_stereo;                /**< @@brief stereo flag */
  double dm_bound;		/**< @@brief zoom-in limit */
  int dm_boundFlag;
  char *dm_name;		/**< @@brief short name of device */
  char *dm_lname;		/**< @@brief long name of device */
  int dm_type;			/**< @@brief display manager type */
  int dm_top;                   /**< @@brief !0 means toplevel window */
  int dm_width;
  int dm_height;
  int dm_lineWidth;
  int dm_lineStyle;
  fastf_t dm_aspect;
  fastf_t *dm_vp;		/**< @@brief XXX--ogl still depends on this--Viewscale pointer */
  struct dm_vars dm_vars;	/**< @@brief display manager dependant variables */
  struct bu_vls dm_pathName;	/**< @@brief full Tcl/Tk name of drawing window */
  struct bu_vls dm_tkName;	/**< @@brief short Tcl/Tk name of drawing window */
  struct bu_vls dm_dName;	/**< @@brief Display name */
  unsigned char dm_bg[3];	/**< @@brief background color */
  unsigned char dm_fg[3];	/**< @@brief foreground color */
  vect_t dm_clipmin;		/**< @@brief minimum clipping vector */
  vect_t dm_clipmax;		/**< @@brief maximum clipping vector */
  int dm_debugLevel;		/**< @@brief !0 means debugging */
  int dm_perspective;		/**< @@brief !0 means perspective on */
  int dm_light;			/**< @@brief !0 means lighting on */
  int dm_transparency;		/**< @@brief !0 means transparency on */
  int dm_depthMask;		/**< @@brief !0 means depth buffer is writable */
  int dm_zbuffer;		/**< @@brief !0 means zbuffer on */
  int dm_zclip;			/**< @@brief !0 means zclipping */
  int dm_clearBufferAfter;	/**< @@brief 1 means clear back buffer after drawing and swap */
  Tcl_Interp *dm_interp;	/**< @@brief Tcl interpreter */
};

/**
 *			D M _ O B J
 *@@brief
 * A display manager object is used for interacting with a display manager.
 */
struct dm_obj {
  struct bu_list	l;
  struct bu_vls		dmo_name;		/**< @@brief display manager object name/cmd */
  struct dm		*dmo_dmp;		/**< @@brief display manager pointer */
#ifdef USE_FBSERV
  struct fbserv_obj	dmo_fbs;		/**< @@brief fbserv object */
#endif
  struct bu_observer	dmo_observers;		/**< @@brief fbserv observers */
  mat_t			viewMat;
  int			(*dmo_drawLabelsHook)();
  void			*dmo_drawLabelsHookClientData;
};

#define DM_OPEN(_type,_argc,_argv) dm_open(_type,_argc,_argv)
#define DM_CLOSE(_dmp) _dmp->dm_close(_dmp)
#define DM_DRAW_BEGIN(_dmp) _dmp->dm_drawBegin(_dmp)
#define DM_DRAW_END(_dmp) _dmp->dm_drawEnd(_dmp)
#define DM_NORMAL(_dmp) _dmp->dm_normal(_dmp)
#define DM_LOADMATRIX(_dmp,_mat,_eye) _dmp->dm_loadMatrix(_dmp,_mat,_eye)
#define DM_DRAW_STRING_2D(_dmp,_str,_x,_y,_size,_use_aspect)\
     _dmp->dm_drawString2D(_dmp,_str,_x,_y,_size,_use_aspect)
#define DM_DRAW_LINE_2D(_dmp,_x1,_y1,_x2,_y2) _dmp->dm_drawLine2D(_dmp,_x1,_y1,_x2,_y2)
#define DM_DRAW_POINT_2D(_dmp,_x,_y) _dmp->dm_drawPoint2D(_dmp,_x,_y)
#define DM_DRAW_VLIST(_dmp,_vlist) _dmp->dm_drawVList(_dmp,_vlist)
#define DM_SET_FGCOLOR(_dmp,_r,_g,_b,_strict,_transparency) _dmp->dm_setFGColor(_dmp,_r,_g,_b,_strict,_transparency)
#define DM_SET_BGCOLOR(_dmp,_r,_g,_b) _dmp->dm_setBGColor(_dmp,_r,_g,_b)
#define DM_SET_LINE_ATTR(_dmp,_width,_dashed) _dmp->dm_setLineAttr(_dmp,_width,_dashed)
#define DM_CONFIGURE_WIN(_dmp) _dmp->dm_configureWin(_dmp)
#define DM_SET_WIN_BOUNDS(_dmp,_w) _dmp->dm_setWinBounds(_dmp,_w)
#define DM_SET_LIGHT(_dmp,_on) _dmp->dm_setLight(_dmp,_on)
#define DM_SET_TRANSPARENCY(_dmp,_on) _dmp->dm_setTransparency(_dmp,_on)
#define DM_SET_DEPTH_MASK(_dmp,_on) _dmp->dm_setDepthMask(_dmp,_on)
#define DM_SET_ZBUFFER(_dmp,_on) _dmp->dm_setZBuffer(_dmp,_on)
#define DM_DEBUG(_dmp,_lvl) _dmp->dm_debug(_dmp,_lvl)
#define DM_BEGINDLIST(_dmp,_list) _dmp->dm_beginDList(_dmp,_list)
#define DM_ENDDLIST(_dmp) _dmp->dm_endDList(_dmp)
#define DM_DRAWDLIST(_dmp,_list) _dmp->dm_drawDList(_dmp,_list)
#define DM_FREEDLISTS(_dmp,_list,_range) _dmp->dm_freeDLists(_dmp,_list,_range)

DM_EXPORT extern struct dm dm_Null;

#ifdef BRLCAD_DEBUG
DM_EXPORT BU_EXTERN(int Dm_d_Init,
		    ());
#else
DM_EXPORT BU_EXTERN(int Dm_Init,
		    ());
#endif
DM_EXPORT BU_EXTERN(struct dm *dm_open,
		    (Tcl_Interp *interp,
		     int type,
		     int argc,
		     char *argv[]));
DM_EXPORT BU_EXTERN(int dm_share_dlist,
		    (struct dm *dmp1,
		     struct dm *dmp2));
DM_EXPORT BU_EXTERN(fastf_t dm_Xx2Normal,
		    (struct dm *dmp,
		     register int x));
DM_EXPORT BU_EXTERN(int dm_Normal2Xx,
		    (struct dm *dmp,
		     register fastf_t f));
DM_EXPORT BU_EXTERN(fastf_t dm_Xy2Normal,
		    (struct dm *dmp,
		     register int y,
		     int use_aspect));
DM_EXPORT BU_EXTERN(int dm_Normal2Xy,
		    (struct dm *dmp,
		     register fastf_t f,
		     int use_aspect));
DM_EXPORT BU_EXTERN(void dm_fogHint,
		    (struct dm *dmp,
		     int fastfog));
DM_EXPORT BU_EXTERN(int dm_processOptions,
		    ());
DM_EXPORT BU_EXTERN(int dm_limit,
		    (int i));
DM_EXPORT BU_EXTERN(int dm_unlimit,
		    (int i));
DM_EXPORT BU_EXTERN(fastf_t dm_wrap,
		    (fastf_t f));
DM_EXPORT BU_EXTERN(void Nu_void,
		    ());
DM_EXPORT BU_EXTERN(struct dm *Nu_open,
		    ());
DM_EXPORT BU_EXTERN(int Nu_int0,
		    ());
DM_EXPORT BU_EXTERN(unsigned Nu_unsign,
		    ());

/* vers.c */
DM_EXPORT BU_EXTERN(const char *dm_version, (void));

/* clip.c */
DM_EXPORT BU_EXTERN(int clip,
		    (fastf_t *,
		     fastf_t *,
		     fastf_t *,
		     fastf_t *));
DM_EXPORT BU_EXTERN(int vclip,
		    (fastf_t *,
		     fastf_t *,
		     register fastf_t *,
		     register fastf_t *));

/* axes.c */
DM_EXPORT BU_EXTERN(void dmo_drawDataAxes_cmd,
		    (struct dm *dmp,
		     fastf_t viewSize,
		     mat_t rmat,
		     point_t axesPos,
		     fastf_t axesSize,
		     int *axesColor,
		     int lineWidth));

DM_EXPORT BU_EXTERN(void dmo_drawAxes_cmd,
		    (struct dm *dmp,
		     fastf_t viewSize,
		     mat_t rmat,
		     point_t axesPos,
		     fastf_t axesSize,
		     int *axesColor,
		     int *labelColor,
		     int lineWidth,
		     int posOnly,
		     int threeColor,
		     int tickEnable,
		     int tickLen,
		     int majorTickLen,
		     fastf_t tickInterval,
		     int ticksPerMajor,
		     int *tickColor,
		     int *majorTickColor,
		     int tickThreshold));

/* focus.c */
DM_EXPORT BU_EXTERN(void dm_applicationfocus, (void));

#endif /* __DM_H__ */

/** @@} */
/*
 * Local Variables:
 * mode: C
 * tab-width: 8
 * c-basic-offset: 4
 * indent-tabs-mode: t
 * End:
 * ex: shiftwidth=4 tabstop=8
 */
@


14.23
log
@clean up the header protections so that they are all now more consistent with one another via use of __HEADER_H__ for the define names.
@
text
@d381 3
@


14.22
log
@need vmath.h for the vector code
@
text
@d25 3
a27 2
#ifndef SEEN_DM_H
#define SEEN_DM_H
d381 2
a382 1
#endif /* SEEN_DM_H */
@


14.21
log
@include dependent headers
@
text
@d32 1
@


14.20
log
@preliminary support for unaccelerated mgen on aqua through dm-tk

configure.ac:
        - use two levels of expansion for BRLCAD_DATA
        - enable_aqua configure option
        - move X11 ac_ macro tests from argument check section
        - rely on AC_PATH_XTRA to figure out most of what we need to know about
                where to find X
        - no longer look for libICE, libXmu, or libXsm  AC_PATH_XTRA
                populates X_PRE_LIBS with these but they seem completely unused
                right now.
        - look for opengl libs and headers in all of the places AC_PATH_XTRA
                looked for the xlibs
        - use tk's xlib headers when using tk-aqua rather than x
        - remove X11 "ugly hack"
        - include tk flags where necessary
        - remove --disable-shared from subconfigs
        - forcibly add tcl and tk build dirs to libtool wrapper scripts
libdm/Makefile.am, dm-tk.[ch], dm.h, dm-generic.c, dm_obj.c, mged/Makefile.am,
                attach.c, dm-generic.c, dm-tk.c, ged.c:
        - use lower case when referring to tk
        - add support for using dm-tk
        - include X_CFLAGS with DM_X
irprep/Makefile.am, util/Makefile.am:
        - disable build of ir-X, pl-X when there is no X
dm-X.c:
        - no need to test for HAVE_X11_XLIB here; if we don't have it we
                shouldn't be building this file
libfb/Makefile.am, if_tk.c, libfb/tcl.c:
        - build if_tk.c
        - add preliminary hooks so if_tk can be called when ready
@
text
@d28 9
a48 8
#ifndef SEEN_BU_H
#  include <bu.h>
#endif

#ifdef USE_FBSERV
#  include "fbserv_obj.h"
#endif

@


14.19
log
@update to the new version management routines, replace the dm_version global with a dm_version() call
@
text
@d92 1
d106 1
@


14.18
log
@Added declaration for dmo_drawDataAxes_cmd().
@
text
@d332 1
a332 1
DM_EXPORT extern char dm_version[];
@


14.17
log
@ws, test three
@
text
@d347 9
@


14.16
log
@Sweeping license updates.  Documentation is fully relicensed to the BSD Documentation License (a minor variant of the FreeBSD Documentation License and BSD License).  All GPL code (mostly application code) is converted to the LGPL and now also specifically declares version 2.1, revoking the blank check to the FSF.  The intent of these sweeping changes are to simplify the licensing terms and increase overall flexibility of use, both externally (to users for their purposes) and internally (to allow application code to be migrated to libraries without creating GPL libraries).  As a collective work, BRL-CAD is now LGPL.
@
text
@a377 1

@


14.15
log
@ugh, what tedium.  put some effort towards cleaning up the doxygen labels and making the headers more consistent.  also exclusively using @@ for doxygen instead of \ to try to keep things more consistent.
@
text
@d9 1
a9 2
 * as published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
d14 1
a14 1
 * Library General Public License for more details.
@


14.14
log
@update copyright to 2007
@
text
@d22 1
a22 1
/*@@{*/
d369 1
a369 1
/*@@}*/
@


14.13
log
@Doxygen updates
@
text
@d4 1
a4 1
 * Copyright (c) 1993-2006 United States Government as represented by
@


14.12
log
@add explicit code for DM_WGL and IF_WGL for Windows GL support instead of piggybacking off of the OGL interface
@
text
@d21 2
d176 3
a178 1
/* Interface to a specific Display Manager */
d181 2
a182 2
  int (*dm_drawBegin)();	/* formerly dmr_prolog */
  int (*dm_drawEnd)();		/* formerly dmr_epilog */
d185 2
a186 2
  int (*dm_drawString2D)();	/* formerly dmr_puts */
  int (*dm_drawLine2D)();	/* formerly dmr_2d_line */
d188 1
a188 1
  int (*dm_drawVList)();	/* formerly dmr_object */
d191 1
a191 1
  int (*dm_setLineAttr)();	/* currently - linewidth, (not-)dashed */
d198 1
a198 1
  int (*dm_debug)();		/* Set DM debug level */
d203 4
a206 4
  unsigned long dm_id;          /* window id */
  int dm_displaylist;		/* !0 means device has displaylist */
  int dm_stereo;                /* stereo flag */
  double dm_bound;		/* zoom-in limit */
d208 4
a211 4
  char *dm_name;		/* short name of device */
  char *dm_lname;		/* long name of device */
  int dm_type;			/* display manager type */
  int dm_top;                   /* !0 means toplevel window */
d217 18
a234 18
  fastf_t *dm_vp;		/* XXX--ogl still depends on this--Viewscale pointer */
  struct dm_vars dm_vars;	/* display manager dependant variables */
  struct bu_vls dm_pathName;	/* full Tcl/Tk name of drawing window */
  struct bu_vls dm_tkName;	/* short Tcl/Tk name of drawing window */
  struct bu_vls dm_dName;	/* Display name */
  unsigned char dm_bg[3];	/* background color */
  unsigned char dm_fg[3];	/* foreground color */
  vect_t dm_clipmin;		/* minimum clipping vector */
  vect_t dm_clipmax;		/* maximum clipping vector */
  int dm_debugLevel;		/* !0 means debugging */
  int dm_perspective;		/* !0 means perspective on */
  int dm_light;			/* !0 means lighting on */
  int dm_transparency;		/* !0 means transparency on */
  int dm_depthMask;		/* !0 means depth buffer is writable */
  int dm_zbuffer;		/* !0 means zbuffer on */
  int dm_zclip;			/* !0 means zclipping */
  int dm_clearBufferAfter;	/* 1 means clear back buffer after drawing and swap */
  Tcl_Interp *dm_interp;	/* Tcl interpreter */
d237 1
a237 1
/*
d239 1
a239 1
 *
d244 2
a245 2
  struct bu_vls		dmo_name;		/* display manager object name/cmd */
  struct dm		*dmo_dmp;		/* display manager pointer */
d247 1
a247 1
  struct fbserv_obj	dmo_fbs;		/* fbserv object */
d249 1
a249 1
  struct bu_observer	dmo_observers;		/* fbserv observers */
d369 1
a369 1

d379 1
@


14.11
log
@revert, wrong edited dm.h.. not yet ready for the tk interface
@
text
@d43 2
a44 4
#ifdef DM_OGL
#  ifndef IF_OGL
#    define IF_OGL 1
#  endif
a45 1
#include "fbserv_obj.h"
d94 1
d107 1
@


14.10
log
@unnecesary IF_OGL define
@
text
@a96 1
#define DM_TYPE_TK	7
a105 1
#define IS_DM_TYPE_TK(_t) ((_t) == DM_TYPE_TK)
@


14.9
log
@follow erik's lead, obliterate the other references to Cakefiles
@
text
@d97 1
d107 1
@


14.8
log
@update copyright to 2006
@
text
@d329 1
a329 1
/* vers.c (created by libdm/Cakefile) */
@


14.7
log
@Merge of bobWinPort
@
text
@d4 1
a4 1
 * Copyright (C) 1993-2005 United States Government as represented by
@


14.6
log
@convert WIN32 define checks to _WIN32 since the latter is one of the defaults provided by MSVC whereas the prior is not.  remove some of them related to header inclusions using HAVE_ defines instead.
@
text
@d43 5
d278 2
d334 4
a337 4
		    (vect_t,
		     vect_t,
		     vect_t,
		     vect_t));
d339 2
a340 2
		    (vect_t,
		     vect_t,
@


14.6.2.1
log
@Mods for windows port
@
text
@a42 5
#ifdef DM_OGL
#  ifndef IF_OGL
#    define IF_OGL 1
#  endif
#endif
a272 2
DM_EXPORT extern struct dm dm_Null;

d327 4
a330 4
		    (fastf_t *,
		     fastf_t *,
		     fastf_t *,
		     fastf_t *));
d332 2
a333 2
		    (fastf_t *,
		     fastf_t *,
@


14.5
log
@Add another condition for deciding how to define DM_EXPORT (allows for static compile); Declare Dm_d_Init; Add viewmat, dmo_drawLabelsHook and dmo_drawLabelsHookClientdata to "struct dm_obj"
@
text
@d28 1
a28 1
#if defined(WIN32) && !defined(__CYGWIN__) && defined(BRLCAD_DLL)
@


14.4
log
@update copyright to 2005
@
text
@d27 2
a28 1
#if defined(WIN32) && !defined(__CYGWIN__)
d37 1
d242 3
d273 4
d279 1
@


14.3
log
@use perl to M-q format wrapping
@
text
@d4 1
a4 1
 * Copyright (c) 1993-2004 United States Government as represented by
@


14.2
log
@LGPL license changes
@
text
@d17 2
a18 2
 * You should have received a copy of the GNU Lesser General Public License
 * along with this file; see the file named COPYING for more
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d1 23
@


1.3
log
@help make distcheck get a whole lot farther ..
@
text
@d326 10
@


1.2
log
@apply Bob's provided patches from 20040630.  this includes itcl namespace scoping, windows DLL exporting, and wdb arb edit support
@
text
@d5 5
a9 2
#ifdef DM_EXPORT_DLL
#define DM_EXPORT __declspec(dllexport)
d11 1
a11 4
#define DM_EXPORT __declspec(dllimport)
#endif
#else
#define DM_EXPORT
d15 1
a15 1
#include <bu.h>
@


1.1
log
@moved/renamed from top-level h/ to top-level include/
@
text
@d4 14
d197 1
a197 1
  int dm_depthMask;		/* !0 means depth mask is writable */
d245 43
a287 21
extern int Dm_Init();
extern struct dm *dm_open();
extern int dm_share_dlist();
extern fastf_t dm_Xx2Normal();
extern int dm_Normal2Xx();
extern fastf_t dm_Xy2Normal();
extern int dm_Normal2Xy();
extern void dm_fogHint();
extern int dm_processOptions();
extern int dm_limit();
extern int dm_unlimit();
extern fastf_t dm_wrap();
extern void Nu_void();
extern int Nu_int0();
extern unsigned Nu_unsign();
#if 0
extern void dm_configureWindowShape();
extern void dm_zbuffer();
extern void dm_lighting();
extern Tcl_Interp *interp;   /* This must be defined by the application */
#endif
d290 1
a290 1
extern char dm_version[];
d293 10
a302 2
extern int clip(vect_t, vect_t, vect_t, vect_t);
extern int vclip(vect_t, vect_t, register fastf_t *, register fastf_t *);
d305 19
a323 18
extern void dmo_drawAxes_cmd(struct dm *dmp,
			     fastf_t viewSize,
			     mat_t rmat,
			     point_t axesPos,
			     fastf_t axesSize,
			     int *axesColor,
			     int *labelColor,
			     int lineWidth,
			     int posOnly,
			     int threeColor,
			     int tickEnable,
			     int tickLen,
			     int majorTickLen,
			     fastf_t tickInterval,
			     int ticksPerMajor,
			     int *tickColor,
			     int *majorTickColor,
			     int tickThreshold);
@

