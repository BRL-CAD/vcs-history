head	14.24;
access;
symbols
	rel-7-10-4:14.23
	STABLE:14.23.0.2
	stable-branch:14.5
	rel-7-10-2:14.23
	rel-7-10-0:14.21
	rel-7-8-4:14.15
	rel-7-8-2:14.12
	rel-7-8-0:14.12
	trimnurbs-branch:14.12.0.2
	help:14.12
	temp_tag:14.11
	bobWinPort-20051223-freeze:14.10
	postmerge-20051223-bobWinPort:14.11
	premerge-20051223-bobWinPort:14.11
	rel-7-6-6:14.11
	rel-7-6-4:14.11
	rel-7-6-2:14.10
	rel-7-6-branch:14.10.0.6
	rel-7-6-0:14.10
	rel-7-4-2:14.10
	rel-7-4-branch:14.10.0.4
	bobWinPort:14.10.0.2
	rel-7-4-0:14.10
	rel-7-2-6:14.9
	rel-7-2-4:14.8
	rel-7-2-2:14.5
	rel-7-2-0:14.4
	rel-7-0-4:14.3
	rel-7-0-2:14.3
	rel-7-0-1:14.3
	opensource-post:14.3
	opensource-pre:1.2
	rel-7-0-branch:1.2.0.2
	rel-7-0:1.2;
locks; strict;
comment	@ * @;


14.24
date	2007.12.31.20.25.13;	author brlcad;	state Exp;
branches;
next	14.23;

14.23
date	2007.05.26.02.08.02;	author brlcad;	state Exp;
branches;
next	14.22;

14.22
date	2007.05.26.01.45.04;	author brlcad;	state Exp;
branches;
next	14.21;

14.21
date	2007.02.22.14.59.52;	author jlowenz;	state Exp;
branches;
next	14.20;

14.20
date	2007.02.15.21.20.55;	author jlowenz;	state Exp;
branches;
next	14.19;

14.19
date	2007.01.27.01.01.40;	author brlcad;	state Exp;
branches;
next	14.18;

14.18
date	2007.01.23.01.13.20;	author brlcad;	state Exp;
branches;
next	14.17;

14.17
date	2007.01.21.04.45.40;	author brlcad;	state Exp;
branches;
next	14.16;

14.16
date	2007.01.20.14.36.40;	author brlcad;	state Exp;
branches;
next	14.15;

14.15
date	2006.09.18.05.24.07;	author lbutler;	state Exp;
branches;
next	14.14;

14.14
date	2006.08.31.04.41.20;	author lbutler;	state Exp;
branches;
next	14.13;

14.13
date	2006.07.14.19.20.37;	author erikgreenwald;	state Exp;
branches;
next	14.12;

14.12
date	2006.01.18.06.46.10;	author brlcad;	state Exp;
branches;
next	14.11;

14.11
date	2005.10.23.04.44.26;	author brlcad;	state Exp;
branches;
next	14.10;

14.10
date	2005.06.12.22.01.31;	author brlcad;	state Exp;
branches
	14.10.6.1;
next	14.9;

14.9
date	2005.05.28.02.14.49;	author brlcad;	state Exp;
branches;
next	14.8;

14.8
date	2005.05.08.17.57.51;	author brlcad;	state Exp;
branches;
next	14.7;

14.7
date	2005.05.08.05.28.00;	author brlcad;	state Exp;
branches;
next	14.6;

14.6
date	2005.05.08.04.56.18;	author brlcad;	state Exp;
branches;
next	14.5;

14.5
date	2005.03.28.05.22.29;	author bob1961;	state Exp;
branches;
next	14.4;

14.4
date	2005.01.30.20.30.12;	author brlcad;	state Exp;
branches;
next	14.3;

14.3
date	2004.12.21.06.23.18;	author morrison;	state Exp;
branches;
next	14.2;

14.2
date	2004.12.21.06.06.39;	author butler;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.10;	author morrison;	state Exp;
branches;
next	1.2;

1.2
date	2004.10.04.14.00.44;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.24.04.10.51;	author morrison;	state Exp;
branches;
next	;

14.10.6.1
date	2005.11.13.13.46.10;	author brlcad;	state Exp;
branches;
next	;


desc
@@


14.24
log
@header cleanup, more address removal
@
text
@/*                           W D B . H
 * BRL-CAD
 *
 * Copyright (c) 1988-2007 United States Government as represented by
 * the U.S. Army Research Laboratory.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * version 2.1 as published by the Free Software Foundation.
 *
 * This library is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this file; see the file named COPYING for more
 * information.
 */
/** @@addtogroup wdb */
/** @@{ */
/** @@file wdb.h
 *
 *  Interface structures and routines for libwdb
 *
 *  Note -
 *	Rather than using a stdio (FILE *),
 *	we now use a (struct rt_wdb *) parameter.
 *	Rather than calling fopen(), call wdb_fopen();
 *
 *  @@author
 *	Michael John Muuss
 *
 *  Include Sequencing -
 *	#  include <stdio.h>	/_* For FILE * *_/
 *	# include <math.h>
 *	# include "machine.h"	/_* For fastf_t definition on this machine *_/
 *	# include "bu.h"
 *	# include "vmath.h"	/_* For vect_t definition *_/
 *	# include "nmg.h"	/_* OPTIONAL, precedes wdb.h when used *_/
 *	# include "raytrace.h"	/_* OPTIONAL, precedes wdb.h when used *_/
 *	# include "nurb.h"	/_* OPTIONAL, precedes wdb.h when used *_/
 *	# include "rtgeom.h"
 *	# include "wdb.h"
 *
 *  Libraries Used -
 *	LIBWDB LIBRT LIBRT_LIBES -lm -lc
 */

#ifndef __WDB_H__
#define __WDB_H__

#include "common.h"

/* interface headers */
#include "bu.h"
#include "bn.h"
#include "raytrace.h"
#include "rtgeom.h"

__BEGIN_DECLS

#ifndef WDB_EXPORT
#  if defined(_WIN32) && !defined(__CYGWIN__) && defined(BRLCAD_DLL)
#    ifdef WDB_EXPORT_DLL
#      define WDB_EXPORT __declspec(dllexport)
#    else
#      define WDB_EXPORT __declspec(dllimport)
#    endif
#  else
#    define WDB_EXPORT
#  endif
#endif

/*
 *  Macros for providing function prototypes, regardless of whether
 *  the compiler understands them or not.
 *  It is vital that the argument list given for "args" be enclosed
 *  in parens.
 */
#if __STDC__ || USE_PROTOTYPES
#  define WDB_EXTERN(type_and_name,args)	extern type_and_name args
#  define WDB_ARGS(args)			args
#else
#  define WDB_EXTERN(type_and_name,args)	extern type_and_name()
#  define WDB_ARGS(args)			()
#endif

/*
 *  In-memory form of database combinations
 */
struct wmember  {
	struct bu_list	l;
	int		wm_op;		/**< @@brief  Boolean operation */
	mat_t		wm_mat;		/**< @@brief  XXX Should be matp_t !!! */
	char		*wm_name;
};
#define WMEMBER_NULL	((struct wmember *)0)
#define WMEMBER_MAGIC	0x43128912
#define WDB_CK_WMEMBER(_p)	BU_CKMAG(_p, WMEMBER_MAGIC, "wmember" );

/*
 *  Definitions for pipe (wire) segments
 * XXX Why isn't this in rtgeom.h?
 */

struct wdb_pipept {
	struct bu_list	l;		/**< @@brief  doubly linked list support */
	point_t		pp_coord;	/**< @@brief  "control" point for pipe solid */
	fastf_t		pp_id;		/**< @@brief  inner diam, <=0 if solid (wire) */
	fastf_t		pp_od;		/**< @@brief  pipe outer diam */
	fastf_t		pp_bendradius;	/**< @@brief  bend radius to use for a bend at this point */
};

#define WDB_PIPESEG_NULL	((struct wdb_pipeseg *)0)
#define WDB_PIPESEG_MAGIC	0x9723ffef

struct wdb_metaballpt {
	struct bu_list	l;
	point_t		coord;
	fastf_t		fldstr;		/**< @@brief  field strength */
};
#define WDB_METABALLPT_NULL	((struct wdb_metaballpt *)0)
#define WDB_METABALLPT_MAGIC	0x6D627074	/**< @@brief  mbpt */


WDB_EXPORT WDB_EXTERN(int mk_id, (struct rt_wdb *fp, const char *title) );
WDB_EXPORT WDB_EXTERN(int mk_id_units, (struct rt_wdb *fp, const char *title, const char *units) );
WDB_EXPORT int mk_id_editunits(
	struct rt_wdb *fp,
	const char *title,
	double local2mm );

/*
 *  Solid conversion routines
 */
/* libwdb/wdb.c */
WDB_EXPORT WDB_EXTERN(int mk_half, (struct rt_wdb *fp, const char *name, const vect_t norm, double d) );
WDB_EXPORT int mk_grip(
	struct rt_wdb *wdbp,
	const char *name,
	const point_t center,
	const vect_t normal,
	const fastf_t magnitude );
WDB_EXPORT WDB_EXTERN(int mk_rpp, (struct rt_wdb *fp, const char *name, const point_t min,
			const point_t max) );
WDB_EXPORT WDB_EXTERN(int mk_wedge, (struct rt_wdb *fp, const char *name, const point_t vert,
			const vect_t xdirv, const vect_t zdirv,
			fastf_t xlen, fastf_t ylen, fastf_t zlen,
			fastf_t x_top_len) );
WDB_EXPORT WDB_EXTERN(int mk_arb4, (struct rt_wdb *fp, const char *name, const fastf_t *pts4) );
WDB_EXPORT WDB_EXTERN(int mk_arb8, (struct rt_wdb *fp, const char *name, const fastf_t *pts8) );
WDB_EXPORT WDB_EXTERN(int mk_sph, (struct rt_wdb *fp, const char *name, const point_t center,
			fastf_t radius) );
WDB_EXPORT WDB_EXTERN(int mk_ell, (struct rt_wdb *fp, const char *name, const point_t center,
			const vect_t a, const vect_t b, const vect_t c) );
WDB_EXPORT WDB_EXTERN(int mk_tor, (struct rt_wdb *fp, const char *name, const point_t center,
			const vect_t inorm, double r1, double r2) );
WDB_EXPORT WDB_EXTERN(int mk_rcc, (struct rt_wdb *fp, const char *name, const point_t base,
			const vect_t height, fastf_t radius) );
WDB_EXPORT WDB_EXTERN(int mk_tgc, (struct rt_wdb *fp, const char *name, const point_t base,
			const vect_t height, const vect_t a, const vect_t b,
			const vect_t c, const vect_t d) );
WDB_EXPORT WDB_EXTERN(int mk_cone, (struct rt_wdb *fp, const char *name, const point_t base,
			const vect_t dirv, fastf_t height, fastf_t rad1,
			fastf_t rad2) );
#define mk_trc(wrong)	+++error_obsolete_libwdb_routine+++	/* This routine no longer exists */
WDB_EXPORT WDB_EXTERN(int mk_trc_h, (struct rt_wdb *fp, const char *name, const point_t base,
			const vect_t height, fastf_t radbase, fastf_t radtop) );
WDB_EXPORT WDB_EXTERN(int mk_trc_top, (struct rt_wdb *fp, const char *name, const point_t ibase,
			const point_t itop, fastf_t radbase, fastf_t radtop) );
WDB_EXPORT int mk_rpc(
	struct rt_wdb *wdbp,
	const char *name,
	const point_t vert,
	const vect_t height,
	const vect_t breadth,
	double half_w );
WDB_EXPORT int mk_rhc(
	struct rt_wdb *wdbp,
	const char *name,
	const point_t vert,
	const vect_t height,
	const vect_t breadth,
	fastf_t	half_w,
	fastf_t asymp );
WDB_EXPORT int mk_epa(
	struct rt_wdb *wdbp,
	const char *name,
	const point_t vert,
	const vect_t height,
	const vect_t breadth,
	fastf_t r1,
	fastf_t r2 );
WDB_EXPORT int mk_ehy(
	struct rt_wdb *wdbp,
	const char *name,
	const point_t vert,
	const vect_t height,
	const vect_t breadth,
	fastf_t r1,
	fastf_t r2,
	fastf_t c );
WDB_EXPORT int mk_eto(
	struct rt_wdb *wdbp,
	const char *name,
	const point_t vert,
	const vect_t norm,
	const vect_t smajor,
	fastf_t rrot,
	fastf_t sminor );

WDB_EXPORT WDB_EXTERN(int mk_arbn, (struct rt_wdb *fp, const char *name, int neqn, plane_t eqn[]) );
WDB_EXPORT WDB_EXTERN(int mk_ars, (struct rt_wdb *fp, const char *name, int ncurves, int pts_per_curve,
			fastf_t	*curves[]) );

typedef enum {
    WDB_BINUNIF_FLOAT,
    WDB_BINUNIF_DOUBLE,
    WDB_BINUNIF_CHAR,
    WDB_BINUNIF_UCHAR,
    WDB_BINUNIF_SHORT,
    WDB_BINUNIF_USHORT,
    WDB_BINUNIF_INT,
    WDB_BINUNIF_UINT,
    WDB_BINUNIF_LONG,
    WDB_BINUNIF_ULONG,
    WDB_BINUNIF_LONGLONG,
    WDB_BINUNIF_ULONGLONG,
    WDB_BINUNIF_INT8,
    WDB_BINUNIF_UINT8,
    WDB_BINUNIF_INT16,
    WDB_BINUNIF_UINT16,
    WDB_BINUNIF_INT32,
    WDB_BINUNIF_UINT32,
    WDB_BINUNIF_INT64,
    WDB_BINUNIF_UINT64,
    WDB_BINUNIF_FILE_FLOAT,
    WDB_BINUNIF_FILE_DOUBLE,
    WDB_BINUNIF_FILE_CHAR,
    WDB_BINUNIF_FILE_UCHAR,
    WDB_BINUNIF_FILE_SHORT,
    WDB_BINUNIF_FILE_USHORT,
    WDB_BINUNIF_FILE_INT,
    WDB_BINUNIF_FILE_UINT,
    WDB_BINUNIF_FILE_LONG,
    WDB_BINUNIF_FILE_ULONG,
    WDB_BINUNIF_FILE_LONGLONG,
    WDB_BINUNIF_FILE_ULONGLONG,
    WDB_BINUNIF_FILE_INT8,
    WDB_BINUNIF_FILE_UINT8,
    WDB_BINUNIF_FILE_INT16,
    WDB_BINUNIF_FILE_UINT16,
    WDB_BINUNIF_FILE_INT32,
    WDB_BINUNIF_FILE_UINT32,
    WDB_BINUNIF_FILE_INT64,
    WDB_BINUNIF_FILE_UINT64
} wdb_binunif;
WDB_EXPORT WDB_EXTERN(int mk_binunif, (struct rt_wdb *fp, const char *name, const genptr_t data, wdb_binunif data_type, long count) );

#define mk_bsolid(fp,name,nsurf,res)	+++error_obsolete_libwdb_routine+++
#define mk_bsurf(fp,srf)		+++error_obsolete_libwdb_routine+++

/* bot.c */
WDB_EXPORT int
mk_bot(
	struct rt_wdb *fp,
	const char *name,
	unsigned char	mode,
	unsigned char	orientation,
	unsigned char	error_mode,	/**<  may be used to indicate error handling (ignored for now) */
	int		num_vertices,
	int		num_faces,
	fastf_t		*vertices,	/**<  array of floats for vertices [num_vertices*3] */
	int		*faces,		/**<  array of ints for faces [num_faces*3] */
	fastf_t		*thickness,	/**<  array of plate mode thicknesses (corresponds to array of faces)
					 * NULL for modes RT_BOT_SURFACE and RT_BOT_SOLID.
					 */
	struct bu_bitv	*face_mode );	/**<  a flag for each face indicating thickness is appended to hit point,
					 * otherwise thickness is centered about hit point
					 */
WDB_EXPORT int
mk_bot_w_normals(
	struct rt_wdb *fp,
	const char *name,
	unsigned char	mode,
	unsigned char	orientation,
	unsigned char	flags,
	int		num_vertices,
	int		num_faces,
	fastf_t		*vertices,	/**<  array of floats for vertices [num_vertices*3] */
	int		*faces,		/**<  array of ints for faces [num_faces*3] */
	fastf_t		*thickness,	/**<  array of plate mode thicknesses (corresponds to array of faces)
					 * NULL for modes RT_BOT_SURFACE and RT_BOT_SOLID.
					 */
	struct bu_bitv	*face_mode,	/**<  a flag for each face indicating thickness is appended to hit point,
					 * otherwise thickness is centered about hit point
					 */
	int		num_normals,	/**<  number of unit normals in normals array */
	fastf_t		*normals,	/**<  array of floats for normals [num_normals*3] */
	int		*face_normals );	/**<  array of ints (indices into normals array), must have 3*num_faces entries */

/* brep.cpp */
WDB_EXPORT int mk_brep( struct rt_wdb* wdbp, const char* name, ON_Brep* brep );

/* nurb.c */
WDB_EXPORT int mk_bspline( struct rt_wdb *wdbp, const char *name, struct face_g_snurb **surfs );

/* nmg.c */
WDB_EXPORT int mk_nmg( struct rt_wdb *filep, const char *name, struct model *m );
WDB_EXPORT int mk_bot_from_nmg( struct rt_wdb *ofp, const char *name, struct shell *s );

#define write_shell_as_polysolid(ofp,name,s)	mk_bot_from_nmg(ofp,name,s)

/* skt.c */
WDB_EXPORT int mk_sketch(
	struct rt_wdb *fp,
	const char *name,
	struct rt_sketch_internal *skt );

/* extr.c */
WDB_EXPORT int mk_extrusion(
	struct rt_wdb *fp,
	const char *name,
	const char *sketch_name,
	const point_t V,
	const vect_t h,
	const vect_t u_vec,
	const vect_t v_vec,
	int keypoint );

/* cline.c */
WDB_EXPORT int mk_cline(
	struct rt_wdb *fp,
	const char *name,
	const point_t V,
	const vect_t height,
	fastf_t radius,
	fastf_t thickness );

/* pipe.c */
WDB_EXPORT WDB_EXTERN(int mk_particle, (struct rt_wdb *fp, const char *name, point_t vertex,
			vect_t height, double vradius, double hradius) );
WDB_EXPORT WDB_EXTERN(int mk_pipe, (struct rt_wdb *fp, const char *name, struct bu_list *headp) );
WDB_EXPORT void mk_pipe_free( struct bu_list *headp );
WDB_EXPORT void mk_add_pipe_pt(
	struct bu_list *headp,
	const point_t coord,
	double od,
	double id,
	double bendradius );
WDB_EXPORT void mk_pipe_init( struct bu_list *headp );

/* strsol primitives */
WDB_EXPORT WDB_EXTERN(int mk_dsp, (struct rt_wdb *fp, const char *name, const char *file,
			int xdim, int ydim, const matp_t mat));
WDB_EXPORT WDB_EXTERN(int mk_ebm, (struct rt_wdb *fp, const char *name, const char *file,
			int xdim, int ydim, fastf_t tallness, const matp_t mat));
WDB_EXPORT WDB_EXTERN(int mk_vol, (struct rt_wdb *fp, const char *name, const char *file,
			int xdim, int ydim, int zdim, int lo, int hi,
			const vect_t cellsize, const matp_t mat));
WDB_EXPORT WDB_EXTERN(int mk_submodel, (struct rt_wdb *fp, const char *name, const char *file,
			const char *treetop, int meth));
#define mk_strsol(fp,name,solid,arg)	+++error_obsolete_libwdb_routine+++

/*
 *  The polysolid has been replaced by the BoT.
 *  Automatic conversion is provided by rt_pg_to_bot()
 */
#define mk_polysolid(fp,name)	+++error_obsolete_libwdb_routine+++
#define mk_poly(fp,npts,verts,norms)	+++error_obsolete_libwdb_routine+++
#define mk_fpoly(fp,npts,verts)	+++error_obsolete_libwdb_routine+++

/* mater.c */
WDB_EXPORT int mk_write_color_table( struct rt_wdb *ofp );


/* These routines have been replaced by the construction routines below */
#define mk_rcomb(fp,name,len,reg,shadername,mparam,rgb,id,air,mater,los,flag)	+++error_obsolete_libwdb_routine+++
#define mk_fcomb(fp,name,len,reg)				+++error_obsolete_libwdb_routine+++
#define mk_memb(fp,name,map,op)					+++error_obsolete_libwdb_routine+++

/*
 *  Combination (region&group) construction routines
 *
 *  First you build a list of nodes with mk_addmember,
 *  then you output the combination.
 */
WDB_EXPORT WDB_EXTERN (struct wmember *mk_addmember,
		       (const char	*name,
			struct bu_list	*headp,
			mat_t		mat,
			int		op));

#define mk_lcomb(_fp,_name,_headp,_rf,_shadername,_shaderargs,_rgb,_inh)	\
	mk_comb(_fp,_name,&((_headp)->l),_rf,_shadername,_shaderargs,\
		_rgb,0,0,0,0,_inh,0,0)

/* mk_lrcomb() would not append, and did not have GIFT semantics */
/* mk_lrcomb() had (struct wmember *) head, need (struct bu_list *) */
#define mk_lrcomb(fp, name, _headp, region_flag, shadername, shaderargs, rgb, id, air, material, los, inherit_flag )	\
	mk_comb( fp, name, &((_headp)->l), region_flag, shadername, shaderargs, \
		rgb, id, air, material, los, inherit_flag, 0, 0 )

WDB_EXPORT int mk_comb(
	struct rt_wdb		*wdbp,
	const char		*combname,
	struct bu_list		*headp,		/**<  Made by mk_addmember() */
	int			region_kind,	/**<  1 => region.  'P' and 'V' for FASTGEN */
	const char		*shadername,	/**<  shader name, or NULL */
	const char		*shaderargs,	/**<  shader args, or NULL */
	const unsigned char	*rgb,		/**<  NULL => no color */
	int			id,		/**<  region_id */
	int			air,		/**<  aircode */
	int			material,	/**<  GIFTmater */
	int			los,
	int			inherit,
	int			append_ok,	/**<  0 = obj must not exit */
	int			gift_semantics);	/**<  0 = pure, 1 = gift */

/** Convenience routines for quickly making combinations */
WDB_EXPORT int mk_comb1( struct rt_wdb *fp,
	const char *combname,
	const char *membname,
	int regflag );
WDB_EXPORT int
mk_region1(
	struct rt_wdb *fp,
	const char *combname,
	const char *membname,
	const char *shadername,
	const char *shaderargs,
	const unsigned char *rgb );

#define mk_fastgen_region(fp,name,headp,mode,shadername,shaderargs,rgb,id,air,material,los,inherit)	\
	mk_comb(fp,name,headp,mode,shadername,shaderargs,rgb,id,air,\
		material,los,inherit,0,0)


/* Values for wm_op.  These must track db.h */
#define WMOP_INTERSECT	'+'
#define WMOP_SUBTRACT	'-'
#define WMOP_UNION	'u'

/* Convienient definitions */
#define mk_lfcomb(fp,name,headp,region)		mk_lcomb( fp, name, headp, \
	region, (char *)0, (char *)0, (unsigned char *)0, 0 );

/*
 *  Routines to establish conversion factors
 */
WDB_EXPORT WDB_EXTERN(int mk_conversion, (char *units_string) );
WDB_EXPORT WDB_EXTERN(int mk_set_conversion, (double val) );

/**
 * This internal variable should not be directly modified;
 * call mk_conversion() or mk_set_conversion() instead.
 */
WDB_EXPORT extern double	mk_conv2mm;		/**< @@brief Conversion factor to mm */

/**
 *  Set this variable to either 4 or 5, depending on which version of
 *  the database you wish to write.
 */
WDB_EXPORT extern int	mk_version;		/**< @@brief  Which version database to write */

/*
 *  Internal routines
 */
WDB_EXPORT void mk_freemembers( struct bu_list *headp );

#define mk_fwrite_internal(fp,name,ip)		+++error_obsolete_libwdb_routine+++
#define mk_export_fwrite(wdbp,name,gp,id)	wdb_export(wdbp,name,gp,id,mk_conv2mm)

/*
 *	Dynamic geometry routines
 */
WDB_EXPORT WDB_EXTERN( int make_hole, ( struct rt_wdb *wdbp,
			     point_t hole_start,
			     vect_t hole_depth,
			     fastf_t hole_radius,
			     int num_objs,
			     struct directory **dp ) );

WDB_EXPORT WDB_EXTERN( int make_hole_in_prepped_regions, ( struct rt_wdb *wdbp,
						struct rt_i *rtip,
						point_t hole_start,
						vect_t hole_depth,
						fastf_t radius,
						struct bu_ptbl *regions ) );


__END_DECLS

#endif /* __WDB_H__ */

/** @@} */
/*
 * Local Variables:
 * mode: C
 * tab-width: 8
 * c-basic-offset: 4
 * indent-tabs-mode: t
 * End:
 * ex: shiftwidth=4 tabstop=8
 */
@


14.23
log
@clean up the header protections so that they are all now more consistent with one another via use of __HEADER_H__ for the define names.
@
text
@a33 5
 *  @@par Source
 *	SECAD/VLD Computing Consortium, Bldg 394
 *	The U. S. Army Ballistic Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005
 *
@


14.22
log
@get rid of RCS variables from the public header files.  this is done in part to reduce recompilation during interface changes, but also to move towards not relying on or publishing the information contained in the variables interface-wise. (they're fine for c sources and private headers)
@
text
@a53 2
#ifndef WDB_H
#define WDB_H seen
d55 2
a56 7
#ifndef SEEN_BU_H
# include "bu.h"
#endif

#ifndef SEEN_BN_H
# include "bn.h"
#endif
d58 1
a58 3
#ifndef RAYTRACE_H
# include "raytrace.h"
#endif
d60 5
a64 3
#ifndef SEEN_RTGEOM_H
# include "rtgeom.h"
#endif
d500 2
a501 1
#endif /* WDB_H */
@


14.21
log
@remove the conditional compilation of the mk_brep function
@
text
@a52 2
 *
 *  $Header: /cvsroot/brlcad/brlcad/include/wdb.h,v 14.20 2007/02/15 21:20:55 jlowenz Exp $
d54 3
a72 3
#ifndef WDB_H
#define WDB_H seen

@


14.20
log
@Add mk_brep function
@
text
@d54 1
a54 1
 *  $Header: /cvsroot/brlcad/brlcad/include/wdb.h,v 14.19 2007/01/27 01:01:40 brlcad Exp $
a316 1
#ifdef OBJ_BREP
a318 3
#else
#define mk_brep(wdbp,name,brep) +++error_opennurbs_not_built+++
#endif
@


14.19
log
@ws, test three
@
text
@d54 1
a54 1
 *  $Header: /cvsroot/brlcad/brlcad/include/wdb.h,v 14.18 2007/01/23 01:13:20 brlcad Exp $
d317 6
@


14.18
log
@Sweeping license updates.  Documentation is fully relicensed to the BSD Documentation License (a minor variant of the FreeBSD Documentation License and BSD License).  All GPL code (mostly application code) is converted to the LGPL and now also specifically declares version 2.1, revoking the blank check to the FSF.  The intent of these sweeping changes are to simplify the licensing terms and increase overall flexibility of use, both externally (to users for their purposes) and internally (to allow application code to be migrated to libraries without creating GPL libraries).  As a collective work, BRL-CAD is now LGPL.
@
text
@d54 1
a54 1
 *  $Header: /cvsroot/brlcad/brlcad/include/wdb.h,v 14.17 2007/01/21 04:45:40 brlcad Exp $
a517 1

@


14.17
log
@ugh, what tedium.  put some effort towards cleaning up the doxygen labels and making the headers more consistent.  also exclusively using @@ for doxygen instead of \ to try to keep things more consistent.
@
text
@d9 1
a9 2
 * as published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
d14 1
a14 1
 * Library General Public License for more details.
d54 1
a54 1
 *  $Header: /cvsroot/brlcad/brlcad/include/wdb.h,v 14.16 2007/01/20 14:36:40 brlcad Exp $
@


14.16
log
@update copyright to 2007
@
text
@d22 1
a22 1
/*@@{*/
d55 1
a55 1
 *  $Header: /cvsroot/brlcad/brlcad/include/wdb.h,v 14.15 2006/09/18 05:24:07 lbutler Exp $
d509 1
a509 1
/*@@}*/
@


14.15
log
@Doxygen updates
@
text
@d4 1
a4 1
 * Copyright (c) 1988-2006 United States Government as represented by
d55 1
a55 1
 *  $Header: /cvsroot/brlcad/brlcad/include/wdb.h,v 14.14 2006/08/31 04:41:20 lbutler Exp $
@


14.14
log
@miscelaneous changes to support doxygen
@
text
@d21 2
d32 1
a32 1
 *  Author -
d35 1
a35 1
 *  Source -
d41 1
a41 1
 *	# include <stdio.h>	/_* For FILE * *_/
d55 1
a55 1
 *  $Header: /cvsroot/brlcad/brlcad/include/wdb.h,v 14.13 2006/07/14 19:20:37 erikgreenwald Exp $
d109 2
a110 2
	int		wm_op;		/* Boolean operation */
	mat_t		wm_mat;		/* XXX Should be matp_t !!! */
d123 5
a127 5
	struct bu_list	l;		/* doubly linked list support */
	point_t		pp_coord;	/* "control" point for pipe solid */
	fastf_t		pp_id;		/* inner diam, <=0 if solid (wire) */
	fastf_t		pp_od;		/* pipe outer diam */
	fastf_t		pp_bendradius;	/* bend radius to use for a bend at this point */
d136 1
a136 1
	fastf_t		fldstr;		/* field strength */
d139 1
a139 1
#define WDB_METABALLPT_MAGIC	0x6D627074	/* mbpt */
d286 1
a286 1
	unsigned char	error_mode,	/* may be used to indicate error handling (ignored for now) */
d289 3
a291 3
	fastf_t		*vertices,	/* array of floats for vertices [num_vertices*3] */
	int		*faces,		/* array of ints for faces [num_faces*3] */
	fastf_t		*thickness,	/* array of plate mode thicknesses (corresponds to array of faces)
d294 1
a294 1
	struct bu_bitv	*face_mode );	/* a flag for each face indicating thickness is appended to hit point,
d306 3
a308 3
	fastf_t		*vertices,	/* array of floats for vertices [num_vertices*3] */
	int		*faces,		/* array of ints for faces [num_faces*3] */
	fastf_t		*thickness,	/* array of plate mode thicknesses (corresponds to array of faces)
d311 1
a311 1
	struct bu_bitv	*face_mode,	/* a flag for each face indicating thickness is appended to hit point,
d314 3
a316 3
	int		num_normals,	/* number of unit normals in normals array */
	fastf_t		*normals,	/* array of floats for normals [num_normals*3] */
	int		*face_normals );	/* array of ints (indices into normals array), must have 3*num_faces entries */
d421 8
a428 8
	struct bu_list		*headp,		/* Made by mk_addmember() */
	int			region_kind,	/* 1 => region.  'P' and 'V' for FASTGEN */
	const char		*shadername,	/* shader name, or NULL */
	const char		*shaderargs,	/* shader args, or NULL */
	const unsigned char	*rgb,		/* NULL => no color */
	int			id,		/* region_id */
	int			air,		/* aircode */
	int			material,	/* GIFTmater */
d431 2
a432 2
	int			append_ok,	/* 0 = obj must not exit */
	int			gift_semantics);	/* 0 = pure, 1 = gift */
d434 1
a434 1
/* Convenience routines for quickly making combinations */
d468 1
a468 1
/*
d472 1
a472 1
WDB_EXPORT extern double	mk_conv2mm;		/* Conversion factor to mm */
d474 1
a474 1
/*
d478 1
a478 1
WDB_EXPORT extern int	mk_version;		/* Which version database to write */
d509 1
a509 1

d519 1
@


14.13
log
@store metaball control points in a bu_list of structs instead of an array of homogenous vectors
@
text
@d39 10
a48 10
 *	#include <stdio.h>	/_* For FILE * *_/
 *	#include <math.h>
 *	#include "machine.h"	/_* For fastf_t definition on this machine *_/
 *	#include "bu.h"
 *	#include "vmath.h"	/_* For vect_t definition *_/
 *	#include "nmg.h"	/_* OPTIONAL, precedes wdb.h when used *_/
 *	#include "raytrace.h"	/_* OPTIONAL, precedes wdb.h when used *_/
 *	#include "nurb.h"	/_* OPTIONAL, precedes wdb.h when used *_/
 *	#include "rtgeom.h"
 *	#include "wdb.h"
d53 1
a53 1
 *  $Header: /cvsroot/brlcad/brlcad/include/wdb.h,v 14.12 2006/01/18 06:46:10 brlcad Exp $
@


14.12
log
@update copyright to 2006
@
text
@d53 1
a53 1
 *  $Header: /cvsroot/brlcad/brlcad/include/wdb.h,v 14.11 2005/10/23 04:44:26 brlcad Exp $
d131 8
@


14.11
log
@trailing ws
@
text
@d4 1
a4 1
 * Copyright (C) 1988-2005 United States Government as represented by
d53 1
a53 1
 *  $Header: /cvsroot/brlcad/brlcad/include/wdb.h,v 14.10 2005/06/12 22:01:31 brlcad Exp $
@


14.10
log
@use long instead of an off_t for mk_binunif since the struct is a long now anyways
@
text
@d32 1
a32 1
 *  
d53 1
a53 1
 *  $Header: /cvsroot/brlcad/brlcad/include/wdb.h,v 14.9 2005/05/28 02:14:49 brlcad Exp $
d144 1
a144 1
WDB_EXPORT int mk_grip( 
d466 1
a466 1
 *  the database you wish to write. 
@


14.10.6.1
log
@merge changes from HEAD aka rel-7-6-4 to the rel-7-6-branch just in case someone peeks a gander or tries to continue/build the branch
@
text
@d32 1
a32 1
 *
d53 1
a53 1
 *  $Header$
d144 1
a144 1
WDB_EXPORT int mk_grip(
d466 1
a466 1
 *  the database you wish to write.
@


14.9
log
@convert WIN32 define checks to _WIN32 since the latter is one of the defaults provided by MSVC whereas the prior is not.  remove some of them related to header inclusions using HAVE_ defines instead.
@
text
@d53 1
a53 1
 *  $Header: /cvsroot/brlcad/brlcad/include/wdb.h,v 14.8 2005/05/08 17:57:51 brlcad Exp $
d142 1
a142 1
/* wdb.c */
d264 1
a264 1
WDB_EXPORT WDB_EXTERN(int mk_binunif, (struct rt_wdb *fp, const char *name, const genptr_t data, wdb_binunif data_type, off_t count) );
@


14.8
log
@Rename librt's mk_binunif function to rt_mk_binunif and add a
mk_binunif interface to libwdb.  The libwdb interface supports reading
from either a file or from data already loaded into memory.  Since the
count needed for the memcpy, we also modify the binunif to accept a
value count so that we know how many values to read from either memory
or disk (partial file loading, for example).
@
text
@d53 1
a53 1
 *  $Header: /cvsroot/brlcad/brlcad/include/wdb.h,v 14.7 2005/05/08 05:28:00 brlcad Exp $
d77 1
a77 1
#  if defined(WIN32) && !defined(__CYGWIN__) && defined(BRLCAD_DLL)
@


14.7
log
@consolidate the __cplusplus external declaration sections that protect C functions from C++ name mangling by using the same __BEGIN_DECLS and __END_DECLS macros in our headers (3rd party are mostly left alone).  works indentation a little too.
@
text
@d53 1
a53 1
 *  $Header: /cvsroot/brlcad/brlcad/include/wdb.h,v 14.6 2005/05/08 04:56:18 brlcad Exp $
d222 44
@


14.6
log
@strsol primitives section reflects location change
@
text
@d53 1
a53 1
 *  $Header: /cvsroot/brlcad/brlcad/include/wdb.h,v 14.5 2005/03/28 05:22:29 bob1961 Exp $
d74 1
a74 3
#ifdef __cplusplus
extern "C" {
#endif
d77 9
a85 9
#   if defined(WIN32) && !defined(__CYGWIN__) && defined(BRLCAD_DLL)
#      ifdef WDB_EXPORT_DLL
#         define WDB_EXPORT __declspec(dllexport)
#      else
#         define WDB_EXPORT __declspec(dllimport)
#      endif
#   else
#      define WDB_EXPORT
#   endif
d95 2
a96 2
#	define	WDB_EXTERN(type_and_name,args)	extern type_and_name args
#	define	WDB_ARGS(args)			args
d98 2
a99 2
#	define	WDB_EXTERN(type_and_name,args)	extern type_and_name()
#	define	WDB_ARGS(args)			()
d452 1
a452 3
#ifdef __cplusplus
}
#endif
@


14.5
log
@Add code to allow libwdb to be a Windows DLL
@
text
@d53 1
a53 1
 *  $Header: /cvsroot/brlcad/brlcad/include/wdb.h,v 14.4 2005/01/30 20:30:12 brlcad Exp $
d315 1
a315 1
/* strsol.c */
a322 1
#define mk_strsol(fp,name,solid,arg)	+++error_obsolete_libwdb_routine+++
d325 1
@


14.4
log
@update copyright to 2005
@
text
@d53 1
a53 1
 *  $Header: /cvsroot/brlcad/brlcad/include/wdb.h,v 14.3 2004/12/21 06:23:18 morrison Exp $
d78 12
d134 3
a136 3
WDB_EXTERN(int mk_id, (struct rt_wdb *fp, const char *title) );
WDB_EXTERN(int mk_id_units, (struct rt_wdb *fp, const char *title, const char *units) );
int mk_id_editunits(
d145 2
a146 2
WDB_EXTERN(int mk_half, (struct rt_wdb *fp, const char *name, const vect_t norm, double d) );
int mk_grip( 
d152 1
a152 1
WDB_EXTERN(int mk_rpp, (struct rt_wdb *fp, const char *name, const point_t min,
d154 1
a154 1
WDB_EXTERN(int mk_wedge, (struct rt_wdb *fp, const char *name, const point_t vert,
d158 3
a160 3
WDB_EXTERN(int mk_arb4, (struct rt_wdb *fp, const char *name, const fastf_t *pts4) );
WDB_EXTERN(int mk_arb8, (struct rt_wdb *fp, const char *name, const fastf_t *pts8) );
WDB_EXTERN(int mk_sph, (struct rt_wdb *fp, const char *name, const point_t center,
d162 1
a162 1
WDB_EXTERN(int mk_ell, (struct rt_wdb *fp, const char *name, const point_t center,
d164 1
a164 1
WDB_EXTERN(int mk_tor, (struct rt_wdb *fp, const char *name, const point_t center,
d166 1
a166 1
WDB_EXTERN(int mk_rcc, (struct rt_wdb *fp, const char *name, const point_t base,
d168 1
a168 1
WDB_EXTERN(int mk_tgc, (struct rt_wdb *fp, const char *name, const point_t base,
d171 1
a171 1
WDB_EXTERN(int mk_cone, (struct rt_wdb *fp, const char *name, const point_t base,
d175 1
a175 1
WDB_EXTERN(int mk_trc_h, (struct rt_wdb *fp, const char *name, const point_t base,
d177 1
a177 1
WDB_EXTERN(int mk_trc_top, (struct rt_wdb *fp, const char *name, const point_t ibase,
d179 1
a179 1
int mk_rpc(
d186 1
a186 1
int mk_rhc(
d194 1
a194 1
int mk_epa(
d202 1
a202 1
int mk_ehy(
d211 1
a211 1
int mk_eto(
d220 2
a221 2
WDB_EXTERN(int mk_arbn, (struct rt_wdb *fp, const char *name, int neqn, plane_t eqn[]) );
WDB_EXTERN(int mk_ars, (struct rt_wdb *fp, const char *name, int ncurves, int pts_per_curve,
d228 1
a228 1
int
d245 1
a245 1
int
d268 1
a268 1
int mk_bspline( struct rt_wdb *wdbp, const char *name, struct face_g_snurb **surfs );
d271 2
a272 2
int mk_nmg( struct rt_wdb *filep, const char *name, struct model *m );
int mk_bot_from_nmg( struct rt_wdb *ofp, const char *name, struct shell *s );
d277 1
a277 1
int mk_sketch(
d283 1
a283 1
int mk_extrusion(
d294 1
a294 1
int mk_cline(
d303 1
a303 1
WDB_EXTERN(int mk_particle, (struct rt_wdb *fp, const char *name, point_t vertex,
d305 3
a307 3
WDB_EXTERN(int mk_pipe, (struct rt_wdb *fp, const char *name, struct bu_list *headp) );
void mk_pipe_free( struct bu_list *headp );
void mk_add_pipe_pt(
d313 1
a313 1
void mk_pipe_init( struct bu_list *headp );
d316 1
a316 1
WDB_EXTERN(int mk_dsp, (struct rt_wdb *fp, const char *name, const char *file,
d318 1
a318 1
WDB_EXTERN(int mk_ebm, (struct rt_wdb *fp, const char *name, const char *file,
d320 1
a320 1
WDB_EXTERN(int mk_vol, (struct rt_wdb *fp, const char *name, const char *file,
d324 1
a324 1
WDB_EXTERN(int mk_submodel, (struct rt_wdb *fp, const char *name, const char *file,
a326 4
/* binary_obj.c */
WDB_EXTERN(int mk_binunif, (struct rt_wdb *wdbp, const char *obj_name,
		    const char *file_name, unsigned int minor_type));

d336 1
a336 1
int mk_write_color_table( struct rt_wdb *ofp );
d350 5
a354 5
struct wmember *mk_addmember(
	const char	*name,
	struct bu_list	*headp,
	mat_t mat,
	int		op);
d366 1
a366 1
int mk_comb(
d383 1
a383 1
int mk_comb1( struct rt_wdb *fp,
d387 1
a387 1
int
d413 2
a414 2
WDB_EXTERN(int mk_conversion, (char *units_string) );
WDB_EXTERN(int mk_set_conversion, (double val) );
d420 1
a420 1
extern double	mk_conv2mm;		/* Conversion factor to mm */
d426 1
a426 1
extern int	mk_version;		/* Which version database to write */
d431 1
a431 1
void mk_freemembers( struct bu_list *headp );
d439 1
a439 1
WDB_EXTERN( int make_hole, ( struct rt_wdb *wdbp,
d446 1
a446 1
WDB_EXTERN( int make_hole_in_prepped_regions, ( struct rt_wdb *wdbp,
@


14.3
log
@use perl to M-q format wrapping
@
text
@d4 1
a4 1
 * Copyright (c) 1988-2004 United States Government as represented by
d53 1
a53 1
 *  $Header: /cvs/brlcad/include/wdb.h,v 14.2 2004/12/21 06:06:39 butler Exp $
@


14.2
log
@LGPL license changes
@
text
@d17 2
a18 2
 * You should have received a copy of the GNU Lesser General Public License
 * along with this file; see the file named COPYING for more
d53 1
a53 1
 *  $Header: /cvs/brlcad/include/wdb.h,v 14.1 2004/11/16 19:42:10 morrison Exp $
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d1 21
a21 2
/*
 *			W D B . H
a36 4
 *  
 *  Copyright Notice -
 *	This software is Copyright (C) 1988-2004 by the United States Army.
 *	All rights reserved.
d53 1
a53 1
 *  $Header: /cvs/brlcad/include/wdb.h,v 1.2 2004/10/04 14:00:44 morrison Exp $
@


1.2
log
@lets not talk about the previous h/ header directory any more
@
text
@d38 1
a38 1
 *  $Header: /cvs/brlcad/include/wdb.h,v 1.1 2004/05/24 04:10:51 morrison Exp $
d436 10
@


1.1
log
@moved/renamed from top-level h/ to top-level include/
@
text
@d38 1
a38 1
 *  $Header$
d92 1
a92 1
 * XXX Why isn't this in h/rtgeom.h?
@

