head	14.14;
access;
symbols
	rel-7-10-4:14.14
	STABLE:14.14.0.2
	stable-branch:14.6
	rel-7-10-2:14.14
	rel-7-10-0:14.14
	rel-7-8-4:14.10
	rel-7-8-2:14.9
	rel-7-8-0:14.9
	trimnurbs-branch:14.9.0.2
	help:14.9
	temp_tag:14.8
	bobWinPort-20051223-freeze:14.6
	postmerge-20051223-bobWinPort:14.8
	premerge-20051223-bobWinPort:14.8
	rel-7-6-6:14.8
	rel-7-6-4:14.8
	rel-7-6-2:14.6
	rel-7-6-branch:14.6.0.6
	rel-7-6-0:14.6
	rel-7-4-2:14.6
	rel-7-4-branch:14.6.0.4
	bobWinPort:14.6.0.2
	rel-7-4-0:14.6
	rel-7-2-6:14.6
	rel-7-2-4:14.6
	rel-7-2-2:14.6
	rel-7-2-0:14.5
	rel-7-0-4:14.4
	rel-7-0-2:14.4
	rel-7-0-1:14.4
	opensource-post:14.4
	opensource-pre:1.1
	rel-7-0-branch:1.1.0.2
	rel-7-0:1.1;
locks; strict;
comment	@ * @;


14.14
date	2007.01.27.01.01.40;	author brlcad;	state Exp;
branches;
next	14.13;

14.13
date	2007.01.23.01.13.20;	author brlcad;	state Exp;
branches;
next	14.12;

14.12
date	2007.01.21.04.45.40;	author brlcad;	state Exp;
branches;
next	14.11;

14.11
date	2007.01.20.14.36.40;	author brlcad;	state Exp;
branches;
next	14.10;

14.10
date	2006.09.18.05.24.07;	author lbutler;	state Exp;
branches;
next	14.9;

14.9
date	2006.01.18.06.46.10;	author brlcad;	state Exp;
branches;
next	14.8;

14.8
date	2005.10.23.04.44.26;	author brlcad;	state Exp;
branches;
next	14.7;

14.7
date	2005.09.19.17.32.46;	author brlcad;	state Exp;
branches;
next	14.6;

14.6
date	2005.03.28.06.31.27;	author bob1961;	state Exp;
branches
	14.6.6.1;
next	14.5;

14.5
date	2005.01.30.20.30.11;	author brlcad;	state Exp;
branches;
next	14.4;

14.4
date	2004.12.21.06.38.18;	author morrison;	state Exp;
branches;
next	14.3;

14.3
date	2004.12.21.06.23.18;	author morrison;	state Exp;
branches;
next	14.2;

14.2
date	2004.12.21.06.06.39;	author butler;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.10;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.24.04.10.51;	author morrison;	state Exp;
branches;
next	;

14.6.6.1
date	2005.11.13.13.46.10;	author brlcad;	state Exp;
branches;
next	;


desc
@@


14.14
log
@ws, test three
@
text
@/*                     R T P R I V A T E . H
 * BRL-CAD
 *
 * Copyright (c) 1985-2007 United States Government as represented by
 * the U.S. Army Research Laboratory.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * version 2.1 as published by the Free Software Foundation.
 *
 * This library is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this file; see the file named COPYING for more
 * information.
 */
/** @@addtogroup rt */
/** @@{ */
/** @@file rtprivate.h
 *
 *@@brief
 *	Things to support the "rt" program and the link to liboptical
 *
 */

#ifndef __RTPRIVATE_H__
#define __RTPRIVATE_H__

#include "common.h"

#include <stdio.h>

#include "raytrace.h"
#include "optical.h"

/* default parseable title length  (v4 was 132) */
#define RT_BUFSIZE 1024

/* do.c */
extern void do_ae(double azim, double elev);
extern int do_frame( int framenumber );
extern void def_tree( register struct rt_i *rtip );
extern void do_prep( struct rt_i *rtip );
extern int old_way( FILE *fp );

/* opt.c */
extern int get_args( int argc, char **argv );
extern int		query_x;
extern int		query_y;
extern int		Query_one_pixel;
extern int		query_rdebug;
extern int		query_debug;
extern int		benchmark;

/* view.c */
#if 0
extern void view_eol(register struct application *ap);
extern void do_run( int a, int b );
extern void view_2init( register struct application *ap, char	*framename);
extern void view_setup(struct rt_i	*rtip);
extern void view_pixel(register struct application *ap);
extern void view_cleanup(struct rt_i	*rtip);
extern int view_end(struct application *ap);
extern int view_init(register struct application *ap,
		     char *file,
		     char *obj,
		     int minus_o);
#else
extern void view_eol();
extern void do_run();
extern void view_2init();
extern void view_setup();
extern void view_pixel();
extern void view_cleanup();
extern void view_end();
extern int view_init();

#endif

#endif  /* __RTPRIVATE_H__ */
/** @@} */
/*
 * Local Variables:
 * mode: C
 * tab-width: 8
 * c-basic-offset: 4
 * indent-tabs-mode: t
 * End:
 * ex: shiftwidth=4 tabstop=8
 */
@


14.13
log
@Sweeping license updates.  Documentation is fully relicensed to the BSD Documentation License (a minor variant of the FreeBSD Documentation License and BSD License).  All GPL code (mostly application code) is converted to the LGPL and now also specifically declares version 2.1, revoking the blank check to the FSF.  The intent of these sweeping changes are to simplify the licensing terms and increase overall flexibility of use, both externally (to users for their purposes) and internally (to allow application code to be migrated to libraries without creating GPL libraries).  As a collective work, BRL-CAD is now LGPL.
@
text
@a93 1

@


14.12
log
@ugh, what tedium.  put some effort towards cleaning up the doxygen labels and making the headers more consistent.  also exclusively using @@ for doxygen instead of \ to try to keep things more consistent.
@
text
@d9 1
a9 2
 * as published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
d14 1
a14 1
 * Library General Public License for more details.
@


14.11
log
@update copyright to 2007
@
text
@d22 1
a22 1
/*@@{*/
d85 1
a85 1
/*@@}*/
@


14.10
log
@Doxygen updates
@
text
@d4 1
a4 1
 * Copyright (c) 1985-2006 United States Government as represented by
@


14.9
log
@update copyright to 2006
@
text
@d21 2
d25 1
d85 1
a85 1

d95 1
@


14.8
log
@trailing ws
@
text
@d4 1
a4 1
 * Copyright (C) 1985-2005 United States Government as represented by
@


14.7
log
@header wrapping foo, headers deps, and provide RT_BUFSIZE for default parseable title length
@
text
@d66 1
a66 1
		     char *file, 
@


14.6
log
@Add code to allow liboptical to be a Windows DLL
@
text
@a22 6
 */

/*	R T P R I V A T E . H  --- header file for the "rt" program
 *
 *
 *
d27 8
d37 3
d81 2
@


14.6.6.1
log
@merge changes from HEAD aka rel-7-6-4 to the rel-7-6-branch just in case someone peeks a gander or tries to continue/build the branch
@
text
@d23 6
a32 8
#ifndef __RTPRIVATE_H__
#define __RTPRIVATE_H__

#include "common.h"

#include <stdio.h>

#include "raytrace.h"
a34 3
/* default parseable title length  (v4 was 132) */
#define RT_BUFSIZE 1024

d61 1
a61 1
		     char *file,
a75 2
#endif  /* __RTPRIVATE_H__ */

@


14.5
log
@update copyright to 2005
@
text
@d33 1
a33 15
/* ../liboptical */
#include "shadefuncs.h"
#include "shadework.h"
extern void optical_shader_init(struct mfuncs	**headp);
/* stub functions useful for debugging */
extern int mlib_zero(), mlib_one();
extern void	mlib_void();


/* refract.c */
int
rr_render(register struct application *ap,
	  struct partition	*pp,
	  struct shadework	*swp);

a41 7
/* shade.c */
extern void
shade_inputs(struct application		*ap, 
	     const struct partition	*pp,
	     struct shadework		*swp,
	     int			want);

a75 115
/* wray.c */
extern void wray(register struct partition *pp,
		 register struct application *ap,
		 FILE *fp,
		 const vect_t	inormal);

extern void wraypts(vect_t	in,
		    vect_t	inorm,
		    vect_t	out,
		    int		id,
		    struct application *ap,
		    FILE	*fp);

extern void wraypaint(vect_t start,
		      vect_t norm,
		      int paint, 
		      struct application *ap,
		      FILE *fp);


/* material.c */
struct mfuncs *load_dynamic_shader(const char *material, const int mlen);
int mlib_setup( struct mfuncs **headp, struct region *rp, struct rt_i *rtip );
void mlib_free( struct region *rp );

/*
 *
 *  
 *  Debugging flags for thr RT program itself.
 *  These flags follow the "-X" (cap X) option to the RT program.
 *  librt debugging is separately controlled.
 *  
 *  Author -
 *	Michael John Muuss
 *  
 *  Source -
 *	SECAD/VLD Computing Consortium, Bldg 394
 *	The U. S. Army Ballistic Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005
 *  
 *  
 *  $Revision: 14.4 $
 */
extern int	rdebug;

/* When in production mode, no debug checking is performed, hence the 
 * R_DEBUG define causes sections of debug code to go "poof"
 */
#ifdef NO_DEBUG_CHECKING
#	define	R_DEBUG	0
#else
#	define	R_DEBUG	rdebug
#endif

/* These definitions are each for one bit */
/* Should be reogranized to put most useful ones first */
#define RDEBUG_HITS	0x00000001	/* 1 Print hits used by view() */
#define RDEBUG_MATERIAL	0x00000002	/* 2 Material properties */
#define RDEBUG_SHOWERR	0x00000004	/* 3 Colorful markers on errors */
#define RDEBUG_RTMEM	0x00000008	/* 4 Debug librt mem after startup */
#define RDEBUG_SHADE	0x00000010	/* 5 Shading calculation */
#define RDEBUG_PARSE	0x00000020	/* 6 Command parsing */
#define RDEBUG_LIGHT	0x00000040	/* 7 Debug lighting */
#define RDEBUG_REFRACT	0x00000080	/* 8 Debug reflection & refraction */

#define RDEBUG_STATS	0x00000200	/* 10 Print more statistics */
#define RDEBUG_RTMEM_END 0x00000400	/* 11 Print librt mem use on 'clean' */

/* These will cause binary debugging output */
#define RDEBUG_MISSPLOT	0x20000000	/* 30 plot(5) missed rays to stdout */
#define RDEBUG_RAYWRITE	0x40000000	/* 31 Ray(5V) view rays to stdout */
#define RDEBUG_RAYPLOT	0x80000000	/* 32 plot(5) rays to stdout */

/* Format string for rt_printb() */
#define RDEBUG_FORMAT	\
"\020\040RAYPLOT\037RAYWRITE\036MISSPLOT\
\013RTMEM_END\
\012STATS\010REFRACT\
\7LIGHT\6PARSE\5SHADE\4RTMEM\3SHOWERR\2MATERIAL\1HITS"


/*
 *	A Bit vector to determine how much stuff rt prints when not in
 *	debugging mode.
 *
 */
extern int	rt_verbosity;
/*	   flag_name		value		prints */
#define VERBOSE_LIBVERSIONS  0x00000001	/* Library version strings */
#define VERBOSE_MODELTITLE   0x00000002	/* model title */
#define VERBOSE_TOLERANCE    0x00000004	/* model tolerance */
#define VERBOSE_STATS	     0x00000008	/* stats about rt_gettrees() */
#define VERBOSE_FRAMENUMBER  0x00000010	/* current frame number */
#define VERBOSE_VIEWDETAIL   0x00000020	/* view specifications */
#define VERBOSE_LIGHTINFO    0x00000040	/* scene lights */
#define VERBOSE_INCREMENTAL  0x00000080	/* progressive/incremental state */
#define VERBOSE_MULTICPU     0x00000100	/* # of CPU's to be used */
#define VERBOSE_OUTPUTFILE   0x00000200	/* name of output image */

#define VERBOSE_FORMAT \
"\012OUTPUTFILE\011MULTICPU\010INCREMENTAL\7LIGHTINFO\6VIEWDETAIL\
\5FRAMENUMBER\4STATS\3TOLERANCE\2MODELTITLE\1LIBVERSIONS"

extern double AmbientIntensity;

struct floatpixel {
	double	ff_dist;		/* range to ff_hitpt[], <-INFINITY for miss */
	float	ff_hitpt[3];
	struct region *ff_regp;
	int	ff_frame;		/* >= 0 means pixel was reprojected */
	short	ff_x;			/* screen x,y coords of first location */
	short	ff_y;
	char	ff_color[3];
};

@


14.4
log
@remove the old copyright notice section
@
text
@d4 1
a4 1
 * Copyright (c) 1985-2004 United States Government as represented by
d138 1
a138 1
 *  $Revision: 14.3 $
@


14.3
log
@use perl to M-q format wrapping
@
text
@a136 3
 *  Copyright Notice -
 *	This software is Copyright (C) 1985-2004 by the United States Army.
 *	All rights reserved.
d138 1
a138 1
 *  $Revision: 14.2 $
@


14.2
log
@LGPL license changes
@
text
@d17 2
a18 2
 * You should have received a copy of the GNU Lesser General Public License
 * along with this file; see the file named COPYING for more
d141 1
a141 1
 *  $Revision: 14.1 $
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d1 24
d141 1
a141 1
 *  $Revision: 1.1 $
@


1.1
log
@moved/renamed from top-level h/ to top-level include/
@
text
@d117 1
a117 1
 *  $Revision$
d190 10
@

