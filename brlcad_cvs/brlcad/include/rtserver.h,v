head	14.11;
access;
symbols
	rel-7-10-4:14.11
	STABLE:14.11.0.2
	stable-branch:14.4
	rel-7-10-2:14.11
	rel-7-10-0:14.11
	rel-7-8-4:14.7
	rel-7-8-2:14.6
	rel-7-8-0:14.6
	trimnurbs-branch:14.6.0.2
	help:14.6
	temp_tag:14.5
	bobWinPort-20051223-freeze:14.5
	postmerge-20051223-bobWinPort:14.5
	premerge-20051223-bobWinPort:14.5
	rel-7-6-6:14.5
	rel-7-6-4:14.5
	rel-7-6-2:14.5
	rel-7-6-branch:14.5.0.6
	rel-7-6-0:14.5
	rel-7-4-2:14.5
	rel-7-4-branch:14.5.0.4
	bobWinPort:14.5.0.2
	rel-7-4-0:14.5
	rel-7-2-6:14.4
	rel-7-2-4:14.4
	rel-7-2-2:14.4
	rel-7-2-0:14.4
	rel-7-0-4:14.3
	rel-7-0-2:14.3
	rel-7-0-1:14.3
	opensource-post:14.3
	opensource-pre:1.3
	rel-7-0-branch:1.3.0.2
	rel-7-0:1.3;
locks; strict;
comment	@ * @;


14.11
date	2007.01.27.01.01.40;	author brlcad;	state Exp;
branches;
next	14.10;

14.10
date	2007.01.23.01.13.20;	author brlcad;	state Exp;
branches;
next	14.9;

14.9
date	2007.01.21.04.45.40;	author brlcad;	state Exp;
branches;
next	14.8;

14.8
date	2007.01.20.14.36.40;	author brlcad;	state Exp;
branches;
next	14.7;

14.7
date	2006.09.18.05.24.07;	author lbutler;	state Exp;
branches;
next	14.6;

14.6
date	2006.01.18.06.46.10;	author brlcad;	state Exp;
branches;
next	14.5;

14.5
date	2005.07.12.20.04.35;	author johnranderson;	state Exp;
branches;
next	14.4;

14.4
date	2005.01.30.20.30.11;	author brlcad;	state Exp;
branches;
next	14.3;

14.3
date	2004.12.21.06.23.18;	author morrison;	state Exp;
branches;
next	14.2;

14.2
date	2004.12.21.06.06.39;	author butler;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.10;	author morrison;	state Exp;
branches;
next	1.3;

1.3
date	2004.09.15.12.08.04;	author jra;	state Exp;
branches;
next	1.2;

1.2
date	2004.07.20.12.08.09;	author jra;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.24.04.10.51;	author morrison;	state Exp;
branches;
next	;


desc
@@


14.11
log
@ws, test three
@
text
@/*                      R T S E R V E R . H
 * BRL-CAD
 *
 * Copyright (c) 2004-2007 United States Government as represented by
 * the U.S. Army Research Laboratory.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * version 2.1 as published by the Free Software Foundation.
 *
 * This library is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this file; see the file named COPYING for more
 * information.
 */
/** @@addtogroup rtserver */
/** @@{ */
/** @@file rtserver.h
 * @@brief
 *	header file for the rtserver
 *
 *  @@author: John R. Anderson
 *
 *  In order to use the rtserver, the BRL-CAD model must include an opaque binary object named "rtserver_data"
 *  This object must contain ASCII data consisting of lines of the form:
 *	assembly_name1 { object1 object2 object3 ...} key1 value1 key2 value2 ...
 *  Where assembly names are names of assemblies to be used for raytracing or articulation and
 *  the list of objects for each assembly specifies the BRL-CAD objects in that assembly. The
 *  assembly names do not need to be names of objects that already exist in the BRL-CAD model.
 *  At least one assembly named "rtserver_tops" must exist (this will be used for raytracing when
 *  no articulation is to be done. Each assembly must appear on its own line and must have at least
 *  one object in its list of objects.  If the assembly name has embedded spaces, it must be surrounded
 *  by "{" and "}". Each line is a series of key/value pairs with the first key being the assembly name.
 *  optional keys are:
 *	key_pt - value is the center of rotation for this assembly
 *	xrotate - values are the rotation limits (max min initial) about the x-axis (degrees). Default is no rotation allowed
 *	yrotate - values are the rotation limits (max min initial) about the y-axis (degrees). Default is no rotation allowed
 *	zrotate - values are the rotation limits (max min initial) about the z-axis (degrees). Default is no rotation allowed
 *	xtranslate - values are the limits (max min) of translation along the x-axis (mm). Default is no translation allowed.
 *	ytranslate - values are the limits (max min) of translation along the y-axis (mm). Default is no translation allowed.
 *	ztranslate - values are the limits (max min) of translation along the z-axis (mm). Default is no translation allowed.
 *	children - values are other assemblies that are rigidly attached to this assembly (The children will move
 *		with their parent).
 *
 *  An empty value for the translation keys implies unlimited translation is allowed.
 *
 */


struct rtserver_job {
	struct bu_list l;		/* for linking */
	int exit_flag;			/* flag, non-zero means the running thread should exit */
	int sessionid;			/* index into sessions (rts_geometry array) */
	int rtjob_id;			/* identifying number, assigned by the rt server */
	int maxHits;			/* Max number of hits to consider along each ray (zero means take all of them) */
	struct bu_ptbl rtjob_rays;	/* list of pointers to rays to be fired */
};

struct ray_hit {
	struct bu_list l;
	struct region *regp;		/* pointer to containing region */
	int comp_id;			/* index into component list */
	fastf_t hit_dist;		/* distance along ray to hit point */
	fastf_t los;			/* line of sight distance through this component */
	vect_t enter_normal;		/* normal vector at entrance hit */
	vect_t exit_normal;		/* normal vector at exit hit */
};

struct ray_result {
	struct bu_list l;
	struct xray the_ray;		/* the originating ray */
	struct ray_hit hitHead;		/* the list of components hit along this ray */
};

struct rtserver_result {
	struct bu_list l;		/* for linked list */
	int got_some_hits;		/* flag 0-> no hits in results */
	struct rtserver_job *the_job;	/* the originating job */
	struct ray_result resultHead;	/* the list of results, one for each ray */
};

struct rtserver_rti {
	struct rt_i *rtrti_rtip;	/* pointer to an rti structure */
	char *rtrti_name;		/* name of this "assembly" (bu_malloc'd storage) */
	int rtrti_num_trees;		/* number of trees in this rti structure */
	char **rtrti_trees;		/* array of pointers to tree-top names trees[num_trees] (bu_malloc'd storage) */
	matp_t rtrti_xform;		/* transformation matrix from global coords to this rt instance (NULL -> identity) */
	matp_t rtrti_inv_xform;		/* inverse of above xform (NULL -> identity) */
};

struct rtserver_geometry {
	int rts_number_of_rtis;		/* number of rtserver_rti structures */
	struct rtserver_rti **rts_rtis;	/* array of pointers to rtserver_rti
					   structures rts_rtis[rts_number_of_rtis] (bu_malloc'd storage ) */
	point_t		rts_mdl_min;	/* min corner of model bounding RPP */
	point_t		rts_mdl_max;	/* max corner of model bounding RPP */
	double		rts_radius;	/* radius of model bounding sphere */
	Tcl_HashTable	*rts_comp_names;	/* A Tcl hash table containing ident numbers as keys
						   and component names as values */
};

extern void get_model_extents( int sessionid, point_t min, point_t max );

extern struct rtserver_result *rts_submit_job_and_wait( struct rtserver_job *ajob );

extern struct rtserver_result *rts_get_any_waiting_result( int sessionid );

extern struct rtserver_job *rts_get_rtserver_job();

extern struct xray *rts_get_xray();

extern int get_max_working_threads();
/** @@} */
/*
 * Local Variables:
 * mode: C
 * tab-width: 8
 * c-basic-offset: 4
 * indent-tabs-mode: t
 * End:
 * ex: shiftwidth=4 tabstop=8
 */
@


14.10
log
@Sweeping license updates.  Documentation is fully relicensed to the BSD Documentation License (a minor variant of the FreeBSD Documentation License and BSD License).  All GPL code (mostly application code) is converted to the LGPL and now also specifically declares version 2.1, revoking the blank check to the FSF.  The intent of these sweeping changes are to simplify the licensing terms and increase overall flexibility of use, both externally (to users for their purposes) and internally (to allow application code to be migrated to libraries without creating GPL libraries).  As a collective work, BRL-CAD is now LGPL.
@
text
@d59 1
a59 1
        int maxHits;			/* Max number of hits to consider along each ray (zero means take all of them) */
a126 1

@


14.9
log
@ugh, what tedium.  put some effort towards cleaning up the doxygen labels and making the headers more consistent.  also exclusively using @@ for doxygen instead of \ to try to keep things more consistent.
@
text
@d9 1
a9 2
 * as published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
d14 1
a14 1
 * Library General Public License for more details.
@


14.8
log
@update copyright to 2007
@
text
@d22 1
a22 1
/*@@{*/
d118 1
a118 1
/*@@}*/
@


14.7
log
@Doxygen updates
@
text
@d4 1
a4 1
 * Copyright (c) 2004-2006 United States Government as represented by
@


14.6
log
@update copyright to 2006
@
text
@d21 2
d24 1
d27 1
a27 1
 *  Author: John R. Anderson
d118 1
a118 1

d128 1
@


14.5
log
@Mods to add an interface for shooting an array of rays
@
text
@d4 1
a4 1
 * Copyright (C) 2004-2005 United States Government as represented by
@


14.4
log
@update copyright to 2005
@
text
@d57 1
@


14.3
log
@use perl to M-q format wrapping
@
text
@d4 2
a5 2
 * Copyright (c) 2004 United States Government as represented by the
 * U.S. Army Research Laboratory.
@


14.2
log
@LGPL license changes
@
text
@d17 2
a18 2
 * You should have received a copy of the GNU Lesser General Public License
 * along with this file; see the file named COPYING for more
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d1 2
a2 1
/*				R T S E R V E R . H
d4 18
@


1.3
log
@Added some declarations
@
text
@d95 10
@


1.2
log
@slight change to ray result structure
@
text
@d84 1
d86 1
d88 7
@


1.1
log
@moved/renamed from top-level h/ to top-level include/
@
text
@d53 1
a53 1
	struct xray *the_ray;		/* the originating ray */
@

