head	14.30;
access;
symbols
	rel-7-10-4:14.28
	STABLE:14.28.0.2
	stable-branch:14.5
	rel-7-10-2:14.28
	rel-7-10-0:14.23
	rel-7-8-4:14.19
	rel-7-8-2:14.14
	rel-7-8-0:14.14
	trimnurbs-branch:14.14.0.2
	help:14.14
	temp_tag:14.9
	bobWinPort-20051223-freeze:14.6.2.2
	postmerge-20051223-bobWinPort:14.9
	premerge-20051223-bobWinPort:14.8
	rel-7-6-6:14.8
	rel-7-6-4:14.8
	rel-7-6-2:14.6
	rel-7-6-branch:14.6.0.6
	rel-7-6-0:14.6
	rel-7-4-2:14.6
	rel-7-4-branch:14.6.0.4
	bobWinPort:14.6.0.2
	rel-7-4-0:14.6
	rel-7-2-6:14.6
	rel-7-2-4:14.5
	rel-7-2-2:14.5
	rel-7-2-0:14.4
	rel-7-0-4:14.3
	rel-7-0-2:14.3
	rel-7-0-1:14.3
	opensource-post:14.3
	opensource-pre:1.1
	rel-7-0-branch:1.1.0.2
	rel-7-0:1.1;
locks; strict;
comment	@ * @;


14.30
date	2007.12.06.15.06.18;	author brlcad;	state Exp;
branches;
next	14.29;

14.29
date	2007.12.04.01.31.58;	author brlcad;	state Exp;
branches;
next	14.28;

14.28
date	2007.07.26.01.13.50;	author brlcad;	state Exp;
branches;
next	14.27;

14.27
date	2007.05.26.02.08.01;	author brlcad;	state Exp;
branches;
next	14.26;

14.26
date	2007.05.26.01.45.04;	author brlcad;	state Exp;
branches;
next	14.25;

14.25
date	2007.05.19.00.50.03;	author brlcad;	state Exp;
branches;
next	14.24;

14.24
date	2007.04.16.21.15.35;	author brlcad;	state Exp;
branches;
next	14.23;

14.23
date	2007.01.27.01.01.39;	author brlcad;	state Exp;
branches;
next	14.22;

14.22
date	2007.01.23.01.13.20;	author brlcad;	state Exp;
branches;
next	14.21;

14.21
date	2007.01.21.04.45.40;	author brlcad;	state Exp;
branches;
next	14.20;

14.20
date	2007.01.20.14.36.40;	author brlcad;	state Exp;
branches;
next	14.19;

14.19
date	2006.09.18.05.24.07;	author lbutler;	state Exp;
branches;
next	14.18;

14.18
date	2006.09.07.01.19.17;	author lbutler;	state Exp;
branches;
next	14.17;

14.17
date	2006.08.07.16.04.38;	author brlcad;	state Exp;
branches;
next	14.16;

14.16
date	2006.08.01.15.02.54;	author brlcad;	state Exp;
branches;
next	14.15;

14.15
date	2006.07.06.19.35.17;	author brlcad;	state Exp;
branches;
next	14.14;

14.14
date	2006.01.23.18.02.14;	author bob1961;	state Exp;
branches;
next	14.13;

14.13
date	2006.01.22.10.27.23;	author brlcad;	state Exp;
branches;
next	14.12;

14.12
date	2006.01.21.16.51.40;	author brlcad;	state Exp;
branches;
next	14.11;

14.11
date	2006.01.18.06.46.10;	author brlcad;	state Exp;
branches;
next	14.10;

14.10
date	2005.12.29.03.50.26;	author brlcad;	state Exp;
branches;
next	14.9;

14.9
date	2005.12.23.21.26.25;	author bob1961;	state Exp;
branches;
next	14.8;

14.8
date	2005.10.23.04.44.26;	author brlcad;	state Exp;
branches;
next	14.7;

14.7
date	2005.09.15.03.51.07;	author brlcad;	state Exp;
branches;
next	14.6;

14.6
date	2005.05.28.02.14.49;	author brlcad;	state Exp;
branches
	14.6.2.1
	14.6.6.1;
next	14.5;

14.5
date	2005.03.28.05.19.16;	author bob1961;	state Exp;
branches;
next	14.4;

14.4
date	2005.01.30.20.30.10;	author brlcad;	state Exp;
branches;
next	14.3;

14.3
date	2004.12.21.06.23.18;	author morrison;	state Exp;
branches;
next	14.2;

14.2
date	2004.12.21.06.06.38;	author butler;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.10;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.24.04.10.50;	author morrison;	state Exp;
branches;
next	;

14.6.2.1
date	2005.09.08.16.11.51;	author bob1961;	state Exp;
branches;
next	14.6.2.2;

14.6.2.2
date	2005.09.14.19.22.51;	author bob1961;	state Exp;
branches;
next	;

14.6.6.1
date	2005.11.13.13.46.09;	author brlcad;	state Exp;
branches;
next	;


desc
@@


14.30
log
@make fb_log()'s format specifier constant
@
text
@/*                            F B . H
 * BRL-CAD
 *
 * Copyright (c) 2004-2007 United States Government as represented by
 * the U.S. Army Research Laboratory.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * version 2.1 as published by the Free Software Foundation.
 *
 * This library is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this file; see the file named COPYING for more
 * information.
 */
/** @@addtogroup libfb */
/** @@{ */
/** @@file fb.h
 * @@brief
 *  BRL "Generic" Framebuffer Library Interface Defines.
 *
 * This is the file that application programs should include for framebuffer support
 *
 */

#ifndef __FB_H__
#define __FB_H__

#include "fbio.h"
#include "bu.h"

/*
 * Needed for fd_set, avoid including sys/select.h outright since it
 * conflicts on some systems (e.g. freebsd4).
 *
 * XXX would be nice to decouple this interface from fd_set as it's
 * only used in one place right now.
 */
#if defined(HAVE_SYS_TYPES_H)
#  include <sys/types.h>
#endif
#if defined(HAVE_SYS_TIME_H)
#  include <sys/time.h>
#endif
#if defined(HAVE_UNISTD_H)
#  include <unistd.h>
#else
#  if defined(HAVE_SYS_UNISTD_H)
#    include <sys/unistd.h>
#  endif
#endif


/* Library entry points which are macros. */
#define fb_gettype(_ifp)		(_ifp->if_type)
#define fb_getwidth(_ifp)		(_ifp->if_width)
#define fb_getheight(_ifp)		(_ifp->if_height)
#define fb_poll(_ifp)			(*_ifp->if_poll)(_ifp)
#define fb_help(_ifp)			(*_ifp->if_help)(_ifp)
#define fb_free(_ifp)			(*_ifp->if_free)(_ifp)
#define fb_clear(_ifp,_pp)		(*_ifp->if_clear)(_ifp,_pp)
#define fb_read(_ifp,_x,_y,_pp,_ct)	(*_ifp->if_read)(_ifp,_x,_y,_pp,_ct)
#define fb_write(_ifp,_x,_y,_pp,_ct)	(*_ifp->if_write)(_ifp,_x,_y,_pp,_ct)
#define fb_rmap(_ifp,_cmap)		(*_ifp->if_rmap)(_ifp,_cmap)
#define fb_wmap(_ifp,_cmap)		(*_ifp->if_wmap)(_ifp,_cmap)
#define fb_view(_ifp,_xc,_yc,_xz,_yz)	(*_ifp->if_view)(_ifp,_xc,_yc,_xz,_yz)
#define fb_getview(_ifp,_xcp,_ycp,_xzp,_yzp) \
		(*_ifp->if_getview)(_ifp,_xcp,_ycp,_xzp,_yzp)
#define fb_setcursor(_ifp,_bits,_xb,_yb,_xo,_yo) \
		(*_ifp->if_setcursor)(_ifp,_bits,_xb,_yb,_xo,_yo)
#define fb_cursor(_ifp,_mode,_x,_y)	(*_ifp->if_cursor)(_ifp,_mode,_x,_y)
#define fb_getcursor(_ifp,_modep,_xp,_yp) \
		(*_ifp->if_getcursor)(_ifp,_modep,_xp,_yp)
#define fb_readrect(_ifp,_xmin,_ymin,_width,_height,_pp) \
		(*_ifp->if_readrect)(_ifp,_xmin,_ymin,_width,_height,_pp)
#define fb_writerect(_ifp,_xmin,_ymin,_width,_height,_pp) \
		(*_ifp->if_writerect)(_ifp,_xmin,_ymin,_width,_height,_pp)
#define fb_bwreadrect(_ifp,_xmin,_ymin,_width,_height,_pp) \
		(*_ifp->if_bwreadrect)(_ifp,_xmin,_ymin,_width,_height,_pp)
#define fb_bwwriterect(_ifp,_xmin,_ymin,_width,_height,_pp) \
		(*_ifp->if_bwwriterect)(_ifp,_xmin,_ymin,_width,_height,_pp)

/* Library entry points which are true functions. */
FB_EXPORT extern void 	fb_configureWindow(FBIO *, int, int);
FB_EXPORT extern FBIO	*fb_open(char *file, int width, int height);
FB_EXPORT extern int	fb_close(FBIO *ifp);
FB_EXPORT extern int	fb_genhelp(void);
FB_EXPORT extern int	fb_ioinit(FBIO *ifp);
FB_EXPORT extern int	fb_seek(FBIO *ifp, int x, int y);
FB_EXPORT extern int	fb_tell(FBIO *ifp, int *xp, int *yp);
FB_EXPORT extern int	fb_rpixel(FBIO *ifp, unsigned char *pp);
FB_EXPORT extern int	fb_wpixel(FBIO *ifp, unsigned char *pp);
FB_EXPORT extern int	fb_flush(FBIO *ifp);
FB_EXPORT extern void	fb_log(const char *fmt, ...) __BU_ATTR_FORMAT12;
FB_EXPORT extern int	fb_null(FBIO *ifp);
FB_EXPORT extern int	fb_null_setcursor(FBIO *ifp, const unsigned char *bits, int xbits, int ybits, int xorig, int yorig);

/* utility functions */
FB_EXPORT extern int	fb_common_file_size(unsigned long int *widthp, unsigned long int *heightp, const char *filename, int pixel_size);
FB_EXPORT extern int	fb_common_image_size(unsigned long int *widthp, unsigned long int *heightp, unsigned long int npixels);
FB_EXPORT extern int	fb_common_name_size(unsigned long int *widthp, unsigned long int *heightp, const char *name);

/* color mapping */
FB_EXPORT extern int	fb_is_linear_cmap(const ColorMap *cmap);
FB_EXPORT extern void	fb_make_linear_cmap(ColorMap *cmap);

/* backward compatibility hacks */
FB_EXPORT extern int	fb_reset(FBIO *ifp);
FB_EXPORT extern int	fb_viewport(FBIO *ifp, int left, int top, int right, int bottom);
FB_EXPORT extern int	fb_window(FBIO *ifp, int xcenter, int ycenter);
FB_EXPORT extern int	fb_zoom(FBIO *ifp, int xzoom, int yzoom);
FB_EXPORT extern int	fb_scursor(FBIO *ifp, int mode, int x, int y);

/*
 * Some functions and variables we couldn't hide.
 * Not for general consumption.
 */
FB_EXPORT extern int	_fb_pgin();
FB_EXPORT extern int	_fb_pgout();
FB_EXPORT extern int	_fb_pgflush();
FB_EXPORT extern int	_fb_disk_enable;
FB_EXPORT extern int	fb_sim_readrect(FBIO *ifp, int xmin, int ymin, int width, int height, unsigned char *pp);
FB_EXPORT extern int	fb_sim_writerect(FBIO *ifp, int xmin, int ymin, int width, int height, const unsigned char *pp);
FB_EXPORT extern int	fb_sim_bwreadrect(FBIO *ifp, int xmin, int ymin, int width, int height, unsigned char *pp);
FB_EXPORT extern int	fb_sim_bwwriterect(FBIO *ifp, int xmin, int ymin, int width, int height, const unsigned char *pp);
FB_EXPORT extern int	fb_sim_view(FBIO *ifp, int xcenter, int ycenter, int xzoom, int yzoom);
FB_EXPORT extern int	fb_sim_getview(FBIO *ifp, int *xcenter, int *ycenter, int *xzoom, int *yzoom);
FB_EXPORT extern int	fb_sim_cursor(FBIO *ifp, int mode, int x, int y);
FB_EXPORT extern int	fb_sim_getcursor(FBIO *ifp, int *mode, int *x, int *y);

#ifdef IF_X
FB_EXPORT extern int _X24_open_existing();
FB_EXPORT extern int X24_close_existing();
#endif

#ifdef IF_OGL
FB_EXPORT extern int _ogl_open_existing();
FB_EXPORT extern int ogl_close_existing();
#endif

#ifdef IF_WGL
FB_EXPORT extern int _wgl_open_existing();
FB_EXPORT extern int wgl_close_existing();
#endif

/*
 * Copy one RGB pixel to another.
 */
#define	COPYRGB(to,from) { (to)[RED]=(from)[RED];\
			   (to)[GRN]=(from)[GRN];\
			   (to)[BLU]=(from)[BLU]; }

/**
 * A fast inline version of fb_wpixel.  This one does NOT check for errors,
 *  nor "return" a value.  For reasons of C syntax it needs the basename
 *  of an RGBpixel rather than a pointer to one.
 */
#define	FB_WPIXEL(ifp,pp) {if((ifp)->if_pno==-1)_fb_pgin((ifp),(ifp)->if_pixcur/(ifp)->if_ppixels);\
	(*((ifp)->if_pcurp+0))=(pp)[0];(*((ifp)->if_pcurp+1))=(pp)[1];(*((ifp)->if_pcurp+2))=(pp)[2];\
	(ifp)->if_pcurp+=3;(ifp)->if_pixcur++;(ifp)->if_pdirty=1;\
	if((ifp)->if_pcurp>=(ifp)->if_pendp){_fb_pgout((ifp));(ifp)->if_pno= -1;}}

/* Debug Bitvector Definition */
#define	FB_DEBUG_BIO	1	/* Buffered io calls (less r/wpixel) */
#define	FB_DEBUG_CMAP	2	/* Contents of colormaps */
#define	FB_DEBUG_RW	4	/* Contents of reads and writes */
#define	FB_DEBUG_BRW	8	/* Buffered IO rpixel and wpixel */

#define FB_CKMAG(_ptr, _magic, _str)	\
	if( !(_ptr) )  { \
		fb_log("ERROR: null %s ptr, file %s, line %d\n", \
			_str, __FILE__, __LINE__ ); \
		abort(); \
	} else if( *((long *)(_ptr)) != (_magic) )  { \
		fb_log("ERROR: bad %s ptr x%x, s/b x%x, was x%x, file %s, line %d\n", \
			_str, _ptr, _magic, \
			*((long *)(_ptr)), __FILE__, __LINE__ ); \
		abort(); \
	}

/* tcl.c */
/* The presence of Tcl_Interp as an arg prevents giving arg list */
FB_EXPORT extern void fb_tcl_setup();
#ifdef BRLCAD_DEBUG
FB_EXPORT extern int Fb_d_Init();
#else
FB_EXPORT extern int Fb_Init();
#endif
FB_EXPORT extern int fb_refresh(FBIO *ifp, int x, int y, int w, int h);


/**
 * report version information about LIBFB
 */
FB_EXPORT extern const char *fb_version(void);

#endif /* __FB_H__ */

/** @@} */
/*
 * Local Variables:
 * mode: C
 * tab-width: 8
 * c-basic-offset: 4
 * indent-tabs-mode: t
 * End:
 * ex: shiftwidth=4 tabstop=8
 */
@


14.29
log
@don't need the non __STDC__ decls any longer, include bu.h in order to declare the stdarg compiler hint
@
text
@d98 1
a98 1
FB_EXPORT extern void	fb_log(char *fmt, ...) __BU_ATTR_FORMAT12;
@


14.28
log
@remove ephemeral data like phone numbers and addresses, including the misleading 'source' statements on code that is continually evolving and receiving contributions from many many sources
@
text
@d34 1
a87 1
#if __STDC__ || USE_PROTOTYPES
d98 1
a98 1
FB_EXPORT extern void	fb_log(char *fmt, ...);
a133 46
#else
FB_EXPORT extern FBIO	*fb_open();
FB_EXPORT extern int	fb_close();
FB_EXPORT extern int	fb_genhelp();
FB_EXPORT extern int	fb_ioinit();
FB_EXPORT extern int	fb_seek();
FB_EXPORT extern int	fb_tell();
FB_EXPORT extern int	fb_rpixel();
FB_EXPORT extern int	fb_wpixel();
FB_EXPORT extern int	fb_flush();
FB_EXPORT extern void	fb_log();
FB_EXPORT extern int	fb_null();
FB_EXPORT extern int	fb_null_setcursor();
/* utility functions */
FB_EXPORT extern int	fb_common_file_size();
FB_EXPORT extern int	fb_common_image_size();
FB_EXPORT extern int	fb_common_name_size();

/* colormap functions */
FB_EXPORT extern int	fb_is_linear_cmap();
FB_EXPORT extern void	fb_make_linear_cmap();

/* backward compatibility hacks */
FB_EXPORT extern int	fb_reset();
FB_EXPORT extern int	fb_viewport();
FB_EXPORT extern int	fb_window();
FB_EXPORT extern int	fb_zoom();
FB_EXPORT extern int	fb_scursor();

/*
 * Some functions and variables we couldn't hide.
 * Not for general consumption.
 */
FB_EXPORT extern int	_fb_pgin();
FB_EXPORT extern int	_fb_pgout();
FB_EXPORT extern int	_fb_pgflush();
FB_EXPORT extern int	_fb_disk_enable;
FB_EXPORT extern int	fb_sim_readrect();
FB_EXPORT extern int	fb_sim_writerect();
FB_EXPORT extern int	fb_sim_bwreadrect();
FB_EXPORT extern int	fb_sim_bwwriterect();
FB_EXPORT extern int	fb_sim_view();
FB_EXPORT extern int	fb_sim_getview();
FB_EXPORT extern int	fb_sim_cursor();
FB_EXPORT extern int	fb_sim_getcursor();
#endif
d136 2
a137 2
  FB_EXPORT extern int _X24_open_existing();
  FB_EXPORT extern int X24_close_existing();
d141 2
a142 2
  FB_EXPORT extern int _ogl_open_existing();
  FB_EXPORT extern int ogl_close_existing();
d146 2
a147 2
  FB_EXPORT extern int _wgl_open_existing();
  FB_EXPORT extern int wgl_close_existing();
@


14.27
log
@clean up the header protections so that they are all now more consistent with one another via use of __HEADER_H__ for the define names.
@
text
@a27 4
 *  @@par Source
 *	SECAD/VLD Computing Consortium, Bldg 394
 * @@n	The U. S. Army Ballistic Research Laboratory
 * @@n	Aberdeen Proving Ground, Maryland  21005-5066
@


14.26
log
@get rid of RCS variables from the public header files.  this is done in part to reduce recompilation during interface changes, but also to move towards not relying on or publishing the information contained in the variables interface-wise. (they're fine for c sources and private headers)
@
text
@d34 2
a35 2
#ifndef FB_H
#define FB_H seen
d251 1
a252 1
#endif /* FB_H */
@


14.25
log
@don't force USE_PROTOTYPES to be necessarily set to get what we usually want anyways (i.e. proper decls with args) -- check for __STDC__ too to determine how to declare.
@
text
@a31 2
 *
 *  $Header: /cvsroot/brlcad/brlcad/include/fb.h,v 14.24 2007/04/16 21:15:35 brlcad Exp $
@


14.24
log
@revamp BRL-CAD's versioning setup.  no longer rely upon the vers.sh script, allowing for a more unified cross-platform configuration.  instead of globals, provide per-library functions that return the version string.  the version numbers are now stored in files in include/conf/.
@
text
@d33 1
a33 1
 *  $Header: /cvsroot/brlcad/brlcad/include/fb.h,v 14.23 2007/01/27 01:01:39 brlcad Exp $
d93 1
a93 1
#ifdef USE_PROTOTYPES
@


14.23
log
@ws, test three
@
text
@d33 1
a33 1
 *  $Header: /cvsroot/brlcad/brlcad/include/fb.h,v 14.22 2007/01/23 01:13:20 brlcad Exp $
d247 6
a252 2
/* vers.c */
FB_EXPORT extern char fb_version[];
@


14.22
log
@Sweeping license updates.  Documentation is fully relicensed to the BSD Documentation License (a minor variant of the FreeBSD Documentation License and BSD License).  All GPL code (mostly application code) is converted to the LGPL and now also specifically declares version 2.1, revoking the blank check to the FSF.  The intent of these sweeping changes are to simplify the licensing terms and increase overall flexibility of use, both externally (to users for their purposes) and internally (to allow application code to be migrated to libraries without creating GPL libraries).  As a collective work, BRL-CAD is now LGPL.
@
text
@d33 1
a33 1
 *  $Header: /cvsroot/brlcad/brlcad/include/fb.h,v 14.21 2007/01/21 04:45:40 brlcad Exp $
a260 1

@


14.21
log
@ugh, what tedium.  put some effort towards cleaning up the doxygen labels and making the headers more consistent.  also exclusively using @@ for doxygen instead of \ to try to keep things more consistent.
@
text
@d9 1
a9 2
 * as published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
d14 1
a14 1
 * Library General Public License for more details.
d33 1
a33 1
 *  $Header: /cvsroot/brlcad/brlcad/include/fb.h,v 14.20 2007/01/20 14:36:40 brlcad Exp $
@


14.20
log
@update copyright to 2007
@
text
@d21 2
a22 2
/** \addtogroup libfb */
/*@@{*/
d31 2
a32 2
 *@@n	The U. S. Army Ballistic Research Laboratory
 *@@n	Aberdeen Proving Ground, Maryland  21005-5066
d34 1
a34 1
 *  $Header: /cvsroot/brlcad/brlcad/include/fb.h,v 14.19 2006/09/18 05:24:07 lbutler Exp $
d252 1
a252 1
/*@@}*/
@


14.19
log
@Doxygen updates
@
text
@d4 1
a4 1
 * Copyright (c) 2004-2006 United States Government as represented by
d34 1
a34 1
 *  $Header: /cvsroot/brlcad/brlcad/include/fb.h,v 14.18 2006/09/07 01:19:17 lbutler Exp $
@


14.18
log
@Doxygen updates
@
text
@d34 1
a34 1
 *  $Header: /cvsroot/brlcad/brlcad/include/fb.h,v 14.17 2006/08/07 16:04:38 brlcad Exp $
d210 1
a210 1
/*
d262 1
@


14.17
log
@add explicit code for DM_WGL and IF_WGL for Windows GL support instead of piggybacking off of the OGL interface
@
text
@d21 2
d24 2
d27 1
a27 1
 *  BRL "Generic" Framebuffer Library Interface Defines.
d29 1
a29 1
 *  Source -
d31 2
a32 2
 *	The U. S. Army Ballistic Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5066
d34 1
a34 1
 *  $Header: /cvsroot/brlcad/brlcad/include/fb.h,v 14.16 2006/08/01 15:02:54 brlcad Exp $
d42 2
a43 1
/* Needed for fd_set, avoid including sys/select.h outright since it
d252 1
a252 1

@


14.16
log
@refactor the three asize.c implementations (libbn, libfb, & canon) into just one.  libbn had the most comprehensive and updated version, but the logic belongs in libfb.  so, the bn_common autosizing functions are now consolidated to libfb, refactoring accordingly.
@
text
@d30 1
a30 1
 *  $Header: /cvsroot/brlcad/brlcad/include/fb.h,v 14.15 2006/07/06 19:35:17 brlcad Exp $
d193 5
@


14.15
log
@follow erik's lead, obliterate the other references to Cakefiles
@
text
@d30 1
a30 1
 *  $Header: /cvsroot/brlcad/brlcad/include/fb.h,v 14.14 2006/01/23 18:02:14 bob1961 Exp $
d105 5
a109 2
FB_EXPORT extern int	fb_common_file_size(int *w, int *h, char *file, int psize);
FB_EXPORT extern int	fb_common_image_size(int *w, int *h, int npixels);
d112 1
d152 3
d157 1
@


14.14
log
@Removed declaration of variables from server.c
@
text
@d30 1
a30 1
 *  $Header$
d230 1
a230 1
/* vers.c (created by libfb/Cakefile) */
@


14.13
log
@by moving the framebuffer server switch table out of libfb and into fbserv directly, it no longer needs to be in fb.h, removing the fb.h interface coupling to pkg.h
@
text
@d30 1
a30 1
 *  $Header: /cvsroot/brlcad/brlcad/include/fb.h,v 14.12 2006/01/21 16:51:40 brlcad Exp $
a232 8
/* server.c */
FB_EXPORT extern FBIO	*fb_server_fbp;
FB_EXPORT extern fd_set	*fb_server_select_list;
FB_EXPORT extern int	*fb_server_max_fd;
FB_EXPORT extern int	fb_server_got_fb_free;       /* !0 => we have received an fb_free */
FB_EXPORT extern int	fb_server_refuse_fb_free;    /* !0 => don't accept fb_free() */
FB_EXPORT extern int	fb_server_retain_on_close;   /* !0 => we are holding a reusable FB open */

@


14.12
log
@framebuffer interface is presently tied to the network package library due to a return type, should decouple that
@
text
@d30 1
a30 1
 *  $Header: /cvsroot/brlcad/brlcad/include/fb.h,v 14.11 2006/01/18 06:46:10 brlcad Exp $
a57 3
/* XXX should change return type to not be coupled to libpkg */
#include "pkg.h"

a239 2
FB_EXPORT extern const struct pkg_switch fb_server_pkg_switch[];

@


14.11
log
@update copyright to 2006
@
text
@d30 1
a30 1
 *  $Header: /cvsroot/brlcad/brlcad/include/fb.h,v 14.10 2005/12/29 03:50:26 brlcad Exp $
d58 4
@


14.10
log
@avoid including sys/select.h outright since it conflicts on some systems (e.g. fbsd4).  would be good to decouple fb's interface from the fd_set struct since it's only used in one place
@
text
@d4 1
a4 1
 * Copyright (C) 2004-2005 United States Government as represented by
d30 1
a30 1
 *  $Header: /cvsroot/brlcad/brlcad/include/fb.h,v 14.9 2005/12/23 21:26:25 bob1961 Exp $
@


14.9
log
@Merge of bobWinPort
@
text
@d30 1
a30 1
 *  $Header: /cvsroot/brlcad/brlcad/include/fb.h,v 14.8 2005/10/23 04:44:26 brlcad Exp $
d38 14
a51 3
/* Needed for fd_set */
#if defined (HAVE_SYS_SELECT_H)
#  include <sys/select.h>
d53 2
a54 12
#  if defined(HAVE_SYS_TYPES_H)
#    include <sys/types.h>
#  endif
#  if defined(HAVE_SYS_TIME_H)
#    include <sys/time.h>
#  endif
#  if defined(HAVE_UNISTD_H)
#    include <unistd.h>
#  else
#    if defined(HAVE_SYS_UNISTD_H)
#      include <sys/unistd.h>
#    endif
@


14.8
log
@trailing ws
@
text
@d30 1
a30 1
 *  $Header: /cvsroot/brlcad/brlcad/include/fb.h,v 14.7 2005/09/15 03:51:07 brlcad Exp $
d38 17
a54 11

#ifndef FB_EXPORT
#   if defined(_WIN32) && !defined(__CYGWIN__) && defined(BRLCAD_DLL)
#      ifdef FB_EXPORT_DLL
#         define FB_EXPORT __declspec(dllexport)
#      else
#         define FB_EXPORT __declspec(dllimport)
#      endif
#   else
#      define FB_EXPORT
#   endif
a56 1

d173 10
d221 3
d225 2
d231 10
@


14.7
log
@remove the FBIO structure and assoicated rgbpixel definitions from fb.h and put them in their own fbio.h header
@
text
@d24 1
a24 1
 *  
d30 1
a30 1
 *  $Header: /cvsroot/brlcad/brlcad/include/fb.h,v 14.6 2005/05/28 02:14:49 brlcad Exp $
@


14.6
log
@convert WIN32 define checks to _WIN32 since the latter is one of the defaults provided by MSVC whereas the prior is not.  remove some of them related to header inclusions using HAVE_ defines instead.
@
text
@d30 1
a30 9
 *  Include Sequencing -
 *	#include <stdio.h>
 *	#include "machine.h"
 *	#include "fb.h"
 *
 *  Libraries Used -
 *	LIBFB LIBFB_LIBES -lc
 *
 *  $Header: /cvsroot/brlcad/brlcad/include/fb.h,v 14.5 2005/03/28 05:19:16 bob1961 Exp $
d36 3
a50 105
/*
 *			R G B p i x e l
 *
 *  Format of disk pixels in .pix files.
 *  Formerly used as arguments to many of the library routines,
 *  but has fallen into disuse due to the difficulties with
 *  ANSI function prototypes, and the fact that arrays are not
 *  real types in C.  The most notable problem is that of passing
 *  a pointer to an array of RGBpixel.  It looks doubly dimensioned,
 *  but isn't.
 */
typedef unsigned char RGBpixel[3];

#define	RED	0
#define	GRN	1
#define	BLU	2

/*
 *			C o l o r M a p
 *
 *  These generic color maps have up to 16 bits of significance,
 *  left-justified in a short.  Think of this as fixed-point values
 *  from 0 to 1.
 */
typedef struct  {
	unsigned short cm_red[256];
	unsigned short cm_green[256];
	unsigned short cm_blue[256];
} ColorMap;

#ifdef USE_PROTOTYPES
#	define	FB_ARGS(args)			args
#else
#	define	FB_ARGS(args)			()
#endif

/*
 *			F B I O
 *
 *  A frame-buffer IO structure.
 *  One of these is allocated for each active framebuffer.
 *  A pointer to this structure is the first argument to all
 *  the library routines.
 */
typedef struct FBIO_ {
	long	if_magic;
	/* Static information: per device TYPE.	*/
	int	(*if_open)FB_ARGS((struct FBIO_ *ifp, char *file, int width, int height));		/* open device		*/
	int	(*if_close)FB_ARGS((struct FBIO_ *ifp));				/* close device		*/
	int	(*if_clear)FB_ARGS((struct FBIO_ *ifp, unsigned char *pp));		/* clear device 	*/
	int	(*if_read)FB_ARGS((struct FBIO_ *ifp, int x, int y, unsigned char *pp, int count));		/* read pixels		*/
	int	(*if_write)FB_ARGS((struct FBIO_ *ifp, int x, int y, const unsigned char *pp, int count));	/* write pixels		*/
	int	(*if_rmap)FB_ARGS((struct FBIO_ *ifp, ColorMap *cmap));		/* read colormap 	*/
	int	(*if_wmap)FB_ARGS((struct FBIO_ *ifp, const ColorMap *cmap));		/* write colormap 	*/
	int	(*if_view)FB_ARGS((struct FBIO_ *ifp, int xcent, int ycent, int xzoom, int yzoom));		/* set view		*/
	int	(*if_getview)FB_ARGS((struct FBIO_ *ifp, int *xcent, int *ycent, int *xzoom, int *yzoom));	/* get view		*/
	int	(*if_setcursor)FB_ARGS((struct FBIO_ *ifp, const unsigned char *bits, int xb, int yb, int xo, int yo));	/* define cursor 	*/
	int	(*if_cursor)FB_ARGS((struct FBIO_ *ifp, int mode, int x, int y));		/* set cursor		*/
	int	(*if_getcursor)FB_ARGS((struct FBIO_ *ifp, int *mode, int *x, int *y));	/* get cursor		*/
	int	(*if_readrect)FB_ARGS((struct FBIO_ *ifp, int xmin, int ymin, int width, int height, unsigned char *pp));	/* read rectangle 	*/
	int	(*if_writerect)FB_ARGS((struct FBIO_ *ifp, int xmin, int ymin, int width, int height, const unsigned char *pp));	/* write rectangle 	*/
	int	(*if_bwreadrect)FB_ARGS((struct FBIO_ *ifp, int xmin, int ymin, int width, int height, unsigned char *pp));	/* read monochrome rectangle 	*/
	int	(*if_bwwriterect)FB_ARGS((struct FBIO_ *ifp, int xmin, int ymin, int width, int height, const unsigned char *pp));	/* write rectangle 	*/
	int	(*if_poll)FB_ARGS((struct FBIO_ *ifp));		/* handle events 	*/
	int	(*if_flush)FB_ARGS((struct FBIO_ *ifp));	/* flush output 	*/
	int	(*if_free)FB_ARGS((struct FBIO_ *ifp));		/* free resources 	*/
	int	(*if_help)FB_ARGS((struct FBIO_ *ifp));		/* print useful info	*/
	char	*if_type;		/* what "open" calls it	*/
	int	if_max_width;		/* max device width	*/
	int	if_max_height;		/* max device height	*/
	/* Dynamic information: per device INSTANCE. */
	char	*if_name;	/* what the user called it */
	int	if_width;	/* current values */
	int	if_height;
	int	if_selfd;	/* select(fd) for input events if >= 0 */
	/* Internal information: needed by the library.	*/
	int	if_fd;		/* internal file descriptor */
	int	if_xzoom;	/* zoom factors */
	int	if_yzoom;
	int	if_xcenter;	/* pan position */
	int	if_ycenter;
	int	if_cursmode;	/* cursor on/off */
	int	if_xcurs;	/* cursor position */
	int	if_ycurs;
	unsigned char *if_pbase;/* Address of malloc()ed page buffer.	*/
	unsigned char *if_pcurp;/* Current pointer into page buffer.	*/
	unsigned char *if_pendp;/* End of page buffer.			*/
	int	if_pno;		/* Current "page" in memory.		*/
	int	if_pdirty;	/* Page modified flag.			*/
	long	if_pixcur;	/* Current pixel number in framebuffer. */
	long	if_ppixels;	/* Sizeof page buffer (pixels).		*/
	int	if_debug;	/* Buffered IO debug flag.		*/
	/* State variables for individual interface modules */
	union	{
		char	*p;
		long	l;
	} u1, u2, u3, u4, u5, u6;
} FBIO;

#define FB_MAGIC	0xfbfb00fb

#define PIXEL_NULL	(unsigned char *) 0
#define RGBPIXEL_NULL	(unsigned char *) 0
#define COLORMAP_NULL	(ColorMap *) 0
#define FBIO_NULL	(FBIO *) 0
a201 1
#define FB_CK_FBIO(_p)	FB_CKMAG(_p, FB_MAGIC, "FBIO" )
@


14.6.6.1
log
@merge changes from HEAD aka rel-7-6-4 to the rel-7-6-branch just in case someone peeks a gander or tries to continue/build the branch
@
text
@d24 1
a24 1
 *
d30 9
a38 1
 *  $Header$
a43 3
#include "fbio.h"


d56 105
d312 1
@


14.6.2.1
log
@Mods for windows port
@
text
@d38 1
a38 1
 *  $Header: /cvsroot/brlcad/brlcad/include/fb.h,v 14.6 2005/05/28 02:14:49 brlcad Exp $
a277 3
FB_EXPORT extern int _ogl_open_existing();
FB_EXPORT extern int ogl_close_existing();

a316 3
#ifdef BRLCAD_DEBUG
FB_EXPORT extern int Fb_d_Init();
#else
a317 2
#endif
FB_EXPORT extern int fb_refresh(FBIO *ifp, int x, int y, int w, int h);
a321 19
FB_EXPORT extern FBIO X24_interface;
#ifdef IF_OGL
FB_EXPORT extern FBIO ogl_interface;
#endif

#ifdef IF_REMOTE
FB_EXPORT extern FBIO remote_interface;
#endif

/* server.c */
FB_EXPORT extern FBIO	*fb_server_fbp;
FB_EXPORT extern fd_set	*fb_server_select_list;
FB_EXPORT extern int	*fb_server_max_fd;
FB_EXPORT extern int	fb_server_got_fb_free;       /* !0 => we have received an fb_free */
FB_EXPORT extern int	fb_server_refuse_fb_free;    /* !0 => don't accept fb_free() */
FB_EXPORT extern int	fb_server_retain_on_close;   /* !0 => we are holding a reusable FB open */
FB_EXPORT extern const struct pkg_switch fb_server_pkg_switch[];


@


14.6.2.2
log
@Include header for fd_set
@
text
@d38 1
a38 1
 *  $Header: /cvsroot/brlcad/brlcad/include/fb.h,v 14.6.2.1 2005/09/08 16:11:51 bob1961 Exp $
a43 19
/* Needed for fd_set */
#if defined (HAVE_SYS_SELECT_H)
#  include <sys/select.h>
#else
#  if defined(HAVE_SYS_TYPES_H)
#    include <sys/types.h>
#  endif
#  if defined(HAVE_SYS_TIME_H)
#    include <sys/time.h>
#  endif
#  if defined(HAVE_UNISTD_H)
#    include <unistd.h>
#  else
#    if defined(HAVE_SYS_UNISTD_H)
#      include <sys/unistd.h>
#    endif
#  endif
#endif

@


14.5
log
@Add code to allow libfb to be a Windows DLL
@
text
@d38 1
a38 1
 *  $Header: /cvsroot/brlcad/brlcad/include/fb.h,v 14.4 2005/01/30 20:30:10 brlcad Exp $
d45 1
a45 1
#   if defined(WIN32) && !defined(__CYGWIN__) && defined(BRLCAD_DLL)
@


14.4
log
@update copyright to 2005
@
text
@d38 1
a38 1
 *  $Header: /cvsroot/brlcad/brlcad/include/fb.h,v 14.3 2004/12/21 06:23:18 morrison Exp $
d44 12
d193 13
a205 13
extern void 	fb_configureWindow(FBIO *, int, int);
extern FBIO	*fb_open(char *file, int width, int height);
extern int	fb_close(FBIO *ifp);
extern int	fb_genhelp(void);
extern int	fb_ioinit(FBIO *ifp);
extern int	fb_seek(FBIO *ifp, int x, int y);
extern int	fb_tell(FBIO *ifp, int *xp, int *yp);
extern int	fb_rpixel(FBIO *ifp, unsigned char *pp);
extern int	fb_wpixel(FBIO *ifp, unsigned char *pp);
extern int	fb_flush(FBIO *ifp);
extern void	fb_log(char *fmt, ...);
extern int	fb_null(FBIO *ifp);
extern int	fb_null_setcursor(FBIO *ifp, const unsigned char *bits, int xbits, int ybits, int xorig, int yorig);
d208 4
a211 4
extern int	fb_common_file_size(int *w, int *h, char *file, int psize);
extern int	fb_common_image_size(int *w, int *h, int npixels);
extern int	fb_is_linear_cmap(const ColorMap *cmap);
extern void	fb_make_linear_cmap(ColorMap *cmap);
d213 5
a217 5
extern int	fb_reset(FBIO *ifp);
extern int	fb_viewport(FBIO *ifp, int left, int top, int right, int bottom);
extern int	fb_window(FBIO *ifp, int xcenter, int ycenter);
extern int	fb_zoom(FBIO *ifp, int xzoom, int yzoom);
extern int	fb_scursor(FBIO *ifp, int mode, int x, int y);
d223 12
a234 12
extern int	_fb_pgin();
extern int	_fb_pgout();
extern int	_fb_pgflush();
extern int	_fb_disk_enable;
extern int	fb_sim_readrect(FBIO *ifp, int xmin, int ymin, int width, int height, unsigned char *pp);
extern int	fb_sim_writerect(FBIO *ifp, int xmin, int ymin, int width, int height, const unsigned char *pp);
extern int	fb_sim_bwreadrect(FBIO *ifp, int xmin, int ymin, int width, int height, unsigned char *pp);
extern int	fb_sim_bwwriterect(FBIO *ifp, int xmin, int ymin, int width, int height, const unsigned char *pp);
extern int	fb_sim_view(FBIO *ifp, int xcenter, int ycenter, int xzoom, int yzoom);
extern int	fb_sim_getview(FBIO *ifp, int *xcenter, int *ycenter, int *xzoom, int *yzoom);
extern int	fb_sim_cursor(FBIO *ifp, int mode, int x, int y);
extern int	fb_sim_getcursor(FBIO *ifp, int *mode, int *x, int *y);
d236 12
a247 12
extern FBIO	*fb_open();
extern int	fb_close();
extern int	fb_genhelp();
extern int	fb_ioinit();
extern int	fb_seek();
extern int	fb_tell();
extern int	fb_rpixel();
extern int	fb_wpixel();
extern int	fb_flush();
extern void	fb_log();
extern int	fb_null();
extern int	fb_null_setcursor();
d249 4
a252 4
extern int	fb_common_file_size();
extern int	fb_common_image_size();
extern int	fb_is_linear_cmap();
extern void	fb_make_linear_cmap();
d254 5
a258 5
extern int	fb_reset();
extern int	fb_viewport();
extern int	fb_window();
extern int	fb_zoom();
extern int	fb_scursor();
d264 12
a275 12
extern int	_fb_pgin();
extern int	_fb_pgout();
extern int	_fb_pgflush();
extern int	_fb_disk_enable;
extern int	fb_sim_readrect();
extern int	fb_sim_writerect();
extern int	fb_sim_bwreadrect();
extern int	fb_sim_bwwriterect();
extern int	fb_sim_view();
extern int	fb_sim_getview();
extern int	fb_sim_cursor();
extern int	fb_sim_getcursor();
d316 2
a317 2
extern void fb_tcl_setup();
extern int Fb_Init();
d320 1
a320 1
extern char fb_version[];
@


14.3
log
@use perl to M-q format wrapping
@
text
@d4 2
a5 2
 * Copyright (c) 2004 United States Government as represented by the
 * U.S. Army Research Laboratory.
d38 1
a38 1
 *  $Header: /cvs/brlcad/include/fb.h,v 14.2 2004/12/21 06:06:38 butler Exp $
@


14.2
log
@LGPL license changes
@
text
@d17 2
a18 2
 * You should have received a copy of the GNU Lesser General Public License
 * along with this file; see the file named COPYING for more
d38 1
a38 1
 *  $Header: /cvs/brlcad/include/fb.h,v 14.1 2004/11/16 19:42:10 morrison Exp $
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d1 21
a21 2
/*
 *			F B . H
a28 3
 *  
 *  Status -
 *	Public Domain, Distribution Unlimited
d38 1
a38 1
 *  $Header: /cvs/brlcad/include/fb.h,v 1.1 2004/05/24 04:10:50 morrison Exp $
@


1.1
log
@moved/renamed from top-level h/ to top-level include/
@
text
@d22 1
a22 1
 *  $Header$
d295 10
@

