head	1.16;
access;
symbols
	rel-7-10-4:1.16
	STABLE:1.16.0.2
	rel-7-10-2:1.16
	rel-7-10-0:1.13
	rel-7-8-4:1.9
	rel-7-8-2:1.4
	rel-7-8-0:1.4
	trimnurbs-branch:1.4.0.2
	help:1.4
	temp_tag:1.3
	postmerge-20051223-bobWinPort:1.3
	premerge-20051223-bobWinPort:1.2
	rel-7-6-6:1.2
	rel-7-6-branch:1.2.0.2
	rel-7-6-4:1.2;
locks; strict;
comment	@ * @;


1.16
date	2007.05.26.01.45.04;	author brlcad;	state Exp;
branches;
next	1.15;

1.15
date	2007.05.19.00.50.03;	author brlcad;	state Exp;
branches;
next	1.14;

1.14
date	2007.05.14.18.11.50;	author brlcad;	state Exp;
branches;
next	1.13;

1.13
date	2007.01.27.01.01.39;	author brlcad;	state Exp;
branches;
next	1.12;

1.12
date	2007.01.23.01.13.20;	author brlcad;	state Exp;
branches;
next	1.11;

1.11
date	2007.01.21.04.45.40;	author brlcad;	state Exp;
branches;
next	1.10;

1.10
date	2007.01.20.14.36.40;	author brlcad;	state Exp;
branches;
next	1.9;

1.9
date	2006.09.18.05.24.07;	author lbutler;	state Exp;
branches;
next	1.8;

1.8
date	2006.09.07.01.19.17;	author lbutler;	state Exp;
branches;
next	1.7;

1.7
date	2006.08.10.00.56.27;	author brlcad;	state Exp;
branches;
next	1.6;

1.6
date	2006.08.07.17.55.15;	author brlcad;	state Exp;
branches;
next	1.5;

1.5
date	2006.08.07.16.04.38;	author brlcad;	state Exp;
branches;
next	1.4;

1.4
date	2006.01.18.06.46.10;	author brlcad;	state Exp;
branches;
next	1.3;

1.3
date	2005.12.23.21.26.25;	author bob1961;	state Exp;
branches;
next	1.2;

1.2
date	2005.10.23.04.44.26;	author brlcad;	state Exp;
branches
	1.2.2.1;
next	1.1;

1.1
date	2005.09.15.03.38.58;	author brlcad;	state Exp;
branches;
next	;

1.2.2.1
date	2005.10.23.04.44.26;	author brlcad;	state dead;
branches;
next	1.2.2.2;

1.2.2.2
date	2005.11.13.13.46.10;	author brlcad;	state Exp;
branches;
next	;


desc
@@


1.16
log
@get rid of RCS variables from the public header files.  this is done in part to reduce recompilation during interface changes, but also to move towards not relying on or publishing the information contained in the variables interface-wise. (they're fine for c sources and private headers)
@
text
@/*                         F B I O . H
 * BRL-CAD
 *
 * Copyright (c) 2005-2007 United States Government as represented by
 * the U.S. Army Research Laboratory.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * version 2.1 as published by the Free Software Foundation.
 *
 * This library is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this file; see the file named COPYING for more
 * information.
 */
/** @@addtogroup libfb */
/** @@{ */
/** @@file fbio.h
 *
 * @@brief
 *  BRL-CAD Framebuffer Library I/O Interfaces
 *
 * @@par Source
 *	BRL-CAD Open Source
 */

#ifndef __FBIO_H__
#define __FBIO_H__

#if __STDC__ || USE_PROTOTYPES
#  define	FB_ARGS(args)			args
#else
#  define	FB_ARGS(args)			()
#endif

#ifndef FB_EXPORT
#  if defined(_WIN32) && !defined(__CYGWIN__) && defined(BRLCAD_DLL)
#    ifdef FB_EXPORT_DLL
#      define FB_EXPORT __declspec(dllexport)
#    else
#      define FB_EXPORT __declspec(dllimport)
#    endif
#  else
#    define FB_EXPORT
#  endif
#endif


/**
 *			R G B p i x e l
 *
 *  Format of disk pixels is .pix raw image files.
 *  Formerly used as arguments to many of the library routines,
 *  but has fallen into disuse due to the difficulties with
 *  ANSI function prototypes, and the fact that arrays are not
 *  real types in C.  The most notable problem is that of passing
 *  a pointer to an array of RGBpixel.  It looks doubly dimensioned,
 *  but isn't.
 */
typedef unsigned char RGBpixel[3];

#define	RED	0
#define	GRN	1
#define	BLU	2

/**
 *			C o l o r M a p
 *
 *  These generic color maps have up to 16 bits of significance,
 *  left-justified in a short.  Think of this as fixed-point values
 *  from 0 to 1.
 */
typedef struct  {
    unsigned short cm_red[256];
    unsigned short cm_green[256];
    unsigned short cm_blue[256];
} ColorMap;


#define PIXEL_NULL	(unsigned char *) 0
#define RGBPIXEL_NULL	(unsigned char *) 0
#define COLORMAP_NULL	(ColorMap *) 0
#define FBIO_NULL	(FBIO *) 0

#define FB_MAGIC	0xfbfb00fb
#define FB_CK_FBIO(_p)	FB_CKMAG(_p, FB_MAGIC, "FBIO" )


/**
 *			F B I O
 *@@brief
 *  A frame-buffer IO structure.
 *
 *  One of these is allocated for each active framebuffer.
 *  A pointer to this structure is the first argument to all
 *  the library routines.
 */
typedef struct FBIO_ {
    long	if_magic;
    /* Static information: per device TYPE.	*/
    int	(*if_open)FB_ARGS((struct FBIO_ *ifp, char *file, int width, int height));		/**< @@brief open device		*/
    int	(*if_close)FB_ARGS((struct FBIO_ *ifp));				/**< @@brief close device		*/
    int	(*if_clear)FB_ARGS((struct FBIO_ *ifp, unsigned char *pp));		/**< @@brief clear device 	*/
    int	(*if_read)FB_ARGS((struct FBIO_ *ifp, int x, int y, unsigned char *pp, int count));		/**< @@brief read pixels		*/
    int	(*if_write)FB_ARGS((struct FBIO_ *ifp, int x, int y, const unsigned char *pp, int count));	/**< @@brief write pixels		*/
    int	(*if_rmap)FB_ARGS((struct FBIO_ *ifp, ColorMap *cmap));		/**< @@brief read colormap 	*/
    int	(*if_wmap)FB_ARGS((struct FBIO_ *ifp, const ColorMap *cmap));		/**< @@brief write colormap 	*/
    int	(*if_view)FB_ARGS((struct FBIO_ *ifp, int xcent, int ycent, int xzoom, int yzoom));		/**< @@brief set view		*/
    int	(*if_getview)FB_ARGS((struct FBIO_ *ifp, int *xcent, int *ycent, int *xzoom, int *yzoom));	/**< @@brief get view		*/
    int	(*if_setcursor)FB_ARGS((struct FBIO_ *ifp, const unsigned char *bits, int xb, int yb, int xo, int yo));	/**< @@brief define cursor 	*/
    int	(*if_cursor)FB_ARGS((struct FBIO_ *ifp, int mode, int x, int y));		/**< @@brief set cursor		*/
    int	(*if_getcursor)FB_ARGS((struct FBIO_ *ifp, int *mode, int *x, int *y));	/**< @@brief get cursor		*/
    int	(*if_readrect)FB_ARGS((struct FBIO_ *ifp, int xmin, int ymin, int width, int height, unsigned char *pp));	/**< @@brief read rectangle 	*/
    int	(*if_writerect)FB_ARGS((struct FBIO_ *ifp, int xmin, int ymin, int width, int height, const unsigned char *pp));	/**< @@brief write rectangle 	*/
    int	(*if_bwreadrect)FB_ARGS((struct FBIO_ *ifp, int xmin, int ymin, int width, int height, unsigned char *pp));	/**< @@brief read monochrome rectangle 	*/
    int	(*if_bwwriterect)FB_ARGS((struct FBIO_ *ifp, int xmin, int ymin, int width, int height, const unsigned char *pp));	/**< @@brief write rectangle 	*/
    int	(*if_poll)FB_ARGS((struct FBIO_ *ifp));		/**< @@brief handle events 	*/
    int	(*if_flush)FB_ARGS((struct FBIO_ *ifp));	/**< @@brief flush output 	*/
    int	(*if_free)FB_ARGS((struct FBIO_ *ifp));		/**< @@brief free resources 	*/
    int	(*if_help)FB_ARGS((struct FBIO_ *ifp));		/**< @@brief print useful info	*/
    char	*if_type;		/**< @@brief what "open" calls it	*/
    int	if_max_width;		/**< @@brief max device width	*/
    int	if_max_height;		/**< @@brief max device height	*/
    /* Dynamic information: per device INSTANCE. */
    char	*if_name;	/**< @@brief what the user called it */
    int	if_width;	/**< @@brief current values */
    int	if_height;
    int	if_selfd;	/**< @@brief select(fd) for input events if >= 0 */
    /* Internal information: needed by the library.	*/
    int	if_fd;		/**< @@brief internal file descriptor */
    int	if_xzoom;	/**< @@brief zoom factors */
    int	if_yzoom;
    int	if_xcenter;	/**< @@brief pan position */
    int	if_ycenter;
    int	if_cursmode;	/**< @@brief cursor on/off */
    int	if_xcurs;	/**< @@brief cursor position */
    int	if_ycurs;
    unsigned char *if_pbase;/**< @@brief Address of malloc()ed page buffer.	*/
    unsigned char *if_pcurp;/**< @@brief Current pointer into page buffer.	*/
    unsigned char *if_pendp;/**< @@brief End of page buffer.			*/
    int	if_pno;		/**< @@brief Current "page" in memory.		*/
    int	if_pdirty;	/**< @@brief Page modified flag.			*/
    long	if_pixcur;	/**< @@brief Current pixel number in framebuffer. */
    long	if_ppixels;	/**< @@brief Sizeof page buffer (pixels).		*/
    int	if_debug;	/**< @@brief Buffered IO debug flag.		*/
    /* State variables for individual interface modules */
    union	{
	char	*p;
	long	l;
    } u1, u2, u3, u4, u5, u6;
} FBIO;

/* declare all the possible interfaces */
#ifdef IF_REMOTE
FB_EXPORT extern FBIO remote_interface;	/* not in list[] */
#endif

#ifdef IF_ADAGE
FB_EXPORT extern FBIO adage_interface;
#endif

#ifdef IF_SUN
FB_EXPORT extern FBIO sun_interface;
#endif

#if defined(IF_SGI)
FB_EXPORT extern FBIO sgi_interface;
#endif

#ifdef IF_OGL
FB_EXPORT extern FBIO ogl_interface;
#endif

#ifdef IF_WGL
FB_EXPORT extern FBIO wgl_interface;
#endif

#ifdef IF_RAT
FB_EXPORT extern FBIO rat_interface;
#endif

#ifdef IF_UG
FB_EXPORT extern FBIO ug_interface;
#endif

#ifdef IF_X
FB_EXPORT extern FBIO X24_interface;
FB_EXPORT extern FBIO X_interface;
#endif

#ifdef IF_PTTY
FB_EXPORT extern FBIO ptty_interface;
#endif

#ifdef IF_AB
FB_EXPORT extern FBIO abekas_interface;
#endif

#ifdef IF_TS
FB_EXPORT extern FBIO ts_interface;
#endif

#ifdef IF_TK
FB_EXPORT extern FBIO tk_interface;
#endif


/* Always included */
FB_EXPORT extern FBIO debug_interface, disk_interface, stk_interface;
FB_EXPORT extern FBIO memory_interface, null_interface;

#endif  /* __FBIO_H__ */
/** @@} */
/*
 * Local Variables:
 * mode: C
 * tab-width: 8
 * c-basic-offset: 4
 * indent-tabs-mode: t
 * End:
 * ex: shiftwidth=4 tabstop=8
 */
@


1.15
log
@don't force USE_PROTOTYPES to be necessarily set to get what we usually want anyways (i.e. proper decls with args) -- check for __STDC__ too to determine how to declare.
@
text
@a28 2
 *
 *  $Header: /cvsroot/brlcad/brlcad/include/fbio.h,v 1.14 2007/05/14 18:11:50 brlcad Exp $
@


1.14
log
@ws
@
text
@d30 1
a30 1
 *  $Header: /cvsroot/brlcad/brlcad/include/fbio.h,v 1.13 2007/01/27 01:01:39 brlcad Exp $
d36 1
a36 1
#ifdef USE_PROTOTYPES
@


1.13
log
@ws, test three
@
text
@d30 1
a30 1
 *  $Header: /cvsroot/brlcad/brlcad/include/fbio.h,v 1.12 2007/01/23 01:13:20 brlcad Exp $
d37 1
a37 1
#	define	FB_ARGS(args)			args
d39 1
a39 1
#	define	FB_ARGS(args)			()
d43 9
a51 9
#   if defined(_WIN32) && !defined(__CYGWIN__) && defined(BRLCAD_DLL)
#      ifdef FB_EXPORT_DLL
#         define FB_EXPORT __declspec(dllexport)
#      else
#         define FB_EXPORT __declspec(dllimport)
#      endif
#   else
#      define FB_EXPORT
#   endif
d80 3
a82 3
	unsigned short cm_red[256];
	unsigned short cm_green[256];
	unsigned short cm_blue[256];
d105 52
a156 52
	long	if_magic;
	/* Static information: per device TYPE.	*/
	int	(*if_open)FB_ARGS((struct FBIO_ *ifp, char *file, int width, int height));		/**< @@brief open device		*/
	int	(*if_close)FB_ARGS((struct FBIO_ *ifp));				/**< @@brief close device		*/
	int	(*if_clear)FB_ARGS((struct FBIO_ *ifp, unsigned char *pp));		/**< @@brief clear device 	*/
	int	(*if_read)FB_ARGS((struct FBIO_ *ifp, int x, int y, unsigned char *pp, int count));		/**< @@brief read pixels		*/
	int	(*if_write)FB_ARGS((struct FBIO_ *ifp, int x, int y, const unsigned char *pp, int count));	/**< @@brief write pixels		*/
	int	(*if_rmap)FB_ARGS((struct FBIO_ *ifp, ColorMap *cmap));		/**< @@brief read colormap 	*/
	int	(*if_wmap)FB_ARGS((struct FBIO_ *ifp, const ColorMap *cmap));		/**< @@brief write colormap 	*/
	int	(*if_view)FB_ARGS((struct FBIO_ *ifp, int xcent, int ycent, int xzoom, int yzoom));		/**< @@brief set view		*/
	int	(*if_getview)FB_ARGS((struct FBIO_ *ifp, int *xcent, int *ycent, int *xzoom, int *yzoom));	/**< @@brief get view		*/
	int	(*if_setcursor)FB_ARGS((struct FBIO_ *ifp, const unsigned char *bits, int xb, int yb, int xo, int yo));	/**< @@brief define cursor 	*/
	int	(*if_cursor)FB_ARGS((struct FBIO_ *ifp, int mode, int x, int y));		/**< @@brief set cursor		*/
	int	(*if_getcursor)FB_ARGS((struct FBIO_ *ifp, int *mode, int *x, int *y));	/**< @@brief get cursor		*/
	int	(*if_readrect)FB_ARGS((struct FBIO_ *ifp, int xmin, int ymin, int width, int height, unsigned char *pp));	/**< @@brief read rectangle 	*/
	int	(*if_writerect)FB_ARGS((struct FBIO_ *ifp, int xmin, int ymin, int width, int height, const unsigned char *pp));	/**< @@brief write rectangle 	*/
	int	(*if_bwreadrect)FB_ARGS((struct FBIO_ *ifp, int xmin, int ymin, int width, int height, unsigned char *pp));	/**< @@brief read monochrome rectangle 	*/
	int	(*if_bwwriterect)FB_ARGS((struct FBIO_ *ifp, int xmin, int ymin, int width, int height, const unsigned char *pp));	/**< @@brief write rectangle 	*/
	int	(*if_poll)FB_ARGS((struct FBIO_ *ifp));		/**< @@brief handle events 	*/
	int	(*if_flush)FB_ARGS((struct FBIO_ *ifp));	/**< @@brief flush output 	*/
	int	(*if_free)FB_ARGS((struct FBIO_ *ifp));		/**< @@brief free resources 	*/
	int	(*if_help)FB_ARGS((struct FBIO_ *ifp));		/**< @@brief print useful info	*/
	char	*if_type;		/**< @@brief what "open" calls it	*/
	int	if_max_width;		/**< @@brief max device width	*/
	int	if_max_height;		/**< @@brief max device height	*/
	/* Dynamic information: per device INSTANCE. */
	char	*if_name;	/**< @@brief what the user called it */
	int	if_width;	/**< @@brief current values */
	int	if_height;
	int	if_selfd;	/**< @@brief select(fd) for input events if >= 0 */
	/* Internal information: needed by the library.	*/
	int	if_fd;		/**< @@brief internal file descriptor */
	int	if_xzoom;	/**< @@brief zoom factors */
	int	if_yzoom;
	int	if_xcenter;	/**< @@brief pan position */
	int	if_ycenter;
	int	if_cursmode;	/**< @@brief cursor on/off */
	int	if_xcurs;	/**< @@brief cursor position */
	int	if_ycurs;
	unsigned char *if_pbase;/**< @@brief Address of malloc()ed page buffer.	*/
	unsigned char *if_pcurp;/**< @@brief Current pointer into page buffer.	*/
	unsigned char *if_pendp;/**< @@brief End of page buffer.			*/
	int	if_pno;		/**< @@brief Current "page" in memory.		*/
	int	if_pdirty;	/**< @@brief Page modified flag.			*/
	long	if_pixcur;	/**< @@brief Current pixel number in framebuffer. */
	long	if_ppixels;	/**< @@brief Sizeof page buffer (pixels).		*/
	int	if_debug;	/**< @@brief Buffered IO debug flag.		*/
	/* State variables for individual interface modules */
	union	{
		char	*p;
		long	l;
	} u1, u2, u3, u4, u5, u6;
d161 1
a161 1
  FB_EXPORT extern FBIO remote_interface;	/* not in list[] */
d165 1
a165 1
  FB_EXPORT extern FBIO adage_interface;
d169 1
a169 1
  FB_EXPORT extern FBIO sun_interface;
d173 1
a173 1
  FB_EXPORT extern FBIO sgi_interface;
d177 1
a177 1
  FB_EXPORT extern FBIO ogl_interface;
d181 1
a181 1
  FB_EXPORT extern FBIO wgl_interface;
d185 1
a185 1
  FB_EXPORT extern FBIO rat_interface;
d189 1
a189 1
  FB_EXPORT extern FBIO ug_interface;
d193 2
a194 2
  FB_EXPORT extern FBIO X24_interface;
  FB_EXPORT extern FBIO X_interface;
d198 1
a198 1
  FB_EXPORT extern FBIO ptty_interface;
d202 1
a202 1
  FB_EXPORT extern FBIO abekas_interface;
d206 1
a206 1
  FB_EXPORT extern FBIO ts_interface;
d210 1
a210 1
  FB_EXPORT extern FBIO tk_interface;
@


1.12
log
@Sweeping license updates.  Documentation is fully relicensed to the BSD Documentation License (a minor variant of the FreeBSD Documentation License and BSD License).  All GPL code (mostly application code) is converted to the LGPL and now also specifically declares version 2.1, revoking the blank check to the FSF.  The intent of these sweeping changes are to simplify the licensing terms and increase overall flexibility of use, both externally (to users for their purposes) and internally (to allow application code to be migrated to libraries without creating GPL libraries).  As a collective work, BRL-CAD is now LGPL.
@
text
@d30 1
a30 1
 *  $Header: /cvsroot/brlcad/brlcad/include/fbio.h,v 1.11 2007/01/21 04:45:40 brlcad Exp $
a228 1

@


1.11
log
@ugh, what tedium.  put some effort towards cleaning up the doxygen labels and making the headers more consistent.  also exclusively using @@ for doxygen instead of \ to try to keep things more consistent.
@
text
@d9 1
a9 2
 * as published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
d14 1
a14 1
 * Library General Public License for more details.
d30 1
a30 1
 *  $Header: /cvsroot/brlcad/brlcad/include/fbio.h,v 1.10 2007/01/20 14:36:40 brlcad Exp $
@


1.10
log
@update copyright to 2007
@
text
@d21 2
a22 2
/** \addtogroup libfb */
/*@@{*/
d24 2
a25 1
 *@@brief
d28 1
a28 1
 *  @@par Source
d31 1
a31 1
 *  $Header: /cvsroot/brlcad/brlcad/include/fbio.h,v 1.9 2006/09/18 05:24:07 lbutler Exp $
d220 1
a220 1
/*@@}*/
@


1.9
log
@Doxygen updates
@
text
@d4 1
a4 1
 * Copyright (c) 2005-2006 United States Government as represented by
d30 1
a30 1
 *  $Header: /cvsroot/brlcad/brlcad/include/fbio.h,v 1.8 2006/09/07 01:19:17 lbutler Exp $
@


1.8
log
@Doxygen updates
@
text
@d27 1
a27 1
 *  Source -
d30 1
a30 1
 *  $Header: /cvsroot/brlcad/brlcad/include/fbio.h,v 1.7 2006/08/10 00:56:27 brlcad Exp $
d107 23
a129 23
	int	(*if_open)FB_ARGS((struct FBIO_ *ifp, char *file, int width, int height));		/* open device		*/
	int	(*if_close)FB_ARGS((struct FBIO_ *ifp));				/* close device		*/
	int	(*if_clear)FB_ARGS((struct FBIO_ *ifp, unsigned char *pp));		/* clear device 	*/
	int	(*if_read)FB_ARGS((struct FBIO_ *ifp, int x, int y, unsigned char *pp, int count));		/* read pixels		*/
	int	(*if_write)FB_ARGS((struct FBIO_ *ifp, int x, int y, const unsigned char *pp, int count));	/* write pixels		*/
	int	(*if_rmap)FB_ARGS((struct FBIO_ *ifp, ColorMap *cmap));		/* read colormap 	*/
	int	(*if_wmap)FB_ARGS((struct FBIO_ *ifp, const ColorMap *cmap));		/* write colormap 	*/
	int	(*if_view)FB_ARGS((struct FBIO_ *ifp, int xcent, int ycent, int xzoom, int yzoom));		/* set view		*/
	int	(*if_getview)FB_ARGS((struct FBIO_ *ifp, int *xcent, int *ycent, int *xzoom, int *yzoom));	/* get view		*/
	int	(*if_setcursor)FB_ARGS((struct FBIO_ *ifp, const unsigned char *bits, int xb, int yb, int xo, int yo));	/* define cursor 	*/
	int	(*if_cursor)FB_ARGS((struct FBIO_ *ifp, int mode, int x, int y));		/* set cursor		*/
	int	(*if_getcursor)FB_ARGS((struct FBIO_ *ifp, int *mode, int *x, int *y));	/* get cursor		*/
	int	(*if_readrect)FB_ARGS((struct FBIO_ *ifp, int xmin, int ymin, int width, int height, unsigned char *pp));	/* read rectangle 	*/
	int	(*if_writerect)FB_ARGS((struct FBIO_ *ifp, int xmin, int ymin, int width, int height, const unsigned char *pp));	/* write rectangle 	*/
	int	(*if_bwreadrect)FB_ARGS((struct FBIO_ *ifp, int xmin, int ymin, int width, int height, unsigned char *pp));	/* read monochrome rectangle 	*/
	int	(*if_bwwriterect)FB_ARGS((struct FBIO_ *ifp, int xmin, int ymin, int width, int height, const unsigned char *pp));	/* write rectangle 	*/
	int	(*if_poll)FB_ARGS((struct FBIO_ *ifp));		/* handle events 	*/
	int	(*if_flush)FB_ARGS((struct FBIO_ *ifp));	/* flush output 	*/
	int	(*if_free)FB_ARGS((struct FBIO_ *ifp));		/* free resources 	*/
	int	(*if_help)FB_ARGS((struct FBIO_ *ifp));		/* print useful info	*/
	char	*if_type;		/* what "open" calls it	*/
	int	if_max_width;		/* max device width	*/
	int	if_max_height;		/* max device height	*/
d131 2
a132 2
	char	*if_name;	/* what the user called it */
	int	if_width;	/* current values */
d134 1
a134 1
	int	if_selfd;	/* select(fd) for input events if >= 0 */
d136 2
a137 2
	int	if_fd;		/* internal file descriptor */
	int	if_xzoom;	/* zoom factors */
d139 1
a139 1
	int	if_xcenter;	/* pan position */
d141 2
a142 2
	int	if_cursmode;	/* cursor on/off */
	int	if_xcurs;	/* cursor position */
d144 8
a151 8
	unsigned char *if_pbase;/* Address of malloc()ed page buffer.	*/
	unsigned char *if_pcurp;/* Current pointer into page buffer.	*/
	unsigned char *if_pendp;/* End of page buffer.			*/
	int	if_pno;		/* Current "page" in memory.		*/
	int	if_pdirty;	/* Page modified flag.			*/
	long	if_pixcur;	/* Current pixel number in framebuffer. */
	long	if_ppixels;	/* Sizeof page buffer (pixels).		*/
	int	if_debug;	/* Buffered IO debug flag.		*/
d229 1
@


1.7
log
@initial steps for a Tk interface, if IF_TK is defined
@
text
@d21 2
d24 1
a24 1
 *
d30 1
a30 1
 *  $Header: /cvsroot/brlcad/brlcad/include/fbio.h,v 1.6 2006/08/07 17:55:15 brlcad Exp $
d55 1
a55 1
/*
d72 1
a72 1
/*
d95 1
a95 1
/*
d97 2
a99 1
 *  A frame-buffer IO structure.
d219 1
a219 1

@


1.6
log
@IF_4D interface is not really shipped any more, don't talk about it
@
text
@d28 1
a28 1
 *  $Header: /cvsroot/brlcad/brlcad/include/fbio.h,v 1.5 2006/08/07 16:04:38 brlcad Exp $
d206 4
@


1.5
log
@add explicit code for DM_WGL and IF_WGL for Windows GL support instead of piggybacking off of the OGL interface
@
text
@d28 1
a28 1
 *  $Header: /cvsroot/brlcad/brlcad/include/fbio.h,v 1.4 2006/01/18 06:46:10 brlcad Exp $
d169 1
a169 1
#if defined(IF_SGI) || defined(IF_4D) || defined(IF_5D)
@


1.4
log
@update copyright to 2006
@
text
@d28 1
a28 1
 *  $Header: /cvsroot/brlcad/brlcad/include/fbio.h,v 1.3 2005/12/23 21:26:25 bob1961 Exp $
d177 4
@


1.3
log
@Merge of bobWinPort
@
text
@d4 1
a4 1
 * Copyright (C) 2005 United States Government as represented by
d28 1
a28 1
 *  $Header: /cvsroot/brlcad/brlcad/include/fbio.h,v 1.2 2005/10/23 04:44:26 brlcad Exp $
@


1.2
log
@trailing ws
@
text
@d28 1
a28 1
 *  $Header: /cvsroot/brlcad/brlcad/include/fbio.h,v 1.1 2005/09/15 03:38:58 brlcad Exp $
d40 13
d157 45
a201 12
extern FBIO remote_interface;	/* not in list[] */
extern FBIO adage_interface;
extern FBIO sun_interface;
extern FBIO sgi_interface;
extern FBIO ogl_interface;
extern FBIO rat_interface;
extern FBIO ug_interface;
extern FBIO X24_interface;
extern FBIO X_interface;
extern FBIO ptty_interface;
extern FBIO abekas_interface;
extern FBIO ts_interface;
d204 2
a205 2
extern FBIO debug_interface, disk_interface, stk_interface;
extern FBIO memory_interface, null_interface;
@


1.2.2.1
log
@file fbio.h was added on branch rel-7-6-branch on 2005-11-13 13:46:10 +0000
@
text
@d1 171
@


1.2.2.2
log
@merge changes from HEAD aka rel-7-6-4 to the rel-7-6-branch just in case someone peeks a gander or tries to continue/build the branch
@
text
@a0 171
/*                         F B I O . H
 * BRL-CAD
 *
 * Copyright (C) 2005 United States Government as represented by
 * the U.S. Army Research Laboratory.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * as published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this file; see the file named COPYING for more
 * information.
 */
/** @@file fbio.h
 *
 *  BRL-CAD Framebuffer Library I/O Interfaces
 *
 *  Source -
 *	BRL-CAD Open Source
 *
 *  $Header$
 */

#ifndef __FBIO_H__
#define __FBIO_H__

#ifdef USE_PROTOTYPES
#	define	FB_ARGS(args)			args
#else
#	define	FB_ARGS(args)			()
#endif

/*
 *			R G B p i x e l
 *
 *  Format of disk pixels is .pix raw image files.
 *  Formerly used as arguments to many of the library routines,
 *  but has fallen into disuse due to the difficulties with
 *  ANSI function prototypes, and the fact that arrays are not
 *  real types in C.  The most notable problem is that of passing
 *  a pointer to an array of RGBpixel.  It looks doubly dimensioned,
 *  but isn't.
 */
typedef unsigned char RGBpixel[3];

#define	RED	0
#define	GRN	1
#define	BLU	2

/*
 *			C o l o r M a p
 *
 *  These generic color maps have up to 16 bits of significance,
 *  left-justified in a short.  Think of this as fixed-point values
 *  from 0 to 1.
 */
typedef struct  {
	unsigned short cm_red[256];
	unsigned short cm_green[256];
	unsigned short cm_blue[256];
} ColorMap;


#define PIXEL_NULL	(unsigned char *) 0
#define RGBPIXEL_NULL	(unsigned char *) 0
#define COLORMAP_NULL	(ColorMap *) 0
#define FBIO_NULL	(FBIO *) 0

#define FB_MAGIC	0xfbfb00fb
#define FB_CK_FBIO(_p)	FB_CKMAG(_p, FB_MAGIC, "FBIO" )


/*
 *			F B I O
 *
 *  A frame-buffer IO structure.
 *  One of these is allocated for each active framebuffer.
 *  A pointer to this structure is the first argument to all
 *  the library routines.
 */
typedef struct FBIO_ {
	long	if_magic;
	/* Static information: per device TYPE.	*/
	int	(*if_open)FB_ARGS((struct FBIO_ *ifp, char *file, int width, int height));		/* open device		*/
	int	(*if_close)FB_ARGS((struct FBIO_ *ifp));				/* close device		*/
	int	(*if_clear)FB_ARGS((struct FBIO_ *ifp, unsigned char *pp));		/* clear device 	*/
	int	(*if_read)FB_ARGS((struct FBIO_ *ifp, int x, int y, unsigned char *pp, int count));		/* read pixels		*/
	int	(*if_write)FB_ARGS((struct FBIO_ *ifp, int x, int y, const unsigned char *pp, int count));	/* write pixels		*/
	int	(*if_rmap)FB_ARGS((struct FBIO_ *ifp, ColorMap *cmap));		/* read colormap 	*/
	int	(*if_wmap)FB_ARGS((struct FBIO_ *ifp, const ColorMap *cmap));		/* write colormap 	*/
	int	(*if_view)FB_ARGS((struct FBIO_ *ifp, int xcent, int ycent, int xzoom, int yzoom));		/* set view		*/
	int	(*if_getview)FB_ARGS((struct FBIO_ *ifp, int *xcent, int *ycent, int *xzoom, int *yzoom));	/* get view		*/
	int	(*if_setcursor)FB_ARGS((struct FBIO_ *ifp, const unsigned char *bits, int xb, int yb, int xo, int yo));	/* define cursor 	*/
	int	(*if_cursor)FB_ARGS((struct FBIO_ *ifp, int mode, int x, int y));		/* set cursor		*/
	int	(*if_getcursor)FB_ARGS((struct FBIO_ *ifp, int *mode, int *x, int *y));	/* get cursor		*/
	int	(*if_readrect)FB_ARGS((struct FBIO_ *ifp, int xmin, int ymin, int width, int height, unsigned char *pp));	/* read rectangle 	*/
	int	(*if_writerect)FB_ARGS((struct FBIO_ *ifp, int xmin, int ymin, int width, int height, const unsigned char *pp));	/* write rectangle 	*/
	int	(*if_bwreadrect)FB_ARGS((struct FBIO_ *ifp, int xmin, int ymin, int width, int height, unsigned char *pp));	/* read monochrome rectangle 	*/
	int	(*if_bwwriterect)FB_ARGS((struct FBIO_ *ifp, int xmin, int ymin, int width, int height, const unsigned char *pp));	/* write rectangle 	*/
	int	(*if_poll)FB_ARGS((struct FBIO_ *ifp));		/* handle events 	*/
	int	(*if_flush)FB_ARGS((struct FBIO_ *ifp));	/* flush output 	*/
	int	(*if_free)FB_ARGS((struct FBIO_ *ifp));		/* free resources 	*/
	int	(*if_help)FB_ARGS((struct FBIO_ *ifp));		/* print useful info	*/
	char	*if_type;		/* what "open" calls it	*/
	int	if_max_width;		/* max device width	*/
	int	if_max_height;		/* max device height	*/
	/* Dynamic information: per device INSTANCE. */
	char	*if_name;	/* what the user called it */
	int	if_width;	/* current values */
	int	if_height;
	int	if_selfd;	/* select(fd) for input events if >= 0 */
	/* Internal information: needed by the library.	*/
	int	if_fd;		/* internal file descriptor */
	int	if_xzoom;	/* zoom factors */
	int	if_yzoom;
	int	if_xcenter;	/* pan position */
	int	if_ycenter;
	int	if_cursmode;	/* cursor on/off */
	int	if_xcurs;	/* cursor position */
	int	if_ycurs;
	unsigned char *if_pbase;/* Address of malloc()ed page buffer.	*/
	unsigned char *if_pcurp;/* Current pointer into page buffer.	*/
	unsigned char *if_pendp;/* End of page buffer.			*/
	int	if_pno;		/* Current "page" in memory.		*/
	int	if_pdirty;	/* Page modified flag.			*/
	long	if_pixcur;	/* Current pixel number in framebuffer. */
	long	if_ppixels;	/* Sizeof page buffer (pixels).		*/
	int	if_debug;	/* Buffered IO debug flag.		*/
	/* State variables for individual interface modules */
	union	{
		char	*p;
		long	l;
	} u1, u2, u3, u4, u5, u6;
} FBIO;

/* declare all the possible interfaces */
extern FBIO remote_interface;	/* not in list[] */
extern FBIO adage_interface;
extern FBIO sun_interface;
extern FBIO sgi_interface;
extern FBIO ogl_interface;
extern FBIO rat_interface;
extern FBIO ug_interface;
extern FBIO X24_interface;
extern FBIO X_interface;
extern FBIO ptty_interface;
extern FBIO abekas_interface;
extern FBIO ts_interface;

/* Always included */
extern FBIO debug_interface, disk_interface, stk_interface;
extern FBIO memory_interface, null_interface;

#endif  /* __FBIO_H__ */

/*
 * Local Variables:
 * mode: C
 * tab-width: 8
 * c-basic-offset: 4
 * indent-tabs-mode: t
 * End:
 * ex: shiftwidth=4 tabstop=8
 */
@


1.1
log
@separate out the libfb  FBIO structure and associated interface declarations into their own new header
@
text
@d24 1
a24 1
 *  
d28 1
a28 1
 *  $Header: /cvsroot/brlcad/brlcad/include/fb.h,v 14.6 2005/05/28 02:14:49 brlcad Exp $
@

