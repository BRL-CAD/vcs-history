head	14.14;
access;
symbols
	rel-7-10-4:14.14
	STABLE:14.14.0.2
	stable-branch:14.6
	rel-7-10-2:14.14
	rel-7-10-0:14.13
	rel-7-8-4:14.9
	rel-7-8-2:14.8
	rel-7-8-0:14.8
	trimnurbs-branch:14.8.0.2
	help:14.8
	temp_tag:14.7
	bobWinPort-20051223-freeze:14.6
	postmerge-20051223-bobWinPort:14.7
	premerge-20051223-bobWinPort:14.7
	rel-7-6-6:14.7
	rel-7-6-4:14.7
	rel-7-6-2:14.6
	rel-7-6-branch:14.6.0.6
	rel-7-6-0:14.6
	rel-7-4-2:14.6
	rel-7-4-branch:14.6.0.4
	bobWinPort:14.6.0.2
	rel-7-4-0:14.6
	rel-7-2-6:14.6
	rel-7-2-4:14.6
	rel-7-2-2:14.6
	rel-7-2-0:14.4
	rel-7-0-4:14.3
	rel-7-0-2:14.3
	rel-7-0-1:14.3
	opensource-post:14.3
	opensource-pre:1.1
	rel-7-0-branch:1.1.0.2
	rel-7-0:1.1;
locks; strict;
comment	@ * @;


14.14
date	2007.05.26.01.45.04;	author brlcad;	state Exp;
branches;
next	14.13;

14.13
date	2007.01.27.01.01.40;	author brlcad;	state Exp;
branches;
next	14.12;

14.12
date	2007.01.23.01.13.20;	author brlcad;	state Exp;
branches;
next	14.11;

14.11
date	2007.01.21.04.45.40;	author brlcad;	state Exp;
branches;
next	14.10;

14.10
date	2007.01.20.14.36.40;	author brlcad;	state Exp;
branches;
next	14.9;

14.9
date	2006.09.18.05.24.07;	author lbutler;	state Exp;
branches;
next	14.8;

14.8
date	2006.01.18.06.46.10;	author brlcad;	state Exp;
branches;
next	14.7;

14.7
date	2005.10.23.04.44.26;	author brlcad;	state Exp;
branches;
next	14.6;

14.6
date	2005.03.30.07.38.14;	author brlcad;	state Exp;
branches
	14.6.6.1;
next	14.5;

14.5
date	2005.03.28.06.27.38;	author bob1961;	state Exp;
branches;
next	14.4;

14.4
date	2005.01.30.20.30.11;	author brlcad;	state Exp;
branches;
next	14.3;

14.3
date	2004.12.21.06.23.18;	author morrison;	state Exp;
branches;
next	14.2;

14.2
date	2004.12.21.06.06.39;	author butler;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.10;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.24.04.10.51;	author morrison;	state Exp;
branches;
next	;

14.6.6.1
date	2005.11.13.13.46.10;	author brlcad;	state Exp;
branches;
next	;


desc
@@


14.14
log
@get rid of RCS variables from the public header files.  this is done in part to reduce recompilation during interface changes, but also to move towards not relying on or publishing the information contained in the variables interface-wise. (they're fine for c sources and private headers)
@
text
@/*                      S P E C T R U M . H
 * BRL-CAD
 *
 * Copyright (c) 2004-2007 United States Government as represented by
 * the U.S. Army Research Laboratory.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * version 2.1 as published by the Free Software Foundation.
 *
 * This library is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this file; see the file named COPYING for more
 * information.
 */
/** @@addtogroup libmultispectral */
/** @@{ */
/** @@file spectrum.h
 *
 *  A header file containing data structures to assist with
 *  recording spectral data.
 *  The overall notion is that each spectral sample should be
 *  as compact as possible (typically just an array of power levels),
 *  with all the context stored in one place.
 *
 *  The context is kept in an 'bn_table' structure, and
 *  the data for one particular sample are kept in an 'bn_tabdata'
 *  structure.
 *  tabdata.h provides the data structures,
 *  librt/tabdata.c provides the routines.
 *
 *  The contents of the spectral sample in val[j] are interpreted
 *  in the interval (wavel[j]..wavel[j+1]).
 *  This value could be power, albedo, absorption, refractive index,
 *  or any other wavelength-specific parameter.
 *
 *  For example, if the val[] array contains power values, then
 *  val[j] contains the integral of the power from wavel[j] to wavel[j+1]
 *
 *  As an exmple, assume nwave=2, wavel[0]=500, wavel[1]=600, wavel[2]=700.
 *  Then val[0] would contain data for the 500 to 600nm interval,
 *  and val[1] would contain data for the 600 to 700nm interval.
 *  There would be no storage allocated for val[2] -- don't use it!
 *  There are several interpretations of this:
 *	1)  val[j] stores the total (integral, area) value for the interval, or
 *	2)  val[j] stores the average value across the interval.
 *
 *  The intervals need not be uniformly spaced; it is acceptable to
 *  increase wavelength sampling density around "important" frequencies.
 *  This will undoubtably complicate certain functions.
 *
 *  By convention, wavelength is stored in nanometers as an integer,
 *  and power is stored in Watts.
 *
 *  Wavelength Units -
 *	cm = 10** -2 m	centimeters
 *	mm = 10** -3 m	milimeters
 *	um = 10** -6 m	micrometers, or microns
 *	nm = 10** -9 m	nanometers
 *
 *  The Spectrum in nm -
 *	< 10 nm			X-Rays
 *	10 to 390		Ultraviolet
 *	390 to 770		Visible
 *	770 to 1500		Near IR
 *	1500 to 6,000		Middle IR	(includes 3-5 um band)
 *	6,000 to 40,000		Far IR		(includes 8-12 um band)
 *	40,000 to 1,000,000	Extreme IR
 *	> 10**6 nm		Microwaves	(300 GHz to 300 MHz)
 *	> 10**9 nm		Radio waves	(300 MHz and down)
 *
 *  It is tempting to store the wavelength in nanometers as an integer,
 *  but that might preclude very narrow-band calculations, such as might
 *  be required to study a single spectral line,
 *  and it might also preclude future extensions to X-rays.
 *  Because there are likely to be very few bn_table structures
 *  in use, the extra storage isn't a likely problem.
 *  The worst effect of this decision will be floating-point grunge
 *  when printing wavelengths, e.g. 650nm might print as 649.99nm.
 *  On the other hand, non-integer values might make it difficult to
 *  determine if two wavelengths from different curves were the "same",
 *  without introducing a wavelength "tolerance" notion.  Ugh.
 *
 *  @@author
 *	Michael John Muuss
 *
 *  @@par Source
 *	The U. S. Army Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5068  USA
 */

#include "common.h"

#include "bn.h"
#include "raytrace.h"

/*
 * Routines
 */
RT_EXPORT BU_EXTERN(void			rt_spect_make_CIE_XYZ,
		    (struct bn_tabdata		**x,
		     struct bn_tabdata		**y,
		     struct bn_tabdata		**z,
		     const struct bn_table	*tabp));

RT_EXPORT BU_EXTERN(void			rt_spect_black_body,
		    (struct bn_tabdata		*data,
		     double			temp,
		     unsigned int		n));
RT_EXPORT BU_EXTERN(void			rt_spect_black_body_fast,
		    (struct bn_tabdata		*data,
		     double			temp));

RT_EXPORT BU_EXTERN(void			rt_spect_reflectance_rgb,
		    (struct bn_tabdata		*curve,
		     const float		rgb[3]));

/** @@} */
/*
 * Local Variables:
 * mode: C
 * tab-width: 8
 * c-basic-offset: 4
 * indent-tabs-mode: t
 * End:
 * ex: shiftwidth=4 tabstop=8
 */
@


14.13
log
@ws, test three
@
text
@a93 1
 *  $Header: /cvsroot/brlcad/brlcad/include/spectrum.h,v 14.12 2007/01/23 01:13:20 brlcad Exp $
@


14.12
log
@Sweeping license updates.  Documentation is fully relicensed to the BSD Documentation License (a minor variant of the FreeBSD Documentation License and BSD License).  All GPL code (mostly application code) is converted to the LGPL and now also specifically declares version 2.1, revoking the blank check to the FSF.  The intent of these sweeping changes are to simplify the licensing terms and increase overall flexibility of use, both externally (to users for their purposes) and internally (to allow application code to be migrated to libraries without creating GPL libraries).  As a collective work, BRL-CAD is now LGPL.
@
text
@d94 1
a94 1
 *  $Header: /cvsroot/brlcad/brlcad/include/spectrum.h,v 14.11 2007/01/21 04:45:40 brlcad Exp $
a132 1

@


14.11
log
@ugh, what tedium.  put some effort towards cleaning up the doxygen labels and making the headers more consistent.  also exclusively using @@ for doxygen instead of \ to try to keep things more consistent.
@
text
@d9 1
a9 2
 * as published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
d14 1
a14 1
 * Library General Public License for more details.
d94 1
a94 1
 *  $Header: /cvsroot/brlcad/brlcad/include/spectrum.h,v 14.10 2007/01/20 14:36:40 brlcad Exp $
@


14.10
log
@update copyright to 2007
@
text
@d22 1
a22 1
/*@@{*/
d95 1
a95 1
 *  $Header: /cvsroot/brlcad/brlcad/include/spectrum.h,v 14.9 2006/09/18 05:24:07 lbutler Exp $
d124 1
a124 1
/*@@}*/
@


14.9
log
@Doxygen updates
@
text
@d4 1
a4 1
 * Copyright (c) 2004-2006 United States Government as represented by
d95 1
a95 1
 *  $Header: /cvsroot/brlcad/brlcad/include/spectrum.h,v 14.8 2006/01/18 06:46:10 brlcad Exp $
@


14.8
log
@update copyright to 2006
@
text
@d21 2
d89 1
a89 1
 *  Author -
d92 1
a92 1
 *  Source -
d95 1
a95 1
 *  $Header: /cvsroot/brlcad/brlcad/include/spectrum.h,v 14.7 2005/10/23 04:44:26 brlcad Exp $
d124 1
a124 1

d134 1
@


14.7
log
@trailing ws
@
text
@d4 1
a4 1
 * Copyright (C) 2004-2005 United States Government as represented by
d93 1
a93 1
 *  $Header: /cvsroot/brlcad/brlcad/include/spectrum.h,v 14.6 2005/03/30 07:38:14 brlcad Exp $
@


14.6
log
@add the headers this header depends on
@
text
@d32 1
a32 1
 *  tabdata.h provides the data structures, 
d89 1
a89 1
 *  
d93 1
a93 1
 *  $Header: /cvsroot/brlcad/brlcad/include/spectrum.h,v 14.5 2005/03/28 06:27:38 bob1961 Exp $
d118 2
a119 2
RT_EXPORT BU_EXTERN(void			rt_spect_reflectance_rgb, 
		    (struct bn_tabdata		*curve, 
@


14.6.6.1
log
@merge changes from HEAD aka rel-7-6-4 to the rel-7-6-branch just in case someone peeks a gander or tries to continue/build the branch
@
text
@d32 1
a32 1
 *  tabdata.h provides the data structures,
d89 1
a89 1
 *
d93 1
a93 1
 *  $Header$
d118 2
a119 2
RT_EXPORT BU_EXTERN(void			rt_spect_reflectance_rgb,
		    (struct bn_tabdata		*curve,
@


14.5
log
@Declare more librt functions
@
text
@d93 1
a93 1
 *  $Header: /cvsroot/brlcad/brlcad/include/spectrum.h,v 14.4 2005/01/30 20:30:11 brlcad Exp $
d96 5
a122 1

@


14.4
log
@update copyright to 2005
@
text
@d93 1
a93 1
 *  $Header: /cvsroot/brlcad/brlcad/include/spectrum.h,v 14.3 2004/12/21 06:23:18 morrison Exp $
d99 17
a115 15
BU_EXTERN( void			rt_spect_make_CIE_XYZ, (
					struct bn_tabdata **x,
					struct bn_tabdata **y,
					struct bn_tabdata **z,
					const struct bn_table *tabp));

BU_EXTERN( void			rt_spect_black_body, (struct bn_tabdata *data,
					double temp, unsigned int n));
BU_EXTERN( void			rt_spect_black_body_fast, (
					struct bn_tabdata *data,
					double temp));

BU_EXTERN(void			rt_spect_reflectance_rgb, 
	  (struct bn_tabdata	*curve, 
	   const float		rgb[3]));
@


14.3
log
@use perl to M-q format wrapping
@
text
@d4 2
a5 2
 * Copyright (c) 2004 United States Government as represented by the
 * U.S. Army Research Laboratory.
d93 1
a93 1
 *  $Header: /cvs/brlcad/include/spectrum.h,v 14.2 2004/12/21 06:06:39 butler Exp $
@


14.2
log
@LGPL license changes
@
text
@d17 2
a18 2
 * You should have received a copy of the GNU Lesser General Public License
 * along with this file; see the file named COPYING for more
d93 1
a93 1
 *  $Header: /cvs/brlcad/include/spectrum.h,v 14.1 2004/11/16 19:42:10 morrison Exp $
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d1 21
a21 2
/*
 *			S P E C T R U M . H
d93 1
a93 5
 *  
 *  Distribution Status -
 *	Public Domain, Distribution Unlimited.
 *
 *  $Header: /cvs/brlcad/include/spectrum.h,v 1.1 2004/05/24 04:10:51 morrison Exp $
@


1.1
log
@moved/renamed from top-level h/ to top-level include/
@
text
@d78 1
a78 1
 *  $Header$
d101 10
@

