head	14.21;
access;
symbols
	rel-7-10-4:14.21
	STABLE:14.21.0.2
	stable-branch:14.5
	rel-7-10-2:14.20
	rel-7-10-0:14.17
	rel-7-8-4:14.13
	rel-7-8-2:14.8
	rel-7-8-0:14.8
	trimnurbs-branch:14.8.0.2
	help:14.8
	temp_tag:14.7
	bobWinPort-20051223-freeze:14.6
	postmerge-20051223-bobWinPort:14.7
	premerge-20051223-bobWinPort:14.7
	rel-7-6-6:14.7
	rel-7-6-4:14.7
	rel-7-6-2:14.6
	rel-7-6-branch:14.6.0.6
	rel-7-6-0:14.6
	rel-7-4-2:14.6
	rel-7-4-branch:14.6.0.4
	bobWinPort:14.6.0.2
	rel-7-4-0:14.6
	rel-7-2-6:14.6
	rel-7-2-4:14.6
	rel-7-2-2:14.5
	rel-7-2-0:14.4
	rel-7-0-4:14.3
	rel-7-0-2:14.3
	rel-7-0-1:14.3
	opensource-post:14.3
	opensource-pre:1.1
	rel-7-0-branch:1.1.0.2
	rel-7-0:1.1;
locks; strict;
comment	@ * @;


14.21
date	2007.08.18.08.41.21;	author brlcad;	state Exp;
branches;
next	14.20;

14.20
date	2007.07.26.01.13.50;	author brlcad;	state Exp;
branches;
next	14.19;

14.19
date	2007.05.26.02.08.01;	author brlcad;	state Exp;
branches;
next	14.18;

14.18
date	2007.05.26.01.45.04;	author brlcad;	state Exp;
branches;
next	14.17;

14.17
date	2007.01.27.01.01.39;	author brlcad;	state Exp;
branches;
next	14.16;

14.16
date	2007.01.23.01.13.20;	author brlcad;	state Exp;
branches;
next	14.15;

14.15
date	2007.01.21.04.45.40;	author brlcad;	state Exp;
branches;
next	14.14;

14.14
date	2007.01.20.14.36.40;	author brlcad;	state Exp;
branches;
next	14.13;

14.13
date	2006.09.18.05.24.07;	author lbutler;	state Exp;
branches;
next	14.12;

14.12
date	2006.08.08.18.28.29;	author brlcad;	state Exp;
branches;
next	14.11;

14.11
date	2006.08.08.18.02.20;	author brlcad;	state Exp;
branches;
next	14.10;

14.10
date	2006.08.07.10.16.30;	author brlcad;	state Exp;
branches;
next	14.9;

14.9
date	2006.08.01.15.37.33;	author brlcad;	state Exp;
branches;
next	14.8;

14.8
date	2006.01.18.06.46.10;	author brlcad;	state Exp;
branches;
next	14.7;

14.7
date	2005.09.19.17.44.36;	author brlcad;	state Exp;
branches;
next	14.6;

14.6
date	2005.05.08.05.27.57;	author brlcad;	state Exp;
branches
	14.6.6.1;
next	14.5;

14.5
date	2005.03.28.06.31.27;	author bob1961;	state Exp;
branches;
next	14.4;

14.4
date	2005.01.30.20.30.10;	author brlcad;	state Exp;
branches;
next	14.3;

14.3
date	2004.12.21.06.23.18;	author morrison;	state Exp;
branches;
next	14.2;

14.2
date	2004.12.21.06.06.38;	author butler;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.10;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.24.04.10.50;	author morrison;	state Exp;
branches;
next	;

14.6.6.1
date	2005.11.13.13.46.10;	author brlcad;	state Exp;
branches;
next	;


desc
@@


14.21
log
@quell warning, ifdef instead of if rt_multispectral
@
text
@/*                         L I G H T . H
 * BRL-CAD
 *
 * Copyright (c) 1990-2007 United States Government as represented by
 * the U.S. Army Research Laboratory.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * version 2.1 as published by the Free Software Foundation.
 *
 * This library is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this file; see the file named COPYING for more
 * information.
 */
/** @@addtogroup librt */
/** @@{ */
/** @@file light.h
 *
 * @@brief
 *  Declarations related to light sources
 *
 */

#ifndef __LIGHT_H__
#define __LIGHT_H__

#include "common.h"

#include "machine.h"
#include "bu.h"
#include "bn.h"
#include "raytrace.h"

/* XXX replicated from optical.h */
#ifndef OPTICAL_EXPORT
#  if defined(_WIN32) && !defined(__CYGWIN__) && defined(BRLCAD_DLL)
#    ifdef OPTICAL_EXPORT_DLL
#      define OPTICAL_EXPORT __declspec(dllexport)
#    else
#      define OPTICAL_EXPORT __declspec(dllimport)
#    endif
#  else
#    define OPTICAL_EXPORT
#  endif
#endif


__BEGIN_DECLS

struct light_pt {
	point_t	lp_pt;
	vect_t	lp_norm;
};
#define LPT_MAGIC 0x327649
#define SOME_LIGHT_SAMPLES 128

struct light_specific {
	struct bu_list	l;	/**< @@brief doubly linked list */
	/* User-specified fields */
	vect_t	lt_target;	/**< @@brief explicit coordinate aim point */
	fastf_t	lt_intensity;	/**< @@brief Intensity Lumens (cd*sr): total output */
	fastf_t	lt_angle;	/**< @@brief beam dispersion angle (degrees) 0..180 */
	fastf_t	lt_fraction;	/**< @@brief fraction of total light */
	int	lt_shadows;	/**< @@brief !0 if this light casts shadows, # of rays*/
	int	lt_infinite;	/**< @@brief !0 if infinitely distant */
	int	lt_visible;	/**< @@brief 0 if implicitly modeled or invisible */
	int	lt_invisible;	/**< @@brief 0 if implicitly modeled or invisible */
	int	lt_exaim;	/**< @@brief !0 if explicit aim in lt_target */
	fastf_t lt_obscure;	/**< @@brief percentage obscuration of light */
	/* Internal fields */
#ifdef RT_MULTISPECTRAL
	struct bn_tabdata *lt_spectrum;	/**< @@brief Units?  mw*sr ? */
#else
	vect_t	lt_color;	/**< @@brief RGB, as 0..1 */
#endif
	fastf_t	lt_radius;	/**< @@brief approximate radius of spherical light */
	fastf_t	lt_cosangle;	/**< @@brief cos of lt_angle */
	vect_t	lt_pos;		/**< @@brief location in space of light */
	vect_t	lt_vec;		/**< @@brief Unit vector from origin to light */
	vect_t	lt_aim;		/**< @@brief Unit vector - light beam direction */
	char	*lt_name;	/**< @@brief identifying string */
	struct	region *lt_rp;	/**< @@brief our region of origin */
	int	lt_pt_count;	/**< @@brief count of how many lt_sample_pts have been set */
	struct light_pt *lt_sample_pts; /**< @@brief dynamically allocated list of light sample points */
	fastf_t lt_parse_pt[6];
};
#define LIGHT_NULL	((struct light_specific *)0)
#define LIGHT_MAGIC	0xdbddbdb7
#define RT_CK_LIGHT(_p)	BU_CKMAG((_p), LIGHT_MAGIC, "light_specific")

/* defined in sh_light.c */
OPTICAL_EXPORT extern struct light_specific	LightHead;

OPTICAL_EXPORT extern void light_cleanup(void);
OPTICAL_EXPORT extern void light_maker(int num, mat_t v2m);
OPTICAL_EXPORT extern int light_init(struct application *ap);
OPTICAL_EXPORT extern void light_obs(struct application *ap, struct shadework *swp, int have);

__END_DECLS

#endif /* __LIGHT_H__ */

/** @@} */
/*
 * Local Variables:
 * mode: C
 * tab-width: 8
 * c-basic-offset: 4
 * indent-tabs-mode: t
 * End:
 * ex: shiftwidth=4 tabstop=8
 */
@


14.20
log
@remove ephemeral data like phone numbers and addresses, including the misleading 'source' statements on code that is continually evolving and receiving contributions from many many sources
@
text
@d76 1
a76 1
#if RT_MULTISPECTRAL
@


14.19
log
@clean up the header protections so that they are all now more consistent with one another via use of __HEADER_H__ for the define names.
@
text
@a26 4
 *  @@par Source
 *	SECAD/VLD Computing Consortium, Bldg 394
 *  @@n	The U. S. Army Ballistic Research Laboratory
 *  @@n	Aberdeen Proving Ground, Maryland  21005-5066
@


14.18
log
@get rid of RCS variables from the public header files.  this is done in part to reduce recompilation during interface changes, but also to move towards not relying on or publishing the information contained in the variables interface-wise. (they're fine for c sources and private headers)
@
text
@d33 2
a34 2
#ifndef SEEN_LIGHT_H
#define SEEN_LIGHT_H seen
d110 2
a111 1
#endif /* SEEN_LIGHT_H */
@


14.17
log
@ws, test three
@
text
@a30 2
 *
 *  @@(#)$Header: /cvsroot/brlcad/brlcad/include/light.h,v 14.16 2007/01/23 01:13:20 brlcad Exp $ (BRL)
@


14.16
log
@Sweeping license updates.  Documentation is fully relicensed to the BSD Documentation License (a minor variant of the FreeBSD Documentation License and BSD License).  All GPL code (mostly application code) is converted to the LGPL and now also specifically declares version 2.1, revoking the blank check to the FSF.  The intent of these sweeping changes are to simplify the licensing terms and increase overall flexibility of use, both externally (to users for their purposes) and internally (to allow application code to be migrated to libraries without creating GPL libraries).  As a collective work, BRL-CAD is now LGPL.
@
text
@d32 1
a32 1
 *  @@(#)$Header: /cvsroot/brlcad/brlcad/include/light.h,v 14.15 2007/01/21 04:45:40 brlcad Exp $ (BRL)
a122 1

@


14.15
log
@ugh, what tedium.  put some effort towards cleaning up the doxygen labels and making the headers more consistent.  also exclusively using @@ for doxygen instead of \ to try to keep things more consistent.
@
text
@d9 1
a9 2
 * as published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
d14 1
a14 1
 * Library General Public License for more details.
d32 1
a32 1
 *  @@(#)$Header: /cvsroot/brlcad/brlcad/include/light.h,v 14.14 2007/01/20 14:36:40 brlcad Exp $ (BRL)
@


14.14
log
@update copyright to 2007
@
text
@d22 1
a22 1
/*@@{*/
d30 2
a31 2
 *@@n	The U. S. Army Ballistic Research Laboratory
 *@@n	Aberdeen Proving Ground, Maryland  21005-5066
d33 1
a33 1
 *  @@(#)$Header: /cvsroot/brlcad/brlcad/include/light.h,v 14.13 2006/09/18 05:24:07 lbutler Exp $ (BRL)
d114 1
a114 1
/*@@}*/
@


14.13
log
@Doxygen updates
@
text
@d4 1
a4 1
 * Copyright (c) 1990-2006 United States Government as represented by
d33 1
a33 1
 *  @@(#)$Header: /cvsroot/brlcad/brlcad/include/light.h,v 14.12 2006/08/08 18:28:29 brlcad Exp $ (BRL)
@


14.12
log
@next step in the incremental update, dynamically allocate the light sample points array instead of using a fixed size.
@
text
@d21 2
d25 1
d28 1
a28 1
 *  Source -
d30 2
a31 2
 *	The U. S. Army Ballistic Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5066
d33 1
a33 1
 *  @@(#)$Header: /cvsroot/brlcad/brlcad/include/light.h,v 14.11 2006/08/08 18:02:20 brlcad Exp $ (BRL)
d70 1
a70 1
	struct bu_list	l;	/* doubly linked list */
d72 10
a81 10
	vect_t	lt_target;	/* explicit coordinate aim point */
	fastf_t	lt_intensity;	/* Intensity Lumens (cd*sr): total output */
	fastf_t	lt_angle;	/* beam dispersion angle (degrees) 0..180 */
	fastf_t	lt_fraction;	/* fraction of total light */
	int	lt_shadows;	/* !0 if this light casts shadows, # of rays*/
	int	lt_infinite;	/* !0 if infinitely distant */
	int	lt_visible;	/* 0 if implicitly modeled or invisible */
	int	lt_invisible;	/* 0 if implicitly modeled or invisible */
	int	lt_exaim;	/* !0 if explicit aim in lt_target */
	fastf_t lt_obscure;	/* percentage obscuration of light */
d84 1
a84 1
	struct bn_tabdata *lt_spectrum;	/* Units?  mw*sr ? */
d86 1
a86 1
	vect_t	lt_color;	/* RGB, as 0..1 */
d88 9
a96 9
	fastf_t	lt_radius;	/* approximate radius of spherical light */
	fastf_t	lt_cosangle;	/* cos of lt_angle */
	vect_t	lt_pos;		/* location in space of light */
	vect_t	lt_vec;		/* Unit vector from origin to light */
	vect_t	lt_aim;		/* Unit vector - light beam direction */
	char	*lt_name;	/* identifying string */
	struct	region *lt_rp;	/* our region of origin */
	int	lt_pt_count;	/* count of how many lt_sample_pts have been set */
	struct light_pt *lt_sample_pts; /* dynamically allocated list of light sample points */
d114 1
a114 1

d124 1
@


14.11
log
@incremental update this time.. change MAX_LIGHT_SAMPLES to SOME_LIGHT_SAMPLES
@
text
@d30 1
a30 1
 *  @@(#)$Header: /cvsroot/brlcad/brlcad/include/light.h,v 14.10 2006/08/07 10:16:30 brlcad Exp $ (BRL)
d92 2
a93 2
	int	lt_pt_count;
	struct light_pt lt_sample_pts[SOME_LIGHT_SAMPLES];
@


14.10
log
@revert the unlimited lights change briefly until it is determined why they are not working for area light sources
@
text
@d30 1
a30 1
 *  @@(#)$Header: /cvsroot/brlcad/brlcad/include/light.h,v 14.8 2006/01/18 06:46:10 brlcad Exp $ (BRL)
d64 1
a64 1
#define MAX_LIGHT_SAMPLES 128
d93 1
a93 1
	struct light_pt lt_sample_pts[MAX_LIGHT_SAMPLES];
@


14.9
log
@allow unlimited light samples during ray-tracing instead of a fixed compile-time count (was 128)
@
text
@d64 1
a64 3

/* allocate light_pt structs in bunches this size */
#define SOME_LIGHT_POINTS 128
d92 2
a93 2
	int	lt_pt_count;    /* count of how many lt_sample_pts have been set */
	struct light_pt *lt_sample_pts; /* dynamically allocated list of light sample points */
@


14.8
log
@update copyright to 2006
@
text
@d30 1
a30 1
 *  @@(#)$Header: /cvsroot/brlcad/brlcad/include/light.h,v 14.7 2005/09/19 17:44:36 brlcad Exp $ (BRL)
d64 3
a66 1
#define MAX_LIGHT_SAMPLES 128
d94 2
a95 2
	int	lt_pt_count;
	struct light_pt lt_sample_pts[MAX_LIGHT_SAMPLES];
@


14.7
log
@provide OPTICAL_EXPORT, replicated from optical.h and include the headers this header requires
@
text
@d4 1
a4 1
 * Copyright (C) 1990-2005 United States Government as represented by
d30 1
a30 1
 *  @@(#)$Header: /cvsroot/brlcad/brlcad/include/light.h,v 14.6 2005/05/08 05:27:57 brlcad Exp $ (BRL)
@


14.6
log
@consolidate the __cplusplus external declaration sections that protect C functions from C++ name mangling by using the same __BEGIN_DECLS and __END_DECLS macros in our headers (3rd party are mostly left alone).  works indentation a little too.
@
text
@d30 1
a30 1
 *  @@(#)$Header: /cvsroot/brlcad/brlcad/include/light.h,v 14.5 2005/03/28 06:31:27 bob1961 Exp $ (BRL)
d38 19
d106 1
a106 5

OPTICAL_EXPORT BU_EXTERN(void light_obs,
			 (struct application *ap,
			  struct shadework *swp,
			  int have));
@


14.6.6.1
log
@merge changes from HEAD aka rel-7-6-4 to the rel-7-6-branch just in case someone peeks a gander or tries to continue/build the branch
@
text
@d30 1
a30 1
 *  @@(#)$Header$ (BRL)
a37 19
#include "machine.h"
#include "bu.h"
#include "bn.h"
#include "raytrace.h"

/* XXX replicated from optical.h */
#ifndef OPTICAL_EXPORT
#  if defined(_WIN32) && !defined(__CYGWIN__) && defined(BRLCAD_DLL)
#    ifdef OPTICAL_EXPORT_DLL
#      define OPTICAL_EXPORT __declspec(dllexport)
#    else
#      define OPTICAL_EXPORT __declspec(dllimport)
#    endif
#  else
#    define OPTICAL_EXPORT
#  endif
#endif


d87 5
a91 1
OPTICAL_EXPORT extern void light_obs(struct application *ap, struct shadework *swp, int have);
@


14.5
log
@Add code to allow liboptical to be a Windows DLL
@
text
@d30 1
a30 1
 *  @@(#)$Header: /cvsroot/brlcad/brlcad/include/light.h,v 14.4 2005/01/30 20:30:10 brlcad Exp $ (BRL)
d36 3
a38 3
#ifdef __cplusplus
extern "C" {
#endif
d93 2
a94 3
#ifdef __cplusplus
}
#endif
@


14.4
log
@update copyright to 2005
@
text
@d30 1
a30 1
 *  @@(#)$Header: /cvsroot/brlcad/brlcad/include/light.h,v 14.3 2004/12/21 06:23:18 morrison Exp $ (BRL)
d32 8
d81 2
a82 8
extern struct light_specific	LightHead;

extern void light_cleanup(void);
extern void light_maker(int num, mat_t v2m);
extern int light_init(struct application *ap);

RT_EXTERN(void light_obs, (struct application *ap,
				  struct shadework *swp, int have) );
d84 8
d93 4
@


14.3
log
@use perl to M-q format wrapping
@
text
@d4 1
a4 1
 * Copyright (c) 1990-2004 United States Government as represented by
d30 1
a30 1
 *  @@(#)$Header: /cvs/brlcad/include/light.h,v 14.2 2004/12/21 06:06:38 butler Exp $ (BRL)
@


14.2
log
@LGPL license changes
@
text
@d17 2
a18 2
 * You should have received a copy of the GNU Lesser General Public License
 * along with this file; see the file named COPYING for more
d30 1
a30 1
 *  @@(#)$Header: /cvs/brlcad/include/light.h,v 14.1 2004/11/16 19:42:10 morrison Exp $ (BRL)
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d1 21
a21 2
/*
 *			L I G H T . H
a28 4
 *  
 *  Copyright Notice -
 *	This software is Copyright (C) 1990-2004 by the United States Army.
 *	All rights reserved.
d30 1
a30 1
 *  @@(#)$Header: /cvs/brlcad/include/light.h,v 1.1 2004/05/24 04:10:50 morrison Exp $ (BRL)
@


1.1
log
@moved/renamed from top-level h/ to top-level include/
@
text
@d15 1
a15 1
 *  @@(#)$Header$ (BRL)
d68 10
@

