head	14.16;
access;
symbols
	rel-7-10-4:14.16
	STABLE:14.16.0.2
	stable-branch:14.4
	rel-7-10-2:14.16
	rel-7-10-0:14.12
	rel-7-8-4:14.8
	rel-7-8-2:14.6
	rel-7-8-0:14.6
	trimnurbs-branch:14.6.0.2
	help:14.6
	temp_tag:14.5
	bobWinPort-20051223-freeze:14.5
	postmerge-20051223-bobWinPort:14.5
	premerge-20051223-bobWinPort:14.5
	rel-7-6-6:14.5
	rel-7-6-4:14.5
	rel-7-6-2:14.5
	rel-7-6-branch:14.5.0.4
	rel-7-6-0:14.5
	rel-7-4-2:14.4
	rel-7-4-branch:14.4.0.2
	bobWinPort:14.5.0.2
	rel-7-4-0:14.4
	rel-7-2-6:14.4
	rel-7-2-4:14.4
	rel-7-2-2:14.4
	rel-7-2-0:14.4
	rel-7-0-4:14.3
	rel-7-0-2:14.3
	rel-7-0-1:14.3
	opensource-post:14.3
	opensource-pre:1.2
	rel-7-0-branch:1.2.0.2
	rel-7-0:1.2;
locks; strict;
comment	@ * @;


14.16
date	2007.07.11.21.21.30;	author jlowenz;	state Exp;
branches;
next	14.15;

14.15
date	2007.06.06.13.13.09;	author d_rossberg;	state Exp;
branches;
next	14.14;

14.14
date	2007.05.26.02.20.22;	author brlcad;	state Exp;
branches;
next	14.13;

14.13
date	2007.05.26.01.45.04;	author brlcad;	state Exp;
branches;
next	14.12;

14.12
date	2007.01.27.01.01.40;	author brlcad;	state Exp;
branches;
next	14.11;

14.11
date	2007.01.23.01.13.20;	author brlcad;	state Exp;
branches;
next	14.10;

14.10
date	2007.01.21.04.45.40;	author brlcad;	state Exp;
branches;
next	14.9;

14.9
date	2007.01.20.14.36.40;	author brlcad;	state Exp;
branches;
next	14.8;

14.8
date	2006.09.18.05.24.07;	author lbutler;	state Exp;
branches;
next	14.7;

14.7
date	2006.08.31.04.41.19;	author lbutler;	state Exp;
branches;
next	14.6;

14.6
date	2006.01.18.06.46.10;	author brlcad;	state Exp;
branches;
next	14.5;

14.5
date	2005.08.15.21.51.10;	author bob1961;	state Exp;
branches;
next	14.4;

14.4
date	2005.01.30.20.30.10;	author brlcad;	state Exp;
branches;
next	14.3;

14.3
date	2004.12.21.06.23.18;	author morrison;	state Exp;
branches;
next	14.2;

14.2
date	2004.12.21.06.06.39;	author butler;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.10;	author morrison;	state Exp;
branches;
next	1.2;

1.2
date	2004.08.03.20.42.29;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.24.04.10.50;	author morrison;	state Exp;
branches;
next	;


desc
@@


14.16
log
@add common.h; enable explicit C linkage
@
text
@/*                         P L O T 3 . H
 * BRL-CAD
 *
 * Copyright (c) 2004-2007 United States Government as represented by
 * the U.S. Army Research Laboratory.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * version 2.1 as published by the Free Software Foundation.
 *
 * This library is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this file; see the file named COPYING for more
 * information.
 */
/** @@addtogroup plot */
/** @@{ */
/** @@file plot3.h
 *
 * This is a ANSI C header for LIBPLOT3 giving function prototypes.
 * This header file will also work if called by a "traditional" C
 * compiler.
 *
 *  For best results, before the
@@code
     #include "plot3.h"
@@endcode
 * there should be:
 *
@@code
	#include "machine.h"
	#include "vmath.h"
@@endcode
 *
 *  although not doing this should not be fatal.
 */
#ifndef	PLOT3_H
#define	PLOT3_H

#ifdef __cplusplus
extern "C" {
#endif

#include "common.h"
#include "bu.h"
#include "vmath.h"
#include "bn.h"

#define	pl_mat_idn( _mat )		MAT_IDN( _mat )
#define pl_mat_zero( _mat )		MAT_ZERO( _mat )
#define pl_mat_copy( _mat1, _mat2 )	MAT_COPY( _mat1, _mat2 )

#define PL_OUTPUT_MODE_BINARY 0
#define PL_OUTPUT_MODE_TEXT 1

/*
 *  The basic UNIX-plot routines.
 *  The calling sequence is the same as the original Bell Labs routines,
 *  with the exception of the pl_ prefix on the name.
 */
BN_EXPORT BU_EXTERN(int pl_getOutputMode,
		    ());
BN_EXPORT BU_EXTERN(void pl_setOutputMode,
		    (int mode));
BN_EXPORT BU_EXTERN(void pl_point,
		    (FILE *plotfp,
		     int x,
		     int y));
BN_EXPORT BU_EXTERN(void pl_line,
		    (FILE *plotfp,
		     int fx,
		     int fy,
		     int tx,
		     int ty));
BN_EXPORT BU_EXTERN(void pl_linmod,
		    (FILE *plotfp,
		     char *s));
BN_EXPORT BU_EXTERN(void pl_move,
		    (FILE *plotfp,
		     int x,
		     int y));
BN_EXPORT BU_EXTERN(void pl_cont,
		    (FILE *plotfp,
		     int x,
		     int y));
BN_EXPORT BU_EXTERN(void pl_label,
		    (FILE *plotfp,
		     char *s));
BN_EXPORT BU_EXTERN(void pl_space,
		    (FILE *plotfp,
		     int x1,
		     int y1,
		     int x2,
		     int y2));
BN_EXPORT BU_EXTERN(void pl_erase,
		    (FILE *plotfp));
BN_EXPORT BU_EXTERN(void pl_circle,
		    (FILE *plotfp,
		     int x,
		     int y,
		     int r));
BN_EXPORT BU_EXTERN(void pl_arc,
		    (FILE *plotfp,
		     int xc,
		     int yc,
		     int x1,
		     int y1,
		     int x2,
		     int y2));
BN_EXPORT BU_EXTERN(void pl_box,
		    (FILE *plotfp,
		     int x1,
		     int y1,
		     int x2,
		     int y2));

/*
 * BRL extensions to the UNIX-plot file format.
 */
BN_EXPORT BU_EXTERN(void pl_color,
		    (FILE *plotfp,
		     int r,
		     int g,
		     int b));
BN_EXPORT BU_EXTERN(void pl_flush,
		    (FILE *plotfp));
BN_EXPORT BU_EXTERN(void pl_3space,
		    (FILE *plotfp,
		     int x1,
		     int y1,
		     int z1,
		     int x2,
		     int y2,
		     int z2));
BN_EXPORT BU_EXTERN(void pl_3point,
		    (FILE *plotfp,
		     int x,
		     int y,
		     int z));
BN_EXPORT BU_EXTERN(void pl_3move,
		    (FILE *plotfp,
		     int x,
		     int y,
		     int z));
BN_EXPORT BU_EXTERN(void pl_3cont,
		    (FILE *plotfp,
		     int x,
		     int y,
		     int z));
BN_EXPORT BU_EXTERN(void pl_3line,
		    (FILE *plotfp,
		     int x1,
		     int y1,
		     int z1,
		     int x2,
		     int y2,
		     int z2));
BN_EXPORT BU_EXTERN(void pl_3box,
		    (FILE *plotfp,
		     int x1,
		     int y1,
		     int z1,
		     int x2,
		     int y2,
		     int z2));

/* Double floating point versions */
BN_EXPORT BU_EXTERN(void pd_point,
		    (FILE *plotfp,
		     double x,
		     double y));
BN_EXPORT BU_EXTERN(void pd_line,
		    (FILE *plotfp,
		     double fx,
		     double fy,
		     double tx,
		     double ty));
BN_EXPORT BU_EXTERN(void pd_move,
		    (FILE *plotfp,
		     double x,
		     double y));
BN_EXPORT BU_EXTERN(void pd_cont,
		    (FILE *plotfp,
		     double x,
		     double y));
BN_EXPORT BU_EXTERN(void pd_space,
		    (FILE *plotfp,
		     double x1,
		     double y1,
		     double x2,
		     double y2));
BN_EXPORT BU_EXTERN(void pd_circle,
		    (FILE *plotfp,
		     double x,
		     double y,
		     double r));
BN_EXPORT BU_EXTERN(void pd_arc,
		    (FILE *plotfp,
		     double xc,
		     double yc,
		     double x1,
		     double y1,
		     double x2,
		     double y2));
BN_EXPORT BU_EXTERN(void pd_box,
		    (FILE *plotfp,
		     double x1,
		     double y1,
		     double x2,
		     double y2));

/* Double 3-D both in vector and enumerated versions */
#ifdef __VMATH_H__
BN_EXPORT BU_EXTERN(void pdv_3space,
		    (FILE *plotfp,
		     const vect_t min,
		     const vect_t max));
BN_EXPORT BU_EXTERN(void pdv_3point,
		    (FILE *plotfp,
		     const vect_t pt));
BN_EXPORT BU_EXTERN(void pdv_3move,
		    (FILE *plotfp,
		     const vect_t pt));
BN_EXPORT BU_EXTERN(void pdv_3cont,
		    (FILE *plotfp,
		     const vect_t pt));
BN_EXPORT BU_EXTERN(void pdv_3line,
		    (FILE *plotfp,
		     const vect_t a,
		     const vect_t b));
BN_EXPORT BU_EXTERN(void pdv_3box,
		    (FILE *plotfp,
		     const vect_t a,
		     const vect_t b));
#endif /* __VMATH_H__ */
BN_EXPORT BU_EXTERN(void pd_3space,
		    (FILE *plotfp,
		     double x1,
		     double y1,
		     double z1,
		     double x2,
		     double y2,
		     double z2));
BN_EXPORT BU_EXTERN(void pd_3point,
		    (FILE *plotfp,
		     double x,
		     double y,
		     double z));
BN_EXPORT BU_EXTERN(void pd_3move,
		    (FILE *plotfp,
		     double x,
		     double y,
		     double z));
BN_EXPORT BU_EXTERN(void pd_3cont,
		    (FILE *plotfp,
		     double x,
		     double y,
		     double z));
BN_EXPORT BU_EXTERN(void pd_3line,
		    (FILE *plotfp,
		     double x1,
		     double y1,
		     double z1,
		     double x2,
		     double y2,
		     double z2));
BN_EXPORT BU_EXTERN(void pd_3box,
		    (FILE *plotfp,
		     double x1,
		     double y1,
		     double z1,
		     double x2,
		     double y2,
		     double z2));
BN_EXPORT BU_EXTERN(void pdv_3ray,
		    (FILE *fp,
		     const point_t pt,
		     const vect_t dir,
		     double t));

/*
 *  The following routines are taken from the BRL TIG-PACK
 *  (Terminal Independent Plotting Package).
 *  These routines create plots by using the pl_() and pd_() routines
 *  declared above.
 */

#define PL_FORTRAN(lc,uc)	BU_FORTRAN(lc,uc)

BN_EXPORT BU_EXTERN(void tp_i2list,
		    (FILE *fp,
		     int *x,
		     int *y,
		     int npoints));
BN_EXPORT BU_EXTERN(void tp_2list,
		    (FILE *fp,
		     double *x,
		     double *y,
		     int npoints));
BN_EXPORT BU_EXTERN(void BU_FORTRAN(f2list, F2LIST),
		    (FILE **fpp,
		     float *x,
		     float *y,
		     int *n));
BN_EXPORT BU_EXTERN(void tp_3list,
		    (FILE *fp,
		     double *x,
		     double *y,
		     double *z,
		     int npoints));
BN_EXPORT BU_EXTERN(void BU_FORTRAN(f3list, F3LIST),
		    (FILE **fpp,
		     float *x,
		     float *y,
		     float *z,
		     int *n));
BN_EXPORT BU_EXTERN(void tp_2mlist,
		    (FILE *fp,
		     double *x,
		     double *y,
		     int npoints,
		     int flag,
		     int mark,
		     int interval,
		     double size));
BN_EXPORT BU_EXTERN(void BU_FORTRAN(f2mlst, F2MLST),
		    (FILE **fp,
		     float *x,
		     float *y,
		     int *np,
		     int *flag,
		     int *mark,
		     int *interval,
		     float *size));
BN_EXPORT BU_EXTERN(void tp_2marker,
		    (FILE *fp,
		     int c,
		     double x,
		     double y,
		     double scale));
BN_EXPORT BU_EXTERN(void BU_FORTRAN(f2mark, F2MARK),
		    (FILE **fp,
		     int *c,
		     float *x,
		     float *y,
		     float *scale));
BN_EXPORT BU_EXTERN(void tp_3marker,
		    (FILE *fp,
		     int c,
		     double x,
		     double y,
		     double z,
		     double scale));
BN_EXPORT BU_EXTERN(void BU_FORTRAN(f3mark, F3MARK),
		    (FILE **fp,
		     int *c,
		     float *x,
		     float *y,
		     float *z,
		     float *scale));
BN_EXPORT BU_EXTERN(void tp_2number,
		    (FILE *fp,
		     double input,
		     int x,
		     int y,
		     int cscale,
		     double theta,
		     int digits));
BN_EXPORT BU_EXTERN(void BU_FORTRAN(f2numb, F2NUMB),
		    (FILE **fp,
		     float *input,
		     int *x,
		     int *y,
		     float *cscale,
		     float *theta,
		     int *digits));
BN_EXPORT BU_EXTERN(void tp_scale,
		    (int idata[],
		     int elements,
		     int mode,
		     int length,
		     int odata[],
		     double *min,
		     double *dx));

BN_EXPORT BU_EXTERN(void BU_FORTRAN(fscale, FSCALE),
		    (int idata[],
		     int *elements,
		     char *mode,
		     int *length,
		     int odata[],
		     double *min,
		     double *dx));
BN_EXPORT BU_EXTERN(void tp_2symbol,
		    (FILE *fp,
		     char *string,
		     double x,
		     double y,
		     double scale,
		     double theta));
BN_EXPORT BU_EXTERN(void BU_FORTRAN(f2symb, F2SYMB),
		    (FILE **fp,
		     char *string,
		     float *x,
		     float *y,
		     float *scale,
		     float *theta));
BN_EXPORT BU_EXTERN(void tp_plot,
		    (FILE *fp,
		     int xp,
		     int yp,
		     int xl,
		     int yl,
		     char xtitle[],
		     char ytitle[],
		     float x[],
		     float y[],
		     int n,
		     double cscale));
BN_EXPORT BU_EXTERN(void BU_FORTRAN(fplot, FPLOT),
		    (FILE **fp,
		     int *xp,
		     int *yp,
		     int *xl,
		     int *yl,
		     char *xtitle,
		     char *ytitle,
		     float *x,
		     float *y,
		     int *n,
		     float *cscale));
BN_EXPORT BU_EXTERN(void tp_ftoa,
		    (float x, char *s));
BN_EXPORT BU_EXTERN(void tp_fixsc,
		    (float *x,
		     int npts,
		     float size,
		     float *xs,
		     float *xmin,
		     float *xmax,
		     float *dx));
BN_EXPORT BU_EXTERN(void tp_sep,
		    (float x,
		     float *coef,
		     int *ex));
BN_EXPORT BU_EXTERN(double tp_ipow,
		    (double x,
		     int n));
#ifdef __VMATH_H__
BN_EXPORT BU_EXTERN(void tp_3axis,
		    (FILE *fp,
		     char *string,
		     point_t origin,
		     mat_t rot,
		     double length,
		     int ccw,
		     int ndigits,
		     double label_start,
		     double label_incr,
		     double tick_separation,
		     double char_width));
BN_EXPORT BU_EXTERN(void BU_FORTRAN(f3axis, F3AXIS),
		    (FILE **fp,
		     char *string,
		     float *x,
		     float *y,
		     float *z,
		     float *length,
		     float *theta,
		     int *ccw,
		     int *ndigits,
		     float *label_start,
		     float *label_incr,
		     float *tick_separation,
		     float *char_width));
BN_EXPORT BU_EXTERN(void tp_3symbol,
		    (FILE *fp,
		     char *string,
		     point_t origin,
		     mat_t rot,
		     double scale));
BN_EXPORT BU_EXTERN(void tp_3vector,
		    (FILE *plotfp,
		     point_t from,
		     point_t to,
		     double fromheadfract,
		     double toheadfract));
BN_EXPORT BU_EXTERN(void BU_FORTRAN(f3vect, F3VECT),
		    (FILE **fp,
		     float *fx,
		     float *fy,
		     float *fz,
		     float *tx,
		     float *ty,
		     float *tz,
		     float *fl,
		     float *tl));
#endif /* __VMATH_H__ */

#ifdef __cplusplus
}
#endif


#endif /* PLOT3_H */
/** @@} */
/*
 * Local Variables:
 * mode: C
 * tab-width: 8
 * c-basic-offset: 4
 * indent-tabs-mode: t
 * End:
 * ex: shiftwidth=4 tabstop=8
 */
@


14.15
log
@one more consistency cleanup (__ in header protection of vmath.h)
@
text
@d44 5
d504 5
@


14.14
log
@more consistency cleanup
@
text
@d448 1
a448 1
#ifdef VMATH_H
d497 1
a497 1
#endif /* VMATH_H */
@


14.13
log
@get rid of RCS variables from the public header files.  this is done in part to reduce recompilation during interface changes, but also to move towards not relying on or publishing the information contained in the variables interface-wise. (they're fine for c sources and private headers)
@
text
@d212 1
a212 1
#ifdef VMATH_H
d234 1
a234 1
#endif /* VMATH_H */
@


14.12
log
@ws, test three
@
text
@a39 2
 *
 *	$Header: /cvsroot/brlcad/brlcad/include/plot3.h,v 14.11 2007/01/23 01:13:20 brlcad Exp $
@


14.11
log
@Sweeping license updates.  Documentation is fully relicensed to the BSD Documentation License (a minor variant of the FreeBSD Documentation License and BSD License).  All GPL code (mostly application code) is converted to the LGPL and now also specifically declares version 2.1, revoking the blank check to the FSF.  The intent of these sweeping changes are to simplify the licensing terms and increase overall flexibility of use, both externally (to users for their purposes) and internally (to allow application code to be migrated to libraries without creating GPL libraries).  As a collective work, BRL-CAD is now LGPL.
@
text
@d28 1
a28 1
 *  For best results, before the 
d35 2
a36 2
 	#include "machine.h"
     	#include "vmath.h"
d41 1
a41 1
 *	$Header: /cvsroot/brlcad/brlcad/include/plot3.h,v 14.10 2007/01/21 04:45:40 brlcad Exp $
a511 1

@


14.10
log
@ugh, what tedium.  put some effort towards cleaning up the doxygen labels and making the headers more consistent.  also exclusively using @@ for doxygen instead of \ to try to keep things more consistent.
@
text
@d9 1
a9 2
 * as published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
d14 1
a14 1
 * Library General Public License for more details.
d41 1
a41 1
 *	$Header: /cvsroot/brlcad/brlcad/include/plot3.h,v 14.9 2007/01/20 14:36:40 brlcad Exp $
@


14.9
log
@update copyright to 2007
@
text
@d22 1
a22 1
/*@@{*/
a24 1
 *
d42 1
a42 1
 *	$Header: /cvsroot/brlcad/brlcad/include/plot3.h,v 14.8 2006/09/18 05:24:07 lbutler Exp $
d503 1
a503 1
/*@@}*/
@


14.8
log
@Doxygen updates
@
text
@d4 1
a4 1
 * Copyright (c) 2004-2006 United States Government as represented by
d43 1
a43 1
 *	$Header: /cvsroot/brlcad/brlcad/include/plot3.h,v 14.7 2006/08/31 04:41:19 lbutler Exp $
@


14.7
log
@miscelaneous changes to support doxygen
@
text
@d21 2
d43 1
a43 1
 *	$Header: /cvsroot/brlcad/brlcad/include/plot3.h,v 14.6 2006/01/18 06:46:10 brlcad Exp $
d504 1
a504 1

d514 1
@


14.6
log
@update copyright to 2006
@
text
@d28 5
a32 1
 *  For best results, before the #include "plot3.h", there should be:
d34 4
a37 2
 *		#include "machine.h"
 *    and	#include "vmath.h"
d41 1
a41 1
 *	$Header: /cvsroot/brlcad/brlcad/include/plot3.h,v 14.5 2005/08/15 21:51:10 bob1961 Exp $
@


14.5
log
@Mods for Windows port
@
text
@d4 1
a4 1
 * Copyright (C) 2004-2005 United States Government as represented by
d35 1
a35 1
 *	$Header: /cvsroot/brlcad/brlcad/include/plot3.h,v 14.4 2005/01/30 20:30:10 brlcad Exp $
@


14.4
log
@update copyright to 2005
@
text
@d35 1
a35 1
 *	$Header: /cvsroot/brlcad/brlcad/include/plot3.h,v 14.3 2004/12/21 06:23:18 morrison Exp $
d48 3
d56 4
@


14.3
log
@use perl to M-q format wrapping
@
text
@d4 2
a5 2
 * Copyright (c) 2004 United States Government as represented by the
 * U.S. Army Research Laboratory.
d35 1
a35 1
 *	$Header: /cvs/brlcad/include/plot3.h,v 14.2 2004/12/21 06:06:39 butler Exp $
@


14.2
log
@LGPL license changes
@
text
@d17 2
a18 2
 * You should have received a copy of the GNU Lesser General Public License
 * along with this file; see the file named COPYING for more
d35 1
a35 1
 *	$Header: /cvs/brlcad/include/plot3.h,v 14.1 2004/11/16 19:42:10 morrison Exp $
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d1 21
a21 2
/*
 *			P L O T 3 . H
d35 1
a35 1
 *	$Header: /cvs/brlcad/include/plot3.h,v 1.2 2004/08/03 20:42:29 morrison Exp $
@


1.2
log
@apply Bob's provided patches from 20040630.  this includes itcl namespace scoping, windows DLL exporting, and wdb arb edit support
@
text
@d16 1
a16 1
 *	$Header: /cvs/brlcad/include/plot3.h,v 1.1 2004/05/24 04:10:50 morrison Exp $
d470 10
@


1.1
log
@moved/renamed from top-level h/ to top-level include/
@
text
@d16 1
a16 1
 *	$Header$
d34 51
a84 11
BU_EXTERN(void pl_point, (FILE *plotfp, int x, int y));
BU_EXTERN(void pl_line, (FILE *plotfp, int fx, int fy, int tx, int ty));
BU_EXTERN(void pl_linmod, (FILE *plotfp, char *s));
BU_EXTERN(void pl_move, (FILE *plotfp, int x, int y));
BU_EXTERN(void pl_cont, (FILE *plotfp, int x, int y));
BU_EXTERN(void pl_label, (FILE *plotfp, char *s));
BU_EXTERN(void pl_space, (FILE *plotfp, int x1, int y1, int x2, int y2));
BU_EXTERN(void pl_erase, (FILE *plotfp));
BU_EXTERN(void pl_circle, (FILE *plotfp, int x, int y, int r));
BU_EXTERN(void pl_arc, (FILE *plotfp, int xc, int yc, int x1, int y1, int x2, int y2));
BU_EXTERN(void pl_box, (FILE *plotfp, int x1, int y1, int x2, int y2));
d89 46
a134 8
BU_EXTERN(void pl_color, (FILE *plotfp, int r, int g, int b));
BU_EXTERN(void pl_flush, (FILE *plotfp));
BU_EXTERN(void pl_3space, (FILE *plotfp, int x1, int y1, int z1, int x2, int y2, int z2));
BU_EXTERN(void pl_3point, (FILE *plotfp, int x, int y, int z));
BU_EXTERN(void pl_3move, (FILE *plotfp, int x, int y, int z));
BU_EXTERN(void pl_3cont, (FILE *plotfp, int x, int y, int z));
BU_EXTERN(void pl_3line, (FILE *plotfp, int x1, int y1, int z1, int x2, int y2, int z2));
BU_EXTERN(void pl_3box, (FILE *plotfp, int x1, int y1, int z1, int x2, int y2, int z2));
d137 43
a179 8
BU_EXTERN(void pd_point, (FILE *plotfp, double x, double y));
BU_EXTERN(void pd_line, (FILE *plotfp, double fx, double fy, double tx, double ty));
BU_EXTERN(void pd_move, (FILE *plotfp, double x, double y));
BU_EXTERN(void pd_cont, (FILE *plotfp, double x, double y));
BU_EXTERN(void pd_space, (FILE *plotfp, double x1, double y1, double x2, double y2));
BU_EXTERN(void pd_circle, (FILE *plotfp, double x, double y, double r));
BU_EXTERN(void pd_arc, (FILE *plotfp, double xc, double yc, double x1, double y1, double x2, double y2));
BU_EXTERN(void pd_box, (FILE *plotfp, double x1, double y1, double x2, double y2));
d183 21
a203 6
BU_EXTERN(void pdv_3space, (FILE *plotfp, const vect_t min, const vect_t max));
BU_EXTERN(void pdv_3point, (FILE *plotfp, const vect_t pt));
BU_EXTERN(void pdv_3move, (FILE *plotfp, const vect_t pt));
BU_EXTERN(void pdv_3cont, (FILE *plotfp, const vect_t pt));
BU_EXTERN(void pdv_3line, (FILE *plotfp, const vect_t a, const vect_t b));
BU_EXTERN(void pdv_3box, (FILE *plotfp, const vect_t a, const vect_t b));
d205 44
a248 7
BU_EXTERN(void pd_3space, (FILE *plotfp, double x1, double y1, double z1, double x2, double y2, double z2));
BU_EXTERN(void pd_3point, (FILE *plotfp, double x, double y, double z));
BU_EXTERN(void pd_3move, (FILE *plotfp, double x, double y, double z));
BU_EXTERN(void pd_3cont, (FILE *plotfp, double x, double y, double z));
BU_EXTERN(void pd_3line, (FILE *plotfp, double x1, double y1, double z1, double x2, double y2, double z2));
BU_EXTERN(void pd_3box, (FILE *plotfp, double x1, double y1, double z1, double x2, double y2, double z2));
BU_EXTERN(void pdv_3ray, (FILE *fp, const point_t pt, const vect_t dir, double t));
d259 159
a417 41
BU_EXTERN(void tp_i2list, (FILE *fp, int *x, int *y, int npoints));
BU_EXTERN(void tp_2list, (FILE *fp, double *x, double *y, int npoints));
BU_EXTERN(void BU_FORTRAN(f2list, F2LIST), (FILE **fpp, float *x, float *y,
			int *n));
BU_EXTERN(void tp_3list, (FILE *fp, double *x, double *y, double *z,
			int npoints));
BU_EXTERN(void BU_FORTRAN(f3list, F3LIST), (FILE **fpp, float *x, float *y,
			float *z, int *n));
BU_EXTERN(void tp_2mlist, (FILE *fp, double *x, double *y, int npoints,
			int flag, int mark, int interval, double size));
BU_EXTERN(void BU_FORTRAN(f2mlst, F2MLST), (FILE **fp, float *x, float *y,
			int *np, int *flag, int *mark, int *interval,

			float *size));
BU_EXTERN(void tp_2marker, (FILE *fp, int c, double x, double y, double scale));
BU_EXTERN(void BU_FORTRAN(f2mark, F2MARK), (FILE **fp, int *c, float *x,
			float *y, float *scale));
BU_EXTERN(void tp_3marker, (FILE *fp, int c, double x, double y, double z,
			double scale));
BU_EXTERN(void BU_FORTRAN(f3mark, F3MARK), (FILE **fp, int *c, float *x,
			float *y, float *z, float *scale));
BU_EXTERN(void tp_2number, (FILE *fp, double input, int x, int y, int cscale,
			double theta, int digits));
BU_EXTERN(void BU_FORTRAN(f2numb, F2NUMB), (FILE **fp, float *input,
			int *x, int *y, float *cscale, float *theta, int *digits));
BU_EXTERN(void tp_scale, (int idata[], int elements, int mode, int length,
			int odata[], double *min, double *dx));

BU_EXTERN(void BU_FORTRAN(fscale, FSCALE), (int	idata[], int *elements,
			char *mode, int *length, int odata[], double *min,
			double *dx));
BU_EXTERN(void tp_2symbol, (FILE *fp, char *string, double x, double y,
			double scale, double theta));
BU_EXTERN(void BU_FORTRAN(f2symb, F2SYMB), (FILE **fp, char *string,
			float *x, float *y, float *scale, float *theta));
BU_EXTERN(void tp_plot, (FILE *fp, int xp, int yp, int xl, int yl,
			char xtitle[], char ytitle[], float x[], float y[],
			int n, double cscale));
BU_EXTERN(void BU_FORTRAN(fplot, FPLOT), (FILE **fp, int *xp, int *yp,
			int *xl, int *yl, char *xtitle, char *ytitle,
			float *x, float *y, int *n, float *cscale));
d419 48
a466 18
BU_EXTERN(void tp_3axis, (FILE *fp, char *string, point_t origin,
			mat_t rot, double length, int ccw, int ndigits,
			double label_start, double label_incr,
			double tick_separation, double char_width));
BU_EXTERN(void BU_FORTRAN(f3axis, F3AXIS), (FILE **fp, char *string,
			float *x, float *y, float *z,
			float *length, float *theta,
			int *ccw, int *ndigits,
			float *label_start, float *label_incr,
			float *tick_separation, float *char_width));
BU_EXTERN(void tp_3symbol, (FILE *fp, char *string, point_t origin,
			mat_t rot, double scale));
BU_EXTERN(void tp_3vector, (FILE *plotfp, point_t from, point_t to,
			double fromheadfract, double toheadfract));
BU_EXTERN(void BU_FORTRAN(f3vect, F3VECT), (FILE **fp,
			float *fx, float *fy, float *fz,
			float *tx, float *ty, float *tz,
			float *fl, float *tl));
@

