head	14.24;
access;
symbols
	rel-7-10-4:14.23
	STABLE:14.23.0.2
	stable-branch:14.5
	rel-7-10-2:14.23
	rel-7-10-0:14.19
	rel-7-8-4:14.14
	rel-7-8-2:14.10
	rel-7-8-0:14.10
	trimnurbs-branch:14.10.0.2
	help:14.10
	temp_tag:14.8
	bobWinPort-20051223-freeze:14.6.2.1
	postmerge-20051223-bobWinPort:14.8
	premerge-20051223-bobWinPort:14.7
	rel-7-6-6:14.7
	rel-7-6-4:14.7
	rel-7-6-2:14.6
	rel-7-6-branch:14.6.0.6
	rel-7-6-0:14.6
	rel-7-4-2:14.6
	rel-7-4-branch:14.6.0.4
	bobWinPort:14.6.0.2
	rel-7-4-0:14.6
	rel-7-2-6:14.6
	rel-7-2-4:14.5
	rel-7-2-2:14.5
	rel-7-2-0:14.4
	rel-7-0-4:14.3
	rel-7-0-2:14.3
	rel-7-0-1:14.3
	opensource-post:14.3
	opensource-pre:1.1
	rel-7-0-branch:1.1.0.2
	rel-7-0:1.1;
locks; strict;
comment	@ * @;


14.24
date	2007.09.18.15.02.32;	author erikgreenwald;	state Exp;
branches;
next	14.23;

14.23
date	2007.05.26.02.08.01;	author brlcad;	state Exp;
branches;
next	14.22;

14.22
date	2007.05.26.01.45.04;	author brlcad;	state Exp;
branches;
next	14.21;

14.21
date	2007.05.19.00.50.03;	author brlcad;	state Exp;
branches;
next	14.20;

14.20
date	2007.04.17.00.20.28;	author brlcad;	state Exp;
branches;
next	14.19;

14.19
date	2007.01.27.01.01.40;	author brlcad;	state Exp;
branches;
next	14.18;

14.18
date	2007.01.23.01.13.20;	author brlcad;	state Exp;
branches;
next	14.17;

14.17
date	2007.01.21.04.45.40;	author brlcad;	state Exp;
branches;
next	14.16;

14.16
date	2007.01.20.14.36.40;	author brlcad;	state Exp;
branches;
next	14.15;

14.15
date	2006.10.30.16.33.03;	author jlowenz;	state Exp;
branches;
next	14.14;

14.14
date	2006.09.18.05.24.07;	author lbutler;	state Exp;
branches;
next	14.13;

14.13
date	2006.08.28.00.51.13;	author brlcad;	state Exp;
branches;
next	14.12;

14.12
date	2006.08.24.17.01.29;	author jlowenz;	state Exp;
branches;
next	14.11;

14.11
date	2006.08.17.20.33.20;	author jlowenz;	state Exp;
branches;
next	14.10;

14.10
date	2006.01.22.09.53.16;	author brlcad;	state Exp;
branches;
next	14.9;

14.9
date	2006.01.18.06.46.10;	author brlcad;	state Exp;
branches;
next	14.8;

14.8
date	2005.12.23.21.26.25;	author bob1961;	state Exp;
branches;
next	14.7;

14.7
date	2005.10.23.04.44.26;	author brlcad;	state Exp;
branches;
next	14.6;

14.6
date	2005.05.28.02.14.49;	author brlcad;	state Exp;
branches
	14.6.2.1
	14.6.6.1;
next	14.5;

14.5
date	2005.03.28.05.20.52;	author bob1961;	state Exp;
branches;
next	14.4;

14.4
date	2005.01.30.20.30.10;	author brlcad;	state Exp;
branches;
next	14.3;

14.3
date	2004.12.21.06.23.18;	author morrison;	state Exp;
branches;
next	14.2;

14.2
date	2004.12.21.06.06.39;	author butler;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.10;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.24.04.10.50;	author morrison;	state Exp;
branches;
next	;

14.6.2.1
date	2005.09.08.16.11.51;	author bob1961;	state Exp;
branches;
next	;

14.6.6.1
date	2005.11.13.13.46.10;	author brlcad;	state Exp;
branches;
next	;


desc
@@


14.24
log
@mark the send buffers as const
@
text
@/*                           P K G . H
 * BRL-CAD
 *
 * Copyright (c) 2004-2007 United States Government as represented by
 * the U.S. Army Research Laboratory.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * version 2.1 as published by the Free Software Foundation.
 *
 * This library is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this file; see the file named COPYING for more
 * information.
 */
/** @@addtogroup libpkg */
/** @@{ */
/** @@file pkg.h
 *
 * @@brief
 *  Data structures and manifest constants for use with the PKG library.
 *
 *
 * @@author	Michael John Muuss
 * @@author	Charles M. Kennedy
 * @@author	Phillip Dykstra
 *
 * @@par Source
 *	The U. S. Army Research Laboratory
 * @@n	Aberdeen Proving Ground, Maryland  21005-5068  USA
 */

#ifndef __PKG_H__
#define __PKG_H__

#ifndef PKG_EXPORT
#  if defined(_WIN32) && !defined(__CYGWIN__) && defined(BRLCAD_DLL)
#    ifdef PKG_EXPORT_DLL
#      define PKG_EXPORT __declspec(dllexport)
#    else
#      define PKG_EXPORT __declspec(dllimport)
#    endif
#  else
#    define PKG_EXPORT
#  endif
#endif

/*
 *  Macros for providing function prototypes, regardless of whether
 *  the compiler understands them or not.
 *  It is vital that the argument list given for "args" be enclosed
 *  in parens.
 */
#if __STDC__ || USE_PROTOTYPES
#	define	PKG_EXTERN(type_and_name,args)	extern type_and_name args
#	define	PKG_ARGS(args)			args
#else
#	define	PKG_EXTERN(type_and_name,args)	extern type_and_name()
#	define	PKG_ARGS(args)			()
#endif


#ifdef __cplusplus
extern "C" {
#endif

struct pkg_conn;

struct pkg_switch {
    unsigned short	pks_type;	/**< @@brief Type code */
    void	(*pks_handler)PKG_ARGS((struct pkg_conn*, char*));  /**< @@brief Message Handler */
    char	*pks_title;		/**< @@brief Description of message type */
};

/**
 *  Format of the message header as it is transmitted over the network
 *  connection.  Internet network order is used.
 *  User Code should access pkc_len and pkc_type rather than
 *  looking into the header directly.
 *  Users should never need to know what this header looks like.
 */
#define PKG_MAGIC	0x41FE
struct pkg_header {
    unsigned char	pkh_magic[2];		/**< @@brief Ident */
    unsigned char	pkh_type[2];		/**< @@brief Message Type */
    unsigned char	pkh_len[4];		/**< @@brief Byte count of remainder */
};

#define	PKG_STREAMLEN	(32*1024)
struct pkg_conn {
    int		pkc_fd;		/**< @@brief TCP connection fd */
    const struct pkg_switch *pkc_switch;	/**< @@brief Array of message handlers */
    void	(*pkc_errlog)PKG_ARGS((char *msg)); /**< @@brief Error message logger */
    struct pkg_header pkc_hdr;	/**< @@brief hdr of cur msg */
    long	pkc_len;	/**< @@brief pkg_len, in host order */
    unsigned short	pkc_type;	/**< @@brief pkg_type, in host order */
    /* OUTPUT BUFFER */
    char	pkc_stream[PKG_STREAMLEN]; /**< @@brief output stream */
    int		pkc_magic;	/**< @@brief for validating pointers */
    int		pkc_strpos;	/**< @@brief index into stream buffer */
    /* FIRST LEVEL INPUT BUFFER */
    char		*pkc_inbuf;	/**< @@brief input stream buffer */
    int		pkc_incur;	/**< @@brief current pos in inbuf */
    int		pkc_inend;	/**< @@brief first unused pos in inbuf */
    int		pkc_inlen;	/**< @@brief length of pkc_inbuf */
    /* DYNAMIC BUFFER FOR USER */
    int		pkc_left;	/**< @@brief #  bytes pkg_get expects */
    /* neg->read new hdr, 0->all here, >0 ->more to come */
    char		*pkc_buf;	/**< @@brief start of dynamic buf */
    char		*pkc_curpos;	/**< @@brief current position in pkg_buf */
};
#define PKC_NULL	((struct pkg_conn *)0)
#define PKC_ERROR	((struct pkg_conn *)(-1L))


#define pkg_send_vls(type,vlsp,pkg)	\
	pkg_send( (type), bu_vls_addr((vlsp)), bu_vls_strlen((vlsp))+1, (pkg) )


PKG_EXPORT PKG_EXTERN(int pkg_init, ());
PKG_EXPORT PKG_EXTERN(void pkg_terminate, ());
PKG_EXPORT PKG_EXTERN(int pkg_process, (register struct pkg_conn *));
PKG_EXPORT PKG_EXTERN(int pkg_suckin, (register struct pkg_conn *));
PKG_EXPORT PKG_EXTERN(struct pkg_conn *pkg_open, (const char *host, const char *service, const char *protocol, const char *uname, const char *passwd, const struct pkg_switch* switchp, void (*errlog)PKG_ARGS((char *msg))));
PKG_EXPORT PKG_EXTERN(struct pkg_conn *pkg_transerver, (const struct pkg_switch* switchp, void (*errlog)PKG_ARGS((char *msg))));
PKG_EXPORT PKG_EXTERN(int pkg_permserver, (const char *service, const char *protocol, int backlog, void (*errlog)PKG_ARGS((char *msg))));
PKG_EXPORT PKG_EXTERN(int pkg_permserver_ip, (const char *ipOrHostname, const char *service, const char *protocol, int backlog, void (*errlog)PKG_ARGS((char *msg))));
PKG_EXPORT PKG_EXTERN(struct pkg_conn *pkg_getclient, (int fd, const struct pkg_switch *switchp, void (*errlog)PKG_ARGS((char *msg)), int nodelay));
PKG_EXPORT PKG_EXTERN(void pkg_close, (struct pkg_conn* pc));
PKG_EXPORT PKG_EXTERN(int pkg_send, (int type, const char *buf, int len, struct pkg_conn* pc));
PKG_EXPORT PKG_EXTERN(int pkg_2send, (int type, char *buf1, int len1, char *buf2, int len2, struct pkg_conn* pc));
PKG_EXPORT PKG_EXTERN(int pkg_stream, (int type, const char *buf, int len, struct pkg_conn* pc));
PKG_EXPORT PKG_EXTERN(int pkg_flush, (struct pkg_conn* pc));
PKG_EXPORT PKG_EXTERN(int pkg_waitfor, (int type, char *buf, int len, struct pkg_conn* pc));
PKG_EXPORT PKG_EXTERN(char *pkg_bwaitfor, (int type, struct pkg_conn* pc));
PKG_EXPORT PKG_EXTERN(int pkg_block, (struct pkg_conn* pc));

/* Data conversion routines */
PKG_EXPORT PKG_EXTERN(unsigned short pkg_gshort, (char *buf));
PKG_EXPORT PKG_EXTERN(unsigned long pkg_glong, (char *buf));
PKG_EXPORT PKG_EXTERN(char *pkg_pshort, (char *buf, short unsigned int s));
PKG_EXPORT PKG_EXTERN(char *pkg_plong, (char *buf, long unsigned int l));

PKG_EXPORT PKG_EXTERN(const char *pkg_version, (void));

#ifdef __cplusplus
}
#endif

#endif /* __PKG_H__ */

/** @@} */
/*
 * Local Variables:
 * mode: C
 * tab-width: 8
 * c-basic-offset: 4
 * indent-tabs-mode: t
 * End:
 * ex: shiftwidth=4 tabstop=8
 */
@


14.23
log
@clean up the header protections so that they are all now more consistent with one another via use of __HEADER_H__ for the define names.
@
text
@d134 1
a134 1
PKG_EXPORT PKG_EXTERN(int pkg_send, (int type, char *buf, int len, struct pkg_conn* pc));
d136 1
a136 1
PKG_EXPORT PKG_EXTERN(int pkg_stream, (int type, char *buf, int len, struct pkg_conn* pc));
@


14.22
log
@get rid of RCS variables from the public header files.  this is done in part to reduce recompilation during interface changes, but also to move towards not relying on or publishing the information contained in the variables interface-wise. (they're fine for c sources and private headers)
@
text
@d36 3
a38 2
#ifndef PKG_H_SEENYET
#define PKG_H_SEENYET
d154 2
a155 1
#endif /* PKG_H_SEENYET */
@


14.21
log
@don't force USE_PROTOTYPES to be necessarily set to get what we usually want anyways (i.e. proper decls with args) -- check for __STDC__ too to determine how to declare.
@
text
@a35 4
#ifndef lint
#define PKG_H_VERSION "@@(#)$Header: /cvsroot/brlcad/brlcad/include/pkg.h,v 14.20 2007/04/17 00:20:28 brlcad Exp $ (ARL)"
#endif

@


14.20
log
@convert version global to a function, remove need for vers.sh script
@
text
@d37 1
a37 1
#define PKG_H_VERSION "@@(#)$Header: /cvsroot/brlcad/brlcad/include/pkg.h,v 14.19 2007/01/27 01:01:40 brlcad Exp $ (ARL)"
a59 1
 *  The setting of USE_PROTOTYPES is done in machine.h
d61 1
a61 1
#if USE_PROTOTYPES
@


14.19
log
@ws, test three
@
text
@d37 1
a37 1
#define PKG_H_VERSION "@@(#)$Header: /cvsroot/brlcad/brlcad/include/pkg.h,v 14.18 2007/01/23 01:13:20 brlcad Exp $ (ARL)"
d152 2
@


14.18
log
@Sweeping license updates.  Documentation is fully relicensed to the BSD Documentation License (a minor variant of the FreeBSD Documentation License and BSD License).  All GPL code (mostly application code) is converted to the LGPL and now also specifically declares version 2.1, revoking the blank check to the FSF.  The intent of these sweeping changes are to simplify the licensing terms and increase overall flexibility of use, both externally (to users for their purposes) and internally (to allow application code to be migrated to libraries without creating GPL libraries).  As a collective work, BRL-CAD is now LGPL.
@
text
@d37 1
a37 1
#define PKG_H_VERSION "@@(#)$Header: /cvsroot/brlcad/brlcad/include/pkg.h,v 14.17 2007/01/21 04:45:40 brlcad Exp $ (ARL)"
a166 1

@


14.17
log
@ugh, what tedium.  put some effort towards cleaning up the doxygen labels and making the headers more consistent.  also exclusively using @@ for doxygen instead of \ to try to keep things more consistent.
@
text
@d9 1
a9 2
 * as published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
d14 1
a14 1
 * Library General Public License for more details.
d37 1
a37 1
#define PKG_H_VERSION "@@(#)$Header: /cvsroot/brlcad/brlcad/include/pkg.h,v 14.16 2007/01/20 14:36:40 brlcad Exp $ (ARL)"
@


14.16
log
@update copyright to 2007
@
text
@d22 1
a22 1
/*@@{*/
d24 2
a25 1
 *@@brief
d29 3
a31 3
 *  @@author	Michael John Muuss
 *  @@author	Charles M. Kennedy
 *  @@author	Phillip Dykstra
d33 1
a33 1
 *  @@par Source
d35 1
a35 1
 *@@n	Aberdeen Proving Ground, Maryland  21005-5068  USA
d38 1
a38 1
#define PKG_H_VERSION "@@(#)$Header: /cvsroot/brlcad/brlcad/include/pkg.h,v 14.15 2006/10/30 16:33:03 jlowenz Exp $ (ARL)"
d158 1
a158 1
/*@@}*/
@


14.15
log
@added const string parameters (because they should be const)
@
text
@d4 1
a4 1
 * Copyright (c) 2004-2006 United States Government as represented by
d37 1
a37 1
#define PKG_H_VERSION "@@(#)$Header: /cvsroot/brlcad/brlcad/include/pkg.h,v 14.14 2006/09/18 05:24:07 lbutler Exp $ (ARL)"
@


14.14
log
@Doxygen updates
@
text
@d37 1
a37 1
#define PKG_H_VERSION "@@(#)$Header: /cvsroot/brlcad/brlcad/include/pkg.h,v 14.13 2006/08/28 00:51:13 brlcad Exp $ (ARL)"
d134 2
a135 2
PKG_EXPORT PKG_EXTERN(int pkg_permserver, (char *service, char *protocol, int backlog, void (*errlog)PKG_ARGS((char *msg))));
PKG_EXPORT PKG_EXTERN(int pkg_permserver_ip, (char *ipOrHostname, char *service, char *protocol, int backlog, void (*errlog)PKG_ARGS((char *msg))));
@


14.13
log
@add PKG_EXTERN and PKG_ARGS wrappers like the other libs, consistently make all the buffers char *
@
text
@d21 2
d24 2
a26 1
 *  Data structures and manifest constants for use with the PKG library.
d28 3
a30 4
 *  Authors -
 *	Michael John Muuss
 *	Charles M. Kennedy
 *	Phillip Dykstra
d32 1
a32 1
 *  Source -
d34 1
a34 1
 *	Aberdeen Proving Ground, Maryland  21005-5068  USA
d37 1
a37 1
#define PKG_H_VERSION "@@(#)$Header: /cvsroot/brlcad/brlcad/include/pkg.h,v 14.12 2006/08/24 17:01:29 jlowenz Exp $ (ARL)"
d78 3
a80 3
    unsigned short	pks_type;	/* Type code */
    void	(*pks_handler)PKG_ARGS((struct pkg_conn*, char*));  /* Message Handler */
    char	*pks_title;		/* Description of message type */
d83 1
a83 1
/*
d92 3
a94 3
    unsigned char	pkh_magic[2];		/* Ident */
    unsigned char	pkh_type[2];		/* Message Type */
    unsigned char	pkh_len[4];		/* Byte count of remainder */
d99 6
a104 6
    int		pkc_fd;		/* TCP connection fd */
    const struct pkg_switch *pkc_switch;	/* Array of message handlers */
    void	(*pkc_errlog)PKG_ARGS((char *msg)); /* Error message logger */
    struct pkg_header pkc_hdr;	/* hdr of cur msg */
    long	pkc_len;	/* pkg_len, in host order */
    unsigned short	pkc_type;	/* pkg_type, in host order */
d106 3
a108 3
    char	pkc_stream[PKG_STREAMLEN]; /* output stream */
    int		pkc_magic;	/* for validating pointers */
    int		pkc_strpos;	/* index into stream buffer */
d110 4
a113 4
    char		*pkc_inbuf;	/* input stream buffer */
    int		pkc_incur;	/* current pos in inbuf */
    int		pkc_inend;	/* first unused pos in inbuf */
    int		pkc_inlen;	/* length of pkc_inbuf */
d115 1
a115 1
    int		pkc_left;	/* # bytes pkg_get expects */
d117 2
a118 2
    char		*pkc_buf;	/* start of dynamic buf */
    char		*pkc_curpos;	/* current position in pkg_buf */
d157 1
a157 1

d167 1
@


14.12
log
@added function prototypes, C linkage wrapper
@
text
@d35 1
a35 1
#define PKG_H_VERSION "@@(#)$Header: /cvsroot/brlcad/brlcad/include/pkg.h,v 14.11 2006/08/17 20:33:20 jlowenz Exp $ (ARL)"
d42 9
a50 9
#   if defined(_WIN32) && !defined(__CYGWIN__) && defined(BRLCAD_DLL)
#      ifdef PKG_EXPORT_DLL
#         define PKG_EXPORT __declspec(dllexport)
#      else
#         define PKG_EXPORT __declspec(dllimport)
#      endif
#   else
#      define PKG_EXPORT
#   endif
d53 16
d77 1
a77 1
    void	(*pks_handler)(struct pkg_conn*, char*);  /* Message Handler */
d90 3
a92 3
	unsigned char	pkh_magic[2];		/* Ident */
	unsigned char	pkh_type[2];		/* Message Type */
	unsigned char	pkh_len[4];		/* Byte count of remainder */
d97 20
a116 20
	int		pkc_fd;		/* TCP connection fd */
	const struct pkg_switch *pkc_switch;	/* Array of message handlers */
	void		(*pkc_errlog)(); /* Error message logger */
	struct pkg_header pkc_hdr;	/* hdr of cur msg */
	long		pkc_len;	/* pkg_len, in host order */
	unsigned short	pkc_type;	/* pkg_type, in host order */
	/* OUTPUT BUFFER */
	char		pkc_stream[PKG_STREAMLEN]; /* output stream */
	int		pkc_magic;	/* for validating pointers */
	int		pkc_strpos;	/* index into stream buffer */
	/* FIRST LEVEL INPUT BUFFER */
	char		*pkc_inbuf;	/* input stream buffer */
	int		pkc_incur;	/* current pos in inbuf */
	int		pkc_inend;	/* first unused pos in inbuf */
	int		pkc_inlen;	/* length of pkc_inbuf */
	/* DYNAMIC BUFFER FOR USER */
	int		pkc_left;	/* # bytes pkg_get expects */
		/* neg->read new hdr, 0->all here, >0 ->more to come */
	char		*pkc_buf;	/* start of dynamic buf */
	char		*pkc_curpos;	/* current position in pkg_buf */
d126 17
a142 18
PKG_EXPORT extern int pkg_init();
PKG_EXPORT extern void pkg_terminate();
PKG_EXPORT extern int pkg_process(register struct pkg_conn *);
PKG_EXPORT extern int pkg_suckin(register struct pkg_conn *);
PKG_EXPORT extern struct pkg_conn *pkg_open(const char* host, const char* service, const char* protocol, const char* uname, const char* passwd, const struct pkg_switch* switchp, void (*errlog)(char* msg));
PKG_EXPORT extern struct pkg_conn *pkg_transerver(const struct pkg_switch* switchp, void (*errlog)(char* msg));
PKG_EXPORT extern int pkg_permserver(char* service, char* protocol, int backlog, void (*errlog)(char* buf));
PKG_EXPORT extern int pkg_permserver_ip(char* ipOrHostname, char* service, char* protocol, int backlog, void (*errlog)(char* buf));
PKG_EXPORT extern struct pkg_conn *pkg_getclient(int fd, const struct pkg_switch *switchp, void (*errlog)(char* msg), int nodelay);
PKG_EXPORT extern void pkg_close(struct pkg_conn* pc);
PKG_EXPORT extern int pkg_send(int type, char* buf, int len, struct pkg_conn* pc);
PKG_EXPORT extern int pkg_2send(int type, char* buf1, int len1, char* buf2, int len2, struct pkg_conn* pc);
PKG_EXPORT extern int pkg_stream(int type, char* buf, int len, struct pkg_conn* pc);
PKG_EXPORT extern int pkg_flush(struct pkg_conn* pc);
PKG_EXPORT extern int pkg_waitfor(int type, char* buf, int len, struct pkg_conn* pc);
PKG_EXPORT extern char *pkg_bwaitfor(int type, struct pkg_conn* pc);
/* PKG_EXPORT extern int pkg_get(); Doesn't exist in pkg.c ?? */ 
PKG_EXPORT extern int pkg_block(struct pkg_conn* pc);
d145 4
a148 4
PKG_EXPORT extern unsigned short pkg_gshort(unsigned char* msgp);
PKG_EXPORT extern unsigned long pkg_glong(unsigned char* msgp);
PKG_EXPORT extern char *pkg_pshort(unsigned char *msgp, short unsigned int s);
PKG_EXPORT extern char *pkg_plong(unsigned char* msgp, long unsigned int l);
@


14.11
log
@added a new function: pkg_permserver_ip to support connecting to the loopback interface. involved some refactoring. not completely tested yet.
@
text
@d35 1
a35 1
#define PKG_H_VERSION "@@(#)$Header: /cvsroot/brlcad/brlcad/include/pkg.h,v 14.10 2006/01/22 09:53:16 brlcad Exp $ (ARL)"
d53 6
d60 3
a62 3
	unsigned short	pks_type;	/* Type code */
	void	(*pks_handler)();	/* Message Handler */
	char	*pks_title;		/* Description of message type */
d114 2
a115 2
PKG_EXPORT extern struct pkg_conn *pkg_open();
PKG_EXPORT extern struct pkg_conn *pkg_transerver();
d118 10
a127 10
PKG_EXPORT extern struct pkg_conn *pkg_getclient(int fd, const struct pkg_switch *switchp, void (*errlog) (/* ??? */), int nodelay);
PKG_EXPORT extern void pkg_close();
PKG_EXPORT extern int pkg_send();
PKG_EXPORT extern int pkg_2send();
PKG_EXPORT extern int pkg_stream();
PKG_EXPORT extern int pkg_flush();
PKG_EXPORT extern int pkg_waitfor();
PKG_EXPORT extern char *pkg_bwaitfor();
PKG_EXPORT extern int pkg_get();
PKG_EXPORT extern int pkg_block();
d130 2
a131 2
PKG_EXPORT extern unsigned short pkg_gshort();
PKG_EXPORT extern unsigned long pkg_glong();
d133 5
a137 1
PKG_EXPORT extern char *pkg_plong();
@


14.10
log
@there is no need/intent to modify the pkg_switch callback structure, so make it const
@
text
@d35 1
a35 1
#define PKG_H_VERSION "@@(#)$Header: /cvsroot/brlcad/brlcad/include/pkg.h,v 14.9 2006/01/18 06:46:10 brlcad Exp $ (ARL)"
d110 2
a111 1
PKG_EXPORT extern int pkg_permserver();
@


14.9
log
@update copyright to 2006
@
text
@d35 1
a35 1
#define PKG_H_VERSION "@@(#)$Header: /cvsroot/brlcad/brlcad/include/pkg.h,v 14.8 2005/12/23 21:26:25 bob1961 Exp $ (ARL)"
d76 1
a76 1
	struct pkg_switch *pkc_switch;	/* Array of message handlers */
d111 1
a111 1
PKG_EXPORT extern struct pkg_conn *pkg_getclient(int fd, struct pkg_switch *switchp, void (*errlog) (/* ??? */), int nodelay);
@


14.8
log
@Merge of bobWinPort
@
text
@d4 1
a4 1
 * Copyright (C) 2004-2005 United States Government as represented by
d35 1
a35 1
#define PKG_H_VERSION "@@(#)$Header: /cvsroot/brlcad/brlcad/include/pkg.h,v 14.7 2005/10/23 04:44:26 brlcad Exp $ (ARL)"
@


14.7
log
@trailing ws
@
text
@d35 1
a35 1
#define PKG_H_VERSION "@@(#)$Header: /cvsroot/brlcad/brlcad/include/pkg.h,v 14.6 2005/05/28 02:14:49 brlcad Exp $ (ARL)"
d104 2
@


14.6
log
@convert WIN32 define checks to _WIN32 since the latter is one of the defaults provided by MSVC whereas the prior is not.  remove some of them related to header inclusions using HAVE_ defines instead.
@
text
@d24 1
a24 1
 *  
d35 1
a35 1
#define PKG_H_VERSION "@@(#)$Header: /cvsroot/brlcad/brlcad/include/pkg.h,v 14.5 2005/03/28 05:20:52 bob1961 Exp $ (ARL)"
@


14.6.6.1
log
@merge changes from HEAD aka rel-7-6-4 to the rel-7-6-branch just in case someone peeks a gander or tries to continue/build the branch
@
text
@d24 1
a24 1
 *
d35 1
a35 1
#define PKG_H_VERSION "@@(#)$Header$ (ARL)"
@


14.6.2.1
log
@Mods for windows port
@
text
@d35 1
a35 1
#define PKG_H_VERSION "@@(#)$Header: /cvsroot/brlcad/brlcad/include/pkg.h,v 14.6 2005/05/28 02:14:49 brlcad Exp $ (ARL)"
a103 2
PKG_EXPORT extern int pkg_init();
PKG_EXPORT extern void pkg_terminate();
@


14.5
log
@Add code to allow libpkg to be a Windows DLL
@
text
@d35 1
a35 1
#define PKG_H_VERSION "@@(#)$Header: /cvsroot/brlcad/brlcad/include/pkg.h,v 14.4 2005/01/30 20:30:10 brlcad Exp $ (ARL)"
d42 1
a42 1
#   if defined(WIN32) && !defined(__CYGWIN__) && defined(BRLCAD_DLL)
@


14.4
log
@update copyright to 2005
@
text
@d35 1
a35 1
#define PKG_H_VERSION "@@(#)$Header: /cvsroot/brlcad/brlcad/include/pkg.h,v 14.3 2004/12/21 06:23:18 morrison Exp $ (ARL)"
d41 12
d104 15
a118 15
extern int pkg_process(register struct pkg_conn *);
extern int pkg_suckin(register struct pkg_conn *);
extern struct pkg_conn *pkg_open();
extern struct pkg_conn *pkg_transerver();
extern int pkg_permserver();
extern struct pkg_conn *pkg_getclient(int fd, struct pkg_switch *switchp, void (*errlog) (/* ??? */), int nodelay);
extern void pkg_close();
extern int pkg_send();
extern int pkg_2send();
extern int pkg_stream();
extern int pkg_flush();
extern int pkg_waitfor();
extern char *pkg_bwaitfor();
extern int pkg_get();
extern int pkg_block();
d121 4
a124 4
extern unsigned short pkg_gshort();
extern unsigned long pkg_glong();
extern char *pkg_pshort(unsigned char *msgp, short unsigned int s);
extern char *pkg_plong();
@


14.3
log
@use perl to M-q format wrapping
@
text
@d4 2
a5 2
 * Copyright (c) 2004 United States Government as represented by the
 * U.S. Army Research Laboratory.
d35 1
a35 1
#define PKG_H_VERSION "@@(#)$Header: /cvs/brlcad/include/pkg.h,v 14.2 2004/12/21 06:06:39 butler Exp $ (ARL)"
@


14.2
log
@LGPL license changes
@
text
@d17 2
a18 2
 * You should have received a copy of the GNU Lesser General Public License
 * along with this file; see the file named COPYING for more
d35 1
a35 1
#define PKG_H_VERSION "@@(#)$Header: /cvs/brlcad/include/pkg.h,v 14.1 2004/11/16 19:42:10 morrison Exp $ (ARL)"
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d1 21
a21 2
/*
 *  			P K G . H
a32 3
 *  
 *  Distribution Status -
 *	Public Domain, Distribution Unlimited.
d35 1
a35 1
#define PKG_H_VERSION "@@(#)$Header: /cvs/brlcad/include/pkg.h,v 1.1 2004/05/24 04:10:50 morrison Exp $ (ARL)"
@


1.1
log
@moved/renamed from top-level h/ to top-level include/
@
text
@d19 1
a19 1
#define PKG_H_VERSION "@@(#)$Header$ (ARL)"
d99 10
@

