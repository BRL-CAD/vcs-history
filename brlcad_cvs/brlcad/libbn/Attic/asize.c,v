head	1.10;
access;
symbols
	ansi-20040405-merged:1.7.2.1
	postmerge-20040405-ansi:1.8
	premerge-20040404-ansi:1.7
	postmerge-autoconf:1.7
	autoconf-freeze:1.7
	premerge-autoconf:1.7
	ansi-20040316-freeze:1.7.2.1
	postmerge-20040315-windows:1.7
	premerge-20040315-windows:1.7
	windows-20040315-freeze:1.7
	autoconf-20031203:1.7
	autoconf-20031202:1.7
	autoconf-branch:1.7.0.10
	phong-branch:1.7.0.8
	photonmap-branch:1.7.0.6
	rel-6-1-DP:1.7
	windows-branch:1.7.0.4
	rel-6-0-2:1.5
	ansi-branch:1.7.0.2
	rel-6-0-1-branch:1.5.0.2
	hartley-6-0-post:1.6
	hartley-6-0-pre:1.5
	rel-6-0-1:1.5
	rel-6-0:1.5
	rel-5-4:1.3
	offsite-5-3-pre:1.5
	rel-5-3:1.3
	rel-5-2:1.3
	rel-5-1-branch:1.3.0.2
	rel-5-1:1.3
	rel-5-0:1.2
	rel-5-0-beta:1.2
	rel-4-5:1.2
	ctj-4-5-post:1.2
	ctj-4-5-pre:1.2;
locks; strict;
comment	@ * @;


1.10
date	2004.05.21.18.06.21;	author morrison;	state dead;
branches;
next	1.9;

1.9
date	2004.05.10.15.30.43;	author erikg;	state Exp;
branches;
next	1.8;

1.8
date	2004.04.05.07.46.41;	author morrison;	state Exp;
branches;
next	1.7;

1.7
date	2002.08.20.17.07.35;	author jra;	state Exp;
branches
	1.7.2.1;
next	1.6;

1.6
date	2002.08.15.20.54.47;	author hartley;	state Exp;
branches;
next	1.5;

1.5
date	2001.01.16.21.16.18;	author cjohnson;	state Exp;
branches;
next	1.4;

1.4
date	2000.07.11.23.30.37;	author cjohnson;	state Exp;
branches;
next	1.3;

1.3
date	99.10.13.00.08.20;	author mike;	state Exp;
branches;
next	1.2;

1.2
date	96.12.13.14.21.30;	author jra;	state Exp;
branches;
next	1.1;

1.1
date	96.12.13.14.11.58;	author jra;	state Exp;
branches;
next	;

1.7.2.1
date	2002.09.19.18.01.08;	author morrison;	state Exp;
branches;
next	;


desc
@Image file AutoSizing code.
@


1.10
log
@moved to src/
@
text
@/*
 *			 A S I Z E . C
 *
 * Image file AutoSizing code.
 *
 *  Author -
 *	Phil Dykstra
 *  
 *  Source -
 *	SECAD/VLD Computing Consortium, Bldg 394
 *	The U. S. Army Ballistic Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5066
 *  
 *  Distribution Status -
 *	Public Domain, Distribution Unlimitied.
 */

#ifndef lint
static const char RCSid[] = "@@(#)$Header: /n/xoff/cvs/brlcad/libbn/asize.c,v 1.9 2004/05/10 15:30:43 erikg Exp $ (BRL)";
#endif

#ifdef HAVE_CONFIG_H
# include "config.h"
#endif



#include <stdio.h>
#include <math.h>
#include <sys/stat.h>
#ifdef USE_STRING_H
#include <string.h>
#else
#include <strings.h>
#endif

/* forward declarations */
int bn_common_name_size(int *, int *, const char *);
int bn_common_image_size(int *, int *, int);

/* This table does not need to include any square sizes */
struct sizes {
	int	width;		/* image width in pixels */
	int	height;		/* image height in pixels */
};
struct sizes fb_common_sizes[] = {
	{  160,  120 },		/* quarter 640x480 */
	{  192,  128 },		/* Kodak Photo-CD, level 1, Base/16 */
	{  320,  200 },		/* PC screen format */
	{  320,  240 },		/* half 640x480 */
	{  384,  256 },		/* Kodak Photo-CD, level 2, Base/4 */
	{  640,  512 },		/* half 1280x1024 */
	{  640,  400 },		/* PC screen format */
	{  640,	 480 },		/* Common video format */
	{  640,	 485 },		/* Common video format, most correct */
	{  640,	 486 },		/* Common video format */
	{  720,	 485 },		/* Abekas video format, most correct */
	{  720,	 486 },		/* Abekas video format */
	{  768,  512 },		/* Kodak Photo-CD, level 3, Base */
	{ 1024,	 768 },		/* SGI-3D screen size */
	{ 1152,  900 },		/* Sun screen size */
	{ 1280,  960 },		/* twice 640x480 */
	{ 1280,	1024 },		/* SGI-4D screen size */
	{ 1440,  972 },		/* double Abekas video format */
	{ 1536, 1024 },		/* Kodak Photo-CD, level 4, 4*Base */
	{ 1600, 1200 },		/* Digital camera */
	{ 1600, 1280 },		/* Large monitor */
	{ 3072, 2048 },		/* Kodak Photo-CD, level 5, 16*Base */
	{ 3200, 4000 },		/* 8x10 inches, 400 dpi */
	{ 3400, 4400 },		/* 8.5x11 inches, 400 dpi */
	{ 4700, 3300 },		/* A4 size, 11.75x8.25 inches, 400 dpi */
	{    0,	   0 }
};

/*
 *			B N _ C O M M O N _ F I L E _ S I Z E
 *
 *  If the file name contains size information encoded in it,
 *  then that size is returned, even if it differs from the actual
 *  file dimensions.  (It might have been truncated).
 *  Otherwise, the actual file size is passed to fb_common_image_size()
 *  to see if this is a plausible image size.
 *
 *  Returns -
 *	0	size unknown
 *	1	width and height returned
 */
int
bn_common_file_size(int *widthp, int *heightp, const char *filename, int pixel_size)
   	        		/* pointer to returned width */
   	         		/* pointer to returned height */
          	          	/* image file to stat */
   	           		/* bytes per pixel */
{
	struct	stat	sbuf;
	int	size;
	register const char	*cp;

	*widthp = *heightp = 0;		/* sanity */

	if( filename == NULL || *filename == '\0' )
		return	0;

	/* Skip over directory names, if any */
	cp = strchr( filename, '/' );
	if( cp )
		cp++;			/* skip over slash */
	else
		cp = filename;		/* no slash */

	if( bn_common_name_size( widthp, heightp, cp ) )
	        return 1;

	if( stat( filename, &sbuf ) < 0 )
		return	0;

	size = sbuf.st_size / pixel_size;

	return bn_common_image_size( widthp, heightp, size );
}


/*                      B N _ C O M M O N _ N A M E _ S I Z E
 *		
 *  Given the number of pixels in an image file, along with a name for the
 *  image (possibly the filename), attempt to determine the 
 *  the width and height of the image.
 *
 *  Returns -
 *	0	size unknown
 *	1	width and height returned
 */

int
bn_common_name_size(int *widthp, int *heightp, const char *name)
   	        		/* pointer to returned width */
   	         		/* pointer to returned height */
          	      		        /* name to parse */
{
    register const char *cp = name;
    
    /* File name may have several minus signs in it.  Try repeatedly */
    while( *cp )  {
	cp = strchr( cp, '-' );		/* Find a minus sign */
	if( cp == NULL )  break;
	if( sscanf(cp, "-w%d-n%d", widthp, heightp ) == 2 )
	    return 1;
	cp++;				/* skip over the minus */
    }

    /* If we got here, we didn't see the answer in the name. */
    return 0;
}




/*
 *			B N _ C O M M O N _ I M A G E _ S I Z E
 *
 *  Given the number of pixels in an image file,
 *  if this is a "common" image size,
 *  return the width and height of the image.
 *
 *  Returns -
 *	0	size unknown
 *	1	width and height returned
 */
int
bn_common_image_size(int *widthp, int *heightp, register int npixels)
   	        		/* pointer to returned width */
   	         		/* pointer to returned height */
            	        	/* Number of pixels */
{
	register struct	sizes	*sp;
	int			root;

	if( npixels <= 0 )
		return	0;

	sp = fb_common_sizes;
	while( sp->width != 0 ) {
		if( npixels == sp->width * sp->height ) {
			*widthp = sp->width;
			*heightp = sp->height;
			return	1;
		}
		sp++;
	}

	/* If the size is a perfect square, then use that. */
	root = (int)(sqrt((double)npixels)+0.999);
	if( root*root == npixels )  {
		*widthp = root;
		*heightp = root;
		return	1;
	}

	/* Nope, we are clueless. */
	return	0;
}
@


1.9
log
@change conf.h to a wrapped config.h
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/libbn/asize.c,v 1.8 2004/04/05 07:46:41 morrison Exp $ (BRL)";
@


1.8
log
@merge of ansi-6-0-branch into HEAD
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
d22 5
a26 1
#include "conf.h"
@


1.7
log
@Restoration of entire source tree to Pre-Hartley state
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libbn/asize.c,v 1.5 2001/01/16 21:16:18 cjohnson Exp $ (BRL)";
d85 5
a89 5
bn_common_file_size( widthp, heightp, filename, pixel_size )
int	*widthp;		/* pointer to returned width */
int	*heightp;		/* pointer to returned height */
const char	*filename;	/* image file to stat */
int	pixel_size;		/* bytes per pixel */
d131 4
a134 4
bn_common_name_size( widthp, heightp, name )
int	*widthp;		/* pointer to returned width */
int	*heightp;		/* pointer to returned height */
const char	*name;		        /* name to parse */
d166 4
a169 4
bn_common_image_size( widthp, heightp, npixels )
int	*widthp;		/* pointer to returned width */
int	*heightp;		/* pointer to returned height */
register int	npixels;	/* Number of pixels */
@


1.7.2.1
log
@Initial ANSIfication
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libbn/asize.c,v 1.7 2002/08/20 17:07:35 jra Exp $ (BRL)";
d85 5
a89 5
bn_common_file_size(int *widthp, int *heightp, const char *filename, int pixel_size)
   	        		/* pointer to returned width */
   	         		/* pointer to returned height */
          	          	/* image file to stat */
   	           		/* bytes per pixel */
d131 4
a134 4
bn_common_name_size(int *widthp, int *heightp, const char *name)
   	        		/* pointer to returned width */
   	         		/* pointer to returned height */
          	      		        /* name to parse */
d166 4
a169 4
bn_common_image_size(int *widthp, int *heightp, register int npixels)
   	        		/* pointer to returned width */
   	         		/* pointer to returned height */
            	        	/* Number of pixels */
@


1.6
log
@Converted from K&R to ANSI C - RFH
@
text
@d85 5
a89 5
bn_common_file_size(int *widthp, int *heightp, const char *filename, int pixel_size)
   	        		/* pointer to returned width */
   	         		/* pointer to returned height */
          	          	/* image file to stat */
   	           		/* bytes per pixel */
d131 4
a134 4
bn_common_name_size(int *widthp, int *heightp, const char *name)
   	        		/* pointer to returned width */
   	         		/* pointer to returned height */
          	      		        /* name to parse */
d166 4
a169 4
bn_common_image_size(int *widthp, int *heightp, register int npixels)
   	        		/* pointer to returned width */
   	         		/* pointer to returned height */
            	        	/* Number of pixels */
@


1.5
log
@Move to a const for the filename passed in.
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libbn/asize.c,v 1.4 2000/07/11 23:30:37 cjohnson Exp $ (BRL)";
d85 5
a89 5
bn_common_file_size( widthp, heightp, filename, pixel_size )
int	*widthp;		/* pointer to returned width */
int	*heightp;		/* pointer to returned height */
const char	*filename;	/* image file to stat */
int	pixel_size;		/* bytes per pixel */
d131 4
a134 4
bn_common_name_size( widthp, heightp, name )
int	*widthp;		/* pointer to returned width */
int	*heightp;		/* pointer to returned height */
const char	*name;		        /* name to parse */
d166 4
a169 4
bn_common_image_size( widthp, heightp, npixels )
int	*widthp;		/* pointer to returned width */
int	*heightp;		/* pointer to returned height */
register int	npixels;	/* Number of pixels */
@


1.4
log
@LINT picking.  Missing includes and static const for RCSids
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libbn/asize.c,v 1.3 1999/10/13 00:08:20 mike Exp $ (BRL)";
d34 1
a34 1
int bn_common_name_size(int *, int *, char *);
d88 1
a88 1
char	*filename;		/* image file to stat */
d93 1
a93 1
	register char	*cp;
d134 1
a134 1
char	*name;		        /* name to parse */
d136 1
a136 1
    register char *cp = name;
@


1.3
log
@
Added 1600x1200
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libbn/asize.c,v 1.2 1996/12/13 14:21:30 jra Exp $ (BRL)";
d32 4
@


1.2
log
@Minor mod to make names consistent.
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/libbn/RCS/asize.c,v 1.1 1996/12/13 14:11:58 jra Exp $ (BRL)";
d58 2
@


1.1
log
@Initial revision
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/libbu/RCS/asize.c,v 1.1 1996/12/13 13:51:15 jra Exp $ (BRL)";
d101 1
a101 1
	if( pix_common_name_size( widthp, heightp, cp ) )
d109 1
a109 1
	return pix_common_image_size( widthp, heightp, size );
@
