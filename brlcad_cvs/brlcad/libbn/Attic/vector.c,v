head	11.9;
access;
symbols
	ansi-20040405-merged:11.6.2.1
	postmerge-20040405-ansi:11.7
	premerge-20040404-ansi:11.6
	postmerge-autoconf:11.6
	autoconf-freeze:11.6
	premerge-autoconf:11.6
	ansi-20040316-freeze:11.6.2.1
	postmerge-20040315-windows:11.6
	premerge-20040315-windows:11.6
	windows-20040315-freeze:11.6
	autoconf-20031203:11.6
	autoconf-20031202:11.6
	autoconf-branch:11.6.0.10
	phong-branch:11.6.0.8
	photonmap-branch:11.6.0.6
	rel-6-1-DP:11.6
	windows-branch:11.6.0.4
	rel-6-0-2:11.4
	ansi-branch:11.6.0.2
	rel-6-0-1-branch:11.4.0.2
	hartley-6-0-post:11.5
	hartley-6-0-pre:11.4
	rel-6-0-1:11.4
	rel-6-0:11.4
	rel-5-4:11.3
	offsite-5-3-pre:11.4
	rel-5-3:11.3
	rel-5-2:11.3
	rel-5-1-branch:11.3.0.2
	rel-5-1:11.3
	rel-5-0:11.2
	rel-5-0-beta:11.2
	rel-4-5:11.2
	ctj-4-5-post:11.2
	ctj-4-5-pre:11.2
	rel-4-4:11.1
	rel-4-0:10.1
	rel-3-5:9.1
	rel-3-0:8.1;
locks; strict;
comment	@ * @;


11.9
date	2004.05.21.18.06.23;	author morrison;	state dead;
branches;
next	11.8;

11.8
date	2004.05.10.15.30.43;	author erikg;	state Exp;
branches;
next	11.7;

11.7
date	2004.04.05.07.46.41;	author morrison;	state Exp;
branches;
next	11.6;

11.6
date	2002.08.20.17.07.37;	author jra;	state Exp;
branches
	11.6.2.1;
next	11.5;

11.5
date	2002.08.15.20.54.49;	author hartley;	state Exp;
branches;
next	11.4;

11.4
date	2000.07.11.23.30.41;	author cjohnson;	state Exp;
branches;
next	11.3;

11.3
date	99.11.02.02.42.39;	author mike;	state Exp;
branches;
next	11.2;

11.2
date	97.01.08.19.45.20;	author jra;	state Exp;
branches;
next	11.1;

11.1
date	95.01.04.09.51.22;	author mike;	state Rel4_4;
branches;
next	10.2;

10.2
date	94.08.12.19.21.21;	author gdurf;	state Exp;
branches;
next	10.1;

10.1
date	91.10.12.06.36.40;	author mike;	state Rel4_0;
branches;
next	9.6;

9.6
date	91.07.02.04.14.09;	author mike;	state Exp;
branches;
next	9.5;

9.5
date	91.07.02.02.54.33;	author mike;	state Exp;
branches;
next	9.4;

9.4
date	91.07.02.01.15.00;	author mike;	state Exp;
branches;
next	9.3;

9.3
date	91.05.31.11.26.06;	author mike;	state Exp;
branches;
next	9.2;

9.2
date	90.11.25.11.42.40;	author cjohnson;	state Exp;
branches;
next	9.1;

9.1
date	89.05.19.05.49.58;	author mike;	state Rel3_5;
branches;
next	8.1;

8.1
date	88.10.05.00.28.51;	author mike;	state Rel3_0;
branches;
next	1.3;

1.3
date	88.05.13.22.39.58;	author mike;	state Exp;
branches;
next	1.2;

1.2
date	88.02.08.23.41.54;	author mike;	state Exp;
branches;
next	1.1;

1.1
date	88.02.06.09.15.37;	author mike;	state Exp;
branches;
next	;

11.6.2.1
date	2002.09.19.18.01.10;	author morrison;	state Exp;
branches;
next	;


desc
@Routine to draw vectors with arrowheads.
@


11.9
log
@moved to src/
@
text
@/*
 *			V E C T O R . C
 *  Author -
 *	Michael John Muuss
 *  
 *  Source -
 *	SECAD/VLD Computing Consortium, Bldg 394
 *	The U. S. Army Ballistic Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5066
 *  
 *  Distribution Status -
 *	Public Domain, Distribution Unlimitied.
 */
#ifndef lint
static const char RCSid[] = "@@(#)$Header: /n/xoff/cvs/brlcad/libbn/vector.c,v 11.8 2004/05/10 15:30:43 erikg Exp $ (BRL)";
#endif

#ifdef HAVE_CONFIG_H
# include "config.h"
#endif



#include <stdio.h>
#include <math.h>

#include "machine.h"
#include "vmath.h"
#include "plot3.h"
#include "bu.h"
#include "bn.h"

/*
 *			T P _ 3 V E C T O R
 *
 *  Draw a vector between points "from" and "to", with the option
 *  of having an arrowhead on either or both ends.
 *  The fromheadfract and toheadfract values indicate the length
 *  of the arrowheads relative to the length of the vector to-from.
 *  A typical value is 0.1, making the head 10% of the size of the vector.
 *  The sign of the "fract" values indicates the pointing direction.
 *  Positive points towards the "to" point, negative points towards "from".
 *  Upon return, the virtual pen is left at the "to" position.
 */
void
tp_3vector(FILE *plotfp, fastf_t *from, fastf_t *to, double fromheadfract, double toheadfract)
{
	register fastf_t	len;
	register fastf_t	hooklen;
	vect_t	diff;
	vect_t	c1, c2;
	vect_t	h1, h2;
	vect_t	backup;
	point_t	tip;

	pdv_3line( plotfp, from, to );
	/* "pen" is left at "to" position */

	VSUB2( diff, to, from );
	if( (len = MAGNITUDE(diff)) < SMALL )  return;
	VSCALE( diff, diff, 1/len );
	bn_vec_ortho( c1, diff );
	VCROSS( c2, c1, diff );

	if( fromheadfract != 0 )  {
		hooklen = fromheadfract*len;
		VSCALE( backup, diff, -hooklen );

		VSCALE( h1, c1, hooklen );
		VADD3( tip, from, h1, backup );
		pdv_3move( plotfp, from );
		pdv_3cont( plotfp, tip );

		VSCALE( h2, c2, hooklen );
		VADD3( tip, from, h2, backup );
		pdv_3move( plotfp, tip );
	}
	if( toheadfract != 0 )  {
		hooklen = toheadfract*len;
		VSCALE( backup, diff, -hooklen );

		VSCALE( h1, c1, hooklen );
		VADD3( tip, to, h1, backup );
		pdv_3move( plotfp, to );
		pdv_3cont( plotfp, tip );

		VSCALE( h2, c2, hooklen );
		VADD3( tip, to, h2, backup );
		pdv_3move( plotfp, tip );
	}
	/* Be certain "pen" is left at "to" position */
	if( fromheadfract != 0 || toheadfract != 0 )
		pdv_3cont( plotfp, to );

}

void
PL_FORTRAN(f3vect, F3VECT)(fp, fx, fy, fz, tx, ty, tz, fl, tl )
FILE	**fp;
float	*fx;
float	*fy;
float	*fz;
float	*tx;
float	*ty;
float	*tz;
float	*fl;
float	*tl;
{
	point_t	from, to;

	VSET( from, *fx, *fy, *fz );
	VSET( to, *tx, *ty, *tz );
	tp_3vector( *fp, from, to, *fl, *tl );
}
@


11.8
log
@change conf.h to a wrapped config.h
@
text
@d15 1
a15 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/libbn/vector.c,v 11.7 2004/04/05 07:46:41 morrison Exp $ (BRL)";
@


11.7
log
@merge of ansi-6-0-branch into HEAD
@
text
@d15 1
a15 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
d18 5
a22 1
#include "conf.h"
@


11.6
log
@Restoration of entire source tree to Pre-Hartley state
@
text
@d15 1
a15 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libbn/vector.c,v 11.4 2000/07/11 23:30:41 cjohnson Exp $ (BRL)";
d42 1
a42 4
tp_3vector( plotfp, from, to, fromheadfract, toheadfract )
FILE	*plotfp;
point_t	from, to;
double	fromheadfract, toheadfract;
@


11.6.2.1
log
@Initial ANSIfication
@
text
@d15 1
a15 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libbn/vector.c,v 11.6 2002/08/20 17:07:37 jra Exp $ (BRL)";
d42 4
a45 1
tp_3vector(FILE *plotfp, fastf_t *from, fastf_t *to, double fromheadfract, double toheadfract)
@


11.5
log
@Converted from K&R to ANSI C - RFH
@
text
@d42 4
a45 1
tp_3vector(FILE *plotfp, fastf_t *from, fastf_t *to, double fromheadfract, double toheadfract)
@


11.4
log
@LINT picking.  Missing includes and static const for RCSids
@
text
@d15 1
a15 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libbn/vector.c,v 11.3 1999/11/02 02:42:39 mike Exp $ (BRL)";
d42 1
a42 4
tp_3vector( plotfp, from, to, fromheadfract, toheadfract )
FILE	*plotfp;
point_t	from, to;
double	fromheadfract, toheadfract;
@


11.3
log
@
Don't need to depend on raytrace.h, just use bu and bn
@
text
@d15 1
a15 1
static char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libbn/vector.c,v 11.2 1997/01/08 19:45:20 jra Exp $ (BRL)";
@


11.2
log
@Changed a call of pl_mat_vec_ortho() to bn_vec_ortho().
@
text
@d15 1
a15 1
static char RCSid[] = "@@(#)$Header: /m/cad/libbn/RCS/vector.c,v 11.1 1995/01/04 09:51:22 mike Rel4_4 jra $ (BRL)";
d26 2
a27 1
#include "raytrace.h"
@


11.1
log
@Release_4.4
@
text
@d15 1
a15 1
static char RCSid[] = "@@(#)$Header: /m/cad/libplot3/RCS/vector.c,v 10.2 94/08/12 19:21:21 gdurf Exp $ (BRL)";
d60 1
a60 1
	pl_mat_vec_ortho( c1, diff );
@


10.2
log
@Added include of conf.h
@
text
@d15 1
a15 1
static char RCSid[] = "@@(#)$Header: /m/cad/libplot3/RCS/vector.c,v 10.1 1991/10/12 06:36:40 mike Rel4_0 gdurf $ (BRL)";
@


10.1
log
@Release_4.0
@
text
@d15 1
a15 1
static char RCSid[] = "@@(#)$Header: /m/cad/libplot3/RCS/vector.c,v 9.6 91/07/02 04:14:09 mike Exp $ (BRL)";
d17 2
@


9.6
log
@Modified libplot3 to have private version of LIBRT's matrix library,
by running SED over the source to librt/mat.c to create, e.g., pl_mat_inv
so that LIBRT didn't need to be linked in, just to do plotting.
@
text
@d15 1
a15 1
static char RCSid[] = "@@(#)$Header: /m/cad/libplot3/RCS/vector.c,v 9.5 91/07/02 02:54:33 mike Exp $ (BRL)";
@


9.5
log
@Changed to use mat_vec_ortho from LIBRT
@
text
@d15 1
a15 1
static char RCSid[] = "@@(#)$Header: /m/cad/libplot3/RCS/vector.c,v 9.4 91/07/02 01:15:00 mike Exp $ (BRL)";
d58 1
a58 1
	mat_vec_ortho( c1, diff );
@


9.4
log
@TIG-Pack is now part of libplot3
@
text
@d15 1
a15 1
static char RCSid[] = "@@(#)$Header: /m/cad/libplot3/RCS/vector.c,v 9.3 91/05/31 11:26:06 mike Exp $ (BRL)";
d24 1
d58 1
a58 1
	vec_ortho( c1, diff );
@


9.3
log
@ANSI prototypes
@
text
@d15 1
a15 1
static char RCSid[] = "@@(#)$Header: /m/cad/libtig/RCS/vector.c,v 9.2 90/11/25 11:42:40 cjohnson Exp $ (BRL)";
a23 1
#include "./tig.h"
@


9.2
log
@Change the fortran routines to use the F macro from
libplot3/fortran.c to generate subroutine names. (case and trailing 
underscore)
@
text
@d15 1
a15 1
static char RCSid[] = "@@(#)$Header: /m/cad/libtig/RCS/vector.c,v 9.1 89/05/19 05:49:58 mike Rel3_5 $ (BRL)";
d23 1
d94 1
a94 1
F(f3vect, F3VECT)(fp, fx, fy, fz, tx, ty, tz, fl, tl )
@


9.1
log
@Release_3.5
@
text
@d15 1
a15 1
static char RCSid[] = "@@(#)$Header: vector.c,v 8.1 88/10/05 00:28:51 mike Rel3_0 $ (BRL)";
d23 1
d93 1
a93 1
F3VECT(fp, fx, fy, fz, tx, ty, tz, fl, tl )
@


8.1
log
@Release_3.0
@
text
@d15 1
a15 1
static char RCSid[] = "@@(#)$Header: vector.c,v 1.3 88/05/13 22:39:58 mike Exp $ (BRL)";
@


1.3
log
@lint fix
@
text
@d15 1
a15 1
static char RCSid[] = "@@(#)$Header: vector.c,v 1.2 88/02/08 23:41:54 mike Locked $ (BRL)";
@


1.2
log
@Latest round of cleanups and name changes.
@
text
@d15 1
a15 1
static char RCSid[] = "@@(#)$Header$ (BRL)";
d36 1
d91 1
@


1.1
log
@Initial revision
@
text
@d3 10
d14 4
d25 1
a25 1
 *			T P _ V E C T O R . C
d36 1
a36 1
tp_vector( plotfp, from, to, fromheadfract, toheadfract )
d90 1
a90 1
FVECTOR(fp, fx, fy, fz, tx, ty, tz, fl, tl )
d105 1
a105 1
	tp_vector( *fp, from, to, *fl, *tl );
@
