head	14.12;
access;
symbols
	rel-7-10-4:14.12
	STABLE:14.12.0.2
	stable-branch:14.8
	rel-7-10-2:14.12
	rel-7-10-0:14.12
	rel-7-8-4:14.10
	rel-7-8-2:14.10
	rel-7-8-0:14.10
	trimnurbs-branch:14.10.0.2
	help:14.10
	temp_tag:14.9
	bobWinPort-20051223-freeze:14.8
	postmerge-20051223-bobWinPort:14.9
	premerge-20051223-bobWinPort:14.9
	rel-7-6-6:14.9
	rel-7-6-4:14.9
	rel-7-6-2:14.8
	rel-7-6-branch:14.8.0.6
	rel-7-6-0:14.8
	rel-7-4-2:14.8
	rel-7-4-branch:14.8.0.4
	bobWinPort:14.8.0.2
	rel-7-4-0:14.8
	rel-7-2-6:14.8
	rel-7-2-4:14.8
	rel-7-2-2:14.8
	rel-7-2-0:14.8
	rel-7-0-4:14.7
	rel-7-0-2:14.7
	rel-7-0-1:14.7
	opensource-post:14.7
	opensource-pre:1.1
	rel-7-0-branch:1.1.0.8
	rel-7-0:1.1
	ansi-20040405-merged:1.1.6.1
	postmerge-20040405-ansi:1.1
	premerge-20040404-ansi:1.1
	postmerge-autoconf:1.1
	autoconf-freeze:1.1.2.1
	premerge-autoconf:1.1
	postmerge-20040315-windows:1.1
	premerge-20040315-windows:1.1
	windows-20040315-freeze:1.1.4.1
	autoconf-branch:1.1.0.2
	windows-branch:1.1.0.4
	ansi-branch:1.1.0.6;
locks; strict;
comment	@# @;


14.12
date	2007.01.23.01.13.19;	author brlcad;	state Exp;
branches;
next	14.11;

14.11
date	2007.01.20.14.36.40;	author brlcad;	state Exp;
branches;
next	14.10;

14.10
date	2006.01.18.06.46.10;	author brlcad;	state Exp;
branches;
next	14.9;

14.9
date	2005.10.23.04.44.25;	author brlcad;	state Exp;
branches;
next	14.8;

14.8
date	2005.01.30.20.30.09;	author brlcad;	state Exp;
branches
	14.8.6.1;
next	14.7;

14.7
date	2004.12.21.07.25.29;	author morrison;	state Exp;
branches;
next	14.6;

14.6
date	2004.12.21.06.58.40;	author morrison;	state Exp;
branches;
next	14.5;

14.5
date	2004.12.21.06.44.31;	author morrison;	state Exp;
branches;
next	14.4;

14.4
date	2004.12.21.06.18.43;	author morrison;	state Exp;
branches;
next	14.3;

14.3
date	2004.12.21.05.45.20;	author morrison;	state Exp;
branches;
next	14.2;

14.2
date	2004.12.17.22.16.53;	author morrison;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.08;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.02.03.21.37.41;	author morrison;	state Exp;
branches
	1.1.2.1
	1.1.4.1
	1.1.6.1;
next	;

1.1.2.1
date	2004.02.12.19.40.44;	author erikg;	state Exp;
branches;
next	;

1.1.4.1
date	2004.03.11.23.40.32;	author morrison;	state Exp;
branches;
next	;

1.1.6.1
date	2004.03.17.21.16.02;	author morrison;	state Exp;
branches;
next	;

14.8.6.1
date	2005.11.13.13.46.08;	author brlcad;	state Exp;
branches;
next	;


desc
@@


14.12
log
@Sweeping license updates.  Documentation is fully relicensed to the BSD Documentation License (a minor variant of the FreeBSD Documentation License and BSD License).  All GPL code (mostly application code) is converted to the LGPL and now also specifically declares version 2.1, revoking the blank check to the FSF.  The intent of these sweeping changes are to simplify the licensing terms and increase overall flexibility of use, both externally (to users for their purposes) and internally (to allow application code to be migrated to libraries without creating GPL libraries).  As a collective work, BRL-CAD is now LGPL.
@
text
@<?php
/*                         D B . P H P
 * BRL-CAD
 *
 * Copyright (c) 2004-2007 United States Government as represented by
 * the U.S. Army Research Laboratory.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * version 2.1 as published by the Free Software Foundation.
 *
 * This library is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this file; see the file named COPYING for more
 * information.
 *
 **//** @@file db.php
 *
 * Really Simple Syndication of BRL-CAD Geometry Databases
 *
 * Description -
 *   This script will publish an rss feed of BRL-CAD geometry
 *   databases.  For convenience, a path alias should be set up for
 *   the * script with a web server.  For Apache, adding something
 *   such as the * following will allow the user to go to a simplified
 *   url without * needing to know that the script is named db.php:
 *
 *   Alias /geometry "/path/to/geometry/db.php"
 *
 * Author -
 *   Sean Morrison
 *
 * Source -
 *   The U.S. Army Research Laboratory
 *   Aberdeen Proving Ground, Maryland  21005-5068  USA
 */

/* --SETTINGS-- */

/* location of the database */
$BASE_URL = ""; /* example: "http://brlcad.org/geometry" */
$PATH_TO_DB = ""; /* "/path/to/geometry" */

/* where to send debug printing */
$ENABLE_DEBUG = 0;
$DEBUG_FILE = "/tmp/db.log";


/* --FUNCTIONS-- */

require('include/debug.inc');
require('include/ctype.inc');


/* --PARSE_OPTIONS-- */

debug("BEGIN http request");

/* initialize defaults */

$extensions = array(
  "rss"  => array(
		  "mime" => array(
				  'text/plain',
				  'text/xml+rss',
				  'text/rss',
  				  'text/xml'
				 )
		 ),
  "xml"	 => array(
		  "mime" => array(
				  'text/plain',
				  'text/xml'
				 )
		 ),
  "html" => array(
		  "mime" => 'text/html'
		 ),
  "txt"  => array(
		  "mime" => 'text/plain'
		 ),
  "g"    => array(
		  "mime" => array(
				  'application/vnd.brlcad.geometry',
				  'application/force-download',
				  'application/octet-stream',
				  'application/download'
				 )
		  ),
  "dir"  => array(
		  "mime" => 'text/plain'
		 )
);
/* extension of response type */
$fileType = "";

/* if the url is an actual file */
$physicalFile = false;

/* place to stash textual data for a proper content-length response */
$textData = "";


/* sanity check */
if (!is_dir($PATH_TO_DB)) {
  debug("ERROR: $PATH_TO_DB is not a directory\n");
  die("ERROR: $PATH_TO_DB is not a directory");
}

/* if path info is given, see if we match a known extension */
$fileWithPath = $PATH_TO_DB . "/";
if (isset($_SERVER['PATH_INFO'])) {
  $fileWithPath .= $_SERVER['PATH_INFO'];

  if (file_exists($fileWithPath)) {
    if (is_dir($fileWithPath)) {
      debug("Requested directory exists");
      $fileType = "dir";
    } else {

      $fileInfo = pathinfo($fileWithPath);
      $fileType = $fileInfo["extension"];
      debug("File exists and has $fileType extension");
      $physicalFile = true;
    }
  }
}

if ($fileType == "") {
  /* no known file found, so try to determine manually */
  $splitString = $_SERVER['REQUEST_URI'];
  if ($_SERVER['PATH_INFO']) {
    $splitString = $_SERVER['PATH_INFO'];
  }
  $splitRequest = preg_split('//', $splitString, -1, PREG_SPLIT_NO_EMPTY);
  $splitLength = count($splitRequest);
  $dotPosition = 0;
  while ($dotPosition < $splitLength) {
    if ($splitRequest[$dotPosition] == ".") {
      break;
    }
    $dotPosition++;
  }

  while ($dotPosition+1 < $splitLength) {
    if (!isalpha($splitRequest[$dotPosition+1])) {
      break;
    }
    $fileType .= $splitRequest[$dotPosition+1];
    $dotPosition++;
  }

  debug("Suffix parsed is $fileType\n");
}

/* final check to see if a known type was found */
if ($fileType == "") {
  debug("WARNING: Unable to determine file type");
} else {
  debug("Suffix found as $fileType");
}


/* --REPLY-- */

header("Pragma: public");
header("Expires: 0");
header("Cache-Control: must-revalidate, post-check=0, pre-check=0");

/* reply with the proper mime type and data */

$mimeType = "";
if (array_key_exists($fileType, $extensions)) {
  $mimeType = $extensions[$fileType]['mime'];
}

if ($mimeType) {
  if (is_array($mimeType)) {
    foreach ($mimeType as $type) {
      debug($type . " content");
      header("Content-type: " . $type);
    }
  } else {
    debug($mimeType . " content");
    header("Content-type: " . $mimeType);
  }
} else {
  /* unknown type */
  debug("WARNING: unknown type of " . $fileType);
}

/* just return the file if it exists  */
if ($physicalFile) {

  /* sanity check */
  if (isset($_SERVER['PATH_INFO'])) {
    $fileWithPath = $PATH_TO_DB . "/" . $_SERVER['PATH_INFO'];

    if (file_exists($fileWithPath)) {
      debug("Returning non rss file $fileWithPath\n");

      header("Content-Disposition: attachment; filename=" . basename($fileWithPath) . ";");
      if ($fileType == "g") {
	header("Content-Transfer-Encoding: binary");
      }
      header("Content-Length: " . filesize($fileWithPath));

      readfile($fileWithPath);

    } else {
      debug("ERROR: $fileWithPath does not exist\n");
      die("ERROR: File $fileWithPath not found.");
    }

  } else {
    debug("ERROR: PATH_INFO was not set\n");
    die("ERROR: PATH_INFO was not set\n");
  }

} else {

  /* return text data -- aggregate into a variable so that a content
   * length can be set.
   */
  if (($fileType == "rss") || ($fileType == "xml")) {

    /* news feed response */
    $textData .= "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n";
    $textData .= "<rss version=\"2.0\" xmlns:content=\"http://purl.org/rss/1.0/modules/content/\" xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n";
    $textData .= "  <channel>\n";
    $textData .= "    <title>BRL-CAD Geometry Server</title>\n";
    $textData .= "    <link>http://brlcad.org/geometry/</link>\n";
    $textData .= "    <description>Geometry served daily.</description>\n";
    $textData .= "    <language>en-us</language>\n";
    $textData .= "    <copyright>Copyright 2004, brlcad.org</copyright>\n";
    $textData .= "    <webMaster>webmaster@@brlcad.org (Christopher Sean Morrison)</webMaster>\n";
    $textData .= "    <pubDate>...</pubDate>\n";
    $textData .= "    <category>BRL-CAD</category>\n";
    $textData .= "    <generator>BRL-CAD db.php Geometry Server</generator>\n";
    $textData .= "    <ttl>60</ttl>\n";

    $dh = opendir($PATH_TO_DB);
    while ($filename = readdir($dh)) {
      $fileEntry = $PATH_TO_DB . "/" . "$filename";
      if (!is_dir($fileEntry)) {
	$fileInfo = pathinfo($fileEntry);
	$fileType = $fileInfo["extension"];

	if ($fileType == "g") {
	  $textData .= "    <item>\n";
	  $textData .= "      <title>$filename</title>\n";
	  $textData .= "      <link>$BASE_URL" . "/$filename</link>\n";
	  $textData .= "      <description>$filename</description>\n";
	  $textData .= "      <author>...</author>\n";
	  $textData .= "      <pubDate>...</pubDate>\n";
	  $textData .= "      <source>$BASE_URL</source>\n";
	  $textData .= "    </item>\n";
	}
      }
    }

    $textData .= "  </channel>\n";
    $textData .= "</rss>\n";

  } else if ($fileType == "dir") {
    debug("WARNING: directories are not handled yet\n");
    $textData .= "WARNING: directories are not handled yet\n";
  } else {
    debug("WARNING: file type [$fileType] without existing file is unsupported\n");
    $textData .= "WARNING: file type [$fileType] without existing file is unsupported\n";
    header("Content-type: text/plain");
  }

  header("Content-Length: " . strlen($textData));
  echo $textData;
}

debug("END http request");


# Local Variables: ***
# mode: C ***
# tab-width: 8 ***
# c-basic-offset: 2 ***
# indent-tabs-mode: t ***
# End: ***
# ex: shiftwidth=2 tabstop=8
?>
@


14.11
log
@update copyright to 2007
@
text
@d10 1
a10 2
 * as published by the Free Software Foundation; either version 2 of
 * the License, or (at your option) any later version.
d15 1
a15 1
 * Library General Public License for more details.
@


14.10
log
@update copyright to 2006
@
text
@d5 1
a5 1
 * Copyright (c) 2004-2006 United States Government as represented by
@


14.9
log
@trailing ws
@
text
@d5 1
a5 1
 * Copyright (C) 2004-2005 United States Government as represented by
@


14.8
log
@update copyright to 2005
@
text
@d26 1
a26 1
 * Description - 
d37 1
a37 1
 * 
d199 1
a199 1
  
d214 1
a214 1
      
@


14.8.6.1
log
@merge changes from HEAD aka rel-7-6-4 to the rel-7-6-branch just in case someone peeks a gander or tries to continue/build the branch
@
text
@d26 1
a26 1
 * Description -
d37 1
a37 1
 *
d199 1
a199 1

d214 1
a214 1

@


14.7
log
@tidy up a lil bit
@
text
@d5 2
a6 2
 * Copyright (c) 2004 United States Government as represented by the
 * U.S. Army Research Laboratory.
@


14.6
log
@remove the old copyright notice section as it's been supplanted (and copyright is now claimable in the us via assignmgent)
@
text
@a40 2
 *
 *
@


14.5
log
@remove the old distribution notice section
@
text
@a42 3
 * Copyright Notice -
 *   This software is Copyright (C) 2004 by the United States Army
 *   in all countries except the USA.  All rights reserved.
@


14.4
log
@they should have received a copy of the LGPL with LGPL'd files
@
text
@a41 4
 * Distribution Notice -
 *   Re-distribution of this software is restricted, as described in
 *   your "Statement of Terms and Conditions for the Release of
 *   The BRL-CAD Package" agreement.
@


14.3
log
@s/GNU Library General/GNU Lesser General/g
@
text
@d18 2
a19 2
 * You should have received a copy of the GNU General Public License
 * along with this file; see the file named COPYING for more
@


14.2
log
@assignment of copyright and LGPL license
@
text
@d9 1
a9 1
 * modify it under the terms of the GNU Library General Public License
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d2 21
a22 1
/*	d b . p h p
@


1.1
log
@initial geometry server that provides rss feeds for databases
@
text
@@


1.1.6.1
log
@sync branch with HEAD
@
text
@@


1.1.4.1
log
@sync to HEAD...
@
text
@@


1.1.2.1
log
@merge from HEAD
@
text
@@

