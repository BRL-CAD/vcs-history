head	11.8;
access;
symbols
	ansi-20040405-merged:11.5.2.1
	postmerge-20040405-ansi:11.6
	premerge-20040404-ansi:11.5
	postmerge-autoconf:11.5
	autoconf-freeze:11.5
	premerge-autoconf:11.5
	postmerge-20040315-windows:11.5
	premerge-20040315-windows:11.5
	windows-20040315-freeze:11.5
	autoconf-20031203:11.5
	autoconf-20031202:11.5
	autoconf-branch:11.5.0.10
	phong-branch:11.5.0.8
	photonmap-branch:11.5.0.6
	rel-6-1-DP:11.5
	windows-branch:11.5.0.4
	rel-6-0-2:11.3
	ansi-branch:11.5.0.2
	rel-6-0-1-branch:11.3.0.2
	hartley-6-0-post:11.4
	hartley-6-0-pre:11.3
	rel-6-0-1:11.3
	rel-6-0:11.3
	rel-5-4:11.2
	offsite-5-3-pre:11.3
	rel-5-3:11.2
	rel-5-2:11.2
	rel-5-1-branch:11.2.0.2
	rel-5-1:11.2
	rel-5-0:11.2
	rel-5-0-beta:11.2
	rel-4-5:11.2
	ctj-4-5-post:11.1
	ctj-4-5-pre:11.1
	rel-4-4:11.1
	rel-4-0:10.1;
locks; strict;
comment	@ * @;


11.8
date	2004.05.21.17.47.09;	author morrison;	state dead;
branches;
next	11.7;

11.7
date	2004.05.10.15.30.49;	author erikg;	state Exp;
branches;
next	11.6;

11.6
date	2004.04.05.07.39.41;	author morrison;	state Exp;
branches;
next	11.5;

11.5
date	2002.08.20.17.08.30;	author jra;	state Exp;
branches
	11.5.2.1;
next	11.4;

11.4
date	2002.08.15.20.55.44;	author hartley;	state Exp;
branches;
next	11.3;

11.3
date	2000.08.24.23.10.01;	author mike;	state Exp;
branches;
next	11.2;

11.2
date	97.12.05.20.55.35;	author pjt;	state Exp;
branches;
next	11.1;

11.1
date	95.01.04.10.22.19;	author mike;	state Rel4_4;
branches;
next	10.2;

10.2
date	94.08.24.14.06.48;	author gdurf;	state Exp;
branches;
next	10.1;

10.1
date	91.10.12.06.53.34;	author mike;	state Rel4_0;
branches;
next	1.4;

1.4
date	91.07.09.08.08.35;	author pjt;	state Exp;
branches;
next	1.3;

1.3
date	91.07.09.02.57.37;	author mike;	state Exp;
branches;
next	1.2;

1.2
date	91.06.25.12.31.45;	author pjt;	state Exp;
branches;
next	1.1;

1.1
date	91.06.18.12.26.10;	author pjt;	state Exp;
branches;
next	;

11.5.2.1
date	2002.09.19.18.02.10;	author morrison;	state Exp;
branches;
next	;


desc
@Reads the matrix and commands from stdin
(i.e., the -M command-line option)
@


11.8
log
@moved to src/nirt/
@
text
@/*      READ_MAT.C      */
#ifndef lint
static const char RCSid[] = "$Header: /n/xoff/cvs/brlcad/nirt/read_mat.c,v 11.7 2004/05/10 15:30:49 erikg Exp $";
#endif

/*	INCLUDES	*/ 
#ifdef HAVE_CONFIG_H
# include "config.h"
#endif



#include <stdio.h>
#include <ctype.h>
#if USE_STRING_H
# include <string.h>
#else
# include <strings.h>
#endif
#include <math.h>

#include "machine.h"
#include "vmath.h"
#include "raytrace.h"
#include "./nirt.h"
#include "./usrfmt.h"

#define			RMAT_SAW_EYE	0x01
#define			RMAT_SAW_ORI	0x02
#define			RMAT_SAW_VR	0x02

extern outval			ValTab[];
extern int			nirt_debug;

/*	               R E A D _ M A T ( )
 *
 */

void read_mat (void)
{
    char	*buf;
    int		status = 0x0;
    mat_t	m;
    point_t	p;
    quat_t	q;

    while ((buf = rt_read_cmd(stdin)) != (char *) 0)
	if (strncmp(buf, "eye_pt", 6) == 0)
	{
	    if (sscanf(buf + 6, "%lf%lf%lf", &p[X], &p[Y], &p[Z]) != 3)
	    {
		(void) fputs("nirt: read_mat(): Failed to read eye_pt\n",
		    stderr);
		exit (1);
	    }
	    target(X) = p[X];
	    target(Y) = p[Y];
	    target(Z) = p[Z];
	    status |= RMAT_SAW_EYE;
	}
	else if (strncmp(buf, "orientation", 11) == 0)
	{
	    if (sscanf(buf + 11,
		"%lf%lf%lf%lf",
		&q[0], &q[1], &q[2], &q[3]) != 4)
	    {
		(void) fputs("nirt: read_mat(): Failed to read orientation\n",
		    stderr);
		exit (1);
	    }
	    quat_quat2mat(m,q);
	    if (nirt_debug & DEBUG_MAT)
		bn_mat_print("view matrix", m);
	    azimuth() = atan2(-m[0],m[1]) / deg2rad;
	    elevation() = atan2(m[10],m[6]) / deg2rad;
	    status |= RMAT_SAW_ORI;
	}
	else if (strncmp(buf, "viewrot", 7) == 0)
	{
	    if (sscanf(buf + 7,
		"%lf%lf%lf%lf%lf%lf%lf%lf%lf%lf%lf%lf%lf%lf%lf%lf",
		&m[0], &m[1], &m[2], &m[3],
		&m[4], &m[5], &m[6], &m[7],
		&m[8], &m[9], &m[10], &m[11],
		&m[12], &m[13], &m[14], &m[15]) != 16)
	    {
		(void) fputs("nirt: read_mat(): Failed to read viewrot\n",
		    stderr);
		exit (1);
	    }
	    if (nirt_debug & DEBUG_MAT)
		bn_mat_print("view matrix", m);
	    azimuth() = atan2(-m[0],m[1]) / deg2rad;
	    elevation() = atan2(m[10],m[6]) / deg2rad;
	    status |= RMAT_SAW_VR;
	}

    if ((status & RMAT_SAW_EYE) == 0)
    {
	(void) fputs("nirt: read_mat(): Was given no eye_pt\n", stderr);
	exit (1);
    }
    if ((status & (RMAT_SAW_ORI | RMAT_SAW_VR)) == 0)
    {
	(void) fputs("nirt: read_mat(): Was given no orientation or viewrot\n",
		stderr);
	exit (1);
    }
    direct(X) = -m[8];
    direct(Y) = -m[9];
    direct(Z) = -m[10];
    dir2ae();
#if 0
    ae2dir();
#endif
    targ2grid();
    shoot("", 0);
}
@


11.7
log
@change conf.h to a wrapped config.h
@
text
@d3 1
a3 1
static const char RCSid[] = "$Header: /cvs/brlcad/nirt/read_mat.c,v 11.6 2004/04/05 07:39:41 morrison Exp $";
@


11.6
log
@merge of ansi-6-0-branch into HEAD
@
text
@d3 1
a3 1
static const char RCSid[] = "$Header$";
d7 5
a11 1
#include "conf.h"
@


11.5
log
@Restoration of entire source tree to Pre-Hartley state
@
text
@d3 1
a3 1
static const char RCSid[] = "$Header: /c/CVS/brlcad/nirt/read_mat.c,v 11.3 2000/08/24 23:10:01 mike Exp $";
d35 1
a35 1
void read_mat ()
@


11.5.2.1
log
@Initial ANSIfication
@
text
@d3 1
a3 1
static const char RCSid[] = "$Header: /c/CVS/brlcad/nirt/read_mat.c,v 11.5 2002/08/20 17:08:30 jra Exp $";
d35 1
a35 1
void read_mat (void)
@


11.4
log
@Converted from K&R to ANSI C - RFH
@
text
@d35 1
a35 1
void read_mat (void)
@


11.3
log
@
lint
@
text
@d3 1
a3 1
static const char RCSid[] = "$Header: /c/CVS/brlcad/nirt/read_mat.c,v 11.2 1997/12/05 20:55:35 pjt Exp $";
d35 1
a35 1
void read_mat ()
@


11.2
log
@1. Added -X option for nirt's own diagnostics
2. Direction vector is now extracted directly from the view matrix
@
text
@d3 1
a3 1
static char RCSid[] = "$Header: /m/cad/nirt/RCS/read_mat.c,v 11.1 95/01/04 10:22:19 mike Rel4_4 $";
@


11.1
log
@Release_4.4
@
text
@d3 1
a3 1
static char RCSid[] = "$Header: /m/cad/nirt/RCS/read_mat.c,v 10.2 94/08/24 14:06:48 gdurf Exp $";
d29 1
d68 2
d87 2
d105 5
d111 1
@


10.2
log
@Factored ifdefs
@
text
@d3 1
a3 1
static char RCSid[] = "$Header: /m/cad/nirt/RCS/read_mat.c,v 10.1 1991/10/12 06:53:34 mike Rel4_0 gdurf $";
@


10.1
log
@Release_4.0
@
text
@d3 1
a3 1
static char RCSid[] = "$Header: /m/cad/nirt/RCS/read_mat.c,v 1.4 91/07/09 08:08:35 pjt Exp $";
d7 3
d11 3
a13 1
#if BSD
a14 2
#else
# include <string.h>
a15 1
#include <stdio.h>
d17 1
@


1.4
log
@removed diagnostic call
@
text
@d3 1
a3 1
static char RCSid[] = "$Header: /m/cad/nirt/RCS/read_mat.c,v 1.3 91/07/09 02:57:37 mike Exp $";
@


1.3
log
@On older BSD systems, must use <strings.h>, not <string.h>
@
text
@d3 1
a3 1
static char RCSid[] = "$Header: /m/cad/nirt/RCS/read_mat.c,v 1.3 91/07/06 05:08:51 mike Exp $";
a63 2
	    printf("  The quat is: %g %g %g %g\n", q[0], q[1], q[2], q[3]);
	    mat_print("The matrix is:", m);
@


1.2
log
@Added support for orientation (quaternion)
and moved call of targ2grid() to end of program (after ae2dir())
@
text
@d3 1
a3 1
static char RCSid[] = "$Header: /m/cad/nirt/RCS/read_mat.c,v 1.1 91/06/18 12:26:10 pjt Exp $";
d8 5
a12 1
#include <string.h>
@


1.1
log
@Initial revision
@
text
@d3 1
a3 1
static char RCSid[] = "$Header$";
d17 4
d30 1
a30 1
    int		i;		/* for diagnostics only */
d33 1
d40 3
a42 1
		fputs("nirt: read_mat(): Failed to read eye_pt", stderr);
d47 1
a47 1
	    targ2grid();
d49 17
d70 3
a72 3
		&m[0], &m[1], &m[2], &m[3], 
		&m[4], &m[5], &m[6], &m[7], 
		&m[8], &m[9], &m[10], &m[11], 
d75 3
a77 1
		fputs("nirt: read_mat(): Failed to read viewrot", stderr);
d81 1
a81 1
	    ae2dir();
d84 13
@
