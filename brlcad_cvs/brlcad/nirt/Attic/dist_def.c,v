head	11.6;
access;
symbols
	ansi-20040405-merged:11.4.2.1
	postmerge-20040405-ansi:11.5
	premerge-20040404-ansi:11.4
	postmerge-autoconf:11.4
	autoconf-freeze:11.4
	premerge-autoconf:11.4
	postmerge-20040315-windows:11.4
	premerge-20040315-windows:11.4
	windows-20040315-freeze:11.4
	autoconf-20031203:11.4
	autoconf-20031202:11.4
	autoconf-branch:11.4.0.10
	phong-branch:11.4.0.8
	photonmap-branch:11.4.0.6
	rel-6-1-DP:11.4
	windows-branch:11.4.0.4
	rel-6-0-2:11.2
	ansi-branch:11.4.0.2
	rel-6-0-1-branch:11.2.0.2
	hartley-6-0-post:11.3
	hartley-6-0-pre:11.2
	rel-6-0-1:11.2
	rel-6-0:11.2
	rel-5-4:11.1
	offsite-5-3-pre:11.2
	rel-5-3:11.1
	rel-5-2:11.1
	rel-5-1-branch:11.1.0.2
	rel-5-1:11.1
	rel-5-0:11.1
	rel-5-0-beta:11.1
	rel-4-5:11.1
	ctj-4-5-post:11.1
	ctj-4-5-pre:11.1
	rel-4-4:11.1
	rel-4-0:1.4;
locks; strict;
comment	@ * @;


11.6
date	2004.05.21.17.47.07;	author morrison;	state dead;
branches;
next	11.5;

11.5
date	2004.04.05.07.39.41;	author morrison;	state Exp;
branches;
next	11.4;

11.4
date	2002.08.20.17.08.29;	author jra;	state Exp;
branches
	11.4.2.1;
next	11.3;

11.3
date	2002.08.15.20.55.43;	author hartley;	state Exp;
branches;
next	11.2;

11.2
date	2000.08.24.23.10.00;	author mike;	state Exp;
branches;
next	11.1;

11.1
date	95.01.04.10.22.14;	author mike;	state Rel4_4;
branches;
next	1.4;

1.4
date	91.07.18.14.46.46;	author pjt;	state Exp;
branches;
next	1.3;

1.3
date	91.02.15.16.02.28;	author mike;	state Exp;
branches;
next	1.2;

1.2
date	91.02.14.09.19.05;	author pjt;	state Exp;
branches;
next	1.1;

1.1
date	91.02.11.09.55.51;	author pjt;	state Exp;
branches;
next	;

11.4.2.1
date	2002.09.19.18.02.10;	author morrison;	state Exp;
branches;
next	;


desc
@@


11.6
log
@moved to src/nirt/
@
text
@/*	DIST_DEF.C	*/
#ifndef lint
static const char RCSid[] = "$Header: /n/xoff/cvs/brlcad/nirt/dist_def.c,v 11.5 2004/04/05 07:39:41 morrison Exp $";
#endif

/*	INCLUDES	*/
#include	<stdio.h>
#include	<math.h>
#include	<machine.h>
#include	<vmath.h>
#include	<raytrace.h>
#include	"./nirt.h"
#include	"./usrfmt.h"

extern struct rt_i	*rtip;
extern outval		ValTab[];

double dist_default(void)
{
    vect_t		targ[8];       /* corners of target bounds       */
    vect_t		Gr;              /* corners of grid bounds         */
    int			i;
    static int		first_time = 1;
    static double	g_max;
    double		ca, ce, sa, se;

    if (first_time)
    {
	ca = cos(azimuth() * deg2rad);
	ce = cos(elevation() * deg2rad);
	sa = sin(azimuth() * deg2rad);
	se = sin(elevation() * deg2rad);

	/* determine the outer bounds of the RPP in gridplane coordinates */
	targ[0][X] = targ[3][X] = targ[6][X] = targ[7][X] =
		    rtip -> mdl_min[X];
	targ[1][X] = targ[2][X] = targ[4][X] = targ[5][X] =
		    rtip -> mdl_max[X];
	targ[0][Y] = targ[3][Y] = targ[6][Y] = targ[7][Y] =
		    rtip -> mdl_min[Y];
	targ[1][Y] = targ[2][Y] = targ[4][Y] = targ[5][Y] =
		    rtip -> mdl_max[Y];
	targ[0][Z] = targ[3][Z] = targ[6][Z] = targ[7][Z] =
		    rtip -> mdl_min[Z];
	targ[1][Z] = targ[2][Z] = targ[4][Z] = targ[5][Z] =
		    rtip -> mdl_max[Z];

	g_max = targ[0][X] * ce * ca + targ[0][Y] * ce * sa + targ[0][Z] * se;

	for (i=1; i<8; i++)    /* find the horz and vert max and min */
	    {
	    Gr[DIST] = targ[i][X] * ce * ca
		       + targ[i][Y] * ce * sa
		       + targ[i][Z] * se;
	    g_max = max(g_max, Gr[DIST]); 
	    } 
	first_time = 0;
    }
    return(g_max);
}
@


11.5
log
@merge of ansi-6-0-branch into HEAD
@
text
@d3 1
a3 1
static const char RCSid[] = "$Header$";
@


11.4
log
@Restoration of entire source tree to Pre-Hartley state
@
text
@d3 1
a3 1
static const char RCSid[] = "$Header: /c/CVS/brlcad/nirt/dist_def.c,v 11.2 2000/08/24 23:10:00 mike Exp $";
d18 1
a18 1
double dist_default()
@


11.4.2.1
log
@Initial ANSIfication
@
text
@d3 1
a3 1
static const char RCSid[] = "$Header: /c/CVS/brlcad/nirt/dist_def.c,v 11.4 2002/08/20 17:08:29 jra Exp $";
d18 1
a18 1
double dist_default(void)
@


11.3
log
@Converted from K&R to ANSI C - RFH
@
text
@d18 1
a18 1
double dist_default(void)
@


11.2
log
@
lint
@
text
@d3 1
a3 1
static const char RCSid[] = "$Header: /c/CVS/brlcad/nirt/dist_def.c,v 11.1 1995/01/04 10:22:14 mike Rel4_4 $";
d18 1
a18 1
double dist_default()
@


11.1
log
@Release_4.4
@
text
@d3 1
a3 1
static char RCSid[] = "$Header: /m/cad/nirt/RCS/dist_def.c,v 1.4 91/07/18 14:46:46 pjt Exp $";
@


1.4
log
@Added the backout command
@
text
@d3 1
a3 1
static char RCSid[] = "$Header: /m/cad/nirt/RCS/dist_def.c,v 1.3 91/02/15 16:02:28 mike Exp $";
@


1.3
log
@Converted to Cake
@
text
@d3 1
a3 1
static char RCSid[] = "$Header: /m/cad/nirt/RCS/dist_def.c,v 1.2 91/02/14 09:19:05 pjt Exp $";
d20 6
a25 5
    vect_t                 targ[8];       /* corners of target bounds       */
    vect_t                 Gr;              /* corners of grid bounds         */
    int		           i;
    double	           g_max;
    double		   ca, ce, sa, se;
d27 6
a32 4
    ca = cos(azimuth() * deg2rad);
    ce = cos(elevation() * deg2rad);
    sa = sin(azimuth() * deg2rad);
    se = sin(elevation() * deg2rad);
d34 13
a46 13
    /* determine the outer bounds of the RPP in gridplane coordinates */
    targ[0][X] = targ[3][X] = targ[6][X] = targ[7][X] =
		rtip -> mdl_min[X];
    targ[1][X] = targ[2][X] = targ[4][X] = targ[5][X] =
		rtip -> mdl_max[X];
    targ[0][Y] = targ[3][Y] = targ[6][Y] = targ[7][Y] =
		rtip -> mdl_min[Y];
    targ[1][Y] = targ[2][Y] = targ[4][Y] = targ[5][Y] =
		rtip -> mdl_max[Y];
    targ[0][Z] = targ[3][Z] = targ[6][Z] = targ[7][Z] =
		rtip -> mdl_min[Z];
    targ[1][Z] = targ[2][Z] = targ[4][Z] = targ[5][Z] =
		rtip -> mdl_max[Z];
d48 1
a48 1
    g_max = targ[0][X] * ce * ca + targ[0][Y] * ce * sa + targ[0][Z] * se;
d50 9
a58 7
    for (i=1; i<8; i++)    /* find the horz and vert max and min */
	{
	Gr[DIST] = targ[i][X] * ce * ca
		   + targ[i][Y] * ce * sa
		   + targ[i][Z] * se;
	g_max = max(g_max, Gr[DIST]); 
	} 
@


1.2
log
@Attempt to add $Header$ to file.
@
text
@d3 1
a3 1
static char RCSid[] = "$Header$";
d12 2
a13 2
#include	"nirt.h"
#include	"usrfmt.h"
@


1.1
log
@Initial revision
@
text
@d2 3
@
