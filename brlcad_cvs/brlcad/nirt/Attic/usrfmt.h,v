head	11.10;
access;
symbols
	ansi-20040405-merged:11.8.2.1
	postmerge-20040405-ansi:11.9
	premerge-20040404-ansi:11.8
	postmerge-autoconf:11.8
	autoconf-freeze:11.8
	premerge-autoconf:11.8
	postmerge-20040315-windows:11.8
	premerge-20040315-windows:11.8
	windows-20040315-freeze:11.8
	autoconf-20031203:11.8
	autoconf-20031202:11.8
	autoconf-branch:11.8.0.10
	phong-branch:11.8.0.8
	photonmap-branch:11.8.0.6
	rel-6-1-DP:11.8
	windows-branch:11.8.0.4
	rel-6-0-2:11.6
	ansi-branch:11.8.0.2
	rel-6-0-1-branch:11.6.0.2
	hartley-6-0-post:11.7
	hartley-6-0-pre:11.6
	rel-6-0-1:11.6
	rel-6-0:11.6
	rel-5-4:11.4
	offsite-5-3-pre:11.4
	rel-5-3:11.4
	rel-5-2:11.4
	rel-5-1-branch:11.4.0.2
	rel-5-1:11.4
	rel-5-0:11.3
	rel-5-0-beta:11.3
	rel-4-5:11.3
	ctj-4-5-post:11.2
	ctj-4-5-pre:11.2
	rel-4-4:11.1
	rel-4-0:10.1;
locks; strict;
comment	@ * @;


11.10
date	2004.05.21.17.47.10;	author morrison;	state dead;
branches;
next	11.9;

11.9
date	2004.04.05.07.39.41;	author morrison;	state Exp;
branches;
next	11.8;

11.8
date	2002.08.20.17.08.30;	author jra;	state Exp;
branches
	11.8.2.1;
next	11.7;

11.7
date	2002.08.15.20.55.44;	author hartley;	state Exp;
branches;
next	11.6;

11.6
date	2002.02.20.21.06.21;	author butler;	state Exp;
branches;
next	11.5;

11.5
date	2002.02.19.21.42.39;	author butler;	state Exp;
branches;
next	11.4;

11.4
date	2000.05.22.15.50.47;	author pjt;	state Exp;
branches;
next	11.3;

11.3
date	97.12.08.18.55.44;	author pjt;	state Exp;
branches;
next	11.2;

11.2
date	97.02.07.15.04.50;	author pjt;	state Exp;
branches;
next	11.1;

11.1
date	95.01.04.10.22.22;	author mike;	state Rel4_4;
branches;
next	10.2;

10.2
date	94.12.21.10.29.05;	author pjt;	state Exp;
branches;
next	10.1;

10.1
date	91.10.12.06.53.35;	author mike;	state Rel4_0;
branches;
next	1.6;

1.6
date	91.08.29.14.17.01;	author pjt;	state Exp;
branches;
next	1.5;

1.5
date	91.07.03.01.15.06;	author mike;	state Exp;
branches;
next	1.4;

1.4
date	91.03.15.08.35.41;	author pjt;	state Exp;
branches;
next	1.3;

1.3
date	91.02.14.09.39.33;	author pjt;	state Exp;
branches;
next	1.2;

1.2
date	91.02.14.09.30.08;	author pjt;	state Exp;
branches;
next	1.1;

1.1
date	91.02.11.09.56.07;	author pjt;	state Exp;
branches;
next	;

11.8.2.1
date	2002.09.19.18.02.10;	author morrison;	state Exp;
branches;
next	;


desc
@@


11.10
log
@moved to src/nirt/
@
text
@/*		U S R F M T . H
*/
#ifndef SEEN_USRFMT_H
#define SEEN_USRFMT_H

#define			OUTITEM_NULL		((outitem *) 0)
#define			OVERLAP_NULL		((overlap *) 0)
#define			DEF_RCF_NAME		".nirtrc"
#define			DEF_SF_NAME		"nirt_state"
#define			CMT_CHAR		'#'
#define			SEP_CHAR		';'

typedef struct outitem_tag
{
    char		*format;
    int			code_nm;
    struct outitem_tag	*next;
} 					outitem;

typedef struct outval_tag
{
    char		*name;
    int			code_nm;
    int			type;
    union ovv {
	fastf_t	fval;
	char	*sval;
	int	ival;
	}		value;
}					outval;

typedef struct ovlp_tag
{
    struct application	*ap;
    struct partition	*pp;
    struct region	*reg1;
    struct region	*reg2;
    fastf_t		in_dist;
    fastf_t		out_dist;
    point_t		in_point;
    point_t		out_point;
    struct ovlp_tag	*forw;
    struct ovlp_tag	*backw;
}					overlap;

extern FILE	*fopenrc(void);

/* Codes for output-item data types */
#define		OIT_INT		0
#define		OIT_FLOAT	1
#define		OIT_FNOUNIT	2	/* Local units don't apply */
#define		OIT_STRING	3
#define		oit_name(t)	(((t)==OIT_INT) ? "int" :\
				 ((t)==OIT_FLOAT) ? "float" :\
				 ((t)==OIT_FNOUNIT) ? "float" :\
				 ((t)==OIT_STRING) ? "string" : "unknown")

/* Codes for output-statement types */
#define		FMT_RAY 	0
#define		FMT_HEAD	1	/* Don't change this w/o */
#define		FMT_PART	2	/* changing fmt_char[]	 */
#define		FMT_FOOT	3	/* in dump_state()	 */
#define		FMT_MISS	4
#define		FMT_OVLP	5
#define		FMT_NONE	6

/* Indices into the table of output values
 *
 *	WARNING - Don't change these #defines without
 *			changing the initialization of
 *			ValTab[]!
 */
#define		VTI_LITERAL	0
#define		VTI_X_ORIG	1
#define		VTI_Y_ORIG	2
#define		VTI_Z_ORIG	3
#define		VTI_H		4
#define		VTI_V		5
#define		VTI_D_ORIG	6
#define		VTI_X_DIR	7
#define		VTI_Y_DIR	8
#define		VTI_Z_DIR	9
#define		VTI_A		10
#define		VTI_E		11
#define		VTI_X_IN	12
#define		VTI_Y_IN	13
#define		VTI_Z_IN	14
#define		VTI_D_IN	15
#define		VTI_X_OUT	16
#define		VTI_Y_OUT	17
#define		VTI_Z_OUT	18
#define		VTI_D_OUT	19
#define		VTI_LOS		20
#define		VTI_SLOS	21
#define		VTI_PATH_NAME	22
#define		VTI_REG_NAME	23
#define		VTI_REG_ID	24
#define		VTI_OBLIQ_IN	25
#define		VTI_OBLIQ_OUT	26
#define		VTI_NM_X_IN	27
#define		VTI_NM_Y_IN	28
#define		VTI_NM_Z_IN	29
#define		VTI_NM_D_IN	30
#define		VTI_NM_H_IN	31
#define		VTI_NM_V_IN	32
#define		VTI_NM_X_OUT	33
#define		VTI_NM_Y_OUT	34
#define		VTI_NM_Z_OUT	35
#define		VTI_NM_D_OUT	36
#define		VTI_NM_H_OUT	37
#define		VTI_NM_V_OUT	38
#define		VTI_OV_REG1_NAME 39
#define		VTI_OV_REG1_ID	40
#define		VTI_OV_REG2_NAME 41
#define		VTI_OV_REG2_ID	42
#define		VTI_OV_SOL_IN	43
#define		VTI_OV_SOL_OUT	44
#define		VTI_OV_LOS	45
#define		VTI_OV_X_IN	46
#define		VTI_OV_Y_IN	47
#define		VTI_OV_Z_IN	48
#define		VTI_OV_D_IN	49
#define		VTI_OV_X_OUT	50
#define		VTI_OV_Y_OUT	51
#define		VTI_OV_Z_OUT	52
#define		VTI_OV_D_OUT	53
#define		VTI_SURF_NUM_IN	54
#define		VTI_SURF_NUM_OUT 55
#define		VTI_CLAIMANT_COUNT 56
#define		VTI_CLAIMANT_LIST 57
#define		VTI_CLAIMANT_LISTN 58
#define		VTI_ATTRIBUTES 59

#define		direct(i)	(ValTab[VTI_X_DIR + i].value.fval)
#define		target(i)	(ValTab[VTI_X_ORIG + i].value.fval)
#define		r_entry(i)	(ValTab[VTI_X_IN + i].value.fval)
#define		r_exit(i)	(ValTab[VTI_X_OUT + i].value.fval)
#define		n_entry(i)	(ValTab[VTI_NM_X_IN + i].value.fval)
#define		n_exit(i)	(ValTab[VTI_NM_X_OUT + i].value.fval)
#define		ov_entry(i)	(ValTab[VTI_OV_X_IN + i].value.fval)
#define		ov_exit(i)	(ValTab[VTI_OV_X_OUT + i].value.fval)
#define		grid(i)		(ValTab[VTI_H + i].value.fval)
#define		azimuth()	(ValTab[VTI_A].value.fval)
#define		elevation()	(ValTab[VTI_E].value.fval)

/* Define D, H, and V for use with the preceeding macros.
 *
 *	NOTE! --- H was defined in vmath.h as the index of
 *		  the fourth homogeneous coordinate.  In
 *		  NIRT, we are not using H that way!
 */
#define		D		3
#ifdef H
#	undef H
#endif
#define		H		4
#define		V		5
 
#endif /* SEEN_USRFMT_H */
@


11.9
log
@merge of ansi-6-0-branch into HEAD
@
text
@@


11.8
log
@Restoration of entire source tree to Pre-Hartley state
@
text
@d3 2
d46 1
a46 1
extern FILE	*fopenrc();
d158 2
@


11.8.2.1
log
@Initial ANSIfication
@
text
@a2 2
#ifndef SEEN_USRFMT_H
#define SEEN_USRFMT_H
d44 1
a44 1
extern FILE	*fopenrc(void);
a155 2
 
#endif /* SEEN_USRFMT_H */
@


11.7
log
@Converted from K&R to ANSI C - RFH
@
text
@a2 2
#ifndef SEEN_USRFMT_H
#define SEEN_USRFMT_H
d44 1
a44 1
extern FILE	*fopenrc(void);
a155 2
 
#endif /* SEEN_USRFMT_H */
@


11.6
log
@A nicer implementation that uses the string format for the "attributes" value
@
text
@d3 2
d46 1
a46 1
extern FILE	*fopenrc();
d158 2
@


11.5
log
@Added support for printing attributes
@
text
@a50 1
#define		OIT_ATTRIB	4
d54 1
a54 2
				 ((t)==OIT_STRING) ? "string" : \
				 ((t)==OIT_ATTRIB) ? "attrib" : "unknown")
@


11.4
log
@Added support for overlap claimants
@
text
@d51 1
d55 2
a56 1
				 ((t)==OIT_STRING) ? "string" : "unknown")
d132 1
@


11.3
log
@Implemented the ; command separator
@
text
@d127 3
@


11.2
log
@Added output items for entry- and exit-surface numbers
for the entry and exit solids of each partition
@
text
@d9 1
@


11.1
log
@Release_4.4
@
text
@d124 2
@


10.2
log
@Added output item for scaled LOS for each partition
@
text
@@


10.1
log
@Release_4.0
@
text
@d91 33
a123 32
#define		VTI_PATH_NAME	21
#define		VTI_REG_NAME	22
#define		VTI_REG_ID	23
#define		VTI_OBLIQ_IN	24
#define		VTI_OBLIQ_OUT	25
#define		VTI_NM_X_IN	26
#define		VTI_NM_Y_IN	27
#define		VTI_NM_Z_IN	28
#define		VTI_NM_D_IN	29
#define		VTI_NM_H_IN	30
#define		VTI_NM_V_IN	31
#define		VTI_NM_X_OUT	32
#define		VTI_NM_Y_OUT	33
#define		VTI_NM_Z_OUT	34
#define		VTI_NM_D_OUT	35
#define		VTI_NM_H_OUT	36
#define		VTI_NM_V_OUT	37
#define		VTI_OV_REG1_NAME 38
#define		VTI_OV_REG1_ID	39
#define		VTI_OV_REG2_NAME 40
#define		VTI_OV_REG2_ID	41
#define		VTI_OV_SOL_IN	42
#define		VTI_OV_SOL_OUT	43
#define		VTI_OV_LOS	44
#define		VTI_OV_X_IN	45
#define		VTI_OV_Y_IN	46
#define		VTI_OV_Z_IN	47
#define		VTI_OV_D_IN	48
#define		VTI_OV_X_OUT	49
#define		VTI_OV_Y_OUT	50
#define		VTI_OV_Z_OUT	51
#define		VTI_OV_D_OUT	52
@


1.6
log
@Added output items for entry and exit normals
for each partition.
@
text
@@


1.5
log
@neatness
@
text
@d96 27
a122 15
#define		VTI_OV_REG1_NAME 26
#define		VTI_OV_REG1_ID	27
#define		VTI_OV_REG2_NAME 28
#define		VTI_OV_REG2_ID	29
#define		VTI_OV_SOL_IN	30
#define		VTI_OV_SOL_OUT	31
#define		VTI_OV_LOS	32
#define		VTI_OV_X_IN	33
#define		VTI_OV_Y_IN	34
#define		VTI_OV_Z_IN	35
#define		VTI_OV_D_IN	36
#define		VTI_OV_X_OUT	37
#define		VTI_OV_Y_OUT	38
#define		VTI_OV_Z_OUT	39
#define		VTI_OV_D_OUT	40
d128 2
d136 6
d143 5
@


1.4
log
@Added path_name output item
@
text
@d17 1
a17 1
typedef struct
@


1.3
log
@Apparently can't have char RCSid[] in the header files because it
gets redeclared.
@
text
@d91 20
a110 19
#define		VTI_REG_NAME	21
#define		VTI_REG_ID	22
#define		VTI_OBLIQ_IN	23
#define		VTI_OBLIQ_OUT	24
#define		VTI_OV_REG1_NAME 25
#define		VTI_OV_REG1_ID	26
#define		VTI_OV_REG2_NAME 27
#define		VTI_OV_REG2_ID	28
#define		VTI_OV_SOL_IN	29
#define		VTI_OV_SOL_OUT	30
#define		VTI_OV_LOS	31
#define		VTI_OV_X_IN	32
#define		VTI_OV_Y_IN	33
#define		VTI_OV_Z_IN	34
#define		VTI_OV_D_IN	35
#define		VTI_OV_X_OUT	36
#define		VTI_OV_Y_OUT	37
#define		VTI_OV_Z_OUT	38
#define		VTI_OV_D_OUT	39
@


1.2
log
@Attempt to add $Header$ to file.
@
text
@a2 3
#ifndef lint
static char RCSid[] = "$Header$";
#endif
@


1.1
log
@Initial revision
@
text
@d3 3
@
