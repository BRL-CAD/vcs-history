head	1.6;
access;
symbols
	ansi-20040405-merged:1.4.2.1
	postmerge-20040405-ansi:1.5
	premerge-20040404-ansi:1.4
	postmerge-autoconf:1.4
	autoconf-freeze:1.4
	premerge-autoconf:1.4
	postmerge-20040315-windows:1.4
	premerge-20040315-windows:1.4
	windows-20040315-freeze:1.4
	autoconf-20031203:1.4
	autoconf-20031202:1.4
	autoconf-branch:1.4.0.10
	phong-branch:1.4.0.8
	photonmap-branch:1.4.0.6
	rel-6-1-DP:1.4
	windows-branch:1.4.0.4
	rel-6-0-2:1.2
	ansi-branch:1.4.0.2
	rel-6-0-1-branch:1.2.0.4
	hartley-6-0-post:1.3
	hartley-6-0-pre:1.2
	rel-6-0-1:1.2
	rel-6-0:1.2
	rel-5-4:1.2
	offsite-5-3-pre:1.2
	rel-5-3:1.2
	rel-5-2:1.2
	rel-5-1-branch:1.2.0.2
	rel-5-1:1.2
	rel-5-0:1.2
	rel-5-0-beta:1.2
	rel-4-5:1.2
	ctj-4-5-post:1.2
	ctj-4-5-pre:1.2;
locks; strict;
comment	@ * @;


1.6
date	2004.05.21.17.33.30;	author morrison;	state dead;
branches;
next	1.5;

1.5
date	2004.04.05.05.45.58;	author morrison;	state Exp;
branches;
next	1.4;

1.4
date	2002.08.20.17.08.37;	author jra;	state Exp;
branches
	1.4.2.1;
next	1.3;

1.3
date	2002.08.15.20.55.48;	author hartley;	state Exp;
branches;
next	1.2;

1.2
date	95.07.15.01.53.35;	author mike;	state Exp;
branches;
next	1.1;

1.1
date	95.07.14.00.40.51;	author mike;	state Exp;
branches;
next	;

1.4.2.1
date	2002.09.19.18.02.14;	author morrison;	state Exp;
branches;
next	;


desc
@Header for internal host table
@


1.6
log
@moved to src/remrt/
@
text
@/*
 *			I H O S T . H
 *
 *  Internal host table routines.
 *
 *  Author -
 *	Michael John Muuss
 *  
 *  Source -
 *	The U. S. Army Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5068  USA
 *  
 *  Distribution Status -
 *	Public Domain, Distribution Unlimited.
 *
 *  $Header: /n/xoff/cvs/brlcad/remrt/ihost.h,v 1.5 2004/04/05 05:45:58 morrison Exp $
 */

/* Internal Host table */
struct ihost {
	struct rt_list	l;
	char		*ht_name;	/* Official name of host */
	int		ht_flags;	/* Control info about this host */
#define HT_HOLD		0x1
	int		ht_when;	/* When to use this host */
#define HT_ALWAYS	1		/* Always try to use this one */
#define HT_NIGHT	2		/* Only use at night */
#define HT_PASSIVE	3		/* May call in, never initiated */
#define HT_RS		4		/* While rays/second > ht_rs */
#define HT_PASSRS	5		/* passive rays/second */
#define HT_HACKNIGHT	6		/* Only use during "hackers night" */
	int		ht_rs;		/* rays/second level */
	int		ht_rs_miss;	/* number of consecutive misses */
	int		ht_rs_wait;	/* # of auto adds to wait before */
					/* restarting this server */
	int		ht_where;	/* Where to find database */
#define HT_CD		1		/* cd to ht_path first */
#define HT_CONVERT	2		/* cd to ht_path, asc2g database */
#define HT_USE		3		/* cd to ht_path, use asc database */
					/* best of cd and convert */
	char		*ht_path;	/* remote directory to run in */
};
#define IHOST_MAGIC	0x69486f73
#define CK_IHOST(_p)	RT_CKMAG(_p, IHOST_MAGIC, "ihost")

extern struct rt_list	HostHead;

#define IHOST_NULL	((struct ihost *)0)

extern struct ihost	*host_lookup_by_name(char *name, int enter);
extern struct ihost	*host_lookup_by_addr(struct sockaddr_in *from, int enter);
extern struct ihost	*host_lookup_by_hostent(struct hostent *addr, int enter);
extern struct ihost	*make_default_host(char *name);
extern char		*get_our_hostname(void);
extern struct ihost	*host_lookup_of_fd(int fd);
@


1.5
log
@merge of ansi-6-0-branch into head
@
text
@d16 1
a16 1
 *  $Header$
@


1.4
log
@Restoration of entire source tree to Pre-Hartley state
@
text
@d16 1
a16 1
 *  $Header: /c/CVS/brlcad/remrt/ihost.h,v 1.2 1995/07/15 01:53:35 mike Exp $
d50 6
a55 6
extern struct ihost	*host_lookup_by_name();
extern struct ihost	*host_lookup_by_addr();
extern struct ihost	*host_lookup_by_hostent();
extern struct ihost	*make_default_host();
extern char		*get_our_hostname();
extern struct ihost	*host_lookup_of_fd();
@


1.4.2.1
log
@Initial ANSIfication
@
text
@d16 1
a16 1
 *  $Header: /c/CVS/brlcad/remrt/ihost.h,v 1.4 2002/08/20 17:08:37 jra Exp $
d50 6
a55 6
extern struct ihost	*host_lookup_by_name(char *name, int enter);
extern struct ihost	*host_lookup_by_addr(struct sockaddr_in *from, int enter);
extern struct ihost	*host_lookup_by_hostent(struct hostent *addr, int enter);
extern struct ihost	*make_default_host(char *name);
extern char		*get_our_hostname(void);
extern struct ihost	*host_lookup_of_fd(int fd);
@


1.3
log
@Converted from K&R to ANSI C - RFH
@
text
@d50 6
a55 6
extern struct ihost	*host_lookup_by_name(char *name, int enter);
extern struct ihost	*host_lookup_by_addr(struct sockaddr_in *from, int enter);
extern struct ihost	*host_lookup_by_hostent(struct hostent *addr, int enter);
extern struct ihost	*make_default_host(char *name);
extern char		*get_our_hostname(void);
extern struct ihost	*host_lookup_of_fd(int fd);
@


1.2
log
@Added host_lookup_of_fd()
@
text
@d16 1
a16 1
 *  $Header: /m/cad/remrt/RCS/ihost.h,v 1.1 1995/07/14 00:40:51 mike Exp mike $
d50 6
a55 6
extern struct ihost	*host_lookup_by_name();
extern struct ihost	*host_lookup_by_addr();
extern struct ihost	*host_lookup_by_hostent();
extern struct ihost	*make_default_host();
extern char		*get_our_hostname();
extern struct ihost	*host_lookup_of_fd();
@


1.1
log
@Initial revision
@
text
@d16 1
a16 1
 *  $Header$
d55 1
@
