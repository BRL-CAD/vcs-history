head	1.3;
access;
symbols
	ansi-20040405-merged:1.2
	postmerge-20040405-ansi:1.2
	premerge-20040404-ansi:1.2
	postmerge-autoconf:1.2
	autoconf-freeze:1.2
	premerge-autoconf:1.2
	postmerge-20040315-windows:1.2
	premerge-20040315-windows:1.2
	windows-20040315-freeze:1.2
	autoconf-20031203:1.2
	autoconf-20031202:1.2
	autoconf-branch:1.2.0.14
	phong-branch:1.2.0.12
	photonmap-branch:1.2.0.10
	rel-6-1-DP:1.2
	windows-branch:1.2.0.8
	rel-6-0-2:1.2
	ansi-branch:1.2.0.6
	rel-6-0-1-branch:1.2.0.4
	hartley-6-0-post:1.2
	hartley-6-0-pre:1.2
	rel-6-0-1:1.2
	rel-6-0:1.2
	rel-5-4:1.2
	offsite-5-3-pre:1.2
	rel-5-3:1.2
	rel-5-2:1.2
	rel-5-1-branch:1.2.0.2
	rel-5-1:1.2
	rel-5-0:1.2
	rel-5-0-beta:1.1;
locks; strict;
comment	@# @;


1.3
date	2004.05.21.17.29.02;	author morrison;	state dead;
branches;
next	1.2;

1.2
date	99.06.03.21.28.45;	author bparker;	state Exp;
branches;
next	1.1;

1.1
date	99.05.13.21.37.06;	author bparker;	state Exp;
branches;
next	;


desc
@@


1.3
log
@moved to src/sample_applications/
@
text
@#!/bin/sh
#			B U I L D _ M A K E F I L E . S H
#
# This shell script is used to build a makefile configured
# for a particular platform using Cakefile.defs.
#
#  $Header: /n/xoff/cvs/brlcad/sample_applications/build_makefile.sh,v 1.2 1999/06/03 21:28:45 bparker Exp $

# Ensure that all subordinate scripts run with the Bourne shell,
# rather than the user's shell

SHELL=/bin/sh
export SHELL

IN_FILE=Cakefile.tmp
OUT_FILE=makefile

cat > ${IN_FILE} << EOF
#include "../Cakefile.defs"

#ifndef LIBTCL_USE_SYSTEM
#undef LIBTCL
#define LIBTCL -L\$"(LIBDIR)" -ltcl
#undef LIBTK
#define LIBTK -L\$"(LIBDIR)" -ltk
#undef LIBTCL_DEP
#define LIBTCL_DEP \$"(LIBDIR)"/libtcl.\$"(ARCH_SUF)"
#undef LIBTK_DEP
#define LIBTK_DEP  \$"(LIBDIR)"/libtk.\$"(ARCH_SUF)"
#endif

${OUT_FILE}:
    echo \PRODUCTS = g-xxx rtexample pl-dm > ${OUT_FILE}
    echo \INCLUDE_DIR = INCLUDE_DIR >> ${OUT_FILE}
    echo \LIBDM_CONFIG = LIBDM_CONFIG >> ${OUT_FILE}
    echo \LIBDIR = LIBDIR >> ${OUT_FILE}
    echo \X\LIBDIR = -L''XLIBDIR >> ${OUT_FILE}
    echo \X\INCDIR = XINCDIR >> ${OUT_FILE}
    echo "" >> ${OUT_FILE}
    echo \LDFLAGS = LDFLAGS >> ${OUT_FILE}
    echo \CC = CC >> ${OUT_FILE}
    echo \CFLAGS = CC_OPTS \$"(LIBDM_CONFIG)"  -I\$"(INCLUDE_DIR)" >> ${OUT_FILE}
    echo \ARCH_SUF = ARCH_SUF >> ${OUT_FILE}
    echo "" >> ${OUT_FILE}
    echo \STANDARD_LIBES = STANDARD_LIBES >> ${OUT_FILE}
    echo \LIBTCL_LIBES = LIBTCL_LIBES >> ${OUT_FILE}
    echo \LIBBU_LIBES = LIBBU_LIBES >> ${OUT_FILE}
    echo "" >> ${OUT_FILE}
    echo \LIBWDB = -L\$"(LIBDIR)" -lwdb >> ${OUT_FILE}
    echo \LIBRT = -L\$"(LIBDIR)" -lrt >> ${OUT_FILE}
    echo \LIBBN = -L\$"(LIBDIR)" -lbn >> ${OUT_FILE}
    echo \LIBBU = -L\$"(LIBDIR)" -lbu >> ${OUT_FILE}
    echo \LIBSYSV = -L\$"(LIBDIR)" -lsysv >> ${OUT_FILE}
    echo \LIBDM = -L\$"(LIBDIR)" -ldm >> ${OUT_FILE}
    echo \LIBTCL = LIBTCL >> ${OUT_FILE}
    echo \LIBTK = LIBTK >> ${OUT_FILE}
    echo \LIBES = \$"(LIBSYSV)" \$"(STANDARD_LIBES)" >> ${OUT_FILE}
    echo \LIBDM_LIBES = LIBDM_SAMPLE_LIBES >> ${OUT_FILE}
    echo "" >> ${OUT_FILE}
    echo \LIBWDB_DEP = \$"(LIBDIR)"/libwdb.\$"(ARCH_SUF)" >> ${OUT_FILE}
    echo \LIBRT_DEP = \$"(LIBDIR)"/librt.\$"(ARCH_SUF)" >> ${OUT_FILE}
    echo \LIBBN_DEP = \$"(LIBDIR)"/libbn.\$"(ARCH_SUF)" >> ${OUT_FILE}
    echo \LIBBU_DEP = \$"(LIBDIR)"/libbu.\$"(ARCH_SUF)" >> ${OUT_FILE}
    echo \LIBTCL_DEP = LIBTCL_DEP >> ${OUT_FILE}
    echo \LIBTK_DEP = LIBTK_DEP >> ${OUT_FILE}
    echo \LIBDM_DEP = \$"(LIBDIR)"/libdm.\$"(ARCH_SUF)" >> ${OUT_FILE}
    echo "" >> ${OUT_FILE}
    echo \G_XXX_LIBES = \$"(LIBWDB)" \$"(LIBRT)" \$"(LIBBN)" \$"(LIBBU)" \$"(LIBBU_LIBES)" \$"(LIBTCL)" \$"(LIBTCL_LIBES)" \$"(LIBES)" >> ${OUT_FILE}
    echo \G_XXX_DEP_LIBES = \$"(LIBRT_DEP)" \$"(LIBBN_DEP)" \$"(LIBBU_DEP)" \$"(LIBTCL_DEP)" \$"(LIBWDB_DEP)" >> ${OUT_FILE}
    echo "" >> ${OUT_FILE}
    echo \RTEXAMPLE_LIBES = \$"(LIBRT)" \$"(LIBBN)" \$"(LIBBU)" \$"(LIBBU_LIBES)" \$"(LIBFB)" \$"(LIBFB_LIBES)" \$"(LIBES)" >> ${OUT_FILE}
    echo \RTEXAMPLE_DEP_LIBES = \$"(LIBRT_DEP)" \$"(LIBBN_DEP)" \$"(LIBBU_DEP)" \$"(LIBFB_DEP)" >> ${OUT_FILE}
    echo "" >> ${OUT_FILE}
    echo \PL_DM_LIBES = \$"(LIBWDB)" \$"(LIBRT)" \$"(LIBBN)" \$"(LIBBU)" \$"(LIBTK)" \$"(LIBTCL)" \$"(LIBDM_LIBES)" \$"(LIBES)" >> ${OUT_FILE}
    echo \PL_DM_DEP_LIBES = \$"(LIBRT_DEP)" \$"(LIBBN_DEP)" \$"(LIBBU_DEP)" \$"(LIBWDB_DEP)" \$"(LIBTCL_DEP)" \$"(LIBTK_DEP)" \$"(LIBDM_DEP)" >> ${OUT_FILE}
    echo "" >> ${OUT_FILE}
    echo all: g-xxx rtexample pl-dm >> ${OUT_FILE}
    echo "" >> ${OUT_FILE}
    echo g-xxx:	g-xxx.o \$"(G_XXX_DEP_LIBES)" >> ${OUT_FILE}
    echo "	" \$"(CC)" \$"(LDFLAGS)" g-xxx.o \$"(G_XXX_LIBES)" -o g-xxx >> ${OUT_FILE}
    echo "" >> ${OUT_FILE}
    echo rtexample:	rtexample.o \$"(RTEXAMPLE_DEP_LIBES)" >> ${OUT_FILE}
    echo "	" \$"(CC)" \$"(LDFLAGS)" rtexample.o \$"(RTEXAMPLE_LIBES)" -o rtexample >> ${OUT_FILE}
    echo "" >> ${OUT_FILE}
    echo pl-dm:	pl-dm.o \$"(PL_DM_DEP_LIBES)" >> ${OUT_FILE}
    echo "	" \$"(CC)" \$"(LDFLAGS)" pl-dm.o \$"(PL_DM_LIBES)" -o pl-dm >> ${OUT_FILE}
    echo "" >> ${OUT_FILE}
    echo clean: >> ${OUT_FILE}
    echo "	" rm -f *.o *.bak >> ${OUT_FILE}
    echo "" >> ${OUT_FILE}
    echo clobber: >> ${OUT_FILE}
    echo "	" rm -f *.o *.bak \$"(PRODUCTS)" >> ${OUT_FILE}
    echo "" >> ${OUT_FILE}
    echo noprod: >> ${OUT_FILE}
    echo "	" rm -f \$"(PRODUCTS)" >> ${OUT_FILE}
    echo "" >> ${OUT_FILE}
EOF

# Run the file through cake to create a configured makefile
cake -f ${IN_FILE} > /dev/null

# remove tmp file
/bin/rm -f ${IN_FILE}
exit 0
@


1.2
log
@*- code to add an "all" target to the makefile
@
text
@d7 1
a7 1
#  $Header: /c/CVS/brlcad/sample_applications/build_makefile.sh,v 1.1 1999/05/13 21:37:06 bparker Exp $
@


1.1
log
@*- script for building a configured makefile using Cakefile.defs
@
text
@d7 1
a7 1
#  $Header: /c/CVS/brlcad/sh/brlcad-check.sh,v 11.7 1999/01/15 03:55:00 butler Exp $
d76 2
@

