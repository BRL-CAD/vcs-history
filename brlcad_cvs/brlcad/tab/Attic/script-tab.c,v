head	1.8;
access;
symbols
	ansi-20040405-merged:1.6
	postmerge-20040405-ansi:1.6
	premerge-20040404-ansi:1.6
	postmerge-autoconf:1.6
	autoconf-freeze:1.6
	premerge-autoconf:1.6
	postmerge-20040315-windows:1.6
	premerge-20040315-windows:1.6
	windows-20040315-freeze:1.6
	autoconf-20031203:1.6
	autoconf-20031202:1.6
	autoconf-branch:1.6.0.12
	phong-branch:1.6.0.10
	photonmap-branch:1.6.0.8
	rel-6-1-DP:1.6
	windows-branch:1.6.0.6
	rel-6-0-2:1.6
	ansi-branch:1.6.0.4
	rel-6-0-1-branch:1.6.0.2
	hartley-6-0-post:1.6
	hartley-6-0-pre:1.6
	rel-6-0-1:1.6
	rel-6-0:1.6
	rel-5-4:1.3
	offsite-5-3-pre:1.5
	rel-5-3:1.3
	rel-5-2:1.3
	rel-5-1-branch:1.3.0.2
	rel-5-1:1.3
	rel-5-0:1.3
	rel-5-0-beta:1.3
	rel-4-5:1.2
	ctj-4-5-post:1.2
	ctj-4-5-pre:1.2;
locks; strict;
comment	@ * @;


1.8
date	2004.05.21.16.43.11;	author morrison;	state dead;
branches;
next	1.7;

1.7
date	2004.05.10.15.30.50;	author erikg;	state Exp;
branches;
next	1.6;

1.6
date	2001.04.05.19.36.07;	author morrison;	state Exp;
branches;
next	1.5;

1.5
date	2000.08.24.23.05.10;	author mike;	state Exp;
branches;
next	1.4;

1.4
date	2000.08.24.23.01.01;	author mike;	state Exp;
branches;
next	1.3;

1.3
date	99.05.21.05.02.28;	author mike;	state Exp;
branches;
next	1.2;

1.2
date	96.07.17.14.43.08;	author jra;	state Exp;
branches;
next	1.1;

1.1
date	95.03.13.18.57.55;	author mike;	state Exp;
branches;
next	;


desc
@Convert RT-style eyepoint animation script back into a table for tabinterp.
@


1.8
log
@moved to src/tab/
@
text
@/*
 *			S C R I P T - T A B . C
 *
 *  Given an RT-style viewpoint animation script,
 *  extract out the essential viewing parameters,
 *  in a form suitable for input back to tabinterp.
 *
 *  This allows scripts generated by one set of tools to be
 *  easily interpolated to higher or lower temporal resolution.
 *
 *  Author -
 *	Michael John Muuss
 *  
 *  Source -
 *	The U. S. Army Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5068  USA
 *  
 *  Distribution Status -
 *	Public Domain, Distribution Unlimited.
 */
#ifndef lint
static const char RCSid[] = "@@(#)$Header: /n/xoff/cvs/brlcad/tab/script-tab.c,v 1.7 2004/05/10 15:30:50 erikg Exp $ (ARL)";
#endif

#ifdef HAVE_CONFIG_H
# include "config.h"
#endif



#include <stdio.h>
#include <ctype.h>
#include <math.h>
#ifdef HAVE_UNIX_IO
# include <sys/types.h>
# include <sys/stat.h>
#endif

#include "machine.h"
#include "vmath.h"
#include "raytrace.h"
#include "externs.h"

point_t	eye_model;		/* model-space location of eye */
mat_t	Viewrotscale;
fastf_t	viewsize;
int	curframe;		/* current frame number */

/*
 *			C M _ S T A R T
 *
 *  Process "start" command in new format input stream
 */
int
cm_start( argc, argv )
int	argc;
char	**argv;
{
	curframe = atoi(argv[1]);
	return 0;
}

int
cm_vsize( argc, argv )
int	argc;
char	**argv;
{
	viewsize = atof( argv[1] );
	return(0);
}

int
cm_eyept( argc, argv )
int	argc;
char	**argv;
{
	register int i;

	for( i=0; i<3; i++ )
		eye_model[i] = atof( argv[i+1] );
	return(0);
}

int
cm_lookat_pt( argc, argv )
int	argc;
char	**argv;
{
	point_t	pt;
	vect_t	dir;
	int	yflip = 0;

	if( argc < 4 )
		return(-1);
	pt[X] = atof(argv[1]);
	pt[Y] = atof(argv[2]);
	pt[Z] = atof(argv[3]);
	if( argc > 4 )
		yflip = atoi(argv[4]);

	/*
	 *  eye_pt must have been specified before here (for now)
	 */
	VSUB2( dir, pt, eye_model );
	VUNITIZE( dir );
	bn_mat_lookat( Viewrotscale, dir, yflip );
	return(0);
}

int
cm_vrot( argc, argv )
int	argc;
char	**argv;
{
	register int i;

	for( i=0; i<16; i++ )
		Viewrotscale[i] = atof( argv[i+1] );
	return(0);
}

int
cm_orientation( argc, argv )
int	argc;
char	**argv;
{
	register int	i;
	quat_t		quat;

	for( i=0; i<4; i++ )
		quat[i] = atof( argv[i+1] );
	quat_quat2mat( Viewrotscale, quat );
	return(0);
}

/*
 *			C M _ E N D
 *
 *  The output occurs here.
 *
 *  framenumber, viewsize, eye x y z, orientation x y z w
 */
int
cm_end( argc, argv )
int	argc;
char	**argv;
{
	quat_t	orient;

	/* If no matrix or az/el specified yet, use params from cmd line */
	if( Viewrotscale[15] <= 0.0 )
		rt_bomb("cm_end:  matrix not specified\n");

	quat_mat2quat( orient, Viewrotscale );

	/* Output information about this frame */
	printf("%d %.15e %.15e %.15e %.15e %.15e %.15e %.15e %.15e\n",
		curframe,
		viewsize,
		V3ARGS(eye_model),
		V4ARGS(orient) );

	return(0);
}

int
cm_tree( argc, argv )
int		argc;
const char	**argv;
{
	/* No-op */
	return(0);
}

int
cm_multiview( argc, argv )
int	argc;
char	**argv;
{
	rt_bomb("cm_multiview: not supported\n");
	return( 0 );	/* for the compilers */
}

/*
 *			C M _ A N I M
 *
 *  Experimental animation code
 *
 *  Usage:  anim <path> <type> args
 */
int
cm_anim( argc, argv )
int	argc;
char	**argv;
{
	/* No-op */
	return(0);
}

/*
 *			C M _ C L E A N
 *
 *  Clean out results of last rt_prep(), and start anew.
 */
int
cm_clean( argc, argv )
int	argc;
char	**argv;
{
	/* No-op */
	return(0);
}

/*
 *			C M _ S E T
 *
 *  Allow variable values to be set or examined.
 */
int
cm_set( argc, argv )
int	argc;
char	**argv;
{
	/* No-op */
	return(0);
}

/* 
 *			C M _ A E
 */
int
cm_ae( argc, argv )
int	argc;
char	**argv;
{
	rt_bomb("cm_ae: Unable to compute model min/max RPP\n");
	return(0);
}

/*
 *			C M _ O P T
 */
int
cm_opt( argc, argv )
int	argc;
char	**argv;
{
	/* No-op */
	return(0);
}

/*
 *  Command table for RT control script language
 *  Copied verbatim from ../rt/do.c
 */

struct command_tab rt_cmdtab[] = {
	{"start", "frame number", "start a new frame",
		cm_start,	2, 2},
	{"viewsize", "size in mm", "set view size",
		cm_vsize,	2, 2},
	{"eye_pt", "xyz of eye", "set eye point",
		cm_eyept,	4, 4},
	{"lookat_pt", "x y z [yflip]", "set eye look direction, in X-Y plane",
		cm_lookat_pt,	4, 5},
	{"viewrot", "4x4 matrix", "set view direction from matrix",
		cm_vrot,	17,17},
	{"orientation", "quaturnion", "set view direction from quaturnion",
		cm_orientation,	5, 5},
	{"end", 	"", "end of frame setup, begin raytrace",
		cm_end,		1, 1},
	{"multiview", "", "produce stock set of views",
		cm_multiview,	1, 1},
	{"anim", 	"path type args", "specify articulation animation",
		cm_anim,	4, 999},
	{"tree", 	"treetop(s)", "specify alternate list of tree tops",
		cm_tree,	1, 999},
	{"clean", "", "clean articulation from previous frame",
		cm_clean,	1, 1},
	{"set", 	"", "show or set parameters",
		cm_set,		1, 999},
	{"ae", "azim elev", "specify view as azim and elev, in degrees",
		cm_ae,		3, 3},
	{"opt", "-flags", "set flags, like on command line",
		cm_opt,		2, 999},
	{(char *)0, (char *)0, (char *)0,
		0,		0, 0}	/* END */
};

/*
 *			M A I N
 */
int
main( argc, argv )
int	argc;
char	**argv;
{
	register char	*buf;
	register int	ret;

	if( argc != 1 || isatty(fileno(stdin)) )  {
		fprintf(stderr,"Usage: script-tab < script > table\n");
		return 1;
	}

	/*
	 * New way - command driven.
	 * Process sequence of input commands.
	 * All the work happens in the functions
	 * called by rt_do_cmd().
	 */
	while( (buf = rt_read_cmd( stdin )) != (char *)0 )  {
#if		0
		fprintf(stderr,"cmd: %s\n", buf );
#endif
		ret = rt_do_cmd( NULL, buf, rt_cmdtab );
		if( ret < 0 )  {
			bu_log("Command failure on '%s'\n", buf);
			bu_free( buf, "cmd buf" );
			break;
		}
		bu_free( buf, "cmd buf" );
	}
	return 0;
}
@


1.7
log
@change conf.h to a wrapped config.h
@
text
@d22 1
a22 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/tab/script-tab.c,v 1.6 2001/04/05 19:36:07 morrison Exp $ (ARL)";
@


1.6
log
@updated SIGNED to signed
updated CONST to const
@
text
@d22 1
a22 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/tab/script-tab.c,v 1.5 2000/08/24 23:05:10 mike Exp $ (ARL)";
d25 5
a29 1
#include "conf.h"
@


1.5
log
@
lint
@
text
@d22 1
a22 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/tab/script-tab.c,v 1.4 2000/08/24 23:01:01 mike Exp $ (ARL)";
d165 1
a165 1
CONST char	**argv;
@


1.4
log
@
lint
@
text
@d22 1
a22 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/tab/script-tab.c,v 1.3 1999/05/21 05:02:28 mike Exp $ (ARL)";
d50 1
d59 1
d68 1
d80 1
d106 1
d118 1
d139 1
d162 1
d171 1
d187 1
d201 1
d215 1
d227 1
d239 1
d254 30
a283 30
	"start", "frame number", "start a new frame",
		cm_start,	2, 2,
	"viewsize", "size in mm", "set view size",
		cm_vsize,	2, 2,
	"eye_pt", "xyz of eye", "set eye point",
		cm_eyept,	4, 4,
	"lookat_pt", "x y z [yflip]", "set eye look direction, in X-Y plane",
		cm_lookat_pt,	4, 5,
	"viewrot", "4x4 matrix", "set view direction from matrix",
		cm_vrot,	17,17,
	"orientation", "quaturnion", "set view direction from quaturnion",
		cm_orientation,	5, 5,
	"end", 	"", "end of frame setup, begin raytrace",
		cm_end,		1, 1,
	"multiview", "", "produce stock set of views",
		cm_multiview,	1, 1,
	"anim", 	"path type args", "specify articulation animation",
		cm_anim,	4, 999,
	"tree", 	"treetop(s)", "specify alternate list of tree tops",
		cm_tree,	1, 999,
	"clean", "", "clean articulation from previous frame",
		cm_clean,	1, 1,
	"set", 	"", "show or set parameters",
		cm_set,		1, 999,
	"ae", "azim elev", "specify view as azim and elev, in degrees",
		cm_ae,		3, 3,
	"opt", "-flags", "set flags, like on command line",
		cm_opt,		2, 999,
	(char *)0, (char *)0, (char *)0,
		0,		0, 0	/* END */
d320 1
@


1.3
log
@
Changed to Release 5.0 function names.
@
text
@d22 1
a22 1
static char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/tab/script-tab.c,v 1.2 1996/07/17 14:43:08 jra Exp $ (ARL)";
@


1.2
log
@Minor Mods for IRIX 6.2
@
text
@d22 1
a22 1
static char RCSid[] = "@@(#)$Header: /m/cad/tab/RCS/script-tab.c,v 1.1 1995/03/13 18:57:55 mike Exp jra $ (ARL)";
d98 1
a98 1
	mat_lookat( Viewrotscale, dir, yflip );
d300 2
a301 2
			rt_log("Command failure on '%s'\n", buf);
			rt_free( buf, "cmd buf" );
d304 1
a304 1
		rt_free( buf, "cmd buf" );
@


1.1
log
@Initial revision
@
text
@d22 1
a22 1
static char RCSid[] = "@@(#)$Header$ (ARL)";
d168 1
@
