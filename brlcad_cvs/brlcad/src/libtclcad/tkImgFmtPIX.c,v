head	14.11;
access;
symbols
	rel-7-10-4:14.10
	STABLE:14.10.0.2
	stable-branch:14.2
	rel-7-10-2:14.10
	rel-7-10-0:14.9
	rel-7-8-4:14.6
	rel-7-8-2:14.4
	rel-7-8-0:14.4
	trimnurbs-branch:14.4.0.2
	help:14.4
	temp_tag:14.4
	bobWinPort-20051223-freeze:14.2
	postmerge-20051223-bobWinPort:14.4
	premerge-20051223-bobWinPort:14.4
	rel-7-6-6:14.4
	rel-7-6-4:14.4
	rel-7-6-2:14.2
	rel-7-6-branch:14.2.0.6
	rel-7-6-0:14.2
	rel-7-4-2:14.2
	rel-7-4-branch:14.2.0.4
	bobWinPort:14.2.0.2
	rel-7-4-0:14.2
	rel-7-2-6:14.2
	rel-7-2-4:14.2
	rel-7-2-2:14.2
	rel-7-2-0:14.2
	rel-7-0-4:14.2
	rel-7-0-2:14.2
	rel-7-0-1:14.2
	opensource-post:14.2
	opensource-pre:1.3
	rel-7-0-branch:1.3.0.2
	rel-7-0:1.3;
locks; strict;
comment	@ * @;


14.11
date	2007.09.15.16.23.16;	author brlcad;	state Exp;
branches;
next	14.10;

14.10
date	2007.06.27.09.18.21;	author brlcad;	state Exp;
branches;
next	14.9;

14.9
date	2007.02.20.09.05.10;	author brlcad;	state Exp;
branches;
next	14.8;

14.8
date	2007.01.27.01.41.43;	author brlcad;	state Exp;
branches;
next	14.7;

14.7
date	2007.01.21.07.30.35;	author brlcad;	state Exp;
branches;
next	14.6;

14.6
date	2006.08.22.19.44.10;	author bob1961;	state Exp;
branches;
next	14.5;

14.5
date	2006.08.01.14.26.23;	author brlcad;	state Exp;
branches;
next	14.4;

14.4
date	2005.10.31.05.52.47;	author brlcad;	state Exp;
branches;
next	14.3;

14.3
date	2005.10.23.04.44.36;	author brlcad;	state Exp;
branches;
next	14.2;

14.2
date	2004.12.21.07.18.58;	author morrison;	state Exp;
branches
	14.2.6.1;
next	14.1;

14.1
date	2004.11.16.19.42.17;	author morrison;	state Exp;
branches;
next	1.3;

1.3
date	2004.09.03.23.30.58;	author morrison;	state Exp;
branches;
next	1.2;

1.2
date	2004.08.02.23.01.51;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.20.15.20.16;	author morrison;	state Exp;
branches;
next	;

14.2.6.1
date	2005.11.13.13.46.17;	author brlcad;	state Exp;
branches;
next	;


desc
@@


14.11
log
@more c89 embracing.  c89 provides string.h for all of the various str*() and mem*() functions, so remove the check for its presence.  there is still likely to be work required for strict c89 conformance for the various bsd strings.h functions that may be in use.
@
text
@/*                   T K I M G F M T P I X . C
 * BRL-CAD
 *
 * Copyright (c) 1994-2007 United States Government as represented by
 * the U.S. Army Research Laboratory.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * 1. Redistributions of source code must retain the above copyright
 * notice, this list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above
 * copyright notice, this list of conditions and the following
 * disclaimer in the documentation and/or other materials provided
 * with the distribution.
 *
 * 3. The name of the author may not be used to endorse or promote
 * products derived from this software without specific prior written
 * permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS
 * OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
/** @@file tkImgFmtPIX.c
 *
 *      A photo image file handler for BRL-CAD(tm) ".pix" format files.
 *
 *  Author -
 *	Glenn Durfee
 *
 *  Source -
 *	The U. S. Army Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5068  USA
 *
 * Based on:
 *	tkImgFmtPPM.c --
 *
 *	A photo image file handler for PPM (Portable PixMap) files.
 *
 * Questionable whether they actually hold copyright or are simply
 * being given credit:
 *
 * Copyright (c) 1994 The Australian National University.
 * Copyright (c) 1994-1995 Sun Microsystems, Inc.
 *
 * Author: Paul Mackerras (paulus@@cs.anu.edu.au),
 *	   Department of Computer Science,
 *	   Australian National University.
 */

#ifndef lint
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libtclcad/tkImgFmtPIX.c,v 14.10 2007/06/27 09:18:21 brlcad Exp $ (ARL)";
#endif

#include "common.h"

#include <stdio.h>
#include <string.h>

#include "machine.h"
#include "bu.h"
#include "vmath.h"
#include "bn.h"
#include "fb.h"
#include "tk.h"


/* we need tk version numbers for compatibility compilation */
#if !defined(TK_MAJOR_VERSION) || (TK_MAJOR_VERSION != 8)
#  error "Expecting Tk 8"
#endif


/*
 * The format record for the PIX file format:
 */

static int		FileMatchPIX _ANSI_ARGS_((Tcl_Channel chan,
			    const char *fileName,
			    Tcl_Obj *format, int *widthPtr,
			    int *heightPtr, Tcl_Interp *interp));
static int		FileReadPIX  _ANSI_ARGS_((Tcl_Interp *interp,
			    Tcl_Channel chan,
			    const char *fileName, Tcl_Obj *formatString,
			    Tk_PhotoHandle imageHandle, int destX, int destY,
			    int width, int height, int srcX, int srcY));
static int		FileWritePIX _ANSI_ARGS_((Tcl_Interp *interp,
			    const char *fileName, Tcl_Obj *formatString,
			    Tk_PhotoImageBlock *blockPtr));

Tk_PhotoImageFormat tkImgFmtPIX = {
    "PIX",			/* name */
    FileMatchPIX,		/* fileMatchProc */
    NULL,			/* stringMatchProc */
    FileReadPIX,		/* fileReadProc */
    NULL,			/* stringReadProc */
    FileWritePIX,		/* fileWriteProc */
    NULL,			/* stringWriteProc */
};

/*
 * Prototypes for local procedures defined in this file:
 */


/*
 *----------------------------------------------------------------------
 *
 * FileMatchPIX --
 *
 *	This procedure is invoked by the photo image type to see if
 *	a file contains image data in PIX format.
 *
 * Results:
 *	The return value is >0 if the format option seems to be requesting
 *	the PIX image type.
 *
 * Side effects:
 *	The access position in f may change.
 *
 *----------------------------------------------------------------------
 */

static int
FileMatchPIX(Tcl_Channel chan, const char *fileName, Tcl_Obj *format, int *widthPtr, int *heightPtr, Tcl_Interp *interp)

				/* The name of the image file. */
			/* User-specified format string, or NULL. */
				/* The dimensions of the image are
				 * returned here if the file is a valid
				 * raw PIX file. */

{
    /* The format string must be nonnull and it must contain the word "pix". */
    /* If the user also specified the dimensions in the format string,
       use those.  Otherwise, guess from the file size. */
    char *formatString;
    int len;
    unsigned long int width, height;

    if (format == NULL)
	return 0;

    formatString = Tcl_GetStringFromObj(format, &len);
    if (formatString == NULL) return 0;

    if (strstr(formatString, "pix") == NULL &&
	strstr(formatString, "PIX") == NULL)
	return 0;

    if (fb_common_name_size(&width, &height, formatString) <= 0) {
	if (fb_common_file_size(&width, &height, fileName, 3) <= 0) {
	    return 0;
	}
    }

    *widthPtr = (int)width;
    *heightPtr = (int)height;

    return 1;
}

/*
 *----------------------------------------------------------------------
 *
 * FileReadPIX --
 *
 *	This procedure is called by the photo image type to read
 *	PIX format data from a file and write it into a given
 *	photo image.
 *
 * Results:
 *	A standard TCL completion code.  If TCL_ERROR is returned
 *	then an error message is left in interp.
 *
 * Side effects:
 *	The access position in file f is changed, and new data is
 *	added to the image given by imageHandle.
 *
 *----------------------------------------------------------------------
 */

static int
FileReadPIX(Tcl_Interp *interp, Tcl_Channel chan, const char *fileName, Tcl_Obj *format, Tk_PhotoHandle imageHandle, int destX, int destY, int width, int height, int srcX, int srcY)
				/* Interpreter to use for reporting errors. */

				/* The name of the image file. */
				/* User-specified format string, or NULL. */
				/* The photo image to write into. */
				/* Coordinates of top-left pixel in
				 * photo image to be written to. */
				/* Dimensions of block of photo image to
				 * be written to. */
				/* Coordinates of top-left pixel to be used
				 * in image being read. */
{
    unsigned long int fileWidth, fileHeight;
    int nBytes, h, count;
    unsigned char *pixelPtr;
    Tk_PhotoImageBlock block;
    char *formatString;
    int len;

    /* Determine dimensions of file. */

    formatString = Tcl_GetStringFromObj(format, &len);

    if (fb_common_name_size(&fileWidth, &fileHeight, formatString) <= 0)
	if (fb_common_file_size(&fileWidth, &fileHeight, fileName, 3) <= 0) {
	    Tcl_AppendResult(interp, "cannot determine dimensions of \"",
			     fileName, "\": please use -format pix-w#-n#",
			     NULL);
	    return TCL_ERROR;
	}

    if ((fileWidth <= 0) || (fileHeight <= 0)) {
	Tcl_AppendResult(interp, "PIX image file \"", fileName,
			 "\" has dimension(s) <= 0", (char *) NULL);
	return TCL_ERROR;
    }

    if ((srcX + width) > fileWidth) {
	width = fileWidth - srcX;
    }
    if ((srcY + height) > fileHeight) {
	height = fileHeight - srcY;
    }
    if ((width <= 0) || (height <= 0)
	|| (srcX >= fileWidth) || (srcY >= fileHeight)) {
	return TCL_OK;
    }

    block.pixelSize = 3;
    block.offset[0] = 0;
    block.offset[1] = 1;
    block.offset[2] = 2;
    block.width = width;
    block.pitch = block.pixelSize * fileWidth;

#if TK_MINOR_VERSION < 5
    Tk_PhotoExpand(imageHandle, destX + width, destY + height);
#else
    Tk_PhotoExpand(interp, imageHandle, destX + width, destY + height);
#endif

    if ((srcY + height) < fileHeight) {
	Tcl_Seek( chan, (long) ((fileHeight - srcY - height) * block.pitch),
		SEEK_CUR );

    }

    nBytes = block.pitch;
    pixelPtr = (unsigned char *) bu_malloc((unsigned) nBytes,
					   "PIX image buffer");
    block.pixelPtr = pixelPtr + srcX * block.pixelSize;

    for (h = height; h > 0; h--) {
	count = Tcl_Read( chan, (char *)pixelPtr, nBytes );
	if (count != nBytes) {
	    Tcl_AppendResult(interp, "error reading PIX image file \"",
		    fileName, "\": ",
		    Tcl_Eof(chan) ? "not enough data" : Tcl_PosixError(interp),
		    (char *) NULL);
	    bu_free((char *) pixelPtr, "PIX image");
	    return TCL_ERROR;
	}
	block.height = 1;
#if TK_MINOR_VERSION < 5
	Tk_PhotoPutBlock(imageHandle, &block, destX, destY+h-1, width, height, 1);
#else
	Tk_PhotoPutBlock(interp, imageHandle, &block, destX, destY+h-1, width, height, 1);
#endif
    }

    bu_free((char *) pixelPtr, "PIX image buffer");
    return TCL_OK;
}

/*
 *----------------------------------------------------------------------
 *
 * FileWritePIX --
 *
 *	This procedure is invoked to write image data to a file in PIX
 *	format.
 *
 * Results:
 *	A standard TCL completion code.  If TCL_ERROR is returned
 *	then an error message is left in interp.
 *
 * Side effects:
 *	Data is written to the file given by "fileName".
 *
 *----------------------------------------------------------------------
 */

static int
FileWritePIX(Tcl_Interp *interp, const char *fileName, Tcl_Obj *format, Tk_PhotoImageBlock *blockPtr)
{
    FILE *f;
    int w, h;
    int greenOffset, blueOffset;
    unsigned char *pixelPtr, *pixLinePtr;

    if ((f = fopen(fileName, "wb")) == NULL) {
	Tcl_AppendResult(interp, fileName, ": ", Tcl_PosixError(interp),
		(char *)NULL);
	return TCL_ERROR;
    }

    pixLinePtr = blockPtr->pixelPtr + blockPtr->offset[0] +
		 (blockPtr->height-1)*blockPtr->pitch;
    greenOffset = blockPtr->offset[1] - blockPtr->offset[0];
    blueOffset = blockPtr->offset[2] - blockPtr->offset[0];

    for (h = blockPtr->height; h > 0; h--) {
	pixelPtr = pixLinePtr;
	for (w = blockPtr->width; w > 0; w--) {
	    if ((putc(pixelPtr[0], f) == EOF)
		|| (putc(pixelPtr[greenOffset], f) == EOF)
		|| (putc(pixelPtr[blueOffset], f) == EOF)) {
		goto writeerror;
	    }
	    pixelPtr += blockPtr->pixelSize;
	}
	pixLinePtr -= blockPtr->pitch;
    }

    if (fclose(f) == 0) {
	return TCL_OK;
    }
    f = NULL;

 writeerror:
    Tcl_AppendResult(interp, "error writing \"", fileName, "\": ",
	    Tcl_PosixError(interp), (char *) NULL);
    if (f != NULL) {
	fclose(f);
    }
    return TCL_ERROR;
}

/*
 * Local Variables:
 * mode: C
 * tab-width: 8
 * c-basic-offset: 4
 * indent-tabs-mode: t
 * End:
 * ex: shiftwidth=4 tabstop=8
 */
@


14.10
log
@remove the final few remaining references to interp->result (both comments and code)
@
text
@d63 1
a63 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libtclcad/tkImgFmtPIX.c,v 14.9 2007/02/20 09:05:10 brlcad Exp $ (ARL)";
a68 1
#ifdef HAVE_STRING_H
a69 3
#else
#include <strings.h>
#endif
@


14.9
log
@add support for the newer tk 8.5 Tk_PhotoExpand and Tk_PhotoPutBlock functions that now expect an interp parameter, but retain compilation functionality on previous versions too
@
text
@d63 1
a63 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libtclcad/tkImgFmtPIX.c,v 14.8 2007/01/27 01:41:43 brlcad Exp $ (ARL)";
d189 1
a189 1
 *	then an error message is left in interp->result.
d304 1
a304 1
 *	then an error message is left in interp->result.
@


14.8
log
@ws. lots and lots of ws.  see sh/ws.sh for details (cases 'abcdeg').
@
text
@d63 1
a63 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libtclcad/tkImgFmtPIX.c,v 14.7 2007/01/21 07:30:35 brlcad Exp $ (ARL)";
d82 7
d255 1
d257 3
d283 1
d285 3
@


14.7
log
@Questionable whether they actually hold copyright or are simply being given credit.  declare the more flexible bsd terms for now.
@
text
@d63 1
a63 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libtclcad/tkImgFmtPIX.c,v 14.6 2006/08/22 19:44:10 bob1961 Exp $ (ARL)";
d135 3
a137 3
                         	/* The name of the image file. */
                    	/* User-specified format string, or NULL. */
                              	/* The dimensions of the image are
d193 1
a193 1
                       		/* Interpreter to use for reporting errors. */
d195 4
a198 4
                         	/* The name of the image file. */
                    		/* User-specified format string, or NULL. */
                               	/* The photo image to write into. */
                     		/* Coordinates of top-left pixel in
d200 1
a200 1
                      		/* Dimensions of block of photo image to
d202 1
a202 1
                   		/* Coordinates of top-left pixel to be used
d251 2
a252 2
    	Tcl_Seek( chan, (long) ((fileHeight - srcY - height) * block.pitch),
    		SEEK_CUR );
d312 1
a312 1
	         (blockPtr->height-1)*blockPtr->pitch;
@


14.6
log
@Include fb.h
@
text
@d1 35
a35 2
/*
 * tkImgFmtPIX.c --
a45 2
 *
 *
d51 3
a56 3
 * See the file "license.terms" for information on usage and redistribution
 * of this file, and for a DISCLAIMER OF ALL WARRANTIES.
 *
d63 1
a63 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libtclcad/tkImgFmtPIX.c,v 14.5 2006/08/01 14:26:23 brlcad Exp $ (ARL)";
@


14.5
log
@removing the asize.c bn_common_* file autosizing functions, consolidating them to libfb.  so update the function names to fb_ now
@
text
@d32 1
a32 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libtclcad/tkImgFmtPIX.c,v 14.4 2005/10/31 05:52:47 brlcad Exp $ (ARL)";
d48 1
@


14.4
log
@quell image size warnings
@
text
@d32 1
a32 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libtclcad/tkImgFmtPIX.c,v 14.3 2005/10/23 04:44:36 brlcad Exp $ (ARL)";
d127 2
a128 2
    if (bn_common_name_size(&width, &height, formatString) <= 0) {
	if (bn_common_file_size(&width, &height, fileName, 3) <= 0) {
d184 2
a185 2
    if (bn_common_name_size(&fileWidth, &fileHeight, formatString) <= 0)
	if (bn_common_file_size(&fileWidth, &fileHeight, fileName, 3) <= 0) {
@


14.3
log
@trailing ws
@
text
@d32 1
a32 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libtclcad/tkImgFmtPIX.c,v 14.2 2004/12/21 07:18:58 morrison Exp $ (ARL)";
a36 1

a37 1

d115 1
d127 2
a128 2
    if (bn_common_name_size(widthPtr, heightPtr, formatString) <= 0)
	if (bn_common_file_size(widthPtr, heightPtr, fileName, 3) <= 0)
d130 5
d173 1
a173 1
    int fileWidth, fileHeight;
@


14.2
log
@the significantly modified pd files are incorporated as new works and assigned copyright, so remove the old statement.
@
text
@d8 1
a8 1
 *  
d12 3
a14 3
 *  
 * 
 * 
d32 1
a32 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/libtclcad/tkImgFmtPIX.c,v 14.1 2004/11/16 19:42:17 morrison Exp $ (ARL)";
d104 1
a104 1
                     
d110 1
a110 1
                       
d158 1
a158 1
                     
d217 1
a217 1
    		
@


14.2.6.1
log
@merge changes from HEAD aka rel-7-6-4 to the rel-7-6-branch just in case someone peeks a gander or tries to continue/build the branch
@
text
@d8 1
a8 1
 *
d12 3
a14 3
 *
 *
 *
d32 1
a32 1
static const char RCSid[] = "@@(#)$Header$ (ARL)";
d37 1
d39 1
d104 1
a104 1

d110 1
a110 1

a116 1
    unsigned long int width, height;
d128 2
a129 2
    if (bn_common_name_size(&width, &height, formatString) <= 0) {
	if (bn_common_file_size(&width, &height, fileName, 3) <= 0) {
a130 5
	}
    }

    *widthPtr = (int)width;
    *heightPtr = (int)height;
d158 1
a158 1

d169 1
a169 1
    unsigned long int fileWidth, fileHeight;
d217 1
a217 1

@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@a12 2
 *  Distribution Status -
 *	Public Domain, Distribution Unlimited.
d32 1
a32 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/libtclcad/tkImgFmtPIX.c,v 1.3 2004/09/03 23:30:58 morrison Exp $ (ARL)";
@


1.3
log
@USE_STRING_H is no more.. it's HAVE_STRING_H
@
text
@d34 1
a34 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/libtclcad/tkImgFmtPIX.c,v 1.2 2004/08/02 23:01:51 morrison Exp $ (ARL)";
d308 10
@


1.2
log
@replace the wrapped config.h block with common.h
@
text
@d34 1
a34 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/libtclcad/tkImgFmtPIX.c,v 1.1 2004/05/20 15:20:16 morrison Exp $ (ARL)";
d42 1
a42 1
#ifdef USE_STRING_H
@


1.1
log
@Vast reorganization begins.  Sources moved from top-level directories into src/.
@
text
@d34 1
a34 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/libtclcad/tkImgFmtPIX.c,v 1.17 2004/05/10 15:30:47 erikg Exp $ (ARL)";
d37 1
a37 3
#ifdef HAVE_CONFIG_H
# include "config.h"
#endif
@

