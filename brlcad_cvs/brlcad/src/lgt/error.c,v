head	14.15;
access;
symbols
	rel-7-10-4:14.10
	STABLE:14.10.0.2
	stable-branch:14.3
	rel-7-10-2:14.10
	rel-7-10-0:14.8
	rel-7-8-4:14.6
	rel-7-8-2:14.6
	rel-7-8-0:14.6
	trimnurbs-branch:14.6.0.2
	help:14.6
	temp_tag:14.4
	bobWinPort-20051223-freeze:14.3
	postmerge-20051223-bobWinPort:14.4
	premerge-20051223-bobWinPort:14.4
	rel-7-6-6:14.4
	rel-7-6-4:14.4
	rel-7-6-2:14.3
	rel-7-6-branch:14.3.0.6
	rel-7-6-0:14.3
	rel-7-4-2:14.3
	rel-7-4-branch:14.3.0.4
	bobWinPort:14.3.0.2
	rel-7-4-0:14.3
	rel-7-2-6:14.3
	rel-7-2-4:14.3
	rel-7-2-2:14.3
	rel-7-2-0:14.3
	rel-7-0-4:14.2
	rel-7-0-2:14.2
	rel-7-0-1:14.2
	opensource-post:14.2
	opensource-pre:1.2
	rel-7-0-branch:1.2.0.2
	rel-7-0:1.2;
locks; strict;
comment	@ * @;


14.15
date	2007.12.06.15.14.03;	author brlcad;	state Exp;
branches;
next	14.14;

14.14
date	2007.12.03.22.57.58;	author brlcad;	state Exp;
branches;
next	14.13;

14.13
date	2007.12.01.20.21.10;	author brlcad;	state Exp;
branches;
next	14.12;

14.12
date	2007.11.21.20.49.09;	author erikgreenwald;	state Exp;
branches;
next	14.11;

14.11
date	2007.11.21.19.28.07;	author erikgreenwald;	state Exp;
branches;
next	14.10;

14.10
date	2007.07.26.01.13.55;	author brlcad;	state Exp;
branches;
next	14.9;

14.9
date	2007.05.18.04.13.47;	author brlcad;	state Exp;
branches;
next	14.8;

14.8
date	2007.01.23.01.13.33;	author brlcad;	state Exp;
branches;
next	14.7;

14.7
date	2007.01.20.14.36.50;	author brlcad;	state Exp;
branches;
next	14.6;

14.6
date	2006.02.27.10.08.40;	author brlcad;	state Exp;
branches;
next	14.5;

14.5
date	2006.01.18.06.46.15;	author brlcad;	state Exp;
branches;
next	14.4;

14.4
date	2005.10.23.04.44.31;	author brlcad;	state Exp;
branches;
next	14.3;

14.3
date	2005.01.30.20.30.42;	author brlcad;	state Exp;
branches
	14.3.6.1;
next	14.2;

14.2
date	2004.12.21.01.23.58;	author morrison;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.13;	author morrison;	state Exp;
branches;
next	1.2;

1.2
date	2004.08.02.23.01.48;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.20.15.19.23;	author morrison;	state Exp;
branches;
next	;

14.3.6.1
date	2005.11.13.13.46.14;	author brlcad;	state Exp;
branches;
next	;


desc
@@


14.15
log
@const fb_log
@
text
@/*                         E R R O R . C
 * BRL-CAD
 *
 * Copyright (c) 2004-2007 United States Government as represented by
 * the U.S. Army Research Laboratory.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * version 2.1 as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this file; see the file named COPYING for more
 * information.
 */
/** @@file error.c
 *
 *  Ray Tracing library and Framebuffer library, error handling routines.
 *
 *  Functions -
 *	bu_bomb		Called upon fatal RT library error.
 *	bu_log		Called to log RT library events.
 *	fb_log		Called to log FB library events.
 *
 *	Idea originated by Mike John Muuss
 *
 *	Author:		Gary S. Moss
*/
#ifndef lint
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/lgt/error.c,v 14.14 2007/12/03 22:57:58 brlcad Exp $ (BRL)";
#endif

#include "common.h"

#include <stdlib.h>
#include <stdio.h>
#include <stdarg.h>
#include <assert.h>

#include "machine.h"
#include "vmath.h"
#include "bu.h"
#include "raytrace.h"
#include "fb.h"
#include "./hmenu.h"
#include "./lgt.h"
#include "./extern.h"
#include "./screen.h"
/*
 *  		B U _ B O M B
 *
 *  Abort the LIBRT library
 */
int		bu_setjmp_valid = 0;	/* !0 = bu_jmpbuf is valid */
jmp_buf		bu_jmpbuf;		/* for BU_SETJMP() */

void
bu_bomb(const char *str)
{
	bu_log( "%s (librt.a) : Fatal error, aborting!\n", str );
	(void) fflush( stdout );
	prnt_Timer( "DUMP" );
	if( pix_buffered == B_PAGE )
		(void) fb_flush( fbiop ); /* Write out buffered image.	*/
	(void) abort();			  /* Should dump.		*/
	bu_exit(12, NULL);
}

void
fb_log( const char *fmt, ... )
{
	va_list ap;
	/* We use the same lock as malloc.  Sys-call or mem lock, really */
	bu_semaphore_acquire( BU_SEM_SYSCALL );		/* lock */
	va_start( ap, fmt );
	if( tty && (err_file[0] == '\0' || ! strcmp( err_file, "/dev/tty" )) ) {
	    /* Only move cursor and scroll if newline is output.	*/
	    static int	newline = 1;
	    if( CS != NULL ) {
		(void) SetScrlReg( TOP_SCROLL_WIN, PROMPT_LINE - 1 );
		if( newline ) {
		    SCROLL_PR_MOVE();
		    (void) ClrEOL();
		}
		(void) vfprintf( stdout, fmt, ap );
		(void) ResetScrlReg();
	    } else
		if( DL != NULL ) {
		    if( newline ) {
			SCROLL_DL_MOVE();
			(void) DeleteLn();
			SCROLL_PR_MOVE();
			(void) ClrEOL();
		    }
		    (void) vfprintf( stdout, fmt, ap );
		} else
		    (void) vfprintf( stdout, fmt, ap );
	    (void) fflush( stdout );
	    /* End of line detected by existance of a newline.	*/
	    newline = fmt[strlen( fmt )-1] == '\n';
	    hmredraw();
	} else {
	    (void) vfprintf( stderr, fmt, ap );
	    (void) fflush( stderr );
	}
	va_end( ap );
	bu_semaphore_release( BU_SEM_SYSCALL );		/* unlock */
	return;
}

/*
 * Local Variables:
 * mode: C
 * tab-width: 8
 * c-basic-offset: 4
 * indent-tabs-mode: t
 * End:
 * ex: shiftwidth=4 tabstop=8
 */
@


14.14
log
@c89 simplification.  assume stdarg is a given.
@
text
@d34 1
a34 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/lgt/error.c,v 14.13 2007/12/01 20:21:10 brlcad Exp $ (BRL)";
d74 1
a74 1
fb_log( char *fmt, ... )
@


14.13
log
@mass simplification since we can assume stdarg is available, it's c89.  remove the alternatives.
@
text
@d34 1
a34 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/lgt/error.c,v 14.12 2007/11/21 20:49:09 erikgreenwald Exp $ (BRL)";
d41 1
a41 7
#if defined(HAVE_STDARG_H)
#  include <stdarg.h>
#else
#  if defined(HAVE_VARARGS_H)
#    include <varargs.h>
#  endif
#endif
@


14.12
log
@pass bu_exit a NULL instead of an empty string
@
text
@d34 1
a34 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/lgt/error.c,v 14.11 2007/11/21 19:28:07 erikgreenwald Exp $ (BRL)";
a78 1
#if defined(HAVE_STDARG_H)
d81 1
a81 1
	{
d86 8
a93 32
	if( tty && (err_file[0] == '\0' || ! strcmp( err_file, "/dev/tty" )) )
		{ /* Only move cursor and scroll if newline is output.	*/
			static int	newline = 1;
		if( CS != NULL )
			{
			(void) SetScrlReg( TOP_SCROLL_WIN, PROMPT_LINE - 1 );
			if( newline )
				{
				SCROLL_PR_MOVE();
				(void) ClrEOL();
				}
			(void) vfprintf( stdout, fmt, ap );
			(void) ResetScrlReg();
			}
		else
		if( DL != NULL )
			{
			if( newline )
				{
				SCROLL_DL_MOVE();
				(void) DeleteLn();
				SCROLL_PR_MOVE();
				(void) ClrEOL();
				}
			(void) vfprintf( stdout, fmt, ap );
			}
		else
			(void) vfprintf( stdout, fmt, ap );
		(void) fflush( stdout );
		/* End of line detected by existance of a newline.	*/
		newline = fmt[strlen( fmt )-1] == '\n';
		hmredraw();
d95 20
a114 54
	else
		{
		(void) vfprintf( stderr, fmt, ap );
		(void) fflush( stderr );
		}
	va_end( ap );
	bu_semaphore_release( BU_SEM_SYSCALL );		/* unlock */
	return;
	}
#else

#if !defined( HAVE_VARARGS_H )
/* VARARGS */
void
fb_log(fmt, a,b,c,d,e,f,g,h,i)
char *fmt;
	{
	bu_semaphore_acquire( BU_SEM_SYSCALL );		/* lock */
	if( tty && (err_file[0] == '\0' || ! strcmp( err_file, "/dev/tty" )) )
		{ /* Only move cursor and scroll if newline is output.	*/
			static int	newline = 1;
		if( CS != NULL )
			{
			(void) SetScrlReg( TOP_SCROLL_WIN, PROMPT_LINE - 1 );
			if( newline )
				{
				SCROLL_PR_MOVE();
				(void) ClrEOL();
				}
			(void) fprintf( stdout, fmt, a,b,c,d,e,f,g,h,i );
			(void) ResetScrlReg();
			}
		else
		if( DL != NULL )
			{
			if( newline )
				{
				SCROLL_DL_MOVE();
				(void) DeleteLn();
				SCROLL_PR_MOVE();
				(void) ClrEOL();
				}
			(void) fprintf( stdout, fmt, a,b,c,d,e,f,g,h,i );
			}
		else
			(void) fprintf( stdout, fmt, a,b,c,d,e,f,g,h,i );
		(void) fflush( stdout );
		/* End of line detected by existance of a newline.	*/
		newline = fmt[strlen( fmt )-1] == '\n';
		hmredraw();
		}
	else
		(void) fprintf( stderr, fmt, a,b,c,d,e,f,g,h,i );
	bu_semaphore_release( BU_SEM_SYSCALL );		/* unlock */
a115 54
#else

/*
 *  		R T _  L O G
 *
 *  Log an RT library event
 */
/* VARARGS */
void
fb_log( fmt, va_alist )
char	*fmt;
va_dcl
	{	va_list		ap;
	/* We use the same lock as malloc.  Sys-call or mem lock, really */
	bu_semaphore_acquire( BU_SEM_SYSCALL );		/* lock */
	va_start( ap );
	if( tty && (err_file[0] == '\0' || ! strcmp( err_file, "/dev/tty" )) )
		{ /* Only move cursor and scroll if newline is output.	*/
			static int	newline = 1;
		if( CS != NULL )
			{
			(void) SetScrlReg( TOP_SCROLL_WIN, PROMPT_LINE - 1 );
			if( newline )
				{
				SCROLL_PR_MOVE();
				(void) ClrEOL();
				}
			(void) _doprnt( fmt, ap, stdout );
			(void) ResetScrlReg();
			}
		else
		if( DL != NULL )
			{
			if( newline )
				{
				SCROLL_DL_MOVE();
				(void) DeleteLn();
				SCROLL_PR_MOVE();
				(void) ClrEOL();
				}
			(void) _doprnt( fmt, ap, stdout );
			}
		else
			(void) _doprnt( fmt, ap, stdout );
		(void) fflush( stdout );
		/* End of line detected by existance of a newline.	*/
		newline = fmt[strlen( fmt )-1] == '\n';
		hmredraw();
		}
	else
		{
		(void) _doprnt( fmt, ap, stderr );
		(void) fflush( stderr );
		}
d119 1
a119 3
	}
#endif
#endif /* HAVE_STDARG_H */
@


14.11
log
@exit->bu_exit where applicable
@
text
@d34 1
a34 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/lgt/error.c,v 14.10 2007/07/26 01:13:55 brlcad Exp $ (BRL)";
d76 1
a76 1
	bu_exit(12, "");
@


14.10
log
@remove ephemeral data like phone numbers and addresses, including the misleading 'source' statements on code that is continually evolving and receiving contributions from many many sources
@
text
@d34 1
a34 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/lgt/error.c,v 14.9 2007/05/18 04:13:47 brlcad Exp $ (BRL)";
d76 1
a76 1
	exit(12);
@


14.9
log
@rt_bomb() has been deprecated since before 7.0, but even our sources weren't properly updated to reflect this change.  update all of our sources to use bu_bomb() now.
@
text
@d31 1
a31 5
	Author:		Gary S. Moss
			U. S. Army Ballistic Research Laboratory
			Aberdeen Proving Ground
			Maryland 21005-5066
			(301)278-6647 or AV-298-6647
d34 1
a34 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/lgt/error.c,v 14.8 2007/01/23 01:13:33 brlcad Exp $ (BRL)";
a75 1
#if !__STDC__
d77 1
a77 2
#endif
	}
@


14.8
log
@Sweeping license updates.  Documentation is fully relicensed to the BSD Documentation License (a minor variant of the FreeBSD Documentation License and BSD License).  All GPL code (mostly application code) is converted to the LGPL and now also specifically declares version 2.1, revoking the blank check to the FSF.  The intent of these sweeping changes are to simplify the licensing terms and increase overall flexibility of use, both externally (to users for their purposes) and internally (to allow application code to be migrated to libraries without creating GPL libraries).  As a collective work, BRL-CAD is now LGPL.
@
text
@d25 1
a25 1
 *	rt_bomb		Called upon fatal RT library error.
d38 1
a38 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/lgt/error.c,v 14.7 2007/01/20 14:36:50 brlcad Exp $ (BRL)";
@


14.7
log
@update copyright to 2007
@
text
@d8 2
a9 3
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation; either version 2 of the
 * License, or (at your option) any later version.
d14 1
a14 1
 * General Public License for more details.
d16 2
a17 2
 * You should have received a copy of the GNU General Public License
 * along with this file; see the file named COPYING for more
d38 1
a38 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/lgt/error.c,v 14.6 2006/02/27 10:08:40 brlcad Exp $ (BRL)";
@


14.6
log
@stdlib.h and exit()
@
text
@d4 1
a4 1
 * Copyright (c) 2004-2006 United States Government as represented by
d39 1
a39 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/lgt/error.c,v 14.5 2006/01/18 06:46:15 brlcad Exp $ (BRL)";
@


14.5
log
@update copyright to 2006
@
text
@d39 1
a39 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/lgt/error.c,v 14.4 2005/10/23 04:44:31 brlcad Exp $ (BRL)";
d44 1
@


14.4
log
@trailing ws
@
text
@d4 1
a4 1
 * Copyright (C) 2004-2005 United States Government as represented by
d39 1
a39 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/lgt/error.c,v 14.3 2005/01/30 20:30:42 brlcad Exp $ (BRL)";
@


14.3
log
@update copyright to 2005
@
text
@d39 1
a39 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/lgt/error.c,v 14.2 2004/12/21 01:23:58 morrison Exp $ (BRL)";
d65 1
a65 1
 *  
d135 1
a135 1
#else 
d181 1
a181 1
#else 
d185 1
a185 1
 *  
@


14.3.6.1
log
@merge changes from HEAD aka rel-7-6-4 to the rel-7-6-branch just in case someone peeks a gander or tries to continue/build the branch
@
text
@d39 1
a39 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
d65 1
a65 1
 *
d135 1
a135 1
#else
d181 1
a181 1
#else
d185 1
a185 1
 *
@


14.2
log
@assign copyright and GPL
@
text
@d4 2
a5 2
 * Copyright (c) 2004 United States Government as represented by the
 * U.S. Army Research Laboratory.
d39 1
a39 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/lgt/error.c,v 14.1 2004/11/16 19:42:13 morrison Exp $ (BRL)";
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d1 21
a21 12
/*
	Author:		Gary S. Moss
			U. S. Army Ballistic Research Laboratory
			Aberdeen Proving Ground
			Maryland 21005-5066
			(301)278-6647 or AV-298-6647
*/
#ifndef lint
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/lgt/error.c,v 1.2 2004/08/02 23:01:48 morrison Exp $ (BRL)";
#endif
/*
 *			E R R O R
d31 10
a40 1
 */
a43 2


@


1.2
log
@replace the wrapped config.h block with common.h
@
text
@d9 1
a9 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/lgt/error.c,v 1.1 2004/05/20 15:19:23 morrison Exp $ (BRL)";
d225 10
@


1.1
log
@Vast reorganization begins.  Sources moved from top-level directories into src/.
@
text
@d9 1
a9 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/lgt/error.c,v 11.12 2004/05/10 15:30:43 erikg Exp $ (BRL)";
d24 1
a24 3
#ifdef HAVE_CONFIG_H
# include "config.h"
#endif
@

