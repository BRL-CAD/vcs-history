head	14.9;
access;
symbols
	rel-7-10-4:14.9
	STABLE:14.9.0.2
	stable-branch:14.3
	rel-7-10-2:14.9
	rel-7-10-0:14.8
	rel-7-8-4:14.5
	rel-7-8-2:14.5
	rel-7-8-0:14.5
	trimnurbs-branch:14.5.0.2
	help:14.5
	temp_tag:14.4
	bobWinPort-20051223-freeze:14.4
	postmerge-20051223-bobWinPort:14.4
	premerge-20051223-bobWinPort:14.4
	rel-7-6-6:14.4
	rel-7-6-4:14.4
	rel-7-6-2:14.4
	rel-7-6-branch:14.4.0.6
	rel-7-6-0:14.4
	rel-7-4-2:14.4
	rel-7-4-branch:14.4.0.4
	bobWinPort:14.4.0.2
	rel-7-4-0:14.4
	rel-7-2-6:14.4
	rel-7-2-4:14.4
	rel-7-2-2:14.3
	rel-7-2-0:14.3
	rel-7-0-4:14.2
	rel-7-0-2:14.2
	rel-7-0-1:14.2
	opensource-post:14.2
	opensource-pre:1.2
	rel-7-0-branch:1.2.0.2
	rel-7-0:1.2;
locks; strict;
comment	@ * @;


14.9
date	2007.07.26.01.13.55;	author brlcad;	state Exp;
branches;
next	14.8;

14.8
date	2007.01.27.01.41.35;	author brlcad;	state Exp;
branches;
next	14.7;

14.7
date	2007.01.23.01.13.33;	author brlcad;	state Exp;
branches;
next	14.6;

14.6
date	2007.01.20.14.36.50;	author brlcad;	state Exp;
branches;
next	14.5;

14.5
date	2006.01.18.06.46.15;	author brlcad;	state Exp;
branches;
next	14.4;

14.4
date	2005.04.27.02.24.43;	author brlcad;	state Exp;
branches;
next	14.3;

14.3
date	2005.01.30.20.30.42;	author brlcad;	state Exp;
branches;
next	14.2;

14.2
date	2004.12.21.01.23.58;	author morrison;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.13;	author morrison;	state Exp;
branches;
next	1.2;

1.2
date	2004.08.02.23.01.48;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.20.15.19.24;	author morrison;	state Exp;
branches;
next	;


desc
@@


14.9
log
@remove ephemeral data like phone numbers and addresses, including the misleading 'source' statements on code that is continually evolving and receiving contributions from many many sources
@
text
@/*                          G L O B . C
 * BRL-CAD
 *
 * Copyright (c) 2004-2007 United States Government as represented by
 * the U.S. Army Research Laboratory.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * version 2.1 as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this file; see the file named COPYING for more
 * information.
 */
/** @@file glob.c
	Author:		Gary S. Moss
*/
#ifndef lint
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/lgt/glob.c,v 14.8 2007/01/27 01:41:35 brlcad Exp $ (BRL)";
#endif

#include "common.h"


#include <stdio.h>
#include <math.h>
#include <assert.h>

#include "machine.h"
#include "vmath.h"
#include "raytrace.h"
#include "fb.h"
#include "./hmenu.h"
#include "./lgt.h"
#include "./extern.h"
#include "./vecmath.h"
#include "./tree.h"
FBIO	*fbiop = FBIO_NULL;    /* Framebuffer interface ptr.	*/

/* Initialization for root of IR data base octree.			*/
PtList	ir_ptlist = { {0.0, 0.0, 0.0}, PTLIST_NULL };
Octree	ir_octree =
	{ 0, ABSOLUTE_ZERO, &ir_ptlist, TRIE_NULL, OCTREE_NULL, OCTREE_NULL };

/* Light sources.
	lgts[0]		ambient lighting
	lgts[1]		primary lighting
	...		user defined
 */
Lgt_Source	lgts[MAX_LGTS];

/* Animation control structure.						*/
Movie	movie =
	{
	false,	/* m_fullscreen */
	true,	/* m_lgts */
	false,	/* m_over */
	false,	/* m_keys */
	1,	/* m_noframes */
	0,	/* m_curframe */
	0,	/* m_endframe */
	-1,	/* m_frame_sz */
	NULL,	/* m_keys_fp */
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
	};

/* Globals for line-buffering pixel I/O.				*/
RGBpixel	bgpixel;		/* Background color.		*/

/* IR data base region trie tree root.					*/
Trie			*reg_triep = TRIE_NULL;

/* Optional files.							*/
char	err_file[MAX_LN] = { 0 };    /* Error log (redirected stderr).	*/
char	mat_db_file[MAX_LN] = { 0 }; /* Material database file.		*/
char	lgt_db_file[MAX_LN] = { 0 }; /* Light source database file.	*/
char	ir_db_file[MAX_LN] = { 0 };  /* IR database file.		*/
char	fb_file[MAX_LN] = { 0 };     /* Raster image output.		*/
char	ir_file[MAX_LN] = { 0 };     /* IR input data.			*/

/* Global buffers and pointers.						*/
char	input_ln[BUFSIZ];
char	prefix[MAX_LN] = "frame";
char	prompt[MAX_LN];
char	version[] = "$Revision: 14.8 $";
char	title[TITLE_LEN];
char	timer[TIMER_LEN];
char	script_file[MAX_LN];
char	*ged_file = NULL;

char	*beginptr;		     /* sbrk() at start of program.	*/

/* Unit vectors representing horizontal and vertical directions of grid	*/
fastf_t	grid_hor[3], grid_ver[3];

/* Position of grid in model space.					*/
fastf_t	grid_loc[3];

/* Unit vector representing the incident ray in model space.		*/
fastf_t	modl_radius;		/* Radius of model (bounding sphere).	*/

/* Location of center of model (calculated from bounding RPP).		*/
fastf_t	modl_cntr[3];

/* Conversion degrees to radians.					*/
fastf_t	degtorad = 0.0174532925;

/* Translations of grid in plane of view.				*/
fastf_t	x_grid_offset = 0.0, y_grid_offset = 0.0;

/* Distance of grid from the model centroid measured in milimeters.	*/
fastf_t	grid_dist = 0.0;

/* Rotation of grid around viewing axis (radians).			*/
fastf_t grid_roll = 0.0;

fastf_t	bg_coefs[3];		/* Background RGB coefficients.		*/
fastf_t	rel_perspective = 0.25;	/* Manual perspective adjustment.	*/
fastf_t	sample_sz;		/* Over-sampling ratio (aperture^2).	*/
fastf_t view_rots[16];		/* Store 4x4 MGED saved view matrix.	*/
fastf_t	view2model[16];		/* View-to-model matrix from view_rots.	*/
fastf_t	view_size;		/* Absolute grid size from MGED view.	*/
fastf_t	cell_sz = 0.0;		/* Cell size of grid in target coords.	*/

int anti_aliasing = false;	/* Anti-aliasing thru over-sampling.	*/
int aperture_sz = 1;		/* Size of window for over-sampling.	*/
int background[3];		/* Background as RGB values.		*/
int co;				/* Number of columns on screen/layer.	*/
int fatal_error = false;	/* Fatal error, must abort raytrace.	*/
int fb_size;			/* Size of frame buffer.		*/
int force_cellsz = false;	/* If (true) cell_sz drives resolution.	*/
int force_fbsz = false;		/* If (true) fb_size used.		*/
int force_viewsz = false;	/* If (true) view_size is set manually.	*/
int frame_no = 0;		/* Current frame being processed.	*/
int grid_position = false;	/* Did user set distance yet.		*/
int grid_sz = 32;		/* Default resolution 32x32 pixels.	*/
int grid_x_org = 0;		/* Grid x position to begin raytracing.	*/
int grid_x_fin = 32;		/* Grid x position to end raytracing.	*/
int grid_x_cur = 0; 		/* Grid x current position.		*/
int grid_y_cur = 0; 		/* Grid y current position.		*/
int grid_y_org = 0;		/* Grid y position to begin raytracing.	*/
int grid_y_fin = 32;		/* Grid y position to end raytracing.	*/
int hiddenln_draw = false;	/* Generate hidden-line drawing.	*/
int ir_aperture;		/* Size of window IR data over-sampling.*/
int ir_noise = 2;		/* Threshold for subdivision of octree.	*/
int ir_min = ABSOLUTE_ZERO;	/* IR input temperature ranges.		*/
int ir_max = ABSOLUTE_ZERO;
int ir_paint;			/* For temperature-to-location mapping.	*/
int ir_doing_paint = false;	/* Is user doing above mapping.		*/
int ir_offset = false;		/* Has user specified auto mapping.	*/
int ir_mapx, ir_mapy;		/* Auto mapping offsets for above.	*/
int ir_mapping = IR_OFF;	/* IR mapping.				*/
int lgt_db_size = 0;		/* Current size of light data base.	*/
int li;				/* Number of lines in window.		*/
int max_bounce = 0;		/* Recursion level for raytracer.	*/
int npsw = 1;			/* Number of worker PSWs to run.	*/
int pix_buffered = B_LINE;	/* Scan line buffering is default.	*/
int query_region = false;	/* If (true) spit out region info.	*/
int report_overlaps = true;	/* If (false) shut-up about overlaps.	*/
int reverse_video = false;	/* If (true) HL drawing white-on-black.	*/
int save_view_flag = false;	/* View specified in "model2view".	*/
int sgi_console = false;	/* Logged in to IRIS console.		*/
int sgi_usemouse = false;	/* User wants to use the IRIS mouse.	*/
int shadowing = true;		/* If (false) no shadows are computed.	*/
int tracking_cursor=false;	/* Cursor is on by default.		*/
int tty;			/* Is input attached to a terminal.	*/
int type_grid = GT_RPP_CENTERED;
int user_interrupt = false;	/* User-level interrupt of raytrace.	*/
int x_fb_origin = 0;		/* Display origin left-most pixel.	*/
int y_fb_origin = 0;		/* Display origin top-most pixel.	*/
struct resource	resource[MAX_PSW]; /* Memory resources.			*/
struct rt_i	*rt_ip;		/* Globals from RT library.		*/

void (*norml_sig)(), (*abort_sig)();

/*
 * Local Variables:
 * mode: C
 * tab-width: 8
 * c-basic-offset: 4
 * indent-tabs-mode: t
 * End:
 * ex: shiftwidth=4 tabstop=8
 */
@


14.8
log
@ws. lots and lots of ws.  see sh/ws.sh for details (cases 'abcdeg').
@
text
@a21 4
			U. S. Army Ballistic Research Laboratory
			Aberdeen Proving Ground
			Maryland 21005-5066
			(301)278-6647 or AV-298-6647
d24 1
a24 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/lgt/glob.c,v 14.7 2007/01/23 01:13:33 brlcad Exp $ (BRL)";
d90 1
a90 1
char	version[] = "$Revision: 14.7 $";
@


14.7
log
@Sweeping license updates.  Documentation is fully relicensed to the BSD Documentation License (a minor variant of the FreeBSD Documentation License and BSD License).  All GPL code (mostly application code) is converted to the LGPL and now also specifically declares version 2.1, revoking the blank check to the FSF.  The intent of these sweeping changes are to simplify the licensing terms and increase overall flexibility of use, both externally (to users for their purposes) and internally (to allow application code to be migrated to libraries without creating GPL libraries).  As a collective work, BRL-CAD is now LGPL.
@
text
@d28 1
a28 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/lgt/glob.c,v 14.6 2007/01/20 14:36:50 brlcad Exp $ (BRL)";
a33 1

d94 1
a94 1
char	version[] = "$Revision: 14.6 $";
@


14.6
log
@update copyright to 2007
@
text
@d8 2
a9 3
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation; either version 2 of the
 * License, or (at your option) any later version.
d14 1
a14 1
 * General Public License for more details.
d16 2
a17 2
 * You should have received a copy of the GNU General Public License
 * along with this file; see the file named COPYING for more
d28 1
a28 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/lgt/glob.c,v 14.5 2006/01/18 06:46:15 brlcad Exp $ (BRL)";
d95 1
a95 1
char	version[] = "$Revision: 14.5 $";
@


14.5
log
@update copyright to 2006
@
text
@d4 1
a4 1
 * Copyright (c) 2004-2006 United States Government as represented by
d29 1
a29 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/lgt/glob.c,v 14.4 2005/04/27 02:24:43 brlcad Exp $ (BRL)";
d96 1
a96 1
char	version[] = "$Revision: 14.4 $";
@


14.4
log
@get rid of the old STD_SIGNAL_DECLS define since an ansi compliant compiler is necessary now.  if a broken impl is found that needs to be accounted for, it can return as a proper configure check.
@
text
@d4 1
a4 1
 * Copyright (C) 2004-2005 United States Government as represented by
d29 1
a29 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/lgt/glob.c,v 14.3 2005/01/30 20:30:42 brlcad Exp $ (BRL)";
d96 1
a96 1
char	version[] = "$Revision: 14.3 $";
@


14.3
log
@update copyright to 2005
@
text
@d29 1
a29 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/lgt/glob.c,v 14.2 2004/12/21 01:23:58 morrison Exp $ (BRL)";
d96 1
a96 1
char	version[] = "$Revision: 14.2 $";
a184 1
#if STD_SIGNAL_DECLS
a185 3
#else
int (*norml_sig)(), (*abort_sig)();
#endif
@


14.2
log
@assign copyright and GPL
@
text
@d4 2
a5 2
 * Copyright (c) 2004 United States Government as represented by the
 * U.S. Army Research Laboratory.
d29 1
a29 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/lgt/glob.c,v 14.1 2004/11/16 19:42:13 morrison Exp $ (BRL)";
d96 1
a96 1
char	version[] = "$Revision: 14.1 $";
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d1 21
a21 1
/*
d29 1
a29 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/lgt/glob.c,v 1.2 2004/08/02 23:01:48 morrison Exp $ (BRL)";
d96 1
a96 1
char	version[] = "$Revision: 1.2 $";
@


1.2
log
@replace the wrapped config.h block with common.h
@
text
@d9 1
a9 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/lgt/glob.c,v 1.1 2004/05/20 15:19:24 morrison Exp $ (BRL)";
d76 1
a76 1
char	version[] = "$Revision: 1.1 $";
d170 10
@


1.1
log
@Vast reorganization begins.  Sources moved from top-level directories into src/.
@
text
@d9 1
a9 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/lgt/glob.c,v 11.5 2004/05/10 15:30:43 erikg Exp $ (BRL)";
d12 1
a12 3
#ifdef HAVE_CONFIG_H
# include "config.h"
#endif
d76 1
a76 1
char	version[] = "$Revision: 11.5 $";
@

