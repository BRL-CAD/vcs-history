head	14.21;
access;
symbols
	rel-7-10-4:14.15
	STABLE:14.15.0.2
	stable-branch:14.4
	rel-7-10-2:14.15
	rel-7-10-0:14.14
	rel-7-8-4:14.12
	rel-7-8-2:14.10
	rel-7-8-0:14.10
	trimnurbs-branch:14.10.0.2
	help:14.10
	temp_tag:14.7
	bobWinPort-20051223-freeze:14.5
	postmerge-20051223-bobWinPort:14.7
	premerge-20051223-bobWinPort:14.7
	rel-7-6-6:14.7
	rel-7-6-4:14.7
	rel-7-6-2:14.5
	rel-7-6-branch:14.5.0.6
	rel-7-6-0:14.5
	rel-7-4-2:14.5
	rel-7-4-branch:14.5.0.4
	bobWinPort:14.5.0.2
	rel-7-4-0:14.5
	rel-7-2-6:14.5
	rel-7-2-4:14.5
	rel-7-2-2:14.3
	rel-7-2-0:14.3
	rel-7-0-4:14.2
	rel-7-0-2:14.2
	rel-7-0-1:14.2
	opensource-post:14.2
	opensource-pre:1.5
	rel-7-0-branch:1.5.0.2
	rel-7-0:1.5;
locks; strict;
comment	@ * @;


14.21
date	2007.11.21.20.49.09;	author erikgreenwald;	state Exp;
branches;
next	14.20;

14.20
date	2007.11.21.19.28.07;	author erikgreenwald;	state Exp;
branches;
next	14.19;

14.19
date	2007.10.26.21.51.26;	author brlcad;	state Exp;
branches;
next	14.18;

14.18
date	2007.10.26.19.41.36;	author brlcad;	state Exp;
branches;
next	14.17;

14.17
date	2007.10.22.20.59.55;	author brlcad;	state Exp;
branches;
next	14.16;

14.16
date	2007.09.15.16.23.07;	author brlcad;	state Exp;
branches;
next	14.15;

14.15
date	2007.07.26.01.13.55;	author brlcad;	state Exp;
branches;
next	14.14;

14.14
date	2007.01.23.01.13.33;	author brlcad;	state Exp;
branches;
next	14.13;

14.13
date	2007.01.20.14.36.50;	author brlcad;	state Exp;
branches;
next	14.12;

14.12
date	2006.07.10.19.06.22;	author brlcad;	state Exp;
branches;
next	14.11;

14.11
date	2006.07.09.21.23.06;	author brlcad;	state Exp;
branches;
next	14.10;

14.10
date	2006.02.27.10.33.11;	author brlcad;	state Exp;
branches;
next	14.9;

14.9
date	2006.02.27.10.08.40;	author brlcad;	state Exp;
branches;
next	14.8;

14.8
date	2006.01.18.06.46.15;	author brlcad;	state Exp;
branches;
next	14.7;

14.7
date	2005.11.11.21.29.56;	author brlcad;	state Exp;
branches;
next	14.6;

14.6
date	2005.10.23.04.44.31;	author brlcad;	state Exp;
branches;
next	14.5;

14.5
date	2005.04.27.02.24.43;	author brlcad;	state Exp;
branches
	14.5.6.1;
next	14.4;

14.4
date	2005.04.13.01.43.20;	author brlcad;	state Exp;
branches;
next	14.3;

14.3
date	2005.01.30.20.30.43;	author brlcad;	state Exp;
branches;
next	14.2;

14.2
date	2004.12.21.01.23.58;	author morrison;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.13;	author morrison;	state Exp;
branches;
next	1.5;

1.5
date	2004.09.09.01.21.23;	author kermit;	state Exp;
branches;
next	1.4;

1.4
date	2004.09.03.23.30.57;	author morrison;	state Exp;
branches;
next	1.3;

1.3
date	2004.08.02.23.01.48;	author morrison;	state Exp;
branches;
next	1.2;

1.2
date	2004.06.08.22.04.17;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.20.15.19.24;	author morrison;	state Exp;
branches;
next	;

14.5.6.1
date	2005.11.13.13.46.14;	author brlcad;	state Exp;
branches;
next	;


desc
@@


14.21
log
@pass bu_exit a NULL instead of an empty string
@
text
@/*                           L G T . C
 * BRL-CAD
 *
 * Copyright (c) 2004-2007 United States Government as represented by
 * the U.S. Army Research Laboratory.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * version 2.1 as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this file; see the file named COPYING for more
 * information.
 */
/** @@file lgt.c
    Author:		Gary S. Moss
*/
#ifndef lint
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/lgt/lgt.c,v 14.20 2007/11/21 19:28:07 erikgreenwald Exp $ (BRL)";
#endif

#include "common.h"

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <fcntl.h>
#include <math.h>
#include <signal.h>
#include <assert.h>

#ifdef HAVE_UNISTD_H
#  include <unistd.h>
#endif

#include "machine.h"
#include "vmath.h"
#include "raytrace.h"
#include "fb.h"

#include "./hmenu.h"
#include "./lgt.h"
#include "./extern.h"
#include "./vecmath.h"
#include "./screen.h"

#ifndef SIGTSTP
#  define SIGTSTP 18
#endif
#ifndef SIGCLD
#  define SIGCLD SIGCHLD
#endif

#if !defined(NSIG)
#  define NSIG	64		/* conservative */
#endif

int	ready_Output_Device(int frame);
void	close_Output_Device(int frame);
static void	intr_sig(int sig);
static void	init_Lgts(void);
void		exit_Neatly(int status);
int		key_Frame(void);

static int
substr(char *str, char *pattern)
{
    if( *str == '\0' )
	return	0;
    if( *str != *pattern || strncmp( str, pattern, strlen( pattern ) ) )
	return	substr( str+1, pattern );
    return	1;
}

/*	m a i n ( )							*/
int
main(int argc, char **argv)
{
    register int	i;

    bu_setlinebuf(stderr);

    beginptr = (char *) sbrk(0);

    bu_log( "\n\nThis program is deprecated and will not be supported in future releases\n" );
    bu_log( "\tPlease use \"rtedge\" instead\n" );
    bu_log( "\tPlease notify \"devs@@brlcad.org\" if you need enhancements to \"rtedge\"\n" );
    bu_log( "\nPress \"Enter\" to continue\n\n" );
    (void)getchar();
    npsw = bu_avail_cpus();
    if( npsw > MAX_PSW )
	npsw = MAX_PSW;
    if( npsw > 1 )
	rt_g.rtg_parallel = 1;
    else
	rt_g.rtg_parallel = 0;
    bu_semaphore_init( RT_SEM_LAST );

    init_Lgts();

    if( ! pars_Argv( argc, argv ) )
	{
	    prnt_Usage();
	    return	1;
	}

    for( i = 0; i < NSIG; i++ )
	switch( i )
	    {
		case SIGINT :
		    if( (norml_sig = signal( i, SIG_IGN )) == SIG_IGN )
			{
			    if( ! tty )
				abort_sig = SIG_IGN;
			    else
				{ /* MEX windows on IRIS (other than
				     the console) ignore SIGINT. */
				    prnt_Scroll( "WARNING: Signal 1 was being ignored!" );
				    goto	tty_sig;
				}
			}
		    else
			{
			tty_sig:
			    norml_sig = intr_sig;
			    abort_sig = abort_RT;
			    (void) signal( i,  norml_sig );
			}
		    break;
		case SIGCHLD :
		    break; /* Leave SIGCHLD alone. */
		case SIGPIPE :
		    (void) signal( i, SIG_IGN );
		    break;
		case SIGQUIT :
		    break;
		case SIGTSTP :
		    (void) signal( i, stop_sig );
		    break;
	    }
    /* Main loop.							*/
    user_Interaction();
    /*NOTREACHED*/
    return	99; /* Stupid UTX compiler considers this as reachable. */
}

/*	i n t e r p o l a t e _ F r a m e ( )				*/
int
interpolate_Frame(int frame)
{
    fastf_t	rel_frame = (fastf_t) frame / movie.m_noframes;
    if( movie.m_noframes == 1 )
	return	1;
    if( ! movie.m_fullscreen )
	{	register int	frames_across;
	register int	size;
	size = MovieSize( movie.m_frame_sz, movie.m_noframes );
	frames_across = size / movie.m_frame_sz;
	x_fb_origin = (frame % frames_across) * movie.m_frame_sz;
	y_fb_origin = (frame / frames_across) * movie.m_frame_sz;
	}
    bu_log( "Frame %d:\n", frame );
    if( movie.m_keys )
	return	key_Frame() == -1 ? 0 : 1;
    lgts[0].azim = movie.m_azim_beg +
	rel_frame * (movie.m_azim_end - movie.m_azim_beg);
    lgts[0].elev = movie.m_elev_beg +
	rel_frame * (movie.m_elev_end - movie.m_elev_beg);
    grid_roll = movie.m_roll_beg +
	rel_frame * (movie.m_roll_end - movie.m_roll_beg);
    bu_log( "\tview azimuth\t%g\n", lgts[0].azim*DEGRAD );
    bu_log( "\tview elevation\t%g\n", lgts[0].elev*DEGRAD );
    bu_log( "\tview roll\t%g\n", grid_roll*DEGRAD );
    if( movie.m_over )
	{
	    lgts[0].over = 1;
	    lgts[0].dist = movie.m_dist_beg +
		rel_frame * (movie.m_dist_end - movie.m_dist_beg);
	    grid_dist = movie.m_grid_beg +
		rel_frame * (movie.m_grid_end - movie.m_grid_beg);
	    bu_log( "\teye distance\t%g\n", lgts[0].dist );
	    bu_log( "\tgrid distance\t%g\n", grid_dist );
	}
    else
	{
	    lgts[0].over = 0;
	    if( movie.m_pers_beg == 0.0 && movie.m_pers_end == 0.0 )
		{
		    rel_perspective = 0.0;
		    grid_dist = movie.m_grid_beg +
			rel_frame * (movie.m_grid_end - movie.m_grid_beg);
		    bu_log( "\tgrid distance\t%g\n", grid_dist );
		}
	    else
		if( movie.m_pers_beg >= 0.0 )
		    rel_perspective = movie.m_pers_beg +
			rel_frame * (movie.m_pers_end - movie.m_pers_beg);
	    bu_log( "\tperspective\t%g\n", rel_perspective );
	}
    return	1;
}

/*	e x i t _ N e a t l y ( )					*/
void
exit_Neatly(int status)
{
    prnt_Event( "Quitting...\n" );
    bu_exit( status, NULL );
}

/*	r e a d y _ O u t p u t _ D e v i c e ( )			*/
int
ready_Output_Device(int frame)
{
    int size;
    if( force_cellsz )
	{
	    grid_sz = (int)(view_size / cell_sz);
	    grid_sz = Max( grid_sz, 1 ); /* must be non-zero */
	    setGridSize( grid_sz );
	    prnt_Status();
	}
    /* Calculate size of frame buffer image (pixels across square image). */
    if( movie.m_noframes > 1 && ! movie.m_fullscreen )
	/* Fit frames of movie. */
	size = MovieSize( grid_sz, movie.m_noframes );
    else
	if( force_fbsz && ! DiskFile(fb_file) )
	    size = fb_size; /* user-specified size */
	else
	    size = grid_sz; /* just 1 pixel/ray */
    if( movie.m_noframes > 1 && movie.m_fullscreen )
	{	char	framefile[MAX_LN];
	/* We must be doing full-screen frames. */
	size = grid_sz;
	(void) snprintf( framefile, MAX_LN, "%s.%04d", prefix, frame );
	if( ! fb_Setup( framefile, size ) )
	    return	0;
	}
    else
	{
	    if( frame == movie.m_curframe && ! fb_Setup( fb_file, size ) )
		return	0;
	    fb_Zoom_Window();
	}
    return	1;
}

/*	c l o s e _ O u t p u t _ D e v i c e ( )			*/
void
close_Output_Device(int frame)
{
    assert( fbiop != FBIO_NULL );
#if SGI_WINCLOSE_BUG
    if( strncmp( fbiop->if_name, "/dev/sgi", 8 ) != 0 )
#endif
	if(	(movie.m_noframes > 1 && movie.m_fullscreen)
		||	frame == movie.m_endframe )
	    {
		(void) fb_close( fbiop );
		fbiop = FBIO_NULL;
	    }
    return;
}

static void
intr_sig(int sig)
{
    (void) signal( SIGINT, intr_sig );
    return;
}

/*	i n i t _ L g t s ( )
	Set certain default lighting info.
*/
static void
init_Lgts(void)
{
    /* Ambient lighting.						*/
    (void) strcpy( lgts[0].name, "EYE" );
    lgts[0].beam = 0;
    lgts[0].over = 0;
    lgts[0].rgb[0] = 255;
    lgts[0].rgb[1] = 255;
    lgts[0].rgb[2] = 255;
    lgts[0].azim = 30.0/DEGRAD;
    lgts[0].elev = 30.0/DEGRAD;
    lgts[0].dist = 0.0;
    lgts[0].energy = 0.4;
    lgts[0].stp = SOLTAB_NULL;

    /* Primary lighting.						*/
    (void) strcpy( lgts[1].name, "LIGHT" );
    lgts[1].beam = 0;
    lgts[1].over = 1;
    lgts[1].rgb[0] = 255;
    lgts[1].rgb[1] = 255;
    lgts[1].rgb[2] = 255;
    lgts[1].azim = 60.0/DEGRAD;
    lgts[1].elev = 60.0/DEGRAD;
    lgts[1].dist = 10000.0;
    lgts[1].energy = 1.0;
    lgts[1].stp = SOLTAB_NULL;

    lgt_db_size = 2;
    return;
}

/*
 * Local Variables:
 * mode: C
 * tab-width: 8
 * c-basic-offset: 4
 * indent-tabs-mode: t
 * End:
 * ex: shiftwidth=4 tabstop=8
 */
@


14.20
log
@exit->bu_exit where applicable
@
text
@d24 1
a24 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/lgt/lgt.c,v 14.19 2007/10/26 21:51:26 brlcad Exp $ (BRL)";
d213 1
a213 1
    bu_exit( status, "" );
@


14.19
log
@yet another surge of level 4 flawfinder string length checks. somewhere around 30-40% done.
@
text
@d24 1
a24 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/lgt/lgt.c,v 14.18 2007/10/26 19:41:36 brlcad Exp $ (BRL)";
d213 1
a213 1
    exit( status );
@


14.18
log
@remove dead iris code
@
text
@d24 1
a24 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/lgt/lgt.c,v 14.17 2007/10/22 20:59:55 brlcad Exp $ (BRL)";
d241 1
a241 1
	(void) sprintf( framefile, "%s.%04d", prefix, frame );
@


14.17
log
@the old cray cos and unicos code for the cray xmp and friends finally became a burden to maintain while resolving various flawfinder issues.  remove the old code, particularly that which wasn't __STDC__.  however, intentionally leave the code for calculating byteoffsets and converting float formats to/from network order .. could still come in handy at some point down the road.
@
text
@d24 1
a24 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/lgt/lgt.c,v 14.16 2007/09/15 16:23:07 brlcad Exp $ (BRL)";
a111 16
    /* XXX - ismex() uses dgl on SGI servers which causes problems when client
       machine does not grant access to server via 'xhost'. */
#if 0
    if( ismex() && tty )
	{
	    sgi_console = substr( getenv( "TERM" ), "iris" );
	    (void) sprintf( prompt,
			    "Do you want to use the IRIS mouse ? [y|n](%c) ",
			    sgi_usemouse ? 'y' : 'n'
			    );
	    if( get_Input( input_ln, MAX_LN, prompt ) != NULL )
		sgi_usemouse = input_ln[0] != 'n';
	    if( sgi_usemouse )
		sgi_Init_Popup_Menu();
	}
#endif
@


14.16
log
@more c89 embracing.  c89 provides string.h for all of the various str*() and mem*() functions, so remove the check for its presence.  there is still likely to be work required for strict c89 conformance for the various bsd strings.h functions that may be in use.
@
text
@d24 1
a24 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/lgt/lgt.c,v 14.15 2007/07/26 01:13:55 brlcad Exp $ (BRL)";
a39 14
#ifdef CRAY
#  include <sys/category.h>
#  include <sys/resource.h>
#  include <sys/types.h>
#  ifdef CRAY1
#    include <sys/machd.h>	/* For HZ */
#  endif
#  ifdef CRAY2
#    undef MAXINT
#    include <sys/param.h>
#  endif
#  define MAX_CPU_TICKS	(200000*HZ) /* Max ticks = seconds * ticks/sec.	*/
#  define NICENESS	-6 /* should bring it down from 16 to 10 */
#endif	/* Cray */
a103 20
#if defined( CRAY )
    {
	int	newnice;
	long	oldlimit;
	long	newlimit;
	if( (newnice = nicem( C_PROC, 0, NICENESS )) == -1 )
	    perror( "nicem" );
	else
	    bu_log( "Program niced to %d.\n", newnice - 20 );
	oldlimit = limit( C_PROC, 0, L_CPU, MAX_CPU_TICKS );
	newlimit = limit( C_PROC, 0, L_CPU, -1 );
	bu_log(	"CPU time limit: was %d seconds, now set to %d seconds.\n",
		oldlimit/HZ,
		newlimit/HZ
		);
	bu_log(	"Memory limit set to %dKW.\n",
		limit( C_PROC, 0, L_MEM, -1 ) );
    }
#endif

@


14.15
log
@remove ephemeral data like phone numbers and addresses, including the misleading 'source' statements on code that is continually evolving and receiving contributions from many many sources
@
text
@d24 1
a24 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/lgt/lgt.c,v 14.14 2007/01/23 01:13:33 brlcad Exp $ (BRL)";
d31 1
a31 8
#ifdef HAVE_UNISTD_H
#  include <unistd.h>
#endif
#ifdef HAVE_STRING_H
#  include <string.h>
#else
#  include <strings.h>
#endif
d37 4
a40 1
#if defined( CRAY )
d44 1
a44 1
#  if defined( CRAY1 )
d47 1
a47 1
#  if defined( CRAY2 )
@


14.14
log
@Sweeping license updates.  Documentation is fully relicensed to the BSD Documentation License (a minor variant of the FreeBSD Documentation License and BSD License).  All GPL code (mostly application code) is converted to the LGPL and now also specifically declares version 2.1, revoking the blank check to the FSF.  The intent of these sweeping changes are to simplify the licensing terms and increase overall flexibility of use, both externally (to users for their purposes) and internally (to allow application code to be migrated to libraries without creating GPL libraries).  As a collective work, BRL-CAD is now LGPL.
@
text
@a21 4
    U. S. Army Ballistic Research Laboratory
    Aberdeen Proving Ground
    Maryland 21005-5066
    (301)278-6647 or AV-298-6647
d24 1
a24 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/lgt/lgt.c,v 14.13 2007/01/20 14:36:50 brlcad Exp $ (BRL)";
@


14.13
log
@update copyright to 2007
@
text
@d8 2
a9 3
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation; either version 2 of the
 * License, or (at your option) any later version.
d14 1
a14 1
 * General Public License for more details.
d16 2
a17 2
 * You should have received a copy of the GNU General Public License
 * along with this file; see the file named COPYING for more
d28 1
a28 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/lgt/lgt.c,v 14.12 2006/07/10 19:06:22 brlcad Exp $ (BRL)";
@


14.12
log
@refactor away the old BSD block defines among other simple cleanup
@
text
@d4 1
a4 1
 * Copyright (c) 2004-2006 United States Government as represented by
d29 1
a29 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/lgt/lgt.c,v 14.11 2006/07/09 21:23:06 brlcad Exp $ (BRL)";
@


14.11
log
@do what burst does with the signals, clean up the preprocessor logic slightly, ws
@
text
@d29 1
a29 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/lgt/lgt.c,v 14.10 2006/02/27 10:33:11 brlcad Exp $ (BRL)";
d108 3
a110 3
#if ! defined( BSD ) && ! defined( sgi ) && ! defined( CRAY2 )
    (void) setvbuf( stderr, (char *) NULL, _IOLBF, BUFSIZ );
#endif
@


14.10
log
@unbreak lgt, #endif left in the wrong place.  nix the TRUE/FALSE stuff while we're in here too
@
text
@d22 5
a26 5
	Author:		Gary S. Moss
			U. S. Army Ballistic Research Laboratory
			Aberdeen Proving Ground
			Maryland 21005-5066
			(301)278-6647 or AV-298-6647
d29 1
a29 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/lgt/lgt.c,v 14.9 2006/02/27 10:08:40 brlcad Exp $ (BRL)";
d75 6
d83 1
a83 1
# define NSIG	64		/* conservative */
d96 6
a101 6
	if( *str == '\0' )
		return	0;
	if( *str != *pattern || strncmp( str, pattern, strlen( pattern ) ) )
		return	substr( str+1, pattern );
	return	1;
	}
d106 2
a107 1
{	register int	i;
d109 1
a109 1
	(void) setvbuf( stderr, (char *) NULL, _IOLBF, BUFSIZ );
d111 1
a111 1
	beginptr = (char *) sbrk(0);
d113 13
a125 13
	bu_log( "\n\nThis program is deprecated and will not be supported in future releases\n" );
	bu_log( "\tPlease use \"rtedge\" instead\n" );
	bu_log( "\tPlease notify \"devs@@brlcad.org\" if you need enhancements to \"rtedge\"\n" );
	bu_log( "\nPress \"Enter\" to continue\n\n" );
	(void)getchar();
	npsw = bu_avail_cpus();
	if( npsw > MAX_PSW )
		npsw = MAX_PSW;
	if( npsw > 1 )
		rt_g.rtg_parallel = 1;
	else
		rt_g.rtg_parallel = 0;
	bu_semaphore_init( RT_SEM_LAST );
d128 4
a131 3
	{	int	newnice;
		long	oldlimit;
		long	newlimit;
d133 1
a133 1
		perror( "nicem" );
d135 1
a135 1
		bu_log( "Program niced to %d.\n", newnice - 20 );
d144 1
a144 1
	}
d147 1
a147 1
	init_Lgts();
d149 5
a153 5
	if( ! pars_Argv( argc, argv ) )
		{
		prnt_Usage();
		return	1;
		}
d155 2
a156 2
/* XXX - ismex() uses dgl on SGI servers which causes problems when client
	machine does not grant access to server via 'xhost'. */
d158 12
a169 12
	if( ismex() && tty )
		{
		sgi_console = substr( getenv( "TERM" ), "iris" );
		(void) sprintf( prompt,
				"Do you want to use the IRIS mouse ? [y|n](%c) ",
				sgi_usemouse ? 'y' : 'n'
				);
		if( get_Input( input_ln, MAX_LN, prompt ) != NULL )
			sgi_usemouse = input_ln[0] != 'n';
		if( sgi_usemouse )
			sgi_Init_Popup_Menu();
		}
d171 5
a175 2
	for( i = 0; i < NSIG; i++ )
		switch( i )
d177 7
a183 11
		case SIGINT :
			if( (norml_sig = signal( i, SIG_IGN )) == SIG_IGN )
				{
				if( ! tty )
					abort_sig = SIG_IGN;
				else
					{ /* MEX windows on IRIS (other than
						the console) ignore SIGINT. */
					prnt_Scroll( "WARNING: Signal 1 was being ignored!" );
					goto	tty_sig;
					}
d185 9
a193 9
			else
				{
tty_sig:
				norml_sig = intr_sig;
				abort_sig = abort_RT;
				(void) signal( i,  norml_sig );
				}
			break;
#ifdef SIGCHLD
d195 1
a195 6
			break; /* Leave SIGCHLD alone. */
#endif
#if defined(SIGCLD) && (SIGCLD != SIGCHLD)
		case SIGCLD :
			break; /* Leave SIGCLD alone. */
#endif
d197 2
a198 2
			(void) signal( i, SIG_IGN );
			break;
d200 1
a200 5
			break;
#if ! defined( SYSV )
#if ! defined( SIGTSTP )
#define SIGTSTP	18
#endif
d202 8
a209 9
			(void) signal( i, stop_sig );
			break;
#endif
			}
	/* Main loop.							*/
	user_Interaction();
	/*NOTREACHED*/
	return	99; /* Stupid UTX compiler considers this as reachable. */
	}
d214 38
a251 24
{	fastf_t	rel_frame = (fastf_t) frame / movie.m_noframes;
	if( movie.m_noframes == 1 )
		return	1;
	if( ! movie.m_fullscreen )
		{	register int	frames_across;
			register int	size;
		size = MovieSize( movie.m_frame_sz, movie.m_noframes );
		frames_across = size / movie.m_frame_sz;
		x_fb_origin = (frame % frames_across) * movie.m_frame_sz;
		y_fb_origin = (frame / frames_across) * movie.m_frame_sz;
		}
	bu_log( "Frame %d:\n", frame );
	if( movie.m_keys )
		return	key_Frame() == -1 ? 0 : 1;
	lgts[0].azim = movie.m_azim_beg +
			rel_frame * (movie.m_azim_end - movie.m_azim_beg);
	lgts[0].elev = movie.m_elev_beg +
			rel_frame * (movie.m_elev_end - movie.m_elev_beg);
	grid_roll = movie.m_roll_beg +
			rel_frame * (movie.m_roll_end - movie.m_roll_beg);
	bu_log( "\tview azimuth\t%g\n", lgts[0].azim*DEGRAD );
	bu_log( "\tview elevation\t%g\n", lgts[0].elev*DEGRAD );
	bu_log( "\tview roll\t%g\n", grid_roll*DEGRAD );
	if( movie.m_over )
d253 2
a254 4
		lgts[0].over = 1;
		lgts[0].dist = movie.m_dist_beg +
			rel_frame * (movie.m_dist_end - movie.m_dist_beg);
		grid_dist = movie.m_grid_beg +
d256 1
a256 2
		bu_log( "\teye distance\t%g\n", lgts[0].dist );
		bu_log( "\tgrid distance\t%g\n", grid_dist );
d258 1
a258 11
	else
		{
		lgts[0].over = 0;
		if( movie.m_pers_beg == 0.0 && movie.m_pers_end == 0.0 )
			{
			rel_perspective = 0.0;
			grid_dist = movie.m_grid_beg +
			     rel_frame * (movie.m_grid_end - movie.m_grid_beg);
			bu_log( "\tgrid distance\t%g\n", grid_dist );
			}
		else
d260 1
a260 1
			rel_perspective = movie.m_pers_beg +
d262 1
a262 3
		bu_log( "\tperspective\t%g\n", rel_perspective );
		}
	return	1;
d264 2
d271 2
a272 2
	prnt_Event( "Quitting...\n" );
	exit( status );
d278 14
a291 13
{	int size;
	if( force_cellsz )
		{
		grid_sz = (int)(view_size / cell_sz);
		grid_sz = Max( grid_sz, 1 ); /* must be non-zero */
		setGridSize( grid_sz );
		prnt_Status();
		}
	/* Calculate size of frame buffer image (pixels across square image). */
	if( movie.m_noframes > 1 && ! movie.m_fullscreen )
		/* Fit frames of movie. */
		size = MovieSize( grid_sz, movie.m_noframes );
	else
d293 1
a293 1
		size = fb_size; /* user-specified size */
d295 14
a308 16
		size = grid_sz; /* just 1 pixel/ray */
	if( movie.m_noframes > 1 && movie.m_fullscreen )
		{	char	framefile[MAX_LN];
		/* We must be doing full-screen frames. */
		size = grid_sz;
		(void) sprintf( framefile, "%s.%04d", prefix, frame );
		if( ! fb_Setup( framefile, size ) )
			return	0;
		}
	else
		{
		if( frame == movie.m_curframe && ! fb_Setup( fb_file, size ) )
			return	0;
		fb_Zoom_Window();
		}
	return	1;
d310 2
d317 1
a317 1
	assert( fbiop != FBIO_NULL );
d319 1
a319 1
	if( strncmp( fbiop->if_name, "/dev/sgi", 8 ) != 0 )
d322 2
a323 2
	    ||	frame == movie.m_endframe )
		{
d326 3
a328 3
		}
	return;
	}
d333 2
a334 2
	(void) signal( SIGINT, intr_sig );
	return;
d339 1
a339 1
 */
d343 25
a367 25
	/* Ambient lighting.						*/
	(void) strcpy( lgts[0].name, "EYE" );
	lgts[0].beam = 0;
	lgts[0].over = 0;
	lgts[0].rgb[0] = 255;
	lgts[0].rgb[1] = 255;
	lgts[0].rgb[2] = 255;
	lgts[0].azim = 30.0/DEGRAD;
	lgts[0].elev = 30.0/DEGRAD;
	lgts[0].dist = 0.0;
	lgts[0].energy = 0.4;
	lgts[0].stp = SOLTAB_NULL;

	/* Primary lighting.						*/
	(void) strcpy( lgts[1].name, "LIGHT" );
	lgts[1].beam = 0;
	lgts[1].over = 1;
	lgts[1].rgb[0] = 255;
	lgts[1].rgb[1] = 255;
	lgts[1].rgb[2] = 255;
	lgts[1].azim = 60.0/DEGRAD;
	lgts[1].elev = 60.0/DEGRAD;
	lgts[1].dist = 10000.0;
	lgts[1].energy = 1.0;
	lgts[1].stp = SOLTAB_NULL;
d369 3
a371 3
	lgt_db_size = 2;
	return;
	}
@


14.9
log
@stdlib.h and exit()
@
text
@d29 1
a29 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/lgt/lgt.c,v 14.8 2006/01/18 06:46:15 brlcad Exp $ (BRL)";
d50 13
a62 10
#include <sys/category.h>
#include <sys/resource.h>
#include <sys/types.h>
# if defined( CRAY1 )
#  include <sys/machd.h>	/* For HZ */
# endif
#if defined( CRAY2 )
#  undef MAXINT
#  include <sys/param.h>
#endif
a75 4
#define MAX_CPU_TICKS	(200000*HZ) /* Max ticks = seconds * ticks/sec.	*/
#define NICENESS	-6 /* should bring it down from 16 to 10 */
#endif	/* Cray */

d91 1
a91 1
		return	FALSE;
d94 1
a94 1
	return	TRUE;
d219 1
a219 1
		return	TRUE;
d230 1
a230 1
		return	key_Frame() == -1 ? FALSE : TRUE;
d242 1
a242 1
		lgts[0].over = TRUE;
d252 1
a252 1
		lgts[0].over = FALSE;
d266 1
a266 1
	return	TRUE;
d346 2
a347 2
	lgts[0].beam = FALSE;
	lgts[0].over = FALSE;
d359 2
a360 2
	lgts[1].beam = FALSE;
	lgts[1].over = TRUE;
@


14.8
log
@update copyright to 2006
@
text
@d29 1
a29 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/lgt/lgt.c,v 14.7 2005/11/11 21:29:56 brlcad Exp $ (BRL)";
d34 2
d37 1
a37 1
#include <unistd.h>
a38 1
#include <stdio.h>
d40 1
a40 1
#include <string.h>
d42 1
a42 1
#include <strings.h>
d49 12
d72 1
a72 11
#if defined( CRAY )
#include <sys/category.h>
#include <sys/resource.h>
#include <sys/types.h>
# if defined( CRAY1 )
#  include <sys/machd.h>	/* For HZ */
# endif
#if defined( CRAY2 )
#undef MAXINT
#include <sys/param.h>
#endif
d276 1
a276 1
	}
@


14.7
log
@convert STATIC to static and obliterate the NDEBUG hacks now that it's consistent provided throughout the package via configure
@
text
@d4 1
a4 1
 * Copyright (C) 2004-2005 United States Government as represented by
d29 1
a29 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/lgt/lgt.c,v 14.6 2005/10/23 04:44:31 brlcad Exp $ (BRL)";
@


14.6
log
@trailing ws
@
text
@d29 1
a29 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/lgt/lgt.c,v 14.5 2005/04/27 02:24:43 brlcad Exp $ (BRL)";
d80 2
a81 2
STATIC void	intr_sig(int sig);
STATIC void	init_Lgts(void);
d85 1
a85 1
STATIC int
d329 1
a329 1
STATIC void
d339 1
a339 1
STATIC void
@


14.5
log
@get rid of the old STD_SIGNAL_DECLS define since an ansi compliant compiler is necessary now.  if a broken impl is found that needs to be accounted for, it can return as a proper configure check.
@
text
@d29 1
a29 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/lgt/lgt.c,v 14.4 2005/04/13 01:43:20 brlcad Exp $ (BRL)";
d136 1
a136 1
	
d157 1
a157 1
		if( sgi_usemouse )			
@


14.5.6.1
log
@merge changes from HEAD aka rel-7-6-4 to the rel-7-6-branch just in case someone peeks a gander or tries to continue/build the branch
@
text
@d29 1
a29 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
d80 2
a81 2
static void	intr_sig(int sig);
static void	init_Lgts(void);
d85 1
a85 1
static int
d136 1
a136 1

d157 1
a157 1
		if( sgi_usemouse )
d329 1
a329 1
static void
d339 1
a339 1
static void
@


14.4
log
@remove specific references to ARL addresses.  instead use brlcad.org mail aliases and the new sf.net mailing lists.
@
text
@d29 1
a29 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/lgt/lgt.c,v 14.3 2005/01/30 20:30:43 brlcad Exp $ (BRL)";
a79 1
#if STD_SIGNAL_DECLS
a80 3
#else
STATIC int	intr_sig();
#endif
a328 1
#if STD_SIGNAL_DECLS
a329 4
#else
STATIC int
#endif
/*ARGSUSED*/
a332 1
#if STD_SIGNAL_DECLS
d334 1
a334 4
#else
	return	sig;
#endif
	}
@


14.3
log
@update copyright to 2005
@
text
@d29 1
a29 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/lgt/lgt.c,v 14.2 2004/12/21 01:23:58 morrison Exp $ (BRL)";
d110 1
a110 1
	bu_log( "\tPlease notify \"cad@@arl.army.mil\" if you need enhancements to \"rtedge\"\n" );
@


14.2
log
@assign copyright and GPL
@
text
@d4 2
a5 2
 * Copyright (c) 2004 United States Government as represented by the
 * U.S. Army Research Laboratory.
d29 1
a29 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/lgt/lgt.c,v 14.1 2004/11/16 19:42:13 morrison Exp $ (BRL)";
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d1 21
a21 1
/*
d29 1
a29 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/lgt/lgt.c,v 1.5 2004/09/09 01:21:23 kermit Exp $ (BRL)";
@


1.5
log
@Added <unistd.h> to fix implicit cast (for IA64 architecture).
@
text
@d9 1
a9 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/lgt/lgt.c,v 1.4 2004/09/03 23:30:57 morrison Exp $ (BRL)";
d364 10
@


1.4
log
@USE_STRING_H is no more.. it's HAVE_STRING_H
@
text
@d9 1
a9 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/lgt/lgt.c,v 1.3 2004/08/02 23:01:48 morrison Exp $ (BRL)";
d14 3
a16 2


d32 1
@


1.3
log
@replace the wrapped config.h block with common.h
@
text
@d9 1
a9 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/lgt/lgt.c,v 1.2 2004/06/08 22:04:17 morrison Exp $ (BRL)";
d17 1
a17 1
#ifdef USE_STRING_H
@


1.2
log
@obliterate externs.h
@
text
@d9 1
a9 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
d12 1
a12 3
#ifdef HAVE_CONFIG_H
# include "config.h"
#endif
@


1.1
log
@Vast reorganization begins.  Sources moved from top-level directories into src/.
@
text
@d9 1
a9 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/lgt/lgt.c,v 11.12 2004/05/10 15:30:43 erikg Exp $ (BRL)";
a29 1
#include "externs.h"
@

