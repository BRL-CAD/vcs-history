head	14.18;
access;
symbols
	rel-7-10-4:14.13
	STABLE:14.13.0.2
	stable-branch:14.3
	rel-7-10-2:14.13
	rel-7-10-0:14.12
	rel-7-8-4:14.10
	rel-7-8-2:14.10
	rel-7-8-0:14.10
	trimnurbs-branch:14.9.0.2
	help:14.9
	temp_tag:14.7
	bobWinPort-20051223-freeze:14.6
	postmerge-20051223-bobWinPort:14.7
	premerge-20051223-bobWinPort:14.7
	rel-7-6-6:14.7
	rel-7-6-4:14.7
	rel-7-6-2:14.6
	rel-7-6-branch:14.6.0.6
	rel-7-6-0:14.6
	rel-7-4-2:14.6
	rel-7-4-branch:14.6.0.4
	bobWinPort:14.6.0.2
	rel-7-4-0:14.6
	rel-7-2-6:14.6
	rel-7-2-4:14.5
	rel-7-2-2:14.3
	rel-7-2-0:14.3
	rel-7-0-4:14.2
	rel-7-0-2:14.2
	rel-7-0-1:14.2
	opensource-post:14.2
	opensource-pre:1.4
	rel-7-0-branch:1.4.0.2
	rel-7-0:1.4;
locks; strict;
comment	@ * @;


14.18
date	2007.12.15.08.44.39;	author brlcad;	state Exp;
branches;
next	14.17;

14.17
date	2007.11.21.20.49.09;	author erikgreenwald;	state Exp;
branches;
next	14.16;

14.16
date	2007.11.21.19.28.07;	author erikgreenwald;	state Exp;
branches;
next	14.15;

14.15
date	2007.10.26.21.51.26;	author brlcad;	state Exp;
branches;
next	14.14;

14.14
date	2007.09.15.16.23.07;	author brlcad;	state Exp;
branches;
next	14.13;

14.13
date	2007.07.26.01.13.55;	author brlcad;	state Exp;
branches;
next	14.12;

14.12
date	2007.01.23.01.13.33;	author brlcad;	state Exp;
branches;
next	14.11;

14.11
date	2007.01.20.14.36.50;	author brlcad;	state Exp;
branches;
next	14.10;

14.10
date	2006.04.05.19.19.14;	author brlcad;	state Exp;
branches;
next	14.9;

14.9
date	2006.01.23.07.11.02;	author brlcad;	state Exp;
branches
	14.9.2.1;
next	14.8;

14.8
date	2006.01.18.06.46.15;	author brlcad;	state Exp;
branches;
next	14.7;

14.7
date	2005.11.04.20.53.34;	author brlcad;	state Exp;
branches;
next	14.6;

14.6
date	2005.05.28.02.14.50;	author brlcad;	state Exp;
branches
	14.6.6.1;
next	14.5;

14.5
date	2005.04.27.02.24.43;	author brlcad;	state Exp;
branches;
next	14.4;

14.4
date	2005.04.27.02.02.13;	author brlcad;	state Exp;
branches;
next	14.3;

14.3
date	2005.01.30.20.30.42;	author brlcad;	state Exp;
branches;
next	14.2;

14.2
date	2004.12.21.01.23.58;	author morrison;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.13;	author morrison;	state Exp;
branches;
next	1.4;

1.4
date	2004.09.09.02.51.07;	author kermit;	state Exp;
branches;
next	1.3;

1.3
date	2004.08.02.23.01.48;	author morrison;	state Exp;
branches;
next	1.2;

1.2
date	2004.06.08.22.04.17;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.20.15.19.23;	author morrison;	state Exp;
branches;
next	;

14.6.6.1
date	2005.11.13.13.46.14;	author brlcad;	state Exp;
branches;
next	;

14.9.2.1
date	2006.04.07.19.30.14;	author jlowenz;	state Exp;
branches;
next	;


desc
@@


14.18
log
@strerror is c89, and does work on windows at least with vc8 so drop the obsolete and error-prone sys_errlist array alternates and configure check
@
text
@/*                     E X E C S H E L L . C
 * BRL-CAD
 *
 * Copyright (c) 2004-2007 United States Government as represented by
 * the U.S. Army Research Laboratory.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * version 2.1 as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this file; see the file named COPYING for more
 * information.
 */
/** @@file execshell.c
 *	Author:		Gary S. Moss
 */
#ifndef lint
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/lgt/execshell.c,v 14.17 2007/11/21 20:49:09 erikgreenwald Exp $ (BRL)";
#endif

#include "common.h"

#include <stdlib.h>
#include <string.h>
#include <stdio.h>
#include <signal.h>
#include <fcntl.h>
#include <errno.h>
#include <assert.h>
#ifdef HAVE_SYS_WAIT_H
#  include <sys/wait.h>
#endif

#include "machine.h"
#include "vmath.h"
#include "raytrace.h"
#include "fb.h"

#include "./hmenu.h"
#include "./lgt.h"
#include "./extern.h"


#define DFL_SHELL	"/bin/sh"
#define CSH		"/bin/csh"
#define TCSH		"/usr/brl/bin/tcsh"

void
loc_Perror(char *msg)
{
	if( errno >= 0 )
		bu_log( "%s: %s\n", msg, strerror(errno) );
	else
		bu_log( "\"%s\" (%d), errno not set, shouldn't call perror.\n",
			__FILE__, __LINE__
			);
	return;
	}


#define	PERROR_RET() \
	(void) snprintf( error_buf, 32, "\"%s\" (%d)", __FILE__, __LINE__ ); \
	loc_Perror( error_buf ); \
	return	-1;

/*	e x e c _ S h e l l ( )
	If args[0] is NULL, spawn a shell, otherwise execute the specified
	command line.
	Return the exit status of the program, or -1 if wait() or fork()
	return an error.
 */
int
exec_Shell(char **args)
{
    register int child_pid;
    static char error_buf[32];
    void (*intr_sig)(), (*quit_sig)();
    if( args[0] == NULL ) {
	char	*arg_sh = getenv( "SHELL" );
	/* $SHELL, if set, DFL_SHELL otherwise.			*/
	if(	arg_sh == NULL
		/* Work around for process group problem.		*/
		||	strcmp( arg_sh, TCSH ) == 0
		||	strcmp( arg_sh, CSH ) == 0
		)
	    arg_sh = DFL_SHELL;
	args[0] = arg_sh;
	args[1] = NULL;
    }

    intr_sig = signal( SIGINT,  SIG_IGN );
    quit_sig = signal( SIGQUIT, SIG_IGN );
    switch( child_pid = fork() ) {
	case -1 :
	    PERROR_RET();
	case  0 : /* Child process - execute.		*/
	    {
		int	tmp_fd;
		if((tmp_fd = open( "/dev/tty", O_WRONLY )) == -1) {
		    PERROR_RET();
		}
		(void) close( 2 );
		if( fcntl( tmp_fd, F_DUPFD, 2 ) == -1 ) {
		    PERROR_RET();
		}
		(void) execvp( args[0], args );
		loc_Perror( args[0] );
		bu_exit( errno, NULL );
	    }
	default :
	    {
		register int	pid;
		int		stat_loc;
		while((pid = wait( &stat_loc )) != -1 && pid != child_pid)
		    ;
		prnt_Event( "\n" );
		(void) signal( SIGINT,  intr_sig );
		(void) signal( SIGQUIT, quit_sig );
		if( pid == -1 ) {
		    /* No children. */
		    loc_Perror( "wait" );
		    return errno;
		}
		switch( stat_loc & 0377 ) {
		    case 0177 : /* Child stopped.		*/
			bu_log(	"\"%s\" (%d) Child stopped.\n",
				__FILE__,
				__LINE__
				);
			return	(stat_loc >> 8) & 0377;
		    case 0 :    /* Child exited.		*/
			return	(stat_loc >> 8) & 0377;
		    default :   /* Child terminated.	*/
			bu_log(	"\"%s\" (%d) Child terminated, signal %d, status=0x%x.\n",
				__FILE__,
				__LINE__,
				stat_loc&0177,
				stat_loc
				);
			return	stat_loc&0377;
		}
	    }
    }
}

/*
 * Local Variables:
 * mode: C
 * tab-width: 8
 * c-basic-offset: 4
 * indent-tabs-mode: t
 * End:
 * ex: shiftwidth=4 tabstop=8
 */
@


14.17
log
@pass bu_exit a NULL instead of an empty string
@
text
@d24 1
a24 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/lgt/execshell.c,v 14.16 2007/11/21 19:28:07 erikgreenwald Exp $ (BRL)";
a56 1
#ifdef HAVE_STRERROR
a58 4
#else
	if( errno >= 0 && errno < sys_nerr )
		bu_log( "%s: %s\n", msg, sys_errlist[errno] );
#endif
@


14.16
log
@exit->bu_exit where applicable
@
text
@d24 1
a24 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/lgt/execshell.c,v 14.15 2007/10/26 21:51:26 brlcad Exp $ (BRL)";
d119 1
a119 1
		bu_exit( errno, "" );
@


14.15
log
@yet another surge of level 4 flawfinder string length checks. somewhere around 30-40% done.
@
text
@d24 1
a24 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/lgt/execshell.c,v 14.14 2007/09/15 16:23:07 brlcad Exp $ (BRL)";
d119 1
a119 1
		exit( errno );
@


14.14
log
@more c89 embracing.  c89 provides string.h for all of the various str*() and mem*() functions, so remove the check for its presence.  there is still likely to be work required for strict c89 conformance for the various bsd strings.h functions that may be in use.
@
text
@d24 1
a24 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/lgt/execshell.c,v 14.13 2007/07/26 01:13:55 brlcad Exp $ (BRL)";
a52 4
#define	PERROR_RET() \
	(void) sprintf( error_buf, "\"%s\" (%d)", __FILE__, __LINE__ ); \
	loc_Perror( error_buf ); \
	return	-1;
d71 6
d85 8
a92 7
{	register int child_pid;
		static char error_buf[32];
		void (*intr_sig)(), (*quit_sig)();
	if( args[0] == NULL )
		{ char	*arg_sh = getenv( "SHELL" );
		/* $SHELL, if set, DFL_SHELL otherwise.			*/
		if(	arg_sh == NULL
d94 18
a111 6
		    ||	strcmp( arg_sh, TCSH ) == 0
		    ||	strcmp( arg_sh, CSH ) == 0
			)
			arg_sh = DFL_SHELL;
		args[0] = arg_sh;
		args[1] = NULL;
d113 3
a115 58
	intr_sig = signal( SIGINT,  SIG_IGN );
	quit_sig = signal( SIGQUIT, SIG_IGN );
	switch( child_pid = fork() )
		{
		case -1 :
			PERROR_RET();
		case  0 : /* Child process - execute.		*/
			{ int	tmp_fd;
			if(	(tmp_fd =
				open( "/dev/tty", O_WRONLY )) == -1
				)
				{
				PERROR_RET();
				}
			(void) close( 2 );
			if( fcntl( tmp_fd, F_DUPFD, 2 ) == -1 )
				{
				PERROR_RET();
				}
			(void) execvp( args[0], args );
			loc_Perror( args[0] );
			exit( errno );
			}
		default :
			{	register int	pid;
				int		stat_loc;
			while(	(pid = wait( &stat_loc )) != -1
			     && pid != child_pid
				)
				;
			prnt_Event( "\n" );
			(void) signal( SIGINT,  intr_sig );
			(void) signal( SIGQUIT, quit_sig );
			if( pid == -1 )
				{ /* No children.			*/
				loc_Perror( "wait" );
				return	errno;
				}
			switch( stat_loc & 0377 )
				{
				case 0177 : /* Child stopped.		*/
					bu_log(	"\"%s\" (%d) Child stopped.\n",
						__FILE__,
						__LINE__
						);
					return	(stat_loc >> 8) & 0377;
				case 0 :    /* Child exited.		*/
					return	(stat_loc >> 8) & 0377;
				default :   /* Child terminated.	*/
					bu_log(	"\"%s\" (%d) Child terminated, signal %d, status=0x%x.\n",
						__FILE__,
						__LINE__,
						stat_loc&0177,
						stat_loc
						);
					return	stat_loc&0377;
				}
			}
d117 39
a155 1
	}
@


14.13
log
@remove ephemeral data like phone numbers and addresses, including the misleading 'source' statements on code that is continually evolving and receiving contributions from many many sources
@
text
@d24 1
a24 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/lgt/execshell.c,v 14.12 2007/01/23 01:13:33 brlcad Exp $ (BRL)";
d30 1
a30 5
#ifdef HAVE_STRING_H
#  include <string.h>
#else
#  include <strings.h>
#endif
@


14.12
log
@Sweeping license updates.  Documentation is fully relicensed to the BSD Documentation License (a minor variant of the FreeBSD Documentation License and BSD License).  All GPL code (mostly application code) is converted to the LGPL and now also specifically declares version 2.1, revoking the blank check to the FSF.  The intent of these sweeping changes are to simplify the licensing terms and increase overall flexibility of use, both externally (to users for their purposes) and internally (to allow application code to be migrated to libraries without creating GPL libraries).  As a collective work, BRL-CAD is now LGPL.
@
text
@d21 2
a22 6
	Author:		Gary S. Moss
			U. S. Army Ballistic Research Laboratory
			Aberdeen Proving Ground
			Maryland 21005-5066
			(301)278-6647 or AV-298-6647
*/
d24 1
a24 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/lgt/execshell.c,v 14.11 2007/01/20 14:36:50 brlcad Exp $ (BRL)";
@


14.11
log
@update copyright to 2007
@
text
@d8 2
a9 3
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation; either version 2 of the
 * License, or (at your option) any later version.
d14 1
a14 1
 * General Public License for more details.
d16 2
a17 2
 * You should have received a copy of the GNU General Public License
 * along with this file; see the file named COPYING for more
d28 1
a28 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/lgt/execshell.c,v 14.10 2006/04/05 19:19:14 brlcad Exp $ (BRL)";
@


14.10
log
@more header/warning cleanup from Intel compiler warnings on Altix
@
text
@d4 1
a4 1
 * Copyright (c) 2004-2006 United States Government as represented by
d29 1
a29 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/lgt/execshell.c,v 14.9 2006/01/23 07:11:02 brlcad Exp $ (BRL)";
@


14.9
log
@stdlib.h
@
text
@d29 1
a29 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/lgt/execshell.c,v 14.8 2006/01/18 06:46:15 brlcad Exp $ (BRL)";
d45 3
@


14.9.2.1
log
@update from HEAD
@
text
@d29 1
a29 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/lgt/execshell.c,v 14.9 2006/01/23 07:11:02 brlcad Exp $ (BRL)";
a44 3
#ifdef HAVE_SYS_WAIT_H
#  include <sys/wait.h>
#endif
@


14.8
log
@update copyright to 2006
@
text
@d29 1
a29 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/lgt/execshell.c,v 14.7 2005/11/04 20:53:34 brlcad Exp $ (BRL)";
d34 1
@


14.7
log
@the win32 section for _sys_errlist isn't needed as the config_win.h header takes care of it
@
text
@d4 1
a4 1
 * Copyright (C) 2004-2005 United States Government as represented by
d29 1
a29 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/lgt/execshell.c,v 14.6 2005/05/28 02:14:50 brlcad Exp $ (BRL)";
@


14.6
log
@convert WIN32 define checks to _WIN32 since the latter is one of the defaults provided by MSVC whereas the prior is not.  remove some of them related to header inclusions using HAVE_ defines instead.
@
text
@d29 1
a29 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/lgt/execshell.c,v 14.5 2005/04/27 02:24:43 brlcad Exp $ (BRL)";
a69 4
#  ifdef _WIN32
	if( errno >= 0 && errno < _sys_nerr )
		bu_log( "%s: %s\n", msg, _sys_errlist[errno] );
#  else
a71 1
#  endif
@


14.6.6.1
log
@merge changes from HEAD aka rel-7-6-4 to the rel-7-6-branch just in case someone peeks a gander or tries to continue/build the branch
@
text
@d29 1
a29 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
d70 4
d76 1
@


14.5
log
@get rid of the old STD_SIGNAL_DECLS define since an ansi compliant compiler is necessary now.  if a broken impl is found that needs to be accounted for, it can return as a proper configure check.
@
text
@d29 1
a29 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/lgt/execshell.c,v 14.4 2005/04/27 02:02:13 brlcad Exp $ (BRL)";
d70 1
a70 1
#  ifdef WIN32
@


14.4
log
@and sure enough, solaris sneaks back into the picture so it's time to refix the sys_errlist problem.  solaris wants strerror, win32 can use _sys_errlist.  these should eventually get refactored into some sort of libbu facility/macro some day.
@
text
@d29 1
a29 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/lgt/execshell.c,v 14.3 2005/01/30 20:30:42 brlcad Exp $ (BRL)";
a94 1
#if STD_SIGNAL_DECLS
a95 3
#else
		int (*intr_sig)(), (*quit_sig)();
#endif
@


14.3
log
@update copyright to 2005
@
text
@d29 1
a29 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/lgt/execshell.c,v 14.2 2004/12/21 01:23:58 morrison Exp $ (BRL)";
d70 4
d76 1
@


14.2
log
@assign copyright and GPL
@
text
@d4 2
a5 2
 * Copyright (c) 2004 United States Government as represented by the
 * U.S. Army Research Laboratory.
d29 1
a29 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/lgt/execshell.c,v 14.1 2004/11/16 19:42:13 morrison Exp $ (BRL)";
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d1 21
a21 1
/*
d29 1
a29 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/lgt/execshell.c,v 1.4 2004/09/09 02:51:07 kermit Exp $ (BRL)";
@


1.4
log
@Updated to use strerror to quell deprecation warning.
@
text
@d9 1
a9 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/lgt/execshell.c,v 1.3 2004/08/02 23:01:48 morrison Exp $ (BRL)";
d147 10
@


1.3
log
@replace the wrapped config.h block with common.h
@
text
@d9 1
a9 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/lgt/execshell.c,v 1.2 2004/06/08 22:04:17 morrison Exp $ (BRL)";
d14 5
a18 2


d29 1
d34 1
d46 4
d52 1
@


1.2
log
@obliterate externs.h
@
text
@d9 1
a9 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
d12 1
a12 3
#ifdef HAVE_CONFIG_H
# include "config.h"
#endif
@


1.1
log
@Vast reorganization begins.  Sources moved from top-level directories into src/.
@
text
@d9 1
a9 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/lgt/execshell.c,v 11.7 2004/05/10 15:30:43 erikg Exp $ (BRL)";
a24 1
#include "externs.h"
@

