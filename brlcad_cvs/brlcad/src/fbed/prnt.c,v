head	14.13;
access;
symbols
	rel-7-10-4:14.10
	STABLE:14.10.0.2
	stable-branch:14.3
	rel-7-10-2:14.10
	rel-7-10-0:14.9
	rel-7-8-4:14.6
	rel-7-8-2:14.6
	rel-7-8-0:14.6
	trimnurbs-branch:14.6.0.2
	help:14.6
	temp_tag:14.5
	bobWinPort-20051223-freeze:14.3
	postmerge-20051223-bobWinPort:14.5
	premerge-20051223-bobWinPort:14.5
	rel-7-6-6:14.5
	rel-7-6-4:14.5
	rel-7-6-2:14.3
	rel-7-6-branch:14.3.0.6
	rel-7-6-0:14.3
	rel-7-4-2:14.3
	rel-7-4-branch:14.3.0.4
	bobWinPort:14.3.0.2
	rel-7-4-0:14.3
	rel-7-2-6:14.3
	rel-7-2-4:14.3
	rel-7-2-2:14.3
	rel-7-2-0:14.3
	rel-7-0-4:14.2
	rel-7-0-2:14.2
	rel-7-0-1:14.2
	opensource-post:14.2
	opensource-pre:1.4
	rel-7-0-branch:1.4.0.2
	rel-7-0:1.4;
locks; strict;
comment	@ * @;


14.13
date	2007.12.06.17.53.05;	author erikgreenwald;	state Exp;
branches;
next	14.12;

14.12
date	2007.12.03.22.57.58;	author brlcad;	state Exp;
branches;
next	14.11;

14.11
date	2007.09.15.16.23.06;	author brlcad;	state Exp;
branches;
next	14.10;

14.10
date	2007.07.26.01.13.54;	author brlcad;	state Exp;
branches;
next	14.9;

14.9
date	2007.01.27.01.41.34;	author brlcad;	state Exp;
branches;
next	14.8;

14.8
date	2007.01.23.01.13.32;	author brlcad;	state Exp;
branches;
next	14.7;

14.7
date	2007.01.20.14.36.49;	author brlcad;	state Exp;
branches;
next	14.6;

14.6
date	2006.01.18.06.46.15;	author brlcad;	state Exp;
branches;
next	14.5;

14.5
date	2005.10.31.06.57.14;	author brlcad;	state Exp;
branches;
next	14.4;

14.4
date	2005.10.23.04.44.30;	author brlcad;	state Exp;
branches;
next	14.3;

14.3
date	2005.01.30.20.30.37;	author brlcad;	state Exp;
branches
	14.3.6.1;
next	14.2;

14.2
date	2004.12.20.19.33.55;	author morrison;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.13;	author morrison;	state Exp;
branches;
next	1.4;

1.4
date	2004.09.03.23.30.56;	author morrison;	state Exp;
branches;
next	1.3;

1.3
date	2004.08.02.23.01.47;	author morrison;	state Exp;
branches;
next	1.2;

1.2
date	2004.06.08.22.04.14;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.20.15.19.07;	author morrison;	state Exp;
branches;
next	;

14.3.6.1
date	2005.11.13.13.46.14;	author brlcad;	state Exp;
branches;
next	;


desc
@@


14.13
log
@change fb_log definition to match the prototype in fb.h
@
text
@/*                          P R N T . C
 * BRL-CAD
 *
 * Copyright (c) 2004-2007 United States Government as represented by
 * the U.S. Army Research Laboratory.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * version 2.1 as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this file; see the file named COPYING for more
 * information.
 */
/** @@file prnt.c
 *	Author:		Gary S. Moss
 */
#include "common.h"

#include <stdio.h>
#include <string.h>
#include <stdarg.h>

#include "machine.h"
#include "fb.h"

#include "./std.h"
#include "./ascii.h"
#include "./font.h"
#include "./try.h"
#include "./extern.h"


#define PIXEL_MOVE()		MvCursor( 7, 1 )
#define PAINT_MOVE()		MvCursor( 26, 1 )
#define STRIDE_MOVE()		MvCursor( 46, 1 )
#define BRUSH_SIZE_MOVE()	MvCursor( 63, 1 )
#define CURSOR_POS_MOVE()	MvCursor( 15, 2 )
#define PROMPT_MOVE()		MvCursor( 1, PROMPT_LINE )
#define ERROR_MOVE()		MvCursor( 1, PROMPT_LINE + 1 )
#define SCROLL_PR_MOVE()	MvCursor( 1, PROMPT_LINE - 1 )
#define SCROLL_DL_MOVE()	MvCursor( 1, BOTTOM_STATUS_AREA + 1 )

static char *usage[] =
	{
	"",
	"fbed (2.1)",
	"",
	"Usage: fbed [-hp]",
	"",
	"options : -h   use high resolution display",
	"          -p   open the GTCO bit pad",
	0
	};

void init_Status(void);
void prnt_Status(void), prnt_Usage(void);
void prnt_Prompt(char *msg);
void prnt_Macro(register char *bufp);
void prnt_Rectangle(char *str, register Rectangle *rectp);
/**void prnt_FBC();**/

/*	p r n t _ S t a t u s ( ) */
void
prnt_Status(void)
{	RGBpixel pixel;
	if( ! tty )
		return;
	fb_Get_Pixel( pixel );
	PIXEL_MOVE();
	(void) printf( "%3d %3d %3d", pixel[RED], pixel[GRN], pixel[BLU] );
	PAINT_MOVE();
	(void) printf( "%3d %3d %3d", paint[RED], paint[GRN], paint[BLU] );
	STRIDE_MOVE();
	(void) printf( "%4d", gain );
	BRUSH_SIZE_MOVE();
	(void) printf( "%4d", brush_sz );
	CURSOR_POS_MOVE();
	(void) SetStandout();
	(void) printf( " line [%4d] column [%4d] ", cursor_pos.p_y, cursor_pos.p_x );
	(void) ClrStandout();
	PROMPT_MOVE();
	(void) fflush( stdout );
	return;
	}

static char *screen_template[] = {
/*        1         2         3         4         5         6         7         8
012345678901234567890123456789012345678901234567890123456789012345678901234567890
 */
"Pixel[           ] Paint[           ] Stride[    ] Brush Size[    ]",
"-- FBED 2.1 -------------------------------------------------------------------",
0
};

/*	i n i t _ S t a t u s ( ) */
void
init_Status(void)
{	register char **p = screen_template;
		register int template_co;
		char buf[MAX_LN];
		extern int CO;
	template_co = Min( CO, MAX_LN );
	if( ! tty )
		return;
	(void) ClrText();
	(void) HmCursor();
	while( *(p+1) )
		{
		(void) strncpy( buf, *p++, template_co );
		buf[template_co-1] = '\0';
		(void) printf( "%s\n\r", buf );
		}
	/* Last line is reverse-video if possible. */
	(void) SetStandout();
	(void) strncpy( buf, *p++, template_co );
	buf[template_co-1] = '\0';
	(void) printf( "%s\n\r", buf );
	(void) ClrStandout();
	(void) fflush( stdout );
	return;
	}

/*	p r n t _ U s a g e ( )
	Print usage message.
 */
void
prnt_Usage(void)
{	register char **p = usage;
	while( *p )
		(void) fprintf( stderr, "%s\n", *p++ );
	return;
	}


/*	p r n t _ P i x e l ( ) */
void
prnt_Pixel(char *msg, RGBpixel (*pixelp))
{
	prnt_Scroll(	"%s {%03d,%03d,%03d}",
			msg,
			pixelp[RED],
			pixelp[GRN],
			pixelp[BLU]
			);
	return;
	}

#define Va_Decl( _func )	_func(char *fmt, ...)
#define Va_Start()		va_list	ap; va_start( ap, fmt )
#define Va_End()		va_end( ap )
#define Va_Print( _p )		(void) vfprintf( _p, fmt, ap )

/* VARARGS */
void
fb_log (const char *fmt, ...)	/* de-macro'd due to fmt now being const */
{
	extern char *DL, *CS;
	Va_Start();
	if( tty )
		{
		if( DL != NULL )
			{
			SCROLL_DL_MOVE();
			DeleteLn();
			SCROLL_PR_MOVE();
			ClrEOL();
			Va_Print( stdout );
			}
		else
		if( CS != NULL )
			{ /* This scrolling region stuff doesn't work
				correctly (XXX). */
			SetScrlReg( TOP_SCROLL_WIN, PROMPT_LINE - 1 );
			SCROLL_PR_MOVE();
			ClrEOL();
			Va_Print( stdout );
			ResetScrlReg();
			}
		else
			Va_Print( stdout );
		}
	else
		{
		Va_Print( stdout );
		(void) printf( "\n" );
		}
	Va_End();
	(void) fflush( stdout );
	return;
	}

/* VARARGS */
void
Va_Decl( prnt_Scroll )
	{	extern char *DL, *CS;
	Va_Start();
	if( tty )
		{
		if( DL != NULL )
			{
			SCROLL_DL_MOVE();
			DeleteLn();
			SCROLL_PR_MOVE();
			ClrEOL();
			Va_Print( stdout );
			}
		else
		if( CS != NULL )
			{ /* This scrolling region stuff doesn't work
				correctly (XXX). */
			SetScrlReg( TOP_SCROLL_WIN, PROMPT_LINE - 1 );
			SCROLL_PR_MOVE();
			ClrEOL();
			Va_Print( stdout );
			ResetScrlReg();
			}
		else
			Va_Print( stdout );
		}
	else
		{
		Va_Print( stdout );
		(void) printf( "\n" );
		}
	Va_End();
	return;
	}

/*	p r n t _ D e b u g ( ) */
/* VARARGS */
void
Va_Decl( prnt_Debug )
	{
	Va_Start();
	if( tty )
		{
		ERROR_MOVE();
		ClrEOL();
		SetStandout();
		Va_Print( stdout );
		ClrStandout();
		(void) fflush( stdout );
		}
	else
		{
		Va_Print( stderr );
		(void) fprintf( stderr, "\n" );
		}
	Va_End();
	return;
	}

/* VARARGS */
void
Va_Decl( prnt_Event )
	{
	Va_Start();
	if( tty )
		{
		ERROR_MOVE();
		ClrEOL();
		SetStandout();
		Va_Print( stdout );
		ClrStandout();
		(void) fflush( stdout );
		}
	else
		{
		Va_Print( stderr );
		(void) fprintf( stderr, "\n" );
		}
	Va_End();
	return;
	}

#ifdef never
void
prnt_FBC()
	{	extern struct ik_fbc	ikfbcmem;
	prnt_Scroll(	"viewport:\t\tx [%4d]\ty [%4d]\n",
			ikfbcmem.fbc_xviewport,
			ikfbcmem.fbc_yviewport
			);
	prnt_Scroll(	"view size:\t\tx [%4d]\ty [%4d]\n",
			ikfbcmem.fbc_xsizeview,
			ikfbcmem.fbc_ysizeview
			);
	prnt_Scroll(	"window offsets:\t\tx [%4d]\ty [%4d]\n",
			ikfbcmem.fbc_xwindow,
			ikfbcmem.fbc_ywindow
			);
	prnt_Scroll(	"zoom factor:\t\tx [%4d]\ty [%4d]\n",
			ikfbcmem.fbc_xzoom,
			ikfbcmem.fbc_yzoom
			);
	prnt_Scroll(	"display rate cntrl:\th [%4d]\tv [%4d]\n",
			ikfbcmem.fbc_horiztime,
			ikfbcmem.fbc_nlines
			);
	prnt_Scroll(	"video control:\t\tL [%4d]\tH [%4d]\n",
			ikfbcmem.fbc_Lcontrol,
			ikfbcmem.fbc_Hcontrol
			);
	prnt_Scroll(	"cursor position:\tx [%4d]\ty [%4d]\n",
			ikfbcmem.fbc_xcursor,
			ikfbcmem.fbc_ycursor
			);
	return;
	}
#endif

void
prnt_Prompt(char *msg)
{
	PROMPT_MOVE();
	(void) ClrEOL();
	(void) printf( "%s", msg );
	(void) fflush( stdout );
	return;
	}

void
prnt_Macro(register char *bufp)
{	char prnt_buf[BUFSIZ];
		register char *p;
	for( p = prnt_buf; *bufp != '\0'; bufp++ )
		{
		switch( *bufp )
			{
		case ESC :
			*p++ = 'M';
			*p++ = '-';
			break;
		case CR :
			*p++ = '\\';
			*p++ = 'r';
			break;
		case LF :
			*p++ = '\\';
			*p++ = 'n';
			break;
		default :
			*p++ = *bufp;
			break;
			}
		}
	*p = NUL;
	prnt_Scroll( "Macro buffer \"%s\".", prnt_buf );
	return;
	}

void
prnt_Rectangle(char *str, register Rectangle *rectp)
{
	prnt_Scroll(	"%s {<%d,%d>,<%d,%d>}\n",
			str,
			rectp->r_origin.p_x,
			rectp->r_origin.p_y,
			rectp->r_corner.p_x,
			rectp->r_corner.p_y
			);
	(void) fflush( stdout );
	return;
	}

/*
 * Local Variables:
 * mode: C
 * tab-width: 8
 * c-basic-offset: 4
 * indent-tabs-mode: t
 * End:
 * ex: shiftwidth=4 tabstop=8
 */
@


14.12
log
@c89 simplification.  assume stdarg is a given.
@
text
@d161 3
a163 2
Va_Decl( fb_log )
	{	extern char *DL, *CS;
@


14.11
log
@more c89 embracing.  c89 provides string.h for all of the various str*() and mem*() functions, so remove the check for its presence.  there is still likely to be work required for strict c89 conformance for the various bsd strings.h functions that may be in use.
@
text
@d27 1
a27 6

#ifdef HAVE_STDARG_H
#  include <stdarg.h>
#else
#  include <varargs.h>
#endif
a153 1
#if defined(HAVE_STDARG_H)
d158 1
a158 13
#else
#if !defined(HAVE_VARARGS_H)
#define Va_Decl( _func )	_func(fmt, a,b,c,d,e,f,g,h,i) char *fmt;
#define Va_Start()
#define Va_End()
#define Va_Print( _p )		(void) fprintf( _p, fmt, a,b,c,d,e,f,g,h,i )
#else
#define Va_Decl( _func )	_func(fmt, va_alist) char *fmt; va_dcl
#define Va_Start()		va_list	ap; va_start( ap )
#define Va_End()		va_end( ap )
#define Va_Print( _p )		(void) _doprnt( fmt, ap, _p )
#endif
#endif
@


14.10
log
@remove ephemeral data like phone numbers and addresses, including the misleading 'source' statements on code that is continually evolving and receiving contributions from many many sources
@
text
@d26 2
a27 5
#ifdef HAVE_STRING_H
#  include <string.h>
#else
#  include <strings.h>
#endif
@


14.9
log
@ws. lots and lots of ws.  see sh/ws.sh for details (cases 'abcdeg').
@
text
@d21 2
a22 6
	Author:		Gary S. Moss
			U. S. Army Ballistic Research Laboratory
			Aberdeen Proving Ground
			Maryland 21005-5066
			(301)278-6651 or DSN 298-6651
*/
@


14.8
log
@Sweeping license updates.  Documentation is fully relicensed to the BSD Documentation License (a minor variant of the FreeBSD Documentation License and BSD License).  All GPL code (mostly application code) is converted to the LGPL and now also specifically declares version 2.1, revoking the blank check to the FSF.  The intent of these sweeping changes are to simplify the licensing terms and increase overall flexibility of use, both externally (to users for their purposes) and internally (to allow application code to be migrated to libraries without creating GPL libraries).  As a collective work, BRL-CAD is now LGPL.
@
text
@d277 1
a277 1
	 	(void) fprintf( stderr, "\n" );
@


14.7
log
@update copyright to 2007
@
text
@d8 2
a9 3
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation; either version 2 of the
 * License, or (at your option) any later version.
d14 1
a14 1
 * General Public License for more details.
d16 2
a17 2
 * You should have received a copy of the GNU General Public License
 * along with this file; see the file named COPYING for more
@


14.6
log
@update copyright to 2006
@
text
@d4 1
a4 1
 * Copyright (c) 2004-2006 United States Government as represented by
@


14.5
log
@remove the unnecessary prnt_Event declaration, can conflict anyways
@
text
@d4 1
a4 1
 * Copyright (C) 2004-2005 United States Government as represented by
@


14.4
log
@trailing ws
@
text
@a27 4
#ifndef lint
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/fbed/prnt.c,v 14.3 2005/01/30 20:30:37 brlcad Exp $ (BRL)";
#endif

a29 2


d32 1
a32 1
#include <string.h>
d34 1
a34 1
#include <strings.h>
d37 1
a37 1
#include <stdarg.h>
d39 1
a39 1
#include <varargs.h>
d51 1
a75 5
#if __STDC__
void prnt_Event(char *fmt, ...);
#else
void prnt_Event();
#endif
@


14.3
log
@update copyright to 2005
@
text
@d29 1
a29 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/fbed/prnt.c,v 14.2 2004/12/20 19:33:55 morrison Exp $ (BRL)";
d114 1
a114 1
	
d122 1
a122 1
};		
d263 1
a263 1
		Va_Print( stdout );	
@


14.3.6.1
log
@merge changes from HEAD aka rel-7-6-4 to the rel-7-6-branch just in case someone peeks a gander or tries to continue/build the branch
@
text
@d28 4
d34 2
d38 1
a38 1
#  include <string.h>
d40 1
a40 1
#  include <strings.h>
d43 1
a43 1
#  include <stdarg.h>
d45 1
a45 1
#  include <varargs.h>
a56 1

d81 5
d114 1
a114 1

d122 1
a122 1
};
d263 1
a263 1
		Va_Print( stdout );
@


14.2
log
@assign copyright and GPL license
@
text
@d4 2
a5 2
 * Copyright (c) 2004 United States Government as represented by the
 * U.S. Army Research Laboratory.
d29 1
a29 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/fbed/prnt.c,v 14.1 2004/11/16 19:42:13 morrison Exp $ (BRL)";
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d1 21
a21 1
/*
d29 1
a29 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/fbed/prnt.c,v 1.4 2004/09/03 23:30:56 morrison Exp $ (BRL)";
@


1.4
log
@USE_STRING_H is no more.. it's HAVE_STRING_H
@
text
@d9 1
a9 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/fbed/prnt.c,v 1.3 2004/08/02 23:01:47 morrison Exp $ (BRL)";
d386 10
@


1.3
log
@replace the wrapped config.h block with common.h
@
text
@d9 1
a9 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/fbed/prnt.c,v 1.2 2004/06/08 22:04:14 morrison Exp $ (BRL)";
d17 1
a17 1
#ifdef USE_STRING_H
@


1.2
log
@obliterate externs.h
@
text
@d9 1
a9 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
d12 1
a12 3
#ifdef HAVE_CONFIG_H
# include "config.h"
#endif
@


1.1
log
@Vast reorganization begins.  Sources moved from top-level directories into src/.
@
text
@d9 1
a9 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/fbed/prnt.c,v 11.8 2004/05/10 15:30:42 erikg Exp $ (BRL)";
a30 1
#include "externs.h"
@

