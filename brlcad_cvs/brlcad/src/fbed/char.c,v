head	14.10;
access;
symbols
	rel-7-10-4:14.9
	STABLE:14.9.0.2
	stable-branch:14.3
	rel-7-10-2:14.9
	rel-7-10-0:14.8
	rel-7-8-4:14.5
	rel-7-8-2:14.5
	rel-7-8-0:14.5
	trimnurbs-branch:14.5.0.2
	help:14.5
	temp_tag:14.4
	bobWinPort-20051223-freeze:14.3
	postmerge-20051223-bobWinPort:14.4
	premerge-20051223-bobWinPort:14.4
	rel-7-6-6:14.4
	rel-7-6-4:14.4
	rel-7-6-2:14.3
	rel-7-6-branch:14.3.0.6
	rel-7-6-0:14.3
	rel-7-4-2:14.3
	rel-7-4-branch:14.3.0.4
	bobWinPort:14.3.0.2
	rel-7-4-0:14.3
	rel-7-2-6:14.3
	rel-7-2-4:14.3
	rel-7-2-2:14.3
	rel-7-2-0:14.3
	rel-7-0-4:14.2
	rel-7-0-2:14.2
	rel-7-0-1:14.2
	opensource-post:14.2
	opensource-pre:1.4
	rel-7-0-branch:1.4.0.2
	rel-7-0:1.4;
locks; strict;
comment	@ * @;


14.10
date	2007.09.15.16.23.06;	author brlcad;	state Exp;
branches;
next	14.9;

14.9
date	2007.07.26.01.13.53;	author brlcad;	state Exp;
branches;
next	14.8;

14.8
date	2007.01.27.01.41.34;	author brlcad;	state Exp;
branches;
next	14.7;

14.7
date	2007.01.23.01.13.32;	author brlcad;	state Exp;
branches;
next	14.6;

14.6
date	2007.01.20.14.36.49;	author brlcad;	state Exp;
branches;
next	14.5;

14.5
date	2006.01.18.06.46.15;	author brlcad;	state Exp;
branches;
next	14.4;

14.4
date	2005.10.23.04.44.30;	author brlcad;	state Exp;
branches;
next	14.3;

14.3
date	2005.01.30.20.30.37;	author brlcad;	state Exp;
branches
	14.3.6.1;
next	14.2;

14.2
date	2004.12.20.19.33.55;	author morrison;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.13;	author morrison;	state Exp;
branches;
next	1.4;

1.4
date	2004.09.03.23.30.56;	author morrison;	state Exp;
branches;
next	1.3;

1.3
date	2004.08.02.23.01.47;	author morrison;	state Exp;
branches;
next	1.2;

1.2
date	2004.06.08.22.04.13;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.20.15.19.06;	author morrison;	state Exp;
branches;
next	;

14.3.6.1
date	2005.11.13.13.46.14;	author brlcad;	state Exp;
branches;
next	;


desc
@@


14.10
log
@more c89 embracing.  c89 provides string.h for all of the various str*() and mem*() functions, so remove the check for its presence.  there is still likely to be work required for strict c89 conformance for the various bsd strings.h functions that may be in use.
@
text
@/*                          C H A R . C
 * BRL-CAD
 *
 * Copyright (c) 2004-2007 United States Government as represented by
 * the U.S. Army Research Laboratory.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * version 2.1 as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this file; see the file named COPYING for more
 * information.
 */
/** @@file char.c
 *	Author:		Gary S. Moss
 */
#ifndef lint
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/fbed/char.c,v 14.9 2007/07/26 01:13:53 brlcad Exp $ (BRL)";
#endif

#include "common.h"

#include <stdio.h>
#include <string.h>

#include "machine.h"
#include "fb.h"

#include "./std.h"
#include "./font.h"
#include "./ascii.h"
#include "./try.h"
#include "./extern.h"

#define DEBUG_STRINGS	false

/*
	char.c - routines for displaying a string on a frame buffer.
 */
extern void fudge_Pixel();
extern void fill_buf(register int wid, register int *buf), clear_buf(int wid, register int *buf);
extern void squash(register int *buf0, register int *buf1, register int *buf2, register float *ret_buf, register int n);

STATIC void do_Char(int c, int xpos, int ypos, int odd);
void menu_char(int x_adjust, int menu_wid, int odd, register unsigned char *menu_border);

void
do_line(int xpos, int ypos, register char *line, RGBpixel (*menu_border))


		       /* Menu outline color, if NULL, do filtering. */
	{	register int    currx;
		register int    char_count, char_id;
		register int len = strlen( line );
#if DEBUG_STRINGS
	fb_log( "do_line: xpos=%d ypos=%d line=\"%s\" menu_border=0x%x\n",
		xpos, ypos, line, (int) menu_border );
#endif
	if( ffdes == NULL )
		{
		fb_log( "ERROR: must read font first.\n" );
		return;
		}
	currx = xpos;

	for( char_count = 0; char_count < len; char_count++ )
		{
		char_id = (int) line[char_count] & 0377;

		/* locate the bitmap for the character in the file */
		if( fseek( ffdes, (long)(SWABV(dir[char_id].addr)+offset), 0 )
			== EOF
			)
			{
			fb_log( "fseek() to %ld failed.\n",
				(long)(SWABV(dir[char_id].addr) + offset)
				);
			return;
			}

		/* Read in the dimensions for the character */
		width = SignedChar(dir[char_id].right) +
				SignedChar(dir[char_id].left);
		height = SignedChar(dir[char_id].up) +
				SignedChar(dir[char_id].down);

#if DEBUG_STRINGS
		fb_log( "do_line: right=%d left=%d up=%d down=%d\n",
			SignedChar(dir[char_id].right),
			SignedChar(dir[char_id].left),
			SignedChar(dir[char_id].up),
			SignedChar(dir[char_id].down)
			);
		fb_log( "do_line: width=%d height=%d\n", width, height );
#endif

		if( currx + width > fb_getwidth(fbp) - 1 )
			break;		/* won't fit on screen */

		if( menu_border == (RGBpixel *)RGBPIXEL_NULL )
			do_Char( char_id, currx, ypos,
				SignedChar(dir[char_id].down)%2 );
		else
			menu_char(	currx,
					ypos,
					SignedChar(dir[char_id].down) % 2,
					(unsigned char*)menu_border
					);
		currx += SWABV(dir[char_id].width) + 2;
		}
	return;
	}

/* Shared by do_Char() and menu_char(). */
static int filterbuf[FONTBUFSZ][FONTBUFSZ];

STATIC void
do_Char(int c, int xpos, int ypos, int odd)
{	register int    i, j;
		int base;
		int     	totwid = width;
		int     	down;
		static float	resbuf[FONTBUFSZ];
		static RGBpixel fbline[FONTBUFSZ];
#if DEBUG_STRINGS
	fb_log( "do_Char: c='%c' xpos=%d ypos=%d odd=%d\n",
		c, xpos, ypos, odd );
#endif

	/* read in character bit map, with two blank lines on each end */
	for (i = 0; i < 2; i++)
		clear_buf (totwid, filterbuf[i]);
	for (i = height + 1; i >= 2; i--)
		fill_buf (width, filterbuf[i]);
	for (i = height + 2; i < height + 4; i++)
		clear_buf (totwid, filterbuf[i]);

	(void)SignedChar( dir[c].up );
	down = SignedChar( dir[c].down );

	/* Initial base line for filtering depends on odd flag. */
	base = (odd ? 1 : 2);


	/* Produce a RGBpixel buffer from a description of the character and
		the read back data from the frame buffer for anti-aliasing.
	 */
	for (i = height + base; i >= base; i--)
		{
		squash(	filterbuf[i - 1],	/* filter info */
			filterbuf[i],
			filterbuf[i + 1],
			resbuf,
			totwid + 4
			);
		fb_read( fbp, xpos, ypos - down + i, (unsigned char *)fbline, totwid+3);
		for (j = 0; j < (totwid + 3) - 1; j++)
			{	register int tmp;
			/* EDITOR'S NOTE : do not rearrange this code,
				the SUN compiler can't handle more
				complex expressions. */
			tmp = fbline[j][RED] & 0377;
			fbline[j][RED] =
				(int)(paint[RED]*resbuf[j]+(1-resbuf[j])*tmp);
			fbline[j][RED] &= 0377;
			tmp = fbline[j][GRN] & 0377;
			fbline[j][GRN] =
				(int)(paint[GRN]*resbuf[j]+(1-resbuf[j])*tmp);
			fbline[j][GRN] &= 0377;
			tmp = fbline[j][BLU] & 0377;
			fbline[j][BLU] =
				(int)(paint[BLU]*resbuf[j]+(1-resbuf[j])*tmp);
			fbline[j][BLU] &= 0377;
			}
		fb_write( fbp, xpos, ypos - down + i, (unsigned char *)fbline,  totwid+3 );
		}
	return;
	}

void
menu_char(int x_adjust, int menu_wid, int odd, register unsigned char *menu_border)
{	register int    i, j, k;
		int embold = 1;
		int base;
		int totwid = width;
	/* Read in the character bit map, with two blank lines on each end. */
	for (i = 0; i < 2; i++)
		clear_buf (totwid, filterbuf[i]);
	for (i = height + 1; i >= 2; i--)
		fill_buf (width, filterbuf[i]);
	for (i = height + 2; i < height + 4; i++)
		clear_buf (totwid, filterbuf[i]);

	for (k=0; k<embold; k++)
		for (i=2; i<height+2; i++)
			for (j=totwid+1; j>=2; j--)
				filterbuf[i][j+1] |= filterbuf[i][j];

	/* Initial base line for filtering depends on odd flag. */
	base = (odd ? 1 : 2);

	/* Change bits in menu that correspond to character bitmap. */
	for (i = height + base, k = 0; i >= base; i--, k++)
		{	register RGBpixel *menu;
		menu = menu_addr + k * menu_wid + x_adjust;
		for (j = 0; j < (totwid + 3) - 1; j++, menu++ )
			if( filterbuf[i][j] )
				{
				COPYRGB(*menu, menu_border);
				}
		}
	return;
	}

/*	b i t x ( )
	Extract a bit field from a bit string.
 */
int
bitx(register char *bitstring, register int posn)
{
#if 0 /* Was #ifdef vax , but doesn't work on 4.3BSD */
	register field;

	asm("extzv	r10,$1,(r11),r8");
	return field;
#else
	for( ; posn >= 8; posn -= 8, bitstring++ )
		;
#if defined( CANT_DO_ZERO_SHIFT )
	if( posn == 0 )
		return (int)(*bitstring) & 1;
	else
#endif
	return (int)(*bitstring) & (1<<posn);
#endif
	}

/*
 * Local Variables:
 * mode: C
 * tab-width: 8
 * c-basic-offset: 4
 * indent-tabs-mode: t
 * End:
 * ex: shiftwidth=4 tabstop=8
 */
@


14.9
log
@remove ephemeral data like phone numbers and addresses, including the misleading 'source' statements on code that is continually evolving and receiving contributions from many many sources
@
text
@d24 1
a24 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/fbed/char.c,v 14.8 2007/01/27 01:41:34 brlcad Exp $ (BRL)";
a28 1

a29 2

#ifdef HAVE_STRING_H
a30 3
#else
#include <strings.h>
#endif
@


14.8
log
@ws. lots and lots of ws.  see sh/ws.sh for details (cases 'abcdeg').
@
text
@d21 2
a22 6
	Author:		Gary S. Moss
			U. S. Army Ballistic Research Laboratory
			Aberdeen Proving Ground
			Maryland 21005-5066
			(301)278-6651 or DSN 298-6651
*/
d24 1
a24 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/fbed/char.c,v 14.7 2007/01/23 01:13:32 brlcad Exp $ (BRL)";
@


14.7
log
@Sweeping license updates.  Documentation is fully relicensed to the BSD Documentation License (a minor variant of the FreeBSD Documentation License and BSD License).  All GPL code (mostly application code) is converted to the LGPL and now also specifically declares version 2.1, revoking the blank check to the FSF.  The intent of these sweeping changes are to simplify the licensing terms and increase overall flexibility of use, both externally (to users for their purposes) and internally (to allow application code to be migrated to libraries without creating GPL libraries).  As a collective work, BRL-CAD is now LGPL.
@
text
@d28 1
a28 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/fbed/char.c,v 14.6 2007/01/20 14:36:49 brlcad Exp $ (BRL)";
a33 1

d67 1
a67 1
                       /* Menu outline color, if NULL, do filtering. */
d126 1
a126 1
    		}
d162 1
a162 1
	 	the read back data from the frame buffer for anti-aliasing.
d213 1
a213 1
		  		filterbuf[i][j+1] |= filterbuf[i][j];
d238 1
a238 1
   	register field;
d240 1
a240 1
   	asm("extzv	r10,$1,(r11),r8");
@


14.6
log
@update copyright to 2007
@
text
@d8 2
a9 3
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation; either version 2 of the
 * License, or (at your option) any later version.
d14 1
a14 1
 * General Public License for more details.
d16 2
a17 2
 * You should have received a copy of the GNU General Public License
 * along with this file; see the file named COPYING for more
d28 1
a28 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/fbed/char.c,v 14.5 2006/01/18 06:46:15 brlcad Exp $ (BRL)";
@


14.5
log
@update copyright to 2006
@
text
@d4 1
a4 1
 * Copyright (c) 2004-2006 United States Government as represented by
d29 1
a29 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/fbed/char.c,v 14.4 2005/10/23 04:44:30 brlcad Exp $ (BRL)";
@


14.4
log
@trailing ws
@
text
@d4 1
a4 1
 * Copyright (C) 2004-2005 United States Government as represented by
d29 1
a29 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/fbed/char.c,v 14.3 2005/01/30 20:30:37 brlcad Exp $ (BRL)";
@


14.3
log
@update copyright to 2005
@
text
@d29 1
a29 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/fbed/char.c,v 14.2 2004/12/20 19:33:55 morrison Exp $ (BRL)";
d55 1
a55 1
/* 
d67 2
a68 2
               
                    
d216 1
a216 1
 
@


14.3.6.1
log
@merge changes from HEAD aka rel-7-6-4 to the rel-7-6-branch just in case someone peeks a gander or tries to continue/build the branch
@
text
@d29 1
a29 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
d55 1
a55 1
/*
d67 2
a68 2


d216 1
a216 1

@


14.2
log
@assign copyright and GPL license
@
text
@d4 2
a5 2
 * Copyright (c) 2004 United States Government as represented by the
 * U.S. Army Research Laboratory.
d29 1
a29 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/fbed/char.c,v 14.1 2004/11/16 19:42:13 morrison Exp $ (BRL)";
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d1 21
a21 1
/*
d29 1
a29 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/fbed/char.c,v 1.4 2004/09/03 23:30:56 morrison Exp $ (BRL)";
@


1.4
log
@USE_STRING_H is no more.. it's HAVE_STRING_H
@
text
@d9 1
a9 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/fbed/char.c,v 1.3 2004/08/02 23:01:47 morrison Exp $ (BRL)";
d235 10
@


1.3
log
@replace the wrapped config.h block with common.h
@
text
@d9 1
a9 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/fbed/char.c,v 1.2 2004/06/08 22:04:13 morrison Exp $ (BRL)";
d18 1
a18 1
#ifdef USE_STRING_H
@


1.2
log
@obliterate externs.h
@
text
@d9 1
a9 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
d12 1
a12 3
#ifdef HAVE_CONFIG_H
# include "config.h"
#endif
@


1.1
log
@Vast reorganization begins.  Sources moved from top-level directories into src/.
@
text
@d9 1
a9 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/fbed/char.c,v 11.8 2004/05/10 15:30:42 erikg Exp $ (BRL)";
a26 1
#include "externs.h"
@

