head	14.10;
access;
symbols
	rel-7-10-4:14.10
	STABLE:14.10.0.2
	stable-branch:14.1
	rel-7-10-2:14.10
	rel-7-10-0:14.10
	rel-7-8-4:14.7
	rel-7-8-2:14.7
	rel-7-8-0:14.7
	trimnurbs-branch:14.7.0.2
	help:14.7
	temp_tag:14.5
	bobWinPort-20051223-freeze:14.2
	postmerge-20051223-bobWinPort:14.5
	premerge-20051223-bobWinPort:14.5
	rel-7-6-6:14.5
	rel-7-6-4:14.5
	rel-7-6-2:14.2
	rel-7-6-branch:14.2.0.6
	rel-7-6-0:14.2
	rel-7-4-2:14.2
	rel-7-4-branch:14.2.0.4
	bobWinPort:14.2.0.2
	rel-7-4-0:14.2
	rel-7-2-6:14.2
	rel-7-2-4:14.2
	rel-7-2-2:14.1
	rel-7-2-0:14.1
	rel-7-0-4:14.1
	rel-7-0-2:14.1
	rel-7-0-1:14.1
	opensource-post:14.1
	opensource-pre:1.1
	rel-7-0-branch:1.1.0.2
	rel-7-0:1.1;
locks; strict;
comment	@.\" @;


14.10
date	2007.01.27.01.41.34;	author brlcad;	state Exp;
branches;
next	14.9;

14.9
date	2007.01.23.01.13.32;	author brlcad;	state Exp;
branches;
next	14.8;

14.8
date	2007.01.20.14.36.49;	author brlcad;	state Exp;
branches;
next	14.7;

14.7
date	2006.01.18.06.46.15;	author brlcad;	state Exp;
branches;
next	14.6;

14.6
date	2006.01.17.05.54.48;	author brlcad;	state Exp;
branches;
next	14.5;

14.5
date	2005.10.23.04.44.30;	author brlcad;	state Exp;
branches;
next	14.4;

14.4
date	2005.09.09.04.17.38;	author brlcad;	state Exp;
branches;
next	14.3;

14.3
date	2005.09.09.03.29.35;	author brlcad;	state Exp;
branches;
next	14.2;

14.2
date	2005.05.02.01.58.26;	author brlcad;	state Exp;
branches
	14.2.6.1;
next	14.1;

14.1
date	2004.11.16.19.42.13;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.20.15.19.06;	author morrison;	state Exp;
branches;
next	;

14.2.6.1
date	2005.11.13.13.46.14;	author brlcad;	state Exp;
branches;
next	;


desc
@@


14.10
log
@ws. lots and lots of ws.  see sh/ws.sh for details (cases 'abcdeg').
@
text
@.TH FBED 1 BRL-CAD
.\"                         F B E D . 1
.\" BRL-CAD
.\"
.\" Copyright (c) 2005-2007 United States Government as represented by
.\" the U.S. Army Research Laboratory.
.\"
.\" Redistribution and use in source (Docbook format) and 'compiled'
.\" forms (PDF, PostScript, HTML, RTF, etc), with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\"
.\" 1. Redistributions of source code (Docbook format) must retain the
.\" above copyright notice, this list of conditions and the following
.\" disclaimer.
.\"
.\" 2. Redistributions in compiled form (transformed to other DTDs,
.\" converted to PDF, PostScript, HTML, RTF, and other formats) must
.\" reproduce the above copyright notice, this list of conditions and
.\" the following disclaimer in the documentation and/or other
.\" materials provided with the distribution.
.\"
.\" 3. The name of the author may not be used to endorse or promote
.\" products derived from this documentation without specific prior
.\" written permission.
.\"
.\" THIS DOCUMENTATION IS PROVIDED BY THE AUTHOR AS IS'' AND ANY
.\" EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
.\" PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
.\" ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
.\" CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT
.\" OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
.\" BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
.\" LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
.\" (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
.\" USE OF THIS DOCUMENTATION, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\".\".\"
.SH NAME
fbed \- frame buffer editor
.SH SYNOPSIS
.B fbed
[
.B \-ph
]
.SH DESCRIPTION
.I Fbed\^
is an editor for frame buffer images, designed to facilitate the
manipulation of existing images for the preparation of presentation quality
graphics.  Although it does have the potential to generate fairly complex
images, it is meant mainly for touching up existing images; adding titles,
captions or other labels; cutting and pasting of one or more images; and
reducing images or portions thereof.
.I Fbed\^
uses the frame buffer library
.IR libfb\^ (3)
and therefore is available on all graphics devices which are supported
by this package.  On start up, the program always attempts to open the
default frame buffer.  This device is specified by the frame buffer library,
and is configurable on a per system basis.  Often the user will want to
over ride this default by setting the environment variable
.B
.SM FB_FILE
(see
.IR brlcad\^ (1)).
The
.B \-h
option is for editing
1024x1024 or high resolution
.B
.SM (HIRES)
images;  the default is low resolution, 512x512
.B
.SM (LORES).
The frame buffer's state can be toggled back and forth between
.B
.SM HIRES
and
.B
.SM LORES
at any time during execution of the program.
.P
.I Fbed\^
allows function-to-key bindings and macro definition facilities
in a fashion similar to some of the more versatile EMACS-style
screen editors, such as
.IR jove\^ (1).
.sp 2
.ce
\fBCursor Movement\fR
.P
When
.I fbed\^
is running on a graphics device a cursor will appear on the screen.
The position of the cursor points to the
.IR "current pixel"\^ .
.sp 2
.ce
\fBTerminal Display\fR
.P
When run interactively,
with the standard input attached to a terminal,
the screen will be divided into 5 areas:
the top line will be refered to as the
.IR "option line"\^;
the second line from the top will be called the
.IR "header line"\^;
the bottom line of the screen will be the
.IR "status line"\^;
the second line from the bottom will by the
.IR "prompt line"\^;
and the rest of the screen is devoted to scrolling text output.
The
.I "option line"\^
contains the current
.I pixel\^
color and
.I paint\^
color,
.I stride\^
and
.IR "brush size"\^ .
Colors are expressed as a combination
of red, green, and blue intensity values; ranging from 0 to 255.  The
.I pixel\^
color refers to the
.I "current pixel"\^
which is pointed to by the
cursor on the graphics device.
.I paint\^
color is used by functions that
require a color rather than prompting for it every time.
The
.I stride\^
indicates how many pixels the cursor will move per keystroke
during key-activated cursor movement.  Finally,
.I "brush size"\^
refers to
the size of the square of pixels filled in by the
.I put-pixel\^
command.
The
.I "header line"\^
is displayed in reversed video,
and contains the program name and version number as well as the current
cursor position.
The
.I "prompt line"\^
is where the user will see prompts when the program requires
information.
The
.I "status line"\^
is used to print messages,
indicating to the user that an operation is on-going.
.sp 2
.ce
\fBModes of Input\fR
.P
The user interface consists of a list of provided commands, refered to as
.I functions\^
and user-defined commands, called
.IR macros\^ .
In general, every key-stroke will immediately be processed (this is often
popularly called
.I raw\^
mode input) and therefore, virtually every
function or macro is executed by striking a particular key,
without having to enter it by hitting
.B
.SM RETURN.
The key that activates a particular function or macro is said to be
.I bound\^
to that operation.
.P
Many of the functions will require the user to type some additional
information or
.IR arguments\^ ,
and a prompt will appear in the lower left corner of the screen.
When responding to such prompts,
the style of input resembles that of Bourne and C Shell derivatives
with in-line EMACS-style editing.
This means that the following
.I control\^
keys have special meaning:
.sp
.TS
center allbox;
c c.
\fBkey	editing function\fR
^A	cursor to beginning of line
^B	cursor back one character
^D	delete character under cursor
^E	cursor to end of line
^F	cursor forward one character
^G	abort this function
^K	erase from cursor to end of line
^P	fetch last input typed to this prompt
^U	erase from start of line to cursor
^R	redraw line as it currently exists
^V	escape special meaning of next character typed
Back Space	move cursor backward one character
Delete	delete character behind cursor
.TE
.P
When attempting to fetch the last input typed,
the user should keep in mind that this is specific to the particular
function which is doing the prompting and to that particular question
being asked by that function.
Most of the prompts are intended to appear self-explanatory,
but there are a couple of exceptions.
The
.I execute-function-or-macro\^
function places the user in the prompted mode of input
for the purpose of typing the name of the command.
This is useful when the key binding is not known off-hand or a key
binding does not exist,
but the name of the command is known (or can be guessed at).
In any case,
it is an alternative to key-activated execution of a function or macro.
When entering the prompted mode of command input,
a `:' will appear in the bottom left of the terminal screen and the
terminal's cursor will appear just ahead of it.
Now,
all of the above control key functions are in force,
and command-completion is implemented as well.
At any time while typing the name of the function or macro,
the space bar may be hit to attempt command-completion.
The command-completion logic will look at what has been typed,
and if it represents the beginning of an existing function or macro,
the remainder of that name which can be uniquely matched will appear.
If there is no match,
the portion of the name that has been typed that does not match
will be deleted,
starting at the end and working back.
In other words,
the user only needs to type the unambiguous root of the name.
If the user has done so,
hitting the space bar will show the complete name,
or hitting the
.B
.SM RETURN
key will
enter the command.
If the
.B
.SM RETURN
key is struck,
and there is no unique match,
nothing will happen.
Whenever the user is prompted for the name of a function or macro,
and there are other functions that prompt for this specifically,
then command-completion is provided.
Another atypical prompt is generated by the
.I argument-count\^
function,
and looks like
.IR M-\^ .
The cursor will appear right after the hyphen,
and the user is expected to type a number (sequence of digits).
This sequence of digits must be terminated by a command key-stroke.
This number represents an count of how many times to execute the command
bound to that final key-stroke.
If a digit is bound to a function or macro,
it will not be recognized by the
.I argument-count\^
function.
.sp 2
.ce
.bp
\fBUser-defined Macros and Key Bindings\fR
.P
The user may define a macro as a series of key-strokes.
This is initiated by executing the
.I start-macro-definition\^
function.
The message ``Remembering...'' will appear on the
.IR "status line"\^ ,
and the user then types the key-strokes which will represent
the macro definition.
These key-strokes will be executed as the macro is defined.
To end the macro definition,
the user executes the
.I stop-macro-definition\^
function.
Sometimes,
the user will want to defer specifying the answers to prompts
when defining a macro, so that he can supply the information when the
macro is executed.
In order to incorporate this into his macro,
the user would type a '@@' at the prompt.
This will cause the function to fail while the user is defining the macro,
but this will hopefully not cause any fatal side-effects.
Immediately after defining the macro,
or before defining another,
the user should enable its execution by giving it a name with the
.I name-keyboard-macro\^
function.
If the user desires,
he may bind it to a key with the
.I bind-macro-to-key\^
function,
or it may be executed by name only.
.P
Another way of customizing the frame buffer editor is to change the binding
of keys to functions.
This is done by executing either
.I bind-key-to-name\^
or
.IR bind-key-to-key\^ .
The former will bind a key to either a function or macro by specifying its name,
and the latter refers to the function or macro by a key that is currently
bound to it.
.P
Both key bindings and macro definitions can be saved in a file using
.I write-macros-to-file\^
and read back with
.IR read-macros-from-file\^ .
Whenever the frame buffer editor starts up,
it looks for a file called
.I .fbed_macros\^
in the user's home directory,
and reads it if it exists.
A list of functions and macros and their key bindings can be obtained by
executing the
.I print-bindings\^
function which is bound to `?' by default.
Here is the standard listing:
.sp
.TS
allbox center;
c c
c l.
\fBkey	function\fR
^H	move-window-left
^J	move-window-down
^K	move-window-up
^L	move-window-right
Return	reset-view
^R	redraw-tty-screen
^X	execute-function-or-macro
^Z	stop-program
Esc	argument-count
\fIspace\fR	pick-point
,	decrement-brush-size
 .	increment-brush-size
<	decrement-step-size
>	increment-step-size
?	print-bindings
A	start-macro-definition
B	bind-macro-to-key
C	shrink-image-by-half
E	clear-framebuffer-memory
F	flip-framebuffer-resolution
.TE
.TS
allbox center;
c c
c l.
\fBkey	function\fR
G	get-current-rectangle
H	jump-cursor-left
J	jump-cursor-down
K	jump-cursor-up
L	jump-cursor-right
N	name-keyboard-macro
P	put-saved-rectangle
R	read-rle-fle
S	write-rle-file
T	replace-pixel-current-rectangle
U	write-macros-to-file
V	fill-bounded-region
W	fill-current-rectangle
X	bind-key-to-key
Y	bind-key-to-name
Z	stop-macro-definition
a	enter-macro-definition
b	set-current-rectangle
c	window-center
d	draw-line
f	read-font
g	set-paint-to-current-pixel
h	move-cursor-left
i	zoom-in
j	move-cursor-down
k	move-cursor-up
l	move-cursor-right
m	set-monitor
n	set-tolerance-color-match
o	zoom-out
p	set-paint-from-key
q	quit
r	read-framebuffer
s	put-string
t	change-region-color
u	read-macros-from-file
v	draw-rectangle
w	put-pixel
x	set-cursor-y-pos
y	set-cursor-x-pos
.TE
Macros and functions which are not bound to a key will not be displayed.
.SH HINTS
This program may require a little practice,
be sure to save a copy of the input files until you are confident.
The first time using the program you should start out by listing the menu
and finding the command for saving your image and use it if you don't
already have a copy.
.SH FILES
.TS
;
l c l.
/usr/lib/vfont/*	-	Berkeley font files
$HOME/.fbed_macros	- 	Startup file
.TE
.SH "SEE ALSO"
fb-rle(1), rle-fb(1), libfb(3)
.SH AUTHOR
Gary S. Moss
.SH SOURCE
SECAD/VLD Computing Consortium, Bldg 394
.br
The U. S. Army Ballistic Research Laboratory
.br
Aberdeen Proving Ground, Maryland  21005
.SH KNOWN BUGS
.P
This program is currently under development.
.P
It is known that aborting
the execution of the certain functions will at times display bogus
messages like ``I seem to have lost my bindings.''
.P
There is currently a hard limit of 10 times
.B
.SM BUFSIZ
(defined in
.IR stdio.h\^ )
for the length of the macro startup file.
.SH BUG REPORTS
Reports of bugs or problems should be submitted via electronic
mail to <devs@@brlcad.org>.
@


14.9
log
@Sweeping license updates.  Documentation is fully relicensed to the BSD Documentation License (a minor variant of the FreeBSD Documentation License and BSD License).  All GPL code (mostly application code) is converted to the LGPL and now also specifically declares version 2.1, revoking the blank check to the FSF.  The intent of these sweeping changes are to simplify the licensing terms and increase overall flexibility of use, both externally (to users for their purposes) and internally (to allow application code to be migrated to libraries without creating GPL libraries).  As a collective work, BRL-CAD is now LGPL.
@
text
@d12 1
a12 1
.\" 
d16 1
a16 1
.\" 
d22 1
a22 1
.\" 
d26 1
a26 1
.\" 
a443 1

@


14.8
log
@update copyright to 2007
@
text
@d8 31
a38 15
.\" This document is made available under the terms of the GNU Free
.\" Documentation License or, at your option, under the terms of the
.\" GNU General Public License as published by the Free Software
.\" Foundation.  Permission is granted to copy, distribute and/or
.\" modify this document under the terms of the GNU Free Documentation
.\" License, Version 1.2 or any later version published by the Free
.\" Software Foundation; with no Invariant Sections, no Front-Cover
.\" Texts, and no Back-Cover Texts.  Permission is also granted to
.\" redistribute this document under the terms of the GNU General
.\" Public License; either version 2 of the License, or (at your
.\" option) any later version.
.\"
.\" You should have received a copy of the GNU Free Documentation
.\" License and/or the GNU General Public License along with this
.\" document; see the file named COPYING for more information.
@


14.7
log
@update copyright to 2006
@
text
@d5 1
a5 1
.\" Copyright (c) 2005-2006 United States Government as represented by
@


14.6
log
@fix the manpage commments via s/\.\/"/.\\\"/g
@
text
@d5 1
a5 1
.\" Copyright (c) 2005 United States Government as represented by
@


14.5
log
@trailing ws
@
text
@d2 23
a24 23
./"                         F B E D . 1
./" BRL-CAD
./"
./" Copyright (c) 2005 United States Government as represented by
./" the U.S. Army Research Laboratory.
./"
./" This document is made available under the terms of the GNU Free
./" Documentation License or, at your option, under the terms of the
./" GNU General Public License as published by the Free Software
./" Foundation.  Permission is granted to copy, distribute and/or
./" modify this document under the terms of the GNU Free Documentation
./" License, Version 1.2 or any later version published by the Free
./" Software Foundation; with no Invariant Sections, no Front-Cover
./" Texts, and no Back-Cover Texts.  Permission is also granted to
./" redistribute this document under the terms of the GNU General
./" Public License; either version 2 of the License, or (at your
./" option) any later version.
./"
./" You should have received a copy of the GNU Free Documentation
./" License and/or the GNU General Public License along with this
./" document; see the file named COPYING for more information.
./"
./"./"./"
@


14.4
log
@BRL-CAD not BRL/CAD
@
text
@d159 1
a159 1
to that operation. 
d188 1
a188 1
Delete	delete character behind cursor	
@


14.3
log
@add the standard documentation gfdl/gpl license header and copyright/distribution notice
@
text
@d1 1
a1 1
.TH FBED 1 BRL/CAD
@


14.2
log
@replace the old cad e-mail with devs at brlcad dot org since the dot mil forward is no more.
@
text
@a0 1
'\" t
d2 23
@


14.2.6.1
log
@merge changes from HEAD aka rel-7-6-4 to the rel-7-6-branch just in case someone peeks a gander or tries to continue/build the branch
@
text
@d1 2
a2 24
.TH FBED 1 BRL-CAD
./"                         F B E D . 1
./" BRL-CAD
./"
./" Copyright (c) 2005 United States Government as represented by
./" the U.S. Army Research Laboratory.
./"
./" This document is made available under the terms of the GNU Free
./" Documentation License or, at your option, under the terms of the
./" GNU General Public License as published by the Free Software
./" Foundation.  Permission is granted to copy, distribute and/or
./" modify this document under the terms of the GNU Free Documentation
./" License, Version 1.2 or any later version published by the Free
./" Software Foundation; with no Invariant Sections, no Front-Cover
./" Texts, and no Back-Cover Texts.  Permission is also granted to
./" redistribute this document under the terms of the GNU General
./" Public License; either version 2 of the License, or (at your
./" option) any later version.
./"
./" You should have received a copy of the GNU Free Documentation
./" License and/or the GNU General Public License along with this
./" document; see the file named COPYING for more information.
./"
./"./"./"
d137 1
a137 1
to that operation.
d166 1
a166 1
Delete	delete character behind cursor
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d405 1
a405 1
mail to <CAD@@ARL.ARMY.MIL>.
@


1.1
log
@Vast reorganization begins.  Sources moved from top-level directories into src/.
@
text
@@

