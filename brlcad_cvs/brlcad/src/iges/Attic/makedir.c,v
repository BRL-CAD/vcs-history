head	14.6;
access;
symbols
	stable-branch:14.4
	bobWinPort-20051223-freeze:14.4
	rel-7-6-2:14.4
	rel-7-6-branch:14.4.0.6
	rel-7-6-0:14.4
	rel-7-4-2:14.4
	rel-7-4-branch:14.4.0.4
	bobWinPort:14.4.0.2
	rel-7-4-0:14.4
	rel-7-2-6:14.4
	rel-7-2-4:14.4
	rel-7-2-2:14.4
	rel-7-2-0:14.4
	rel-7-0-4:14.3
	rel-7-0-2:14.3
	rel-7-0-1:14.3
	opensource-post:14.3
	opensource-pre:1.1
	rel-7-0-branch:1.1.0.2
	rel-7-0:1.1;
locks; strict;
comment	@ * @;


14.6
date	2005.10.27.03.36.04;	author brlcad;	state dead;
branches;
next	14.5;

14.5
date	2005.10.23.04.44.31;	author brlcad;	state Exp;
branches;
next	14.4;

14.4
date	2005.01.30.20.30.39;	author brlcad;	state Exp;
branches
	14.4.6.1;
next	14.3;

14.3
date	2004.12.21.06.38.19;	author morrison;	state Exp;
branches;
next	14.2;

14.2
date	2004.12.20.20.36.29;	author morrison;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.13;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.20.15.19.15;	author morrison;	state Exp;
branches;
next	;

14.4.6.1
date	2005.11.13.13.46.14;	author brlcad;	state dead;
branches;
next	;


desc
@@


14.6
log
@moved all the geometry converter directories from src/. to src/conv/.
@
text
@/*                       M A K E D I R . C
 * BRL-CAD
 *
 * Copyright (C) 1990-2005 United States Government as represented by
 * the U.S. Army Research Laboratory.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation; either version 2 of the
 * License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this file; see the file named COPYING for more
 * information.
 */
/** @@file makedir.c
 *  Authors -
 *	John R. Anderson
 *	Susanne L. Muuss
 *	Earl P. Weaver
 *
 *  Source -
 *	VLD/ASB Building 1065
 *	The U. S. Army Ballistic Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005
 *
 */

/* Routine to read the directory section of an IGES file.
	and store needed info in the 'directory' structures.
	dir[n] is the structure for entity #n.
	The directory entry for entity #n is located on
	line D'2n+1' of the iges file.	*/

#include "./iges_struct.h"
#include "./iges_extern.h"

#define	CR	'\015'

void
Makedir()
{

	int found,i,saverec,entcount=(-1),paramptr=0,paramguess=0;
	char str[9];

	str[8] = '\0';
	bu_log( "Reading Directory Section...\n" );
	bu_log( "Number of entities checked:\n" );

	if( totentities < 1 )
		goto out;

	Readrec( dstart+1 );	/* read first record in directory section */

	while( 1 )
	{
		if( card[72] != 'D' )	/* We are not in the directory section */
			break;

		entcount++;	/* increment count of entities */

		if( entcount%100 == 0 )
		{
			sprintf( str , "\t%d%c" , entcount , CR );
			write( 1 , str , strlen( str ) );
		}

		/* save the directory record number for this entity */
		dir[entcount]->direct = atoi( &card[73] );

		/* set reference count to 0 */
		dir[entcount]->referenced = 0;

		/* set record number to read for next entity */
		saverec = currec + 2;

		Readcols( str , 8 );	/* read entity type */
		dir[entcount]->type = atoi( str );

		Readcols( str , 8 );	/* read pointer to parameter entry */

		/* convert it to a file record number */
		paramptr = atoi( str );
		if( paramptr == 0 && entcount > 0 )
		{
			paramguess = 1;
			dir[entcount]->param = dir[entcount-1]->param + dir[entcount-1]->paramlines;
		}
		else if( paramptr > 0 )
			dir[entcount]->param = paramptr + pstart;
		else
			bu_log( "Entity number %d does not have a correct parameter pointer\n",
				entcount );

		if( dir[entcount]->type == 422 )
		{
			/* This is an attribute instance, so get the definition */
			Readcols( str , 8 );
			dir[entcount]->referenced = (-atoi(str));
		}
		else
			counter += 8;

		counter += 16;	/* skip 16 columns */

		Readcols( str , 8 );    /* read pointer to view entity */
		dir[entcount]->view = atoi( str );

		Readcols( str , 8 );	/* read pointer to transformation entity */

		/* convert it to a "dir" index
		 * Use (DE + 1)/2 - 1 rather than (DE-1)/2 to get
		 * a (-1) value in "trans" field when DE is 0
		 */
		dir[entcount]->trans = (atoi( str ) + 1)/2 - 1;

		/* skip next field */
		counter += 8;

		Readcols( str , 8 );	/* read status entry */
		dir[entcount]->status = atoi( str );

		Readrec( currec + 1 );	/* read next record into buffer */
		counter += 16;		/* skip first two fields */

		Readcols( str , 8 );	/* read pointer to color entity */
		/* if pointer is negative, convert to a 'dir' index */
		dir[entcount]->colorp = atoi( str );
		if( dir[entcount]->colorp < 0 )
			dir[entcount]->colorp = (dir[entcount]->colorp + 1)/2;

		Readcols( str , 8 );	/* read parameter line count */
		dir[entcount]->paramlines = atoi( str );
		if( dir[entcount]->paramlines == 0 )
			dir[entcount]->paramlines = 1;
		Readcols( str , 8 );	/* read form number */
		dir[entcount]->form = atoi( str );

		/* Look for entity type in list and incrememt that count */

		found = 0;
		for( i=0 ; i<ntypes ; i++ )
		{
			if( typecount[i].type == dir[entcount]->type )
			{
				typecount[i].count++;
				found = 1;
				break;
			}
		}
		if( !found )
		{
			typecount[0].count++;
			if( dir[entcount]->type > 0 )
				dir[entcount]->type = (-dir[entcount]->type); /* for easy recognition */
		}

		/* Check if this is a transformation entity */
		if( dir[entcount]->type == 124 || dir[entcount]->type == 700 )
		{
			/* Read and store the matrix */
			if( dir[entcount]->param <= pstart )
			{
				bu_log( "Illegal parameter pointer for entity D%07d (%s)\n" ,
						dir[entcount]->direct , dir[entcount]->name );
				dir[entcount]->rot = NULL;
			}
			else
			{
				dir[entcount]->rot = (mat_t *)bu_malloc( sizeof( mat_t ) , "Makedir:matrix" );
				Readmatrix( dir[entcount]->param , *dir[entcount]->rot );
			}
		}
		else /* set to NULL */
			dir[entcount]->rot = NULL;

	Readrec( saverec ); /* restore previous record */
	}

out:
	bu_log( "\t%d\n\n" ,entcount+1 );
	if( paramguess )
		bu_log( "Some entities did not have proper parameter pointers, so a resonable guess was made\n" );
}


/*
 * Local Variables:
 * mode: C
 * tab-width: 8
 * c-basic-offset: 4
 * indent-tabs-mode: t
 * End:
 * ex: shiftwidth=4 tabstop=8
 */
@


14.5
log
@trailing ws
@
text
@@


14.4
log
@update copyright to 2005
@
text
@d31 1
a31 1
 *  
d48 1
a48 1
	
d51 1
a51 1
	
d60 1
a60 1
	
d65 1
a65 1
		
d144 1
a144 1
		
d146 1
a146 1
		
@


14.4.6.1
log
@merge changes from HEAD aka rel-7-6-4 to the rel-7-6-branch just in case someone peeks a gander or tries to continue/build the branch
@
text
@@


14.3
log
@remove the old copyright notice section
@
text
@d4 1
a4 1
 * Copyright (c) 1990-2004 United States Government as represented by
@


14.2
log
@acquire copyright and assign GPL license
@
text
@a31 3
 *  Copyright Notice -
 *	This software is Copyright (C) 1990-2004 by the United States Army.
 *	All rights reserved.
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d1 21
a21 1
/*
@


1.1
log
@Vast reorganization begins.  Sources moved from top-level directories into src/.
@
text
@d175 10
@

