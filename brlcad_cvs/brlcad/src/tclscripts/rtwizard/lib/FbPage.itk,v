head	14.12;
access;
symbols
	rel-7-10-4:14.12
	STABLE:14.12.0.2
	rel-7-10-2:14.12
	rel-7-10-0:14.12
	rel-7-8-4:14.9
	rel-7-8-2:14.9
	rel-7-8-0:14.9
	trimnurbs-branch:14.9.0.2
	help:14.9
	temp_tag:14.7
	bobWinPort-20051223-freeze:14.6
	postmerge-20051223-bobWinPort:14.7
	premerge-20051223-bobWinPort:14.7
	rel-7-6-6:14.7
	rel-7-6-4:14.7
	rel-7-6-2:14.6
	rel-7-6-branch:14.6.0.6
	rel-7-6-0:14.6
	rel-7-4-2:14.6
	rel-7-4-branch:14.6.0.4
	bobWinPort:14.6.0.2
	rel-7-4-0:14.6
	rel-7-2-6:14.5
	rel-7-2-4:14.5
	rel-7-2-2:14.5
	rel-7-2-0:14.5
	rel-7-0-4:14.4
	rel-7-0-2:14.4
	rel-7-0-1:14.4
	opensource-post:14.4
	opensource-pre:1.2
	rel-7-0-branch:1.2.0.2
	rel-7-0:1.2;
locks; strict;
comment	@# @;


14.12
date	2007.01.27.01.41.52;	author brlcad;	state Exp;
branches;
next	14.11;

14.11
date	2007.01.23.01.13.51;	author brlcad;	state Exp;
branches;
next	14.10;

14.10
date	2007.01.20.14.37.04;	author brlcad;	state Exp;
branches;
next	14.9;

14.9
date	2006.01.31.02.05.59;	author brlcad;	state Exp;
branches;
next	14.8;

14.8
date	2006.01.18.06.46.27;	author brlcad;	state Exp;
branches;
next	14.7;

14.7
date	2005.10.23.04.44.39;	author brlcad;	state Exp;
branches;
next	14.6;

14.6
date	2005.07.08.00.12.57;	author brlcad;	state Exp;
branches
	14.6.6.1;
next	14.5;

14.5
date	2005.01.30.20.31.30;	author brlcad;	state Exp;
branches;
next	14.4;

14.4
date	2004.12.21.06.18.54;	author morrison;	state Exp;
branches;
next	14.3;

14.3
date	2004.12.21.05.45.29;	author morrison;	state Exp;
branches;
next	14.2;

14.2
date	2004.12.21.04.49.31;	author morrison;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.32;	author morrison;	state Exp;
branches;
next	1.2;

1.2
date	2004.10.22.18.41.38;	author butler;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.20.15.21.24;	author morrison;	state Exp;
branches;
next	;

14.6.6.1
date	2005.11.13.13.46.20;	author brlcad;	state Exp;
branches;
next	;


desc
@@


14.12
log
@ws. lots and lots of ws.  see sh/ws.sh for details (cases 'abcdeg').
@
text
@#                      F B P A G E . I T K
# BRL-CAD
#
# Copyright (c) 2004-2007 United States Government as represented by
# the U.S. Army Research Laboratory.
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public License
# version 2.1 as published by the Free Software Foundation.
#
# This library is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this file; see the file named COPYING for more
# information.
#
###
#
# FbPage.itk
#
# This file provides a page for specifying framebuffer parameters
# such as device, width, depth, and background color.
#

package require Itcl
package require Itk
package require Iwidgets

namespace eval RtWizard {

    package require FrameBufferDialog 1.0
    package provide FbPage 1.0

    #
    # fbpage - Provides a lowercased access method for the
    #          FbPage class
    #
    proc fbpage {pathName args} {
	uplevel FbPage $pathName $args
    }

    #
    # Add options
    #
    option add *FbPage.borderWidth 2 widgetDefault
    option add *FbPage.labelPos wn widgetDefault
    option add *FbPage.listHeight 150 widgetDefault
    option add *FbPage.hscrollMode dynamic widgetDefault
    option add *FbPage.vscrollMode dynamic widgetDefault
    option add *FbPage.textBackground seashell

    #
    # Define the usual options
    #
    ::itk::usual FbPage {
	keep -activebackground \
		-activerelief \
		-background \
		-borderwidth \
		-cursor \
		-elementborderwidth \
		-foreground \
		-highlightcolor \
		-highlightthickness \
		-insertbackground \
		-insertborderwidth \
		-insertofftime \
		-insertontime \
		-insertwidth \
		-jump \
		-labelfont \
		-selectbackground \
		-selectborderwidth \
		-textbackground \
		-textfont \
		-troughcolor
    }

    #
    # FbPage
    #
    # The FbPage contains some entryfields.
    #
    ::itcl::class FbPage {
	inherit ::iwidgets::Labeledwidget

	#
	# Configuration variables
	#

	# None!

	public {
	    #
	    # methods
	    #
	    constructor {args} {};

	    method onSelect {}
	    method onDeselect {}
	    method getStepInfo {}
	    method getWidth {}
	    method getHeight {}
	    method getFrameBuffer {width height {screenOnly false}}
	}

	private {
	    #
	    # methods
	    #
	    method loadHelpText {widget}
	    method onOK {}
	    method selectFbFile {}

	    method onToScreen {}
	    method onToFile {}

	    method updateWidth {}
	    method incrWidth {}
	    method decrWidth {}

	    method updateHeight {}
	    method incrHeight {}
	    method decrHeight {}

	    #
	    # variables
	    #
	    common sizes { 256 480 512 640 768 1024 1200 1600 2048 }
	    common topSpot 8
	    variable rbvar
	    variable fbFile

	    variable width
	    variable heigh

	    variable widthIndex
	    variable heightIndex

	    variable lastPort 0

	}
    }

    #--------------------#
    #   Public Methods   #
    #--------------------#
    #
    # constructor - builds the Framebuffer Page
    #
    ::itcl::body FbPage::constructor {args} {

	#
	# Set up the childsite
	#
	set cs [ $this childsite ]
	$cs configure -relief groove -bd 2

	#
	# Create the help panel
	#
	itk_component add helpPanel {
	    ::iwidgets::scrolledtext $cs.#auto \
		    -hscrollmode none \
		    -vscrollmode none \
		    -visibleitems 80x3 \
		    -wrap word \
		    -relief flat \
		    -textfont {avantgarde 12 italic}
	} {
	    usual
	    ignore -textbackground
	}
	loadHelpText $itk_component(helpPanel);

	pack $itk_component(helpPanel) \
		-side top

	#
	# Add a frame to facilitate packing the remainder of the
	# contents.
	#
	itk_component add sfm {
	    frame $cs.fm \
		    -relief flat
	} {
	    usual
	}

	#
	# Create two frames, the left frame will hold the size and
	# color stuff, the right will hold the device stuff.
	#
	itk_component add ltFrame {
	    frame $itk_component(sfm).ltFrame
	} {
	    usual
	}

	itk_component add rtFrame {
	    frame $itk_component(sfm).rtFrame
	} {
	    usual
	}

	#
	# Build the contents of the left-hand-side
	#
	itk_component add szFrame {
	    iwidgets::labeledframe $itk_component(ltFrame).szFrame \
		    -labeltext "Size" \
		    -labelpos nw \
		    -relief groove
	}

	set szCs [$itk_component(szFrame) childsite]

	itk_component add width {
	    iwidgets::spinner $szCs.width \
		    -labeltext "Width:" \
		    -width 6 \
		    -labelmargin 2 \
		    -increment "[::itcl::code $this incrWidth]" \
		    -decrement "[::itcl::code $this decrWidth]"
	} {
	    ignore -textfont
	    keep -textbackground
	}

	set widthIndex 5
	updateWidth

	itk_component add height {
	    iwidgets::spinint $szCs.height \
		    -labeltext "Height:" \
		    -width 6 \
		    -increment "[::itcl::code $this incrHeight]" \
		    -decrement "[::itcl::code $this decrHeight]"
	} {
	    ignore -textfont
	    keep -textbackground
	}

	set heightIndex 5
	updateHeight

	#
	# Build the contents of the right-hand-size
	#
	itk_component add devFrame {
	    iwidgets::labeledframe $itk_component(rtFrame).devFrame \
		    -labeltext "Device" \
		    -labelpos nw \
		    -relief groove

	} {
	    usual
	}
	set devCs [$itk_component(devFrame) childsite]

	itk_component add radBox {
	    iwidgets::radiobox $devCs.radBox \
		    -relief flat
	} {
	    usual
	}

	$itk_component(radBox) add toScreen \
		-text "Display on Screen" \
		-selectcolor green \
		-command "[::itcl::code $this onToScreen]"

	$itk_component(radBox) add toFile \
		    -text "Write to File" \
		    -selectcolor green \
		    -command "[::itcl::code $this onToFile]"

	itk_component add fileName {
	    iwidgets::entryfield $devCs.fileName \
		    -labeltext "File:" -width 48 \
		    -textvariable [::itcl::scope fbFile]
	} {
	    usual
	}

	itk_component add fsd {
	    iwidgets::fileselectiondialog .fsd \
		    -modality application
	} {
	    usual
	}

	itk_component add browse {
	    button $devCs.browse \
		    -text "Browse" \
		    -command "[::itcl::code $this selectFbFile]"
	} {
	    usual
	}

	#
	# Add a buttonbox
	#
	itk_component add bbox {
	    iwidgets::buttonbox $cs.bbox
	} {
	    usual
	}

	$itk_component(bbox) add OK \
		-text "OK" \
		-command "[::itcl::code $::wizardInstance] selectPrev"

	#
	# Pack the items
	#

	#
	# Pack the contents of the szFrame
	#
	pack $itk_component(width)
	pack $itk_component(height)

	eval iwidgets::Labeledwidget::alignlabels \
		$itk_component(height) \
		$itk_component(width)

	#
	# Pack the contents of the devFrame
	#
	pack $itk_component(radBox) -anchor w
	pack $itk_component(fileName) -anchor w
	pack $itk_component(browse)  -anchor e

	#
	# Pack the size frame and dev frame
	#
	pack $itk_component(szFrame) -fill y -expand 1
	pack $itk_component(devFrame) -fill y -expand 1

	#
	# Pack the lhs and rhs frame into the middle
	#
	pack $itk_component(ltFrame) -side left
	pack $itk_component(rtFrame) -side right

	#
	# Now pack the top-level widgets.
	#
	pack $itk_component(helpPanel) -side top
	pack $itk_component(sfm)
	pack $itk_component(bbox) -side right


	#
	# Configure the labeledframe
	#
	configure -labelpos nw
	configure -labeltext "Configure the Framebuffer"

	#
	# Select to screen
	#
	$itk_component(radBox) select 0

	#
	# Evaluate any other args
	#
	eval itk_initialize $args
    }

    #
    # onSelect
    #
    # Makes any necessary changes to the Wizard configuration
    # when this page is selected.
    #
    ::itcl::body FbPage::onSelect {} {
	#
	# Nothing yet!
	#
    }

    #
    # onDeselect
    #
    # Cleans up when the page is deselected
    #
    ::itcl::body FbPage::onDeselect {} {
	#
	# Nothing yet!
	#
    }

    #
    # getStepInfo
    #
    # In principal, returns a name for the step, and a variable that
    # can be queried for state. The framebuffer page is not a 'step',
    # so it returns "No Step"
    #
    ::itcl::body FbPage::getStepInfo {} {
	set a "No Step"
	set b "banana"
	return [list $a $b]
    }

    #
    # getWidth - returns the current width
    #
    ::itcl::body FbPage::getWidth {} {
	return [$itk_component(width) get]
    }

    #
    # getHeight - returns the current height
    #
    ::itcl::body FbPage::getHeight {} {
	return [$itk_component(height) get]
    }

    #
    # getFrameBuffer - opens frame buffer and returns the port.
    #
    ::itcl::body FbPage::getFrameBuffer { width height {screenOnly false} } {
	#
	# If the user specified a framebuffer file and it is
	# not null, return the name. Otherwise, open an on-screen
	# buffer.
	#
	set mode [$itk_component(radBox) get]
	if { [string match $mode "toFile"] && \
		[string length $fbFile] > 0 && \
		[string match $screenOnly "false"] } {
	    return $fbFile
	}
	set binpath [bu_brlcad_root bin]
	#
	# Create an on-screen buffer
	#
	set port [incr lastPort]
	set ok false
	while {[catch \
		    "exec $binpath/fbserv -w $width -n $height -F /dev/X -p $port &" \
		catchResult]} {
	    puts $catchResult
	    incr port
	}
	#
	# Damn important, give the fbserv a bit o' time to fire up
	#
	after 1000
	exec $binpath/fbclear -F $port 0 0 0
	set lastPort $port

	return $port
    }

    #--------------------#
    #  Private Methods   #
    #--------------------#
    #
    # onOK - called when the OK button is called
    #
    ::itcl::body FbPage::onOK {} {
	$::wizardInstance select intro
    }

    #
    # loadHelpText - loads a bit of helpful information into a
    #                text widget
    #
    ::itcl::body FbPage::loadHelpText { widget } {
	set help "Copious help on frame buffer stuff"
	$widget insert end $help
    }

    #
    # selectFbFile - called when the "browse" fb file is specified
    #
    ::itcl::body FbPage::selectFbFile { } {
	$itk_component(fsd) activate
	set fbFile [$itk_component(fsd) get]
    }

    #
    # onToScreen - called when the toScreen radiobutton is
    #             selected. Deactivates the "fileName" and
    #             "browse" components.
    #
    ::itcl::body FbPage::onToScreen { } {
	$itk_component(fileName) configure -state disabled
	$itk_component(browse) configure -state disabled
    }

    #
    # onToFile - called when the toFile radiobutton is
    #            selected. Activates the "fileName" and
    #            "browse" components.
    #
    ::itcl::body FbPage::onToFile { } {
	$itk_component(fileName) configure -state normal
	$itk_component(browse) configure -state normal
    }

    #
    # updateWidth - clears the width widget and inserts the
    #               current value.
    #
    ::itcl::body FbPage::updateWidth { } {
	$itk_component(width) clear
	$itk_component(width) insert 0 [ lindex $sizes $widthIndex ]
    }

    #
    # incrWidth - called when the width spinner's up button
    #             is pressed.
    #
    ::itcl::body FbPage::incrWidth { } {
	if { $widthIndex < $topSpot } {
	    incr widthIndex
	}
	updateWidth
    }

    #
    # decrWidth - called when the width spinner's down button
    #             is pressed.
    #
    ::itcl::body FbPage::decrWidth { } {
	if { $widthIndex > 0 } {
	    incr widthIndex -1
	}
	updateWidth
    }

    #
    # updateHeight - clears the height widget and inserts the
    #                current value.
    #
    ::itcl::body FbPage::updateHeight { } {
	$itk_component(height) clear
	$itk_component(height) insert 0 [ lindex $sizes $heightIndex ]
    }

    #
    # incrHeight - called when the height spinner's up button
    #              is pressed.
    #
    ::itcl::body FbPage::incrHeight { } {
	if { $heightIndex < $topSpot } {
	    incr heightIndex
	}
	updateHeight
    }

    #
    # decrHeight - called when the height spinner's down button
    #              is pressed.
    #
    ::itcl::body FbPage::decrHeight { } {
	if { $heightIndex > 0 } {
	    incr heightIndex -1
	}
	updateHeight
    }

}
#end namespace


# Local Variables:
# mode: Tcl
# tab-width: 8
# c-basic-offset: 4
# tcl-indent-level: 4
# indent-tabs-mode: t
# End:
# ex: shiftwidth=4 tabstop=8
@


14.11
log
@Sweeping license updates.  Documentation is fully relicensed to the BSD Documentation License (a minor variant of the FreeBSD Documentation License and BSD License).  All GPL code (mostly application code) is converted to the LGPL and now also specifically declares version 2.1, revoking the blank check to the FSF.  The intent of these sweeping changes are to simplify the licensing terms and increase overall flexibility of use, both externally (to users for their purposes) and internally (to allow application code to be migrated to libraries without creating GPL libraries).  As a collective work, BRL-CAD is now LGPL.
@
text
@d194 2
a195 2
        # Create two frames, the left frame will hold the size and
        # color stuff, the right will hold the device stuff.
d299 1
a299 1
    		    -command "[::itcl::code $this selectFbFile]"
a574 45













































@


14.10
log
@update copyright to 2007
@
text
@d9 1
a9 2
# as published by the Free Software Foundation; either version 2 of
# the License, or (at your option) any later version.
@


14.9
log
@legal header changed from Library to Lesser to reflect current 'official' name of the license
@
text
@d4 1
a4 1
# Copyright (c) 2004-2006 United States Government as represented by
@


14.8
log
@update copyright to 2006
@
text
@d15 1
a15 1
# Library General Public License for more details.
@


14.7
log
@trailing ws
@
text
@d4 1
a4 1
# Copyright (C) 2004-2005 United States Government as represented by
@


14.6
log
@use bu_brlcad_root instead of bu_brlcad_path for bin dir
@
text
@d39 1
a39 1
    # fbpage - Provides a lowercased access method for the 
d84 1
a84 1
    # FbPage 
d94 1
a94 1
	
d100 1
a100 1
	    # 
d102 1
a102 1
	
d105 1
a105 1
	    method getStepInfo {}	    
d137 1
a137 1
	    
d145 1
a145 1
	    
d148 1
a148 1
    
d151 1
a151 1
    #--------------------#    
d156 1
a156 1
	
d179 1
a179 1
    
d184 1
a184 1
	# Add a frame to facilitate packing the remainder of the 
d186 1
a186 1
	# 
d189 1
a189 1
		    -relief flat 
d228 1
a228 1
		    -decrement "[::itcl::code $this decrWidth]" 
d233 1
a233 1
	    
d242 1
a242 1
		    -decrement "[::itcl::code $this decrHeight]" 
d267 1
a267 1
		    -relief flat 
d292 1
a292 1
		    -modality application 
d321 1
a321 1
	
d334 1
a334 1
	# 
d336 1
a336 1
	pack $itk_component(fileName) -anchor w 
d353 1
a353 1
	# 
d358 1
a358 1
	
d375 1
a375 1
    
d393 1
a393 1
    ::itcl::body FbPage::onDeselect {} {	
d403 1
a403 1
    # can be queried for state. The framebuffer page is not a 'step', 
d460 1
a460 1
	return $port	
d465 1
a465 1
    #--------------------#    
d474 1
a474 1
    # loadHelpText - loads a bit of helpful information into a 
d478 1
a478 1
	set help "Copious help on frame buffer stuff"    
d491 1
a491 1
    # onToScreen - called when the toScreen radiobutton is 
d501 1
a501 1
    # onToFile - called when the toFile radiobutton is 
d517 1
a517 1
    } 
d548 1
a548 1
    } 
@


14.6.6.1
log
@merge changes from HEAD aka rel-7-6-4 to the rel-7-6-branch just in case someone peeks a gander or tries to continue/build the branch
@
text
@d39 1
a39 1
    # fbpage - Provides a lowercased access method for the
d84 1
a84 1
    # FbPage
d94 1
a94 1

d100 1
a100 1
	    #
d102 1
a102 1

d105 1
a105 1
	    method getStepInfo {}
d137 1
a137 1

d145 1
a145 1

d148 1
a148 1

d151 1
a151 1
    #--------------------#
d156 1
a156 1

d179 1
a179 1

d184 1
a184 1
	# Add a frame to facilitate packing the remainder of the
d186 1
a186 1
	#
d189 1
a189 1
		    -relief flat
d228 1
a228 1
		    -decrement "[::itcl::code $this decrWidth]"
d233 1
a233 1

d242 1
a242 1
		    -decrement "[::itcl::code $this decrHeight]"
d267 1
a267 1
		    -relief flat
d292 1
a292 1
		    -modality application
d321 1
a321 1

d334 1
a334 1
	#
d336 1
a336 1
	pack $itk_component(fileName) -anchor w
d353 1
a353 1
	#
d358 1
a358 1

d375 1
a375 1

d393 1
a393 1
    ::itcl::body FbPage::onDeselect {} {
d403 1
a403 1
    # can be queried for state. The framebuffer page is not a 'step',
d460 1
a460 1
	return $port
d465 1
a465 1
    #--------------------#
d474 1
a474 1
    # loadHelpText - loads a bit of helpful information into a
d478 1
a478 1
	set help "Copious help on frame buffer stuff"
d491 1
a491 1
    # onToScreen - called when the toScreen radiobutton is
d501 1
a501 1
    # onToFile - called when the toFile radiobutton is
d517 1
a517 1
    }
d548 1
a548 1
    }
@


14.5
log
@update copyright to 2005
@
text
@d441 1
a441 1
	set binpath [bu_brlcad_path bin]
@


14.4
log
@they should have received a copy of the LGPL with LGPL'd files
@
text
@d4 2
a5 2
# Copyright (c) 2004 United States Government as represented by the
# U.S. Army Research Laboratory.
@


14.3
log
@s/GNU Library General/GNU Lesser General/g
@
text
@d17 2
a18 2
# You should have received a copy of the GNU General Public License
# along with this file; see the file named COPYING for more
@


14.2
log
@assign copyright and LGPL
@
text
@d8 1
a8 1
# modify it under the terms of the GNU Library General Public License
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d1 21
@


1.2
log
@Changes to eliminate BRLCAD_ROOT
@
text
@d599 9
@


1.1
log
@Vast reorganization begins.  Sources moved from top-level directories into src/.
@
text
@d420 1
a420 1

d427 1
a427 1
		"exec fbserv -w $width -n $height -F /dev/X -p $port &" \
d436 1
a436 1
	exec fbclear -F $port 0 0 0
@

