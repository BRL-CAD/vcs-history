head	1.6;
access;
symbols
	rel-7-10-4:1.6
	STABLE:1.6.0.2
	rel-7-10-2:1.6
	rel-7-10-0:1.6
	rel-7-8-4:1.3
	rel-7-8-2:1.3
	rel-7-8-0:1.3
	trimnurbs-branch:1.3.0.2
	help:1.3
	temp_tag:1.2
	bobWinPort-20051223-freeze:1.1.2.1
	postmerge-20051223-bobWinPort:1.2
	bobWinPort:1.1.0.2;
locks; strict;
comment	@# @;


1.6
date	2007.01.27.01.41.46;	author brlcad;	state Exp;
branches;
next	1.5;

1.5
date	2007.01.23.01.13.49;	author brlcad;	state Exp;
branches;
next	1.4;

1.4
date	2007.01.20.14.37.01;	author brlcad;	state Exp;
branches;
next	1.3;

1.3
date	2006.01.31.02.08.23;	author brlcad;	state Exp;
branches;
next	1.2;

1.2
date	2005.12.23.21.26.47;	author bob1961;	state Exp;
branches;
next	1.1;

1.1
date	2005.09.08.21.16.46;	author bob1961;	state dead;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2005.09.08.21.16.46;	author bob1961;	state Exp;
branches;
next	;


desc
@@


1.6
log
@ws. lots and lots of ws.  see sh/ws.sh for details (cases 'abcdeg').
@
text
@#                      P L U G I N . T C L
# BRL-CAD
#
# Copyright (c) 2002-2007 United States Government as represented by
# the U.S. Army Research Laboratory.
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public License
# version 2.1 as published by the Free Software Foundation.
#
# This library is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this file; see the file named COPYING for more
# information.
#
###
#
# Author(s):
#    Doug Howard
#    Bob Parker
#
# Description:
#    Structure to hold plugin registry.
#
##############################################################

# *************** Sourced Files ***************

# *************** Interface *******************

# CLASS: Plugin
#
#
::itcl::class Plugin {
    #
    # VARIABLES
    #
    protected {
	variable msMajorType ""
	variable msMinorType ""
	variable msName ""
	variable msClass ""
	variable msVersion ""
	variable msFile ""
	variable msDeveloper ""
	variable msDesc ""
	variable msIcon ""
	variable msToolTip ""
	variable msAction ""
	variable msXmlAction ""
    }

    constructor {majorType minorType name class file \
		     {description ""} \
		     {version "1.0"} \
		     {developer ""} \
		     {icon ""} \
		     {toolTip ""} \
		     {action ""} \
		     {xmlAction ""}} {}
    destructor  {}

    #
    # METHODS
    #
    public {
	method get {{option -name}}
    }
}

###############################################################################
#
# METHOD: constructor
#
# Inputs:
#    majorType    - major type of plugin (i.e. Wizard, Utility etc.)
#    minorType    - minor type of plugin (i.e. Mged, Sdb etc.)
#    name    - name of the plugin
#    class   - Itcl/Itk class of the plugin
#    file    - tcl file the plugin resides in
#    desc    - short description of plugin
#    vers    - version number of plugin
#    devel   - plugin developer
#    icon    - icon for plugin
#    action - method/command for invoking the plugins action
#    xmlAction - method/command for invoking the plugins XML action
#
# Description:
#    create the registry for the plugin
#
###############################################################################
::itcl::body Plugin::constructor {majorType minorType name class file \
				      {description ""} \
				      {version "1.0"} \
				      {developer ""} \
				      {icon ""} \
				      {toolTip ""} \
				      {action ""} \
				      {xmlAction ""}} {
    set msMajorType $majorType
    set msMinorType $minorType
    set msName $name
    set msClass $class
    set msFile $file
    set msVersion $version
    set msDeveloper $developer
    set msDesc $description
    set msIcon $icon
    set msToolTip $toolTip
    set msAction $action
    set msXmlAction $xmlAction
}

###############################################################################
#
# METHOD: destructor
#
# Inputs:
#    none
#
# Description:
#    cleanup memory
#
###############################################################################
::itcl::body Plugin::destructor {} {
}

###############################################################################
#
# METHOD: get
#
# Inputs:
#    option - specify the value wanted
#
# Description:
#    get a certain value stored
#
###############################################################################
::itcl::body Plugin::get {{option -name}} {
    switch -- $option {
	-majorType   {return $msMajorType}
	-minorType   {return $msMinorType}
	-name        {return $msName}
	-class       {return $msClass}
	-version     {return $msVersion}
	-filename    {return $msFile}
	-developer   {return $msDeveloper}
	-description {return $msDesc}
	-icon        {return $msIcon}
	-tooltip     {return $msToolTip}
	-action      {return $msAction}
	-xmlAction   {return $msXmlAction}
    }
}

# Local Variables:
# mode: Tcl
# tab-width: 8
# c-basic-offset: 4
# tcl-indent-level: 4
# indent-tabs-mode: t
# End:
# ex: shiftwidth=4 tabstop=8
@


1.5
log
@Sweeping license updates.  Documentation is fully relicensed to the BSD Documentation License (a minor variant of the FreeBSD Documentation License and BSD License).  All GPL code (mostly application code) is converted to the LGPL and now also specifically declares version 2.1, revoking the blank check to the FSF.  The intent of these sweeping changes are to simplify the licensing terms and increase overall flexibility of use, both externally (to users for their purposes) and internally (to allow application code to be migrated to libraries without creating GPL libraries).  As a collective work, BRL-CAD is now LGPL.
@
text
@d32 1
a32 1
 
d34 1
a34 1
 
d66 1
a66 1
    
@


1.4
log
@update copyright to 2007
@
text
@d9 1
a9 2
# as published by the Free Software Foundation; either version 2 of
# the License, or (at your option) any later version.
@


1.3
log
@to quote Bob's commit to src/archer/archer "All of archer including the tclscripts is assigned to u.s. government and should be under the LGPL" so add the boilerplate legal header.  the COPYING file requires this regardless for all commits whether implicit or explicit.  also add the boilerplate variables footer while we're at it.
@
text
@d4 1
a4 1
# Copyright (c) 2002-2006 United States Government as represented by
@


1.2
log
@Merge of bobWinPort
@
text
@d1 2
a2 5
##
# Portions Copyright (c) 2002 SURVICE Engineering Company. All Rights Reserved.
# This file contains Original Code and/or Modifications of Original Code as
# defined in and that are subject to the SURVICE Public Source License
# (Version 1.3, dated March 12, 2002).
d4 18
a21 1
#                 P L U G I N . T C L
a26 8

# TYPE: tcltk
##############################################################
# 
# plugin.tcl
#
##############################################################
#
d160 9
@


1.1
log
@file Plugin.tcl was initially added on branch bobWinPort.
@
text
@d1 153
@


1.1.2.1
log
@Initial check-in
@
text
@a0 153
##
# Portions Copyright (c) 2002 SURVICE Engineering Company. All Rights Reserved.
# This file contains Original Code and/or Modifications of Original Code as
# defined in and that are subject to the SURVICE Public Source License
# (Version 1.3, dated March 12, 2002).
#
#                 P L U G I N . T C L
#
# Author(s):
#    Doug Howard
#    Bob Parker
#

# TYPE: tcltk
##############################################################
# 
# plugin.tcl
#
##############################################################
#
# Description:
#    Structure to hold plugin registry.
#
##############################################################

# *************** Sourced Files ***************
 
# *************** Interface *******************
 
# CLASS: Plugin
#
#
::itcl::class Plugin {
    #
    # VARIABLES
    #
    protected {
	variable msMajorType ""
	variable msMinorType ""
	variable msName ""
	variable msClass ""
	variable msVersion ""
	variable msFile ""
	variable msDeveloper ""
	variable msDesc ""
	variable msIcon ""
	variable msToolTip ""
	variable msAction ""
	variable msXmlAction ""
    }

    constructor {majorType minorType name class file \
		     {description ""} \
		     {version "1.0"} \
		     {developer ""} \
		     {icon ""} \
		     {toolTip ""} \
		     {action ""} \
		     {xmlAction ""}} {}
    destructor  {}
    
    #
    # METHODS
    #
    public {
	method get {{option -name}}
    }
}

###############################################################################
#
# METHOD: constructor
#
# Inputs:
#    majorType    - major type of plugin (i.e. Wizard, Utility etc.)
#    minorType    - minor type of plugin (i.e. Mged, Sdb etc.)
#    name    - name of the plugin
#    class   - Itcl/Itk class of the plugin
#    file    - tcl file the plugin resides in
#    desc    - short description of plugin
#    vers    - version number of plugin
#    devel   - plugin developer
#    icon    - icon for plugin
#    action - method/command for invoking the plugins action
#    xmlAction - method/command for invoking the plugins XML action
#
# Description:
#    create the registry for the plugin
#
###############################################################################
::itcl::body Plugin::constructor {majorType minorType name class file \
				      {description ""} \
				      {version "1.0"} \
				      {developer ""} \
				      {icon ""} \
				      {toolTip ""} \
				      {action ""} \
				      {xmlAction ""}} {
    set msMajorType $majorType
    set msMinorType $minorType
    set msName $name
    set msClass $class
    set msFile $file
    set msVersion $version
    set msDeveloper $developer
    set msDesc $description
    set msIcon $icon
    set msToolTip $toolTip
    set msAction $action
    set msXmlAction $xmlAction
}

###############################################################################
#
# METHOD: destructor
#
# Inputs:
#    none
#
# Description:
#    cleanup memory
#
###############################################################################
::itcl::body Plugin::destructor {} {
}

###############################################################################
#
# METHOD: get
#
# Inputs:
#    option - specify the value wanted
#
# Description:
#    get a certain value stored
#
###############################################################################
::itcl::body Plugin::get {{option -name}} {
    switch -- $option {
	-majorType   {return $msMajorType}
	-minorType   {return $msMinorType}
	-name        {return $msName}
	-class       {return $msClass}
	-version     {return $msVersion}
	-filename    {return $msFile}
	-developer   {return $msDeveloper}
	-description {return $msDesc}
	-icon        {return $msIcon}
	-tooltip     {return $msToolTip}
	-action      {return $msAction}
	-xmlAction   {return $msXmlAction}
    }
}
@

