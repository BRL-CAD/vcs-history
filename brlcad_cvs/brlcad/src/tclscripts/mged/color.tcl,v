head	14.11;
access;
symbols
	rel-7-10-4:14.11
	STABLE:14.11.0.2
	stable-branch:14.6
	rel-7-10-2:14.11
	rel-7-10-0:14.11
	rel-7-8-4:14.8
	rel-7-8-2:14.8
	rel-7-8-0:14.8
	trimnurbs-branch:14.8.0.2
	help:14.8
	temp_tag:14.7
	bobWinPort-20051223-freeze:14.6
	postmerge-20051223-bobWinPort:14.7
	premerge-20051223-bobWinPort:14.7
	rel-7-6-6:14.7
	rel-7-6-4:14.7
	rel-7-6-2:14.6
	rel-7-6-branch:14.6.0.6
	rel-7-6-0:14.6
	rel-7-4-2:14.6
	rel-7-4-branch:14.6.0.4
	bobWinPort:14.6.0.2
	rel-7-4-0:14.6
	rel-7-2-6:14.6
	rel-7-2-4:14.6
	rel-7-2-2:14.6
	rel-7-2-0:14.6
	rel-7-0-4:14.5
	rel-7-0-2:14.5
	rel-7-0-1:14.5
	opensource-post:14.5
	opensource-pre:1.1
	rel-7-0-branch:1.1.0.2
	rel-7-0:1.1;
locks; strict;
comment	@# @;


14.11
date	2007.01.27.01.41.47;	author brlcad;	state Exp;
branches;
next	14.10;

14.10
date	2007.01.23.01.13.50;	author brlcad;	state Exp;
branches;
next	14.9;

14.9
date	2007.01.20.14.37.03;	author brlcad;	state Exp;
branches;
next	14.8;

14.8
date	2006.01.18.06.46.25;	author brlcad;	state Exp;
branches;
next	14.7;

14.7
date	2005.10.23.04.44.38;	author brlcad;	state Exp;
branches;
next	14.6;

14.6
date	2005.01.30.20.31.14;	author brlcad;	state Exp;
branches
	14.6.6.1;
next	14.5;

14.5
date	2004.12.21.06.44.34;	author morrison;	state Exp;
branches;
next	14.4;

14.4
date	2004.12.21.06.18.49;	author morrison;	state Exp;
branches;
next	14.3;

14.3
date	2004.12.21.05.45.27;	author morrison;	state Exp;
branches;
next	14.2;

14.2
date	2004.12.21.04.46.06;	author morrison;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.31;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.20.15.21.04;	author morrison;	state Exp;
branches;
next	;

14.6.6.1
date	2005.11.13.13.46.19;	author brlcad;	state Exp;
branches;
next	;


desc
@@


14.11
log
@ws. lots and lots of ws.  see sh/ws.sh for details (cases 'abcdeg').
@
text
@#                       C O L O R . T C L
# BRL-CAD
#
# Copyright (c) 2004-2007 United States Government as represented by
# the U.S. Army Research Laboratory.
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public License
# version 2.1 as published by the Free Software Foundation.
#
# This library is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this file; see the file named COPYING for more
# information.
#
###
##
#			C O L O R . T C L
#
# Author -
#	Robert G. Parker
#
# Source -
#       The U. S. Army Research Laboratory
#       Aberdeen Proving Ground, Maryland  21005
#
#
# Description -
#	Color utilities.
#

## color_entry_build --
#
# Build a color entry widget. The color entry widget consists of
# an entry and a menubutton widget. The menu associated with the
# menubutton contains some canned color entries as well as an
# entry that invokes a user specified command for setting the color.
#
proc color_entry_build { top key vn user_color_cmd width icolor canned_colors } {
    frame $top.$key\F -relief sunken -bd 2
    entry $top.$key\E -relief flat -width $width -textvar $vn
    hoc_register_data $top.$key\E "Color"\
	    { { summary "Enter a color specification. The color
can be specified using three integers (i.e. r g b)
in the range 0 to 255. For example:

\tblack\t\t0 0 0
\twhite\t\t255 255 255
\tred\t\t255 0 0
\tgreen\t\t0 255 0
\tblue\t\t0 0 255
\tyellow\t\t255 255 0
\tcyan\t\t0 255 255
\tmagenta\t\t255 0 255

The color can also be specified using a six character
hexadecimal number (i.e. #ff0000 specifies red). And
of course the color can be specified by name. For
example, the name \"blue\" specifies a color with
an rgb value of 0 0 255.

Note - when entering colors directly,
pressing \"Enter\" will update the color
of the menubutton." } }

    menubutton $top.$key\MB -relief raised -bd 2\
	    -menu $top.$key\MB.m -indicatoron 1
    hoc_register_data $top.$key\MB "Color Menu"\
	    { { summary "Pop up a menu of colors. Also included
in the menu is an entry for a color tool." } }
    menu $top.$key\MB.m -title "Color" -tearoff 0

if {$canned_colors == "rt"} {
    $top.$key\MB.m add command -background #000032 -activebackground #000032 \
	    -command "set $vn \"0 0 50\"; \
		      setWidgetRGBColor $top.$key\MB $vn \$$vn"
    $top.$key\MB.m add command -background #84dfff -activebackground #84dfff \
	    -command "set $vn \"132 223 255\"; \
		      setWidgetRGBColor $top.$key\MB $vn \$$vn"
    $top.$key\MB.m add command -background #008000 -activebackground #008000 \
	    -command "set $vn \"0 128 0\"; \
		      setWidgetRGBColor $top.$key\MB $vn \$$vn"
    $top.$key\MB.m add command -background #f0f0a0 -activebackground #f0f0a0 \
	    -command "set $vn \"240 240 160\"; \
		      setWidgetRGBColor $top.$key\MB $vn \$$vn"
    $top.$key\MB.m add command -background #ffffff -activebackground #ffffff \
	    -command "set $vn \"255 255 255\"; \
		      setWidgetRGBColor $top.$key\MB $vn \$$vn"
    $top.$key\MB.m add command -background #808080 -activebackground #808080 \
	    -command "set $vn \"128 128 128\"; \
		      setWidgetRGBColor $top.$key\MB $vn \$$vn"
    $top.$key\MB.m add command -background #000000 -activebackground #000000 \
	    -command "set $vn \"0 0 0\"; \
		      setWidgetRGBColor $top.$key\MB $vn \$$vn"
} else {
    $top.$key\MB.m add command -background #000000 -activebackground #000000 \
	    -command "set $vn \"0 0 0\"; \
		      setWidgetRGBColor $top.$key\MB $vn \$$vn"
    $top.$key\MB.m add command -background #ffffff -activebackground #ffffff \
	    -command "set $vn \"255 255 255\"; \
		      setWidgetRGBColor $top.$key\MB $vn \$$vn"
    $top.$key\MB.m add command -background #ff0000 -activebackground #ff0000 \
	    -command "set $vn \"255 0 0\"; \
		      setWidgetRGBColor $top.$key\MB $vn \$$vn"
    $top.$key\MB.m add command -background #00ff00 -activebackground #00ff00 \
	    -command "set $vn \"0 255 0\"; \
		      setWidgetRGBColor $top.$key\MB $vn \$$vn"
    $top.$key\MB.m add command -background #0000ff -activebackground #0000ff \
	    -command "set $vn \"0 0 255\"; \
		      setWidgetRGBColor $top.$key\MB $vn \$$vn"
    $top.$key\MB.m add command -background #ffff00 -activebackground #ffff00 \
	    -command "set $vn \"255 255 0\"; \
		      setWidgetRGBColor $top.$key\MB $vn \$$vn"
    $top.$key\MB.m add command -background #00ffff -activebackground #00ffff \
	    -command "set $vn \"0 255 255\"; \
		      setWidgetRGBColor $top.$key\MB $vn \$$vn"
    $top.$key\MB.m add command -background #ff00ff -activebackground #ff00ff \
	    -command "set $vn \"255 0 255\"; \
		      setWidgetRGBColor $top.$key\MB $vn \$$vn"
}
    $top.$key\MB.m add separator
    $top.$key\MB.m add command -label "Color Tool..." -command $user_color_cmd
    hoc_register_menu_data "Color" "Color Tool..." "Color Tool"\
	    { { summary "The color tool allows the user to specify
a color using either RGB or HSV. The resulting
color is RGB." } }

    # initialize color
    catch {[list uplevel #0 [list set $vn $icolor]]}
    setWidgetRGBColor $top.$key\MB $vn $icolor

    grid $top.$key\E $top.$key\MB -sticky "nsew" -in $top.$key\F
    grid columnconfigure $top.$key\F 0 -weight 1
    grid rowconfigure $top.$key\F 0 -weight 1

    bind $top.$key\E <Return> "setWidgetColor $top.$key\MB $vn \$$vn"

    return $top.$key\F
}

proc color_entry_destroy { top key } {
    grid forget $top.$key\F
    destroy $top.$key\F $top.$key\E $top.$key\MB
}

proc color_entry_update { top key vn icolor } {
    if [winfo exists $top.$key\MB] {
	setWidgetColor $top.$key\MB $vn $icolor
    }
}

proc color_entry_chooser { id top key title vn vin } {
    set child color

    cadColorWidget dialog $top $child\
	    -title $title\
	    -initialcolor [$top.$key\MB cget -background]\
	    -ok "color_entry_ok $id $top $top.$child $key $vn $vin"\
	    -cancel "cadColorWidget_destroy $top.$child"
}

proc color_entry_ok { id top w key vn vin } {
    upvar #0 $w data $vn varname

    $top.$key\MB configure -bg $data(finalColor)
    $top.$key\MB configure -activebackground $data(finalColor)

    if {$vin == ""} {
	set varname "$data(red) $data(green) $data(blue)"
    } else {
	set varname($vin) "$data(red) $data(green) $data(blue)"
    }

    destroy $w
    unset data
}

## -- setWidgetRGBColor
#
# Set the widget color given an rgb string.
#
proc setWidgetRGBColor { w vn rgb } {

    if ![winfo exists $w] {
	return -code error "setWidgetRGBColor: bad Tk window name --> $w"
    }

    if {$rgb != ""} {
	set result [regexp "^(\[0-9\]+)\[ \]+(\[0-9\]+)\[ \]+(\[0-9\]+)$" \
		$rgb cmatch red green blue]
	if {!$result} {
	    # reset varname to properly reflect the current color of the widget
	    set varname [$w cget -bg]
	    return -code error "Improper color specification - $rgb"
	}
    } else {
	return
    }

    $w configure -bg [format "#%02x%02x%02x" $red $green $blue]
    $w configure -activebackground [format "#%02x%02x%02x" $red $green $blue]
}

## -- setWidgetColor
#
# Set the widget color given a color string.
#
proc setWidgetColor { w vn color } {
    set rgb [getRGBorReset $w $vn $color]
    setWidgetRGBColor $w $vn $rgb
}


## -- getRGBorReset
#
# Get the RGB value corresponding to the given color. Failing that
# reset the variable vn to the value provided by the widget w
#
proc getRGBorReset { w vn color } {
    upvar #0 $vn varname

    if ![winfo exists $w] {
	return -code error "getRGBorReset: bad Tk window name --> $w"
    }

    # convert to RGB
    set result [catch {getRGB $w $color} rgb]
    if {$result} {
	# reset varname to properly reflect the current color of the widget
	set varname [$w cget -bg]
	return -code error $rgb
    }

    return $rgb
}

## -- getRGB
#
# Get the RGB value corresponding to the given color.
#
proc getRGB { w color } {
    # convert to RGB
    set rgb [cadColorWidget_getRGB $w $color]

    # Check to make sure the color is valid
    if {[llength $rgb] == 3} {
	return $rgb
    }

    # not a color recognized by cadColorWidget_getRGB
    set result [regexp "^\[ \]*(\[0-9\]+)\[ \]+(\[0-9\]+)\[ \]+(\[0-9\]+)\[ \]*$" \
	    $color cmatch red green blue]
    if {!$result ||
	$red < 0 || $red > 255 ||
	$green < 0 || $green > 255 ||
	$blue < 0 || $blue > 255 } {
	return -code error "Improper color specification - $color"
    }

    return $color
}

# Local Variables:
# mode: Tcl
# tab-width: 8
# c-basic-offset: 4
# tcl-indent-level: 4
# indent-tabs-mode: t
# End:
# ex: shiftwidth=4 tabstop=8
@


14.10
log
@Sweeping license updates.  Documentation is fully relicensed to the BSD Documentation License (a minor variant of the FreeBSD Documentation License and BSD License).  All GPL code (mostly application code) is converted to the LGPL and now also specifically declares version 2.1, revoking the blank check to the FSF.  The intent of these sweeping changes are to simplify the licensing terms and increase overall flexibility of use, both externally (to users for their purposes) and internally (to allow application code to be migrated to libraries without creating GPL libraries).  As a collective work, BRL-CAD is now LGPL.
@
text
@d80 1
a80 1
	              setWidgetRGBColor $top.$key\MB $vn \$$vn"
d83 1
a83 1
	              setWidgetRGBColor $top.$key\MB $vn \$$vn"
d86 1
a86 1
	              setWidgetRGBColor $top.$key\MB $vn \$$vn"
d89 1
a89 1
	              setWidgetRGBColor $top.$key\MB $vn \$$vn"
d92 1
a92 1
	              setWidgetRGBColor $top.$key\MB $vn \$$vn"
d95 1
a95 1
	              setWidgetRGBColor $top.$key\MB $vn \$$vn"
d98 1
a98 1
	              setWidgetRGBColor $top.$key\MB $vn \$$vn"
d102 1
a102 1
	              setWidgetRGBColor $top.$key\MB $vn \$$vn"
d105 1
a105 1
	              setWidgetRGBColor $top.$key\MB $vn \$$vn"
d108 1
a108 1
	              setWidgetRGBColor $top.$key\MB $vn \$$vn"
d111 1
a111 1
	              setWidgetRGBColor $top.$key\MB $vn \$$vn"
d114 1
a114 1
	              setWidgetRGBColor $top.$key\MB $vn \$$vn"
d117 1
a117 1
	              setWidgetRGBColor $top.$key\MB $vn \$$vn"
d120 1
a120 1
	              setWidgetRGBColor $top.$key\MB $vn \$$vn"
d123 1
a123 1
	              setWidgetRGBColor $top.$key\MB $vn \$$vn"
d258 3
a260 3
        $red < 0 || $red > 255 ||
        $green < 0 || $green > 255 ||
        $blue < 0 || $blue > 255 } {
@


14.9
log
@update copyright to 2007
@
text
@d9 1
a9 2
# as published by the Free Software Foundation; either version 2 of
# the License, or (at your option) any later version.
d14 1
a14 1
# Library General Public License for more details.
@


14.8
log
@update copyright to 2006
@
text
@d4 1
a4 1
# Copyright (c) 2004-2006 United States Government as represented by
@


14.7
log
@trailing ws
@
text
@d4 1
a4 1
# Copyright (C) 2004-2005 United States Government as represented by
@


14.6
log
@update copyright to 2005
@
text
@d40 1
a40 1
# an entry and a menubutton widget. The menu associated with the 
@


14.6.6.1
log
@merge changes from HEAD aka rel-7-6-4 to the rel-7-6-branch just in case someone peeks a gander or tries to continue/build the branch
@
text
@d40 1
a40 1
# an entry and a menubutton widget. The menu associated with the
@


14.5
log
@remove the old distribution notice section
@
text
@d4 2
a5 2
# Copyright (c) 2004 United States Government as represented by the
# U.S. Army Research Laboratory.
@


14.4
log
@they should have received a copy of the LGPL with LGPL'd files
@
text
@a31 4
# Distribution Notice -
#       Re-distribution of this software is restricted, as described in
#       your "Statement of Terms and Conditions for the Release of
#       The BRL-CAD Package" agreement.
@


14.3
log
@s/GNU Library General/GNU Lesser General/g
@
text
@d17 2
a18 2
# You should have received a copy of the GNU General Public License
# along with this file; see the file named COPYING for more
@


14.2
log
@assign copyright and LGPL
@
text
@d8 1
a8 1
# modify it under the terms of the GNU Library General Public License
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d1 21
@


1.1
log
@Vast reorganization begins.  Sources moved from top-level directories into src/.
@
text
@d250 9
@

