head	14.11;
access;
symbols
	rel-7-10-4:14.11
	STABLE:14.11.0.2
	stable-branch:14.7
	rel-7-10-2:14.11
	rel-7-10-0:14.11
	rel-7-8-4:14.9
	rel-7-8-2:14.9
	rel-7-8-0:14.9
	trimnurbs-branch:14.9.0.2
	help:14.9
	temp_tag:14.8
	bobWinPort-20051223-freeze:14.7
	postmerge-20051223-bobWinPort:14.8
	premerge-20051223-bobWinPort:14.8
	rel-7-6-6:14.8
	rel-7-6-4:14.8
	rel-7-6-2:14.7
	rel-7-6-branch:14.7.0.6
	rel-7-6-0:14.7
	rel-7-4-2:14.7
	rel-7-4-branch:14.7.0.4
	bobWinPort:14.7.0.2
	rel-7-4-0:14.7
	rel-7-2-6:14.7
	rel-7-2-4:14.7
	rel-7-2-2:14.7
	rel-7-2-0:14.7
	rel-7-0-4:14.6
	rel-7-0-2:14.6
	rel-7-0-1:14.6
	opensource-post:14.6
	opensource-pre:1.1
	rel-7-0-branch:1.1.0.2
	rel-7-0:1.1;
locks; strict;
comment	@# @;


14.11
date	2007.01.23.01.13.51;	author brlcad;	state Exp;
branches;
next	14.10;

14.10
date	2007.01.20.14.37.03;	author brlcad;	state Exp;
branches;
next	14.9;

14.9
date	2006.01.18.06.46.25;	author brlcad;	state Exp;
branches;
next	14.8;

14.8
date	2005.10.23.04.44.38;	author brlcad;	state Exp;
branches;
next	14.7;

14.7
date	2005.01.30.20.31.14;	author brlcad;	state Exp;
branches
	14.7.6.1;
next	14.6;

14.6
date	2004.12.21.06.58.44;	author morrison;	state Exp;
branches;
next	14.5;

14.5
date	2004.12.21.06.44.34;	author morrison;	state Exp;
branches;
next	14.4;

14.4
date	2004.12.21.06.18.52;	author morrison;	state Exp;
branches;
next	14.3;

14.3
date	2004.12.21.05.45.28;	author morrison;	state Exp;
branches;
next	14.2;

14.2
date	2004.12.21.04.46.06;	author morrison;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.31;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.20.15.21.11;	author morrison;	state Exp;
branches;
next	;

14.7.6.1
date	2005.11.13.13.46.19;	author brlcad;	state Exp;
branches;
next	;


desc
@@


14.11
log
@Sweeping license updates.  Documentation is fully relicensed to the BSD Documentation License (a minor variant of the FreeBSD Documentation License and BSD License).  All GPL code (mostly application code) is converted to the LGPL and now also specifically declares version 2.1, revoking the blank check to the FSF.  The intent of these sweeping changes are to simplify the licensing terms and increase overall flexibility of use, both externally (to users for their purposes) and internally (to allow application code to be migrated to libraries without creating GPL libraries).  As a collective work, BRL-CAD is now LGPL.
@
text
@#                  M A K E _ S O L I D . T C L
# BRL-CAD
#
# Copyright (c) 1998-2007 United States Government as represented by
# the U.S. Army Research Laboratory.
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public License
# version 2.1 as published by the Free Software Foundation.
#
# This library is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this file; see the file named COPYING for more
# information.
#
###
# Author -
#	Bob Parker
#
# Source -
#	The U. S. Army Research Laboratory
#	Aberdeen Proving Ground, Maryland  21005
#
#
#
# Description -
#	Tcl/Tk interface to MGED's "make" command.

if ![info exists mged_default(solid_name_fmt)] {
    set mged_default(solid_name_fmt) "s@@"
}

proc make_dsp { id top } {
    global mged_gui
    global ::tk::Priv

	if { ![info exists mged_gui($id,solid_name)] } {
		cad_dialog $::tk::Priv(cad_dialog) $mged_gui($id,screen) "ERROR creating DSP" "No solid name provided!!!!" "" 0 OK
		return
	}

	if { [string length $mged_gui($id,solid_name)] < 1 } {
		cad_dialog $::tk::Priv(cad_dialog) $mged_gui($id,screen) "ERROR creating DSP" "No solid name provided!!!!" "" 0 OK
		return
	}

	set command {_mged_in $mged_gui($id,solid_name) dsp f \
		$mged_gui($id,dsp_file_name) $mged_gui($id,dsp_file_width) \
		$mged_gui($id,dsp_file_length) $mged_gui($id,dsp_smooth) ad \
		$mged_gui($id,dsp_cell_size) $mged_gui($id,dsp_elev_size)}

	set ret [catch $command result]
	if { $ret != 0 } {
		cad_dialog $::tk::Priv(cad_dialog) $mged_gui($id,screen) "ERROR creaing DSP" $result "" 0 OK
	}

	catch {_mged_sed $mged_gui($id,solid_name)}
	catch "destroy $top"
    }

proc dsp_create { id } {
    global mged_gui
    global ::tk::Priv

    if {[opendb] == ""} {
	cad_dialog $::tk::Priv(cad_dialog) $mged_gui($id,screen) "No database." \
		"No database has been opened!" info 0 OK
	return
    }

	set top .$id.make_dsp

	if [winfo exists $top] {
		raise $top
		return
	}

	toplevel $top -screen $mged_gui($id,screen)

	set dsp_dscr "The DSP solid is a set of displacements on a regularly spaced grid. These displacements\n\
		are often used to represent terrain, but may be used for any surface where such displacement data\n\
		is available. The displacements are expected to be unsigned short integers (2 bytes each), stored\n\
		in binary format in a file."

	label $top.nameL -text "Primitive name:"
	entry $top.nameE -relief sunken -bd 2 -textvar mged_gui($id,solid_name)
	set tmp_hoc [list [list summary $dsp_dscr] [list description "This is the BRL-CAD name for this solid (it must be unique)" ]]
	hoc_register_data $top.nameL "Primitive Name" $tmp_hoc
	hoc_register_data $top.nameE "Primitive Name" $tmp_hoc
	label $top.fileL -text "File name:"
	entry $top.fileE -relief sunken -bd 2 -textvar mged_gui($id,dsp_file_name)
	set tmp_hoc [list [list summary $dsp_dscr] [list description "This is the name of the file containing the displacements" ]]
	hoc_register_data $top.fileL "File Name" $tmp_hoc
	hoc_register_data $top.fileE "File Name" $tmp_hoc
	label $top.widthL -text "File width:"
	entry $top.widthE -relief sunken -bd 2 -textvar mged_gui($id,dsp_file_width)
	set tmp_hoc [list [list summary $dsp_dscr] [list description "This is the width of the displacement map (number of values per row)" ]]
	hoc_register_data $top.widthL "File width" $tmp_hoc
	hoc_register_data $top.widthE "File width" $tmp_hoc
	label $top.heightL -text "File length:"
	entry $top.heightE -relief sunken -bd 2 -textvar mged_gui($id,dsp_file_length)
	set tmp_hoc [list [list summary $dsp_dscr] [list description "This is the length of the displacement map (number of rows)" ]]
	hoc_register_data $top.heightL "File width" $tmp_hoc
	hoc_register_data $top.heightE "File width" $tmp_hoc
	set mged_gui($id,dsp_smooth) 0
	label $top.smoothL -text "Use smoothing"
	checkbutton $top.smoothC -bd 2 -variable mged_gui($id,dsp_smooth)
	set tmp_hoc [list [list summary $dsp_dscr] [list description "If this is checked, the displacememt surface will be smoothed" ]]
	hoc_register_data $top.smoothL "Smoothing" $tmp_hoc
	hoc_register_data $top.smoothC "Smoothing" $tmp_hoc

	label $top.celldimL -text "Cell size:"
	entry $top.celldimE -relief sunken -bd 2 -textvar mged_gui($id,dsp_cell_size)
	set tmp_hoc [list [list summary $dsp_dscr] [list description "This is the size of a cell in the X and Y dimension"]]
	hoc_register_data $top.celldimL "Cell Size" $tmp_hoc
	hoc_register_data $top.celldimE "Cell Size" $tmp_hoc

	label $top.cellelevL -text "Unit Elevation:"
	entry $top.cellelevE -relief sunken -bd 2 -textvar mged_gui($id,dsp_elev_size)
	set tmp_hoc [list [list summary $dsp_dscr] [list description "This is the distance represented by each step in elevation"]]

	hoc_register_data $top.cellelevL "Unit Elevation" $tmp_hoc
	hoc_register_data $top.cellelevE "Unit Elevation" $tmp_hoc


	button $top.applyB -text Apply -command "make_dsp $id $top"
	button $top.autonameB -text "Autoname" -command "solid_auto_name $id"
	button $top.dismissB -text Dismiss -command "catch {destroy $top}"
	set tmp_hoc [list [list summary $dsp_dscr] [list description "Pressing this button will create the DSP solid and dismiss this window" ]]
	hoc_register_data $top.applyB "Apply" $tmp_hoc
	set tmp_hoc [list [list summary $dsp_dscr] [list description "Pressing this button will create a unique name for the DSP solid" ]]
	hoc_register_data $top.autonameB "Autoname" $tmp_hoc
	set tmp_hoc [list [list summary $dsp_dscr] [list description "Pressing this button will dismiss this window without creating a DSP solid" ]]
	hoc_register_data $top.dismissB "Dismiss" $tmp_hoc

	grid $top.nameL -sticky "w" -row 0 -column 0
	grid $top.nameE -sticky "ew" -row 0 -column 1
	grid $top.fileL -sticky "w" -row 1 -column 0
	grid $top.fileE -sticky "ew" -row 1 -column 1
	grid $top.widthL -sticky "w" -row 2 -column 0
	grid $top.widthE -sticky "ew" -row 2 -column 1
	grid $top.heightL -sticky "w" -row 3 -column 0
	grid $top.heightE -sticky "ew" -row 3 -column 1
	grid $top.smoothC -sticky "e" -row 4 -column 0
	grid $top.smoothL -sticky "w" -row 4 -column 1
	grid $top.celldimL -sticky "w" -row 5 -column 0
	grid $top.celldimE -sticky "ew" -row 5 -column 1
	grid $top.cellelevL -sticky "w" -row 6 -column 0
	grid $top.cellelevE -sticky "ew" -row 6 -column 1
	grid $top.applyB $top.autonameB $top.dismissB -sticky "ew" -padx 8 -pady 8

    bind $top <Return> "make_dsp $id $top; break"

    place_near_mouse $top
    wm protocol $top WM_DELETE_WINDOW "catch { destroy $top }"
    wm title $top "Enter Dsp Primitive Name"
}

proc init_solid_create { id type } {
    global mged_gui
    global ::tk::Priv

    if {[opendb] == ""} {
	cad_dialog $::tk::Priv(cad_dialog) $mged_gui($id,screen) "No database." \
		"No database has been opened!" info 0 OK
	return
    }

    set top .$id.make_solid

    if [winfo exists $top] {
	raise $top
	return
    }

    toplevel $top -screen $mged_gui($id,screen)

    frame $top.nameF
    label $top.nameL -text "Enter name for $type:" -anchor w
    entry $top.nameE -relief sunken -bd 2 -textvar mged_gui($id,solid_name)
    button $top.applyB -relief raised -text "Apply"\
	    -command "make_solid $id $top $type"
    button $top.autonameB -relief raised -text "Autoname"\
	    -command "solid_auto_name $id"
    button $top.dismissB -relief raised -text "Dismiss"\
	    -command "catch { destroy $top }"

    grid $top.nameL -sticky "w" -in $top.nameF
    grid $top.nameE -sticky "ew" -in $top.nameF
    grid $top.nameF - - - - -sticky "ew" -padx 8 -pady 8
    grid columnconfigure $top.nameF 0 -weight 1
    grid $top.applyB x $top.autonameB x $top.dismissB -sticky "ew" -padx 8 -pady 8
    grid columnconfigure $top 1 -weight 1
    grid columnconfigure $top 3 -weight 1

    bind $top <Return> "make_solid $id $top $type; break"

    place_near_mouse $top
    wm protocol $top WM_DELETE_WINDOW "catch { destroy $top }"
    wm title $top "Enter Primitive Name"
}

proc solid_auto_name { id } {
    global mged_gui
    global mged_default
    global ::tk::Priv

    set result [catch {_mged_make_name $mged_default(solid_name_fmt)} name]

    if {$result == 0} {
	set mged_gui($id,solid_name) $name
    } else {
	cad_dialog $::tk::Priv(cad_dialog) $mged_gui($id,screen)\
		"Failed to automatically create a solid name!"\
		$name\
		"" 0 OK
	return
    }
}

proc make_solid { id w type } {
    global mged_gui
    global ::tk::Priv

    set result [catch {_mged_make $mged_gui($id,solid_name) $type} msg]

    if {$result == 0} {
	catch {_mged_sed $mged_gui($id,solid_name)}
	catch {destroy $w}
    } else {
	cad_dialog $::tk::Priv(cad_dialog) $mged_gui($id,screen)\
		"Bad solid name!"\
		$msg\
		"" 0 OK
	return
    }
}

# Local Variables:
# mode: Tcl
# tab-width: 8
# c-basic-offset: 4
# tcl-indent-level: 4
# indent-tabs-mode: t
# End:
# ex: shiftwidth=4 tabstop=8
@


14.10
log
@update copyright to 2007
@
text
@d9 1
a9 2
# as published by the Free Software Foundation; either version 2 of
# the License, or (at your option) any later version.
d14 1
a14 1
# Library General Public License for more details.
@


14.9
log
@update copyright to 2006
@
text
@d4 1
a4 1
# Copyright (c) 1998-2006 United States Government as represented by
@


14.8
log
@trailing ws
@
text
@d4 1
a4 1
# Copyright (C) 1998-2005 United States Government as represented by
@


14.7
log
@update copyright to 2005
@
text
@d112 1
a112 1
	checkbutton $top.smoothC -bd 2 -variable mged_gui($id,dsp_smooth)	
d183 1
a183 1
    frame $top.nameF 
@


14.7.6.1
log
@merge changes from HEAD aka rel-7-6-4 to the rel-7-6-branch just in case someone peeks a gander or tries to continue/build the branch
@
text
@d112 1
a112 1
	checkbutton $top.smoothC -bd 2 -variable mged_gui($id,dsp_smooth)
d183 1
a183 1
    frame $top.nameF
@


14.6
log
@remove the old copyright notice section as it's been supplanted (and copyright is now claimable in the us via assignmgent)
@
text
@d4 1
a4 1
# Copyright (c) 1998-2004 United States Government as represented by
@


14.5
log
@remove the old distribution notice section
@
text
@a29 3
# Copyright Notice -
#       This software is Copyright (C) 1998-2004 by the United States Army
#       in all countries except the USA.  All rights reserved.
@


14.4
log
@they should have received a copy of the LGPL with LGPL'd files
@
text
@a28 4
# Distribution Notice -
#	Re-distribution of this software is restricted, as described in
#       your "Statement of Terms and Conditions for the Release of
#       The BRL-CAD Package" agreement.
@


14.3
log
@s/GNU Library General/GNU Lesser General/g
@
text
@d17 2
a18 2
# You should have received a copy of the GNU General Public License
# along with this file; see the file named COPYING for more
@


14.2
log
@assign copyright and LGPL
@
text
@d8 1
a8 1
# modify it under the terms of the GNU Library General Public License
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d1 21
@


1.1
log
@Vast reorganization begins.  Sources moved from top-level directories into src/.
@
text
@d229 9
@

