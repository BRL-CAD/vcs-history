head	14.17;
access;
symbols
	rel-7-10-4:14.16.2.1
	STABLE:14.16.0.2
	stable-branch:14.8
	rel-7-10-2:14.16
	rel-7-10-0:14.15
	rel-7-8-4:14.13
	rel-7-8-2:14.11
	rel-7-8-0:14.11
	trimnurbs-branch:14.11.0.2
	help:14.11
	temp_tag:14.10
	bobWinPort-20051223-freeze:14.9
	postmerge-20051223-bobWinPort:14.10
	premerge-20051223-bobWinPort:14.10
	rel-7-6-6:14.10
	rel-7-6-4:14.10
	rel-7-6-2:14.9
	rel-7-6-branch:14.9.0.4
	rel-7-6-0:14.9
	rel-7-4-2:14.8
	rel-7-4-branch:14.8.0.2
	bobWinPort:14.9.0.2
	rel-7-4-0:14.8
	rel-7-2-6:14.8
	rel-7-2-4:14.8
	rel-7-2-2:14.8
	rel-7-2-0:14.7
	rel-7-0-4:14.6
	rel-7-0-2:14.6
	rel-7-0-1:14.6
	opensource-post:14.6
	opensource-pre:1.2
	rel-7-0-branch:1.2.0.2
	rel-7-0:1.2;
locks; strict;
comment	@# @;


14.17
date	2007.11.04.16.08.31;	author bob1961;	state Exp;
branches;
next	14.16;

14.16
date	2007.04.11.18.30.35;	author bob1961;	state Exp;
branches
	14.16.2.1;
next	14.15;

14.15
date	2007.01.23.01.13.50;	author brlcad;	state Exp;
branches;
next	14.14;

14.14
date	2007.01.20.14.37.01;	author brlcad;	state Exp;
branches;
next	14.13;

14.13
date	2006.08.22.18.35.46;	author bob1961;	state Exp;
branches;
next	14.12;

14.12
date	2006.07.26.15.57.06;	author bob1961;	state Exp;
branches;
next	14.11;

14.11
date	2006.01.18.06.46.25;	author brlcad;	state Exp;
branches;
next	14.10;

14.10
date	2005.10.23.04.44.38;	author brlcad;	state Exp;
branches;
next	14.9;

14.9
date	2005.08.15.19.45.20;	author bob1961;	state Exp;
branches
	14.9.4.1;
next	14.8;

14.8
date	2005.03.24.17.46.43;	author bob1961;	state Exp;
branches;
next	14.7;

14.7
date	2005.01.30.20.31.13;	author brlcad;	state Exp;
branches;
next	14.6;

14.6
date	2004.12.21.06.58.44;	author morrison;	state Exp;
branches;
next	14.5;

14.5
date	2004.12.21.06.44.34;	author morrison;	state Exp;
branches;
next	14.4;

14.4
date	2004.12.21.06.18.48;	author morrison;	state Exp;
branches;
next	14.3;

14.3
date	2004.12.21.05.45.27;	author morrison;	state Exp;
branches;
next	14.2;

14.2
date	2004.12.21.04.43.00;	author morrison;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.31;	author morrison;	state Exp;
branches;
next	1.2;

1.2
date	2004.08.03.20.42.30;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.20.15.20.59;	author morrison;	state Exp;
branches;
next	;

14.9.4.1
date	2005.11.13.13.46.19;	author brlcad;	state Exp;
branches;
next	;

14.16.2.1
date	2007.10.17.17.58.27;	author brlcad;	state Exp;
branches;
next	;


desc
@@


14.17
log
@Activate the fbserv capability on Windows.
@
text
@#                          D M . T C L
# BRL-CAD
#
# Copyright (c) 1998-2007 United States Government as represented by
# the U.S. Army Research Laboratory.
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public License
# version 2.1 as published by the Free Software Foundation.
#
# This library is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this file; see the file named COPYING for more
# information.
#
###
#
# Author -
#	Bob Parker
#
# Source -
#	The U. S. Army Research Laboratory
#	Aberdeen Proving Ground, Maryland  21005
#
#
#
# Description -
#	The Dm class wraps LIBDM's display manager object.
#
::itcl::class Dm {
    inherit itk::Widget

    itk_option define -bg bg Bg {0 0 0}
    itk_option define -debug debug Debug 0
    itk_option define -depthMask depthMask DepthMask 1
    itk_option define -dmsize dmsize Dmsize {512 512}
    itk_option define -light light Light 0
    itk_option define -linestyle linestyle Linestyle 0
    itk_option define -linewidth linewidth Linewidth 1
    itk_option define -perspective perspective Perspective 0
    itk_option define -transparency transparency Transparency 0
    itk_option define -type type Type wgl
    itk_option define -zbuffer zbuffer Zbuffer 0
    itk_option define -zclip zclip Zclip 0

    if {$tcl_platform(os) != "Windows NT"} {
    }
    itk_option define -fb_active fb_active Fb_active 0
    itk_option define -fb_observe fb_observe Fb_observe 1
    itk_option define -listen listen Listen -1

    constructor {args} {}
    destructor {}

    # methods that wrap LIBDM-display-manager-object commands
    public method bg {args}
    public method bounds {args}
    public method clear {}
    public method debug {args}
    public method depthMask {args}
    public method dmsize {args}
    public method drawBegin {}
    public method drawEnd {}
    public method drawGeom {args}
    public method drawLabels {args}
    public method drawLine {x1 y1 x2 y2}
    public method drawPoint {x y}
    public method drawString {str x y size use_aspect}
    public method drawDataAxes {args}
    public method drawModelAxes {args}
    public method drawViewAxes {args}
    public method drawCenterDot {args}
    public method drawScale {args}
    public method fg {args}
    public method flush {}
    public method get_aspect {}
    public method getDrawLabelsHook {args}
    public method light {args}
    public method linestyle {args}
    public method linewidth {args}
    public method loadmat {mat eye}
    public method normal {}
    public method observer {args}
    public method perspective {args}
    public method png {args}
    public method setDrawLabelsHook {args}
    public method sync {}
    public method transparency {args}
    public method zbuffer {args}
    public method zclip {args}

    if {$tcl_platform(os) != "Windows NT"} {
    }
    public method listen {args}
    public method refreshfb {}
    public method fb_active {args}
    public method fb_observe {args}

    public method ? {}
    public method apropos {key}
    public method help {args}
    public method getUserCmds {}

    # methods for handling window events
    protected method toggle_zclip {}
    protected method toggle_zbuffer {}
    protected method toggle_light {}
    protected method toggle_perspective {}
    protected method toggle_transparency {}
    protected method handle_configure {}
    protected method doBindings {}
    protected method changeType {type}
    protected method createDm {type}
    protected method initDm {}

    protected variable width 512
    protected variable height 512
    protected variable invWidth 0.001953125
    protected variable invHeight 0.001953125
    protected variable aspect 1.0
    protected variable invAspect 1.0

    private method helpInit {}

    private variable initializing 1
    private variable tkwin

    if {$tcl_platform(os) != "Windows NT"} {
	private variable priv_type X
    } else {
	private variable priv_type wgl
    }

    private variable help
}

::itcl::body Dm::constructor {args} {
    global tcl_platform

    if {[catch {dm_bestXType :0} priv_type]} {
	if {$tcl_platform(os) != "Windows NT"} {
	    set priv_type X
	} else {
	    set priv_type wgl
	}
    }

    # process options now (i.e. -type may have been specified)
    eval itk_initialize $args
    set initializing 0

    set itk_option(-type) $priv_type
    createDm $itk_option(-type)
    initDm
    helpInit
}

::itcl::body Dm::destructor {} {
#    $tkwin listen -1
    rename $tkwin ""

    catch {delete object $help}
}

::itcl::configbody Dm::dmsize {
    if {!$initializing} {
	# save size
	set s $itk_option(-dmsize)

	# For now, put back the old value.
	# If the size really does change, size will
	# be set in the handle_configure method.
	set itk_option(-dmsize) "$width $height"

	# request a size change
	eval Dm::dmsize $s
    }
}

if {$tcl_platform(os) != "Windows NT"} {
}
::itcl::configbody Dm::listen {
    if {!$initializing} {
	Dm::listen $itk_option(-listen)
    }
}

::itcl::configbody Dm::fb_active {
    if {!$initializing} {
	Dm::fb_active $itk_option(-fb_active)
    }
}

::itcl::configbody Dm::fb_observe {
    if {!$initializing} {
	Dm::fb_observe $itk_option(-fb_observe)
    }
}

::itcl::configbody Dm::bg {
    if {!$initializing} {
	eval Dm::bg $itk_option(-bg)
    }
}

::itcl::configbody Dm::light {
    if {!$initializing} {
	Dm::light $itk_option(-light)
    }
}

::itcl::configbody Dm::depthMask {
    if {!$initializing} {
	Dm::depthMask $itk_option(-depthMask)
    }
}

::itcl::configbody Dm::transparency {
    if {!$initializing} {
	Dm::transparency $itk_option(-transparency)
    }
}

::itcl::configbody Dm::zclip {
    if {!$initializing} {
	Dm::zclip $itk_option(-zclip)
    }
}

::itcl::configbody Dm::zbuffer {
    if {!$initializing} {
	Dm::zbuffer $itk_option(-zbuffer)
    }
}

::itcl::configbody Dm::perspective {
    if {!$initializing} {
	Dm::perspective $itk_option(-perspective)
    }
}

::itcl::configbody Dm::debug {
    if {!$initializing} {
	Dm::debug $itk_option(-debug)
    }
}

::itcl::configbody Dm::linewidth {
    if {!$initializing} {
	Dm::linewidth $itk_option(-linewidth)
    }
}

::itcl::configbody Dm::type {
    switch $itk_option(-type) {
	X -
	ogl -
	wgl {
	    if {$initializing} {
		set priv_type $itk_option(-type)
	    } else {
		changeType $itk_option(-type)
	    }
	}
	default {
	    error "bad type - $itk_option(-type)"
	}
    }
}

::itcl::body Dm::observer {args} {
    eval $itk_component(dm) observer $args
}

::itcl::body Dm::drawBegin {} {
    $itk_component(dm) drawBegin
}

::itcl::body Dm::drawEnd {} {
    $itk_component(dm) drawEnd
}

# Clear the display manager window
::itcl::body Dm::clear {} {
    $itk_component(dm) clear
}

::itcl::body Dm::normal {} {
    $itk_component(dm) normal
}

::itcl::body Dm::loadmat {mat eye} {
    $itk_component(dm) loadmat $mat $eye
}

::itcl::body Dm::drawGeom {args} {
    eval $itk_component(dm) drawGeom $args
}

::itcl::body Dm::drawLabels {args} {
    eval $itk_component(dm) drawLabels $args
}

::itcl::body Dm::drawLine {x1 y1 x2 y2} {
    $itk_component(dm) drawLine $x1 $y1 $x2 $y2
}

::itcl::body Dm::drawPoint {x y} {
    $itk_component(dm) drawPoint $x $y
}

::itcl::body Dm::drawString {str x y size use_aspect} {
    $itk_component(dm) drawString $str $x $y $size $use_aspect
}

::itcl::body Dm::drawDataAxes {args} {
    eval $itk_component(dm) drawDataAxes $args
}

::itcl::body Dm::drawModelAxes {args} {
    eval $itk_component(dm) drawModelAxes $args
}

::itcl::body Dm::drawViewAxes {args} {
    eval $itk_component(dm) drawViewAxes $args
}

::itcl::body Dm::drawCenterDot {args} {
    eval $itk_component(dm) drawCenterDot $args
}

::itcl::body Dm::drawScale {args} {
    eval $itk_component(dm) drawScale $args
}

# Get/set the background color
::itcl::body Dm::bg {args} {
    if {$args == ""} {
	return $itk_option(-bg)
    }

    $itk_component(dm) bg $args
    set itk_option(-bg) $args
}

# Get/set the foreground color
::itcl::body Dm::fg {args} {
    if {$args == ""} {
	$itk_component(dm) fg
    } else {
	$itk_component(dm) fg $args
    }
}

# Get/set the line width
::itcl::body Dm::linewidth {args} {
    if {$args == ""} {
	return $itk_option(-linewidth)
    }

    $itk_component(dm) linewidth $args
    set itk_option(-linewidth) $args
}

# Get/set the line style
::itcl::body Dm::linestyle {args} {
    if {$args == ""} {
	return $itk_option(-linestyle)
    }

    $itk_component(dm) linestyle $args
    set itk_option(-linestyle) $args
}

::itcl::body Dm::zclip {args} {
    if {$args == ""} {
	return $itk_option(-zclip)
    }

    $itk_component(dm) zclip $args
    set itk_option(-zclip) $args
}

::itcl::body Dm::zbuffer {args} {
    if {$args == ""} {
	return $itk_option(-zbuffer)
    }

    $itk_component(dm) zbuffer $args
    set itk_option(-zbuffer) $args
}

# Get/set light
::itcl::body Dm::light {args} {
    if {$args == ""} {
	return $itk_option(-light)
    }

    $itk_component(dm) light $args
    set itk_option(-light) $args
}

# Get/set depthMask
::itcl::body Dm::depthMask {args} {
    if {$args == ""} {
	return $itk_option(-depthMask)
    }

    $itk_component(dm) depthMask $args
    set itk_option(-depthMask) $args
}

# Get/set transparency
::itcl::body Dm::transparency {args} {
    if {$args == ""} {
	return $itk_option(-transparency)
    }

    $itk_component(dm) transparency $args
    set itk_option(-transparency) $args
}

::itcl::body Dm::perspective {args} {
    if {$args == ""} {
	return $itk_option(-perspective)
    }

    $itk_component(dm) perspective $args
    set itk_option(-perspective) $args
}

::itcl::body Dm::png {args} {
    eval $itk_component(dm) png $args
}

::itcl::body Dm::getDrawLabelsHook {args} {
    eval $itk_component(dm) getDrawLabelsHook $args
}

::itcl::body Dm::setDrawLabelsHook {args} {
    eval $itk_component(dm) setDrawLabelsHook $args
}

::itcl::body Dm::bounds {args} {
    eval $itk_component(dm) bounds $args
}

::itcl::body Dm::debug {args} {
    if {$args == ""} {
	return $itk_option(-debug)
    }

    $itk_component(dm) debug $args
    set itk_option(-debug) $args
}

if {$tcl_platform(os) != "Windows NT"} {
}
::itcl::body Dm::listen {args} {
    if {$args == ""} {
	return $itk_option(-listen)
    }

    set itk_option(-listen) [$itk_component(dm) listen $args]
}

::itcl::body Dm::refreshfb {} {
    $itk_component(dm) refreshfb
}

::itcl::body Dm::flush {} {
    $itk_component(dm) flush
}

::itcl::body Dm::sync {} {
    $itk_component(dm) sync
}

::itcl::body Dm::dmsize {args} {
    set nargs [llength $args]

    # get display manager window size
    if {$nargs == 0} {
	return $itk_option(-dmsize)
    }

    if {$nargs == 1} {
	set w $args
	set h $args
    } elseif {$nargs == 2} {
	set w [lindex $args 0]
	set h [lindex $args 1]
    } else {
	error "size: bad size - $args"
    }

    $itk_component(dm) size $w $h
}

::itcl::body Dm::get_aspect {} {
    $itk_component(dm) get_aspect
}

if {$tcl_platform(os) != "Windows NT"} {
}
::itcl::body Dm::fb_active {args} {
    if {$args == ""} {
	return $itk_option(-fb_active)
    }

    if {$args < 0 || 2 < $args} {
	error "Usage: fb_active \[0|1|2\]"
    }

    # update saved value
    set itk_option(-fb_active) $args
}

::itcl::body Dm::fb_observe {args} {
    if {$args == ""} {
	return $itk_option(-fb_observe)
    }

    if {$args != 0 && $args != 1} {
	error "Usage: fb_observe \[0|1\]"
    }

    # update saved value
    set itk_option(-fb_observe) $args

    switch $itk_option(-fb_observe) {
	0 {
	    catch {Dm::observer detach $this}
	    return ""
	}
	1 {
	    Dm::observer attach $this
	}
    }
}

::itcl::body Dm::toggle_zclip {} {
    if {$itk_option(-zclip)} {
	$itk_component(dm) zclip 0
	set itk_option(-zclip) 0
    } else {
	$itk_component(dm) zclip 1
	set itk_option(-zclip) 1
    }
}

::itcl::body Dm::toggle_zbuffer {} {
    if {$itk_option(-zbuffer)} {
	$itk_component(dm) zbuffer 0
	set itk_option(-zbuffer) 0
    } else {
	$itk_component(dm) zbuffer 1
	set itk_option(-zbuffer) 1
    }
}

::itcl::body Dm::toggle_light {} {
    if {$itk_option(-light)} {
	$itk_component(dm) light 0
	set itk_option(-light) 0
    } else {
	$itk_component(dm) light 1
	set itk_option(-light) 1
    }
}

::itcl::body Dm::toggle_perspective {} {
    if {$itk_option(-perspective)} {
	$itk_component(dm) perspective 0
	set itk_option(-perspective) 0
    } else {
	$itk_component(dm) perspective 1
	set itk_option(-perspective) 1
    }
}

::itcl::body Dm::toggle_transparency {} {
    if {$itk_option(-transparency)} {
	$itk_component(dm) transparency 0
	set itk_option(-transparency) 0
    } else {
	$itk_component(dm) transparency 1
	set itk_option(-transparency) 1
    }
}

::itcl::body Dm::handle_configure {} {
    $itk_component(dm) configure
#    [namespace tail $itk_component(dm)] configure

    set itk_option(-dmsize) [$itk_component(dm) size]
    set width [lindex $itk_option(-dmsize) 0]
    set height [lindex $itk_option(-dmsize) 1]
    set invWidth [expr 1.0 / $width]
    set invHeight [expr 1.0 / $height]
    set aspect [get_aspect]
    set invAspect [expr 1.0 / $aspect]
}

::itcl::body Dm::changeType {type} {
    if {$type != $priv_type} {
#	$itk_component(dm) listen -1

	# the close method no longer exists
	#$itk_component(dm) close
	rename $itk_component(dm) ""

	createDm $type
	initDm
	set priv_type $type
    }
}

::itcl::body Dm::createDm {type} {
    itk_component add dm {
	dm_open $itk_interior.dm $type -t 0 -W $width -N $height
    } {}

    pack $itk_component(dm) -fill both -expand yes
    set tkwin $itk_component(dm)
}

::itcl::body Dm::initDm {} {
    global tcl_platform

    eval Dm::dmsize $itk_option(-dmsize)
    if {$tcl_platform(os) != "Windows NT"} {
    }
    Dm::fb_active $itk_option(-fb_active)
    Dm::fb_observe $itk_option(-fb_observe)
    Dm::listen $itk_option(-listen)

    eval Dm::bg $itk_option(-bg)
    Dm::light $itk_option(-light)
    Dm::zclip $itk_option(-zclip)
    Dm::zbuffer $itk_option(-zbuffer)
    Dm::perspective $itk_option(-perspective)
    Dm::debug $itk_option(-debug)
    Dm::linewidth $itk_option(-linewidth)
    Dm::linestyle $itk_option(-linestyle)
    Dm::depthMask $itk_option(-depthMask)
    Dm::transparency $itk_option(-transparency)

    # event bindings
    doBindings
}

::itcl::body Dm::doBindings {} {
    global tcl_platform

    if {$tcl_platform(os) != "Windows NT"} {
	bind $itk_component(dm) <Enter> "focus $itk_component(dm);"
    }

    bind $itk_component(dm) <Configure> "[::itcl::code $this Dm::handle_configure]; break"

    # Key Bindings
    bind $itk_component(dm) <F2> "[::itcl::code $this Dm::toggle_zclip]; break"
    bind $itk_component(dm) <F3> "[::itcl::code $this Dm::toggle_perspective]; break"
    bind $itk_component(dm) <F4> "[::itcl::code $this Dm::toggle_zbuffer]; break"
    bind $itk_component(dm) <F5> "[::itcl::code $this Dm::toggle_light]; break"
    bind $itk_component(dm) <F10> "[::itcl::code $this Dm::toggle_transparency]; break"
}

::itcl::body Dm::? {} {
    return [$help ? 20 4]
}

::itcl::body Dm::apropos {key} {
    return [$help apropos $key]
}

::itcl::body Dm::help {args} {
    return [eval $help get $args]
}

::itcl::body Dm::getUserCmds {} {
    return {png}
}

::itcl::body Dm::helpInit {} {
    set help [cadwidgets::Help #auto]

    $help add png		{{file} {Dump contents of window to a png file}}
}

# Local Variables:
# mode: Tcl
# tab-width: 8
# c-basic-offset: 4
# tcl-indent-level: 4
# indent-tabs-mode: t
# End:
# ex: shiftwidth=4 tabstop=8
@


14.16
log
@Added a drawDataAxes method. Also set the default display type to wgl.
@
text
@a50 3
	itk_option define -fb_active fb_active Fb_active 0
	itk_option define -fb_observe fb_observe Fb_observe 1
	itk_option define -listen listen Listen -1
d52 3
a96 4
	public method listen {args}
	public method refreshfb {}
	public method fb_active {args}
	public method fb_observe {args}
d98 4
d185 4
a188 4
    ::itcl::configbody Dm::listen {
	if {!$initializing} {
	    Dm::listen $itk_option(-listen)
	}
d190 1
d192 3
a194 4
    ::itcl::configbody Dm::fb_active {
	if {!$initializing} {
	    Dm::fb_active $itk_option(-fb_active)
	}
d196 1
d198 3
a200 4
    ::itcl::configbody Dm::fb_observe {
	if {!$initializing} {
	    Dm::fb_observe $itk_option(-fb_observe)
	}
d462 5
a466 4
    ::itcl::body Dm::listen {args} {
	if {$args == ""} {
	    return $itk_option(-listen)
	}
d468 2
a469 2
	set itk_option(-listen) [$itk_component(dm) listen $args]
    }
d471 2
a472 3
    ::itcl::body Dm::refreshfb {} {
	$itk_component(dm) refreshfb
    }
d509 13
a521 4
    ::itcl::body Dm::fb_active {args} {
	if {$args == ""} {
	    return $itk_option(-fb_active)
	}
d523 4
a526 3
	if {$args < 0 || 2 < $args} {
	    error "Usage: fb_active \[0|1|2\]"
	}
d528 2
a529 2
	# update saved value
	set itk_option(-fb_active) $args
d532 2
a533 4
    ::itcl::body Dm::fb_observe {args} {
	if {$args == ""} {
	    return $itk_option(-fb_observe)
	}
d535 4
a538 2
	if {$args != 0 && $args != 1} {
	    error "Usage: fb_observe \[0|1\]"
d540 2
a541 12

	# update saved value
	set itk_option(-fb_observe) $args

	switch $itk_option(-fb_observe) {
	    0 {
		catch {Dm::observer detach $this}
		return ""
	    }
	    1 {
		Dm::observer attach $this
	    }
a636 3
	Dm::fb_active $itk_option(-fb_active)
	Dm::fb_observe $itk_option(-fb_observe)
	Dm::listen $itk_option(-listen)
d638 4
@


14.16.2.1
log
@fix a nasty startup delay in a particular viewer app that uses the Mged megawidget (which in turn uses the Display megawidget, which uses Dm, which had a :0 hard-coded).  this fixes the bug by making it use the DISPLAY environment variable.
@
text
@a142 1
    global env
d144 1
a144 3
    set display $env(DISPLAY)

    if {[catch {dm_bestXType $display} priv_type]} {
@


14.15
log
@Sweeping license updates.  Documentation is fully relicensed to the BSD Documentation License (a minor variant of the FreeBSD Documentation License and BSD License).  All GPL code (mostly application code) is converted to the LGPL and now also specifically declares version 2.1, revoking the blank check to the FSF.  The intent of these sweeping changes are to simplify the licensing terms and increase overall flexibility of use, both externally (to users for their purposes) and internally (to allow application code to be migrated to libraries without creating GPL libraries).  As a collective work, BRL-CAD is now LGPL.
@
text
@d43 1
a43 1
    itk_option define -linewidth linewidth Linewidth 0
d46 1
a46 1
    itk_option define -type type Type X
d73 1
d320 4
@


14.14
log
@update copyright to 2007
@
text
@d9 1
a9 2
# as published by the Free Software Foundation; either version 2 of
# the License, or (at your option) any later version.
d14 1
a14 1
# Library General Public License for more details.
@


14.13
log
@If on Windows, change default display manager type to wgl instead of ogl.
@
text
@d4 1
a4 1
# Copyright (c) 1998-2006 United States Government as represented by
@


14.12
log
@Add support for displaying a scale.
@
text
@d135 1
a135 1
	private variable priv_type ogl
d148 1
a148 1
	    set priv_type ogl
d261 2
a262 1
	ogl {
@


14.11
log
@update copyright to 2006
@
text
@d77 1
d331 4
@


14.10
log
@trailing ws
@
text
@d4 1
a4 1
# Copyright (C) 1998-2005 United States Government as represented by
@


14.9
log
@Mods for Windows port
@
text
@d620 1
a620 1
} 
@


14.9.4.1
log
@merge changes from HEAD aka rel-7-6-4 to the rel-7-6-branch just in case someone peeks a gander or tries to continue/build the branch
@
text
@d620 1
a620 1
}
@


14.8
log
@Add the following methods: drawLabels, getDrawLabelsHook and setDrawLabelsHook
@
text
@a128 1
    private variable priv_type X
d131 6
d141 2
d144 5
a148 1
	set priv_type X
a626 1
	Dm::listen $itk_option(-listen)
d629 1
@


14.7
log
@update copyright to 2005
@
text
@d70 1
d80 1
d89 1
d291 4
d419 8
@


14.6
log
@remove the old copyright notice section as it's been supplanted (and copyright is now claimable in the us via assignmgent)
@
text
@d4 1
a4 1
# Copyright (c) 1998-2004 United States Government as represented by
@


14.5
log
@remove the old distribution notice section
@
text
@a30 3
# Copyright Notice -
#       This software is Copyright (C) 1998-2004 by the United States Army
#       in all countries except the USA.  All rights reserved.
@


14.4
log
@they should have received a copy of the LGPL with LGPL'd files
@
text
@a29 4
# Distribution Notice -
#	Re-distribution of this software is restricted, as described in
#       your "Statement of Terms and Conditions for the Release of
#       The BRL-CAD Package" agreement.
@


14.3
log
@s/GNU Library General/GNU Lesser General/g
@
text
@d17 2
a18 2
# You should have received a copy of the GNU General Public License
# along with this file; see the file named COPYING for more
@


14.2
log
@assign copyright and LGPL
@
text
@d8 1
a8 1
# modify it under the terms of the GNU Library General Public License
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d1 21
a21 1
##                 D M . T C L
@


1.2
log
@apply Bob's provided patches from 20040630.  this includes itcl namespace scoping, windows DLL exporting, and wdb arb edit support
@
text
@d645 9
@


1.1
log
@Vast reorganization begins.  Sources moved from top-level directories into src/.
@
text
@d22 1
a22 1
class Dm {
a28 2
    itk_option define -fb_active fb_active Fb_active 0
    itk_option define -fb_observe fb_observe Fb_observe 1
a31 1
    itk_option define -listen listen Listen -1
d38 6
a68 1
    public method listen {args}
a73 1
    public method refreshfb {}
d79 6
a84 2
    public method fb_active {args}
    public method fb_observe {args}
d119 1
a119 1
body Dm::constructor {args} {
d134 2
a135 2
body Dm::destructor {} {
    $tkwin listen -1
d141 1
a141 1
configbody Dm::dmsize {
d156 5
a160 3
configbody Dm::listen {
    if {!$initializing} {
	Dm::listen $itk_option(-listen)
a161 1
}
d163 4
a166 3
configbody Dm::fb_active {
    if {!$initializing} {
	Dm::fb_active $itk_option(-fb_active)
a167 1
}
d169 4
a172 3
configbody Dm::fb_observe {
    if {!$initializing} {
	Dm::fb_observe $itk_option(-fb_observe)
d176 1
a176 1
configbody Dm::bg {
d182 1
a182 1
configbody Dm::light {
d188 1
a188 1
configbody Dm::depthMask {
d194 1
a194 1
configbody Dm::transparency {
d200 1
a200 1
configbody Dm::zclip {
d206 1
a206 1
configbody Dm::zbuffer {
d212 1
a212 1
configbody Dm::perspective {
d218 1
a218 1
configbody Dm::debug {
d224 1
a224 1
configbody Dm::linewidth {
d230 1
a230 1
configbody Dm::type {
d246 1
a246 1
body Dm::observer {args} {
d250 1
a250 1
body Dm::drawBegin {} {
d254 1
a254 1
body Dm::drawEnd {} {
d259 1
a259 1
body Dm::clear {} {
d263 1
a263 1
body Dm::normal {} {
d267 1
a267 1
body Dm::loadmat {mat eye} {
d271 1
a271 1
body Dm::drawGeom {args} {
d275 1
a275 1
body Dm::drawLine {x1 y1 x2 y2} {
d279 1
a279 1
body Dm::drawPoint {x y} {
d283 1
a283 1
body Dm::drawString {str x y size use_aspect} {
d287 1
a287 1
body Dm::drawModelAxes {args} {
d291 1
a291 1
body Dm::drawViewAxes {args} {
d295 1
a295 1
body Dm::drawCenterDot {args} {
d300 1
a300 1
body Dm::bg {args} {
d310 1
a310 1
body Dm::fg {args} {
d319 1
a319 1
body Dm::linewidth {args} {
d329 1
a329 1
body Dm::linestyle {args} {
d338 1
a338 1
body Dm::zclip {args} {
d347 1
a347 1
body Dm::zbuffer {args} {
d357 1
a357 1
body Dm::light {args} {
d367 1
a367 1
body Dm::depthMask {args} {
d377 1
a377 1
body Dm::transparency {args} {
d386 1
a386 1
body Dm::perspective {args} {
d395 1
a395 1
body Dm::png {args} {
d399 1
a399 1
body Dm::bounds {args} {
d403 1
a403 1
body Dm::debug {args} {
d412 7
a418 3
body Dm::listen {args} {
    if {$args == ""} {
	return $itk_option(-listen)
d421 3
a423 5
    set itk_option(-listen) [$itk_component(dm) listen $args]
}

body Dm::refreshfb {} {
    $itk_component(dm) refreshfb
d426 1
a426 1
body Dm::flush {} {
d430 1
a430 1
body Dm::sync {} {
d434 1
a434 1
body Dm::dmsize {args} {
d455 1
a455 1
body Dm::get_aspect {} {
d459 9
a467 4
body Dm::fb_active {args} {
    if {$args == ""} {
	return $itk_option(-fb_active)
    }
d469 2
a470 2
    if {$args < 0 || 2 < $args} {
	error "Usage: fb_active \[0|1|2\]"
d473 4
a476 3
    # update saved value
    set itk_option(-fb_active) $args
}
d478 3
a480 4
body Dm::fb_observe {args} {
    if {$args == ""} {
	return $itk_option(-fb_observe)
    }
d482 2
a483 3
    if {$args != 0 && $args != 1} {
	error "Usage: fb_observe \[0|1\]"
    }
d485 8
a492 10
    # update saved value
    set itk_option(-fb_observe) $args

    switch $itk_option(-fb_observe) {
	0 {
	    catch {Dm::observer detach $this}
	    return ""
	}
	1 {
	    Dm::observer attach $this
d497 1
a497 1
body Dm::toggle_zclip {} {
d507 1
a507 1
body Dm::toggle_zbuffer {} {
d517 1
a517 1
body Dm::toggle_light {} {
d527 1
a527 1
body Dm::toggle_perspective {} {
d537 1
a537 1
body Dm::toggle_transparency {} {
d547 1
a547 1
body Dm::handle_configure {} {
d549 1
d560 1
a560 1
body Dm::changeType {type} {
d562 1
a562 1
	$itk_component(dm) listen -1
d574 1
a574 1
body Dm::createDm {type} {
d583 3
a585 1
body Dm::initDm {} {
d587 5
a591 3
    Dm::listen $itk_option(-listen)
    Dm::fb_active $itk_option(-fb_active)
    Dm::fb_observe $itk_option(-fb_observe)
d607 8
a614 3
body Dm::doBindings {} {
    bind $itk_component(dm) <Enter> "focus $itk_component(dm);"
    bind $itk_component(dm) <Configure> "[code $this Dm::handle_configure]; break"
d617 5
a621 5
    bind $itk_component(dm) <F2> "[code $this Dm::toggle_zclip]; break"
    bind $itk_component(dm) <F3> "[code $this Dm::toggle_perspective]; break"
    bind $itk_component(dm) <F4> "[code $this Dm::toggle_zbuffer]; break"
    bind $itk_component(dm) <F5> "[code $this Dm::toggle_light]; break"
    bind $itk_component(dm) <F10> "[code $this Dm::toggle_transparency]; break"
d624 1
a624 1
body Dm::? {} {
d628 1
a628 1
body Dm::apropos {key} {
d632 1
a632 1
body Dm::help {args} {
d636 1
a636 1
body Dm::getUserCmds {} {
d640 1
a640 1
body Dm::helpInit {} {
@

