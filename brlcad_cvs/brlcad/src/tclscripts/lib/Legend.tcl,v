head	14.10;
access;
symbols
	rel-7-10-4:14.10
	STABLE:14.10.0.2
	stable-branch:14.7
	rel-7-10-2:14.10
	rel-7-10-0:14.10
	rel-7-8-4:14.8
	rel-7-8-2:14.8
	rel-7-8-0:14.8
	trimnurbs-branch:14.8.0.2
	help:14.8
	temp_tag:14.7
	bobWinPort-20051223-freeze:14.7
	postmerge-20051223-bobWinPort:14.7
	premerge-20051223-bobWinPort:14.7
	rel-7-6-6:14.7
	rel-7-6-4:14.7
	rel-7-6-2:14.7
	rel-7-6-branch:14.7.0.6
	rel-7-6-0:14.7
	rel-7-4-2:14.7
	rel-7-4-branch:14.7.0.4
	bobWinPort:14.7.0.2
	rel-7-4-0:14.7
	rel-7-2-6:14.7
	rel-7-2-4:14.7
	rel-7-2-2:14.7
	rel-7-2-0:14.7
	rel-7-0-4:14.6
	rel-7-0-2:14.6
	rel-7-0-1:14.6
	opensource-post:14.6
	opensource-pre:1.2
	rel-7-0-branch:1.2.0.2
	rel-7-0:1.2;
locks; strict;
comment	@# @;


14.10
date	2007.01.23.01.13.50;	author brlcad;	state Exp;
branches;
next	14.9;

14.9
date	2007.01.20.14.37.02;	author brlcad;	state Exp;
branches;
next	14.8;

14.8
date	2006.01.18.06.46.25;	author brlcad;	state Exp;
branches;
next	14.7;

14.7
date	2005.01.30.20.31.13;	author brlcad;	state Exp;
branches;
next	14.6;

14.6
date	2004.12.21.06.58.44;	author morrison;	state Exp;
branches;
next	14.5;

14.5
date	2004.12.21.06.44.34;	author morrison;	state Exp;
branches;
next	14.4;

14.4
date	2004.12.21.06.18.48;	author morrison;	state Exp;
branches;
next	14.3;

14.3
date	2004.12.21.05.45.27;	author morrison;	state Exp;
branches;
next	14.2;

14.2
date	2004.12.21.04.43.00;	author morrison;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.31;	author morrison;	state Exp;
branches;
next	1.2;

1.2
date	2004.08.03.20.42.30;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.20.15.20.59;	author morrison;	state Exp;
branches;
next	;


desc
@@


14.10
log
@Sweeping license updates.  Documentation is fully relicensed to the BSD Documentation License (a minor variant of the FreeBSD Documentation License and BSD License).  All GPL code (mostly application code) is converted to the LGPL and now also specifically declares version 2.1, revoking the blank check to the FSF.  The intent of these sweeping changes are to simplify the licensing terms and increase overall flexibility of use, both externally (to users for their purposes) and internally (to allow application code to be migrated to libraries without creating GPL libraries).  As a collective work, BRL-CAD is now LGPL.
@
text
@#                      L E G E N D . T C L
# BRL-CAD
#
# Copyright (c) 1998-2007 United States Government as represented by
# the U.S. Army Research Laboratory.
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public License
# version 2.1 as published by the Free Software Foundation.
#
# This library is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this file; see the file named COPYING for more
# information.
#
###
#
# Author -
#	Bob Parker
#
# Source -
#	The U. S. Army Research Laboratory
#	Aberdeen Proving Ground, Maryland  21005
#
#
#
# Description -
#       Widget for displaying colors and their corresponding values.
#

option add *Legend.height 30 widgetDefault

::itcl::class cadwidgets::Legend {
    inherit itk::Widget

    constructor {args} {}
    destructor {}

    itk_option define -range range Range {0.0 1.0}
    itk_option define -rgbRange rgbRange RgbRange {{255 255 255} {255 0 0}}
    itk_option define -slots slots Slots 10
    itk_option define -colorFunc colorFunc ColorFunc ""

    public method drawToCanvas {c x y w h tags}
    public method update {}
    public method getColor {val}
    public method rampRGB {val}
    public method postscript {args}
    public method rgbValid {r g b}

    private variable low 0.0
    private variable high 1.0
    private variable dv 1.0
    private variable invDv 1.0

    # colors to ramp between
    private variable r1 255
    private variable g1 255
    private variable b1 255
    private variable r2 255
    private variable g2 0
    private variable b2 0

    # ranges for r, g and b
    private variable dR 0
    private variable dG -255
    private variable dB -255

    # used for clamping
    private variable lowR 255
    private variable lowG 0
    private variable lowB 0
    private variable highR 255
    private variable highG 255
    private variable highB 255

    # x and y offsets for drawing legend
    private variable xoff 20
    private variable yoff 15
}

::itcl::configbody cadwidgets::Legend::range {
    if {[llength $itk_option(-range)] != 2} {
	error "range: must specify min and max"
    }

    set min [lindex $itk_option(-range) 0]
    set max [lindex $itk_option(-range) 1]

    if {![string is double $min]} {
	error "range: bad value - $min"
    }

    if {![string is double $max]} {
	error "range: bad value - $max"
    }

    if {$max <= $min} {
	error "range: max <= min not allowed"
    }

    set low $min
    set high $max
    set dv [expr {$high - $low}]
    set invDv [expr {1.0 / $dv}]

    cadwidgets::Legend::update
}

::itcl::configbody cadwidgets::Legend::rgbRange {
    if {[llength $itk_option(-rgbRange)] != 2} {
	error "rgbRange: must specify two RGB's"
    }

    set rgb1 [lindex $itk_option(-rgbRange) 0]
    set rgb2 [lindex $itk_option(-rgbRange) 1]

    # must have three values for each color
    if {[llength $rgb1] != 3} {
	error "rgbRange: must specify R, G, and B for each color"
    }

    if {[llength $rgb2] != 3} {
	error "rgbRange: must specify R, G, and B for each color"
    }

    if {![eval cadwidgets::Legend::rgbValid $rgb1]} {
	error "Improper color specification - $rgb1"
    }

    if {![eval cadwidgets::Legend::rgbValid $rgb2]} {
	error "Improper color specification - $rgb2"
    }

    set r1 [lindex $rgb1 0]
    set g1 [lindex $rgb1 1]
    set b1 [lindex $rgb1 2]
    set r2 [lindex $rgb2 0]
    set g2 [lindex $rgb2 1]
    set b2 [lindex $rgb2 2]

    set dR [expr $r2 - $r1]
    set dG [expr $g2 - $g1]
    set dB [expr $b2 - $b1]

    if {$r1 <= $r2} {
	set lowR $r1
	set highR $r2
    } else {
	set lowR $r2
	set highR $r1
    }

    if {$g1 <= $g2} {
	set lowG $g1
	set highG $g2
    } else {
	set lowG $g2
	set highG $g1
    }

    if {$b1 <= $b2} {
	set lowB $b1
	set highB $b2
    } else {
	set lowB $b2
	set highB $b1
    }

    cadwidgets::Legend::update
}

::itcl::configbody cadwidgets::Legend::slots {
    if {$itk_option(-slots) < 2} {
	error "Must be 2 or greater"
    }

    cadwidgets::Legend::update
}

::itcl::body cadwidgets::Legend::constructor {args} {
    itk_component add canvas {
	::canvas $itk_interior.canvas
    } {
	usual
	keep -width -height
    }

    eval itk_initialize $args
    ::bind $itk_component(canvas) <Configure> [::itcl::code $this update]
    pack $itk_component(canvas) -expand yes -fill both
}

::itcl::body cadwidgets::Legend::destructor {} {
}

::itcl::body cadwidgets::Legend::drawToCanvas {c x y w h tags} {
    # calculate slot increment
    set si [expr {$w / double($itk_option(-slots))}]

    # calculate value increment
    set vi [expr {$dv / double($itk_option(-slots) - 1)}]

    set y1 $y
    set y2 [expr {$h + $y1}]
    for {set i 0} {$i < $itk_option(-slots)} {incr i} {
	set x1 [expr {int($i * $si) + $x}]
	set x2 [expr {int(($i + 1) * $si) + $x}]
	set val [expr {$vi * $i + $low}]
	if {$itk_option(-colorFunc) == ""} {
	    set rgb [eval format "#%.2x%.2x%.2x" [rampRGB $val]]
	} else {
	    set rgb [eval format "#%.2x%.2x%.2x" [eval $itk_option(-colorFunc) $low $high $val]]
	}
	$c create rectangle $x1 $y1 $x2 $y2 \
		-outline "" -fill $rgb -tags $tags
    }
    $c create text $x $y -text $low -anchor s -tags $tags
    $c create text [expr {$w + $x}] $y -text $high -anchor s -tags $tags

    return
}

::itcl::body cadwidgets::Legend::update {} {
    $itk_component(canvas) delete all
    set w [expr {[winfo width $itk_component(canvas)] - (2 * $xoff)}]
    set h [expr {[winfo height $itk_component(canvas)] - $yoff}]
    drawToCanvas $itk_component(canvas) $xoff $yoff $w $h legend
}

::itcl::body cadwidgets::Legend::getColor {val} {
    if {$itk_option(-colorFunc) != ""} {
	return [$itk_option(-colorFunc) $low $high $val]
    } else {
	return [rampRGB $val]
    }
}

::itcl::body cadwidgets::Legend::rampRGB {val} {
    set sv [expr {($val - $low) * $invDv}]
    set r [expr {int($r1 + $sv * $dR)}]
    set g [expr {int($g1 + $sv * $dG)}]
    set b [expr {int($b1 + $sv * $dB)}]

    # clamp r, g and b
    if {$r < $lowR} {
	set r $lowR
    } elseif {$highR < $r} {
	set r $highR
    }

    if {$g < $lowG} {
	set g $lowG
    } elseif {$highG < $g} {
	set g $highG
    }

    if {$b < $lowB} {
	set b $lowB
    } elseif {$highB < $b} {
	set b $highB
    }

    return "$r $g $b"
}

::itcl::body cadwidgets::Legend::postscript {args} {
    eval $itk_component(canvas) postscript $args
}

::itcl::body cadwidgets::Legend::rgbValid {r g b} {
    if {![string is integer $r]} {
	    return 0
    }
    if {![string is integer $g]} {
	    return 0
    }
    if {![string is integer $b]} {
	    return 0
    }
    if {$r < 0 || 255 < $r} {
	return 0
    }
    if {$g < 0 || 255 < $g} {
	return 0
    }
    if {$b < 0 || 255 < $b} {
	return 0
    }

    return 1
}

# Local Variables:
# mode: Tcl
# tab-width: 8
# c-basic-offset: 4
# tcl-indent-level: 4
# indent-tabs-mode: t
# End:
# ex: shiftwidth=4 tabstop=8
@


14.9
log
@update copyright to 2007
@
text
@d9 1
a9 2
# as published by the Free Software Foundation; either version 2 of
# the License, or (at your option) any later version.
d14 1
a14 1
# Library General Public License for more details.
@


14.8
log
@update copyright to 2006
@
text
@d4 1
a4 1
# Copyright (c) 1998-2006 United States Government as represented by
@


14.7
log
@update copyright to 2005
@
text
@d4 1
a4 1
# Copyright (C) 1998-2005 United States Government as represented by
@


14.6
log
@remove the old copyright notice section as it's been supplanted (and copyright is now claimable in the us via assignmgent)
@
text
@d4 1
a4 1
# Copyright (c) 1998-2004 United States Government as represented by
@


14.5
log
@remove the old distribution notice section
@
text
@a30 3
# Copyright Notice -
#       This software is Copyright (C) 1998-2004 by the United States Army
#       in all countries except the USA.  All rights reserved.
@


14.4
log
@they should have received a copy of the LGPL with LGPL'd files
@
text
@a29 4
# Distribution Notice -
#	Re-distribution of this software is restricted, as described in
#       your "Statement of Terms and Conditions for the Release of
#       The BRL-CAD Package" agreement.
@


14.3
log
@s/GNU Library General/GNU Lesser General/g
@
text
@d17 2
a18 2
# You should have received a copy of the GNU General Public License
# along with this file; see the file named COPYING for more
@


14.2
log
@assign copyright and LGPL
@
text
@d8 1
a8 1
# modify it under the terms of the GNU Library General Public License
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d1 21
a21 1
##                 L E G E N D . T C L
@


1.2
log
@apply Bob's provided patches from 20040630.  this includes itcl namespace scoping, windows DLL exporting, and wdb arb edit support
@
text
@d285 9
@


1.1
log
@Vast reorganization begins.  Sources moved from top-level directories into src/.
@
text
@d25 1
a25 1
class cadwidgets::Legend {
d74 1
a74 1
configbody cadwidgets::Legend::range {
d102 1
a102 1
configbody cadwidgets::Legend::rgbRange {
d165 1
a165 1
configbody cadwidgets::Legend::slots {
d173 1
a173 1
body cadwidgets::Legend::constructor {args} {
d182 1
a182 1
    ::bind $itk_component(canvas) <Configure> [code $this update]
d186 1
a186 1
body cadwidgets::Legend::destructor {} {
d189 1
a189 1
body cadwidgets::Legend::drawToCanvas {c x y w h tags} {
d216 1
a216 1
body cadwidgets::Legend::update {} {
d223 1
a223 1
body cadwidgets::Legend::getColor {val} {
d231 1
a231 1
body cadwidgets::Legend::rampRGB {val} {
d259 1
a259 1
body cadwidgets::Legend::postscript {args} {
d263 1
a263 1
body cadwidgets::Legend::rgbValid {r g b} {
@

