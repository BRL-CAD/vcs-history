head	14.14;
access;
symbols
	rel-7-10-4:14.14
	STABLE:14.14.0.2
	stable-branch:14.8
	rel-7-10-2:14.14
	rel-7-10-0:14.14
	rel-7-8-4:14.12
	rel-7-8-2:14.12
	rel-7-8-0:14.12
	trimnurbs-branch:14.12.0.2
	help:14.12
	temp_tag:14.11
	bobWinPort-20051223-freeze:14.9.2.3
	postmerge-20051223-bobWinPort:14.11
	premerge-20051223-bobWinPort:14.10
	rel-7-6-6:14.10
	rel-7-6-4:14.10
	rel-7-6-2:14.9
	rel-7-6-branch:14.9.0.4
	rel-7-6-0:14.9
	rel-7-4-2:14.8
	rel-7-4-branch:14.8.0.2
	bobWinPort:14.9.0.2
	rel-7-4-0:14.8
	rel-7-2-6:14.8
	rel-7-2-4:14.8
	rel-7-2-2:14.8
	rel-7-2-0:14.7
	rel-7-0-4:14.6
	rel-7-0-2:14.6
	rel-7-0-1:14.6
	opensource-post:14.6
	opensource-pre:1.3
	rel-7-0-branch:1.3.0.2
	rel-7-0:1.3;
locks; strict;
comment	@# @;


14.14
date	2007.01.23.01.13.50;	author brlcad;	state Exp;
branches;
next	14.13;

14.13
date	2007.01.20.14.37.02;	author brlcad;	state Exp;
branches;
next	14.12;

14.12
date	2006.01.18.06.46.25;	author brlcad;	state Exp;
branches;
next	14.11;

14.11
date	2005.12.23.21.26.48;	author bob1961;	state Exp;
branches;
next	14.10;

14.10
date	2005.10.23.04.44.38;	author brlcad;	state Exp;
branches;
next	14.9;

14.9
date	2005.08.15.19.35.26;	author bob1961;	state Exp;
branches
	14.9.2.1
	14.9.4.1;
next	14.8;

14.8
date	2005.03.24.18.33.03;	author bob1961;	state Exp;
branches;
next	14.7;

14.7
date	2005.01.30.20.31.13;	author brlcad;	state Exp;
branches;
next	14.6;

14.6
date	2004.12.21.06.58.44;	author morrison;	state Exp;
branches;
next	14.5;

14.5
date	2004.12.21.06.44.34;	author morrison;	state Exp;
branches;
next	14.4;

14.4
date	2004.12.21.06.18.48;	author morrison;	state Exp;
branches;
next	14.3;

14.3
date	2004.12.21.05.45.27;	author morrison;	state Exp;
branches;
next	14.2;

14.2
date	2004.12.21.04.43.00;	author morrison;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.31;	author morrison;	state Exp;
branches;
next	1.3;

1.3
date	2004.08.04.18.01.27;	author morrison;	state Exp;
branches;
next	1.2;

1.2
date	2004.08.03.20.42.30;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.20.15.21.00;	author morrison;	state Exp;
branches;
next	;

14.9.2.1
date	2005.10.19.12.23.10;	author bob1961;	state Exp;
branches;
next	14.9.2.2;

14.9.2.2
date	2005.10.25.17.42.14;	author bob1961;	state Exp;
branches;
next	14.9.2.3;

14.9.2.3
date	2005.12.05.22.51.45;	author bob1961;	state Exp;
branches;
next	;

14.9.4.1
date	2005.11.13.13.46.19;	author brlcad;	state Exp;
branches;
next	;


desc
@@


14.14
log
@Sweeping license updates.  Documentation is fully relicensed to the BSD Documentation License (a minor variant of the FreeBSD Documentation License and BSD License).  All GPL code (mostly application code) is converted to the LGPL and now also specifically declares version 2.1, revoking the blank check to the FSF.  The intent of these sweeping changes are to simplify the licensing terms and increase overall flexibility of use, both externally (to users for their purposes) and internally (to allow application code to be migrated to libraries without creating GPL libraries).  As a collective work, BRL-CAD is now LGPL.
@
text
@#                        M G E D . T C L
# BRL-CAD
#
# Copyright (c) 1998-2007 United States Government as represented by
# the U.S. Army Research Laboratory.
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public License
# version 2.1 as published by the Free Software Foundation.
#
# This library is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this file; see the file named COPYING for more
# information.
#
###
#
# Author -
#	Bob Parker
#
# Source -
#	The U. S. Army Research Laboratory
#	Aberdeen Proving Ground, Maryland  21005
#
#
#
# Description -
#	The Mged class inherits from QuadDisplay and contains
#       a Database object.
#

option add *Mged.width 400 widgetDefault
option add *Mged.height 400 widgetDefault

::itcl::class Mged {
    inherit QuadDisplay

    itk_option define -unitsCallback unitsCallback UnitsCallback ""
    itk_option define -autoViewEnable autoViewEnable AutoViewEnable 1

    constructor {dbOrFile args} {
	eval QuadDisplay::constructor
    } {}
    destructor {}

    #----------------------------------#
    # Commands related to the Database #
    #----------------------------------#
    #
    public {
	method adjust {args}
	method attr {args}
	method binary {args}
	method blast {args}
	method c {args}
	method cat {args}
	method clear {args}
	method color {args}
	method comb {args}
	method concat {args}
	method copyeval {args}
	method cp {args}
	method dbip {args}
	method draw {args}
	method dump {args}
	method dup {args}
	method E {args}
	method erase {args}
	method erase_all {args}
	method ev {args}
	method expand {args}
	method facetize {args}
	method find {args}
	method form {args}
	method g {args}
	method get {args}
	method get_type {args}
	method get_eyemodel {viewObj}
	method hide {args}
	method how {args}
	method i {args}
	method illum {obj}
	method importFg4Section {args}
	method keep {args}
	method kill {args}
	method killall {args}
	method killtree {args}
	method l {args}
	method label {args}
	method listeval {args}
	method ls {args}
	method lt {args}
	method make_bb {name args}
	method make_name {args}
	method match {args}
	method move_arb_edge {args}
	method move_arb_face {args}
	method mv {args}
	method mvall {args}
	method nmg_collapse {args}
	method nmg_simplify {args}
	method ocenter {args}
	method orotate {args}
	method oscale {args}
	method otranslate {args}
	method opendb {args}
	method overlay {args}
	method pathlist {args}
	method paths {args}
	method prcolor {args}
	method push {args}
	method put {args}
	method r {args}
	method report {args}
	method rm {args}
	method rmap {args}
	method rotate_arb_face {args}
	method rt_gettrees {args}
	method set_outputHandler {args}
	method set_transparency {args}
	method shaded_mode {args}
	method shareDb {_db}
	method shells {args}
	method showmats {args}
	method summary {args}
	method title {args}
	method tol {args}
	method tops {args}
	method track {args}
	method tree {args}
	method unhide {args}
	method units {args}
	method vdraw {args}
	method whatid {args}
	method whichair {args}
	method whichid {args}
	method who {args}
	method xpush {args}
	method zap {args}

	method attachObservers {}
	method detachObservers {}

	method ? {}
	method apropos {key}
	method help {args}
	method getUserCmds {}
    }

    private {
	variable db
	variable dg
    }
}

::itcl::body Mged::constructor {dbOrFile args} {
    set db [Database \#auto $dbOrFile]
    set dg [$db Drawable::get_dgname]
    addAll $dg

    # sync up the units between the Database and QuadDisplay
    QuadDisplay::units [$db units -s]

    catch {eval itk_initialize $args}
}

::itcl::body Mged::destructor {} {
    ::itcl::delete object $db
}

#----------------------------------#
# Commands related to the Database #
#----------------------------------#
#
::itcl::body Mged::opendb {args} {
    set rval [eval $db open $args]

    # sync up the units between the Database and QuadDisplay
    QuadDisplay::units [$db units -s]

    return $rval
}

::itcl::body Mged::match {args} {
    eval $db match $args
}

::itcl::body Mged::get {args} {
    eval $db get $args
}

::itcl::body Mged::get_type {args} {
    eval $db get_type $args
}

::itcl::body Mged::put {args} {
    eval $db put $args
}

::itcl::body Mged::adjust {args} {
    eval $db adjust $args
}

::itcl::body Mged::attr {args} {
    eval $db attr $args
}

::itcl::body Mged::form {args} {
    eval $db form $args
}

::itcl::body Mged::tops {args} {
    eval $db tops $args
}

::itcl::body Mged::shells {args} {
    eval $db shells $args
}

::itcl::body Mged::showmats {args} {
    eval $db showmats $args
}

::itcl::body Mged::summary {args} {
    eval $db summary $args
}

::itcl::body Mged::rt_gettrees {args} {
    eval $db rt_gettrees $args
}

::itcl::body Mged::set_outputHandler {args} {
    eval $db set_outputHandler $args
}

::itcl::body Mged::set_transparency {args} {
    eval $db set_transparency $args
}

::itcl::body Mged::shaded_mode {args} {
    eval $db shaded_mode $args
}

::itcl::body Mged::shareDb {_db} {
    $db shareDb $_db
}

::itcl::body Mged::dump {args} {
    eval $db dump $args
}

::itcl::body Mged::dbip {args} {
    eval $db dbip $args
}

::itcl::body Mged::l {args} {
    eval $db l $args
}

::itcl::body Mged::listeval {args} {
    eval $db listeval $args
}

::itcl::body Mged::ls {args} {
    eval $db ls $args
}

::itcl::body Mged::lt {args} {
    eval $db lt $args
}

::itcl::body Mged::pathlist {args} {
    eval $db pathlist $args
}

::itcl::body Mged::paths {args} {
    eval $db paths $args
}

::itcl::body Mged::expand {args} {
    eval $db expand $args
}

::itcl::body Mged::facetize {args} {
    eval $db facetize $args
}

::itcl::body Mged::kill {args} {
    eval $db kill $args
}

::itcl::body Mged::killall {args} {
    eval $db killall $args
}

::itcl::body Mged::killtree {args} {
    eval $db killtree $args
}

::itcl::body Mged::cp {args} {
    eval $db cp $args
}

::itcl::body Mged::move_arb_edge {args} {
    eval $db move_arb_edge $args
}

::itcl::body Mged::move_arb_face {args} {
    eval $db move_arb_face $args
}

::itcl::body Mged::mv {args} {
    eval $db mv $args
}

::itcl::body Mged::mvall {args} {
    eval $db mvall $args
}

::itcl::body Mged::nmg_collapse {args} {
    eval $db nmg_collapse $args
}

::itcl::body Mged::nmg_simplify {args} {
    eval $db nmg_simplify $args
}

::itcl::body Mged::ocenter {args} {
    eval $db ocenter $args
}

::itcl::body Mged::orotate {args} {
    eval $db orotate $args
}
::itcl::body Mged::oscale {args} {
    eval $db oscale $args
}

::itcl::body Mged::otranslate {args} {
    eval $db otranslate $args
}

::itcl::body Mged::copyeval {args} {
    eval $db copyeval $args
}

::itcl::body Mged::concat {args} {
    eval $db concat $args
}

::itcl::body Mged::dup {args} {
    eval $db dup $args
}

::itcl::body Mged::g {args} {
    eval $db g $args
}

::itcl::body Mged::rm {args} {
    eval $db rm $args
}

::itcl::body Mged::rmap {args} {
    eval $db rmap $args
}

::itcl::body Mged::rotate_arb_face {args} {
    eval $db rotate_arb_face $args
}

::itcl::body Mged::c {args} {
    eval $db c $args
}

::itcl::body Mged::comb {args} {
    eval $db comb $args
}

::itcl::body Mged::find {args} {
    eval $db find $args
}

::itcl::body Mged::whichair {args} {
    eval $db whichair $args
}

::itcl::body Mged::whichid {args} {
    eval $db whichid $args
}

::itcl::body Mged::title {args} {
    eval $db title $args
}

::itcl::body Mged::track {args} {
    eval $db track $args
}

::itcl::body Mged::tree {args} {
    eval $db tree $args
}

::itcl::body Mged::unhide {args} {
    eval $db unhide $args
}

::itcl::body Mged::color {args} {
    eval $db color $args
}

::itcl::body Mged::prcolor {args} {
    eval $db prcolor $args
}

::itcl::body Mged::tol {args} {
    eval $db tol $args
}

::itcl::body Mged::push {args} {
    eval $db push $args
}

::itcl::body Mged::whatid {args} {
    eval $db whatid $args
}

::itcl::body Mged::keep {args} {
    eval $db keep $args
}

::itcl::body Mged::cat {args} {
    eval $db cat $args
}

::itcl::body Mged::hide {args} {
    eval $db hide $args
}

::itcl::body Mged::how {args} {
    eval $db how $args
}

::itcl::body Mged::i {args} {
    eval $db i $args
}

::itcl::body Mged::importFg4Section {args} {
    eval $db importFg4Section $args
}

::itcl::body Mged::make_bb {name args} {
    eval $db make_bb $name $args
}

::itcl::body Mged::make_name {args} {
    eval $db make_name $args
}

::itcl::body Mged::units {args} {
    set rval [eval QuadDisplay::units $args]

    # must be a "get"
    if {[llength $args] == 0} {
	return $rval
    }

    if {$itk_option(-unitsCallback) != ""} {
	catch {eval $itk_option(-unitsCallback) $args}
    }

    eval $db units $args
}

#
# get_eyemodel - returns a list containing the viewsize, orientation,
#                and eye_pt strings. Useful for constructing Rt scripts
#
::itcl::body Mged::get_eyemodel {viewObj} {
    return [eval $db get_eyemodel $viewObj]
}

::itcl::body Mged::draw {args} {
    set who [who]

    if {$who == ""} {
	set blank 1
    } else {
	set blank 0
    }

    if {$blank && $itk_option(-autoViewEnable)} {
	# stop observing the Drawable
	detach_drawableAll $dg

	catch {eval $db draw $args} result

	# resume observing the Drawable
	attach_drawableAll $dg

	# stop observing the View
	detach_viewAll
	autoviewAll
	# resume observing the View
	attach_viewAll

	# We need to refresh here because nobody was observing
	# during the changes to the Drawable and the View. This
	# was done in order to prevent multiple refreshes.
	refreshAll
    } else {
	catch {eval $db draw $args} result
    }

    return $result
}

::itcl::body Mged::E {args} {
    set who [who]

    if {$who == ""} {
	set blank 1
    } else {
	set blank 0
    }

    if {$blank} {
	# stop observing the Drawable
	detach_drawableAll $dg
	set result [eval $db E $args]
	# resume observing the Drawable
	attach_drawableAll $dg

	# stop observing the View
	detach_viewAll
	autoviewAll
	# resume observing the View
	attach_viewAll

	# We need to refresh here because nobody was observing
	# during the changes to the Drawable and the View. This
	# was done in order to prevent multiple refreshes.
	refreshAll
    } else {
	set result [eval $db E $args]

	#XXX This is a temporary hack. I need to look at why
	#    the Drawable's observers are not being notified.
	refreshAll
    }

    return $result
}

::itcl::body Mged::erase {args} {
    eval $db erase $args
}

::itcl::body Mged::who {args} {
    eval $db who $args
}

::itcl::body Mged::xpush {args} {
    eval $db xpush $args
}

::itcl::body Mged::zap {args} {
    eval $db zap $args
}

::itcl::body Mged::binary {args} {
    eval $db binary $args
}

::itcl::body Mged::blast {args} {
    eval $db blast $args
}

::itcl::body Mged::clear {args} {
    eval $db clear $args
}

::itcl::body Mged::ev {args} {
    eval $db ev $args
}

::itcl::body Mged::erase_all {args} {
    eval $db erase_all $args
}

::itcl::body Mged::overlay {args} {
    eval $db overlay $args
}

::itcl::body Mged::vdraw {args} {
    eval $db vdraw $args
}

::itcl::body Mged::illum {args} {
    eval $db illum $args
}

::itcl::body Mged::label {args} {
    eval $db label $args
}

::itcl::body Mged::r {args} {
    eval $db r $args
}

::itcl::body Mged::report {args} {
    eval $db report $args
}

::itcl::body Mged::attachObservers {} {
    attach_drawableAll $dg
    attach_viewAll
}

::itcl::body Mged::detachObservers {} {
    detach_drawableAll $dg
    detach_viewAll
}

::itcl::body Mged::? {} {
    return "[QuadDisplay::?]\n[$db ?]"
}

::itcl::body Mged::apropos {key} {
    return "[QuadDisplay::apropos $key] [$db apropos $key]"
}

::itcl::body Mged::help {args} {
    if {[llength $args] && [lindex $args 0] != {}} {
	if {[catch {eval QuadDisplay::help $args} result]} {
	    set result [eval $db help $args]
	}

	return $result
    }

    # list all help messages for QuadDisplay and Db
    return "[QuadDisplay::help][$db help]"
}

::itcl::body Mged::getUserCmds {} {
    return "? apropos help [QuadDisplay::getUserCmds] [$db getUserCmds]"
}

# Local Variables:
# mode: Tcl
# tab-width: 8
# c-basic-offset: 4
# tcl-indent-level: 4
# indent-tabs-mode: t
# End:
# ex: shiftwidth=4 tabstop=8
@


14.13
log
@update copyright to 2007
@
text
@d9 1
a9 2
# as published by the Free Software Foundation; either version 2 of
# the License, or (at your option) any later version.
d14 1
a14 1
# Library General Public License for more details.
@


14.12
log
@update copyright to 2006
@
text
@d4 1
a4 1
# Copyright (c) 1998-2006 United States Government as represented by
@


14.11
log
@Merge of bobWinPort
@
text
@d4 1
a4 1
# Copyright (C) 1998-2005 United States Government as represented by
@


14.10
log
@trailing ws
@
text
@d46 1
a46 1
    constructor {file args} {
d107 4
d127 1
d161 2
a162 2
::itcl::body Mged::constructor {file args} {
    set db [Database #auto $file]
d249 4
d333 15
@


14.9
log
@Add set_outputHandler method
@
text
@d143 1
a143 1
	
@


14.9.4.1
log
@merge changes from HEAD aka rel-7-6-4 to the rel-7-6-branch just in case someone peeks a gander or tries to continue/build the branch
@
text
@d143 1
a143 1

@


14.9.2.1
log
@Add the following methods: erotate, escale and etranslate
@
text
@a74 3
	method erotate {args}
	method escale {args}
	method etranslate {args}
a335 11
::itcl::body Mged::erotate {args} {
    eval $db erotate $args
}
::itcl::body Mged::escale {args} {
    eval $db escale $args
}

::itcl::body Mged::etranslate {args} {
    eval $db etranslate $args
}

@


14.9.2.2
log
@Mods to allow sharing of the database object
@
text
@d46 1
a46 1
    constructor {dbOrFile args} {
a125 1
	method shareDb {_db}
d159 2
a160 2
::itcl::body Mged::constructor {dbOrFile args} {
    set db [Database \#auto $dbOrFile]
a246 4
::itcl::body Mged::shareDb {_db} {
    $db shareDb $_db
}

@


14.9.2.3
log
@Changed erotate, etranslate and escale method names to orotate, otranslate and oscale, respectively. Added the ocenter method
@
text
@d75 3
a109 4
	method ocenter {args}
	method orotate {args}
	method oscale {args}
	method otranslate {args}
a331 15
::itcl::body Mged::ocenter {args} {
    eval $db ocenter $args
}

::itcl::body Mged::orotate {args} {
    eval $db orotate $args
}
::itcl::body Mged::oscale {args} {
    eval $db oscale $args
}

::itcl::body Mged::otranslate {args} {
    eval $db otranslate $args
}

d344 11
@


14.8
log
@Add the following methods: facetize, importFg4Section, attachObservers, detachObservers
@
text
@d120 1
d232 4
@


14.7
log
@update copyright to 2005
@
text
@d44 1
a44 1
    itk_option define -autoViewEnable autoViewEnable AllowAutoView 1
d77 1
d88 1
d139 3
d167 1
a167 1
    ::::itcl::delete object $db
d175 6
a180 1
    eval $db open $args
d275 4
d423 4
d470 3
a472 1
	set result [eval $db draw $args]
d487 1
a487 1
	set result [eval $db draw $args]
d511 1
a511 1
	autoviewall
d590 10
@


14.6
log
@remove the old copyright notice section as it's been supplanted (and copyright is now claimable in the us via assignmgent)
@
text
@d4 1
a4 1
# Copyright (c) 1998-2004 United States Government as represented by
@


14.5
log
@remove the old distribution notice section
@
text
@a30 3
# Copyright Notice -
#       This software is Copyright (C) 1998-2004 by the United States Army
#       in all countries except the USA.  All rights reserved.
@


14.4
log
@they should have received a copy of the LGPL with LGPL'd files
@
text
@a29 4
# Distribution Notice -
#	Re-distribution of this software is restricted, as described in
#       your "Statement of Terms and Conditions for the Release of
#       The BRL-CAD Package" agreement.
@


14.3
log
@s/GNU Library General/GNU Lesser General/g
@
text
@d17 2
a18 2
# You should have received a copy of the GNU General Public License
# along with this file; see the file named COPYING for more
@


14.2
log
@assign copyright and LGPL
@
text
@d8 1
a8 1
# modify it under the terms of the GNU Library General Public License
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d1 21
a21 1
##                 M G E D . T C L
@


1.3
log
@more itcl scoping
@
text
@d581 9
@


1.2
log
@apply Bob's provided patches from 20040630.  this includes itcl namespace scoping, windows DLL exporting, and wdb arb edit support
@
text
@d102 1
d310 4
@


1.1
log
@Vast reorganization begins.  Sources moved from top-level directories into src/.
@
text
@d27 1
a27 1
itcl::class Mged {
d31 1
d68 1
d86 2
d102 1
d136 1
a136 1
itcl::body Mged::constructor {file args} {
d147 2
a148 2
itcl::body Mged::destructor {} {
    ::delete object $db
d155 1
a155 1
itcl::body Mged::opendb {args} {
d159 1
a159 1
itcl::body Mged::match {args} {
d163 1
a163 1
itcl::body Mged::get {args} {
d167 5
a171 1
itcl::body Mged::put {args} {
d175 1
a175 1
itcl::body Mged::adjust {args} {
d179 1
a179 1
itcl::body Mged::attr {args} {
d183 1
a183 1
itcl::body Mged::form {args} {
d187 1
a187 1
itcl::body Mged::tops {args} {
d191 1
a191 1
itcl::body Mged::shells {args} {
d195 1
a195 1
itcl::body Mged::showmats {args} {
d199 1
a199 1
itcl::body Mged::summary {args} {
d203 1
a203 1
itcl::body Mged::rt_gettrees {args} {
d207 1
a207 1
itcl::body Mged::set_transparency {args} {
d211 1
a211 1
itcl::body Mged::shaded_mode {args} {
d215 1
a215 1
itcl::body Mged::dump {args} {
d219 1
a219 1
itcl::body Mged::dbip {args} {
d223 1
a223 1
itcl::body Mged::l {args} {
d227 1
a227 1
itcl::body Mged::listeval {args} {
d231 1
a231 1
itcl::body Mged::ls {args} {
d235 1
a235 1
itcl::body Mged::lt {args} {
d239 1
a239 1
itcl::body Mged::pathlist {args} {
d243 1
a243 1
itcl::body Mged::paths {args} {
d247 1
a247 1
itcl::body Mged::expand {args} {
d251 1
a251 1
itcl::body Mged::kill {args} {
d255 1
a255 1
itcl::body Mged::killall {args} {
d259 1
a259 1
itcl::body Mged::killtree {args} {
d263 1
a263 1
itcl::body Mged::cp {args} {
d267 9
a275 1
itcl::body Mged::mv {args} {
d279 1
a279 1
itcl::body Mged::mvall {args} {
d283 1
a283 1
itcl::body Mged::nmg_collapse {args} {
d287 1
a287 1
itcl::body Mged::nmg_simplify {args} {
d291 1
a291 1
itcl::body Mged::copyeval {args} {
d295 1
a295 1
itcl::body Mged::concat {args} {
d299 1
a299 1
itcl::body Mged::dup {args} {
d303 1
a303 1
itcl::body Mged::g {args} {
d307 1
a307 1
itcl::body Mged::rm {args} {
d311 5
a315 1
itcl::body Mged::c {args} {
d319 1
a319 1
itcl::body Mged::comb {args} {
d323 1
a323 1
itcl::body Mged::find {args} {
d327 1
a327 1
itcl::body Mged::whichair {args} {
d331 1
a331 1
itcl::body Mged::whichid {args} {
d335 1
a335 1
itcl::body Mged::title {args} {
d339 1
a339 1
itcl::body Mged::track {args} {
d343 1
a343 1
itcl::body Mged::tree {args} {
d347 1
a347 1
itcl::body Mged::unhide {args} {
d351 1
a351 1
itcl::body Mged::color {args} {
d355 1
a355 1
itcl::body Mged::prcolor {args} {
d359 1
a359 1
itcl::body Mged::tol {args} {
d363 1
a363 1
itcl::body Mged::push {args} {
d367 1
a367 1
itcl::body Mged::whatid {args} {
d371 1
a371 1
itcl::body Mged::keep {args} {
d375 1
a375 1
itcl::body Mged::cat {args} {
d379 1
a379 1
itcl::body Mged::hide {args} {
d383 1
a383 1
itcl::body Mged::how {args} {
d387 1
a387 1
itcl::body Mged::i {args} {
d391 1
a391 1
itcl::body Mged::make_bb {name args} {
d395 1
a395 1
itcl::body Mged::make_name {args} {
d399 1
a399 1
itcl::body Mged::units {args} {
d418 1
a418 1
itcl::body Mged::get_eyemodel {viewObj} {
d422 1
a422 1
itcl::body Mged::draw {args} {
d431 1
a431 1
    if {$blank} {
d455 1
a455 1
itcl::body Mged::E {args} {
d492 1
a492 1
itcl::body Mged::erase {args} {
d496 1
a496 1
itcl::body Mged::who {args} {
d500 1
a500 1
itcl::body Mged::xpush {args} {
d504 1
a504 1
itcl::body Mged::zap {args} {
d508 1
a508 1
itcl::body Mged::binary {args} {
d512 1
a512 1
itcl::body Mged::blast {args} {
d516 1
a516 1
itcl::body Mged::clear {args} {
d520 1
a520 1
itcl::body Mged::ev {args} {
d524 1
a524 1
itcl::body Mged::erase_all {args} {
d528 1
a528 1
itcl::body Mged::overlay {args} {
d532 1
a532 1
itcl::body Mged::vdraw {args} {
d536 1
a536 1
itcl::body Mged::illum {args} {
d540 1
a540 1
itcl::body Mged::label {args} {
d544 1
a544 1
itcl::body Mged::r {args} {
d548 1
a548 1
itcl::body Mged::report {args} {
d552 1
a552 1
itcl::body Mged::? {} {
d556 1
a556 1
itcl::body Mged::apropos {key} {
d560 1
a560 1
itcl::body Mged::help {args} {
d573 1
a573 1
itcl::body Mged::getUserCmds {} {
@

