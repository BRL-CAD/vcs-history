head	14.15;
access;
symbols
	rel-7-10-4:14.14
	STABLE:14.14.0.2
	stable-branch:14.4
	rel-7-10-2:14.14
	rel-7-10-0:14.14
	rel-7-8-4:14.5
	rel-7-8-2:14.5
	rel-7-8-0:14.5
	trimnurbs-branch:14.5.0.2
	help:14.5
	temp_tag:14.4
	bobWinPort-20051223-freeze:14.4
	postmerge-20051223-bobWinPort:14.4
	premerge-20051223-bobWinPort:14.4
	rel-7-6-6:14.4
	rel-7-6-4:14.4
	rel-7-6-2:14.4
	rel-7-6-branch:14.4.0.6
	rel-7-6-0:14.4
	rel-7-4-2:14.4
	rel-7-4-branch:14.4.0.4
	bobWinPort:14.4.0.2
	rel-7-4-0:14.4
	rel-7-2-6:14.4
	rel-7-2-4:14.4
	rel-7-2-2:14.4
	rel-7-2-0:14.4
	rel-7-0-4:14.3
	rel-7-0-2:14.3
	rel-7-0-1:14.3
	opensource-post:14.3
	opensource-pre:1.4
	rel-7-0-branch:1.4.0.2
	rel-7-0:1.4;
locks; strict;
comment	@# @;


14.15
date	2007.12.01.18.36.53;	author bob1961;	state Exp;
branches;
next	14.14;

14.14
date	2007.04.02.02.24.23;	author brlcad;	state Exp;
branches;
next	14.13;

14.13
date	2007.03.02.02.25.47;	author brlcad;	state Exp;
branches;
next	14.12;

14.12
date	2007.03.02.01.43.24;	author brlcad;	state Exp;
branches;
next	14.11;

14.11
date	2007.03.02.01.33.04;	author brlcad;	state Exp;
branches;
next	14.10;

14.10
date	2007.02.20.03.10.30;	author brlcad;	state Exp;
branches;
next	14.9;

14.9
date	2007.01.23.01.13.48;	author brlcad;	state Exp;
branches;
next	14.8;

14.8
date	2007.01.20.14.37.01;	author brlcad;	state Exp;
branches;
next	14.7;

14.7
date	2007.01.19.20.51.20;	author brlcad;	state Exp;
branches;
next	14.6;

14.6
date	2007.01.19.20.45.08;	author brlcad;	state Exp;
branches;
next	14.5;

14.5
date	2006.01.18.06.46.24;	author brlcad;	state Exp;
branches;
next	14.4;

14.4
date	2005.01.30.20.31.12;	author brlcad;	state Exp;
branches;
next	14.3;

14.3
date	2004.12.21.05.45.27;	author morrison;	state Exp;
branches;
next	14.2;

14.2
date	2004.12.21.04.55.21;	author morrison;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.31;	author morrison;	state Exp;
branches;
next	1.4;

1.4
date	2004.10.22.18.42.27;	author butler;	state Exp;
branches;
next	1.3;

1.3
date	2004.10.14.12.05.22;	author morrison;	state Exp;
branches;
next	1.2;

1.2
date	2004.10.13.16.21.01;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.20.15.20.56;	author morrison;	state Exp;
branches;
next	;


desc
@@


14.15
log
@Created the make_tclIndex proc.
@
text
@#!/bin/sh
#                         A M I . T C L
# BRL-CAD
#
# Copyright (c) 2004-2007 United States Government as represented by
# the U.S. Army Research Laboratory.
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public License
# version 2.1 as published by the Free Software Foundation.
#
# This library is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this file; see the file named COPYING for more
# information.
#
###
# This is a comment \
/bin/echo "This is not a shell script"
# This is a comment \
exit

# make the tclIndex
proc make_tclIndex {argv} {
    foreach arg $argv {
	# generate a tclIndex file in the arg dir
	puts "Generating a tclIndex in $arg"
	catch {auto_mkindex $arg *.tcl *.itcl *.itk *.sh}

	if {![file exists "$arg/tclIndex"]} {
	    puts "ERROR: tclIndex does not exist in $arg"
	    continue
	}

	set tclIndex ""
	set header ""

	# sort the tclIndex
	set fd [open "$arg/tclIndex"]
	while {[gets $fd data] >= 0} {
	    if {[string compare -length 3 $data "set"] == 0} {
		lappend tclIndex $data
	    } else {
		lappend header $data
	    }
	}
	close $fd

	# write out the sorted tclIndex
	set fd [open "$arg/tclIndex" {WRONLY TRUNC CREAT}]
	foreach line $header {
	    puts $fd $line
	}
	foreach line [lsort $tclIndex] {
	    puts $fd $line
	}
	close $fd
    }
}

if {![info exists argv]} {
    return 0
}

make_tclIndex $argv

# Local Variables:
# mode: Tcl
# tab-width: 8
# c-basic-offset: 4
# tcl-indent-level: 4
# indent-tabs-mode: t
# End:
# ex: shiftwidth=4 tabstop=8
@


14.14
log
@the script wasn't correctly parsing multiple directory paths and also similarly did not function with a distcheck or other compilation out of place.  It still has a problem if it cannot write to the source dir since the index is created where the sources files are.
@
text
@d28 10
a37 3
if {![info exists argv]} {
    return 0
}
d39 2
a40 9
foreach arg $argv {
    # generate a tclIndex file in the arg dir
    puts "Generating a tclIndex in $arg"
    catch {auto_mkindex $arg *.tcl *.itcl *.itk *.sh}

    if {![file exists "$arg/tclIndex"]} {
	puts "ERROR: tclIndex does not exist in $arg"
	continue
    }
d42 10
a51 2
    set tclIndex ""
    set header ""
d53 7
a59 7
    # sort the tclIndex
    set fd [open "$arg/tclIndex"]
    while {[gets $fd data] >= 0} {
	if {[string compare -length 3 $data "set"] == 0} {
	    lappend tclIndex $data
	} else {
	    lappend header $data
d61 1
d63 1
a63 1
    close $fd
d65 2
a66 9
    # write out the sorted tclIndex
    set fd [open "$arg/tclIndex" {WRONLY TRUNC CREAT}]
    foreach line $header {
	puts $fd $line
    }
    foreach line [lsort $tclIndex] {
	puts $fd $line
    }
    close $fd
d69 2
@


14.13
log
@aha! enlightenment hath arrived.  creating the index files actually sources the file args provided so when it ends up running the other amp?i.tcl script, it was choking on the error.  just return 0 to indicate success.
@
text
@d28 1
a28 6
if {[info exists argv]} {
    foreach arg $argv {
	catch {auto_mkindex $arg *.tcl *.itcl *.itk *.sh}
	puts $arg
    }
} else {
d32 9
a40 3
if {![file exists tclIndex]} {
    puts "ERROR: tclIndex does not exist in [pwd]"
}
d42 2
a43 2
lappend tclIndex
lappend header
d45 8
a52 7
# sort the tclIndex
set fd [open tclIndex]
while {[gets $fd data] >= 0} {
    if {[string compare -length 3 $data "set"] == 0} {
	lappend tclIndex $data
    } else {
	lappend header $data
d54 1
a54 2
}
close $fd
d56 9
a64 7
# write out the sorted tclIndex
set fd [open tclIndex {WRONLY TRUNC CREAT}]
foreach line $header {
    puts $fd $line
}
foreach line [lsort $tclIndex] {
    puts $fd $line
a65 1
close $fd
@


14.12
log
@heh, there's quality control for ya.. check for existance of variable name so we actually do some work..
@
text
@d33 2
a38 1
    exit 1
@


14.11
log
@abort with a clean message if a tclIndex file does not exist since open's failure message is less than ideal
@
text
@d28 1
a28 1
if {[info exists $argv]} {
@


14.10
log
@make sure argv is set to avoid btclsh sourcing errors
@
text
@d35 5
@


14.9
log
@Sweeping license updates.  Documentation is fully relicensed to the BSD Documentation License (a minor variant of the FreeBSD Documentation License and BSD License).  All GPL code (mostly application code) is converted to the LGPL and now also specifically declares version 2.1, revoking the blank check to the FSF.  The intent of these sweeping changes are to simplify the licensing terms and increase overall flexibility of use, both externally (to users for their purposes) and internally (to allow application code to be migrated to libraries without creating GPL libraries).  As a collective work, BRL-CAD is now LGPL.
@
text
@d28 5
a32 3
foreach arg $argv {
    catch {auto_mkindex $arg *.tcl *.itcl *.itk *.sh}
    puts $arg
@


14.8
log
@update copyright to 2007
@
text
@d10 1
a10 2
# as published by the Free Software Foundation; either version 2 of
# the License, or (at your option) any later version.
d15 1
a15 1
# Library General Public License for more details.
@


14.7
log
@initialize the lists, so it doesn't error if there was no header or contents
@
text
@d5 1
a5 1
# Copyright (c) 2004-2006 United States Government as represented by
@


14.6
log
@for ease of (cvs diff) comparisons and review -- and since they are presently stored in CVS for Windows build convenience -- sort the contents of the tclIndex and pkgIndex.tcl files (taking the comment header into account)
@
text
@d34 3
@


14.5
log
@update copyright to 2006
@
text
@d28 1
d34 21
@


14.4
log
@update copyright to 2005
@
text
@d5 1
a5 1
# Copyright (C) 2004-2005 United States Government as represented by
@


14.3
log
@s/GNU Library General/GNU Lesser General/g
@
text
@d5 2
a6 2
# Copyright (c) 2004 United States Government as represented by the
# U.S. Army Research Laboratory.
@


14.2
log
@assign copyright and LGPL
@
text
@d9 1
a9 1
# modify it under the terms of the GNU Library General Public License
d18 1
a18 1
# You should have received a copy of the GNU Library General Public
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d2 21
@


1.4
log
@changes to eliminate BRLCAD_ROOT
@
text
@d11 9
@


1.3
log
@include shell scripts in the generation of the indexes since it may really be a tcl script too
@
text
@d2 4
a5 45
# this is a comment \
if test "$BRLCAD_ROOT" = ""
# this is a comment \
then
# this is a comment \
	BRLCAD_ROOT=/usr/brlcad
# this is a comment \
	export BRLCAD_ROOT
# this is a comment \
fi

# this is a comment \
if test -x ${BRLCAD_ROOT}/bin/btclsh
# this is a comment \
then
# this is a comment \
	BTCLSH=${BRLCAD_ROOT}/bin/btclsh
# this is a comment \
elif test -x /usr/bin/btclsh
# this is a comment \
then
# this is a comment \
	BTCLSH=/usr/bin/btclsh
# this is a comment \
elif test -x /usr/local/bin/btclsh
# this is a comment \
then
# this is a comment \
	BTCLSH=/usr/local/bin/btclsh
# this is a comment \
else
# this is a comment \
	echo "ERROR: could not find btclsh"
# this is a comment \
	exit 1
# this is a comment \
fi
# this is a comment \
DOLLAR_ZERO="$0" ; DOLLAR_AT="$@@" ; EXEC_COMMAND="$BTCLSH $DOLLAR_ZERO $DOLLAR_AT"
# this is a comment \
echo "Running \`exec $EXEC_COMMAND\`"
# the next line restarts using btclsh \
exec $EXEC_COMMAND

# exec $BTCLSH "$0" "$@@"
@


1.2
log
@blather if btclsh cannot be found
@
text
@d49 1
a49 1
    catch {auto_mkindex $arg *.tcl *.itcl *.itk}
@


1.1
log
@Vast reorganization begins.  Sources moved from top-level directories into src/.
@
text
@d34 2
@

