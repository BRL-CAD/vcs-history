head	14.16;
access;
symbols
	rel-7-10-4:14.14
	STABLE:14.14.0.2
	stable-branch:14.8
	rel-7-10-2:14.14
	rel-7-10-0:14.14
	rel-7-8-4:14.11
	rel-7-8-2:14.11
	rel-7-8-0:14.11
	trimnurbs-branch:14.11.0.2
	help:14.11
	temp_tag:14.10
	bobWinPort-20051223-freeze:14.8
	postmerge-20051223-bobWinPort:14.10
	premerge-20051223-bobWinPort:14.10
	rel-7-6-6:14.10
	rel-7-6-4:14.10
	rel-7-6-2:14.9
	rel-7-6-branch:14.9.0.2
	rel-7-6-0:14.9
	rel-7-4-2:14.8
	rel-7-4-branch:14.8.0.4
	bobWinPort:14.8.0.2
	rel-7-4-0:14.8
	rel-7-2-6:14.8
	rel-7-2-4:14.8
	rel-7-2-2:14.8
	rel-7-2-0:14.8
	rel-7-0-4:14.7
	rel-7-0-2:14.7
	rel-7-0-1:14.7
	opensource-post:14.7
	opensource-pre:1.1
	rel-7-0-branch:1.1.0.2
	rel-7-0:1.1;
locks; strict;
comment	@ * @;


14.16
date	2007.12.01.22.22.32;	author brlcad;	state Exp;
branches;
next	14.15;

14.15
date	2007.09.15.16.23.14;	author brlcad;	state Exp;
branches;
next	14.14;

14.14
date	2007.02.02.08.48.29;	author brlcad;	state Exp;
branches;
next	14.13;

14.13
date	2007.01.23.01.13.39;	author brlcad;	state Exp;
branches;
next	14.12;

14.12
date	2007.01.20.14.36.56;	author brlcad;	state Exp;
branches;
next	14.11;

14.11
date	2006.01.18.06.46.18;	author brlcad;	state Exp;
branches;
next	14.10;

14.10
date	2005.10.23.04.44.36;	author brlcad;	state Exp;
branches;
next	14.9;

14.9
date	2005.08.24.19.46.43;	author brlcad;	state Exp;
branches
	14.9.2.1;
next	14.8;

14.8
date	2005.01.30.20.31.04;	author brlcad;	state Exp;
branches;
next	14.7;

14.7
date	2004.12.21.07.25.30;	author morrison;	state Exp;
branches;
next	14.6;

14.6
date	2004.12.21.06.58.43;	author morrison;	state Exp;
branches;
next	14.5;

14.5
date	2004.12.21.06.50.59;	author morrison;	state Exp;
branches;
next	14.4;

14.4
date	2004.12.21.06.18.48;	author morrison;	state Exp;
branches;
next	14.3;

14.3
date	2004.12.21.05.45.26;	author morrison;	state Exp;
branches;
next	14.2;

14.2
date	2004.12.21.02.32.51;	author morrison;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.16;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.09.15.12.08.59;	author jra;	state Exp;
branches;
next	;

14.9.2.1
date	2005.11.13.13.46.17;	author brlcad;	state Exp;
branches;
next	;


desc
@@


14.16
log
@more finder quelling
@
text
@/*                  R T S E R V E R T E S T . C
 * BRL-CAD
 *
 * Copyright (c) 2004-2007 United States Government as represented by
 * the U.S. Army Research Laboratory.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * version 2.1 as published by the Free Software Foundation.
 *
 * This library is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this file; see the file named COPYING for more
 * information.
 */
/** @@file rtserverTest.c
 *		R T S E R V E R . C
 *
 *	library for BRL-CAD raytrace server
 *
 *  Author -
 *      John R. Anderson
 *
 *  Source -
 *      The U. S. Army Research Laboratory
 *      Aberdeen Proving Ground, Maryland  21005-5068  USA
 */

#ifndef lint
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/librtserver/rtserverTest.c,v 14.15 2007/09/15 16:23:14 brlcad Exp $ (ARL)";
#endif

#include "common.h"

#include <math.h>
#include <stdio.h>
#include <string.h>
#include <pthread.h>

#include "machine.h"
#include "vmath.h"
#include "nmg.h"
#include "raytrace.h"
#include "nurb.h"
#include "rtgeom.h"
#include "rtserver.h"

#ifdef HAVE_JAVAVM_JNI_H
#  include <JavaVM/jni.h>
#elif defined(HAVE_JNI_H)
#  include <jni.h>
#else
#  error ERROR: jni.h could not be found
#endif
#include "RtServerImpl.h"

void *workerThread( void *gsize );

#define RTS_ADD_RAY_TO_JOB( _ajob, _aray ) bu_ptbl_ins( &(_ajob)->rtjob_rays, (long *)(_aray) )

/* usage statement */
static char *usage="Usage:\n\t%s [-n num_cpus] [-t num_threads] [-q num_queues] [-a] [-s grid_size] [-v] [-o object] model.g\n";

int
main( int argc, char *argv[] )
{
	int ret;
	int nthreads=1;
	int c;
	extern char *bu_optarg;
	extern int bu_optind, bu_opterr, optopt;
	struct rtserver_job *ajob;
	struct rtserver_result *aresult;
	struct xray *aray;
	char *name;
	int i, j, k;
	int grid_size = 64;
	fastf_t cell_size;
	vect_t model_size;
	vect_t xdir, zdir;
	int job_count=0;
	char **result_map;
	struct bu_ptbl objs;
	int my_session_id;
	int queue_count=3;
	int thread_count=2;
	int verbose=0;
	point_t min, max;
	int worker_count = 1;
	pthread_t *worker_thread=NULL;

	/* Things like bu_malloc() must have these initialized for use with parallel processing */
	bu_semaphore_init( RT_SEM_LAST );

	/* initialize the list of BRL-CAD objects to be raytraced (this is used for the "-o" option) */
	bu_ptbl_init( &objs, 64, "objects" );

	/* initialize the rtserver resources (cached structures) */
	rts_resource_init();

	/* process command line args */
	while( (c=bu_getopt( argc, argv, "w:vs:t:q:o:" ) ) != -1 ) {
		switch( c ) {
		case 'w':	/* number of worker threads */
			worker_count = atoi( bu_optarg );
			break;
		case 't':	/* number of server threads to start */
			thread_count = atoi( bu_optarg );
			break;
		case 'q':	/* number of request queues to create */
			queue_count = atoi( bu_optarg );
			break;
		case 's':	/* set the grid size (default is 64x64) */
			grid_size = atoi( bu_optarg );
			break;
		case 'v':	/* turn on verbose logging */
			verbose = 1;
			break;
		case 'o':	/* add an object name to the list of BRL-CAD objects to raytrace */
			bu_ptbl_ins( &objs, (long *)bu_optarg );
			break;
		default:	/* ERROR */
			bu_exit(1, usage, argv[0] );
		}
	}

	/* load geometry */
	if( BU_PTBL_LEN( &objs ) > 0 ) {
		char **objects;

		objects = (char **)bu_malloc( BU_PTBL_LEN( &objs ) * sizeof( char *), "objects" );
		for( i=0 ; i<BU_PTBL_LEN( &objs ) ; i++ ) {
			objects[i] = (char *)BU_PTBL_GET( &objs, i );
		}
		my_session_id = rts_load_geometry( argv[bu_optind], 0, BU_PTBL_LEN( &objs ), objects, thread_count );
	} else {
		if( bu_optind >= argc ) {
			fprintf( stderr, "No BRL-CAD model specified\n" );
			bu_exit(1, usage, argv[0] );
		}
		my_session_id = rts_load_geometry( argv[bu_optind], 0, 0, (char **)NULL, thread_count );
	}

	if( my_session_id < 0 ) {
		bu_exit(2, "Failed to load geometry from file (%s)\n", argv[bu_optind] );
	}

	/* exercise the open session capability */
	my_session_id = rts_open_session();
	rts_close_session( my_session_id );
	my_session_id = rts_open_session();
	if( my_session_id < 0 ) {
		bu_exit(2, "Failed to open session\n" );
	} else {
		fprintf( stderr, "Using session id %d\n", my_session_id );
	}

	/* start the server threads */
	rts_start_server_threads( thread_count, queue_count );

	worker_thread = (pthread_t *)realloc( worker_thread, worker_count * sizeof( pthread_t ) );
	for( k=0 ; k<worker_count ; k++ ) {
		pthread_create( &worker_thread[k], NULL, workerThread, (void *)grid_size );
	}

	for( k=0 ; k<worker_count ; k++ ) {
		pthread_join( worker_thread[k], NULL );
	}
}

void *
workerThread( void *gsize )
{
	int my_session_id;
	vect_t xdir, ydir, zdir, model_size;
	point_t min, max;
	double cell_size;
	int i, j, k;
	struct rtserver_job *ajob;
	struct xray *aray;
	struct rtserver_result *aresult;
	int grid_size = (int)gsize;

	my_session_id = rts_open_session();
	fprintf( stderr, "worker thread using sesion id = %d\n", my_session_id );
	/* submit some jobs */
	VSET( xdir, 1, 0, 0 );
	VSET( zdir, 0, 0, 1 );
	get_model_extents( my_session_id, min, max );
	VSUB2( model_size, max, min );
	cell_size = model_size[X] / grid_size;

	while( 1 ) {
	for( i=0 ; i<grid_size ; i++ ) {
		for( j=0 ; j<grid_size ; j++ ) {
			/* RTS_GET_RTSERVER_JOB( ajob ); */
			ajob = rts_get_rtserver_job();
			ajob->rtjob_id = (grid_size - i - 1)*1000 + j;
			ajob->sessionid = my_session_id;
			/* RTS_GET_XRAY( aray ); */
			aray = rts_get_xray();
			VJOIN2( aray->r_pt,
				min,
				i*cell_size,
				zdir,
				j*cell_size,
				xdir );
			aray->index = ajob->rtjob_id;
			VSET( aray->r_dir, 0, 1, 0 );

			RTS_ADD_RAY_TO_JOB( ajob, aray );

			aresult = rts_submit_job_and_wait( ajob );
			rts_free_rtserver_result( aresult );

		}
	}

	rts_pr_resource_summary();

	fprintf( stderr, "max working threads = %d\n", get_max_working_threads() );

	}

	return 0;
}

/*
 * Local Variables:
 * mode: C
 * tab-width: 8
 * c-basic-offset: 4
 * indent-tabs-mode: t
 * End:
 * ex: shiftwidth=4 tabstop=8
 */
@


14.15
log
@more c89 embracing.  c89 provides string.h for all of the various str*() and mem*() functions, so remove the check for its presence.  there is still likely to be work required for strict c89 conformance for the various bsd strings.h functions that may be in use.
@
text
@d34 1
a34 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/librtserver/rtserverTest.c,v 14.14 2007/02/02 08:48:29 brlcad Exp $ (ARL)";
d127 1
a127 2
			fprintf( stderr, usage, argv[0] );
			exit( 1 );
d143 1
a143 2
			fprintf( stderr, usage, argv[0] );
			exit( 1 );
d149 1
a149 2
		fprintf( stderr, "Failed to load geometry from file (%s)\n", argv[bu_optind] );
		exit( 2 );
d157 1
a157 2
		fprintf( stderr, "Failed to open session\n" );
		exit( 2 );
@


14.14
log
@convert all of the lingering getopt calls to bu_getopt (as well as the related getopt globals optind, opterr, optarg) -- libbu's getopt has the benefit of being re-entrant and is portable to environments where getopt() may not be available.
@
text
@d34 1
a34 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/librtserver/rtserverTest.c,v 14.13 2007/01/23 01:13:39 brlcad Exp $ (ARL)";
a38 1

a40 1
#ifdef HAVE_STRING_H
a41 3
#else
#include <strings.h>
#endif
d43 1
@


14.13
log
@Sweeping license updates.  Documentation is fully relicensed to the BSD Documentation License (a minor variant of the FreeBSD Documentation License and BSD License).  All GPL code (mostly application code) is converted to the LGPL and now also specifically declares version 2.1, revoking the blank check to the FSF.  The intent of these sweeping changes are to simplify the licensing terms and increase overall flexibility of use, both externally (to users for their purposes) and internally (to allow application code to be migrated to libraries without creating GPL libraries).  As a collective work, BRL-CAD is now LGPL.
@
text
@d34 1
a34 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/librtserver/rtserverTest.c,v 14.12 2007/01/20 14:36:56 brlcad Exp $ (ARL)";
d78 2
a79 2
	extern char *optarg;
	extern int optind, opterr, optopt;
d110 1
a110 1
	while( (c=getopt( argc, argv, "w:vs:t:q:o:" ) ) != -1 ) {
d113 1
a113 1
			worker_count = atoi( optarg );
d116 1
a116 1
			thread_count = atoi( optarg );
d119 1
a119 1
			queue_count = atoi( optarg );
d122 1
a122 1
			grid_size = atoi( optarg );
d128 1
a128 1
			bu_ptbl_ins( &objs, (long *)optarg );
d144 1
a144 1
		my_session_id = rts_load_geometry( argv[optind], 0, BU_PTBL_LEN( &objs ), objects, thread_count );
d146 1
a146 1
		if( optind >= argc ) {
d151 1
a151 1
		my_session_id = rts_load_geometry( argv[optind], 0, 0, (char **)NULL, thread_count );
d155 1
a155 1
		fprintf( stderr, "Failed to load geometry from file (%s)\n", argv[optind] );
@


14.12
log
@update copyright to 2007
@
text
@d9 1
a9 2
 * as published by the Free Software Foundation; either version 2 of
 * the License, or (at your option) any later version.
d14 1
a14 1
 * Library General Public License for more details.
d34 1
a34 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/librtserver/rtserverTest.c,v 14.11 2006/01/18 06:46:18 brlcad Exp $ (ARL)";
@


14.11
log
@update copyright to 2006
@
text
@d4 1
a4 1
 * Copyright (c) 2004-2006 United States Government as represented by
d35 1
a35 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/librtserver/rtserverTest.c,v 14.10 2005/10/23 04:44:36 brlcad Exp $ (ARL)";
@


14.10
log
@trailing ws
@
text
@d4 1
a4 1
 * Copyright (C) 2004-2005 United States Government as represented by
d35 1
a35 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/librtserver/rtserverTest.c,v 14.9 2005/08/24 19:46:43 brlcad Exp $ (ARL)";
@


14.9
log
@remove the common.h dependency in the public header, move the jni.h inclusion block into the source .c files instead.
@
text
@d35 1
a35 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/librtserver/rtserverTest.c,v 14.8 2005/01/30 20:31:04 brlcad Exp $ (ARL)";
d136 1
a136 1
	
@


14.9.2.1
log
@merge changes from HEAD aka rel-7-6-4 to the rel-7-6-branch just in case someone peeks a gander or tries to continue/build the branch
@
text
@d35 1
a35 1
static const char RCSid[] = "@@(#)$Header$ (ARL)";
d136 1
a136 1

@


14.8
log
@update copyright to 2005
@
text
@d35 1
a35 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/librtserver/rtserverTest.c,v 14.7 2004/12/21 07:25:30 morrison Exp $ (ARL)";
d57 7
@


14.7
log
@tidy up a lil bit
@
text
@d4 2
a5 2
 * Copyright (c) 2004 United States Government as represented by the
 * U.S. Army Research Laboratory.
d35 1
a35 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/librtserver/rtserverTest.c,v 14.6 2004/12/21 06:58:43 morrison Exp $ (ARL)";
@


14.6
log
@remove the old copyright notice section as it's been supplanted (and copyright is now claimable in the us via assignmgent)
@
text
@a31 2
 *
 *
d35 1
a35 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/librtserver/rtserverTest.c,v 14.5 2004/12/21 06:50:59 morrison Exp $ (ARL)";
@


14.5
log
@remove the old distribution notice section
@
text
@a33 3
 *  Copyright Notice -
 *      This software is Copyright (C) 2004 by the United States Army
 *      in all countries except the USA.  All rights reserved.
d37 1
a37 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/librtserver/rtserverTest.c,v 14.4 2004/12/21 06:18:48 morrison Exp $ (ARL)";
@


14.4
log
@they should have received a copy of the LGPL with LGPL'd files
@
text
@a32 4
 *  Distribution Notice -
 *      Re-distribution of this software is restricted, as described in
 *      your "Statement of Terms and Conditions for the Release of
 *      The BRL-CAD Pacakge" agreement.
d40 1
a40 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/librtserver/rtserverTest.c,v 14.3 2004/12/21 05:45:26 morrison Exp $ (ARL)";
@


14.3
log
@s/GNU Library General/GNU Lesser General/g
@
text
@d17 2
a18 2
 * You should have received a copy of the GNU General Public License
 * along with this file; see the file named COPYING for more
d44 1
a44 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/librtserver/rtserverTest.c,v 14.2 2004/12/21 02:32:51 morrison Exp $ (ARL)";
@


14.2
log
@assign copyright and LGPL
@
text
@d8 1
a8 1
 * modify it under the terms of the GNU Library General Public License
d44 1
a44 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/librtserver/rtserverTest.c,v 14.1 2004/11/16 19:42:16 morrison Exp $ (ARL)";
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d1 21
a21 1
/*
d44 1
a44 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/librtserver/rtserverTest.c,v 1.1 2004/09/15 12:08:59 jra Exp $ (ARL)";
@


1.1
log
@Fixed a bug in the "FREE" macros
added a test program
@
text
@d24 1
a24 1
static const char RCSid[] = "@@(#)$Header: /n/xoff/cvs/brlcad/src/librtserver/rtserver.c,v 1.7 2004/09/10 18:08:33 jra Exp $ (ARL)";
d222 10
@

