head	1.4;
access;
symbols
	rel-7-10-4:1.3
	STABLE:1.3.0.2
	rel-7-10-2:1.3
	rel-7-10-0:1.3;
locks; strict;
comment	@ * @;


1.4
date	2007.09.14.15.21.45;	author erikgreenwald;	state Exp;
branches;
next	1.3;

1.3
date	2007.01.05.21.12.07;	author brlcad;	state Exp;
branches;
next	1.2;

1.2
date	2007.01.05.18.15.56;	author brlcad;	state Exp;
branches;
next	1.1;

1.1
date	2007.01.05.15.20.37;	author brlcad;	state Exp;
branches;
next	;


desc
@@


1.4
log
@removed trailing whitespace
@
text
@/* $Header: /cvsroot/brlcad/brlcad/src/other/openNURBS/opennurbs_zlib.h,v 1.3 2007/01/05 21:12:07 brlcad Exp $ */
/* $NoKeywords: $ */
/*
//
// Copyright (c) 1993-2001 Robert McNeel & Associates. All rights reserved.
// Rhinoceros is a registered trademark of Robert McNeel & Assoicates.
//
// THIS SOFTWARE IS PROVIDED "AS IS" WITHOUT EXPRESS OR IMPLIED WARRANTY.
// ALL IMPLIED WARRANTIES OF FITNESS FOR ANY PARTICULAR PURPOSE AND OF
// MERCHANTABILITY ARE HEREBY DISCLAIMED.
//
// For complete openNURBS copyright information see <http://www.opennurbs.org>.
//
////////////////////////////////////////////////////////////////
*/

#if !defined(OPENNURBS_ZLIB_INC_)
#define OPENNURBS_ZLIB_INC_


// If you are using opennurbs as a DLL or writing a Rhino plug-in
// and you want to use the same zlib that opennurbs uses, then
// compile opennurbs_zlib_memory.cpp into your application
// and statically link with the zlib library. All the necessary
// header files are included by opennurbs.h.


/* #if !defined(Z_PREFIX) */
/* /\* decorates zlib functions with a "z_" prefix to prevent symbol collision. *\/ */
/* #define Z_PREFIX */
/* #endif */

#if !defined(MY_ZCALLOC)
/* have zlib use oncalloc() and onfree() for memory managment*/
#define MY_ZCALLOC
#endif

#include <zlib.h>

ON_BEGIN_EXTERNC
voidpf zcalloc (voidpf, unsigned, unsigned);
void  zcfree (voidpf, voidpf);
ON_END_EXTERNC


#endif
@


1.3
log
@remove the z_ prefix protection so that openNURBS can be linked against an installed system zlib library (there were no namespace collisions)
@
text
@d1 1
a1 1
/* $Header: /cvsroot/brlcad/brlcad/src/other/openNURBS/opennurbs_zlib.h,v 1.2 2007/01/05 18:15:56 brlcad Exp $ */
d11 1
a11 1
//				
@


1.2
log
@zlib wasn't included, so update code to reflect usage of a usual zlib.h
@
text
@d1 1
a1 1
/* $Header: /cvsroot/brlcad/brlcad/src/other/openNURBS/opennurbs_zlib.h,v 1.1 2007/01/05 15:20:37 brlcad Exp $ */
d20 1
a20 5
// If you are using opennurbs as a statically linked library, then
// you may make calls to the same zlib that opennurbs uses.  This
// zlib is compiled with z_ symbol projectection.  All the necessary
// header files are included by opennurbs.h.
// 
d28 4
a31 4
#if !defined(Z_PREFIX)
/* decorates zlib functions with a "z_" prefix to prevent symbol collision. */
#define Z_PREFIX
#endif
@


1.1
log
@initial import of the openNURBS initiative's nurbs toolkit.  the toolkit consists of code for reading/writing .3dm files used by Rhino as well as nurbs evaluation and other geometry processing facilities.  the library is being evaluated for .3dm support as well as potentially gutting the existing nurbs primitive and using openNURBS evaluation routines instead (still probably need to implement ray shot evaluation).  this is version 200612050 (aka 4.0).

this is also a C++ library, the first integration of an external C++ dependency into BRL-CAD.  additional support/infrastructure will be needed to support this in configure.  there's still, however, a policy/convention of "containment" so that C++ does not propagate into the existing BRL-CAD libraries.  any additions that utilize c++ still have to be entirely modular (and optional) for the time being.
@
text
@d1 1
a1 1
/* $Header: /src4/opennurbs/opennurbs_zlib.h 2     11/20/03 4:25p Dalelear $ */
d42 1
a42 1
#include "./zlib/zlib.h"
@

