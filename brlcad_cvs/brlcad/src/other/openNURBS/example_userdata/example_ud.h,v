head	1.1;
access;
symbols
	rel-7-10-4:1.1
	STABLE:1.1.0.2
	rel-7-10-2:1.1
	rel-7-10-0:1.1;
locks; strict;
comment	@ * @;


1.1
date	2007.01.05.15.20.42;	author brlcad;	state Exp;
branches;
next	;


desc
@@


1.1
log
@initial import of the openNURBS initiative's nurbs toolkit.  the toolkit consists of code for reading/writing .3dm files used by Rhino as well as nurbs evaluation and other geometry processing facilities.  the library is being evaluated for .3dm support as well as potentially gutting the existing nurbs primitive and using openNURBS evaluation routines instead (still probably need to implement ray shot evaluation).  this is version 200612050 (aka 4.0).

this is also a C++ library, the first integration of an external C++ dependency into BRL-CAD.  additional support/infrastructure will be needed to support this in configure.  there's still, however, a policy/convention of "containment" so that C++ does not propagate into the existing BRL-CAD libraries.  any additions that utilize c++ still have to be entirely modular (and optional) for the time being.
@
text
@#if !defined(OPENNURBS_EXAMPLE_UD_INC_)
#define OPENNURBS_EXAMPLE_UD_INC_

class CExampleWriteUserData : public ON_UserData
{
  static int m__sn;
  ON_OBJECT_DECLARE(CExampleWriteUserData);

public:
  static ON_UUID Id();

  CExampleWriteUserData();
  CExampleWriteUserData( const char* s);
  CExampleWriteUserData(const CExampleWriteUserData& src);
  CExampleWriteUserData& operator=(const CExampleWriteUserData& src);
  ~CExampleWriteUserData();
  void Dump( ON_TextLog& text_log ) const;
  BOOL GetDescription( ON_wString& description );
  BOOL Archive() const;
  BOOL Write(ON_BinaryArchive& file) const;
  BOOL Read(ON_BinaryArchive& file);

  ON_wString m_str;
  int m_sn;
};

#endif
@
