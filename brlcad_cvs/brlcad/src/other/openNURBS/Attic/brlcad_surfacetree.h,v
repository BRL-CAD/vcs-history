head	1.4;
access;
symbols;
locks; strict;
comment	@ * @;


1.4
date	2007.05.31.05.31.07;	author brlcad;	state dead;
branches;
next	1.3;

1.3
date	2007.05.29.20.47.40;	author jlowenz;	state Exp;
branches;
next	1.2;

1.2
date	2007.05.24.17.13.56;	author jlowenz;	state Exp;
branches;
next	1.1;

1.1
date	2007.05.22.20.17.57;	author jlowenz;	state Exp;
branches;
next	;


desc
@@


1.4
log
@so sayeth he, it shall not come to pass -- too many integration issues for now so make/leave it as part of librt
@
text
@#ifndef __BRLCAD_SURFACETREE
#define __BRLCAD_SURFACETREE

#include "opennurbs.h"
#include "brlcad_boundingvolume.h"

namespace brlcad {
  
  class SurfaceTree {
  public:
    SurfaceTree(ON_BrepFace* surf);
    ~SurfaceTree();

    BBNode* getRootNode();    
    /** 
     * Calculate, using the surface bounding volume hierarchy, a uv
     * estimate for the closest point on the surface to the point in
     * 3-space.
    */
    ON_2dPoint getClosestPointEstimate(const ON_3dPoint& pt);
    
  private:
    ON_BrepFace* m_face;
    BBNode* m_root;
  };

}

#endif
@


1.3
log
@Fix the storage of faces instead of just surfaces (more information)
@
text
@@


1.2
log
@Sketch out skeleton surfacetree implementation and add to opennurbs build
@
text
@d11 1
a11 1
    SurfaceTree(ON_Surface* surf);
d23 1
a23 1
    ON_Surface* m_surf;
@


1.1
log
@new bounding volume support for opennurbs (part of closestPoint impl)
@
text
@d10 11
d22 4
a25 1
  }
@

