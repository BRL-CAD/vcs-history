head	14.2;
access;
symbols
	rel-7-10-4:14.1
	STABLE:14.1.0.10
	stable-branch:14.1
	rel-7-10-2:14.1
	rel-7-10-0:14.1
	rel-7-8-4:14.1
	rel-7-8-2:14.1
	rel-7-8-0:14.1
	trimnurbs-branch:14.1.0.8
	help:14.1
	temp_tag:14.1
	bobWinPort-20051223-freeze:14.1
	postmerge-20051223-bobWinPort:14.1
	premerge-20051223-bobWinPort:14.1
	rel-7-6-6:14.1
	rel-7-6-4:14.1
	rel-7-6-2:14.1
	rel-7-6-branch:14.1.0.6
	rel-7-6-0:14.1
	rel-7-4-2:14.1
	rel-7-4-branch:14.1.0.4
	bobWinPort:14.1.0.2
	rel-7-4-0:14.1
	rel-7-2-6:14.1
	rel-7-2-4:14.1
	rel-7-2-2:14.1
	rel-7-2-0:14.1
	rel-7-0-4:14.1
	rel-7-0-2:14.1
	rel-7-0-1:14.1
	opensource-post:14.1
	opensource-pre:1.1
	rel-7-0-branch:1.1.0.2
	rel-7-0:1.1;
locks; strict;
comment	@ * @;


14.2
date	2007.10.22.20.59.56;	author brlcad;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.20;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.20.14.50.01;	author morrison;	state Exp;
branches;
next	;


desc
@@


14.2
log
@the old cray cos and unicos code for the cray xmp and friends finally became a burden to maintain while resolving various flawfinder issues.  remove the old code, particularly that which wasn't __STDC__.  however, intentionally leave the code for calculating byteoffsets and converting float formats to/from network order .. could still come in handy at some point down the road.
@
text
@/*
 *		J O V E _ T U N E . C
 */

#include	"./jove.h"

#if ! HAS_TEMPNAM
char	TempFile[]	= "/usr/tmp/jovetXXXXXX";
			/* Where mktemp should put the temp file */

char	ProcTmp[]	= "/usr/tmp/jovepXXXXXX";
			/* Where jove should put process temp files */
#endif

char	BinShell[]	= "/bin/sh";	/* /bin/sh (preferably) or /bin/csh */
					/* getenv("SHELL") will overide */
/* Following paths are edited during the "make" process to create tune.c from jove_tune.c: */
char	Describe[]	= "LibDir/describe.com";
char	Findcom[]	= "BinDir/findcom";
char	Joverc[]	= "LibDir/joverc";
			/* Where to search for the describe command */
int	Dfltmode	= 0644;

#ifdef pdp11
char	cerrfmt[] = "\\([^:]*\\):\\([0-9][0-9]*\\):";
	/* Very old pdp11 C error scanf format string for errors of the form
	 * filename:linenum: error message
	 */
#else
#  if	(defined(__sgi) && defined(__mips))
char	cerrfmt[] = "[^:]*: [^:]*: \\([^:]*\\), line \\([0-9][0-9]*\\):";
	/* SGI has a new format, too.
	 * accom: Error: filename, line linenum: error message.
	 *         ^___ or "Warning ###" here
	 */
#  else
char	cerrfmt[] = "\"\\([^:]*\\)\", line \\([0-9][0-9]*\\):";
	/* C error scanf format string for errors of the form
	 * "filename", line linenum: error message.
	 * used on all SYSV and all modern BSD systems.
	 */
#  endif
#endif

char	lerrfmt[] = "\"\\([^:]*\\)\", line \\([0-9][0-9]*\\):";
	/* Lint error for errors of the form
	 * "filename", line linenum: error message.
	 */
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d30 1
a30 8
# ifdef CRAY
	/* Cray has their own stupid error format */
char	cerrfmt[] = " \\* [FW] \\* :\\([^:]*\\): \\([0-9][0-9]*\\):";
	/* C error scanf format string for errors of the form
	 * sp * sp [FW] sp * sp :filename: sp linenum:sp error message.
	 */
# else
#    if	(defined(__sgi) && defined(__mips))
d36 1
a36 1
#    else
d42 1
a42 2
#    endif
# endif
@


1.1
log
@Sources that are external to BRL-CAD are moved from the top level to src/other/.
@
text
@@

