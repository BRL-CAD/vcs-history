head	14.2;
access;
symbols
	rel-7-10-4:14.1
	STABLE:14.1.0.10
	stable-branch:14.1
	rel-7-10-2:14.1
	rel-7-10-0:14.1
	rel-7-8-4:14.1
	rel-7-8-2:14.1
	rel-7-8-0:14.1
	trimnurbs-branch:14.1.0.8
	help:14.1
	temp_tag:14.1
	bobWinPort-20051223-freeze:14.1
	postmerge-20051223-bobWinPort:14.1
	premerge-20051223-bobWinPort:14.1
	rel-7-6-6:14.1
	rel-7-6-4:14.1
	rel-7-6-2:14.1
	rel-7-6-branch:14.1.0.6
	rel-7-6-0:14.1
	rel-7-4-2:14.1
	rel-7-4-branch:14.1.0.4
	bobWinPort:14.1.0.2
	rel-7-4-0:14.1
	rel-7-2-6:14.1
	rel-7-2-4:14.1
	rel-7-2-2:14.1
	rel-7-2-0:14.1
	rel-7-0-4:14.1
	rel-7-0-2:14.1
	rel-7-0-1:14.1
	opensource-post:14.1
	opensource-pre:1.1
	rel-7-0-branch:1.1.0.2
	rel-7-0:1.1;
locks; strict;
comment	@# @;


14.2
date	2007.10.24.20.30.22;	author erikgreenwald;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.17;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.06.10.16.51.47;	author morrison;	state Exp;
branches;
next	;


desc
@@


14.2
log
@Upgrade to itcl/itk 3.3
@
text
@'\"
'\" Copyright (c) 1993-1998  Lucent Technologies, Inc.
'\"
'\" See the file "license.terms" for information on usage and redistribution
'\" of this file, and for a DISCLAIMER OF ALL WARRANTIES.
'\"
'\" RCS: $Id: local.n,v 1.4 2004/09/25 22:50:43 davygrvy Exp $
'\"
.so man.macros
.TH local n "" itcl "[incr\ Tcl]"
.BS
'\" Note:  do not modify the .SH NAME line immediately below!
.SH NAME
local \- create an object local to a procedure
.SH SYNOPSIS
\fBitcl::local \fIclassName objName\fR ?\fIarg arg ...\fR?
.BE

.SH DESCRIPTION
.PP
The \fBlocal\fR command creates an \fB[incr\ Tcl]\fR object that
is local to the current call frame.  When the call frame goes away,
the object is automatically deleted.  This command is useful for
creating objects that are local to a procedure.
.PP
As a side effect, this command creates a variable named
"\fCitcl-local-\fIxxx\fR", where \fIxxx\fR is the name of
the object that is created.  This variable detects when the
call frame is destroyed and automatically deletes the
associated object.

.SH EXAMPLE
In the following example, a simple "counter" object is used
within the procedure "test".  The counter is created as a
local object, so it is automatically deleted each time the
procedure exits.  The \fBputs\fR statements included in the
constructor/destructor show the object coming and going
as the procedure is called.
.CS
itcl::class counter {
    private variable count 0
    constructor {} {
        puts "created: $this"
    }
    destructor {
        puts "deleted: $this"
    }

    method bump {{by 1}} {
        incr count $by
    }
    method get {} {
        return $count
    }
}

proc test {val} {
    local counter x
    for {set i 0} {$i < $val} {incr i} {
        x bump
    }
    return [x get]
}

set result [test 5]
puts "test: $result"

set result [test 10]
puts "test: $result"

puts "objects: [itcl::find objects *]"
.CE

.SH KEYWORDS
class, object, procedure
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d7 1
a7 1
'\" RCS: $Id: local.n,v 1.1 2004/06/10 16:51:47 morrison Exp $
d16 1
a16 1
\fBlocal \fIclassName objName\fR ?\fIarg arg ...\fR?
d40 1
a40 1
class counter {
d71 1
a71 1
puts "objects: [info objects]"
@


1.1
log
@moved libitcl to incrTcl, which matches their cvs module
@
text
@d7 1
a7 1
'\" RCS: $Id: local.n,v 1.1 1998/07/27 18:42:03 stanton Exp $
@

