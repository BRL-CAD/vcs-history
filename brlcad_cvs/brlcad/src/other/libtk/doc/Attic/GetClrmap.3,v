head	14.2;
access;
symbols
	stable-branch:14.1
	rel-7-8-4:14.1
	rel-7-8-2:14.1
	rel-7-8-0:14.1
	trimnurbs-branch:14.1.0.8
	help:14.1
	temp_tag:14.1
	bobWinPort-20051223-freeze:14.1
	postmerge-20051223-bobWinPort:14.1
	premerge-20051223-bobWinPort:14.1
	rel-7-6-6:14.1
	rel-7-6-4:14.1
	rel-7-6-2:14.1
	rel-7-6-branch:14.1.0.6
	rel-7-6-0:14.1
	rel-7-4-2:14.1
	rel-7-4-branch:14.1.0.4
	bobWinPort:14.1.0.2
	rel-7-4-0:14.1
	rel-7-2-6:14.1
	rel-7-2-4:14.1
	rel-7-2-2:14.1
	rel-7-2-0:14.1
	rel-7-0-4:14.1
	rel-7-0-2:14.1
	rel-7-0-1:14.1
	opensource-post:14.1
	opensource-pre:1.1
	rel-7-0-branch:1.1.0.2
	rel-7-0:1.1;
locks; strict;
comment	@.\" @;


14.2
date	2007.03.02.21.47.21;	author brlcad;	state dead;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.25;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.20.14.52.30;	author morrison;	state Exp;
branches;
next	;


desc
@@


14.2
log
@upgrade tcl/tk from 8.4.6 to 8.5a5; also move to a recursive configure, using AC_CONFIG_SUBDIRS to call upon tcl, tk, and enigma's configure scripts as needed instead of redoing their build systems for our purpose.  this has a rather drastic impact on the way the libraries are linked together, including the need to compile tcl/tk static so as to avoid libtool portability issues as well as letting us take advantage of their build system for reduced maintenance and easing future upgrades.  undoubtedly more build issues to be worked out with other platforms given the extent of this change.  this does move us one step closer towards correctly linking against system tcl/tk installations too.
@
text
@'\"
'\" Copyright (c) 1994 The Regents of the University of California.
'\" Copyright (c) 1994-1996 Sun Microsystems, Inc.
'\"
'\" See the file "license.terms" for information on usage and redistribution
'\" of this file, and for a DISCLAIMER OF ALL WARRANTIES.
'\" 
'\" RCS: @@(#) $Id: GetClrmap.3,v 14.1 2004/11/16 19:42:25 morrison Exp $
'\" 
.so man.macros
.TH Tk_GetColormap 3 4.0 Tk "Tk Library Procedures"
.BS
.SH NAME
Tk_GetColormap, Tk_FreeColormap \- allocate and free colormaps
.SH SYNOPSIS
.nf
\fB#include <tk.h>\fR
.sp
Colormap
\fBTk_GetColormap(\fIinterp, tkwin, string\fB)\fR
.sp
\fBTk_FreeColormap(\fIdisplay, colormap\fB)\fR
.SH ARGUMENTS
.AS "Colormap" colormap
.AP Tcl_Interp *interp in
Interpreter to use for error reporting.
.AP Tk_Window tkwin in
Token for window in which colormap will be used.
.AP "CONST char" *string in
Selects a colormap:  either \fBnew\fR or the name of a window
with the same screen and visual as \fItkwin\fR.
.AP Display *display in
Display for which \fIcolormap\fR was allocated.
.AP Colormap colormap in
Colormap to free;  must have been returned by a previous
call to \fBTk_GetColormap\fR or \fBTk_GetVisual\fR.
.BE

.SH DESCRIPTION
.PP
These procedures are used to manage colormaps.
\fBTk_GetColormap\fR returns a colormap suitable for use in \fItkwin\fR.
If its \fIstring\fR argument is \fBnew\fR then a new colormap is
created;  otherwise \fIstring\fR must be the name of another window
with the same screen and visual as \fItkwin\fR, and the colormap from that
window is returned.
If \fIstring\fR doesn't make sense, or if it refers to a window on
a different screen from \fItkwin\fR or with
a different visual than \fItkwin\fR, then \fBTk_GetColormap\fR returns
\fBNone\fR and leaves an error message in \fIinterp->result\fR.
.PP
\fBTk_FreeColormap\fR should be called when a colormap returned by
\fBTk_GetColormap\fR is no longer needed.
Tk maintains a reference count for each colormap returned by
\fBTk_GetColormap\fR, so there should eventually be one call to
\fBTk_FreeColormap\fR for each call to \fBTk_GetColormap\fR.
When a colormap's reference count becomes zero, Tk releases the
X colormap.
.PP
\fBTk_GetVisual\fR and \fBTk_GetColormap\fR work together, in that
a new colormap created by \fBTk_GetVisual\fR may later be returned
by \fBTk_GetColormap\fR.
The reference counting mechanism for colormaps includes both procedures,
so callers of \fBTk_GetVisual\fR must also call \fBTk_FreeColormap\fR
to release the colormap.
If \fBTk_GetColormap\fR is called with a \fIstring\fR value of
\fBnew\fR then the resulting colormap will never
be returned by \fBTk_GetVisual\fR;  however, it can be used in other
windows by calling \fBTk_GetColormap\fR with the original window's
name as \fIstring\fR.

.SH KEYWORDS
colormap
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d8 1
a8 1
'\" RCS: @@(#) $Id: GetClrmap.3,v 1.1 2004/05/20 14:52:30 morrison Exp $
@


1.1
log
@Sources that are external to BRL-CAD are moved from the top level to src/other/.
@
text
@d8 1
a8 1
'\" RCS: @@(#) $Id: GetClrmap.3,v 1.3 2004/03/04 19:49:04 morrison Exp $
@

