head	14.2;
access;
symbols
	stable-branch:14.1
	rel-7-8-4:14.1
	rel-7-8-2:14.1
	rel-7-8-0:14.1
	trimnurbs-branch:14.1.0.8
	help:14.1
	temp_tag:14.1
	bobWinPort-20051223-freeze:14.1
	postmerge-20051223-bobWinPort:14.1
	premerge-20051223-bobWinPort:14.1
	rel-7-6-6:14.1
	rel-7-6-4:14.1
	rel-7-6-2:14.1
	rel-7-6-branch:14.1.0.6
	rel-7-6-0:14.1
	rel-7-4-2:14.1
	rel-7-4-branch:14.1.0.4
	bobWinPort:14.1.0.2
	rel-7-4-0:14.1
	rel-7-2-6:14.1
	rel-7-2-4:14.1
	rel-7-2-2:14.1
	rel-7-2-0:14.1
	rel-7-0-4:14.1
	rel-7-0-2:14.1
	rel-7-0-1:14.1
	opensource-post:14.1
	opensource-pre:1.1
	rel-7-0-branch:1.1.0.2
	rel-7-0:1.1;
locks; strict;
comment	@ * @;


14.2
date	2007.03.02.21.47.34;	author brlcad;	state dead;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.26;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.20.14.52.49;	author morrison;	state Exp;
branches;
next	;


desc
@@


14.2
log
@upgrade tcl/tk from 8.4.6 to 8.5a5; also move to a recursive configure, using AC_CONFIG_SUBDIRS to call upon tcl, tk, and enigma's configure scripts as needed instead of redoing their build systems for our purpose.  this has a rather drastic impact on the way the libraries are linked together, including the need to compile tcl/tk static so as to avoid libtool portability issues as well as letting us take advantage of their build system for reduced maintenance and easing future upgrades.  undoubtedly more build issues to be worked out with other platforms given the extent of this change.  this does move us one step closer towards correctly linking against system tcl/tk installations too.
@
text
@/*
 * tkFileFilter.h --
 *
 *	Declarations for the file filter processing routines needed by
 *	the file selection dialogs.
 *
 * Copyright (c) 1996 Sun Microsystems, Inc.
 *
 * See the file "license.terms" for information on usage and redistribution
 * of this file, and for a DISCLAIMER OF ALL WARRANTIES.
 *
 * RCS: @@(#) $Id: tkFileFilter.h,v 14.1 2004/11/16 19:42:26 morrison Exp $
 *
 */

#ifndef _TK_FILE_FILTER
#define _TK_FILE_FILTER

#ifdef MAC_TCL
#include <StandardFile.h>
#else
#define OSType long
#endif

#ifdef BUILD_tk
# undef TCL_STORAGE_CLASS
# define TCL_STORAGE_CLASS DLLEXPORT
#endif

typedef struct GlobPattern {
    struct GlobPattern * next;		/* Chains to the next glob pattern
					 * in a glob pattern list */
    char * pattern;			/* String value of the pattern, such
					 * as "*.txt" or "*.*"
					 */
} GlobPattern;

typedef struct MacFileType {
    struct MacFileType * next;		/* Chains to the next mac file type
					 * in a mac file type list */
    OSType type;			/* Mac file type, such as 'TEXT' or
					 * 'GIFF' */
} MacFileType;

typedef struct FileFilterClause {
    struct FileFilterClause * next;	/* Chains to the next clause in
					 * a clause list */
    GlobPattern * patterns;		/* Head of glob pattern type list */
    GlobPattern * patternsTail;		/* Tail of glob pattern type list */
    MacFileType * macTypes;		/* Head of mac file type list */
    MacFileType * macTypesTail;		/* Tail of mac file type list */
} FileFilterClause;

typedef struct FileFilter {
    struct FileFilter * next;		/* Chains to the next filter
					 * in a filter list */
    char * name;			/* Name of the file filter,
					 * such as "Text Documents" */
    FileFilterClause * clauses;		/* Head of the clauses list */
    FileFilterClause * clausesTail;	/* Tail of the clauses list */
} FileFilter;

/*----------------------------------------------------------------------
 * FileFilterList --
 *
 * The routine TkGetFileFilters() translates the string value of the
 * -filefilters option into a FileFilterList structure, which consists
 * of a list of file filters.
 *
 * Each file filter consists of one or more clauses. Each clause has
 * one or more glob patterns and/or one or more Mac file types
 *----------------------------------------------------------------------
 */

typedef struct FileFilterList {
    FileFilter * filters;		/* Head of the filter list */
    FileFilter * filtersTail;		/* Tail of the filter list */
    int numFilters;			/* number of filters in the list */
} FileFilterList;

EXTERN void		TkFreeFileFilters _ANSI_ARGS_((
			    FileFilterList * flistPtr));
EXTERN void		TkInitFileFilters _ANSI_ARGS_((
			    FileFilterList * flistPtr));
EXTERN int		TkGetFileFilters _ANSI_ARGS_ ((Tcl_Interp *interp,
    			    FileFilterList * flistPtr, char * string,
			    int isWindows));

# undef TCL_STORAGE_CLASS
# define TCL_STORAGE_CLASS DLLIMPORT

#endif
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d12 1
a12 1
 * RCS: @@(#) $Id: tkFileFilter.h,v 1.1 2004/05/20 14:52:49 morrison Exp $
@


1.1
log
@Sources that are external to BRL-CAD are moved from the top level to src/other/.
@
text
@d12 1
a12 1
 * RCS: @@(#) $Id: tkFileFilter.h,v 1.3 2004/03/04 19:49:09 morrison Exp $
@

