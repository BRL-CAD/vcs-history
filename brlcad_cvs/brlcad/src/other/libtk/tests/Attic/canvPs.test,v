head	14.2;
access;
symbols
	stable-branch:14.1
	rel-7-8-4:14.1
	rel-7-8-2:14.1
	rel-7-8-0:14.1
	trimnurbs-branch:14.1.0.8
	help:14.1
	temp_tag:14.1
	bobWinPort-20051223-freeze:14.1
	postmerge-20051223-bobWinPort:14.1
	premerge-20051223-bobWinPort:14.1
	rel-7-6-6:14.1
	rel-7-6-4:14.1
	rel-7-6-2:14.1
	rel-7-6-branch:14.1.0.6
	rel-7-6-0:14.1
	rel-7-4-2:14.1
	rel-7-4-branch:14.1.0.4
	bobWinPort:14.1.0.2
	rel-7-4-0:14.1
	rel-7-2-6:14.1
	rel-7-2-4:14.1
	rel-7-2-2:14.1
	rel-7-2-0:14.1
	rel-7-0-4:14.1
	rel-7-0-2:14.1
	rel-7-0-1:14.1
	opensource-post:14.1
	opensource-pre:1.1
	rel-7-0-branch:1.1.0.2
	rel-7-0:1.1;
locks; strict;
comment	@# @;


14.2
date	2007.03.02.21.47.45;	author brlcad;	state dead;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.28;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.20.14.53.31;	author morrison;	state Exp;
branches;
next	;


desc
@@


14.2
log
@upgrade tcl/tk from 8.4.6 to 8.5a5; also move to a recursive configure, using AC_CONFIG_SUBDIRS to call upon tcl, tk, and enigma's configure scripts as needed instead of redoing their build systems for our purpose.  this has a rather drastic impact on the way the libraries are linked together, including the need to compile tcl/tk static so as to avoid libtool portability issues as well as letting us take advantage of their build system for reduced maintenance and easing future upgrades.  undoubtedly more build issues to be worked out with other platforms given the extent of this change.  this does move us one step closer towards correctly linking against system tcl/tk installations too.
@
text
@# This file is a Tcl script to test out procedures to write postscript
# for canvases to files and channels. It exercises the procedure
# TkCanvPostscriptCmd in generic/tkCanvPs.c
#
# Copyright (c) 1995 Sun Microsystems, Inc.
# Copyright (c) 1998-1999 by Scriptics Corporation.
# All rights reserved.
#
# RCS: @@(#) $Id: canvPs.test,v 14.1 2004/11/16 19:42:28 morrison Exp $

package require tcltest 2.1
namespace import -force tcltest::configure
namespace import -force tcltest::testsDirectory
configure -testdir [file join [pwd] [file dirname [info script]]]
configure -loadfile [file join [testsDirectory] constraints.tcl]
tcltest::loadTestedCommands

namespace import -force tcltest::makeFile
namespace import -force tcltest::removeFile

canvas .c -width 400 -height 300 -bd 2 -relief sunken
.c create rectangle 20 20 80 80 -fill red
pack .c
update

test canvPs-1.1 {test writing to a file} {unixOrPc} {
    removeFile foo.ps
    .c postscript -file foo.ps
    file exists foo.ps
} 1
test canvPs-1.2 {test writing to a file, idempotency} {unixOrPc} {
    removeFile foo.ps
    removeFile bar.ps
    .c postscript -file foo.ps
    .c postscript -file bar.ps
    set status ok
    if {[file size bar.ps] != [file size foo.ps]} {
	set status broken
    }
    set status
} ok

test canvPs-2.1 {test writing to a channel} {unixOrPc} {
    removeFile foo.ps
    set chan [open foo.ps w]
    fconfigure $chan -translation lf
    .c postscript -channel $chan
    close $chan
    file exists foo.ps
} 1
test canvPs-2.2 {test writing to channel, idempotency} {unixOrPc} {
    removeFile foo.ps
    removeFile bar.ps
    set c1 [open foo.ps w]
    set c2 [open bar.ps w]
    fconfigure $c1 -translation lf
    fconfigure $c2 -translation lf
    .c postscript -channel $c1
    .c postscript -channel $c2
    close $c1
    close $c2
    set status ok
    if {[file size bar.ps] != [file size foo.ps]} {
	set status broken
    }
    set status
} ok
test canvPs-2.3 {test writing to channel and file, same output} {unixOnly} {
    removeFile foo.ps
    removeFile bar.ps
    set c1 [open foo.ps w]
    fconfigure $c1 -translation lf
    .c postscript -channel $c1
    close $c1
    .c postscript -file bar.ps
    set status ok
    if {[file size foo.ps] != [file size bar.ps]} {
	set status broken
    }
    set status
} ok
test canvPs-2.4 {test writing to channel and file, same output} {pcOnly} {
    removeFile foo.ps
    removeFile bar.ps
    set c1 [open foo.ps w]
    fconfigure $c1 -translation crlf
    .c postscript -channel $c1
    close $c1
    .c postscript -file bar.ps
    set status ok
    if {[file size foo.ps] != [file size bar.ps]} {
	set status broken
    }
    set status
} ok

test canvPs-3.1 {test ps generation with an embedded window} {} {
    removeFile bar.ps
    destroy .c
    pack [canvas .c -width 200 -height 200 -background white]
    .c create rect 20 20 150 150 -tags rect0 -dash . -width 2
    .c create arc 0 50 200 200 -tags arc0 \
	    -dash {4 4} -stipple question -outline red -fill green

    image create photo logo \
	    -file [file join $tk_library images pwrdLogo150.gif]
    .c create image 200 50 -image logo -anchor nw

    entry .c.e -background pink -foreground blue -width 14
    .c.e insert 0 "we gonna be postscripted"
    .c create window 50 180 -anchor nw -window .c.e
    update
    .c postscript -file bar.ps
    file exists bar.ps
} 1
test canvPs-3.2 {test ps generation with an embedded window not mapped} {} {
    removeFile bar.ps
    destroy .c
    pack [canvas .c -width 200 -height 200 -background white]
    entry .c.e -background pink -foreground blue -width 14
    .c.e insert 0 "we gonna be postscripted"
    .c create window 50 180 -anchor nw -window .c.e
    .c postscript -file bar.ps
    file exists bar.ps
} 1

test canvPs-4.1 {test ps generation with single-point uncolored poly, bug 734498} {} {
    destroy .c
    pack [canvas .c]
    .c create poly 10 20 10 20
    catch {.c postscript}
} 0

# cleanup
removeFile foo.ps
removeFile bar.ps
deleteWindows
::tcltest::cleanupTests
return
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d9 1
a9 1
# RCS: @@(#) $Id: canvPs.test,v 1.1 2004/05/20 14:53:31 morrison Exp $
@


1.1
log
@Sources that are external to BRL-CAD are moved from the top level to src/other/.
@
text
@d9 1
a9 1
# RCS: @@(#) $Id: canvPs.test,v 1.3 2004/03/04 19:49:26 morrison Exp $
@

