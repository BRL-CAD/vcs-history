head	1.2;
access;
symbols
	rel-7-10-4:1.1
	STABLE:1.1.0.2
	rel-7-10-2:1.1;
locks; strict;
comment	@ * @;


1.2
date	2007.09.14.15.22.04;	author erikgreenwald;	state Exp;
branches;
next	1.1;

1.1
date	2007.05.17.18.29.34;	author brlcad;	state Exp;
branches;
next	;


desc
@@


1.2
log
@removed trailing whitespace
@
text
@#ifndef MATH_UTILS_H
#define MATH_UTILS_H

/* needed for double abs(double) below */
#include <cstdlib>

/* needed for fabs, sqrt() below */
#include <cmath>



namespace TNT
{
/**
	@@returns hypotenuse of real (non-complex) scalars a and b by
	avoiding underflow/overflow
	using (a * sqrt( 1 + (b/a) * (b/a))), rather than
	sqrt(a*a + b*b).
*/
template <class Real>
Real hypot(const Real &a, const Real &b)
{

	if (a== 0)
		return abs(b);
	else
	{
		Real c = b/a;
		return abs(a) * sqrt(1 + c*c);
	}
}
} /* TNT namespace */



#endif
/* MATH_UTILS_H */
@


1.1
log
@add the NIST template numerics toolkit (TNT) for more involved matrix manipulations that libbn doesn't cover.  TNT is a replacement for LAPACK++.  Said matrix manipulations are needed for BREP manipulation.
@
text
@d15 1
a15 1
	@@returns hypotenuse of real (non-complex) scalars a and b by 
d23 1
a23 1
	
@

