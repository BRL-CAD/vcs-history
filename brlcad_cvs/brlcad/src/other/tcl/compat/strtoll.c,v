head	1.4;
access;
symbols
	rel-7-10-4:1.2
	STABLE:1.2.0.2
	rel-7-10-2:1.2
	rel-7-10-0:1.1;
locks; strict;
comment	@ * @;


1.4
date	2007.11.06.21.35.14;	author erikgreenwald;	state Exp;
branches;
next	1.3;

1.3
date	2007.09.14.15.21.49;	author erikgreenwald;	state Exp;
branches;
next	1.2;

1.2
date	2007.05.07.04.17.19;	author brlcad;	state Exp;
branches;
next	1.1;

1.1
date	2007.03.02.21.47.55;	author brlcad;	state Exp;
branches;
next	;


desc
@@


1.4
log
@tcl 8.5a6->8.5b1
@
text
@/* 
 * strtoll.c --
 *
 *	Source code for the "strtoll" library procedure.
 *
 * Copyright (c) 1988 The Regents of the University of California.
 * Copyright (c) 1994 Sun Microsystems, Inc.
 *
 * See the file "license.terms" for information on usage and redistribution of
 * this file, and for a DISCLAIMER OF ALL WARRANTIES.
 *
 * RCS: @@(#) $Id: strtoll.c,v 1.9 2007/04/16 13:36:34 dkf Exp $
 */

#include "tclInt.h"
#include <ctype.h>

#define TCL_WIDEINT_MAX	(((Tcl_WideUInt)Tcl_LongAsWide(-1))>>1)


/*
 *----------------------------------------------------------------------
 *
 * strtoll --
 *
 *	Convert an ASCII string into an integer.
 *
 * Results:
 *	The return value is the integer equivalent of string. If endPtr is
 *	non-NULL, then *endPtr is filled in with the character after the last
 *	one that was part of the integer. If string doesn't contain a valid
 *	integer value, then zero is returned and *endPtr is set to string.
 *
 * Side effects:
 *	None.
 *
 *----------------------------------------------------------------------
 */

#if TCL_WIDE_INT_IS_LONG
long long
#else
Tcl_WideInt
#endif
strtoll(
    CONST char *string,		/* String of ASCII digits, possibly preceded
				 * by white space. For bases greater than 10,
				 * either lower- or upper-case digits may be
				 * used. */
    char **endPtr,		/* Where to store address of terminating
				 * character, or NULL. */
    int base)			/* Base for conversion. Must be less than 37.
				 * If 0, then the base is chosen from the
				 * leading characters of string: "0x" means
				 * hex, "0" means octal, anything else means
				 * decimal. */
{
    register CONST char *p;
    Tcl_WideInt result = Tcl_LongAsWide(0);
    Tcl_WideUInt uwResult;

    /*
     * Skip any leading blanks.
     */

    p = string;
    while (isspace(UCHAR(*p))) {
	p += 1;
    }

    /*
     * Check for a sign.
     */

    errno = 0;
    if (*p == '-') {
	p += 1;
	uwResult = strtoull(p, endPtr, base);
	if (errno != ERANGE) {
	    if (uwResult > TCL_WIDEINT_MAX+1) {
		errno = ERANGE;
		return Tcl_LongAsWide(-1);
	    } else if (uwResult > TCL_WIDEINT_MAX) {
		return ~((Tcl_WideInt)TCL_WIDEINT_MAX);
	    } else {
		result = -((Tcl_WideInt) uwResult);
	    }
	}
    } else {
	if (*p == '+') {
	    p += 1;
	}
	uwResult = strtoull(p, endPtr, base);
	if (errno != ERANGE) {
	    if (uwResult > TCL_WIDEINT_MAX) {
		errno = ERANGE;
		return Tcl_LongAsWide(-1);
	    } else {
		result = uwResult;
	    }
	}
    }
    if ((result == 0) && (endPtr != 0) && (*endPtr == p)) {
	*endPtr = (char *) string;
    }
    return result;
}
@


1.3
log
@removed trailing whitespace
@
text
@d1 1
a1 1
/*
d12 1
a12 1
 * RCS: @@(#) $Id: strtoll.c,v 1.2 2007/05/07 04:17:19 brlcad Exp $
@


1.2
log
@upgrade to tcl/tk 8.5a6 (from 8.5a5) .. includes even more (extensive) aquatk fixes/enhancements
@
text
@d1 1
a1 1
/* 
d12 1
a12 1
 * RCS: @@(#) $Id: strtoll.c,v 1.9 2007/04/16 13:36:34 dkf Exp $
@


1.1
log
@upgrade tcl/tk from 8.4.6 to 8.5a5; also move to a recursive configure, using AC_CONFIG_SUBDIRS to call upon tcl, tk, and enigma's configure scripts as needed instead of redoing their build systems for our purpose.  this has a rather drastic impact on the way the libraries are linked together, including the need to compile tcl/tk static so as to avoid libtool portability issues as well as letting us take advantage of their build system for reduced maintenance and easing future upgrades.  undoubtedly more build issues to be worked out with other platforms given the extent of this change.  this does move us one step closer towards correctly linking against system tcl/tk installations too.
@
text
@d9 2
a10 2
 * See the file "license.terms" for information on usage and redistribution
 * of this file, and for a DISCLAIMER OF ALL WARRANTIES.
d12 1
a12 1
 * RCS: @@(#) $Id: strtoll.c,v 1.8 2005/05/10 18:33:54 kennykb Exp $
d29 4
a32 5
 *	The return value is the integer equivalent of string.  If endPtr
 *	is non-NULL, then *endPtr is filled in with the character
 *	after the last one that was part of the integer.  If string
 *	doesn't contain a valid integer value, then zero is returned
 *	and *endPtr is set to string.
d45 6
a50 7
strtoll(string, endPtr, base)
    CONST char *string;		/* String of ASCII digits, possibly
				 * preceded by white space.  For bases
				 * greater than 10, either lower- or
				 * upper-case digits may be used.
				 */
    char **endPtr;		/* Where to store address of terminating
d52 5
a56 6
    int base;			/* Base for conversion.  Must be less
				 * than 37.  If 0, then the base is chosen
				 * from the leading characters of string:
				 * "0x" means hex, "0" means octal, anything
				 * else means decimal.
				 */
@

