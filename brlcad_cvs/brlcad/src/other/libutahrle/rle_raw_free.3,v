head	14.2;
access;
symbols
	rel-7-10-4:14.1
	STABLE:14.1.0.10
	stable-branch:14.1
	rel-7-10-2:14.1
	rel-7-10-0:14.1
	rel-7-8-4:14.1
	rel-7-8-2:14.1
	rel-7-8-0:14.1
	trimnurbs-branch:14.1.0.8
	help:14.1
	temp_tag:14.1
	bobWinPort-20051223-freeze:14.1
	postmerge-20051223-bobWinPort:14.1
	premerge-20051223-bobWinPort:14.1
	rel-7-6-6:14.1
	rel-7-6-4:14.1
	rel-7-6-2:14.1
	rel-7-6-branch:14.1.0.6
	rel-7-6-0:14.1
	rel-7-4-2:14.1
	rel-7-4-branch:14.1.0.4
	bobWinPort:14.1.0.2
	rel-7-4-0:14.1
	rel-7-2-6:14.1
	rel-7-2-4:14.1
	rel-7-2-2:14.1
	rel-7-2-0:14.1
	rel-7-0-4:14.1
	rel-7-0-2:14.1
	rel-7-0-1:14.1
	opensource-post:14.1
	opensource-pre:1.1
	rel-7-0-branch:1.1.0.2
	rel-7-0:1.1;
locks; strict;
comment	@.\" @;


14.2
date	2007.09.14.15.21.39;	author erikgreenwald;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.30;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.20.14.54.08;	author morrison;	state Exp;
branches;
next	;


desc
@@


14.2
log
@removed trailing whitespace
@
text
@.\" Copyright (c) 1986, 1987, University of Utah
.TH RLE_RAW_ALLOC 3 2/2/87 3
.UC 4
.SH NAME
.HP
rle_raw_alloc \- Allocate memory for rle_getraw or rle_putraw.
.PD 0
.LP
rle_raw_free \- free memory allocated by rle_raw_alloc.
.PD
.SH SYNOPSIS
.B
#include <rle.h>
.br
.B
#include <rle_raw.h>
.sp
.B
rle_raw_alloc( the_hdr, scanp, nrawp )
.br
.B
rle_hdr * the_hdr;
.br
.B
rle_op *** scanp;
.br
.B
int ** nrawp;
.sp
.B
rle_raw_free( the_hdr, scanp, nrawp )
.br
.B
rle_hdr * the_hdr;
.br
.B
rle_op ** scanp;
.br
.B
int * nrawp;

.SH DESCRIPTION
The function
.I rle_raw_alloc
is provided to make it easier to allocate storage for use by the RLE
"raw" functions.  It examines the
.I the_hdr
structure provided and return (via its other arguments) newly
allocated space suitable for reading from or writing to an RLE file
described by the
.I the_hdr
structure.
.I Rle_raw_alloc
allocates
.RI ( the_hdr \(-> xmax
\-
.IR the_hdr \(-> xmin
+ 1)
elements per channel, which is more than should ever be needed for a
valid \fIRLE\fP file.

.I Rle_raw_free
should be used to free memory allocated by
.IR rle_raw_alloc (3).
The arguments are pointers to the allocated storage.
This is distinct from
.IR rle_freeraw (3),
which only frees pixel arrays referenced by individual
.I rle_op
structures, while
.I rle_raw_free
frees the storage consumed by the arrays of pointers and
.I rle_op
structures.
In fact,
.IR rle_freeraw
should be called before calling
.IR rle_raw_free .
.SH SEE ALSO
.na
.IR rle_hdr (3),
.IR rle_op (3),
.IR rle_putraw (3),
.IR rle_getraw (3),
.IR rle_freeraw (3),
.IR librle (3),
.IR RLE (5).
.ad b
.SH AUTHOR
Spencer W. Thomas
.br
University of Utah
.SH BUGS
The naming confusion between
.I rle_freeraw
and
.I rle_raw_free
is unfortunate.
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d3 1
a3 1
.UC 4 
d55 1
a55 1
.RI ( the_hdr \(-> xmax 
d63 1
a63 1
should be used to free memory allocated by 
d75 1
a75 1
In fact, 
@


1.1
log
@Sources that are external to BRL-CAD are moved from the top level to src/other/.
@
text
@@

