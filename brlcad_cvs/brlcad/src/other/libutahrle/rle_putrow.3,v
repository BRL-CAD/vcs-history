head	14.2;
access;
symbols
	rel-7-10-4:14.1
	STABLE:14.1.0.10
	stable-branch:14.1
	rel-7-10-2:14.1
	rel-7-10-0:14.1
	rel-7-8-4:14.1
	rel-7-8-2:14.1
	rel-7-8-0:14.1
	trimnurbs-branch:14.1.0.8
	help:14.1
	temp_tag:14.1
	bobWinPort-20051223-freeze:14.1
	postmerge-20051223-bobWinPort:14.1
	premerge-20051223-bobWinPort:14.1
	rel-7-6-6:14.1
	rel-7-6-4:14.1
	rel-7-6-2:14.1
	rel-7-6-branch:14.1.0.6
	rel-7-6-0:14.1
	rel-7-4-2:14.1
	rel-7-4-branch:14.1.0.4
	bobWinPort:14.1.0.2
	rel-7-4-0:14.1
	rel-7-2-6:14.1
	rel-7-2-4:14.1
	rel-7-2-2:14.1
	rel-7-2-0:14.1
	rel-7-0-4:14.1
	rel-7-0-2:14.1
	rel-7-0-1:14.1
	opensource-post:14.1
	opensource-pre:1.1
	rel-7-0-branch:1.1.0.2
	rel-7-0:1.1;
locks; strict;
comment	@.\" @;


14.2
date	2007.09.14.15.21.39;	author erikgreenwald;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.30;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.20.14.54.08;	author morrison;	state Exp;
branches;
next	;


desc
@@


14.2
log
@removed trailing whitespace
@
text
@.\" Copyright (c) 1986, University of Utah
.TH RLE_PUTROW 3 2/2/87 3
.SH NAME
rle_putrow \- Write a row (scanline) of data to an RLE file.
.SH SYNOPSIS
.B
#include <rle.h>
.sp
.B
void rle_putrow( rows, length, the_hdr );
.br
.B
rle_pixel ** rows;
.br
.B
int length;
.br
.B
rle_hdr * the_hdr;
.SH DESCRIPTION
.I Rle_putrow
is called for each output scanline when creating an
.IR RLE (5)
image.
.I Rows
is an array of pointers to the pixel data for the color components of
the scanline.  Rows should have
.IR the_hdr \(-> ncolors
elements.  If an alpha channel is being saved, rows[-1] should point to the
alpha channel data.
.I Length
is the number of pixels in the scanline.
.I Rows[i]
should point to the
.IR the_hdr \(-> xmin
element of the scanline.

The function
.IR rle_row_alloc (3)
will properly allocate memory for use by
.IR rle_putrow .
.SH SEE ALSO
.na
.IR rle_hdr (3),
.IR rle_skiprow (3),
.IR rle_putraw (3),
.IR rle_puteof (3),
.IR rle_row_alloc (3),
.IR rle_row_free (3),
.IR librle (3),
.IR RLE (5).
.ad b
.SH AUTHOR
Spencer W. Thomas, Todd Fuqua
.SH BUGS
Having the scanline indexed from
.I xmin
is an incredible botch.  Its origin lies in the deep dark history of
the raster toolkit, and it seems it's too late to change it now.
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d24 1
a24 1
image.  
d27 1
a27 1
the scanline.  Rows should have 
d32 1
a32 1
is the number of pixels in the scanline.  
d34 1
a34 1
should point to the 
d40 1
a40 1
will properly allocate memory for use by 
d56 1
a56 1
Having the scanline indexed from 
@


1.1
log
@Sources that are external to BRL-CAD are moved from the top level to src/other/.
@
text
@@

