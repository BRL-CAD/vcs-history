head	14.5;
access;
symbols
	rel-7-10-4:14.4
	STABLE:14.4.0.2
	stable-branch:14.3
	rel-7-10-2:14.4
	rel-7-10-0:14.3
	rel-7-8-4:14.3
	rel-7-8-2:14.3
	rel-7-8-0:14.3
	trimnurbs-branch:14.3.0.8
	help:14.3
	temp_tag:14.3
	bobWinPort-20051223-freeze:14.3
	postmerge-20051223-bobWinPort:14.3
	premerge-20051223-bobWinPort:14.3
	rel-7-6-6:14.3
	rel-7-6-4:14.3
	rel-7-6-2:14.3
	rel-7-6-branch:14.3.0.6
	rel-7-6-0:14.3
	rel-7-4-2:14.3
	rel-7-4-branch:14.3.0.4
	bobWinPort:14.3.0.2
	rel-7-4-0:14.3
	rel-7-2-6:14.3
	rel-7-2-4:14.3
	rel-7-2-2:14.3
	rel-7-2-0:14.3
	rel-7-0-4:14.3
	rel-7-0-2:14.2
	rel-7-0-1:14.1
	opensource-post:14.1
	opensource-pre:1.1
	rel-7-0-branch:1.1.0.2
	rel-7-0:1.1;
locks; strict;
comment	@ * @;


14.5
date	2007.09.14.15.21.39;	author erikgreenwald;	state Exp;
branches;
next	14.4;

14.4
date	2007.07.26.01.13.58;	author brlcad;	state Exp;
branches;
next	14.3;

14.3
date	2005.01.23.14.29.55;	author brlcad;	state Exp;
branches;
next	14.2;

14.2
date	2004.12.22.08.41.52;	author brlcad;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.30;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.20.14.54.09;	author morrison;	state Exp;
branches;
next	;


desc
@@


14.5
log
@removed trailing whitespace
@
text
@/*
 *			V A X S H O R T
 *
 *  Code to manipulate 16-bit integers in VAX order in a
 *  machine independent manner.
 *
 *  (VAX is a trademark of Digital Equipment Corporation)
 *
 *  Author -
 *	Michael John Muuss
 *
 *  Distribution Status -
 *	Public Domain, Distribution Unlimitied.
 */
#ifndef lint
static char RCSid[] = "@@(#)$Id: vaxshort.c,v 14.4 2007/07/26 01:13:58 brlcad Exp $ (BRL)";
#endif

/*
 *			V A X _ G S H O R T
 *
 *  Obtain a 16-bit signed integer from two adjacent characters,
 *  stored in VAX order, regardless of word alignment.
 */
int
vax_gshort(msgp)
char *msgp;
{
	register unsigned char *p = (unsigned char *) msgp;
	register int	i;

	if( (i = (p[1] << 8) | p[0]) & 0x8000 )
		return(i | ~0xFFFF);	/* Sign extend */
	return(i);
}

/*
 *			V A X _ P S H O R T
 */
char *
vax_pshort(msgp, s)
register char *msgp;
register unsigned short s;
{

	msgp[0] = s & 0xFF;
	msgp[1] = s >> 8;
	return(msgp+2);
}
@


14.4
log
@remove ephemeral data like phone numbers and addresses, including the misleading 'source' statements on code that is continually evolving and receiving contributions from many many sources
@
text
@d11 1
a11 1
 *  
d16 1
a16 1
static char RCSid[] = "@@(#)$Id: vaxshort.c,v 14.3 2005/01/23 14:29:55 brlcad Exp $ (BRL)";
@


14.3
log
@update from a patched 3.0 to urt 3.1b1 (library)
@
text
@a11 5
 *  Source -
 *	SECAD/VLD Computing Consortium, Bldg 394
 *	The U. S. Army Ballistic Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5066
 *  
d16 1
a16 1
static char RCSid[] = "@@(#)$Id: vaxshort.c,v 3.0 90/08/03 15:21:30 spencer Exp $ (BRL)";
@


14.2
log
@yay for last minute changes. decouple properly from libbu.
@
text
@d21 1
a21 1
static const char RCSid[] = "@@(#)$Id: vaxshort.c,v 14.1 2004/11/16 19:42:30 morrison Exp $ (BRL)";
a23 1
#ifndef HAVE_VAX_GSHORT
d31 2
a32 1
vax_gshort(char *msgp)
a40 1
#endif
a41 1
#ifndef HAVE_VAX_PSHORT
d46 3
a48 1
vax_pshort(char *msgp, unsigned int r)
d50 1
a50 1
	unsigned short int s = (unsigned short int)r;
a54 1
#endif
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d21 1
a21 1
static const char RCSid[] = "@@(#)$Id: vaxshort.c,v 1.1 2004/05/20 14:54:09 morrison Exp $ (BRL)";
a23 2
#define HAVE_VAX_GSHORT	/* from libbu/vfont.c */

@


1.1
log
@Sources that are external to BRL-CAD are moved from the top level to src/other/.
@
text
@d21 1
a21 1
static const char RCSid[] = "@@(#)$Id: vaxshort.c,v 11.6 2004/04/05 07:40:45 morrison Exp $ (BRL)";
@

