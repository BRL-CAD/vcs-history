head	1.3;
access;
symbols
	bobWinPort-20051223-freeze:1.1.2.2
	postmerge-20051223-bobWinPort:1.2
	bobWinPort:1.1.0.2;
locks; strict;
comment	@# @;


1.3
date	2005.12.27.19.26.46;	author brlcad;	state dead;
branches;
next	1.2;

1.2
date	2005.12.23.21.26.44;	author bob1961;	state Exp;
branches;
next	1.1;

1.1
date	2005.09.08.20.50.35;	author bob1961;	state dead;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2005.09.08.20.50.35;	author bob1961;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	2005.09.21.13.09.33;	author bob1961;	state Exp;
branches;
next	;


desc
@@


1.3
log
@don't need Makefile.in files in CVS when there are Makefile.am files
@
text
@# Makefile.in generated by automake 1.6.3 from Makefile.am.
# @@configure_input@@

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@@SET_MAKE@@
SHELL = @@SHELL@@

srcdir = @@srcdir@@
top_srcdir = @@top_srcdir@@
VPATH = @@srcdir@@
prefix = @@prefix@@
exec_prefix = @@exec_prefix@@

bindir = @@bindir@@
sbindir = @@sbindir@@
libexecdir = @@libexecdir@@
datadir = @@datadir@@
sysconfdir = @@sysconfdir@@
sharedstatedir = @@sharedstatedir@@
localstatedir = @@localstatedir@@
libdir = @@libdir@@
infodir = @@infodir@@
mandir = @@mandir@@
includedir = @@includedir@@
oldincludedir = /usr/include
pkgdatadir = $(datadir)/@@PACKAGE@@
pkglibdir = $(libdir)/@@PACKAGE@@
pkgincludedir = $(includedir)/@@PACKAGE@@
top_builddir = ../../../..

ACLOCAL = @@ACLOCAL@@
AUTOCONF = @@AUTOCONF@@
AUTOMAKE = @@AUTOMAKE@@
AUTOHEADER = @@AUTOHEADER@@

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @@INSTALL@@
INSTALL_PROGRAM = @@INSTALL_PROGRAM@@
INSTALL_DATA = @@INSTALL_DATA@@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_SCRIPT = @@INSTALL_SCRIPT@@
INSTALL_HEADER = $(INSTALL_DATA)
transform = @@program_transform_name@@
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_alias = @@host_alias@@
host_triplet = @@host@@

EXEEXT = @@EXEEXT@@
OBJEXT = @@OBJEXT@@
PATH_SEPARATOR = @@PATH_SEPARATOR@@
AMTAR = @@AMTAR@@
AR = @@AR@@
AS = @@AS@@
AWK = @@AWK@@
BCEDITOR = @@BCEDITOR@@
BLT_LIBRARY = @@BLT_LIBRARY@@
BLT_VERSION = @@BLT_VERSION@@
BN = @@BN@@
BRLCAD_DATA = @@BRLCAD_DATA@@
BRLCAD_ROOT = @@BRLCAD_ROOT@@
BRLCAD_VERSION = @@BRLCAD_VERSION@@
BU = @@BU@@
CC = @@CC@@
CFG_TCL_EXPORT_FILE_SUFFIX = @@CFG_TCL_EXPORT_FILE_SUFFIX@@
CFG_TCL_SHARED_LIB_SUFFIX = @@CFG_TCL_SHARED_LIB_SUFFIX@@
CFG_TCL_UNSHARED_LIB_SUFFIX = @@CFG_TCL_UNSHARED_LIB_SUFFIX@@
CFLAGS_DEBUG = @@CFLAGS_DEBUG@@
CFLAGS_OPTIMIZE = @@CFLAGS_OPTIMIZE@@
CFLAGS_WARNING = @@CFLAGS_WARNING@@
CONFIG_CACHE = @@CONFIG_CACHE@@
CONFIG_DATE = @@CONFIG_DATE@@
CONFIG_TIME = @@CONFIG_TIME@@
CP = @@CP@@
CPP = @@CPP@@
CURSOR = @@CURSOR@@
DEFS = @@DEFS@@
DEPDIR = @@DEPDIR@@
DLLTOOL = @@DLLTOOL@@
DL_LIBS = @@DL_LIBS@@
DM = @@DM@@
DOXYGEN = @@DOXYGEN@@
ECHO = @@ECHO@@
ECHO_N = @@ECHO_N@@
EXTRA_CFLAGS = @@EXTRA_CFLAGS@@
FB = @@FB@@
FFT = @@FFT@@
INSTALL_STRIP_PROGRAM = @@INSTALL_STRIP_PROGRAM@@
ITCL = @@ITCL@@
ITCL_VERSION = @@ITCL_VERSION@@
ITK = @@ITK@@
IWIDGETS_VERSION = @@IWIDGETS_VERSION@@
JAVA_CFLAGS = @@JAVA_CFLAGS@@
JAVA_LDFLAGS = @@JAVA_LDFLAGS@@
LDFLAGS_DEBUG = @@LDFLAGS_DEBUG@@
LDFLAGS_OPTIMIZE = @@LDFLAGS_OPTIMIZE@@
LEX = @@LEX@@
LEXLIB = @@LEXLIB@@
LEX_OUTPUT_ROOT = @@LEX_OUTPUT_ROOT@@
LIBDL = @@LIBDL@@
LIBGL = @@LIBGL@@
LIBM = @@LIBM@@
LIBMALLOC = @@LIBMALLOC@@
LIBMX = @@LIBMX@@
LIBNSL = @@LIBNSL@@
LIBRT = @@LIBRT@@
LIBS = @@LIBS@@
LIBSGIGL = @@LIBSGIGL@@
LIBSOCKET = @@LIBSOCKET@@
LIBTHREAD = @@LIBTHREAD@@
LIBTOOL = @@LIBTOOL@@
LIBTOOL_DEPS = @@LIBTOOL_DEPS@@
LIBZ = @@LIBZ@@
LN_S = @@LN_S@@
MAINT = @@MAINT@@
MAJOR_VERSION = @@MAJOR_VERSION@@
MATH_LIBS = @@MATH_LIBS@@
MINOR_VERSION = @@MINOR_VERSION@@
MULTISPECTRAL = @@MULTISPECTRAL@@
MV = @@MV@@
OBJDUMP = @@OBJDUMP@@
OPTICAL = @@OPTICAL@@
ORLE = @@ORLE@@
PACKAGE = @@PACKAGE@@
PACKAGE_NAME = @@PACKAGE_NAME@@
PATCH_VERSION = @@PATCH_VERSION@@
PKG = @@PKG@@
PNG = @@PNG@@
PYTHON = @@PYTHON@@
RANLIB = @@RANLIB@@
REGEX = @@REGEX@@
RLE = @@RLE@@
RM = @@RM@@
SAMPLE_APPLICATIONS_DIR = @@SAMPLE_APPLICATIONS_DIR@@
SDL_CFLAGS = @@SDL_CFLAGS@@
SDL_CONFIG = @@SDL_CONFIG@@
SDL_LIBS = @@SDL_LIBS@@
SH = @@SH@@
SHLIB_CFLAGS = @@SHLIB_CFLAGS@@
SHLIB_LD = @@SHLIB_LD@@
SHLIB_LD_LIBS = @@SHLIB_LD_LIBS@@
SHLIB_SUFFIX = @@SHLIB_SUFFIX@@
STLIB_LD = @@STLIB_LD@@
STRIP = @@STRIP@@
SYSV = @@SYSV@@
TCL = @@TCL@@
TCLCAD = @@TCLCAD@@
TCLSTUB = @@TCLSTUB@@
TCL_BUILD_LIB_SPEC = @@TCL_BUILD_LIB_SPEC@@
TCL_BUILD_STUB_LIB_PATH = @@TCL_BUILD_STUB_LIB_PATH@@
TCL_BUILD_STUB_LIB_SPEC = @@TCL_BUILD_STUB_LIB_SPEC@@
TCL_DBGX = @@TCL_DBGX@@
TCL_INCLUDE_SPEC = @@TCL_INCLUDE_SPEC@@
TCL_LIBRARY = @@TCL_LIBRARY@@
TCL_LIB_FILE = @@TCL_LIB_FILE@@
TCL_LIB_FLAG = @@TCL_LIB_FLAG@@
TCL_LIB_SPEC = @@TCL_LIB_SPEC@@
TCL_LIB_VERSIONS_OK = @@TCL_LIB_VERSIONS_OK@@
TCL_MAJOR_VERSION = @@TCL_MAJOR_VERSION@@
TCL_MINOR_VERSION = @@TCL_MINOR_VERSION@@
TCL_NEEDS_EXP_FILE = @@TCL_NEEDS_EXP_FILE@@
TCL_PACKAGE_PATH = @@TCL_PACKAGE_PATH@@
TCL_PATCH_LEVEL = @@TCL_PATCH_LEVEL@@
TCL_SHARED_BUILD = @@TCL_SHARED_BUILD@@
TCL_SRC_DIR = @@TCL_SRC_DIR@@
TCL_STUB_LIB_FILE = @@TCL_STUB_LIB_FILE@@
TCL_STUB_LIB_FLAG = @@TCL_STUB_LIB_FLAG@@
TCL_STUB_LIB_PATH = @@TCL_STUB_LIB_PATH@@
TCL_STUB_LIB_SPEC = @@TCL_STUB_LIB_SPEC@@
TCL_THREADS = @@TCL_THREADS@@
TCL_VERSION = @@TCL_VERSION@@
TERMIO = @@TERMIO@@
TERMLIB = @@TERMLIB@@
TK = @@TK@@
TKIMG_VERSION = @@TKIMG_VERSION@@
TKSTUB = @@TKSTUB@@
TK_LIBRARY = @@TK_LIBRARY@@
TK_VERSION = @@TK_VERSION@@
U = @@U@@
VERSION = @@VERSION@@
WDB = @@WDB@@
X_CFLAGS = @@X_CFLAGS@@
X_EXTRA_LIBS = @@X_EXTRA_LIBS@@
X_LIBS = @@X_LIBS@@
X_PREFIX = @@X_PREFIX@@
X_PRE_LIBS = @@X_PRE_LIBS@@
YACC = @@YACC@@
YFLAGS = @@YFLAGS@@
am__include = @@am__include@@
am__quote = @@am__quote@@
install_sh = @@install_sh@@
mkdir_p = @@mkdir_p@@

noinst_LTLIBRARIES = tkimgb.la

tkimgb_la_LDFLAGS = -module
tkimgb_la_SOURCES = \
	tkimg.c \
	tkimgIO.c \
	tkimgPPB.c \
	tkimgStubInit.c \
	tkimgStubLib.c \
	tkimgUtils.c


AM_CPPFLAGS = \
	-I${top_srcdir}/src/other/tkimg/base \
	-DTKIMG_VERSION="\"${TKIMG_VERSION}\"" \
	-DTKIMG_PACKAGE_NAME=\"Tkimg\" \
	-DTCL_LIBRARY="\"${TCL_LIBRARY}\"" \
	-DTCL_PACKAGE_PATH="\"${TCL_PACKAGE_PATH}\"" \
	-DUSE_TCLALLOC=0


MAINTAINERCLEANFILES = Makefile.in
subdir = src/other/tkimg/base
mkinstalldirs = $(SHELL) $(top_srcdir)/misc/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/include/brlcad_config.h
CONFIG_CLEAN_FILES =
LTLIBRARIES = $(noinst_LTLIBRARIES)

tkimgb_la_LIBADD =
am_tkimgb_la_OBJECTS = tkimg.lo tkimgIO.lo tkimgPPB.lo tkimgStubInit.lo \
	tkimgStubLib.lo tkimgUtils.lo
tkimgb_la_OBJECTS = $(am_tkimgb_la_OBJECTS)
DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)/include
CPPFLAGS = @@CPPFLAGS@@
LDFLAGS = @@LDFLAGS@@
depcomp = $(SHELL) $(top_srcdir)/misc/depcomp
am__depfiles_maybe = depfiles
@@AMDEP_TRUE@@DEP_FILES = ./$(DEPDIR)/tkimg.Plo ./$(DEPDIR)/tkimgIO.Plo \
@@AMDEP_TRUE@@	./$(DEPDIR)/tkimgPPB.Plo \
@@AMDEP_TRUE@@	./$(DEPDIR)/tkimgStubInit.Plo \
@@AMDEP_TRUE@@	./$(DEPDIR)/tkimgStubLib.Plo \
@@AMDEP_TRUE@@	./$(DEPDIR)/tkimgUtils.Plo
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) \
	$(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@@
CFLAGS = @@CFLAGS@@
DIST_SOURCES = $(tkimgb_la_SOURCES)
DIST_COMMON = README ChangeLog Makefile.am Makefile.in configure \
	configure.in
SOURCES = $(tkimgb_la_SOURCES)

all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in: @@MAINTAINER_MODE_TRUE@@ Makefile.am $(top_srcdir)/misc/Makefile.defs $(top_srcdir)/configure.ac $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/other/tkimg/base/Makefile
Makefile: @@MAINTAINER_MODE_TRUE@@ $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@@ $(am__depfiles_maybe)

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test -z "$dir" && dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
tkimgb.la: $(tkimgb_la_OBJECTS) $(tkimgb_la_DEPENDENCIES) 
	$(LINK)  $(tkimgb_la_LDFLAGS) $(tkimgb_la_OBJECTS) $(tkimgb_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/tkimg.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/tkimgIO.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/tkimgPPB.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/tkimgStubInit.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/tkimgStubLib.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/tkimgUtils.Plo@@am__quote@@

distclean-depend:
	-rm -rf ./$(DEPDIR)

.c.o:
@@AMDEP_TRUE@@	source='$<' object='$@@' libtool=no @@AMDEPBACKSLASH@@
@@AMDEP_TRUE@@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @@AMDEPBACKSLASH@@
@@AMDEP_TRUE@@	$(CCDEPMODE) $(depcomp) @@AMDEPBACKSLASH@@
	$(COMPILE) -c `test -f '$<' || echo '$(srcdir)/'`$<

.c.obj:
@@AMDEP_TRUE@@	source='$<' object='$@@' libtool=no @@AMDEPBACKSLASH@@
@@AMDEP_TRUE@@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @@AMDEPBACKSLASH@@
@@AMDEP_TRUE@@	$(CCDEPMODE) $(depcomp) @@AMDEPBACKSLASH@@
	$(COMPILE) -c `cygpath -w $<`

.c.lo:
@@AMDEP_TRUE@@	source='$<' object='$@@' libtool=yes @@AMDEPBACKSLASH@@
@@AMDEP_TRUE@@	depfile='$(DEPDIR)/$*.Plo' tmpdepfile='$(DEPDIR)/$*.TPlo' @@AMDEPBACKSLASH@@
@@AMDEP_TRUE@@	$(CCDEPMODE) $(depcomp) @@AMDEPBACKSLASH@@
	$(LTCOMPILE) -c -o $@@ `test -f '$<' || echo '$(srcdir)/'`$<
CCDEPMODE = @@CCDEPMODE@@

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

ETAGS = etags
ETAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ../../../..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@@list='$(DISTFILES)'; for file in $$list; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES)

installdirs:

install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@@echo "This command is intended for maintainers to use"
	@@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
clean: clean-am

clean-am: clean-generic clean-libtool clean-noinstLTLIBRARIES \
	mostlyclean-am

distclean: distclean-am

distclean-am: clean-am distclean-compile distclean-depend \
	distclean-generic distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am:

install-exec-am:

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

uninstall-am: uninstall-info-am

.PHONY: GTAGS all all-am check check-am clean clean-generic \
	clean-libtool clean-noinstLTLIBRARIES distclean \
	distclean-compile distclean-depend distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am info \
	info-am install install-am install-data install-data-am \
	install-exec install-exec-am install-info install-info-am \
	install-man install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool tags uninstall uninstall-am \
	uninstall-info-am


.PHONY: fast fast-am fast-recursive noprod prodclean prodclean-recursive

#
# compile all sources first, then link on a second pass.  requires 2x
# disk space to account for uncertainty on whether the objects are for
# a library or an executable.
#
fast: fast-recursive

fast-am: $(FAST_OBJECTS) all-am

fast-recursive:
	@@list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) fast); \
	done
	@@$(MAKE) $(AM_MAKEFLAGS) fast-am

#
# remove all of the build targets (binaries and libraries)
#
noprod: prodclean

prodclean: prodclean-recursive
	@@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
	@@list='$(noinst_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
	@@test -z "$(lib_LTLIBRARIES)" || echo rm -f $(lib_LTLIBRARIES) && rm -f $(lib_LTLIBRARIES)
	@@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test -z "$dir" && dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
	@@test -z "$(noinst_LTLIBRARIES)" || echo rm -f $(noinst_LTLIBRARIES) && rm -f $(noinst_LTLIBRARIES)
	@@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test -z "$dir" && dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done

prodclean-recursive:
	@@list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) prodclean); \
	done
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
@


1.2
log
@Merge of bobWinPort
@
text
@@


1.1
log
@file Makefile.in was initially added on branch bobWinPort.
@
text
@d1 529
@


1.1.2.1
log
@Initial check-in
@
text
@a0 535
# Makefile.in --
#
#	This file is a Makefile for tkimg TEA Extension.  If it has the name
#	"Makefile.in" then it is a template for a Makefile;  to generate the
#	actual Makefile, run "./configure", which is a configuration script
#	generated by the "autoconf" program (constructs like "@@foo@@" will get
#	replaced in the actual Makefile.
#
# Copyright (c) 2002 ActiveState SRL.
#
# See the file "license.terms" for information on usage and redistribution
# of this file, and for a DISCLAIMER OF ALL WARRANTIES.
#
# RCS: @@(#) $Id: Makefile.in,v 1.5 2002/12/10 06:26:43 andreas_kupries Exp $

#========================================================================
# Edit the following few lines when writing a new extension
#========================================================================

#========================================================================
# Enumerate the names of the source files included in this package.
# This will be used when a dist target is added to the Makefile.
# EXTRA_SOURCES will be replaced by WIN_SOURCES or UNIX_SOURCES, as is
# appropriate for your platform.  It is not important to specify the
# directory, as long as it is the $(srcdir) or in the generic, win or
# unix subdirectory.
#========================================================================

tkimg_SOURCES	=			\
		tkimg.c			\
		tkimgIO.c		\
		tkimgPPB.c		\
		tkimgUtils.c		\
		tkimgStubInit.c		\
		tkimgStubLib.c		\
		@@EXTRA_SOURCES@@

WIN_SOURCES	= 
UNIX_SOURCES	= 

#========================================================================
# Identify the object files.  This replaces .c with .$(OBJEXT) for all
# the named source files.   These objects are created and linked into the
# final library.  In these do not correspond directly to the source files
# above, you will need to enumerate the object files here.
# Normally we would use $(OBJEXT), but certain make executables won't do
# the extra macro in a macro conversion properly.
#
# "tkimg_LIB_FILE" refers to the library (dynamic or static as per
# configuration options) composed of the named objects.
#========================================================================

tkimg_OBJECTS		= $(tkimg_SOURCES:.c=.@@OBJEXT@@)
tkimg_LIB_FILE		= @@tkimg_LIB_FILE@@

tkimgstub_OBJECTS	= tkimgStubLib.$(OBJEXT)
tkimgstub_LIB_FILE	= @@tkimgstub_LIB_FILE@@

#========================================================================
# RUNTIME_SOURCES identifies Tcl runtime files that are associated with
# this package that need to be installed, if any.
#========================================================================

#RUNTIME_SOURCES =

#========================================================================
# This is a list of header files to be installed
#========================================================================

GENERIC_HDRS	=	$(srcdir)/tkimg.h $(srcdir)/tkimgDecls.h

#========================================================================
# This is a list of script files to be installed
#========================================================================

GENERIC_SCRIPTS	=

#========================================================================
# Add additional lines to handle any additional AC_SUBST cases that
# have been added to the configure script.
#========================================================================

#ZLIBSUPPORT_NEW_VAR	= @@ZLIBSUPPORT_NEW_VAR@@

#========================================================================
# Nothing of the variables below this line need to be changed.  Please
# check the TARGETS section below to make sure the make targets are
# correct.
#========================================================================

#========================================================================
# The variable "$(PACKAGE)_LIB_FILE" is the parameterized name of the
# library that we are building.
#========================================================================

lib_BINARIES	= $($(PACKAGE)_LIB_FILE) $($(PACKAGE)stub_LIB_FILE)
BINARIES	= $(lib_BINARIES)

SHELL		= @@SHELL@@

srcdir		= @@srcdir@@
prefix		= @@prefix@@
exec_prefix	= @@exec_prefix@@

bindir		= @@bindir@@
libdir		= @@libdir@@
datadir		= @@datadir@@
mandir		= @@mandir@@
includedir	= @@includedir@@

DESTDIR		=

PKG_DIR		= $(PACKAGE)$(VERSION)
pkgdatadir	= $(datadir)/$(PKG_DIR)
pkglibdir	= $(libdir)/$(PKG_DIR)
pkgincludedir	= $(includedir)/$(PKG_DIR)

top_builddir	= .

INSTALL		= @@INSTALL@@
INSTALL_PROGRAM	= @@INSTALL_PROGRAM@@
INSTALL_DATA	= @@INSTALL_DATA@@
INSTALL_SCRIPT	= @@INSTALL_SCRIPT@@

PACKAGE		= @@PACKAGE@@
DPACKAGE	= @@DPACKAGE@@
VERSION		= @@VERSION@@
CC		= @@CC@@
CFLAGS_DEBUG	= @@CFLAGS_DEBUG@@
CFLAGS_DEFAULT	= @@CFLAGS_DEFAULT@@
CFLAGS_OPTIMIZE	= @@CFLAGS_OPTIMIZE@@
CLEANFILES	= @@CLEANFILES@@
EXEEXT		= @@EXEEXT@@
LDFLAGS_DEBUG	= @@LDFLAGS_DEBUG@@
LDFLAGS_DEFAULT	= @@LDFLAGS_DEFAULT@@
LDFLAGS_OPTIMIZE = @@LDFLAGS_OPTIMIZE@@
MAKE_LIB	= @@MAKE_LIB@@
MAKE_SHARED_LIB	= @@MAKE_SHARED_LIB@@
MAKE_STATIC_LIB	= @@MAKE_STATIC_LIB@@
MAKE_STUB_LIB	= @@MAKE_STUB_LIB@@
OBJEXT		= @@OBJEXT@@
RANLIB		= @@RANLIB@@
SHLIB_CFLAGS	= @@SHLIB_CFLAGS@@
SHLIB_LD	= @@SHLIB_LD@@
SHLIB_LDFLAGS	= @@SHLIB_LDFLAGS@@
SHLIB_LD_LIBS	= @@SHLIB_LD_LIBS@@
STLIB_LD	= @@STLIB_LD@@
TCL_DEFS	= @@TCL_DEFS@@
TCL_BIN_DIR	= @@TCL_BIN_DIR@@
TCL_SRC_DIR	= @@TCL_SRC_DIR@@
TK_BIN_DIR	= @@TK_BIN_DIR@@
TK_SRC_DIR	= @@TK_SRC_DIR@@
# This is necessary for packages that use private Tcl headers
#TCL_TOP_DIR_NATIVE	= @@TCL_TOP_DIR_NATIVE@@
# Not used, but retained for reference of what libs Tcl required
TCL_LIBS	= @@TCL_LIBS@@
TK_LIBS		= @@TK_LIBS@@

#========================================================================
# TCLLIBPATH seeds the auto_path in Tcl's init.tcl so we can test our
# package without installing.  The other environment variables allow us
# to test against an uninstalled Tcl.  Add special env vars that you
# require for testing here (like TCLX_LIBRARY).
#========================================================================

EXTRA_PATH	= $(top_builddir):$(TCL_BIN_DIR):$(TK_BIN_DIR)
TCLSH_ENV	= TCL_LIBRARY=`@@CYGPATH@@ $(TCL_SRC_DIR)/library` \
		  TK_LIBRARY=`@@CYGPATH@@ $(TK_SRC_DIR)/library` \
		  LD_LIBRARY_PATH="$(EXTRA_PATH):$(LD_LIBRARY_PATH)" \
		  LIBPATH="$(EXTRA_PATH):${LIBPATH}" \
		  SHLIB_PATH="$(EXTRA_PATH):${SHLIB_PATH}" \
		  PATH="$(EXTRA_PATH):$(PATH)" \
		  TCLLIBPATH="$(top_builddir)"
TCLSH_PROG	= @@TCLSH_PROG@@
WISH_PROG	= @@WISH_PROG@@
TCLSH		= $(TCLSH_ENV) $(TCLSH_PROG)
WISH		= $(TCLSH_ENV) $(WISH_PROG)
SHARED_BUILD	= @@SHARED_BUILD@@

# Note: TK_XINCLUDES may contain a shell comment. When using a
# separate variable this comment turns into a Makefile comment, the
# variable is empty. Inserting the value in place introduces a comment
# into the compiler command line, cutting of the command.
X11_INCLUDES	= @@TK_XINCLUDES@@

INCLUDES	= -I$(srcdir) -I. @@TCL_INCLUDES@@ @@TK_INCLUDES@@ $(X11_INCLUDES)

EXTRA_CFLAGS	= $(MEM_DEBUG_FLAGS) @@EXTRA_CFLAGS@@

DEFS		= $(TCL_DEFS) @@DEFS@@ $(EXTRA_CFLAGS)

CONFIG_CLEAN_FILES = Makefile tkimgConfig.sh pkgIndex.tcl

CPPFLAGS	= @@CPPFLAGS@@ -DPACKAGE_NAME=\"$(DPACKAGE)\"
LIBS		= @@LIBS@@
AR		= ar
CFLAGS		= @@CFLAGS@@
COMPILE		= $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)

#========================================================================
# Start of user-definable TARGETS section
#========================================================================

#========================================================================
# TEA TARGETS.  Please note that the "libraries:" target refers to platform
# independent files, and the "binaries:" target inclues executable programs and
# platform-dependent libraries.  Modify these targets so that they install
# the various pieces of your package.  The make and install rules
# for the BINARIES that you specified above have already been done.
#========================================================================

all: binaries libraries doc

#========================================================================
# The binaries target builds executable programs, Windows .dll's, unix
# shared/static libraries, and any other platform-dependent files.
# The list of targets to build for "binaries:" is specified at the top
# of the Makefile, in the "BINARIES" variable.
#========================================================================

binaries: $(BINARIES)

libraries:

doc:

install: all install-binaries install-libraries install-doc

install-binaries: binaries install-lib-binaries install-bin-binaries
	if test "x$(SHARED_BUILD)" = "x1"; then \
	    $(INSTALL_DATA) pkgIndex.tcl $(DESTDIR)$(pkglibdir); \
	fi

#========================================================================
# This rule installs platform-independent files, such as header files.
#========================================================================

install-libraries: libraries
	@@mkdir -p $(DESTDIR)$(includedir)
	@@echo "Installing header files in $(DESTDIR)$(includedir)"
	@@for i in $(GENERIC_HDRS) ; do \
	    echo "Installing $$i" ; \
	    $(INSTALL_DATA) $$i $(DESTDIR)$(includedir) ; \
	done;
##	@@for p in $(GENERIC_SCRIPTS); do \
##	  if test -f $$p; then \
##	    echo "Installing $$p"; \
##	    $(INSTALL_DATA) $$p $(pkglibdir); \
##	  else :; fi; \
##	done
##	@@echo "libraries done"

#========================================================================
# Install documentation.  Unix manpages should go in the $(mandir)
# directory.
#========================================================================

install-doc: doc


testshell	=	$(WISH_PROG) $(srcdir)/testshell

test: binaries libraries
	@@echo The base package "'tkimg'" cannot be tested separately.
	@@echo Test the format handlers to exercise its functionality.

#	$(TCLSH) `@@CYGPATH@@ $(srcdir)/tests/all.tcl` $(TESTFLAGS)
#	$(testshell)	\
#		-load 'load ./$(tkimg_LIB_FILE)' \
#		-testdir $(srcdir)/tea.tests
#
#test: binaries libraries
#	echo load ./$(tkimg_LIB_FILE) \; cd $(srcdir)/tests \; source all | $(WISH) $(TESTFLAGS)


shell: binaries libraries
	@@$(WISH) $(SCRIPT)

gdb:
	$(WISH_ENV) gdb $(WISH_PROG) $(SCRIPT)

depend:

#========================================================================
# $($(PACKAGE)_LIB_FILE) should be listed as part of the BINARIES variable
# mentioned above.  That will ensure that this target is built when you
# run "make binaries".
#
# The $($(PACKAGE)_OBJECTS) objects are created and linked into the final
# library.  In most cases these object files will correspond to the
# source files above.
#========================================================================

$($(PACKAGE)_LIB_FILE): $($(PACKAGE)_OBJECTS)
	-rm -f $($(PACKAGE)_LIB_FILE)
	${MAKE_LIB}
	$(RANLIB) $($(PACKAGE)_LIB_FILE)

$($(PACKAGE)stub_LIB_FILE): $($(PACKAGE)stub_OBJECTS)
	-rm -f $($(PACKAGE)stub_LIB_FILE)
	${MAKE_STUB_LIB}
	$(RANLIB) $($(PACKAGE)stub_LIB_FILE)

#========================================================================
# We need to enumerate the list of .c to .o lines here.
#
# In the following lines, $(srcdir) refers to the toplevel directory
# containing your extension.  If your sources are in a subdirectory,
# you will have to modify the paths to reflect this:
#
# tkimg.$(OBJEXT): $(srcdir)/generic/tkimg.c
# 	$(COMPILE) -c `@@CYGPATH@@ $(srcdir)/generic/tkimg.c` -o $@@
#
# Setting the VPATH variable to a list of paths will cause the makefile
# to look into these paths when resolving .c to .obj dependencies.
# As necessary, add $(srcdir):$(srcdir)/compat:....
#========================================================================

VPATH = $(srcdir):$(srcdir)/..

.c.$(OBJEXT):
	$(COMPILE) -c `@@CYGPATH@@ $<` -o $@@

#========================================================================
# Create the pkgIndex.tcl file.
# It is usually easiest to let Tcl do this for you with pkg_mkIndex, but
# you may find that you need to customize the package.  If so, either
# modify the -hand version, or create a pkgIndex.tcl.in file and have
# the configure script output the pkgIndex.tcl by editing configure.in.
#========================================================================
#
# The configure generates the index, nothing to be done here.
#
#pkgIndex.tcl:
#	( echo pkg_mkIndex . $($(PACKAGE)_LIB_FILE) \; exit; ) | $(TCLSH)
#
# pkgIndex.tcl-hand:
#	(echo 'package ifneeded $(PACKAGE) $(VERSION) \
#	    [list load [file join $$dir $($(PACKAGE)_LIB_FILE)]]'\
#	) > pkgIndex.tcl

#========================================================================
# Distribution creation
# You may need to tweak this target to make it work correctly.
#========================================================================

#COMPRESS	= tar cvf $(PKG_DIR).tar $(PKG_DIR); compress $(PKG_DIR).tar
COMPRESS	= gtar zcvf $(PKG_DIR).tar.gz $(PKG_DIR)
DIST_ROOT	= /tmp/dist
DIST_DIR	= $(DIST_ROOT)/$(PKG_DIR)

dist-clean:
	rm -rf $(DIST_DIR) $(DIST_ROOT)/$(PKG_DIR).tar.*

dist: dist-clean doc
	mkdir -p $(DIST_DIR)
	cp -p $(srcdir)/ChangeLog $(srcdir)/README* $(srcdir)/doc/license* \
		$(srcdir)/aclocal.m4 $(srcdir)/configure $(srcdir)/*.in \
		$(DIST_DIR)/
	chmod 664 $(DIST_DIR)/Makefile.in $(DIST_DIR)/aclocal.m4
	chmod 775 $(DIST_DIR)/configure $(DIST_DIR)/configure.in

	mkdir $(DIST_DIR)/tclconfig
	cp $(srcdir)/tclconfig/install-sh $(srcdir)/tclconfig/tcl.m4 \
		$(DIST_DIR)/tclconfig/
	chmod 664 $(DIST_DIR)/tclconfig/tcl.m4
	chmod +x $(DIST_DIR)/tclconfig/install-sh

	-list='htdocs/art demos generic library mac tests unix win tea.tests tools tools/rules'; \
	for p in $$list; do \
	    if test -d $(srcdir)/$$p ; then \
		mkdir -p $(DIST_DIR)/$$p; \
		cp -p $(srcdir)/$$p/*.* $(srcdir)/$$p/* $(DIST_DIR)/$$p/; \
	    fi; \
	done

	-list='doc'; \
	for p in $$list; do \
	    if test -d $$p ; then \
		mkdir -p $(DIST_DIR)/$$p; \
		cp -p $$p/*.* $$p/* $(DIST_DIR)/$$p/; \
	    fi; \
	done
	-mv $(DIST_DIR)/htdocs/art $(DIST_DIR)/doc/art
	rm -rf $(DIST_DIR)/htdocs

	(cd $(DIST_ROOT); $(COMPRESS);)

dist_orig:
	rm -rf $(PKG_DIR)*
	ls -d $(srcdir)/* > __FILES
	mkdir $(PKG_DIR)
	cp -rf `cat __FILES | grep -v __FILES` $(PKG_DIR)
	rm __FILES
	find $(PKG_DIR) -name CVS -prune -exec rm -rf {} \;
	cd $(PKG_DIR) ; $(TCLSH_PROG) PREPARE
	-tar cf - $(PKG_DIR) | gzip --best > $(PKG_DIR).tar.gz
	-tar cf - $(PKG_DIR) | bzip2 > $(PKG_DIR).tar.bz2
	-zip -r $(PKG_DIR).zip $(PKG_DIR)
	rm -rf $(PKG_DIR)

#========================================================================
# End of user-definable section
#========================================================================

#========================================================================
# Don't modify the file to clean here.  Instead, set the "CLEANFILES"
# variable in configure.in
#========================================================================

clean:  
	-test -z "$(BINARIES)" || rm -f $(BINARIES)
	-rm -f *.$(OBJEXT) core *.core
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean: clean
	-rm -f *.tab.c
	-rm -rf $(CONFIG_CLEAN_FILES)
	-rm -f config.cache config.log config.status

#========================================================================
# Install binary object libraries.  On Windows this includes both .dll and
# .lib files.  Because the .lib files are not explicitly listed anywhere,
# we need to deduce their existence from the .dll file of the same name.
# Library files go into the lib directory.
# In addition, this will generate the pkgIndex.tcl
# file in the install location (assuming it can find a usable tclsh shell)
#
# You should not have to modify this target.
#========================================================================

install-lib-binaries:
	@@mkdir -p $(DESTDIR)$(pkglibdir)
	@@list='$(lib_BINARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    echo " $(INSTALL_PROGRAM) $$p $(DESTDIR)$(pkglibdir)/$$p"; \
	    $(INSTALL_PROGRAM) $$p $(DESTDIR)$(pkglibdir)/$$p; \
	    echo " $(RANLIB) $(DESTDIR)$(pkglibdir)/$$p"; \
	    $(RANLIB) $(DESTDIR)$(pkglibdir)/$$p; \
	    ext=`echo $$p|sed -e "s/.*\.//"`; \
	    if test "x$$ext" = "xdll"; then \
		lib=`basename $$p|sed -e 's/.[^.]*$$//'`.lib; \
		if test -f $$lib; then \
		    echo " $(INSTALL_DATA) $$lib $(DESTDIR)$(pkglibdir)/$$lib"; \
	            $(INSTALL_DATA) $$lib $(DESTDIR)$(pkglibdir)/$$lib; \
		fi; \
	    fi; \
	  fi; \
	done
	@@list='$(RUNTIME_SOURCES)'; for p in $$list; do \
	  if test -f $(srcdir)/library/$$p; then \
	    echo " Install $$p $(DESTDIR)$(pkglibdir)/$$p"; \
	    $(INSTALL_DATA) $(srcdir)/library/$$p $(DESTDIR)$(pkglibdir)/$$p; \
	  fi; \
	done
	$(INSTALL_DATA) tkimgConfig.sh $(DESTDIR)$(libdir)

#========================================================================
# Install binary executables (e.g. .exe files and dependent .dll files)
# This is for files that must go in the bin directory (located next to
# wish and tclsh), like dependent .dll files on Windows.
#
# You should not have to modify this target, except to define bin_BINARIES
# above if necessary.
#========================================================================

install-bin-binaries:
	@@mkdir -p $(DESTDIR)$(bindir)
	@@list='$(bin_BINARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    echo " $(INSTALL_PROGRAM) $$p $(DESTDIR)$(bindir)/$$p"; \
	    $(INSTALL_PROGRAM) $$p $(DESTDIR)$(bindir)/$$p; \
	  fi; \
	done

.SUFFIXES: .c .$(OBJEXT)

Makefile: $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) \
	  && CONFIG_FILES=$@@ CONFIG_HEADERS= $(SHELL) ./config.status

uninstall-binaries:
	list='$(lib_BINARIES)'; for p in $$list; do \
	  rm -f $(DESTDIR)$(pkglibdir)/$$p; \
	done
	list='$(RUNTIME_SOURCES)'; for p in $$list; do \
	  rm -f $(DESTDIR)$(pkglibdir)/$$p; \
	done
	list='$(bin_BINARIES)'; for p in $$list; do \
	  rm -f $(DESTDIR)$(bindir)/$$p; \
	done

#========================================================================
#
# Target to regenerate header files and stub files from the *.decls tables.
#
#========================================================================

## Reminder how to create stubs without configuring the package
##
##	$(MAKE) SHELL=/bin/sh TCLSH_PROG=tclsh srcdir=. genstubs

genstubs:
	$(TCLSH_PROG)	\
		$(srcdir)/tools/genStubs.tcl $(srcdir)	\
		$(srcdir)/tkimg.decls

#========================================================================
#
# Target to check that all exported functions have an entry in the stubs
# tables.
#
#========================================================================

tkimg_DECLS = \
	$(srcdir)/tkimg.decls

checkstubs:
	-@@for i in `nm -p $(tkimg_LIB_FILE) | awk '$$2 ~ /T/ { print $$3 }' \
		| sort -n`; do \
		match=0; \
		for j in $(tkimg_DECLS); do \
		    if [ `grep -c $$i $$j` -gt 0 ]; then \
			match=1; \
		    fi; \
		done; \
		if [ $$match -eq 0 ]; then echo $$i; fi \
	done


.PHONY: all binaries clean depend distclean doc install libraries test

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
@


1.1.2.2
log
@Initial check-in
@
text
@d1 375
a375 2
# Makefile.in generated by automake 1.6.3 from Makefile.am.
# @@configure_input@@
d377 6
a382 281
# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@@SET_MAKE@@

# compile all sources first, then link on a second pass.  requires 2x
# disk space to account for uncertainty on whether the objects are for
# a library or an executable.
SHELL = @@SHELL@@

srcdir = @@srcdir@@
top_srcdir = @@top_srcdir@@
VPATH = @@srcdir@@
prefix = @@prefix@@
exec_prefix = @@exec_prefix@@

bindir = @@bindir@@
sbindir = @@sbindir@@
libexecdir = @@libexecdir@@
datadir = @@datadir@@
sysconfdir = @@sysconfdir@@
sharedstatedir = @@sharedstatedir@@
localstatedir = @@localstatedir@@
libdir = @@libdir@@
infodir = @@infodir@@
mandir = @@mandir@@
includedir = @@includedir@@
oldincludedir = /usr/include
pkgdatadir = $(datadir)/@@PACKAGE@@
pkglibdir = $(libdir)/@@PACKAGE@@
pkgincludedir = $(includedir)/@@PACKAGE@@
top_builddir = ../../../..

ACLOCAL = @@ACLOCAL@@
AUTOCONF = @@AUTOCONF@@
AUTOMAKE = @@AUTOMAKE@@
AUTOHEADER = @@AUTOHEADER@@

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @@INSTALL@@
INSTALL_PROGRAM = @@INSTALL_PROGRAM@@
INSTALL_DATA = @@INSTALL_DATA@@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_SCRIPT = @@INSTALL_SCRIPT@@
INSTALL_HEADER = $(INSTALL_DATA)
transform = @@program_transform_name@@
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_alias = @@host_alias@@
host_triplet = @@host@@

EXEEXT = @@EXEEXT@@
OBJEXT = @@OBJEXT@@
PATH_SEPARATOR = @@PATH_SEPARATOR@@
AMTAR = @@AMTAR@@
AR = @@AR@@
AS = @@AS@@
AWK = @@AWK@@
BLT_LIBRARY = @@BLT_LIBRARY@@
BLT_VERSION = @@BLT_VERSION@@
BN = @@BN@@
BRLCAD_DATA = @@BRLCAD_DATA@@
BRLCAD_ROOT = @@BRLCAD_ROOT@@
BRLCAD_VERSION = @@BRLCAD_VERSION@@
BTCLSH_DEPENDENCY = @@BTCLSH_DEPENDENCY@@
BU = @@BU@@
CC = @@CC@@
CFG_TCL_EXPORT_FILE_SUFFIX = @@CFG_TCL_EXPORT_FILE_SUFFIX@@
CFG_TCL_SHARED_LIB_SUFFIX = @@CFG_TCL_SHARED_LIB_SUFFIX@@
CFG_TCL_UNSHARED_LIB_SUFFIX = @@CFG_TCL_UNSHARED_LIB_SUFFIX@@
CFLAGS_DEBUG = @@CFLAGS_DEBUG@@
CFLAGS_OPTIMIZE = @@CFLAGS_OPTIMIZE@@
CFLAGS_WARNING = @@CFLAGS_WARNING@@
CONFIG_CACHE = @@CONFIG_CACHE@@
CONFIG_DATE = @@CONFIG_DATE@@
CONFIG_TIME = @@CONFIG_TIME@@
CP = @@CP@@
CPP = @@CPP@@
CURSOR = @@CURSOR@@
DEFS = @@DEFS@@
DEPDIR = @@DEPDIR@@
DLLTOOL = @@DLLTOOL@@
DL_LIBS = @@DL_LIBS@@
DM = @@DM@@
DOXYGEN = @@DOXYGEN@@
ECHO = @@ECHO@@
ECHO_N = @@ECHO_N@@
EXTRA_CFLAGS = @@EXTRA_CFLAGS@@
FB = @@FB@@
FFT = @@FFT@@
INSTALL_STRIP_PROGRAM = @@INSTALL_STRIP_PROGRAM@@
ITCL = @@ITCL@@
ITCL_VERSION = @@ITCL_VERSION@@
ITK = @@ITK@@
IWIDGETS_VERSION = @@IWIDGETS_VERSION@@
JAVA_CFLAGS = @@JAVA_CFLAGS@@
JAVA_LDFLAGS = @@JAVA_LDFLAGS@@
LDFLAGS_DEBUG = @@LDFLAGS_DEBUG@@
LDFLAGS_OPTIMIZE = @@LDFLAGS_OPTIMIZE@@
LEX = @@LEX@@
LEXLIB = @@LEXLIB@@
LEX_OUTPUT_ROOT = @@LEX_OUTPUT_ROOT@@
LIBDL = @@LIBDL@@
LIBGL = @@LIBGL@@
LIBM = @@LIBM@@
LIBMALLOC = @@LIBMALLOC@@
LIBMX = @@LIBMX@@
LIBNSL = @@LIBNSL@@
LIBRT = @@LIBRT@@
LIBS = @@LIBS@@
LIBSGIGL = @@LIBSGIGL@@
LIBSOCKET = @@LIBSOCKET@@
LIBTHREAD = @@LIBTHREAD@@
LIBTOOL = @@LIBTOOL@@
LIBTOOL_DEPS = @@LIBTOOL_DEPS@@
LIBZ = @@LIBZ@@
LN_S = @@LN_S@@
MAINT = @@MAINT@@
MAJOR_VERSION = @@MAJOR_VERSION@@
MATH_LIBS = @@MATH_LIBS@@
MINOR_VERSION = @@MINOR_VERSION@@
MULTISPECTRAL = @@MULTISPECTRAL@@
MV = @@MV@@
OBJDUMP = @@OBJDUMP@@
OPTICAL = @@OPTICAL@@
ORLE = @@ORLE@@
PACKAGE = @@PACKAGE@@
PACKAGE_NAME = @@PACKAGE_NAME@@
PATCH_VERSION = @@PATCH_VERSION@@
PKG = @@PKG@@
PNG = @@PNG@@
RANLIB = @@RANLIB@@
REGEX = @@REGEX@@
RLE = @@RLE@@
RM = @@RM@@
SAMPLE_APPLICATIONS_DIR = @@SAMPLE_APPLICATIONS_DIR@@
SDL_CFLAGS = @@SDL_CFLAGS@@
SDL_CONFIG = @@SDL_CONFIG@@
SDL_CONFIG_PROG = @@SDL_CONFIG_PROG@@
SDL_LIBS = @@SDL_LIBS@@
SH = @@SH@@
SHLIB_CFLAGS = @@SHLIB_CFLAGS@@
SHLIB_LD = @@SHLIB_LD@@
SHLIB_LD_LIBS = @@SHLIB_LD_LIBS@@
SHLIB_SUFFIX = @@SHLIB_SUFFIX@@
STLIB_LD = @@STLIB_LD@@
STRIP = @@STRIP@@
SYSV = @@SYSV@@
TCL = @@TCL@@
TCLCAD = @@TCLCAD@@
TCLSTUB = @@TCLSTUB@@
TCL_BUILD_LIB_SPEC = @@TCL_BUILD_LIB_SPEC@@
TCL_BUILD_STUB_LIB_PATH = @@TCL_BUILD_STUB_LIB_PATH@@
TCL_BUILD_STUB_LIB_SPEC = @@TCL_BUILD_STUB_LIB_SPEC@@
TCL_DBGX = @@TCL_DBGX@@
TCL_INCLUDE_SPEC = @@TCL_INCLUDE_SPEC@@
TCL_LIBRARY = @@TCL_LIBRARY@@
TCL_LIB_FILE = @@TCL_LIB_FILE@@
TCL_LIB_FLAG = @@TCL_LIB_FLAG@@
TCL_LIB_SPEC = @@TCL_LIB_SPEC@@
TCL_LIB_VERSIONS_OK = @@TCL_LIB_VERSIONS_OK@@
TCL_MAJOR_VERSION = @@TCL_MAJOR_VERSION@@
TCL_MINOR_VERSION = @@TCL_MINOR_VERSION@@
TCL_NEEDS_EXP_FILE = @@TCL_NEEDS_EXP_FILE@@
TCL_PACKAGE_PATH = @@TCL_PACKAGE_PATH@@
TCL_PATCH_LEVEL = @@TCL_PATCH_LEVEL@@
TCL_SHARED_BUILD = @@TCL_SHARED_BUILD@@
TCL_SRC_DIR = @@TCL_SRC_DIR@@
TCL_STUB_LIB_FILE = @@TCL_STUB_LIB_FILE@@
TCL_STUB_LIB_FLAG = @@TCL_STUB_LIB_FLAG@@
TCL_STUB_LIB_PATH = @@TCL_STUB_LIB_PATH@@
TCL_STUB_LIB_SPEC = @@TCL_STUB_LIB_SPEC@@
TCL_THREADS = @@TCL_THREADS@@
TCL_VERSION = @@TCL_VERSION@@
TERMIO = @@TERMIO@@
TERMLIB = @@TERMLIB@@
TK = @@TK@@
TKIMG_VERSION = @@TKIMG_VERSION@@
TKSTUB = @@TKSTUB@@
TK_LIBRARY = @@TK_LIBRARY@@
TK_VERSION = @@TK_VERSION@@
U = @@U@@
VERSION = @@VERSION@@
WDB = @@WDB@@
X_CFLAGS = @@X_CFLAGS@@
X_EXTRA_LIBS = @@X_EXTRA_LIBS@@
X_LIBS = @@X_LIBS@@
X_PREFIX = @@X_PREFIX@@
X_PRE_LIBS = @@X_PRE_LIBS@@
YACC = @@YACC@@
am__include = @@am__include@@
am__quote = @@am__quote@@
install_sh = @@install_sh@@
mkdir_p = @@mkdir_p@@

noinst_LTLIBRARIES = tkimgb.la

tkimgb_la_LDFLAGS = -module
tkimgb_la_SOURCES = \
	tkimg.c \
	tkimgIO.c \
	tkimgPPB.c \
	tkimgStubInit.c \
	tkimgStubLib.c \
	tkimgUtils.c


AM_CPPFLAGS = \
	-I${top_srcdir}/src/other/tkimg/base \
	-DTKIMG_VERSION="\"${TKIMG_VERSION}\"" \
	-DTKIMG_PACKAGE_NAME=\"Tkimg\" \
	-DTCL_LIBRARY="\"${TCL_LIBRARY}\"" \
	-DTCL_PACKAGE_PATH="\"${TCL_PACKAGE_PATH}\"" \
	-DUSE_TCLALLOC=0


MAINTAINERCLEANFILES = Makefile.in
subdir = src/other/tkimg/base
mkinstalldirs = $(SHELL) $(top_srcdir)/misc/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/include/brlcad_config.h
CONFIG_CLEAN_FILES =
LTLIBRARIES = $(noinst_LTLIBRARIES)

tkimgb_la_LIBADD =
am_tkimgb_la_OBJECTS = tkimg.lo tkimgIO.lo tkimgPPB.lo tkimgStubInit.lo \
	tkimgStubLib.lo tkimgUtils.lo
tkimgb_la_OBJECTS = $(am_tkimgb_la_OBJECTS)
DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)/include
CPPFLAGS = @@CPPFLAGS@@
LDFLAGS = @@LDFLAGS@@
depcomp = $(SHELL) $(top_srcdir)/misc/depcomp
am__depfiles_maybe = depfiles
@@AMDEP_TRUE@@DEP_FILES = ./$(DEPDIR)/tkimg.Plo ./$(DEPDIR)/tkimgIO.Plo \
@@AMDEP_TRUE@@	./$(DEPDIR)/tkimgPPB.Plo \
@@AMDEP_TRUE@@	./$(DEPDIR)/tkimgStubInit.Plo \
@@AMDEP_TRUE@@	./$(DEPDIR)/tkimgStubLib.Plo \
@@AMDEP_TRUE@@	./$(DEPDIR)/tkimgUtils.Plo
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) \
	$(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@@
CFLAGS = @@CFLAGS@@
DIST_SOURCES = $(tkimgb_la_SOURCES)
DIST_COMMON = README ChangeLog Makefile.am Makefile.in configure \
	configure.in
SOURCES = $(tkimgb_la_SOURCES)

all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in: @@MAINTAINER_MODE_TRUE@@ Makefile.am $(top_srcdir)/misc/Makefile.defs $(top_srcdir)/configure.ac $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/other/tkimg/base/Makefile
Makefile: @@MAINTAINER_MODE_TRUE@@ $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@@ $(am__depfiles_maybe)

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test -z "$dir" && dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
d384 2
a385 2
tkimgb.la: $(tkimgb_la_OBJECTS) $(tkimgb_la_DEPENDENCIES) 
	$(LINK)  $(tkimgb_la_LDFLAGS) $(tkimgb_la_OBJECTS) $(tkimgb_la_LIBADD) $(LIBS)
d387 26
a412 1
mostlyclean-compile:
d414 1
d416 1
a416 1
distclean-compile:
d418 2
d421 27
a447 88
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/tkimg.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/tkimgIO.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/tkimgPPB.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/tkimgStubInit.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/tkimgStubLib.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/tkimgUtils.Plo@@am__quote@@

distclean-depend:
	-rm -rf ./$(DEPDIR)

.c.o:
@@AMDEP_TRUE@@	source='$<' object='$@@' libtool=no @@AMDEPBACKSLASH@@
@@AMDEP_TRUE@@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @@AMDEPBACKSLASH@@
@@AMDEP_TRUE@@	$(CCDEPMODE) $(depcomp) @@AMDEPBACKSLASH@@
	$(COMPILE) -c `test -f '$<' || echo '$(srcdir)/'`$<

.c.obj:
@@AMDEP_TRUE@@	source='$<' object='$@@' libtool=no @@AMDEPBACKSLASH@@
@@AMDEP_TRUE@@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @@AMDEPBACKSLASH@@
@@AMDEP_TRUE@@	$(CCDEPMODE) $(depcomp) @@AMDEPBACKSLASH@@
	$(COMPILE) -c `cygpath -w $<`

.c.lo:
@@AMDEP_TRUE@@	source='$<' object='$@@' libtool=yes @@AMDEPBACKSLASH@@
@@AMDEP_TRUE@@	depfile='$(DEPDIR)/$*.Plo' tmpdepfile='$(DEPDIR)/$*.TPlo' @@AMDEPBACKSLASH@@
@@AMDEP_TRUE@@	$(CCDEPMODE) $(depcomp) @@AMDEPBACKSLASH@@
	$(LTCOMPILE) -c -o $@@ `test -f '$<' || echo '$(srcdir)/'`$<
CCDEPMODE = @@CCDEPMODE@@

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

ETAGS = etags
ETAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ../../../..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@@list='$(DISTFILES)'; for file in $$list; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
d449 5
a453 9
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
d456 1
a456 3
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES)
d458 17
a474 1
installdirs:
d476 1
a476 4
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am
d478 14
a491 2
install-am: all-am
	@@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
d493 36
a528 21
installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@@echo "This command is intended for maintainers to use"
	@@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
clean: clean-am

clean-am: clean-generic clean-libtool clean-noinstLTLIBRARIES \
	mostlyclean-am
a529 1
distclean: distclean-am
d531 1
a531 2
distclean-am: clean-am distclean-compile distclean-depend \
	distclean-generic distclean-libtool distclean-tags
a532 50
dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am:

install-exec-am:

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

uninstall-am: uninstall-info-am

.PHONY: GTAGS all all-am check check-am clean clean-generic \
	clean-libtool clean-noinstLTLIBRARIES distclean \
	distclean-compile distclean-depend distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am info \
	info-am install install-am install-data install-data-am \
	install-exec install-exec-am install-info install-info-am \
	install-man install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool tags uninstall uninstall-am \
	uninstall-info-am


.PHONY: fast fast-recursive

fast: $(FAST_OBJECTS) fast-recursive all-am

fast-recursive:
	@@list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) fast); \
	done
@


