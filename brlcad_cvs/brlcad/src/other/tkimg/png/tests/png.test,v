head	1.2;
access;
symbols
	rel-7-10-4:1.2
	STABLE:1.2.0.4
	rel-7-10-2:1.2
	rel-7-10-0:1.2
	rel-7-8-4:1.2
	rel-7-8-2:1.2
	rel-7-8-0:1.2
	trimnurbs-branch:1.2.0.2
	help:1.2
	temp_tag:1.2
	bobWinPort-20051223-freeze:1.1.2.1
	postmerge-20051223-bobWinPort:1.2
	bobWinPort:1.1.0.2;
locks; strict;
comment	@# @;


1.2
date	2005.12.23.21.26.45;	author bob1961;	state Exp;
branches;
next	1.1;

1.1
date	2005.09.08.20.50.35;	author bob1961;	state dead;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2005.09.08.20.50.35;	author bob1961;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Merge of bobWinPort
@
text
@# This file is a Tcl script to test out PNG reading and writing.
# It is organized in the standard fasion for Tcl tests.
#

puts "img::png [package require img::png]"

set pngdata \
{iVBORw0KGgoAAAANSUhEUgAAABAAAAAMCAIAAAGTgppAAAAABGdBTUEAAYagMeiWXwAAAHxJ
REFUeJyVUMERgDAIC54D+HMDmanbuI0zxQ38uYE+uALW66N5UUISqJCE4X52ACBZS2umPkCS
pPjAdZYJCUJy3Q57LLK7vURChdEfeWulqh4dRLa6zhJEE+B0N2OcEFtGVXNYvrQV9JwauH7G
76f+WCQGurv2MCwYvuEFQANGc1+HFcEAAAAASUVORK5CYII=}

test png-1.1 {} {
    catch {image delete i}
    image create photo i -file [file join $tcltest::testsDirectory folder.png]
    i data -format png
} $pngdata
test png-1.2 {} {
    catch {image delete i}
    image create photo i -data $pngdata
    set data [i data -format png]
} $pngdata
test png-1.3 {} {
    i blank
    i put $data
    set data [i data -format png]
} $pngdata
test png-1.4 {} {
    i blank
    i put $data -format png
    set data [i data -format png]
} $pngdata

if {[info tclversion] < 8.0} {
    return
}

test png-2.0 {Binary I/O with PNG images} {
    i blank
    set f [open [file join $tcltest::testsDirectory folder.png] r]
    fconfigure $f -translation binary
    set return [catch {i put [read $f]} msg]
    close $f
    lappend return $msg
} {0 {}}
@


1.1
log
@file png.test was initially added on branch bobWinPort.
@
text
@d1 45
@


1.1.2.1
log
@Initial check-in
@
text
@a0 45
# This file is a Tcl script to test out PNG reading and writing.
# It is organized in the standard fasion for Tcl tests.
#

puts "img::png [package require img::png]"

set pngdata \
{iVBORw0KGgoAAAANSUhEUgAAABAAAAAMCAIAAAGTgppAAAAABGdBTUEAAYagMeiWXwAAAHxJ
REFUeJyVUMERgDAIC54D+HMDmanbuI0zxQ38uYE+uALW66N5UUISqJCE4X52ACBZS2umPkCS
pPjAdZYJCUJy3Q57LLK7vURChdEfeWulqh4dRLa6zhJEE+B0N2OcEFtGVXNYvrQV9JwauH7G
76f+WCQGurv2MCwYvuEFQANGc1+HFcEAAAAASUVORK5CYII=}

test png-1.1 {} {
    catch {image delete i}
    image create photo i -file [file join $tcltest::testsDirectory folder.png]
    i data -format png
} $pngdata
test png-1.2 {} {
    catch {image delete i}
    image create photo i -data $pngdata
    set data [i data -format png]
} $pngdata
test png-1.3 {} {
    i blank
    i put $data
    set data [i data -format png]
} $pngdata
test png-1.4 {} {
    i blank
    i put $data -format png
    set data [i data -format png]
} $pngdata

if {[info tclversion] < 8.0} {
    return
}

test png-2.0 {Binary I/O with PNG images} {
    i blank
    set f [open [file join $tcltest::testsDirectory folder.png] r]
    fconfigure $f -translation binary
    set return [catch {i put [read $f]} msg]
    close $f
    lappend return $msg
} {0 {}}
@

