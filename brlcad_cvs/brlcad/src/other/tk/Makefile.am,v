head	1.15;
access;
symbols
	rel-7-10-4:1.10.2.1
	STABLE:1.10.0.2
	rel-7-10-2:1.10
	rel-7-10-0:1.8;
locks; strict;
comment	@# @;


1.15
date	2007.11.21.13.50.37;	author brlcad;	state Exp;
branches;
next	1.14;

1.14
date	2007.11.20.18.33.39;	author brlcad;	state Exp;
branches;
next	1.13;

1.13
date	2007.10.12.07.24.12;	author brlcad;	state Exp;
branches;
next	1.12;

1.12
date	2007.10.03.19.36.27;	author brlcad;	state Exp;
branches;
next	1.11;

1.11
date	2007.09.15.16.23.19;	author brlcad;	state Exp;
branches;
next	1.10;

1.10
date	2007.07.31.01.03.04;	author brlcad;	state Exp;
branches
	1.10.2.1;
next	1.9;

1.9
date	2007.06.29.03.30.17;	author brlcad;	state Exp;
branches;
next	1.8;

1.8
date	2007.04.03.00.28.08;	author brlcad;	state Exp;
branches;
next	1.7;

1.7
date	2007.03.20.18.46.30;	author brlcad;	state Exp;
branches;
next	1.6;

1.6
date	2007.03.09.21.22.12;	author brlcad;	state Exp;
branches;
next	1.5;

1.5
date	2007.03.07.19.57.13;	author erikgreenwald;	state Exp;
branches;
next	1.4;

1.4
date	2007.03.07.19.53.16;	author erikgreenwald;	state Exp;
branches;
next	1.3;

1.3
date	2007.03.06.23.00.11;	author brlcad;	state Exp;
branches;
next	1.2;

1.2
date	2007.03.06.21.03.18;	author erikgreenwald;	state Exp;
branches;
next	1.1;

1.1
date	2007.03.02.21.49.34;	author brlcad;	state Exp;
branches;
next	;

1.10.2.1
date	2007.10.12.07.38.50;	author brlcad;	state Exp;
branches;
next	;


desc
@@


1.15
log
@if we're building against system tcl/tk, then there's no unix dir to traverse into if we're doing an out-of-src build.  this fixes distcheck on said platform situations too
@
text
@# $Id: Makefile.am,v 1.14 2007/11/20 18:33:39 brlcad Exp $

all: all-am

all-am:
	if test -d unix ; then cd unix && $(MAKE) $(AM_MAKEFLAGS) all ; fi

clean-am:
	if test -d unix ; then cd unix && $(MAKE) $(AM_MAKEFLAGS) clean ; fi

distclean-am:
	if test -d unix ; then cd unix && $(MAKE) $(AM_MAKEFLAGS) distclean ; fi

install-am: all-am
	if test -d unix ; then cd unix && $(MAKE) $(AM_MAKEFLAGS) install ; fi

INSTALLED_BINARIES = \
	wish8.5

INSTALLED_INCLUDES = \
	tk.h \
	tkDecls.h \
	tkPlatDecls.h

INSTALLED_ARCHIVES = \
	libtk.* \
	libtk8.5.* \
	libtkstub.* \
	libtkstub8.5.* \
	tk8.5 \
	tkConfig.sh

INSTALLED_MANPAGES = \
	wish.1 \
	Tk_*.3 \
	Ttk_*.3 \
	loadTk.n \
	tk.n \
	tk_*.n \
	ttk_*.n \
	tkerror.n \
	tkvars.n \
	tkwait.n \
	toplevel.n

uninstall-bin:
	@@$(NORMAL_UNINSTALL)
	@@list='$(INSTALLED_BINARIES)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f $(DESTDIR)$(bindir)/$$f"; \
	  rm -f $(DESTDIR)$(bindir)/$$f; \
	done

uninstall-includes:
	@@$(NORMAL_UNINSTALL)
	@@list='$(INSTALLED_INCLUDES)'; for p in $$list; do \
	  echo " rm -f $(DESTDIR)$(includedir)/$$p"; \
	  rm -f $(DESTDIR)$(includedir)/$$p; \
	done

uninstall-libs:
	@@$(NORMAL_UNINSTALL)
	@@list='$(INSTALLED_ARCHIVES)'; for p in $$list; do \
	  echo " rm -rf $(DESTDIR)$(libdir)/$$p"; \
	  rm -rf $(DESTDIR)$(libdir)/$$p; \
	done

man1dir = $(mandir)/man1
uninstall-man1:
	@@$(NORMAL_UNINSTALL)
	@@list=''; \
	l2='$(INSTALLED_MANPAGES)'; \
	for i in $$l2; do \
	  case "$$i" in \
	    *.1*) list="$$list $$i" ;; \
	  esac; \
	done; \
	for i in $$list; do \
	  ext=`echo $$i | sed -e 's/^.*\\.//'`; \
	  inst=`echo $$i | sed -e 's/\\.[0-9a-z]*$$//'`; \
	  inst=`echo $$inst | sed -e 's/^.*\///'`; \
	  inst=`echo $$inst | sed '$(transform)'`.$$ext; \
	  echo " rm -f $(DESTDIR)$(man1dir)/$$inst"; \
	  rm -f $(DESTDIR)$(man1dir)/$$inst; \
	done

man3dir = $(mandir)/man3
uninstall-man3:
	@@$(NORMAL_UNINSTALL)
	@@list=''; \
	l2='$(INSTALLED_MANPAGES)'; \
	for i in $$l2; do \
	  case "$$i" in \
	    *.3*) list="$$list $$i" ;; \
	  esac; \
	done; \
	for i in $$list; do \
	  ext=`echo $$i | sed -e 's/^.*\\.//'`; \
	  inst=`echo $$i | sed -e 's/\\.[0-9a-z]*$$//'`; \
	  inst=`echo $$inst | sed -e 's/^.*\///'`; \
	  inst=`echo $$inst | sed '$(transform)'`.$$ext; \
	  echo " rm -f $(DESTDIR)$(man3dir)/$$inst"; \
	  rm -f $(DESTDIR)$(man3dir)/$$inst; \
	done

manndir = $(mandir)/mann
uninstall-mann:
	@@$(NORMAL_UNINSTALL)
	@@list=''; \
	l2='$(INSTALLED_MANPAGES)'; \
	for i in $$l2; do \
	  case "$$i" in \
	    *.n*) list="$$list $$i" ;; \
	  esac; \
	done; \
	for i in $$list; do \
	  ext=`echo $$i | sed -e 's/^.*\\.//'`; \
	  inst=`echo $$i | sed -e 's/\\.[0-9a-z]*$$//'`; \
	  inst=`echo $$inst | sed -e 's/^.*\///'`; \
	  inst=`echo $$inst | sed '$(transform)'`.$$ext; \
	  echo " rm -f $(DESTDIR)$(manndir)/$$inst"; \
	  rm -f $(DESTDIR)$(manndir)/$$inst; \
	done

uninstall-mans: uninstall-man1 uninstall-man3 uninstall-mann

uninstall-am: uninstall-bin uninstall-includes uninstall-libs uninstall-mans

noprod: prodclean

prodclean-recursive:

prodclean: prodclean-recursive
	cd unix && rm -f libtk* wish tktest Tk

fast: all-am

depends: all-am

EXTRA_DIST = \
	ChangeLog \
	ChangeLog.2002 \
	ChangeLog.2004 \
	README \
	bitmaps \
	changes \
	compat \
	doc \
	generic \
	library \
	license.terms \
	macosx \
	tests \
	unix/Makefile \
	unix/Makefile.in \
	unix/README \
	unix/aclocal.m4 \
	unix/config.status \
	unix/configure \
	unix/configure.in \
	unix/install-sh \
	unix/installManPage \
	unix/license.terms \
	unix/tcl.m4 \
	unix/tk.spec \
	unix/tkAppInit.c \
	unix/tkConfig.h.in \
	unix/tkConfig.sh \
	unix/tkConfig.sh.in \
	unix/tkUnix.c \
	unix/tkUnix3d.c \
	unix/tkUnixButton.c \
	unix/tkUnixColor.c \
	unix/tkUnixConfig.c \
	unix/tkUnixCursor.c \
	unix/tkUnixDefault.h \
	unix/tkUnixDialog.c \
	unix/tkUnixDraw.c \
	unix/tkUnixEmbed.c \
	unix/tkUnixEvent.c \
	unix/tkUnixFocus.c \
	unix/tkUnixFont.c \
	unix/tkUnixInit.c \
	unix/tkUnixInt.h \
	unix/tkUnixKey.c \
	unix/tkUnixMenu.c \
	unix/tkUnixMenubu.c \
	unix/tkUnixPort.h \
	unix/tkUnixRFont.c \
	unix/tkUnixScale.c \
	unix/tkUnixScrlbr.c \
	unix/tkUnixSelect.c \
	unix/tkUnixSend.c \
	unix/tkUnixWm.c \
	unix/tkUnixXId.c \
	win \
	xlib

DISTCLEANFILES = \
	unix/autom4te.cache \
	unix/config.log \
	unix/config.status \
	unix/configure \
	unix/tkConfig.sh \
	unix/wish

# INTENTIONALLY NOT INCLUDED
# include $(top_srcdir)/misc/Makefile.defs
@


1.14
log
@more files missing from the source dist
@
text
@d1 1
a1 1
# $Id: Makefile.am,v 1.13 2007/10/12 07:24:12 brlcad Exp $
d6 1
a6 1
	cd unix && $(MAKE) $(AM_MAKEFLAGS) all
d9 1
a9 1
	cd unix && $(MAKE) $(AM_MAKEFLAGS) clean
d12 1
a12 1
	cd unix && $(MAKE) $(AM_MAKEFLAGS) distclean
d15 1
a15 1
	cd unix && $(MAKE) $(AM_MAKEFLAGS) install
@


1.13
log
@create/generate the generic versionless libraries during compile/install so that the former behavior of just using -ltcl and -ltk will work for external codes.
@
text
@d1 1
a1 1
# $Id: Makefile.am,v 1.12 2007/10/03 19:36:27 brlcad Exp $
d167 1
@


1.12
log
@remove the MAINTAINERCLEAN rules, they're never really used regardless of the debate over whether the Makefile.in files belong there or not
@
text
@d1 1
a1 1
# $Id: Makefile.am,v 1.11 2007/09/15 16:23:19 brlcad Exp $
d26 1
d28 1
@


1.11
log
@more c89 embracing.  c89 provides string.h for all of the various str*() and mem*() functions, so remove the check for its presence.  there is still likely to be work required for strict c89 conformance for the various bsd strings.h functions that may be in use.
@
text
@d1 1
a1 1
# $Id: Makefile.am,v 1.10 2007/07/31 01:03:04 brlcad Exp $
d204 2
a205 1
MAINTAINERCLEANFILES = Makefile.in
@


1.10
log
@more items that need to be uninstalled, added since a5 to a6
@
text
@d1 3
a3 1
# $Id: Makefile.am,v 1.9 2007/06/29 03:30:17 brlcad Exp $
@


1.10.2.1
log
@merge the tcl/tk symlink checks in from head so that -ltcl and -ltk work for external users
@
text
@d1 1
a1 3
# $Id: Makefile.am,v 1.13 2007/10/12 07:24:12 brlcad Exp $

all: all-am
a23 1
	libtk.* \
a24 1
	libtkstub.* \
d202 1
a202 2
# INTENTIONALLY NOT INCLUDED
# include $(top_srcdir)/misc/Makefile.defs
@


1.9
log
@tk doesn't have a unix/dltest dir to prodclean
@
text
@d1 1
a1 1
# $Id: Makefile.am,v 1.8 2007/04/03 00:28:08 brlcad Exp $
d24 2
a25 2
	libtk8.5.a \
	libtkstub8.5.a \
d32 1
d36 1
d39 2
a40 1
	tkwait.n
@


1.8
log
@the work is never done.  clean up the build specification for tcl/tk so that other targets like install, distclean, distcheck, and even uninstall (which tcl/tk bastages don't provide themselves) now work.  have to expand the unix subdir to appease distcheck success.
@
text
@d1 1
a1 1
# $Id: Makefile.am,v 1.7 2007/03/20 18:46:30 brlcad Exp $
a127 1
	cd unix/dltest && $(MAKE) $(AM_MAKEFLAGS) clean
@


1.7
log
@er, don't do nothing.. make make noprod work correctly, remove the tcl/tk products
@
text
@d1 1
a1 19
# $Id: Makefile.am,v 1.6 2007/03/09 21:22:12 brlcad Exp $

EXTRA_DIST = \
	ChangeLog \
	ChangeLog.2002 \
	ChangeLog.2004 \
	README \
	bitmaps \
	changes \
	compat \
	doc \
	generic \
	library \
	license.terms \
	macosx \
	tests \
	unix \
	win \
	xlib
d9 113
d134 58
@


1.6
log
@restore make dist support by removing 'unix' as a SUBDIRS; add rules for all-am and clean-am for starters.  only tested on fbsd thusfar.
@
text
@d1 1
a1 1
# $Id: Makefile.am,v 1.5 2007/03/07 19:57:13 erikgreenwald Exp $
d27 1
a27 1
noprod:
d31 3
a33 1
prodclean:
@


1.5
log
@change depends to depend on all-am to avoid recursive issue
@
text
@d1 1
a1 3
# $Id: Makefile.am,v 1.4 2007/03/07 19:53:16 erikgreenwald Exp $

SUBDIRS = unix
d21 6
@


1.4
log
@include makefile defs, for "depends" target
@
text
@d1 1
a1 1
# $Id: Makefile.am,v 1.3 2007/03/06 23:00:11 brlcad Exp $
d31 1
a31 1
include $(top_srcdir)/misc/Makefile.defs
@


1.3
log
@make sure the generated build files are either ignored or deleted
@
text
@d1 1
a1 1
# $Id: Makefile.am,v 1.2 2007/03/06 21:03:18 erikgreenwald Exp $
d31 2
@


1.2
log
@map the 'fast' target to 'all-am' to allow 'fast' build to succeed without twisting up tcl and tk too much
@
text
@d1 1
a1 1
# $Id: Makefile.am,v 1.1 2007/03/02 21:49:34 brlcad Exp $
d30 10
@


1.1
log
@upgrade tcl/tk from 8.4.6 to 8.5a5; also move to a recursive configure, using AC_CONFIG_SUBDIRS to call upon tcl, tk, and enigma's configure scripts as needed instead of redoing their build systems for our purpose.  this has a rather drastic impact on the way the libraries are linked together, including the need to compile tcl/tk static so as to avoid libtool portability issues as well as letting us take advantage of their build system for reduced maintenance and easing future upgrades.  undoubtedly more build issues to be worked out with other platforms given the extent of this change.  this does move us one step closer towards correctly linking against system tcl/tk installations too.
@
text
@d1 1
a1 1
# $Id: $
d28 2
@

