head	1.3;
access;
symbols
	rel-7-10-4:1.1
	STABLE:1.1.0.2
	rel-7-10-2:1.1;
locks; strict;
comment	@# @;


1.3
date	2007.11.06.21.38.40;	author erikgreenwald;	state Exp;
branches;
next	1.2;

1.2
date	2007.09.14.15.21.57;	author erikgreenwald;	state Exp;
branches;
next	1.1;

1.1
date	2007.05.07.04.17.39;	author brlcad;	state Exp;
branches;
next	;


desc
@@


1.3
log
@tk 8.5a6->8.5b1
@
text
@'\"
'\" Copyright (c) 2004 Joe English
'\" 
'\" See the file "license.terms" for information on usage and redistribution
'\" of this file, and for a DISCLAIMER OF ALL WARRANTIES.
'\" 
'\" RCS: @@(#) $Id: ttk_style.n,v 1.3 2006/12/13 23:04:33 hobbs Exp $
'\" 
.so man.macros
.TH ttk_style n 8.5 Tk "Tk Themed Widget"
.BS
.SH NAME
ttk_style \- Control overall look and feel of widgets
.SH SYNOPSIS
\fBttk::style\fR \fIoption\fR ?\fIargs\fR?
.BE

.SH NOTES
.PP
This manpage has not been written yet.
Please see the Tcl'2004 conference presentation,
available at http://tktable.sourceforge.net/tile/tile-tcl2004.pdf

.SH DEFINITIONS
.PP
Each widget is assigned a \fIstyle\fR,
which specifies the set of elements making up the widget
and how they are arranged, along with dynamic and default
settings for element resources.
By default, the style name is the same as the widget's class;
this may be overridden by the \fB-style\fR option. 
.PP
A \fItheme\fR is a collection of elements and styles 
which controls the overall look and feel of an application.
.SH DESCRIPTION
The \fBttk::style\fR command takes the following arguments:
.TP
\fBttk::style configure \fIstyle\fR ?\fI-option \fR?\fIvalue option value...\fR? ?
Sets the default value of the specified option(s) in \fIstyle\fR.
.TP
\fBttk::style map \fIstyle\fR ?\fI-option\fR { \fIstatespec value\fR } ... ?
Sets dynamic values of the specified option(s) in \fIstyle\fR.
Each \fIstatespec / value\fR pair is examined in order;
the value corresponding to the first matching \fIstatespec\fR
is used.
.TP
\fBttk::style lookup \fIstyle\fR \fI-option \fR?\fIstate \fR?\fIdefault\fR??
Returns the value specified for \fI-option\fR in style \fIstyle\fR
in state \fIstate\fR, using the standard lookup rules for element options.
\fIstate\fR is a list of state names; if omitted, 
it defaults to all bits off (the ``normal'' state).
If the \fIdefault\fR argument is present, it is used as a fallback
value in case no specification for \fI-option\fR is found.
.\" Otherwise -- signal error? return empty string?  Leave unspecified for now. 
.TP
\fBttk::style layout \fIstyle\fR ?\fIlayoutSpec\fR?
Define the widget layout for style \fIstyle\fR.  
See "\fBLAYOUTS\fR" below for the format of \fIlayoutSpec\fR.
If \fIlayoutSpec\fR is omitted, return the layout specification
for style \fIstyle\fR.
.TP 
\fBttk::style element create\fR \fIelementName\fR \fItype\fR ?\fIargs...\fR?
Creates a new element in the current theme of type \fItype\fR.
The only built-in element type is \fIimage\fR (see \fIimage(n)\fR),
although themes may define other element types 
(see \fBTtk_RegisterElementFactory\fR).
.TP 
\fBttk::style element names\fR
Returns the list of elements defined in the current theme.
.TP 
\fBttk::style element options \fIelement\fR
Returns the list of \fIelement\fR's options.
.TP
\fBttk::style theme create\fR \fIthemeName\fR ?\fB-parent \fIbasedon\fR? ?\fB-settings \fIscript...\fR ?
Creates a new theme.  It is an error if \fIthemeName\fR already exists.
If \fI-parent\fR is specified, the new theme will inherit
styles, elements, and layouts from the parent theme \fIbasedon\fB.
If \fI-settings\fR is present, \fIscript\fR is evaluated in the
context of the new theme as per \fBttk::style theme settings\fR.
.TP
\fBttk::style theme settings \fIthemeName\fR \fIscript\fR
Temporarily sets the current theme to \fIthemeName\fR, 
evaluate \fIscript\fR, then restore the previous theme.
Typically \fIscript\fR simply defines styles and elements,
though arbitrary Tcl code may appear.
.TP
\fBttk::style theme names\fR
Returns a list of the available themes.
.TP
\fBttk::style theme use\fR \fIthemeName\fR
Sets the current theme to \fIthemeName\fR, and refreshes all widgets.

.SH LAYOUTS
A \fIlayout\fR specifies a list of elements, each followed
by one or more options specifying how to arrange the element.
The layout mechanism uses a simplified version of the \fBpack\fR
geometry manager: given an initial cavity,
each element is allocated a parcel.
Valid options are:
.TP 
\fB-side \fIside\fR
Specifies which side of the cavity to place the element;
one of \fBleft\fR, \fBright\fR, \fBtop\fR, or \fBbottom\fR.
If omitted, the element occupies the entire cavity.
.TP
\fB-sticky \fI[nswe]\fR
Specifies where the element is placed inside its allocated parcel.
.TP
\fB-children \fI{ sublayout... }\fR
Specifies a list of elements to place inside the element.
.\" Also: -border, -unit, -expand: may go away.
.PP
For example:
.CS
ttk::style layout Horizontal.TScrollbar {
    Scrollbar.trough -children {
        Scrollbar.leftarrow -side left
        Scrollbar.rightarrow -side right
        Horizontal.Scrollbar.thumb -side left -sticky ew
    }
}
.CE

.SH "SEE ALSO"
ttk_intro(n), ttk_widget(n), photo(n)

.SH KEYWORDS
style, theme, appearance
@


1.2
log
@removed trailing whitespace
@
text
@d3 1
a3 1
'\"
d6 3
a8 3
'\"
'\" RCS: @@(#) $Id: ttk_style.n,v 1.1 2007/05/07 04:17:39 brlcad Exp $
'\"
d31 1
a31 1
this may be overridden by the \fB-style\fR option.
d33 1
a33 1
A \fItheme\fR is a collection of elements and styles
d50 1
a50 1
\fIstate\fR is a list of state names; if omitted,
d54 1
a54 1
.\" Otherwise -- signal error? return empty string?  Leave unspecified for now.
d57 1
a57 1
Define the widget layout for style \fIstyle\fR.
d61 1
a61 1
.TP
d65 1
a65 1
although themes may define other element types
d67 1
a67 1
.TP
d70 1
a70 1
.TP
d82 1
a82 1
Temporarily sets the current theme to \fIthemeName\fR,
d100 1
a100 1
.TP
@


1.1
log
@upgrade to tcl/tk 8.5a6 (from 8.5a5) .. includes even more (extensive) aquatk fixes/enhancements
@
text
@d3 1
a3 1
'\" 
d6 3
a8 3
'\" 
'\" RCS: @@(#) $Id: ttk_style.n,v 1.3 2006/12/13 23:04:33 hobbs Exp $
'\" 
d31 1
a31 1
this may be overridden by the \fB-style\fR option. 
d33 1
a33 1
A \fItheme\fR is a collection of elements and styles 
d50 1
a50 1
\fIstate\fR is a list of state names; if omitted, 
d54 1
a54 1
.\" Otherwise -- signal error? return empty string?  Leave unspecified for now. 
d57 1
a57 1
Define the widget layout for style \fIstyle\fR.  
d61 1
a61 1
.TP 
d65 1
a65 1
although themes may define other element types 
d67 1
a67 1
.TP 
d70 1
a70 1
.TP 
d82 1
a82 1
Temporarily sets the current theme to \fIthemeName\fR, 
d100 1
a100 1
.TP 
@

