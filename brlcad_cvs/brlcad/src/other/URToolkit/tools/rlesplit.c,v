head	1.4;
access;
symbols
	rel-7-10-4:1.3
	STABLE:1.3.0.2
	stable-branch:1.1
	rel-7-10-2:1.3
	rel-7-10-0:1.3
	rel-7-8-4:1.3
	rel-7-8-2:1.3
	rel-7-8-0:1.3
	trimnurbs-branch:1.2.0.2
	help:1.2
	temp_tag:1.2
	bobWinPort-20051223-freeze:1.1
	postmerge-20051223-bobWinPort:1.2
	premerge-20051223-bobWinPort:1.2
	rel-7-6-6:1.2
	rel-7-6-4:1.2
	rel-7-6-2:1.1
	rel-7-6-branch:1.1.0.6
	rel-7-6-0:1.1
	rel-7-4-2:1.1
	rel-7-4-branch:1.1.0.4
	bobWinPort:1.1.0.2
	rel-7-4-0:1.1
	rel-7-2-6:1.1
	rel-7-2-4:1.1
	rel-7-2-2:1.1
	rel-7-2-0:1.1
	rel-7-0-4:1.1;
locks; strict;
comment	@ * @;


1.4
date	2007.09.14.15.21.13;	author erikgreenwald;	state Exp;
branches;
next	1.3;

1.3
date	2006.03.24.19.36.13;	author brlcad;	state Exp;
branches;
next	1.2;

1.2
date	2005.11.06.03.50.58;	author brlcad;	state Exp;
branches
	1.2.2.1;
next	1.1;

1.1
date	2005.01.24.05.12.41;	author brlcad;	state Exp;
branches
	1.1.6.1;
next	;

1.1.6.1
date	2005.11.13.13.46.18;	author brlcad;	state Exp;
branches;
next	;

1.2.2.1
date	2006.04.07.19.34.10;	author jlowenz;	state Exp;
branches;
next	;


desc
@@


1.4
log
@removed trailing whitespace
@
text
@/*
 * rlesplit.c - Split concatenated RLE files into separate files.
 *
 * Author:	Spencer W. Thomas
 * 		Computer Science Dept.
 * 		University of Utah
 * Date:	Mon May  4 1987
 * Copyright (c) 1987, University of Utah
 */
#ifndef lint
char rcsid[] = "$Header: /cvsroot/brlcad/brlcad/src/other/URToolkit/tools/rlesplit.c,v 1.3 2006/03/24 19:36:13 brlcad Exp $";
#endif
/*
rlesplit()			Tag the file.
*/

#include <stdlib.h>
#include <stdio.h>
#include "rle.h"
#include "rle_raw.h"

/*****************************************************************
 * TAG( main )
 *
 * Usage:
 *     rlesplit [-n number [digits]] [-p prefix] [rlefile]
 * Inputs:
 *	-n number:	If specified, output file numbering will start
 *			with this value (see below).  Otherwise, numbering
 *			starts at 1.
 *
 * 	digits:		The number of digits to be used in the numeric
 * 			portion of the output file names.  Defaults to 3.
 * 			All numbers will be leading zero filled.
 *
 * 	-p prefix:	If specified, output files will be named
 *			"prefix.#.rle".  If not specified, and
 *			an rlefile is specified, then output files
 *			will be "rlefileroot.#.rle", where
 *			"rlefileroot" is rlefile with any ".rle" suffix
 *			stripped off.  If no arguments are specified,
 *			output files will be "#.rle".  In any case, "#"
 *			represents a sequentially increasing number.
 *
 * 	-t:		Use TITLE comment as output file name.
 * 			Obviously, these should be distinct!
 *
 *	infile:	If specified, input will be read from here,
 *			otherwise, input will be read from stdin.
 * Outputs:
 * 	Writes each rle image in the input stream to an output file
 *	whose name is generated as above.
 * Assumptions:
 * 	Each RLE image in the input stream must be terminated with
 *	an EOF opcode.
 * Algorithm:
 *	[None]
 */

int
main( argc, argv )
int argc;
char **argv;
{
    register CONST_DECL char * cp, * slashp;
    int num = 1, oflag = 0, digits = 3, tflag = 0;
    int rle_err;
    CONST_DECL char *infname = NULL, *format = "%s%0*d.rle";
    static char nullpref[] = "";
    char *prefix = nullpref;
    char *title;
    char filebuf[BUFSIZ];
    rle_hdr 	in_hdr, out_hdr;

    in_hdr = *rle_hdr_init( NULL );
    out_hdr = *rle_hdr_init( NULL );

    if ( scanargs( argc, argv,
		   "% n%-number!ddigits%d o%-prefix!s t%- infile%s\n(\
\tSplit a multi-image file into separate files.\n\
\t-n\tSpecify number assigned to first image, optionally specify\n\
\t\tnumber of digits used for numbering (default 3).\n\
\t-o\tSpecify output filename prefix.  If not specified, input\n\
\t\tfile name (without .rle) will be used.  Output file names are\n\
\t\tof the form prefix.number.rle.\n\
\t-t\tUse TITLE (or title) comment as file name.  They should be distinct.)",
		   &num, &num, &digits, &oflag, &prefix, &tflag,
		   &infname ) == 0 )
	exit( 1 );

    /* Open input file */
    in_hdr.rle_file = rle_open_f(cmd_name( argv ), infname, "r");
    rle_names( &in_hdr, cmd_name( argv ), infname, 0 );

    if ( oflag || infname )
    {
	format = "%s.%0*d.rle";
	if ( !oflag )
	{
	    /* Strip ".rle" suffix from input file name */
	    /* Avoid strrchr, rindex problem */
	    for ( cp = infname; *cp; cp++ )
		;		/* find end of name */
	    /* Look for last slash */
	    for ( slashp = cp - 1; *slashp != '/' && slashp > infname; )
		slashp--;
	    if ( *slashp == '/' )
		slashp++;
	    /* Look for last dot */
	    while ( *--cp != '.' && cp > infname )
		;		/* find last . */
	    if ( strcmp( cp, ".rle" ) != 0 )
		cp = infname + strlen( infname );
	    /* Make null full string buffer */
	    prefix = (char *)calloc( cp - slashp + 1, 1 );
	    RLE_CHECK_ALLOC( in_hdr.cmd, prefix, 0 );
	    /* Copy everything but suffix */
	    strncpy( prefix, infname, cp - slashp );
	}
    }

    while ( (rle_err = rle_get_setup( &in_hdr )) == RLE_SUCCESS )
    {
	/* Copy input to output file */
	if ( tflag &&
	     ( (title=rle_getcom( "TITLE", &in_hdr)) ||
	       (title=rle_getcom( "title", &in_hdr)) ) &&
	     *title != '\0' )
	    sprintf( filebuf, "%s%s", prefix, title );
	else
	    sprintf( filebuf, format, prefix, digits, num++ );

	fprintf( stderr, "%s: Creating %s\n", cmd_name( argv ), filebuf );
	(void)rle_hdr_cp( &in_hdr, &out_hdr );
	rle_names( &out_hdr, out_hdr.cmd, filebuf, 0 );
        out_hdr.rle_file = rle_open_f(out_hdr.cmd, filebuf, "w");
	rle_addhist( argv, &in_hdr, &out_hdr );

	rle_put_setup( &out_hdr );

	/* Copy the image to the output file. */
	rle_cp( &in_hdr, &out_hdr );

	rle_close_f( out_hdr.rle_file );
    }

    if ( rle_err != RLE_EOF && rle_err != RLE_EMPTY )
	rle_get_error( rle_err, cmd_name( argv ), infname );

    exit( 0 );
}
@


1.3
log
@quell compiler warnings
@
text
@d1 1
a1 1
/* 
d3 1
a3 1
 * 
d11 1
a11 1
char rcsid[] = "$Header: /cvsroot/brlcad/brlcad/src/other/URToolkit/tools/rlesplit.c,v 1.2 2005/11/06 03:50:58 brlcad Exp $";
d24 1
a24 1
 * 
d35 1
a35 1
 * 
d47 1
a47 1
 * 
@


1.2
log
@include stdlib.h to quell ansi c warnings about exit being implicitly defined
@
text
@d11 1
a11 1
char rcsid[] = "$Header: /cvsroot/brlcad/brlcad/src/other/URToolkit/tools/rlesplit.c,v 1.1 2005/01/24 05:12:41 brlcad Exp $";
d60 1
a60 1
void
@


1.2.2.1
log
@update from HEAD
@
text
@d11 1
a11 1
char rcsid[] = "$Header: /cvsroot/brlcad/brlcad/src/other/URToolkit/tools/rlesplit.c,v 1.2 2005/11/06 03:50:58 brlcad Exp $";
d60 1
a60 1
int
@


1.1
log
@update of urt from 3.0 to 3.1b1; this includes keeping directory structure and moving tools to src/other/URToolkit/tools
@
text
@d11 1
a11 1
char rcsid[] = "$Header: /tmp_mnt/n/itn/hendrix/u/spencer/RCS/rlesplit.c,v 3.0.1.2 1992/04/30 14:13:55 spencer Exp spencer $";
d17 1
@


1.1.6.1
log
@merge changes from HEAD aka rel-7-6-4 to the rel-7-6-branch just in case someone peeks a gander or tries to continue/build the branch
@
text
@d11 1
a11 1
char rcsid[] = "$Header$";
a16 1
#include <stdlib.h>
@


