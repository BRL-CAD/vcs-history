head	1.4;
access;
symbols
	rel-7-10-4:1.3
	STABLE:1.3.0.2
	stable-branch:1.1
	rel-7-10-2:1.3
	rel-7-10-0:1.3
	rel-7-8-4:1.3
	rel-7-8-2:1.3
	rel-7-8-0:1.3
	trimnurbs-branch:1.2.0.2
	help:1.2
	temp_tag:1.2
	bobWinPort-20051223-freeze:1.1
	postmerge-20051223-bobWinPort:1.2
	premerge-20051223-bobWinPort:1.2
	rel-7-6-6:1.2
	rel-7-6-4:1.2
	rel-7-6-2:1.1
	rel-7-6-branch:1.1.0.6
	rel-7-6-0:1.1
	rel-7-4-2:1.1
	rel-7-4-branch:1.1.0.4
	bobWinPort:1.1.0.2
	rel-7-4-0:1.1
	rel-7-2-6:1.1
	rel-7-2-4:1.1
	rel-7-2-2:1.1
	rel-7-2-0:1.1
	rel-7-0-4:1.1;
locks; strict;
comment	@ * @;


1.4
date	2007.09.14.15.21.13;	author erikgreenwald;	state Exp;
branches;
next	1.3;

1.3
date	2006.03.24.19.36.13;	author brlcad;	state Exp;
branches;
next	1.2;

1.2
date	2005.11.06.03.50.58;	author brlcad;	state Exp;
branches
	1.2.2.1;
next	1.1;

1.1
date	2005.01.24.05.12.41;	author brlcad;	state Exp;
branches
	1.1.6.1;
next	;

1.1.6.1
date	2005.11.13.13.46.18;	author brlcad;	state Exp;
branches;
next	;

1.2.2.1
date	2006.04.07.19.34.10;	author jlowenz;	state Exp;
branches;
next	;


desc
@@


1.4
log
@removed trailing whitespace
@
text
@/*
 * This software is copyrighted as noted below.  It may be freely copied,
 * modified, and redistributed, provided that the copyright notice is
 * preserved on all copies.
 *
 * There is no warranty or other guarantee of fitness for this software,
 * it is provided solely "as is".  Bug reports or fixes may be sent
 * to the author, who may or may not act on them as he desires.
 *
 * You may not include this software in a program or other software product
 * without supplying the source, or without informing the end-user that the
 * source is available for no extra charge.
 *
 * If you modify this software, you should include a notice giving the
 * name of the person performing the modification, the date of modification,
 * and the reason for such modification.
 */
/*
 * rleprint.c - Print all the pixel values in an RLE file.
 *
 * Author:	Spencer W. Thomas
 * 		EECS Dept.
 * 		University of Michigan
 * Date:	Tue Jun  5 1990
 * Copyright (c) 1990, University of Michigan
 */

#include <stdlib.h>
#include <stdio.h>
#include "rle.h"

#define MALLOC_ERR RLE_CHECK_ALLOC( cmd_name( argv ), 0, 0 )

int
main(argc, argv)
int	argc;
char	*argv[];
{
    char *infname = NULL;
    int         i, j;
    rle_hdr 	in_hdr;
    rle_pixel **rows0;
    rle_pixel  *prev;
    int		chan;
    int		rle_cnt, rle_err;
    int         out_alpha = 0, cur_out_alpha, uniq = 0, first;

    in_hdr = *rle_hdr_init( NULL );

    if ( scanargs( argc, argv, "% a%- u%- infile%s",
		   &out_alpha, &uniq, &infname ) == 0 )
	exit( 1 );
    in_hdr.rle_file = rle_open_f( cmd_name( argv ), infname, "r" );
    rle_names( &in_hdr, cmd_name( argv ), infname, 0 );

    for ( rle_cnt = 0;
	  (rle_err = rle_get_setup( &in_hdr )) == RLE_SUCCESS;
	  rle_cnt++ )
    {
	if ( rle_row_alloc( &in_hdr, &rows0 ) < 0 )
	    MALLOC_ERR;
	prev = (rle_pixel *)malloc( (in_hdr.alpha + in_hdr.ncolors) *
				    sizeof(rle_pixel) );
	prev += in_hdr.alpha;
	RLE_CHECK_ALLOC( in_hdr.cmd, prev, NULL );
	first = 1;

	/* output alpha if it exists and is wanted */
	cur_out_alpha = in_hdr.alpha && out_alpha ;

	for ( j = in_hdr.ymin; j <= in_hdr.ymax ; j++ )
	{
	    rle_getrow(&in_hdr, rows0 );

	    for ( i = in_hdr.xmin; i <= in_hdr.xmax; i++ )
	    {
		if ( uniq && !first )
		{
		    for ( chan = -cur_out_alpha;
			  chan < in_hdr.ncolors;
			  chan++ )
			if ( rows0[chan][i] != prev[chan] )
			    break;
		    if ( chan >= in_hdr.ncolors )
			continue;
		}
		first = 0;
		for ( chan = 0; chan < in_hdr.ncolors; chan++ )
		{
		    printf( "%d ", rows0[chan][i] );
		    prev[chan] = rows0[chan][i];
		}
		if ( cur_out_alpha )
		{
		    printf( "%d", rows0[RLE_ALPHA][i] );
		    prev[-1] = rows0[RLE_ALPHA][i];
		}
		printf( "\n" );
	    }
	}
	rle_row_free( &in_hdr, rows0 );
	prev -= in_hdr.alpha;
	free( prev );
    }

    /* Check for an error.  EOF or EMPTY is ok if at least one image
     * has been read.  Otherwise, print an error message.
     */
    if ( rle_cnt == 0 || (rle_err != RLE_EOF && rle_err != RLE_EMPTY) )
	rle_get_error( rle_err, cmd_name( argv ), infname );

    exit( 0 );
}
@


1.3
log
@quell compiler warnings
@
text
@d3 1
a3 1
 * modified, and redistributed, provided that the copyright notice is 
d5 1
a5 1
 * 
d11 1
a11 1
 * without supplying the source, or without informing the end-user that the 
d18 1
a18 1
/* 
d20 1
a20 1
 * 
d47 1
a47 1
    
d74 1
a74 1
	
@


1.2
log
@include stdlib.h to quell ansi c warnings about exit being implicitly defined
@
text
@d34 1
a34 1
void
@


1.2.2.1
log
@update from HEAD
@
text
@d34 1
a34 1
int
@


1.1
log
@update of urt from 3.0 to 3.1b1; this includes keeping directory structure and moving tools to src/other/URToolkit/tools
@
text
@d28 1
a28 1

@


1.1.6.1
log
@merge changes from HEAD aka rel-7-6-4 to the rel-7-6-branch just in case someone peeks a gander or tries to continue/build the branch
@
text
@d28 1
a28 1
#include <stdlib.h>
@


