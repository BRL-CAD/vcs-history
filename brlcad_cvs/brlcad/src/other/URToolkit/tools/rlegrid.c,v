head	1.5;
access;
symbols
	rel-7-10-4:1.4
	STABLE:1.4.0.2
	stable-branch:1.2
	rel-7-10-2:1.4
	rel-7-10-0:1.4
	rel-7-8-4:1.4
	rel-7-8-2:1.4
	rel-7-8-0:1.4
	trimnurbs-branch:1.3.0.2
	help:1.3
	temp_tag:1.3
	bobWinPort-20051223-freeze:1.2
	postmerge-20051223-bobWinPort:1.3
	premerge-20051223-bobWinPort:1.3
	rel-7-6-6:1.3
	rel-7-6-4:1.3
	rel-7-6-2:1.2
	rel-7-6-branch:1.2.0.6
	rel-7-6-0:1.2
	rel-7-4-2:1.2
	rel-7-4-branch:1.2.0.4
	bobWinPort:1.2.0.2
	rel-7-4-0:1.2
	rel-7-2-6:1.2
	rel-7-2-4:1.2
	rel-7-2-2:1.2
	rel-7-2-0:1.2
	rel-7-0-4:1.1;
locks; strict;
comment	@ * @;


1.5
date	2007.09.14.15.21.13;	author erikgreenwald;	state Exp;
branches;
next	1.4;

1.4
date	2006.03.24.19.36.13;	author brlcad;	state Exp;
branches;
next	1.3;

1.3
date	2005.11.06.03.50.58;	author brlcad;	state Exp;
branches
	1.3.2.1;
next	1.2;

1.2
date	2005.02.12.06.28.25;	author lbutler;	state Exp;
branches
	1.2.6.1;
next	1.1;

1.1
date	2005.01.24.05.12.41;	author brlcad;	state Exp;
branches;
next	;

1.2.6.1
date	2005.11.13.13.46.18;	author brlcad;	state Exp;
branches;
next	;

1.3.2.1
date	2006.04.07.19.34.10;	author jlowenz;	state Exp;
branches;
next	;


desc
@@


1.5
log
@removed trailing whitespace
@
text
@/*
 * This software is copyrighted as noted below.  It may be freely copied,
 * modified, and redistributed, provided that the copyright notice is
 * preserved on all copies.
 *
 * There is no warranty or other guarantee of fitness for this software,
 * it is provided solely "as is".  Bug reports or fixes may be sent
 * to the author, who may or may not act on them as he desires.
 *
 * You may not include this software in a program or other software product
 * without supplying the source, or without informing the end-user that the
 * source is available for no extra charge.
 *
 * If you modify this software, you should include a notice giving the
 * name of the person performing the modification, the date of modification,
 * and the reason for such modification.
 */
/*
 * rlegrid.c - Generate grids and checkerboards for test images
 *
 * Author:	James Painter
 * 		Computer Science
 * 		University of Utah
 * Date:	Tue November 20, 1990
 * Copyright (c) 1990, University of Utah
 */
#ifndef lint
char rcsid[] = "$Header: /cvsroot/brlcad/brlcad/src/other/URToolkit/tools/rlegrid.c,v 1.4 2006/03/24 19:36:13 brlcad Exp $";
#endif
/*
rlegrid()			Tag the file.
*/

#include <stdlib.h>
#include <stdio.h>
#include "rle.h"
#include "rle_raw.h"

/*****************************************************************
 * TAG( main )
 *
 * Generate simple grids
 *
 * Usage:
 * 	rlegrid [-o outfile] [-s xsize ysize] [-w width] [-f fb_color]
 *              [-b bg_color][-c]
 *
 * Outputs:
 * 	-o outfile:	The output RLE file.  Default stdout.
 * 			"-" means stdout.
 * Assumptions:
 *	[None]
 * Algorithm:
 */
int
main( argc, argv )
int argc;
char **argv;
{
    char       *outfname = NULL;
    int 	oflag = 0, sflag=0, wflag=0, fflag=0, bflag=0, cflag=0;
    int         xsize=512, ysize=512, width=16, fg_color=255, bg_color=0;
    int		x,y,i;
    FILE       *outfile;
    rle_hdr out_hdr;
    rle_op **scanraw[2];	/* space for two raw scanline buffers */
    rle_op *p, *q;
    int    *nrawp[2];
    unsigned char fg;

    out_hdr = *rle_hdr_init( NULL );

    if ( scanargs( argc, argv,
 "% o%-outfile!s s%-xsize!dysize!d w%-width!d f%-fg_color!d b%-bg_color!d c%-",
		   &oflag, &outfname,
		   &sflag, &xsize, &ysize,
		   &wflag, &width,
		   &fflag, &fg_color,
		   &bflag, &bg_color,
		  &cflag )
	     == 0 )
       exit( 1 );

    fg = fg_color;

    outfile = rle_open_f( cmd_name( argv ), outfname, "w" );

    /* Set up the output header.
     */
    (void)rle_hdr_init( &out_hdr );
    rle_names( &out_hdr, cmd_name( argv ), outfname, 0 );
    out_hdr.rle_file = outfile;
    out_hdr.xmax = xsize -1;
    out_hdr.ymax = ysize -1;
    out_hdr.ncolors = 1;
    out_hdr.alpha = 0;


    /* Add to the history comment. */
    rle_addhist( argv, (rle_hdr *)0, &out_hdr );

    /* Write the output image header. */
    rle_put_setup( &out_hdr );


    /* Allocate memory into which the image scanlines can be read.
     */
    if ( rle_raw_alloc( &out_hdr, scanraw+0, nrawp+0 ) < 0  ||
	 rle_raw_alloc( &out_hdr, scanraw+1, nrawp+1 ) < 0 )
	RLE_CHECK_ALLOC( cmd_name( argv ), 0, "image memory" );

    /* Fill the scan lines */
    if (cflag)
      {
	/* checkerboard option */
	p = scanraw[0][0];
	q = scanraw[1][0];
	*nrawp[0] = *nrawp[1] = 0;
	for(x=0; x<xsize;x+=2*width)
	  {
	    p->opcode = RRunDataOp;
	    p->xloc = x;
	    p->length = width;
	    *q = *p;
	    p->u.run_val = fg_color;
	    q->u.run_val = bg_color;
	    (*nrawp[0])++; (*nrawp[1])++;

	    p++; q++;
	    p->opcode = RRunDataOp;
	    p->xloc = x+width;
	    p->length = (x+width < xsize) ? width : (xsize-x);
	    *q = *p;
	    p->u.run_val = bg_color;
	    q->u.run_val = fg_color;
	    (*nrawp[0])++; (*nrawp[1])++;
	    p++; q++;
	  }
      }
    else
      {  /* default: grid */

	p = scanraw[0][0];
	p->opcode = RRunDataOp;
	p->xloc = 0;
	p->length = xsize;
	p->u.run_val = fg_color;
	*nrawp[0] = 1;

	/* grided scanline */
	p = scanraw[1][0];
	*nrawp[1] = 0;
	for(x=0; x<xsize;x+=width)
	  {
	    p->opcode = RByteDataOp;
	    p->xloc = x;
	    p->length = 1;
	    p->u.pixels = (rle_pixel *) &fg;
	    (*nrawp[1])++;

	    p++;
	    p->opcode = RRunDataOp;
	    p->xloc = x+1;
	    p->length = (x+width < xsize) ? width-1 : (xsize-x);
	    p->u.run_val = bg_color;
	    (*nrawp[1])++;
	    p++;
	  }
      }

    /* write the output file */
    for ( y = 0; y < ysize; y++ )
      {
	i = (cflag) ? ((y/width) %2) : ((y %width) != 0);
	rle_putraw( scanraw[i], nrawp[i], &out_hdr );
      }

    /* Free memory. */
    rle_raw_free( &out_hdr, scanraw[0], nrawp[0] );
    rle_raw_free( &out_hdr, scanraw[1], nrawp[1] );

    /* Write an end-of-image code. */
    rle_puteof( &out_hdr );

    exit( 0 );
}
@


1.4
log
@quell compiler warnings
@
text
@d3 1
a3 1
 * modified, and redistributed, provided that the copyright notice is 
d5 1
a5 1
 * 
d11 1
a11 1
 * without supplying the source, or without informing the end-user that the 
d18 1
a18 1
/* 
d20 1
a20 1
 * 
d24 1
a24 1
 * Date:	Tue November 20, 1990 
d28 1
a28 1
char rcsid[] = "$Header: /cvsroot/brlcad/brlcad/src/other/URToolkit/tools/rlegrid.c,v 1.3 2005/11/06 03:50:58 brlcad Exp $";
d41 1
a41 1
 * 
d45 1
a45 1
 * 	rlegrid [-o outfile] [-s xsize ysize] [-w width] [-f fb_color] 
d73 1
a73 1
    if ( scanargs( argc, argv, 
d75 1
a75 1
		   &oflag, &outfname, 
d87 1
a87 1
    
d124 1
a124 1
	    *q = *p;	
d128 1
a128 1
	    
d160 1
a160 1
	    
@


1.3
log
@include stdlib.h to quell ansi c warnings about exit being implicitly defined
@
text
@d28 1
a28 1
char rcsid[] = "$Header: /cvsroot/brlcad/brlcad/src/other/URToolkit/tools/rlegrid.c,v 1.2 2005/02/12 06:28:25 lbutler Exp $";
d55 1
a55 1
void
@


1.3.2.1
log
@update from HEAD
@
text
@d28 1
a28 1
char rcsid[] = "$Header: /cvsroot/brlcad/brlcad/src/other/URToolkit/tools/rlegrid.c,v 1.3 2005/11/06 03:50:58 brlcad Exp $";
d55 1
a55 1
int
@


1.2
log
@Changes to quell compiler warnings on SGI.
Mostly turning "static var" into "static int var" or similar,
and deleting unused variable declarations.
@
text
@d28 1
a28 1
char rcsid[] = "$Header: /cvsroot/brlcad/brlcad/src/other/URToolkit/tools/rlegrid.c,v 1.1 2005/01/24 05:12:41 brlcad Exp $";
d34 1
@


1.2.6.1
log
@merge changes from HEAD aka rel-7-6-4 to the rel-7-6-branch just in case someone peeks a gander or tries to continue/build the branch
@
text
@d28 1
a28 1
char rcsid[] = "$Header$";
a33 1
#include <stdlib.h>
@


1.1
log
@update of urt from 3.0 to 3.1b1; this includes keeping directory structure and moving tools to src/other/URToolkit/tools
@
text
@d28 1
a28 1
char rcsid[] = "$Header: /l/spencer/src/urt/tools/RCS/rlegrid.c,v 3.0.1.1 1992/04/30 14:12:01 spencer Exp $";
d68 1
a68 1
    unsigned char fg, bg;
a83 1
    bg = bg_color;
@

