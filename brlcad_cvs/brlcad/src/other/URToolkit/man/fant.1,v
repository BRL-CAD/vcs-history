head	1.2;
access;
symbols
	rel-7-10-4:1.1
	STABLE:1.1.0.10
	stable-branch:1.1
	rel-7-10-2:1.1
	rel-7-10-0:1.1
	rel-7-8-4:1.1
	rel-7-8-2:1.1
	rel-7-8-0:1.1
	trimnurbs-branch:1.1.0.8
	help:1.1
	temp_tag:1.1
	bobWinPort-20051223-freeze:1.1
	postmerge-20051223-bobWinPort:1.1
	premerge-20051223-bobWinPort:1.1
	rel-7-6-6:1.1
	rel-7-6-4:1.1
	rel-7-6-2:1.1
	rel-7-6-branch:1.1.0.6
	rel-7-6-0:1.1
	rel-7-4-2:1.1
	rel-7-4-branch:1.1.0.4
	bobWinPort:1.1.0.2
	rel-7-4-0:1.1
	rel-7-2-6:1.1
	rel-7-2-4:1.1
	rel-7-2-2:1.1
	rel-7-2-0:1.1
	rel-7-0-4:1.1;
locks; strict;
comment	@.\" @;


1.2
date	2007.09.14.15.21.11;	author erikgreenwald;	state Exp;
branches;
next	1.1;

1.1
date	2005.01.24.05.06.24;	author brlcad;	state Exp;
branches;
next	;


desc
@@


1.2
log
@removed trailing whitespace
@
text
@.\" Copyright (c) 1986, University of Utah
.TH FANT 1 "Dec 4, 1990"
.UC 4
.SH NAME
fant \- perform simple spatial transforms on an image
.SH SYNOPSIS
.HP
.B fant
.\" sample options...
[
.B \-a
.I "angle"
]
[
.B \-b blurfactor
]
[
.B \-o
.I "outfile"
]
[
.B \-p
.I "xoff yoff"
]
[
.B \-s
.I "xscale yscale"
]
[
.B \-S
.I "xsize ysize"
]
[
.B \-v
]
[
.I infile
]
.SH DESCRIPTION
.IR Fant
rotates or scales an image by an arbitrary amount.  It does this by
using pixel integration (if the image size is reduced) or pixel interpolation
if the image size is increased.  Because it works with subpixel precision,
aliasing artifacts are not introduced (hah! see BUGS).
.I Fant
uses a two-pass
sampling technique to perform the transformation.  If
.I infile
is "\-" or absent, input is read from the standard input.
.SH OPTIONS
.TP
.BI \-a " angle"
Amount to rotate image by, a real number from 0 to 45 degrees (positive
numbers rotate clockwise).  Use rleflip(1) first to rotate an image by larger
amounts.
.TP
.BI \-b " blur_factor"
Control the amount of blurring in the output image.
If the blur factor is greater than one, image blurring will increase.
If the blur factor is smaller than one, image blurring will decrease
but aliasing artifacts may be visible.

.TP
.BI \-o " outfile"
Specifies where to place the resulting image.  The default is to write
to stdout.  If
.I outfile
is "\-", the output will be written to the standard output stream.
.TP
.BI \-p " xoff yoff"
Specifies where the origin of the image is \- the image is rotated or scaled
about this point.  If no origin is specified, the center of the image is used.
.TP
.BI \-s " xscale yscale"
The amount (in real numbers) to scale an image by.  This is often
useful for correcting the aspect of an image for display on a frame
buffer with non square pixels.  For this use, the origin should be
specified as 0, 0 (see \fB\-p\fP above).  If an image is only scaled
in Y and no rotation is performed,
.IR fant
only uses one sampling pass over the image, cutting the computation time
in half.
.TP
.BI \-S " xsize ysize"
An alternate method of specifying the scale factors.
.I xsize
and
.I ysize
give the desired output image size.

The \fB\-S\fP option can not be used in combination with \fB\-a\fP, \fB\-p\fP,
or \fB\-s\fP.

.TP
.B "\-v"
Verbose output.  Primarily for debugging.
.LP
.SH SEE ALSO
.IR avg4 (1),
.IR rleflip (1),
.IR rlezoom (1),
.IR urt (1),
.IR RLE (5),
.br
Fant, Karl M. "A Nonaliasing, Real-Time, Spatial Transform Technique",
\fIIEEE CG&A\fP, January, 1986, p. 71.
.SH AUTHORS
John W. Peterson,
James S. Painter
.SH BUGS
.IR Fant
uses a rather poor anti-aliasing filter (a triangle filter).  This is usually
good enough but will exhibit noticeable aliasing artifacts on nasty
input images.
@


1.1
log
@update of urt from 3.0 to 3.1b1; this includes keeping directory structure and moving manpages to src/other/URToolkit/man
@
text
@d2 2
a3 2
.TH FANT 1 "Dec 4, 1990" 
.UC 4 
d13 1
a13 1
] 
d26 1
a26 1
.B \-s 
d36 1
a36 1
[ 
d38 1
a38 1
] 
d44 1
a44 1
aliasing artifacts are not introduced (hah! see BUGS).  
d46 1
a46 1
uses a two-pass 
d58 1
a58 1
Control the amount of blurring in the output image.  
d80 1
a80 1
.IR fant 
d85 1
a85 1
An alternate method of specifying the scale factors.  
d99 1
a99 1
.IR avg4 (1), 
@

