head	1.1;
access;
symbols
	rel-7-10-4:1.1
	STABLE:1.1.0.10
	stable-branch:1.1
	rel-7-10-2:1.1
	rel-7-10-0:1.1
	rel-7-8-4:1.1
	rel-7-8-2:1.1
	rel-7-8-0:1.1
	trimnurbs-branch:1.1.0.8
	help:1.1
	temp_tag:1.1
	bobWinPort-20051223-freeze:1.1
	postmerge-20051223-bobWinPort:1.1
	premerge-20051223-bobWinPort:1.1
	rel-7-6-6:1.1
	rel-7-6-4:1.1
	rel-7-6-2:1.1
	rel-7-6-branch:1.1.0.6
	rel-7-6-0:1.1
	rel-7-4-2:1.1
	rel-7-4-branch:1.1.0.4
	bobWinPort:1.1.0.2
	rel-7-4-0:1.1
	rel-7-2-6:1.1
	rel-7-2-4:1.1
	rel-7-2-2:1.1
	rel-7-2-0:1.1
	rel-7-0-4:1.1;
locks; strict;
comment	@.\" @;


1.1
date	2005.01.24.05.06.25;	author brlcad;	state Exp;
branches;
next	;


desc
@@


1.1
log
@update of urt from 3.0 to 3.1b1; this includes keeping directory structure and moving manpages to src/other/URToolkit/man
@
text
@.\" Copyright (c) 1990, Minnesota Supercomputer Center, Inc.
.TH RLETORLA 1 "May 30, 1990" 1
.SH NAME
rletorla \- convert a Utah RLE image file into a Wavefront "rla" or "rlb"
image file.
.SH SYNOPSIS
.B rletorla
[
.B \-b
] [
.B \-h
] [
.B \-v
] [
.B \-o outfile
] [
.I infile
]
.SH DESCRIPTION
This program converts Utah
.IR RLE (5)
image files into Wavefront "rla" or "rlb" image files.  Rletorla will handle
four types of RLE files: Grayscale (8 bit data, no color map), Pseudocolor
(8 bit data with a color map), Truecolor (24 bit data with color map), and
Directcolor (24 bit data, no color map).  In each case the resulting Wavefront
image file will contain RGB data as well as a matte channel.  If no alpha
channel is found in the RLE file, the Wavefront matte channel will be computed
using the RGB or mapped data.  The entire area of the Wavefront image will be
run length encoded.  The size of the Wavefront "bounding box" data structure
will be set to that of the total image area.
.PP
NOTE:  Even though images of any size can be converted, Wavefront is very
fussy about image dimensions.  Normally, the converted image must be one
of the following sizes or Wavefront will complain with "ERROR, cannot open
image file filename, error -8":
.PP
646x485 (0-645x0-484) ntsc_4d
.br
720x486 (0-719x0-485) qtl_ntsc
.br
636x484 (0-635x0-483) iris_ntsc
.br
1024x1024 (0-1023x0-1023) 1k_square
.PP
To get around this problem, the aspect ratio field in the Wavefront
"rla" file will be "faked" with "ntsc_4d" for all formats that do not match
one of those shown above.  This way, Wavefront will find a valid format
string, and any image size will be readable.  "rlb" image file do not have
this limitation.
.SH OPTIONS
.TP
.B \-b
This option will cause rletorla to create a Wavefront "rlb" image file instead
of using the default "rla" conversion.
.TP
.B \-v
This option will cause rletorla to operate in verbose mode.  Header information
is printed to "stderr".
.TP
.B \-h
This option allows the header of the RLE file to be dumped to "stderr" without
converting the file.  It is equivalent to using the \-v option except that no
file conversion takes place.
.TP
.B \-o outfile
This option allows the name of the output file to be specified.  Re-directing
standard output as is done with most all other toolkit utilities is not
permitted here because the resulting "rla" or "rlb" file is not written
sequentially.
.TP
.I infile
The name of the RLE image data file to be converted.  The name of the resulting
Wavefront file will be derived from the name of the input file (unless the
\-o option is used) -- the extension will be changed from "rle" to "rla" or
"rlb".  (Note: if you use the extended input file names described in
.IR urt (1),
this will result in a very strange filename for the Wavefront file.)
.SH EXAMPLES
.TP
rletorla \-v lenna.rle
While running in verbose mode, convert lenna.rle to Wavefront rla format and
store resulting data in lenna.rla.
.TP
rletorla \-h test.0001.rle
Dump the header information of the RLE file called test.0001.rle.
.TP
rletorla \-b -o junk.rlb test.rle
Convert test.rle into a Wavefront "rlb" file called junk.rlb.
.SH SEE ALSO
.IR rlatorle (1),
.IR urt (1),
.IR RLE (5).
.SH AUTHOR
.br
Wesley C. Barris
.br
Army High Performance Computing Research Center (AHPCRC)
.br
Minnesota Supercomputer Center, Inc.
@
