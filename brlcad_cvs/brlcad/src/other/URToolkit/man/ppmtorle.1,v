head	1.2;
access;
symbols
	rel-7-10-4:1.1
	STABLE:1.1.0.10
	stable-branch:1.1
	rel-7-10-2:1.1
	rel-7-10-0:1.1
	rel-7-8-4:1.1
	rel-7-8-2:1.1
	rel-7-8-0:1.1
	trimnurbs-branch:1.1.0.8
	help:1.1
	temp_tag:1.1
	bobWinPort-20051223-freeze:1.1
	postmerge-20051223-bobWinPort:1.1
	premerge-20051223-bobWinPort:1.1
	rel-7-6-6:1.1
	rel-7-6-4:1.1
	rel-7-6-2:1.1
	rel-7-6-branch:1.1.0.6
	rel-7-6-0:1.1
	rel-7-4-2:1.1
	rel-7-4-branch:1.1.0.4
	bobWinPort:1.1.0.2
	rel-7-4-0:1.1
	rel-7-2-6:1.1
	rel-7-2-4:1.1
	rel-7-2-2:1.1
	rel-7-2-0:1.1
	rel-7-0-4:1.1;
locks; strict;
comment	@.\" @;


1.2
date	2007.09.14.15.21.11;	author erikgreenwald;	state Exp;
branches;
next	1.1;

1.1
date	2005.01.24.05.06.24;	author brlcad;	state Exp;
branches;
next	;


desc
@@


1.2
log
@removed trailing whitespace
@
text
@.\" Copyright (c) 1990, Minnesota Supercomputer Center, Inc.
.TH PPMTORLE 1 "July 30, 1990" 1
.SH NAME
ppmtorle \- convert a PBMPLUS/ppm image file into an RLE image file.
.SH SYNOPSIS
.B ppmtorle
[
.B \-h
] [
.B \-v
] [
.B \-a
] [
.BI \-o " outfile"
] [
.I infile.ppm
]
.SH DESCRIPTION
This program converts PBMPLUS full-color (ppm) image files into Utah
.IR RLE (5)
image files.  PBMPLUS/ppm image files contain the image dimensions and image
data in the form of RGB triplets.  When converting to an RLE file, the alpha
channel may be optionally computed.  The origins of PBMPLUS and Utah RLE files
are  in the upper left and lower left corners respectively, so this
program automatically "flips" the image.  The input can consist of
several concatenated ppm images, in which case, the output will
consist of several concatenated RLE images.
.PP
The RLE file will contain a "true color" image
(24 bits).  These RLE files may then be viewed using any RLE image viewer.  When
they are displayed on an 8 bit display, the image must be dithered.  In order
to produce a better looking image (on 8 bit displays), it is recommended that
the image be quantizing (to 8 bit mapped color) prior to its display.  This may
be done by piping the output of this program into the Utah
.IR mcut (1)
or
.IR rlequant (1)
utilities.
An example of this is shown later.
.PP
.SH OPTIONS
.TP
.B \-v
This option will cause ppmtorle to operate in verbose mode.  The header
information is written to "stderr".  Actually, there is not much header
information stored in a PBMPLUS file, so this information is minimal.
.TP
.B \-h
This option allows the header of the PBMPLUS image to be dumped to "stderr"
without converting the file.  It is equivalent to using the \-v option except
that no file conversion takes place.
.TP
.B \-a
This option will cause ppmtorle to use the RGB data to compute an alpha
channel in the resulting RLE file.  For any non-zero RGB data, the alpha
channel will contain a value of 255.  The resulting RLE image file will
contain three color channels and an alpha channel.
.TP
.BI \-o " outfile"
If specified, the output will be written to this file.  If
.I outfile
is "\-", or if it is not specified, the output will be written to the
standard output stream.
.TP
.I infile.ppm
The name of the PBMPLUS image data file to be converted.  This file must end
in ".ppm".  However, it is not necessary to supply the ".ppm" extension as it
will be added to the supplied name if not already there.
.SH EXAMPLES
.TP
ppmtorle \-v test.ppm \-o test.rle
While running in verbose mode, convert test.ppm to RLE format and store
resulting data in test.rle.
.TP
ppmtorle test | mcut >test.rle
Convert test.ppm to RLE format and convert to 8 bit
mapped color before storing data in test.rle
.TP
ppmtorle \-h test
Dump the header information of the PBMPLUS file called test.ppm.
.SH SEE ALSO
.IR mcut (1),
.IR pgmtorle (1),
.IR rlequant (1),
.IR rletoppm (1),
.IR urt (1),
.IR RLE (5).
.SH AUTHOR
.br
Wesley C. Barris
.br
Army High Performance Computing Research Center (AHPCRC)
.br
Minnesota Supercomputer Center, Inc.
@


1.1
log
@update of urt from 3.0 to 3.1b1; this includes keeping directory structure and moving manpages to src/other/URToolkit/man
@
text
@d60 1
a60 1
If specified, the output will be written to this file.  If 
@

