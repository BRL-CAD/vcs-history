head	14.2;
access;
symbols
	rel-7-10-4:14.2
	STABLE:14.2.0.10
	stable-branch:14.2
	rel-7-10-2:14.2
	rel-7-10-0:14.2
	rel-7-8-4:14.2
	rel-7-8-2:14.2
	rel-7-8-0:14.2
	trimnurbs-branch:14.2.0.8
	help:14.2
	temp_tag:14.2
	bobWinPort-20051223-freeze:14.2
	postmerge-20051223-bobWinPort:14.2
	premerge-20051223-bobWinPort:14.2
	rel-7-6-6:14.2
	rel-7-6-4:14.2
	rel-7-6-2:14.2
	rel-7-6-branch:14.2.0.6
	rel-7-6-0:14.2
	rel-7-4-2:14.2
	rel-7-4-branch:14.2.0.4
	bobWinPort:14.2.0.2
	rel-7-4-0:14.2
	rel-7-2-6:14.2
	rel-7-2-4:14.2
	rel-7-2-2:14.2
	rel-7-2-0:14.2
	rel-7-0-4:14.1
	rel-7-0-2:14.1
	rel-7-0-1:14.1
	opensource-post:14.1
	opensource-pre:1.1
	rel-7-0-branch:1.1.0.2
	rel-7-0:1.1;
locks; strict;
comment	@# @;


14.2
date	2005.01.27.15.28.18;	author brlcad;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.30;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.20.14.54.20;	author morrison;	state Exp;
branches;
next	;


desc
@@


14.2
log
@update to zlib 1.2.2
@
text
@# Makefile for zlib
# Borland C++
# Last updated: 15-Mar-2003

# To use, do "make -fmakefile.bor"
# To compile in small model, set below: MODEL=s

# WARNING: the small model is supported but only for small values of
# MAX_WBITS and MAX_MEM_LEVEL. For example:
#    -DMAX_WBITS=11 -DDEF_WBITS=11 -DMAX_MEM_LEVEL=3
# If you wish to reduce the memory requirements (default 256K for big
# objects plus a few K), you can add to the LOC macro below:
#   -DMAX_MEM_LEVEL=7 -DMAX_WBITS=14
# See zconf.h for details about the memory requirements.

# ------------ Turbo C++, Borland C++ ------------

#    Optional nonstandard preprocessor flags (e.g. -DMAX_MEM_LEVEL=7)
#    should be added to the environment via "set LOCAL_ZLIB=-DFOO" or added
#    to the declaration of LOC here:
LOC = $(LOCAL_ZLIB)

# type for CPU required: 0: 8086, 1: 80186, 2: 80286, 3: 80386, etc.
CPU_TYP = 0

# memory model: one of s, m, c, l (small, medium, compact, large)
MODEL=l

# replace bcc with tcc for Turbo C++ 1.0, with bcc32 for the 32 bit version
CC=bcc
LD=bcc
AR=tlib

# compiler flags
# replace "-O2" by "-O -G -a -d" for Turbo C++ 1.0
CFLAGS=-O2 -Z -m$(MODEL) $(LOC)

LDFLAGS=-m$(MODEL) -f-


# variables
ZLIB_LIB = zlib_$(MODEL).lib

OBJ1 = adler32.obj compress.obj crc32.obj deflate.obj gzio.obj infback.obj
OBJ2 = inffast.obj inflate.obj inftrees.obj trees.obj uncompr.obj zutil.obj
OBJP1 = +adler32.obj+compress.obj+crc32.obj+deflate.obj+gzio.obj+infback.obj
OBJP2 = +inffast.obj+inflate.obj+inftrees.obj+trees.obj+uncompr.obj+zutil.obj


# targets
all: $(ZLIB_LIB) example.exe minigzip.exe

.c.obj:
	$(CC) -c $(CFLAGS) $*.c

adler32.obj: adler32.c zlib.h zconf.h

compress.obj: compress.c zlib.h zconf.h

crc32.obj: crc32.c zlib.h zconf.h crc32.h

deflate.obj: deflate.c deflate.h zutil.h zlib.h zconf.h

gzio.obj: gzio.c zutil.h zlib.h zconf.h

infback.obj: infback.c zutil.h zlib.h zconf.h inftrees.h inflate.h \
 inffast.h inffixed.h

inffast.obj: inffast.c zutil.h zlib.h zconf.h inftrees.h inflate.h \
 inffast.h

inflate.obj: inflate.c zutil.h zlib.h zconf.h inftrees.h inflate.h \
 inffast.h inffixed.h

inftrees.obj: inftrees.c zutil.h zlib.h zconf.h inftrees.h

trees.obj: trees.c zutil.h zlib.h zconf.h deflate.h trees.h

uncompr.obj: uncompr.c zlib.h zconf.h

zutil.obj: zutil.c zutil.h zlib.h zconf.h

example.obj: example.c zlib.h zconf.h

minigzip.obj: minigzip.c zlib.h zconf.h


# the command line is cut to fit in the MS-DOS 128 byte limit:
$(ZLIB_LIB): $(OBJ1) $(OBJ2)
	-del $(ZLIB_LIB)
	$(AR) $(ZLIB_LIB) $(OBJP1)
	$(AR) $(ZLIB_LIB) $(OBJP2)

example.exe: example.obj $(ZLIB_LIB)
	$(LD) $(LDFLAGS) example.obj $(ZLIB_LIB)

minigzip.exe: minigzip.obj $(ZLIB_LIB)
	$(LD) $(LDFLAGS) minigzip.obj $(ZLIB_LIB)

test: example.exe minigzip.exe
	example
	echo hello world | minigzip | minigzip -d

clean:
	-del *.obj
	-del *.lib
	-del *.exe
	-del zlib_*.bak
	-del foo.gz
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d2 2
a3 1
# Borland C++   ************ UNTESTED ***********
d16 1
a16 1
# ------------- Turbo C++, Borland C++ -------------
d23 1
a23 1
# Type for CPU required: 0: 8086, 1: 80186, 2: 80286, 3: 80386, etc.
d26 1
a26 1
# Memory model: one of s, m, c, l (small, medium, compact, large)
d29 1
d31 1
a31 2
#   replace bcc with tcc for Turbo C++ 1.0, with bcc32 for the 32 bit version
LD=$(CC)
d35 1
a36 1
#   replace "-O2" by "-O -G -a -d" for Turbo C++ 1.0
d38 1
a38 1
LDFLAGS=-m$(MODEL)
a39 1
O=.obj
d42 1
a42 8
OBJ1 = adler32$(O) compress$(O) crc32$(O) gzio$(O) uncompr$(O) deflate$(O) \
  trees$(O)
OBJP1 = adler32$(O)+compress$(O)+crc32$(O)+gzio$(O)+uncompr$(O)+deflate$(O)+\
  trees$(O)
OBJ2 = zutil$(O) inflate$(O) infblock$(O) inftrees$(O) infcodes$(O) \
  infutil$(O) inffast$(O)
OBJP2 = zutil$(O)+inflate$(O)+infblock$(O)+inftrees$(O)+infcodes$(O)+\
  infutil$(O)+inffast$(O)
d44 4
a47 2
ZLIB_H = zlib.h zconf.h
ZUTIL_H = zutil.h $(ZLIB_H)
a48 1
ZLIB_LIB = zlib_$(MODEL).lib
d50 2
a51 1
all: test
d53 1
a53 2
# individual dependencies and action rules:
adler32.obj: adler32.c $(ZLIB_H)
d56 1
a56 2
compress.obj: compress.c $(ZLIB_H)
	$(CC) -c $(CFLAGS) $*.c
d58 1
a58 2
crc32.obj: crc32.c $(ZLIB_H)
	$(CC) -c $(CFLAGS) $*.c
d60 1
a60 2
deflate.obj: deflate.c deflate.h $(ZUTIL_H)
	$(CC) -c $(CFLAGS) $*.c
d62 1
a62 2
gzio.obj: gzio.c $(ZUTIL_H)
	$(CC) -c $(CFLAGS) $*.c
d64 1
a64 2
infblock.obj: infblock.c $(ZUTIL_H) infblock.h inftrees.h infcodes.h infutil.h
	$(CC) -c $(CFLAGS) $*.c
d66 2
a67 2
infcodes.obj: infcodes.c $(ZUTIL_H) inftrees.h infutil.h infcodes.h inffast.h
	$(CC) -c $(CFLAGS) $*.c
d69 2
a70 2
inflate.obj: inflate.c $(ZUTIL_H) infblock.h
	$(CC) -c $(CFLAGS) $*.c
d72 2
a73 2
inftrees.obj: inftrees.c $(ZUTIL_H) inftrees.h
	$(CC) -c $(CFLAGS) $*.c
d75 1
a75 2
infutil.obj: infutil.c $(ZUTIL_H) inftrees.h infutil.h
	$(CC) -c $(CFLAGS) $*.c
d77 1
a77 2
inffast.obj: inffast.c $(ZUTIL_H) inftrees.h infutil.h inffast.h
	$(CC) -c $(CFLAGS) $*.c
d79 1
a79 2
trees.obj: trees.c deflate.h $(ZUTIL_H)
	$(CC) -c $(CFLAGS) $*.c
d81 1
a81 2
uncompr.obj: uncompr.c $(ZLIB_H)
	$(CC) -c $(CFLAGS) $*.c
d83 1
a83 2
zutil.obj: zutil.c $(ZUTIL_H)
	$(CC) -c $(CFLAGS) $*.c
d85 1
a85 2
example.obj: example.c $(ZLIB_H)
	$(CC) -c $(CFLAGS) $*.c
a86 2
minigzip.obj: minigzip.c $(ZLIB_H)
	$(CC) -c $(CFLAGS) $*.c
d88 1
a88 1
# we must cut the command line to fit in the MS/DOS 128 byte limit:
d90 3
a92 3
	del $(ZLIB_LIB)
	$(AR) $(ZLIB_LIB) +$(OBJP1)
	$(AR) $(ZLIB_LIB) +$(OBJP2)
d102 1
a102 1
	echo hello world | minigzip | minigzip -d 
d104 6
a109 3
#clean:
#	del *.obj
#	del *.exe
@


1.1
log
@Sources that are external to BRL-CAD are moved from the top level to src/other/.
@
text
@@

