head	14.2;
access;
symbols
	rel-7-10-4:14.1
	STABLE:14.1.0.10
	stable-branch:14.1
	rel-7-10-2:14.1
	rel-7-10-0:14.1
	rel-7-8-4:14.1
	rel-7-8-2:14.1
	rel-7-8-0:14.1
	trimnurbs-branch:14.1.0.8
	help:14.1
	temp_tag:14.1
	bobWinPort-20051223-freeze:14.1
	postmerge-20051223-bobWinPort:14.1
	premerge-20051223-bobWinPort:14.1
	rel-7-6-6:14.1
	rel-7-6-4:14.1
	rel-7-6-2:14.1
	rel-7-6-branch:14.1.0.6
	rel-7-6-0:14.1
	rel-7-4-2:14.1
	rel-7-4-branch:14.1.0.4
	bobWinPort:14.1.0.2
	rel-7-4-0:14.1
	rel-7-2-6:14.1
	rel-7-2-4:14.1
	rel-7-2-2:14.1
	rel-7-2-0:14.1
	rel-7-0-4:14.1
	rel-7-0-2:14.1
	rel-7-0-1:14.1
	opensource-post:14.1
	opensource-pre:1.1
	rel-7-0-branch:1.1.0.2
	rel-7-0:1.1;
locks; strict;
comment	@# @;


14.2
date	2007.09.14.15.21.36;	author erikgreenwald;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.19;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.20.14.49.51;	author morrison;	state Exp;
branches;
next	;


desc
@@


14.2
log
@removed trailing whitespace
@
text
@#
# Collapsablewidget
# ----------------------------------------------------------------------
# Implements a collapsable widget which contains a label and child site.
# The child site is a frame which can filled with any widget via a
# derived itcl::class or though the use of the childSite method.
#
# Clicking on the button/arrow indicator will collapse/reveal the
# child-site
#
# ----------------------------------------------------------------------
#  AUTHOR: Vince Darley               EMAIL: vince@@biosgroup.com
#
#  Based upon the labelledwidget distributed under the copyright
#  below, under which all my modifications are also distributed.
#
# ----------------------------------------------------------------------
#            Copyright (c) 1995-1999 DSC Technologies Corporation
# ======================================================================
# Permission to use, copy, modify, distribute and license this software
# and its documentation for any purpose, and without fee or written
# agreement with DSC, is hereby granted, provided that the above copyright
# notice appears in all copies and that both the copyright notice and
# warranty disclaimer below appear in supporting documentation, and that
# the names of DSC Technologies Corporation or DSC Communications
# Corporation not be used in advertising or publicity pertaining to the
# software without specific, written prior permission.
#
# DSC DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING
# ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, AND NON-
# INFRINGEMENT. THIS SOFTWARE IS PROVIDED ON AN "AS IS" BASIS, AND THE
# AUTHORS AND DISTRIBUTORS HAVE NO OBLIGATION TO PROVIDE MAINTENANCE,
# SUPPORT, UPDATES, ENHANCEMENTS, OR MODIFICATIONS. IN NO EVENT SHALL
# DSC BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR
# ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
# WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTUOUS ACTION,
# ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
# SOFTWARE.
# ======================================================================

#
# Default resources.
#
option add *Collapsablewidget.labelMargin 1 widgetDefault
package require Itk

#
# Usual options.
#
itk::usual Collapsablewidget {
    keep -background -cursor -foreground -labelfont
}

# Define the right pointing and down-pointing triangles
# for collapsed and expanded entries.
if {[lsearch [image names] closedNode] == -1} {
    image create bitmap closedNode -data {
	#define closednode_width 13
	#define closednode_height 13
	static char closednode_bits[] = {
	    0x00, 0x00, 0x00, 0x00, 0x10, 0x10, 0x30, 0x10,
	    0x70, 0x10, 0xf0, 0x10, 0xf0, 0x11, 0xf0, 0x13,
	    0xf0, 0x11, 0xf0, 0x10, 0x70, 0x10, 0x30, 0x10,
	    0x10, 0x10};
    }
}
if {[lsearch [image names] openNode] == -1} {
    image create bitmap openNode -data {
	#define opennode_width 13
	#define opennode_height 13
	static char opennode_bits[] = {
	    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0x1f,
	    0xf8, 0x0f, 0xf0, 0x07, 0xe0, 0x03, 0xc0, 0x01,
	    0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0x1f,
	    0x00, 0x00};
    }
}

# ------------------------------------------------------------------
#                            COLLAPSABLEWIDGET
# ------------------------------------------------------------------

itcl::class iwidgets::Collapsablewidget {
    inherit itk::Widget

    constructor {args} {}
    destructor {}

    itk_option define -labelmargin labelMargin Margin 1
    itk_option define -labeltext labelText Text {}
    itk_option define -labelvariable labelVariable Variable {}
    itk_option define -labelbitmap labelBitmap Bitmap {}
    itk_option define -labelimage labelImage Image {}
    itk_option define -collapsed collapsed Collapsed 1

    public method childsite

    public method collapse

    public method reveal

    public method toggle

    protected method _positionLabel {when}

    proc alignlabels {args} {}

    protected variable _reposition ""  ;# non-null => _positionLabel pending
}

#
# Provide a lowercased access method for the Collapsablewidget class.
#
proc ::iwidgets::collapsablewidget {pathName args} {
    uplevel ::iwidgets::Collapsablewidget $pathName $args
}

# ------------------------------------------------------------------
#                        CONSTRUCTOR
# ------------------------------------------------------------------

itcl::body iwidgets::Collapsablewidget::constructor {args} {
    #
    # Create the outermost frame to maintain geometry.
    #
    itk_component add shell {
	frame $itk_interior.shell -relief ridge -bd 2
    } {
	keep -background -cursor
    }
    pack $itk_component(shell) -fill both -expand yes

    itk_component add frame {
	frame $itk_component(shell).frame
    } {
    }
    pack $itk_component(frame) -fill x -expand no -side top

    itk_component add trigger {
	button $itk_component(shell).frame.trigger -command "$this toggle" \
	  -relief flat \
	  -image closedNode
    } {
    }
    pack $itk_component(trigger) -side left
    #
    # Create label.
    #
    itk_component add label {
	label $itk_component(shell).frame.label
    } {
	keep -background -foreground -cursor

	rename -font -labelfont labelFont Font
    }
    pack $itk_component(label) -side right -fill x -expand yes

    #
    # Create margin between label and the child site.
    #
    itk_component add labmargin {
	frame $itk_component(shell).labmargin
    } {
	keep -background -cursor
    }
    pack $itk_component(labmargin) -side bottom

    #
    # Create a frame for the childsite widget.
    #
    itk_component add lwchildsite {
	frame $itk_component(shell).lwchildsite
    } {
	keep -background -cursor
    }
    #pack $itk_component(lwchildsite) -fill both -expand yes
    set itk_interior $itk_component(lwchildsite)


    ##
    # Explicitly handle configs that may have been ignored earlier.
    #
    eval itk_initialize $args

    #
    # When idle, position the label.
    #
}

# ------------------------------------------------------------------
#                           DESTURCTOR
# ------------------------------------------------------------------
itcl::body iwidgets::Collapsablewidget::destructor {} {
    if {$_reposition != ""} {after cancel $_reposition}
}

itcl::body iwidgets::Collapsablewidget::toggle {} {
    set itk_option(-collapsed) [expr 1 - $itk_option(-collapsed)]
    if {$itk_option(-collapsed)} {
	collapse
    } else {
	reveal
    }
}

itcl::body iwidgets::Collapsablewidget::collapse {} {
    pack forget $itk_component(lwchildsite)
    $itk_component(trigger) configure -image closedNode
}

itcl::body iwidgets::Collapsablewidget::reveal {} {
    pack $itk_component(lwchildsite) -side bottom -fill both -expand yes
    $itk_component(trigger) configure -image openNode
}

# ------------------------------------------------------------------
#                             OPTIONS
# ------------------------------------------------------------------

itcl::configbody iwidgets::Collapsablewidget::collapsed {
    if {$itk_option(-collapsed)} {
	collapse
    } else {
	reveal
    }
}

# ------------------------------------------------------------------
# OPTION: -labeltext
#
# Specifies the label text.
# ------------------------------------------------------------------
itcl::configbody iwidgets::Collapsablewidget::labeltext {
    $itk_component(label) configure -text $itk_option(-labeltext)

}

# ------------------------------------------------------------------
# OPTION: -labelvariable
#
# Specifies the label text variable.
# ------------------------------------------------------------------
itcl::configbody iwidgets::Collapsablewidget::labelvariable {
    $itk_component(label) configure -textvariable $itk_option(-labelvariable)

}

# ------------------------------------------------------------------
# OPTION: -labelbitmap
#
# Specifies the label bitmap.
# ------------------------------------------------------------------
itcl::configbody iwidgets::Collapsablewidget::labelbitmap {
    $itk_component(label) configure -bitmap $itk_option(-labelbitmap)
}

# ------------------------------------------------------------------
# OPTION: -labelimage
#
# Specifies the label image.
# ------------------------------------------------------------------
itcl::configbody iwidgets::Collapsablewidget::labelimage {
    $itk_component(label) configure -image $itk_option(-labelimage)
}

# ------------------------------------------------------------------
#                            METHODS
# ------------------------------------------------------------------

# ------------------------------------------------------------------
# METHOD: childsite
#
# Returns the path name of the child site widget.
# ------------------------------------------------------------------
itcl::body iwidgets::Collapsablewidget::childsite {} {
    return $itk_component(lwchildsite)
}

# ------------------------------------------------------------------
# PROCEDURE: alignlabels widget ?widget ...?
#
# The alignlabels procedure takes a list of widgets derived from
# the Collapsablewidget itcl::class and adjusts the label margin to align
# the labels.
# ------------------------------------------------------------------
itcl::body iwidgets::Collapsablewidget::alignlabels {args} {
    update
    set maxLabelWidth 0

    #
    # Verify that all the widgets are of type Collapsablewidget and
    # determine the size of the maximum length label string.
    #
    foreach iwid $args {
	if {[catch {$iwid isa iwidgets::Collapsablewidget} ret] || $ret == 0} {
	    error "$iwid is not a \"Collapsablewidget\": $ret"
	}

	set csWidth [winfo reqwidth $iwid.shell.lwchildsite]
	set shellWidth [winfo reqwidth $iwid.shell]

	if {[expr $shellWidth - $csWidth] > $maxLabelWidth} {
	    set maxLabelWidth [expr $shellWidth - $csWidth]
	}
    }

    #
    # Adjust the margins for the labels such that the child sites and
    # labels line up.
    #
    foreach iwid $args {
	set csWidth [winfo reqwidth $iwid.shell.lwchildsite]
	set shellWidth [winfo reqwidth $iwid.shell]

	set labelSize [expr $shellWidth - $csWidth]

	if {$maxLabelWidth > $labelSize} {
	    set dist [expr $maxLabelWidth - \
	      ($labelSize - [winfo reqwidth $iwid.shell.labmargin])]

	    $iwid configure -labelmargin $dist
	}
    }
}
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d5 2
a6 2
# The child site is a frame which can filled with any widget via a 
# derived itcl::class or though the use of the childSite method.  
d8 1
a8 1
# Clicking on the button/arrow indicator will collapse/reveal the 
d13 1
a13 1
#  
d20 7
a26 7
# Permission to use, copy, modify, distribute and license this software 
# and its documentation for any purpose, and without fee or written 
# agreement with DSC, is hereby granted, provided that the above copyright 
# notice appears in all copies and that both the copyright notice and 
# warranty disclaimer below appear in supporting documentation, and that 
# the names of DSC Technologies Corporation or DSC Communications 
# Corporation not be used in advertising or publicity pertaining to the 
d28 2
a29 2
# 
# DSC DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING 
d32 4
a35 4
# AUTHORS AND DISTRIBUTORS HAVE NO OBLIGATION TO PROVIDE MAINTENANCE, 
# SUPPORT, UPDATES, ENHANCEMENTS, OR MODIFICATIONS. IN NO EVENT SHALL 
# DSC BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR 
# ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, 
d37 1
a37 1
# ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS 
d95 1
a95 1
    
d99 1
a99 1
    
d101 1
a101 1
    
d103 1
a103 1
    
d110 1
a110 1
    
d113 1
a113 1
# 
d123 1
a123 1
    # 
d129 1
a129 1
	keep -background -cursor 
d132 1
a132 1
    
d136 1
a136 1
    }    
d138 1
a138 1
    
d152 2
a153 2
	keep -background -foreground -cursor 
	
d157 1
a157 1
    
d178 2
a179 2
     
    
d185 1
a185 1
    # 
d235 1
a235 1
    
d245 1
a245 1
    
d283 1
a283 1
# the Collapsablewidget itcl::class and adjusts the label margin to align 
d289 1
a289 1
    
d291 1
a291 1
    # Verify that all the widgets are of type Collapsablewidget and 
d298 1
a298 1
	
d301 1
a301 1
	
d306 1
a306 1
    
d314 1
a314 1
	
d316 1
a316 1
	
d320 2
a321 2
	    
	    $iwid configure -labelmargin $dist 
d323 1
a323 1
    }	
@


1.1
log
@Sources that are external to BRL-CAD are moved from the top level to src/other/.
@
text
@@

