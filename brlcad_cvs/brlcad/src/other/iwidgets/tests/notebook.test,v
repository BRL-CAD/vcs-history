head	14.2;
access;
symbols
	rel-7-10-4:14.1
	STABLE:14.1.0.10
	stable-branch:14.1
	rel-7-10-2:14.1
	rel-7-10-0:14.1
	rel-7-8-4:14.1
	rel-7-8-2:14.1
	rel-7-8-0:14.1
	trimnurbs-branch:14.1.0.8
	help:14.1
	temp_tag:14.1
	bobWinPort-20051223-freeze:14.1
	postmerge-20051223-bobWinPort:14.1
	premerge-20051223-bobWinPort:14.1
	rel-7-6-6:14.1
	rel-7-6-4:14.1
	rel-7-6-2:14.1
	rel-7-6-branch:14.1.0.6
	rel-7-6-0:14.1
	rel-7-4-2:14.1
	rel-7-4-branch:14.1.0.4
	bobWinPort:14.1.0.2
	rel-7-4-0:14.1
	rel-7-2-6:14.1
	rel-7-2-4:14.1
	rel-7-2-2:14.1
	rel-7-2-0:14.1
	rel-7-0-4:14.1
	rel-7-0-2:14.1
	rel-7-0-1:14.1
	opensource-post:14.1
	opensource-pre:1.1
	rel-7-0-branch:1.1.0.2
	rel-7-0:1.1;
locks; strict;
comment	@# @;


14.2
date	2007.09.14.15.21.36;	author erikgreenwald;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.19;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.20.14.49.54;	author morrison;	state Exp;
branches;
next	;


desc
@@


14.2
log
@removed trailing whitespace
@
text
@# This file is a Tcl script to test out [incr Widgets] Notebook class.
# It is organized in the standard fashion for Tcl tests with the following
# notation for test case labels:
#
#   1.x - Construction/Destruction tests
#   2.x - Configuration option tests
#   3.x - Method tests
#
# Copyright (c) 1995 DSC Technologies Corporation
#
# See the file "license.terms" for information on usage and redistribution
# of this file, and for a DISCLAIMER OF ALL WARRANTIES.
#
# @@(#) $Id: notebook.test,v 14.1 2004/11/16 19:42:19 morrison Exp $

package require tcltest
namespace import -force ::tcltest::*

if [catch {package require Iwidgets 4.0}] {
  # Let's try modifying the auto_path.  Note that the IWIDGETS_LIBRARY
  # env var is initialized in the Makefile when doing a 'make test'.
  # If sourcing this file independently, this variable must be set manually.
  if ![info exists env(IWIDGETS_LIBRARY)] {
    error "Unable to locate Iwidgets package.  Set your IWIDGETS_LIBRARY\
      environment\nvariable to the directory that contains iwidgets.tcl"
  }
  lappend auto_path $env(IWIDGETS_LIBRARY)
  package require Iwidgets 4.0
}

if {[string compare test [info procs test]] == 1} {
    source defs
}

wm geometry . {}
raise .

set c 1
set o 1
set m 1

#
# Initial construction test
#
test Notebook-1.$c {Notebook construction} {
    iwidgets::Notebook .nb
    pack .nb
    update
    .nb add -label one
    update
    .nb add -label two
    update
    .nb add -label three
    update
} {}

incr c

#
# Option tests which are successful.
#
test Notebook-2.$o {configuration option} {
    llength [.nb configure]
} {7}

incr o

foreach test {
	{-width 0 0 }
	{-background #CDCDB7B7B5B5 #CDCDB7B7B5B5 }
	{-auto true true }
	{-height 0 0 }
	{-scrollcommand   }
	{-cursor   }
	} {
	set option [lindex $test 0]
	test Notebook-2.$o "configuration options, $option" {
	    .nb configure $option [lindex $test 1]
		lindex [.nb configure $option] 4
	} [lindex $test 2]
	update
	incr o
}

#
# PageConfigure Option tests which are successful.
#
test Notebook-2.$o {page configuration option} {
    llength [.nb pageconfigure 0]
} {8}

# do pageconfigure tests also...
foreach test {
		{0 -label Hello Hello}
		{end -label "Hello World" "Hello World"}
	} {
		set index  [lindex $test 0]
		set option [lindex $test 1]
		test Notebook-2.$o "configuration options, $option" {
			.nb pageconfigure $index $option [lindex $test 2]
			lindex [.nb pageconfigure $index $option] 4
		} [lindex $test 3]
	update
	incr o
}

#
# Option tests which fail and produce errors.
#
#foreach test {
#	{ -OPTION BADVALUE {ERROR_MESSAGE} }
#	} {
#	set option [lindex $test 0]
#        test Notebook-2.$o "configuration options, $option" {
#	    list [catch {.bb configure $option [lindex $test 1]} msg] $msg
#	} [list 1 [lindex $test 2]]
#	incr o
#}

#
# Method tests which are successful.
#
foreach test {
    {0 {.nb add}
		{[.]nb[.]cs[.]page[0-9]+[.]cs}}
    {0 {.nb add}
		{[.]nb[.]cs[.]page[0-9]+[.]cs}}
    {0 {.nb add}
		{[.]nb[.]cs[.]page[0-9]+[.]cs}}
    {0 {.nb add -label Never}
		{[.]nb[.]cs[.]page[0-9]+[.]cs}}
    {0 {.nb add}
		{[.]nb[.]cs[.]page[0-9]+[.]cs}}
	{0 {.nb add -label "Hello World" -disabledforeground gray}
		{[.]nb[.]cs[.]page[0-9]+[.]cs}}
    {0 {.nb childsite Never}
		{[.]nb[.]cs[.]page[0-9]+[.]cs}}
    {0 {.nb childsite 0}
		{[.]nb[.]cs[.]page[0-9]+[.]cs}}
    {0 {.nb childsite end}
		{[.]nb[.]cs[.]page[0-9]+[.]cs}}
    {0 {.nb index end}
		{[0-9]+}}
    {0 {.nb index Never}
		{[0-9]+}}
    {0 {.nb index 0}
		{0}}
    {0 {.nb select 0}
		{0}}
    {0 {.nb select select}
		{0}}
    {0 {.nb select end}
		{[0-9]+}}
    {0 {.nb select "Hello World"}
		{[0-9]+}}
    {0 {.nb insert 0}
		{[.]nb[.]cs[.]page[0-9]+[.]cs}}
    {0 {.nb insert select -label "An Insert"}
		{[.]nb[.]cs[.]page[0-9]+[.]cs}}
    {0 {.nb insert end -label "Next To Last"}
		{[.]nb[.]cs[.]page[0-9]+[.]cs}}
    {0 {.nb select 0}
		{0}}
    {0 {.nb next}
		{1}}
    {0 {.nb next}
		{2}}
    {0 {.nb prev}
		{1}}
    {0 {.nb prev}
		{0}}
    {0 {.nb delete Never}
		{}}
    {0 {.nb delete 1 2}
		{}}
    {0 {.nb delete 0 "Hello World"}
		{}}
    {0 {.nb add}
		{[.]nb[.]cs[.]page[0-9]+[.]cs}}
    {0 {.nb add}
		{[.]nb[.]cs[.]page[0-9]+[.]cs}}
    {0 {.nb add}
		{[.]nb[.]cs[.]page[0-9]+[.]cs}}
    {0 {.nb add}
		{[.]nb[.]cs[.]page[0-9]+[.]cs}}
    {0 {.nb delete 0 end}
		{}}
    {0 {.nb add}
		{[.]nb[.]cs[.]page[0-9]+[.]cs}}
    {0 {.nb add}
		{[.]nb[.]cs[.]page[0-9]+[.]cs}}
    {0 {.nb add}
		{[.]nb[.]cs[.]page[0-9]+[.]cs}}
    {0 {.nb add}
		{[.]nb[.]cs[.]page[0-9]+[.]cs}}
    {0 {.nb select 2}
		{[-]*[0-9]+}}
    {0 {.nb delete select end}
		{}}
    {0 {.nb delete 0 end}
		{}}
    {0 {.nb add -label "First Page"}
		{[.]nb[.]cs[.]page[0-9]+[.]cs}}
    {0 {.nb add -label "Second Page"}
		{[.]nb[.]cs[.]page[0-9]+[.]cs}}
    {0 {.nb add -label "Third Page"}
		{[.]nb[.]cs[.]page[0-9]+[.]cs}}
    {0 {.nb add -label "Fourth Page"}
		{[.]nb[.]cs[.]page[0-9]+[.]cs}}
    {0 {.nb add -label "Fifth Page"}
		{[.]nb[.]cs[.]page[0-9]+[.]cs}}
    {0 {.nb add -label "Sixth Page"}
		{[.]nb[.]cs[.]page[0-9]+[.]cs}}
    {0 {.nb select "First Page"}
		{[-]*[0-9]+}}
    {0 {.nb delete select "Second Page"}
		{}}
    {0 {.nb delete "Third Page" 1}
		{}}
    {0 {.nb delete "Fifth Page" "Sixth Page"}
		{}}
	} {
	set method_status [lindex $test 0]
	set method_invoke [lindex $test 1]
	set method [lindex $method_invoke 1]

	set testContents "set msg {}\n"
	append testContents \
	    "set result \[catch \{$method_invoke\} msg\]\n"
	append testContents \
	    "lappend result \[regexp -- \{[lindex $test 2]\} \$msg\] \n"
	append testContents "set result\n"
	test Notebook-3.$m "\[$method_invoke\]" $testContents \
		[list $method_status 1]
	update
	incr m
}

#
# Method tests which fail and produce errors
#
set m 1
foreach test {
		{1 {.nb delete 0 end} {can't delete page}}
		{1 {.nb childsite 0} {can't get childsite, no pages}}
		{0 {.nb add} {}}
		{1 {.nb childsite 1} {bad Notebook page index in childsite method}}
		{1 {.nb childsite -1} {bad Notebook page index in childsite method}}
		{0 {.nb delete 0} {}}
		{1 {.nb delete 0} {can't delete page, no pages}}
		{0 {.nb add} {}}
		{1 {.nb delete 1} {bad Notebook page index in delete method:}}
		{1 {.nb delete select} {bad Notebook page index in delete method:}}
		{0 {.nb delete 0} {}}
		{0 {.nb add} {}}
		{1 {.nb delete 0 1} {bad Notebook page index2 in delete method:}}
		{1 {.nb delete 1 4} {bad Notebook page index1 in delete method:}}
		{0 {.nb add} {}}
		{1 {.nb delete 1 0} {bad Notebook page index1 in delete method: index1 is greater than index2}}
		{0 {.nb delete 0 1} {}}
		{0 {.nb add} {}}
		{1 {.nb delete 0 1 4 5 6} {wrong # args}}
		{1 {.nb delete} {wrong # args}}
		{0 {.nb delete 0} {}}
		{1 {.nb delete 0} {can't delete page}}
		{1 {.nb delete select} {can't delete page}}
		{1 {.nb insert 0} {can't insert page}}
		{0 {.nb add} {}}
		{0 {.nb add} {}}
		{1 {.nb insert 2} {bad Notebook page index in insert method:}}
		{1 {.nb insert -1} {bad Notebook page index}}
		{0 {.nb delete 0 end} {}}
		{1 {.nb next} {can't move to next page, no pages in the notebook}}
		{1 {.nb prev} {can't move to previous page, no pages in the notebook}}
		{1 {.nb select 0} {can't select page}}
		{0 {.nb add} {}}
		{1 {.nb select 1} {bad Notebook page index in select method:}}
		{0 {.nb delete 0} {}}
	} {
		set method_status [lindex $test 0]
		set method_invoke [lindex $test 1]
		set method [lindex $method_invoke 1]

		set testContents "set msg {}\n"
		append testContents \
		    "set result \[catch \{$method_invoke\} msg\]\n"
		append testContents \
		    "lappend result \[regexp -- \{[lindex $test 2]\} \$msg\] \n"
		append testContents "set result\n"
		test Notebook-4.$m "\[$method_invoke\]" $testContents \
			[list $method_status 1]
	incr m
	}


# Conclusion of constrcution/destruction tests
#
test Notebook-1.$c {Notebook destruction} {
    destroy .nb
    update
} {}

incr c

test Notebook-1.$c {Notebook construction} {
    iwidgets::Notebook .nb -width 100 -height 100
    pack .nb
    update
    .nb add -label one
    update
    .nb add -label two
    update
    .nb add -label three
    update
} {}

incr c

test Notebook-1.$c {Notebook destruction} {
	destroy .nb
    update
} {}

::tcltest::cleanupTests
exit
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d14 1
a14 1
# @@(#) $Id: notebook.test,v 1.1 2004/05/20 14:49:54 morrison Exp $
d47 2
a48 2
    pack .nb 
    update 
d50 1
a50 1
    update 
d52 1
a52 1
    update 
d54 1
a54 1
    update 
d78 1
a78 1
	    .nb configure $option [lindex $test 1] 
d81 1
a81 1
	update 
d94 2
a95 2
		{0 -label Hello Hello} 
		{end -label "Hello World" "Hello World"} 
d100 1
a100 1
			.nb pageconfigure $index $option [lindex $test 2] 
d103 1
a103 1
	update 
d124 1
a124 1
    {0 {.nb add} 
d126 1
a126 1
    {0 {.nb add} 
d128 1
a128 1
    {0 {.nb add} 
d130 1
a130 1
    {0 {.nb add -label Never} 
d132 1
a132 1
    {0 {.nb add} 
d134 1
a134 1
	{0 {.nb add -label "Hello World" -disabledforeground gray} 
d136 1
a136 1
    {0 {.nb childsite Never} 
d138 1
a138 1
    {0 {.nb childsite 0} 
d140 1
a140 1
    {0 {.nb childsite end} 
d142 1
a142 1
    {0 {.nb index end} 
d144 1
a144 1
    {0 {.nb index Never} 
d146 1
a146 1
    {0 {.nb index 0} 
d148 1
a148 1
    {0 {.nb select 0} 
d150 1
a150 1
    {0 {.nb select select} 
d152 1
a152 1
    {0 {.nb select end} 
d154 1
a154 1
    {0 {.nb select "Hello World"} 
d156 1
a156 1
    {0 {.nb insert 0} 
d158 1
a158 1
    {0 {.nb insert select -label "An Insert"} 
d160 1
a160 1
    {0 {.nb insert end -label "Next To Last"} 
d162 1
a162 1
    {0 {.nb select 0} 
d164 1
a164 1
    {0 {.nb next} 
d166 1
a166 1
    {0 {.nb next} 
d168 1
a168 1
    {0 {.nb prev} 
d170 1
a170 1
    {0 {.nb prev} 
d172 1
a172 1
    {0 {.nb delete Never} 
d174 1
a174 1
    {0 {.nb delete 1 2} 
d176 1
a176 1
    {0 {.nb delete 0 "Hello World"} 
d178 1
a178 1
    {0 {.nb add} 
d180 1
a180 1
    {0 {.nb add} 
d182 1
a182 1
    {0 {.nb add} 
d184 1
a184 1
    {0 {.nb add} 
d186 1
a186 1
    {0 {.nb delete 0 end} 
d188 1
a188 1
    {0 {.nb add} 
d190 1
a190 1
    {0 {.nb add} 
d192 1
a192 1
    {0 {.nb add} 
d194 1
a194 1
    {0 {.nb add} 
d196 1
a196 1
    {0 {.nb select 2} 
d198 1
a198 1
    {0 {.nb delete select end} 
d200 1
a200 1
    {0 {.nb delete 0 end} 
d202 1
a202 1
    {0 {.nb add -label "First Page"} 
d204 1
a204 1
    {0 {.nb add -label "Second Page"} 
d206 1
a206 1
    {0 {.nb add -label "Third Page"} 
d208 1
a208 1
    {0 {.nb add -label "Fourth Page"} 
d210 1
a210 1
    {0 {.nb add -label "Fifth Page"} 
d212 1
a212 1
    {0 {.nb add -label "Sixth Page"} 
d214 1
a214 1
    {0 {.nb select "First Page"} 
d216 1
a216 1
    {0 {.nb delete select "Second Page"} 
d218 1
a218 1
    {0 {.nb delete "Third Page" 1} 
d220 1
a220 1
    {0 {.nb delete "Fifth Page" "Sixth Page"} 
d235 1
a235 1
	update 
d300 1
a300 1
    update 
d307 2
a308 2
    pack .nb 
    update 
d310 1
a310 1
    update 
d312 1
a312 1
    update 
d314 1
a314 1
    update 
d321 1
a321 1
    update 
@


1.1
log
@Sources that are external to BRL-CAD are moved from the top level to src/other/.
@
text
@d14 1
a14 1
# @@(#) $Id: notebook.test,v 1.1 2003/03/13 13:20:42 jra Exp $
@

