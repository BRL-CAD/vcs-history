head	14.2;
access;
symbols
	rel-7-10-4:14.1
	STABLE:14.1.0.10
	stable-branch:14.1
	rel-7-10-2:14.1
	rel-7-10-0:14.1
	rel-7-8-4:14.1
	rel-7-8-2:14.1
	rel-7-8-0:14.1
	trimnurbs-branch:14.1.0.8
	help:14.1
	temp_tag:14.1
	bobWinPort-20051223-freeze:14.1
	postmerge-20051223-bobWinPort:14.1
	premerge-20051223-bobWinPort:14.1
	rel-7-6-6:14.1
	rel-7-6-4:14.1
	rel-7-6-2:14.1
	rel-7-6-branch:14.1.0.6
	rel-7-6-0:14.1
	rel-7-4-2:14.1
	rel-7-4-branch:14.1.0.4
	bobWinPort:14.1.0.2
	rel-7-4-0:14.1
	rel-7-2-6:14.1
	rel-7-2-4:14.1
	rel-7-2-2:14.1
	rel-7-2-0:14.1
	rel-7-0-4:14.1
	rel-7-0-2:14.1
	rel-7-0-1:14.1
	opensource-post:14.1
	opensource-pre:1.1
	rel-7-0-branch:1.1.0.2
	rel-7-0:1.1;
locks; strict;
comment	@# @;


14.2
date	2007.09.14.15.21.36;	author erikgreenwald;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.19;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.20.14.49.54;	author morrison;	state Exp;
branches;
next	;


desc
@@


14.2
log
@removed trailing whitespace
@
text
@# This file is a Tcl script to test out [incr Widgets] Messagebox class.
# It is organized in the standard fashion for Tcl tests with the following
# notation for test case labels:
#
#   1.x - Construction/Destruction tests
#   2.x - Configuration option tests
#   3.x - Method tests
#
# Copyright (c) 1995 DSC Technologies Corporation
#
# See the file "license.terms" for information on usage and redistribution
# of this file, and for a DISCLAIMER OF ALL WARRANTIES.
#
# @@(#) $Id: messagebox.test,v 14.1 2004/11/16 19:42:19 morrison Exp $

package require tcltest
namespace import -force ::tcltest::*

if [catch {package require Iwidgets 4.0}] {
  # Let's try modifying the auto_path.  Note that the IWIDGETS_LIBRARY
  # env var is initialized in the Makefile when doing a 'make test'.
  # If sourcing this file independently, this variable must be set manually.
  if ![info exists env(IWIDGETS_LIBRARY)] {
    error "Unable to locate Iwidgets package.  Set your IWIDGETS_LIBRARY\
      environment\nvariable to the directory that contains iwidgets.tcl"
  }
  lappend auto_path $env(IWIDGETS_LIBRARY)
  package require Iwidgets 4.0
}

if {[string compare test [info procs test]] == 1} {
    source defs
}

wm geometry . {}
raise .

set c 1
set o 1
set m 1

#
# Initial construction test
#
test Messagebox-1.$c {Messagebox construction} {
    iwidgets::Messagebox .mb
    pack .mb -padx 10 -pady 10 -fill both -expand yes
    update
} {}

incr c

#
# Option tests which are successful.
#
test Messagebox-2.$o {configuration option} {
    llength [.mb configure]
} {40}

incr o

foreach test {
    {-activebackground #ececec #ececec}
    {-activeforeground Black Black}
    {-background #d9d9d9 #d9d9d9}
    {-borderwidth 3 3}
    {-cursor gumby gumby}
    {-exportselection 0 0}
    {-exportselection 1 1}
    {-filename /tmp/foo /tmp/foo}
    {-foreground Black Black}
    {-height 0 0}
    {-width 0 0}
    {-width 550 550}
    {-height 120 120}
    {-highlightcolor Black Black}
    {-highlightthickness 2 2}
    {-labelmargin 5 5}
    {-labeltext Label Label}
    {-labelpos nw nw}
    {-labelpos ne ne}
    {-labelpos en en}
    {-labelpos e e}
    {-labelpos es es}
    {-labelpos se se}
    {-labelpos s s}
    {-labelpos sw sw}
    {-labelpos wn wn}
    {-labelpos w w}
    {-labelpos ws ws}
    {-labelpos n n}
    {-relief raised raised}
    {-relief sunken sunken}
    {-vscrollmode none none}
    {-vscrollmode static static}
    {-vscrollmode dynamic dynamic}
    {-hscrollmode none none}
    {-hscrollmode static static}
    {-hscrollmode dynamic dynamic}
    {-maxlines 1200 1200}
    {-sbwidth 20 20}
    {-savedir /tmp /tmp}
    {-scrollmargin 5 5}
    {-textbackground GhostWhite GhostWhite}} {
	set option [lindex $test 0]
	test Messagebox-2.$o "configuration options, $option" {
	    .mb configure $option [lindex $test 1]
	    lindex [.mb configure $option] 4
	} [lindex $test 2]
	update
	incr o
}

#
# Option tests which fail and produce errors.
#
foreach test {
  {-visibleitems bogus {bad visibleitems option "bogus": should be widthxheight}}
  {-hscrollmode bogus {bad hscrollmode option "bogus": should be static, dynamic, or none}}
  {-vscrollmode bogus {bad vscrollmode option "bogus": should be static, dynamic, or none}}} {
	set option [lindex $test 0]
        test Messagebox-2.$o "configuration options, $option" {
	    list [catch {.mb configure $option [lindex $test 1]} msg] $msg
	} [list 1 [lindex $test 2]]
	incr o
}

#
# Method tests which are successful.
#
foreach test {
    {{.mb issue "Default test"} {}}
    {{.mb type add ERROR -background red -foreground white -bell 1} {ERROR}}
    {{.mb issue "ERROR test" ERROR} {}}
    {{.mb type configure ERROR -font 7x13 -show 0} {}}
    {{.mb issue "ERROR test" ERROR} {}}
    {{.mb type cget ERROR -background} {red}}
    {{.mb type remove ERROR} {}}
    {{.mb clear} {}}} {
	set method [lindex [lindex $test 0] 1]
	test Messagebox-3.$m "object methods, $method" {
	    list [catch {eval [lindex $test 0]} msg] $msg
	} [list 0 [lindex $test 1]]
	update
	incr m
}

#
# Method tests which fail and produce errors
#
foreach test {
    {{.mb type bogus bogus} {bad type operation: "bogus", should be add, remove, configure or cget}}
    {{.mb issue foo bogus} {bad message type: "bogus", use the type command to create a new types}}} {
	set method [lindex [lindex $test 0] 1]
	test Messagebox-3.$m "object methods, $method" {
	    list [catch {eval [lindex $test 0]} msg] $msg
	} [list 1 [lindex $test 1]]
	incr m
}

#
# Conclusion of constrcution/destruction tests
#
test Messagebox-1.$c {Messagebox destruction} {
    destroy .mb
    update
} {}

incr c

test Messagebox-1.$c {Messagebox construction} {
    iwidgets::messagebox .mb -hscrollmode dynamic -labeltext "Label" \
	    -labelpos n -labelmargin 5
    pack .mb -padx 10 -pady 10 -fill both -expand yes
    update
} {}

incr c

test Messagebox-1.$c {Messagebox destruction} {
    destroy .mb
    update
} {}

incr c

test Messagebox-1.$c {Messagebox destruction} {
    iwidgets::messagebox .mb
    pack .mb
    destroy .mb
    update
} {}

::tcltest::cleanupTests
exit
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d14 1
a14 1
# @@(#) $Id: messagebox.test,v 1.1 2004/05/20 14:49:54 morrison Exp $
d48 1
a48 1
    update 
d65 5
a69 5
    {-background #d9d9d9 #d9d9d9} 
    {-borderwidth 3 3} 
    {-cursor gumby gumby} 
    {-exportselection 0 0} 
    {-exportselection 1 1} 
d71 2
a72 2
    {-foreground Black Black} 
    {-height 0 0} 
d78 1
a78 1
    {-labelmargin 5 5} 
d92 8
a99 8
    {-relief raised raised} 
    {-relief sunken sunken} 
    {-vscrollmode none none} 
    {-vscrollmode static static} 
    {-vscrollmode dynamic dynamic} 
    {-hscrollmode none none} 
    {-hscrollmode static static} 
    {-hscrollmode dynamic dynamic} 
d101 1
a101 1
    {-sbwidth 20 20} 
d103 1
a103 1
    {-scrollmargin 5 5} 
d110 1
a110 1
	update 
d144 1
a144 1
	update 
d166 1
a166 1
    update 
d175 1
a175 1
    update 
d182 1
a182 1
    update 
d191 1
a191 1
    update 
@


1.1
log
@Sources that are external to BRL-CAD are moved from the top level to src/other/.
@
text
@d14 1
a14 1
# @@(#) $Id: messagebox.test,v 1.1 2003/03/13 13:20:42 jra Exp $
@

