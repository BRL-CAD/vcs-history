head	14.2;
access;
symbols
	rel-7-10-4:14.1
	STABLE:14.1.0.10
	stable-branch:14.1
	rel-7-10-2:14.1
	rel-7-10-0:14.1
	rel-7-8-4:14.1
	rel-7-8-2:14.1
	rel-7-8-0:14.1
	trimnurbs-branch:14.1.0.8
	help:14.1
	temp_tag:14.1
	bobWinPort-20051223-freeze:14.1
	postmerge-20051223-bobWinPort:14.1
	premerge-20051223-bobWinPort:14.1
	rel-7-6-6:14.1
	rel-7-6-4:14.1
	rel-7-6-2:14.1
	rel-7-6-branch:14.1.0.6
	rel-7-6-0:14.1
	rel-7-4-2:14.1
	rel-7-4-branch:14.1.0.4
	bobWinPort:14.1.0.2
	rel-7-4-0:14.1
	rel-7-2-6:14.1
	rel-7-2-4:14.1
	rel-7-2-2:14.1
	rel-7-2-0:14.1
	rel-7-0-4:14.1
	rel-7-0-2:14.1
	rel-7-0-1:14.1
	opensource-post:14.1
	opensource-pre:1.1
	rel-7-0-branch:1.1.0.2
	rel-7-0:1.1;
locks; strict;
comment	@# @;


14.2
date	2007.09.14.15.21.36;	author erikgreenwald;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.19;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.20.14.49.48;	author morrison;	state Exp;
branches;
next	;


desc
@@


14.2
log
@removed trailing whitespace
@
text
@# Spintime
# ----------------------------------------------------------------------
# Implements a Time spinner widget.  A time spinner contains three
# integer spinners:  one for hours, one for minutes and one for
# seconds.  Options exist to manage to behavior, appearance, and
# format of each component spinner.
#
# ----------------------------------------------------------------------
#  AUTHOR: Sue Yockey                  EMAIL: yockey@@actc.com
#          Mark L. Ulferts                    mulferts@@austin.dsccc.com
#
#   @@(#) $Id: spintime.itk,v 14.1 2004/11/16 19:42:19 morrison Exp $
# ----------------------------------------------------------------------
#            Copyright (c) 1997 DSC Technologies Corporation
# ======================================================================
# Permission to use, copy, modify, distribute and license this software
# and its documentation for any purpose, and without fee or written
# agreement with DSC, is hereby granted, provided that the above copyright
# notice appears in all copies and that both the copyright notice and
# warranty disclaimer below appear in supporting documentation, and that
# the names of DSC Technologies Corporation or DSC Communications
# Corporation not be used in advertising or publicity pertaining to the
# software without specific, written prior permission.
#
# DSC DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING
# ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, AND NON-
# INFRINGEMENT. THIS SOFTWARE IS PROVIDED ON AN "AS IS" BASIS, AND THE
# AUTHORS AND DISTRIBUTORS HAVE NO OBLIGATION TO PROVIDE MAINTENANCE,
# SUPPORT, UPDATES, ENHANCEMENTS, OR MODIFICATIONS. IN NO EVENT SHALL
# DSC BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR
# ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
# WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTUOUS ACTION,
# ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
# SOFTWARE.
# ======================================================================

#
# Default resources.
#
option add *Spintime.hourLabel "Hour" widgetDefault
option add *Spintime.minuteLabel "Minute" widgetDefault
option add *Spintime.secondLabel "Second" widgetDefault
option add *Spintime.hourWidth 3 widgetDefault
option add *Spintime.minuteWidth 3 widgetDefault
option add *Spintime.secondWidth 3 widgetDefault

#
# Usual options.
#
itk::usual Spintime {
    keep -background -cursor -foreground -labelfont -textbackground -textfont
}

# ------------------------------------------------------------------
#                            SPINTIME
# ------------------------------------------------------------------
itcl::class iwidgets::Spintime {
    inherit itk::Widget

    constructor {args} {}
    destructor {}

    itk_option define -orient orient Orient vertical
    itk_option define -labelpos labelPos Position w
    itk_option define -houron hourOn HourOn true
    itk_option define -minuteon minuteOn MinuteOn true
    itk_option define -secondon secondOn SecondOn true
    itk_option define -timemargin timeMargin Margin 1
    itk_option define -militaryon militaryOn MilitaryOn true

    public {
	method get {{format "-string"}}
	method show {{date now}}
    }

    protected {
	method _packTime {{when later}}
	method _down60 {comp}

	variable _repack {}             ;# Reconfiguration flag.
	variable _interior
    }
}

#
# Provide a lowercased access method for the Spintime class.
#
proc ::iwidgets::spintime {pathName args} {
    uplevel ::iwidgets::Spintime $pathName $args
}

# ------------------------------------------------------------------
#                        CONSTRUCTOR
# ------------------------------------------------------------------
itcl::body iwidgets::Spintime::constructor {args} {
    set _interior $itk_interior
    set clicks [clock seconds]

    #
    # Create Hour Spinner
    #
    itk_component add hour {
	iwidgets::Spinint $itk_interior.hour -fixed 2 -range {0 23} -justify right
    } {
	keep -background -cursor -arroworient -foreground \
		-labelfont -labelmargin -relief -textbackground \
		-textfont -repeatdelay -repeatinterval

	rename -labeltext -hourlabel hourLabel Text
	rename -width -hourwidth hourWidth Width
    }

    #
    # Take off the default bindings for selction and motion.
    #
    bind [$itk_component(hour) component entry] <1> {break}
    bind [$itk_component(hour) component entry] <Button1-Motion> {break}

    #
    # Create Minute Spinner
    #
    itk_component add minute {
	iwidgets::Spinint $itk_interior.minute \
		-decrement [itcl::code $this _down60 minute] \
		-fixed 2 -range {0 59} -justify right
    } {
	keep -background -cursor -arroworient -foreground \
		-labelfont -labelmargin -relief -textbackground \
		-textfont -repeatdelay -repeatinterval

	rename -labeltext -minutelabel minuteLabel Text
	rename -width -minutewidth minuteWidth Width
    }

    #
    # Take off the default bindings for selction and motion.
    #
    bind [$itk_component(minute) component entry] <1> {break}
    bind [$itk_component(minute) component entry] <Button1-Motion> {break}

    #
    # Create Second Spinner
    #
    itk_component add second {
	iwidgets::Spinint $itk_interior.second  \
		-decrement [itcl::code $this _down60 second] \
		-fixed 2 -range {0 59} -justify right
    } {
	keep -background -cursor -arroworient -foreground \
		-labelfont -labelmargin -relief -textbackground \
		-textfont -repeatdelay -repeatinterval

	rename -labeltext -secondlabel secondLabel Text
	rename -width -secondwidth secondWidth Width
    }

    #
    # Take off the default bindings for selction and motion.
    #
    bind [$itk_component(second) component entry] <1> {break}
    bind [$itk_component(second) component entry] <Button1-Motion> {break}

    #
    # Initialize the widget based on the command line options.
    #
    eval itk_initialize $args

    #
    # Show the current time.
    #
    show now
}

# ------------------------------------------------------------------
#                           DESTRUCTOR
# ------------------------------------------------------------------
itcl::body iwidgets::Spintime::destructor {} {
    if {$_repack != ""} {after cancel $_repack}
}

# ------------------------------------------------------------------
#                             OPTIONS
# ------------------------------------------------------------------

# ------------------------------------------------------------------
# OPTION: -orient
#
# Specifies the orientation of the 3 spinners for Hour, Minute
# and second.
# ------------------------------------------------------------------
itcl::configbody iwidgets::Spintime::orient {
    _packTime
}

# ------------------------------------------------------------------
# OPTION: -labelpos
#
# Specifies the location of all 3 spinners' labels.
# Overloaded
# ------------------------------------------------------------------
itcl::configbody iwidgets::Spintime::labelpos {
    switch $itk_option(-labelpos) {
	n {
	    $itk_component(hour) configure -labelpos n
	    $itk_component(minute) configure -labelpos n
	    $itk_component(second) configure -labelpos n

	    #
	    # Un-align labels
	    #
	    $itk_component(hour) configure -labelmargin 1
	    $itk_component(minute) configure -labelmargin 1
	    $itk_component(second) configure -labelmargin 1
	}

	s {
	    $itk_component(hour) configure -labelpos s
	    $itk_component(minute) configure -labelpos s
	    $itk_component(second) configure -labelpos s

	    #
	    # Un-align labels
	    #
	    $itk_component(hour) configure -labelmargin 1
	    $itk_component(minute) configure -labelmargin 1
	    $itk_component(second) configure -labelmargin 1
	}

	w {
	    $itk_component(hour) configure -labelpos w
	    $itk_component(minute) configure -labelpos w
	    $itk_component(second) configure -labelpos w
	}

	e {
	    $itk_component(hour) configure -labelpos e
	    $itk_component(minute) configure -labelpos e
	    $itk_component(second) configure -labelpos e

	    #
	    # Un-align labels
	    #
	    $itk_component(hour) configure -labelmargin 1
	    $itk_component(minute) configure -labelmargin 1
	    $itk_component(second) configure -labelmargin 1
	}

	default {
	    error "bad labelpos option \"$itk_option(-labelpos)\",\
		    should be n, s, w or e"
	}
    }

    _packTime
}

# ------------------------------------------------------------------
# OPTION: -houron
#
# Specifies whether or not to display the hour spinner.
# ------------------------------------------------------------------
itcl::configbody iwidgets::Spintime::houron {
    _packTime
}

# ------------------------------------------------------------------
# OPTION: -minuteon
#
# Specifies whether or not to display the minute spinner.
# ------------------------------------------------------------------
itcl::configbody iwidgets::Spintime::minuteon {
    _packTime
}

# ------------------------------------------------------------------
# OPTION: -secondon
#
# Specifies whether or not to display the second spinner.
# ------------------------------------------------------------------
itcl::configbody iwidgets::Spintime::secondon {
    _packTime
}


# ------------------------------------------------------------------
# OPTION: -timemargin
#
# Specifies the margin space between the hour and minute spinners
# and the minute and second spinners.
# ------------------------------------------------------------------
itcl::configbody iwidgets::Spintime::timemargin {
    _packTime
}

# ------------------------------------------------------------------
# OPTION: -militaryon
#
# Specifies 24-hour clock or 12-hour.
# ------------------------------------------------------------------
itcl::configbody iwidgets::Spintime::militaryon {
    set clicks [clock seconds]

    if {$itk_option(-militaryon)} {
	$itk_component(hour) configure -range {0 23}
	$itk_component(hour) delete 0 end
	$itk_component(hour) insert end [clock format $clicks -format "%H"]
    } else {
	$itk_component(hour) configure -range {1 12}
	$itk_component(hour) delete 0 end
	$itk_component(hour) insert end [clock format $clicks -format "%I"]
    }
}

# ------------------------------------------------------------------
#                            METHODS
# ------------------------------------------------------------------

# ------------------------------------------------------------------
# METHOD: get ?format?
#
# Get the value of the time spinner in one of two formats string or
# as an integer clock value using the -string and -clicks options
# respectively.  The default is by string.  Reference the clock
# command for more information on obtaining time and its formats.
# ------------------------------------------------------------------
itcl::body iwidgets::Spintime::get {{format "-string"}} {
    set hour [$itk_component(hour) get]
    set minute [$itk_component(minute) get]
    set second [$itk_component(second) get]

    switch -- $format {
	"-string" {
	    return "$hour:$minute:$second"
	}
	"-clicks" {
	    return [clock scan "$hour:$minute:$second"]
	}
	default {
	    error "bad format option \"$format\":\
                   should be -string or -clicks"
	}
    }
}

# ------------------------------------------------------------------
# PUBLIC METHOD: show time
#
# Changes the currently displayed time to be that of the time
# argument.  The time may be specified either as a string or an
# integer clock value.  Reference the clock command for more
# information on obtaining time and its format.
# ------------------------------------------------------------------
itcl::body iwidgets::Spintime::show {{time "now"}} {
    if {$time == "now"} {
	set seconds [clock seconds]
    } else {
	if {[catch {clock format $time}] == 0} {
	    set seconds $time
	} elseif {[catch {set seconds [clock scan $time]}] != 0} {
	    error "bad time: \"$time\", must be a valid time\
               string, clock clicks value or the keyword now"
	}
    }

    $itk_component(hour) delete 0 end

    if {$itk_option(-militaryon)} {
	scan [clock format $seconds -format "%H"] "%d" hour
    } else {
	scan hour [clock format $seconds -format "%I"] "%d" hour
    }

    $itk_component(hour) insert end $hour

    $itk_component(minute) delete 0 end
    scan [clock format $seconds -format "%M"] "%d" minute
    $itk_component(minute) insert end $minute

    $itk_component(second) delete 0 end
    scan [clock format $seconds -format "%S"] "%d" seconds
    $itk_component(second) insert end $seconds

    return
}

# ------------------------------------------------------------------
# PROTECTED METHOD: _packTime ?when?
#
# Pack components of time spinner.  If "when" is "now", the change
# is applied immediately.  If it is "later" or it is not specified,
# then the change is applied later, when the application is idle.
# ------------------------------------------------------------------
itcl::body iwidgets::Spintime::_packTime {{when later}} {
    if {$when == "later"} {
	if {$_repack == ""} {
	    set _repack [after idle [itcl::code $this _packTime now]]
	}
	return
    } elseif {$when != "now"} {
	error "bad option \"$when\": should be now or later"
    }

    for {set i 0} {$i < 5} {incr i} {
	grid rowconfigure $_interior $i -minsize 0
	grid columnconfigure $_interior $i -minsize 0
    }

    if {$itk_option(-minuteon)} {
	set minuteon 1
    } else {
	set minuteon 0
    }
    if {$itk_option(-secondon)} {
	set secondon 1
    } else {
	set secondon 0
    }

    set _repack ""

    switch $itk_option(-orient) {
	vertical {
	    set row -1

	    if {$itk_option(-houron)} {
		grid $itk_component(hour) -row [incr row] -column 0 \
		    -sticky nsew
	    } else {
		grid forget $itk_component(hour)
	    }

	    if {$itk_option(-minuteon)} {
		if {$itk_option(-houron)} {
		    grid rowconfigure $_interior [incr row] \
			-minsize $itk_option(-timemargin)
		}

		grid $itk_component(minute) -row [incr row] -column 0 \
		    -sticky nsew
	    } else {
		grid forget $itk_component(minute)
	    }

	    if {$itk_option(-secondon)} {
		if {$minuteon || $secondon} {
		    grid rowconfigure $_interior [incr row] \
			-minsize $itk_option(-timemargin)
		}

		grid $itk_component(second) -row [incr row] -column 0 \
		    -sticky nsew
	    } else {
		grid forget $itk_component(second)
	    }

	    if {$itk_option(-labelpos) == "w"} {
		iwidgets::Labeledwidget::alignlabels $itk_component(hour) \
			$itk_component(minute) $itk_component(second)
	    }
	}

	horizontal {
	    set column -1

	    if {$itk_option(-houron)} {
		grid $itk_component(hour) -row 0 -column [incr column] \
		    -sticky nsew
	    } else {
		grid forget $itk_component(hour)
	    }

	    if {$itk_option(-minuteon)} {
		if {$itk_option(-houron)} {
		    grid columnconfigure $_interior [incr column] \
			-minsize $itk_option(-timemargin)
		}

		grid $itk_component(minute) -row 0 -column [incr column] \
		    -sticky nsew
	    } else {
		grid forget $itk_component(minute)
	    }

	    if {$itk_option(-secondon)} {
		if {$minuteon || $secondon} {
		    grid columnconfigure $_interior [incr column] \
			-minsize $itk_option(-timemargin)
		}

		grid $itk_component(second) -row 0 -column [incr column] \
		    -sticky nsew
	    } else {
		grid forget $itk_component(second)
	    }

	    #
	    # Un-align labels
	    #
	    $itk_component(hour) configure -labelmargin 1
	    $itk_component(minute) configure -labelmargin 1
	    $itk_component(second) configure -labelmargin 1
	}

	default {
	    error "bad orient option \"$itk_option(-orient)\", should\
		    be \"vertical\" or \"horizontal\""
	}
    }
}

# ------------------------------------------------------------------
# METHOD: down60
#
# Down arrow button press event.  Decrement value in the minute
# or second entry.
# ------------------------------------------------------------------
itcl::body iwidgets::Spintime::_down60 {comp} {
	set step [$itk_component($comp) cget -step]
	set val [$itk_component($comp) get]

	incr val -$step
	if {$val < 0} {
	   set val [expr {60-$step}]
        }
	$itk_component($comp) delete 0 end
	$itk_component($comp) insert 0 $val
}
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d1 1
a1 1
# Spintime 
d12 1
a12 1
#   @@(#) $Id: spintime.itk,v 1.1 2004/05/20 14:49:48 morrison Exp $
d16 7
a22 7
# Permission to use, copy, modify, distribute and license this software 
# and its documentation for any purpose, and without fee or written 
# agreement with DSC, is hereby granted, provided that the above copyright 
# notice appears in all copies and that both the copyright notice and 
# warranty disclaimer below appear in supporting documentation, and that 
# the names of DSC Technologies Corporation or DSC Communications 
# Corporation not be used in advertising or publicity pertaining to the 
d24 2
a25 2
# 
# DSC DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING 
d28 4
a31 4
# AUTHORS AND DISTRIBUTORS HAVE NO OBLIGATION TO PROVIDE MAINTENANCE, 
# SUPPORT, UPDATES, ENHANCEMENTS, OR MODIFICATIONS. IN NO EVENT SHALL 
# DSC BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR 
# ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, 
d33 1
a33 1
# ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS 
d58 2
a59 2
    inherit itk::Widget 
    
d63 7
a69 7
    itk_option define -orient orient Orient vertical 
    itk_option define -labelpos labelPos Position w 
    itk_option define -houron hourOn HourOn true 
    itk_option define -minuteon minuteOn MinuteOn true 
    itk_option define -secondon secondOn SecondOn true 
    itk_option define -timemargin timeMargin Margin 1 
    itk_option define -militaryon militaryOn MilitaryOn true 
d72 1
a72 1
	method get {{format "-string"}} 
d75 1
a75 1
    
d87 1
a87 1
# 
d112 1
a112 1
    
d134 1
a134 1
    
d168 1
a168 1
    # 
d173 1
a173 1
	
d187 2
a188 2
# 
# Specifies the orientation of the 3 spinners for Hour, Minute 
d197 3
a199 3
# 
# Specifies the location of all 3 spinners' labels. 
# Overloaded 
d207 1
a207 1
	    
d215 1
a215 1
	
d220 1
a220 1
	    
d228 1
a228 1
	
d234 1
a234 1
	
d239 1
a239 1
	    
d247 1
a247 1
	
d259 1
a259 1
# 
d268 1
a268 1
# 
d277 1
a277 1
# 
d287 3
a289 3
# 
# Specifies the margin space between the hour and minute spinners 
# and the minute and second spinners. 
d321 3
a323 3
# Get the value of the time spinner in one of two formats string or 
# as an integer clock value using the -string and -clicks options 
# respectively.  The default is by string.  Reference the clock 
d350 1
a350 1
# integer clock value.  Reference the clock command for more 
d376 1
a376 1
    scan [clock format $seconds -format "%M"] "%d" minute 
d389 1
a389 1
# Pack components of time spinner.  If "when" is "now", the change 
d427 1
a427 1
		    -sticky nsew 
d439 1
a439 1
		    -sticky nsew 
d443 1
a443 1
	    
d451 1
a451 1
		    -sticky nsew 
d455 1
a455 1
	    
d461 1
a461 1
	
d467 1
a467 1
		    -sticky nsew 
d471 1
a471 1
	    
d479 1
a479 1
		    -sticky nsew 
d483 1
a483 1
	    
d491 1
a491 1
		    -sticky nsew 
d495 1
a495 1
	    
d503 1
a503 1
	
d508 1
a508 1
    } 
@


1.1
log
@Sources that are external to BRL-CAD are moved from the top level to src/other/.
@
text
@d12 1
a12 1
#   @@(#) $Id: spintime.itk,v 1.1 2003/03/13 13:20:37 jra Exp $
@

