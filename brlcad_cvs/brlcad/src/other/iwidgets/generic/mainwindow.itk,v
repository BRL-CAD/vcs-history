head	14.2;
access;
symbols
	rel-7-10-4:14.1
	STABLE:14.1.0.10
	stable-branch:14.1
	rel-7-10-2:14.1
	rel-7-10-0:14.1
	rel-7-8-4:14.1
	rel-7-8-2:14.1
	rel-7-8-0:14.1
	trimnurbs-branch:14.1.0.8
	help:14.1
	temp_tag:14.1
	bobWinPort-20051223-freeze:14.1
	postmerge-20051223-bobWinPort:14.1
	premerge-20051223-bobWinPort:14.1
	rel-7-6-6:14.1
	rel-7-6-4:14.1
	rel-7-6-2:14.1
	rel-7-6-branch:14.1.0.6
	rel-7-6-0:14.1
	rel-7-4-2:14.1
	rel-7-4-branch:14.1.0.4
	bobWinPort:14.1.0.2
	rel-7-4-0:14.1
	rel-7-2-6:14.1
	rel-7-2-4:14.1
	rel-7-2-2:14.1
	rel-7-2-0:14.1
	rel-7-0-4:14.1
	rel-7-0-2:14.1
	rel-7-0-1:14.1
	opensource-post:14.1
	opensource-pre:1.1
	rel-7-0-branch:1.1.0.2
	rel-7-0:1.1;
locks; strict;
comment	@# @;


14.2
date	2007.09.14.15.21.36;	author erikgreenwald;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.19;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.20.14.49.43;	author morrison;	state Exp;
branches;
next	;


desc
@@


14.2
log
@removed trailing whitespace
@
text
@#
# Mainwindow
# ----------------------------------------------------------------------
# This class implements a mainwindow containing a menubar, toolbar,
# mousebar, childsite, status line, and help line.  Each item may
# be filled and configured to suit individual needs.
#
# ----------------------------------------------------------------------
#  AUTHOR: Mark L. Ulferts              EMAIL: mulferts@@austin.dsccc.com
#
#  @@(#) RCS: $Id: mainwindow.itk,v 14.1 2004/11/16 19:42:19 morrison Exp $
# ----------------------------------------------------------------------
#            Copyright (c) 1997 DSC Technologies Corporation
# ======================================================================
# Permission to use, copy, modify, distribute and license this software
# and its documentation for any purpose, and without fee or written
# agreement with DSC, is hereby granted, provided that the above copyright
# notice appears in all copies and that both the copyright notice and
# warranty disclaimer below appear in supporting documentation, and that
# the names of DSC Technologies Corporation or DSC Communications
# Corporation not be used in advertising or publicity pertaining to the
# software without specific, written prior permission.
#
# DSC DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING
# ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, AND NON-
# INFRINGEMENT. THIS SOFTWARE IS PROVIDED ON AN "AS IS" BASIS, AND THE
# AUTHORS AND DISTRIBUTORS HAVE NO OBLIGATION TO PROVIDE MAINTENANCE,
# SUPPORT, UPDATES, ENHANCEMENTS, OR MODIFICATIONS. IN NO EVENT SHALL
# DSC BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR
# ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
# WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTUOUS ACTION,
# ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
# SOFTWARE.
# ======================================================================

# ------------------------------------------------------------------
#                             MAINWINDOW
# ------------------------------------------------------------------
itcl::class iwidgets::Mainwindow {
    inherit iwidgets::Shell

    constructor {args} {}

    itk_option define -helpline helpLine HelpLine 1
    itk_option define -statusline statusLine StatusLine 1

    public {
	method childsite {}
	method menubar {args}
	method mousebar {args}
	method msgd {args}
	method toolbar {args}
    }

    protected {
	method _exitCB {}

	common _helpVar
	common _statusVar
    }
}

#
# Provide a lowercased access method for the ::iwidgets::Mainwindow class.
#
proc iwidgets::mainwindow {pathName args} {
    uplevel ::iwidgets::Mainwindow $pathName $args
}

# ------------------------------------------------------------------
#                           CONSTRUCTOR
# ------------------------------------------------------------------
itcl::body iwidgets::Mainwindow::constructor {args} {
    itk_option add hull.width hull.height

    pack propagate $itk_component(hull) no

    wm protocol $itk_component(hull) WM_DELETE_WINDOW [itcl::code $this _exitCB]

    #
    # Create a menubar, renaming the font, foreground, and background
    # so they may be separately set.  The help variable will be setup
    # as well.
    #
    itk_component add menubar {
	iwidgets::Menubar $itk_interior.menubar \
	  -helpvariable [itcl::scope _helpVar($this)]
    } {
	keep -disabledforeground -cursor \
	    -highlightbackground -highlightthickness
	rename -font \
	    -menubarfont menuBarFont Font
	rename -foreground \
	    -menubarforeground menuBarForeground Foreground
	rename -background \
	    -menubarbackground menuBarBackground Background
    }

    #
    # Add a toolbar beneath the menubar.
    #
    itk_component add toolbar {
	iwidgets::Toolbar $itk_interior.toolbar -orient horizontal \
	    -helpvariable [itcl::scope _helpVar($this)]
    } {
	keep -balloonbackground -balloondelay1 -balloondelay2 \
	    -balloonfont -balloonforeground -disabledforeground -cursor \
	    -highlightbackground -highlightthickness
	rename -font -toolbarfont toolbarFont Font
	rename -foreground -toolbarforeground toolbarForeground Foreground
	rename -background -toolbarbackground toolbarBackground Background
    }

    #
    # Add a mouse bar on the left.
    #
    itk_component add mousebar {
	iwidgets::Toolbar $itk_interior.mousebar -orient vertical \
	    -helpvariable [itcl::scope _helpVar($this)]
    } {
	keep -balloonbackground -balloondelay1 -balloondelay2 \
	    -balloonfont -balloonforeground -disabledforeground -cursor \
	    -highlightbackground -highlightthickness
	rename -font -toolbarfont toolbarFont Font
	rename -foreground -toolbarforeground toolbarForeground Foreground
	rename -background -toolbarbackground toolbarBackground Background
    }

    #
    # Create the childsite window window.
    #
    itk_component add -protected mwchildsite {
	frame $itk_interior.mwchildsite
    }

    #
    # Add the help and system status lines
    #
    itk_component add -protected lineframe {
	frame $itk_interior.lineframe
    }

    itk_component add help {
	label $itk_component(lineframe).help \
	    -textvariable [itcl::scope _helpVar($this)] \
	    -relief sunken -borderwidth 2 -width 10
    }

    itk_component add status {
	label $itk_component(lineframe).status \
	    -textvariable [itcl::scope _statusVar($this)] \
	    -relief sunken -borderwidth 2 -width 10
    }

    #
    # Create the message dialog for use throughout the mainwindow.
    #
    itk_component add msgd {
	iwidgets::Messagedialog $itk_interior.msgd -modality application
    } {
      usual
      ignore -modality
    }

    #
    # Use the grid to pack together the menubar, toolbar, mousebar,
    # childsite, and status area.
    #
    grid $itk_component(menubar) -row 0 -column 0 -columnspan 2 -sticky ew
    grid $itk_component(toolbar) -row 1 -column 0 -columnspan 2 -sticky ew
    grid $itk_component(mousebar) -row 2 -column 0 -sticky ns
    grid $itk_component(mwchildsite) -row 2 -column 1 -sticky nsew \
	-padx 5 -pady 5
    grid $itk_component(lineframe) -row 3 -column 0 -columnspan 2 -sticky ew

    grid columnconfigure $itk_interior 1 -weight 1
    grid rowconfigure $itk_interior 2 -weight 1

    #
    # Set the interior to be the childsite for derived classes.
    #
    set itk_interior $itk_component(mwchildsite)

    #
    # Initialize all the configuration options.
    #
    eval itk_initialize $args
}

# ------------------------------------------------------------------
#                             OPTIONS
# ------------------------------------------------------------------

# ------------------------------------------------------------------
# OPTION: -helpline
#
# Specifies whether or not to display the help line.  The value
# may be given in any of the forms acceptable to Tk_GetBoolean.
# ------------------------------------------------------------------
itcl::configbody iwidgets::Mainwindow::helpline {
    if {$itk_option(-helpline)} {
	pack $itk_component(help) -side left -fill x -expand yes -padx 2
    } else {
	pack forget $itk_component(help)
    }
}

# ------------------------------------------------------------------
# OPTION: -statusline
#
# Specifies whether or not to display the status line.  The value
# may be given in any of the forms acceptable to Tk_GetBoolean.
# ------------------------------------------------------------------
itcl::configbody iwidgets::Mainwindow::statusline {
    if {$itk_option(-statusline)} {
	pack $itk_component(status) -side right -fill x -expand yes -padx 2
    } else {
	pack forget $itk_component(status)
    }
}

# ------------------------------------------------------------------
#                            METHODS
# ------------------------------------------------------------------

# ------------------------------------------------------------------
# METHOD: childsite
#
# Return the childsite widget.
# ------------------------------------------------------------------
itcl::body iwidgets::Mainwindow::childsite {} {
    return $itk_component(mwchildsite)
}

# ------------------------------------------------------------------
# METHOD: menubar ?args?
#
# Evaluate the args against the Menubar component.
# ------------------------------------------------------------------
itcl::body iwidgets::Mainwindow::menubar {args} {
    if {[llength $args] == 0} {
	return $itk_component(menubar)
    } else {
	return [eval $itk_component(menubar) $args]
    }
}

# ------------------------------------------------------------------
# METHOD: toolbar ?args?
#
# Evaluate the args against the Toolbar component.
# ------------------------------------------------------------------
itcl::body iwidgets::Mainwindow::toolbar {args} {
    if {[llength $args] == 0} {
	return $itk_component(toolbar)
    } else {
	return [eval $itk_component(toolbar) $args]
    }
}

# ------------------------------------------------------------------
# METHOD: mousebar ?args?
#
# Evaluate the args against the Mousebar component.
# ------------------------------------------------------------------
itcl::body iwidgets::Mainwindow::mousebar {args} {
    if {[llength $args] == 0} {
	return $itk_component(mousebar)
    } else {
	return [eval $itk_component(mousebar) $args]
    }
}

# ------------------------------------------------------------------
# METHOD: msgd ?args?
#
# Evaluate the args against the Messagedialog component.
# ------------------------------------------------------------------
itcl::body iwidgets::Mainwindow::msgd {args} {
    if {[llength $args] == 0} {
	return $itk_component(msgd)
    } else {
	return [eval $itk_component(msgd) $args]
    }
}

# ------------------------------------------------------------------
# PRIVATE METHOD: _exitCB
#
# Menu callback for the exit option from the file menu.  The method
# confirms the user's request to exit the application prior to
# taking the action.
# ------------------------------------------------------------------
itcl::body iwidgets::Mainwindow::_exitCB {} {
    #
    # Configure the message dialog for confirmation of the exit request.
    #
    msgd configure -title Confirmation -bitmap questhead \
	    -text "Exit confirmation\n\
		   Are you sure ?"
    msgd buttonconfigure OK -text Yes
    msgd buttonconfigure Cancel -text No
    msgd default Cancel
    msgd center $itk_component(hull)

    #
    # Activate the message dialog and given a positive response
    # proceed to exit the application
    #
    if {[msgd activate]} {
	::exit
    }
}
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d11 1
a11 1
#  @@(#) RCS: $Id: mainwindow.itk,v 1.1 2004/05/20 14:49:43 morrison Exp $
d15 7
a21 7
# Permission to use, copy, modify, distribute and license this software 
# and its documentation for any purpose, and without fee or written 
# agreement with DSC, is hereby granted, provided that the above copyright 
# notice appears in all copies and that both the copyright notice and 
# warranty disclaimer below appear in supporting documentation, and that 
# the names of DSC Technologies Corporation or DSC Communications 
# Corporation not be used in advertising or publicity pertaining to the 
d23 2
a24 2
# 
# DSC DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING 
d27 4
a30 4
# AUTHORS AND DISTRIBUTORS HAVE NO OBLIGATION TO PROVIDE MAINTENANCE, 
# SUPPORT, UPDATES, ENHANCEMENTS, OR MODIFICATIONS. IN NO EVENT SHALL 
# DSC BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR 
# ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, 
d32 1
a32 1
# ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS 
d65 1
a65 1
# 
d87 1
a87 1
	  -helpvariable [itcl::scope _helpVar($this)] 
d104 1
a104 1
	    -helpvariable [itcl::scope _helpVar($this)] 
d115 1
a115 1
    # Add a mouse bar on the left.  
d119 1
a119 1
	    -helpvariable [itcl::scope _helpVar($this)] 
d134 1
a134 1
    } 
d171 1
a171 1
    grid $itk_component(mousebar) -row 2 -column 0 -sticky ns 
d173 1
a173 1
	-padx 5 -pady 5 
d307 1
a307 1
    # Activate the message dialog and given a positive response 
d312 1
a312 1
    }    
@


1.1
log
@Sources that are external to BRL-CAD are moved from the top level to src/other/.
@
text
@d11 1
a11 1
#  @@(#) RCS: $Id: mainwindow.itk,v 1.1 2003/03/13 13:20:34 jra Exp $
@

