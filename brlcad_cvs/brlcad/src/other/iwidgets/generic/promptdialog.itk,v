head	14.2;
access;
symbols
	rel-7-10-4:14.1
	STABLE:14.1.0.10
	stable-branch:14.1
	rel-7-10-2:14.1
	rel-7-10-0:14.1
	rel-7-8-4:14.1
	rel-7-8-2:14.1
	rel-7-8-0:14.1
	trimnurbs-branch:14.1.0.8
	help:14.1
	temp_tag:14.1
	bobWinPort-20051223-freeze:14.1
	postmerge-20051223-bobWinPort:14.1
	premerge-20051223-bobWinPort:14.1
	rel-7-6-6:14.1
	rel-7-6-4:14.1
	rel-7-6-2:14.1
	rel-7-6-branch:14.1.0.6
	rel-7-6-0:14.1
	rel-7-4-2:14.1
	rel-7-4-branch:14.1.0.4
	bobWinPort:14.1.0.2
	rel-7-4-0:14.1
	rel-7-2-6:14.1
	rel-7-2-4:14.1
	rel-7-2-2:14.1
	rel-7-2-0:14.1
	rel-7-0-4:14.1
	rel-7-0-2:14.1
	rel-7-0-1:14.1
	opensource-post:14.1
	opensource-pre:1.1
	rel-7-0-branch:1.1.0.2
	rel-7-0:1.1;
locks; strict;
comment	@# @;


14.2
date	2007.09.14.15.21.36;	author erikgreenwald;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.19;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.20.14.49.45;	author morrison;	state Exp;
branches;
next	;


desc
@@


14.2
log
@removed trailing whitespace
@
text
@#
# Promptdialog
# ----------------------------------------------------------------------
# Implements a prompt dialog similar to the OSF/Motif standard prompt
# dialog composite widget.  The Promptdialog is derived from the
# Dialog class and is composed of a EntryField with methods to
# manipulate the dialog buttons.
#
# ----------------------------------------------------------------------
#  AUTHOR: Mark L. Ulferts              EMAIL: mulferts@@austin.dsccc.com
#
#  @@(#) $Id: promptdialog.itk,v 14.1 2004/11/16 19:42:19 morrison Exp $
# ----------------------------------------------------------------------
#            Copyright (c) 1995 DSC Technologies Corporation
# ======================================================================
# Permission to use, copy, modify, distribute and license this software
# and its documentation for any purpose, and without fee or written
# agreement with DSC, is hereby granted, provided that the above copyright
# notice appears in all copies and that both the copyright notice and
# warranty disclaimer below appear in supporting documentation, and that
# the names of DSC Technologies Corporation or DSC Communications
# Corporation not be used in advertising or publicity pertaining to the
# software without specific, written prior permission.
#
# DSC DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING
# ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, AND NON-
# INFRINGEMENT. THIS SOFTWARE IS PROVIDED ON AN "AS IS" BASIS, AND THE
# AUTHORS AND DISTRIBUTORS HAVE NO OBLIGATION TO PROVIDE MAINTENANCE,
# SUPPORT, UPDATES, ENHANCEMENTS, OR MODIFICATIONS. IN NO EVENT SHALL
# DSC BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR
# ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
# WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTUOUS ACTION,
# ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
# SOFTWARE.
# ======================================================================

#
# Usual options.
#
itk::usual Promptdialog {
    keep -background -borderwidth -cursor -foreground -highlightcolor \
	 -highlightthickness -insertbackground -insertborderwidth \
	 -insertofftime -insertontime -insertwidth -labelfont -modality \
	 -selectbackground -selectborderwidth -selectforeground \
	 -textbackground -textfont
}

# ------------------------------------------------------------------
#                            PROMPTDIALOG
# ------------------------------------------------------------------
itcl::class iwidgets::Promptdialog {
    inherit iwidgets::Dialog

    constructor {args} {}

    public method get {}
    public method clear {}
    public method insert {args}
    public method delete {args}
    public method icursor {args}
    public method index {args}
    public method scan {args}
    public method selection {args}
    method xview {args}
}

#
# Provide a lowercased access method for the Dialogshell class.
#
proc ::iwidgets::promptdialog {pathName args} {
    uplevel ::iwidgets::Promptdialog $pathName $args
}

#
# Use option database to override default resources of base classes.
#
option add *Promptdialog.labelText Selection widgetDefault
option add *Promptdialog.labelPos nw widgetDefault
option add *Promptdialog.title "Prompt Dialog" widgetDefault
option add *Promptdialog.master "." widgetDefault

# ------------------------------------------------------------------
#                        CONSTRUCTOR
# ------------------------------------------------------------------
itcl::body iwidgets::Promptdialog::constructor {args} {
    #
    # Set the borderwidth to zero.
    #
    component hull configure -borderwidth 0

    #
    # Create an entry field widget.
    #
    itk_component add prompt {
	iwidgets::Entryfield $itk_interior.prompt -command [itcl::code $this invoke]
    } {
	usual

	keep -exportselection -invalid -labelpos -labeltext -relief \
	    -show -textbackground -textfont -validate
    }

    pack $itk_component(prompt) -fill x -expand yes
    set itk_interior [childsite]

    hide Help

    #
    # Initialize the widget based on the command line options.
    #
    eval itk_initialize $args
}

# ------------------------------------------------------------------
#                            METHODS
# ------------------------------------------------------------------

# ------------------------------------------------------------------
# METHOD: get
#
# Thinwrapped method of entry field class.
# ------------------------------------------------------------------
itcl::body iwidgets::Promptdialog::get {} {
    return [$itk_component(prompt) get]
}

# ------------------------------------------------------------------
# METHOD: clear
#
# Thinwrapped method of entry field class.
# ------------------------------------------------------------------
itcl::body iwidgets::Promptdialog::clear {} {
    eval $itk_component(prompt) clear
}

# ------------------------------------------------------------------
# METHOD: insert args
#
# Thinwrapped method of entry field class.
# ------------------------------------------------------------------
itcl::body iwidgets::Promptdialog::insert {args} {
    eval $itk_component(prompt) insert $args
}

# ------------------------------------------------------------------
# METHOD: delete first ?last?
#
# Thinwrapped method of entry field class.
# ------------------------------------------------------------------
itcl::body iwidgets::Promptdialog::delete {args} {
    eval $itk_component(prompt) delete $args
}

# ------------------------------------------------------------------
# METHOD: icursor
#
# Thinwrapped method of entry field class.
# ------------------------------------------------------------------
itcl::body iwidgets::Promptdialog::icursor {args} {
    eval $itk_component(prompt) icursor $args
}

# ------------------------------------------------------------------
# METHOD: index
#
# Thinwrapped method of entry field class.
# ------------------------------------------------------------------
itcl::body iwidgets::Promptdialog::index {args} {
    return [eval $itk_component(prompt) index $args]
}

# ------------------------------------------------------------------
# METHOD: scan option args
#
# Thinwrapped method of entry field class.
# ------------------------------------------------------------------
itcl::body iwidgets::Promptdialog::scan {args} {
    eval $itk_component(prompt) scan $args
}

# ------------------------------------------------------------------
# METHOD: selection args
#
# Thinwrapped method of entry field class.
# ------------------------------------------------------------------
itcl::body iwidgets::Promptdialog::selection {args} {
    eval $itk_component(prompt) selection $args
}

# ------------------------------------------------------------------
# METHOD: xview args
#
# Thinwrapped method of entry field class.
# ------------------------------------------------------------------
itcl::body iwidgets::Promptdialog::xview {args} {
    eval $itk_component(prompt) xview $args
}


@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d5 1
a5 1
# dialog composite widget.  The Promptdialog is derived from the 
d8 1
a8 1
# 
d12 1
a12 1
#  @@(#) $Id: promptdialog.itk,v 1.1 2004/05/20 14:49:45 morrison Exp $
d16 7
a22 7
# Permission to use, copy, modify, distribute and license this software 
# and its documentation for any purpose, and without fee or written 
# agreement with DSC, is hereby granted, provided that the above copyright 
# notice appears in all copies and that both the copyright notice and 
# warranty disclaimer below appear in supporting documentation, and that 
# the names of DSC Technologies Corporation or DSC Communications 
# Corporation not be used in advertising or publicity pertaining to the 
d24 2
a25 2
# 
# DSC DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING 
d28 4
a31 4
# AUTHORS AND DISTRIBUTORS HAVE NO OBLIGATION TO PROVIDE MAINTENANCE, 
# SUPPORT, UPDATES, ENHANCEMENTS, OR MODIFICATIONS. IN NO EVENT SHALL 
# DSC BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR 
# ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, 
d33 1
a33 1
# ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS 
d56 9
a64 9
    public method get {} 
    public method clear {} 
    public method insert {args} 
    public method delete {args} 
    public method icursor {args} 
    public method index {args} 
    public method scan {args} 
    public method selection {args} 
    method xview {args} 
d69 1
a69 1
# 
d90 2
a91 2
    
    # 
d100 1
a100 1
	    -show -textbackground -textfont -validate 
d102 1
a102 1
    
d105 1
a105 1
    
d112 1
a112 1
}   
d128 1
a128 1
# METHOD: clear 
@


1.1
log
@Sources that are external to BRL-CAD are moved from the top level to src/other/.
@
text
@d12 1
a12 1
#  @@(#) $Id: promptdialog.itk,v 1.1 2003/03/13 13:20:35 jra Exp $
@

