head	14.15;
access;
symbols
	rel-7-10-4:14.14
	STABLE:14.14.0.2
	stable-branch:14.6
	rel-7-10-2:14.14
	rel-7-10-0:14.14
	rel-7-8-4:14.10
	rel-7-8-2:14.9
	rel-7-8-0:14.9
	trimnurbs-branch:14.9.0.2
	help:14.9
	temp_tag:14.8
	bobWinPort-20051223-freeze:14.7
	postmerge-20051223-bobWinPort:14.8
	premerge-20051223-bobWinPort:14.8
	rel-7-6-6:14.8
	rel-7-6-4:14.8
	rel-7-6-2:14.7
	rel-7-6-branch:14.7.0.4
	rel-7-6-0:14.7
	rel-7-4-2:14.6
	rel-7-4-branch:14.6.0.2
	bobWinPort:14.7.0.2
	rel-7-4-0:14.6
	rel-7-2-6:14.6
	rel-7-2-4:14.6
	rel-7-2-2:14.6
	rel-7-2-0:14.6
	rel-7-0-4:14.5
	rel-7-0-2:14.5
	rel-7-0-1:14.5
	opensource-post:14.5
	opensource-pre:1.2
	rel-7-0-branch:1.2.0.2
	rel-7-0:1.2;
locks; strict;
comment	@ * @;


14.15
date	2007.12.17.02.16.53;	author brlcad;	state Exp;
branches;
next	14.14;

14.14
date	2007.01.27.01.41.35;	author brlcad;	state Exp;
branches;
next	14.13;

14.13
date	2007.01.23.01.13.33;	author brlcad;	state Exp;
branches;
next	14.12;

14.12
date	2007.01.21.04.45.41;	author brlcad;	state Exp;
branches;
next	14.11;

14.11
date	2007.01.20.14.36.50;	author brlcad;	state Exp;
branches;
next	14.10;

14.10
date	2006.09.02.14.02.14;	author lbutler;	state Exp;
branches;
next	14.9;

14.9
date	2006.01.18.06.46.16;	author brlcad;	state Exp;
branches;
next	14.8;

14.8
date	2005.10.23.04.44.31;	author brlcad;	state Exp;
branches;
next	14.7;

14.7
date	2005.08.12.22.28.35;	author lbutler;	state Exp;
branches
	14.7.4.1;
next	14.6;

14.6
date	2005.01.30.20.30.44;	author brlcad;	state Exp;
branches;
next	14.5;

14.5
date	2004.12.21.06.38.19;	author morrison;	state Exp;
branches;
next	14.4;

14.4
date	2004.12.21.06.18.43;	author morrison;	state Exp;
branches;
next	14.3;

14.3
date	2004.12.21.05.45.20;	author morrison;	state Exp;
branches;
next	14.2;

14.2
date	2004.12.21.01.52.15;	author morrison;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.13;	author morrison;	state Exp;
branches;
next	1.2;

1.2
date	2004.08.02.23.01.48;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.20.15.19.27;	author morrison;	state Exp;
branches;
next	;

14.7.4.1
date	2005.11.13.13.46.15;	author brlcad;	state Exp;
branches;
next	;


desc
@@


14.15
log
@removal of the FAST declaration throughout.  now using register or letting the compiler sort things out.
@
text
@/*                       C O M P L E X . C
 * BRL-CAD
 *
 * Copyright (c) 1985-2007 United States Government as represented by
 * the U.S. Army Research Laboratory.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * version 2.1 as published by the Free Software Foundation.
 *
 * This library is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this file; see the file named COPYING for more
 * information.
 */
/** @@addtogroup complex */
/** @@{ */
/** @@file complex.c
 *
 *  @@par Functions:
 *  @@li bn_cx_div		Complex Division
 *  @@li  bn_cx_sqrt	Complex Square Root
 *
 *
 * @@author	Douglas A Gwyn		(Original Version)
 * @@author	Michael John Muuss	(Macro Version)
 *
 * @@par Source -
 *	SECAD/VLD Computing Consortium, Bldg 394
 * @@n	The U. S. Army Ballistic Research Laboratory
 * @@n	Aberdeen Proving Ground, Maryland  21005
 */
/** @@} */

#ifndef lint
static const char RCScomplex[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libbn/complex.c,v 14.14 2007/01/27 01:41:35 brlcad Exp $ (BRL)";
#endif

#include "common.h"


#include <stdio.h>
#include <math.h>
#include "machine.h"
#include "bu.h"
#include "vmath.h"
#include "bn.h"

/* arbitrary numerical arguments, integer value: */
#define	SIGN( x )	((x) == 0 ? 0 : (x) > 0 ? 1 : -1)
#define	ABS( a )	((a) >= 0 ? (a) : -(a))

/**
 *			B N _ C X _ D I V
 *@@brief
 *	Divide one complex by another
 *
 *	bn_cx_div( &a, &b )	divides  a  by  b .  Zero divisor fails.
 *	a and b may coincide.  Result stored in a.
 */
void
bn_cx_div(register bn_complex_t *ap, register const bn_complex_t *bp)
{
	register fastf_t r, s;
	register fastf_t ap__re;

	/* Note: classical formula may cause unnecessary overflow */
	ap__re = ap->re;
	r = bp->re;
	s = bp->im;
	if ( ABS( r ) >= ABS( s ) )  {
		if( NEAR_ZERO( r, SQRT_SMALL_FASTF ) )
			goto err;
		r = s / r;			/* <= 1 */
		s = 1.0 / (bp->re + r * s);
		ap->re = (ap->re + ap->im * r) * s;
		ap->im = (ap->im - ap__re * r) * s;
		return;
	}  else  {
		/* ABS( s ) > ABS( r ) */
		if( NEAR_ZERO( s, SQRT_SMALL_FASTF ) )
			goto err;
		r = r / s;			/* < 1 */
		s = 1.0 / (s + r * bp->re);
		ap->re = (ap->re * r + ap->im) * s;
		ap->im = (ap->im * r - ap__re) * s;
		return;
	}
err:
	bu_log("bn_cx_div: division by zero: %gR+%gI / %gR+%gI\n",
		ap->re, ap->im, bp->re, bp->im );
	ap->re = ap->im = 1.0e20;		/* "INFINITY" */
}

/**
 *			B N _ C X _ S Q R T
 *@@brief
 *  Compute square root of complex number
 *
 *	bn_cx_sqrt( &out, &c )	replaces  out  by  sqrt(c)
 *
 *	Note:	This is a double-valued function; the result of
 *		bn_cx_sqrt() always has nonnegative imaginary part.
 */
void
bn_cx_sqrt(bn_complex_t *op, register const bn_complex_t *ip)
{
	register fastf_t	ampl, temp;
	/* record signs of original real & imaginary parts */
	register int	re_sign;
	register int	im_sign;

	/* special cases are not necessary; they are here for speed */
	im_sign = SIGN( ip->im );
	if( (re_sign = SIGN(ip->re))  == 0 )  {
		if ( im_sign == 0 )
			op->re = op->im = 0;
		else if ( im_sign > 0 )
			op->re = op->im = sqrt( ip->im * 0.5 );
		else			/* im_sign < 0 */
			op->re = -(op->im = sqrt( ip->im * -0.5 ));
	} else if ( im_sign == 0 )  {
		if ( re_sign > 0 )  {
			op->re = sqrt( ip->re );
			op->im = 0.0;
		}  else  {		/* re_sign < 0 */
			op->im = sqrt( -ip->re );
			op->re = 0.0;
		}
	}  else  {
		/* no shortcuts */
		ampl = bn_cx_ampl( ip );
		if( (temp = (ampl - ip->re) * 0.5) < 0.0 )  {
			/* This case happens rather often, when the
			 *  hypot() in bn_cx_ampl() returns an ampl ever so
			 *  slightly smaller than ip->re.  This can easily
			 *  happen when ip->re ~= 10**20.
			 *  Just ignore the imaginary part.
			 */
			op->im = 0;
		} else
			op->im = sqrt( temp );

		if( (temp = (ampl + ip->re) * 0.5) < 0.0 )  {
			op->re = 0.0;
		} else {
			if( im_sign > 0 )
				op->re = sqrt(temp);
			else			/* im_sign < 0 */
				op->re = -sqrt(temp);
		}
	}
}
/** @@} */
/*
 * Local Variables:
 * mode: C
 * tab-width: 8
 * c-basic-offset: 4
 * indent-tabs-mode: t
 * End:
 * ex: shiftwidth=4 tabstop=8
 */
@


14.14
log
@ws. lots and lots of ws.  see sh/ws.sh for details (cases 'abcdeg').
@
text
@d40 1
a40 1
static const char RCScomplex[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libbn/complex.c,v 14.13 2007/01/23 01:13:33 brlcad Exp $ (BRL)";
d68 2
a69 2
	FAST fastf_t	r, s;
	FAST fastf_t	ap__re;
d112 1
a112 1
	FAST fastf_t	ampl, temp;
@


14.13
log
@Sweeping license updates.  Documentation is fully relicensed to the BSD Documentation License (a minor variant of the FreeBSD Documentation License and BSD License).  All GPL code (mostly application code) is converted to the LGPL and now also specifically declares version 2.1, revoking the blank check to the FSF.  The intent of these sweeping changes are to simplify the licensing terms and increase overall flexibility of use, both externally (to users for their purposes) and internally (to allow application code to be migrated to libraries without creating GPL libraries).  As a collective work, BRL-CAD is now LGPL.
@
text
@d28 1
a28 1
 *  
d40 1
a40 1
static const char RCScomplex[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libbn/complex.c,v 14.12 2007/01/21 04:45:41 brlcad Exp $ (BRL)";
a45 1

@


14.12
log
@ugh, what tedium.  put some effort towards cleaning up the doxygen labels and making the headers more consistent.  also exclusively using @@ for doxygen instead of \ to try to keep things more consistent.
@
text
@d9 1
a9 2
 * as published by the Free Software Foundation; either version 2 of
 * the License, or (at your option) any later version.
d14 1
a14 1
 * Library General Public License for more details.
d40 1
a40 1
static const char RCScomplex[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libbn/complex.c,v 14.11 2007/01/20 14:36:50 brlcad Exp $ (BRL)";
@


14.11
log
@update copyright to 2007
@
text
@d21 2
a22 3

/** \addtogroup complex */
/*@@{*/
d24 1
d35 2
a36 2
 *@@n	The U. S. Army Ballistic Research Laboratory
 *@@n	Aberdeen Proving Ground, Maryland  21005
d38 1
a38 1
/*@@}*/
d41 1
a41 1
static const char RCScomplex[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libbn/complex.c,v 14.10 2006/09/02 14:02:14 lbutler Exp $ (BRL)";
d160 1
a160 1
/*@@}*/
@


14.10
log
@Doxygen comments
@
text
@d4 1
a4 1
 * Copyright (c) 1985-2006 United States Government as represented by
d41 1
a41 1
static const char RCScomplex[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libbn/complex.c,v 14.9 2006/01/18 06:46:16 brlcad Exp $ (BRL)";
@


14.9
log
@update copyright to 2006
@
text
@d22 1
a22 1
/** \addtogroup libbn */
d25 7
a31 3
 *  Functions:
 *  - bn_cx_div		Complex Division
 *  - bn_cx_sqrt	Complex Square Root
d33 1
a33 5
 *  Authors -
 *	Douglas A Gwyn		(Original Version)
 *	Michael John Muuss	(Macro Version)
 *
 *  Source -
d35 2
a36 3
 *	The U. S. Army Ballistic Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005
 *
d41 1
a41 1
static const char RCScomplex[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libbn/complex.c,v 14.8 2005/10/23 04:44:31 brlcad Exp $ (BRL)";
d59 1
a59 1
/*
d61 1
a61 1
 *
d101 1
a101 1
/*
d103 1
a103 1
 *
d160 1
a160 1

@


14.8
log
@trailing ws
@
text
@d4 1
a4 1
 * Copyright (C) 1985-2005 United States Government as represented by
d42 1
a42 1
static const char RCScomplex[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libbn/complex.c,v 14.7 2005/08/12 22:28:35 lbutler Exp $ (BRL)";
@


14.7
log
@Doxygen changes
@
text
@d26 1
a26 1
 *  - bn_cx_div		Complex Division 
d28 1
a28 1
 *  
d32 1
a32 1
 *  
d37 1
a37 1
 *  
d42 1
a42 1
static const char RCScomplex[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libbn/complex.c,v 14.6 2005/01/30 20:30:44 brlcad Exp $ (BRL)";
@


14.7.4.1
log
@merge changes from HEAD aka rel-7-6-4 to the rel-7-6-branch just in case someone peeks a gander or tries to continue/build the branch
@
text
@d26 1
a26 1
 *  - bn_cx_div		Complex Division
d28 1
a28 1
 *
d32 1
a32 1
 *
d37 1
a37 1
 *
d42 1
a42 1
static const char RCScomplex[] = "@@(#)$Header$ (BRL)";
@


14.6
log
@update copyright to 2005
@
text
@d21 3
d25 4
a28 5
 *
 *  Functions -
 *	bn_cx_div	Complex Division
 *	bn_cx_sqrt	Complex Square Root
 *
d39 2
d42 1
a42 1
static const char RCScomplex[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libbn/complex.c,v 14.5 2004/12/21 06:38:19 morrison Exp $ (BRL)";
@


14.5
log
@remove the old copyright notice section
@
text
@d4 1
a4 1
 * Copyright (c) 1985-2004 United States Government as represented by
d38 1
a38 1
static const char RCScomplex[] = "@@(#)$Header: /cvs/brlcad/src/libbn/complex.c,v 14.4 2004/12/21 06:18:43 morrison Exp $ (BRL)";
@


14.4
log
@they should have received a copy of the LGPL with LGPL'd files
@
text
@a35 3
 *  Copyright Notice -
 *	This software is Copyright (C) 1985-2004 by the United States Army.
 *	All rights reserved.
d38 1
a38 1
static const char RCScomplex[] = "@@(#)$Header: /cvs/brlcad/src/libbn/complex.c,v 14.3 2004/12/21 05:45:20 morrison Exp $ (BRL)";
@


14.3
log
@s/GNU Library General/GNU Lesser General/g
@
text
@d17 2
a18 2
 * You should have received a copy of the GNU General Public License
 * along with this file; see the file named COPYING for more
d41 1
a41 1
static const char RCScomplex[] = "@@(#)$Header: /cvs/brlcad/src/libbn/complex.c,v 14.2 2004/12/21 01:52:15 morrison Exp $ (BRL)";
@


14.2
log
@assign copyright and LGPL
@
text
@d8 1
a8 1
 * modify it under the terms of the GNU Library General Public License
d41 1
a41 1
static const char RCScomplex[] = "@@(#)$Header: /cvs/brlcad/src/libbn/complex.c,v 14.1 2004/11/16 19:42:13 morrison Exp $ (BRL)";
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d1 21
a21 2
/*
 *			C O M P L E X . C
d41 1
a41 1
static const char RCScomplex[] = "@@(#)$Header: /cvs/brlcad/src/libbn/complex.c,v 1.2 2004/08/02 23:01:48 morrison Exp $ (BRL)";
@


1.2
log
@replace the wrapped config.h block with common.h
@
text
@d22 1
a22 1
static const char RCScomplex[] = "@@(#)$Header: /cvs/brlcad/src/libbn/complex.c,v 1.1 2004/05/20 15:19:27 morrison Exp $ (BRL)";
d141 10
@


1.1
log
@Vast reorganization begins.  Sources moved from top-level directories into src/.
@
text
@d22 1
a22 1
static const char RCScomplex[] = "@@(#)$Header: /cvs/brlcad/libbn/complex.c,v 1.8 2004/05/10 15:30:43 erikg Exp $ (BRL)";
d25 1
a25 3
#ifdef HAVE_CONFIG_H
# include "config.h"
#endif
@

