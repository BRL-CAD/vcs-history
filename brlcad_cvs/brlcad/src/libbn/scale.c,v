head	14.14;
access;
symbols
	rel-7-10-4:14.14
	STABLE:14.14.0.2
	stable-branch:14.6
	rel-7-10-2:14.14
	rel-7-10-0:14.14
	rel-7-8-4:14.10
	rel-7-8-2:14.9
	rel-7-8-0:14.9
	trimnurbs-branch:14.9.0.2
	help:14.9
	temp_tag:14.8
	bobWinPort-20051223-freeze:14.7
	postmerge-20051223-bobWinPort:14.8
	premerge-20051223-bobWinPort:14.8
	rel-7-6-6:14.8
	rel-7-6-4:14.8
	rel-7-6-2:14.7
	rel-7-6-branch:14.7.0.4
	rel-7-6-0:14.7
	rel-7-4-2:14.6
	rel-7-4-branch:14.6.0.2
	bobWinPort:14.7.0.2
	rel-7-4-0:14.6
	rel-7-2-6:14.6
	rel-7-2-4:14.6
	rel-7-2-2:14.6
	rel-7-2-0:14.6
	rel-7-0-4:14.5
	rel-7-0-2:14.5
	rel-7-0-1:14.5
	opensource-post:14.5
	opensource-pre:1.2
	rel-7-0-branch:1.2.0.2
	rel-7-0:1.2;
locks; strict;
comment	@ * @;


14.14
date	2007.01.27.01.41.36;	author brlcad;	state Exp;
branches;
next	14.13;

14.13
date	2007.01.23.01.13.33;	author brlcad;	state Exp;
branches;
next	14.12;

14.12
date	2007.01.21.04.45.41;	author brlcad;	state Exp;
branches;
next	14.11;

14.11
date	2007.01.20.14.36.51;	author brlcad;	state Exp;
branches;
next	14.10;

14.10
date	2006.09.05.04.19.55;	author lbutler;	state Exp;
branches;
next	14.9;

14.9
date	2006.01.18.06.46.16;	author brlcad;	state Exp;
branches;
next	14.8;

14.8
date	2005.10.23.04.44.31;	author brlcad;	state Exp;
branches;
next	14.7;

14.7
date	2005.08.12.22.28.35;	author lbutler;	state Exp;
branches
	14.7.4.1;
next	14.6;

14.6
date	2005.01.30.20.30.44;	author brlcad;	state Exp;
branches;
next	14.5;

14.5
date	2004.12.21.07.18.57;	author morrison;	state Exp;
branches;
next	14.4;

14.4
date	2004.12.21.06.18.43;	author morrison;	state Exp;
branches;
next	14.3;

14.3
date	2004.12.21.05.45.20;	author morrison;	state Exp;
branches;
next	14.2;

14.2
date	2004.12.21.01.52.15;	author morrison;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.13;	author morrison;	state Exp;
branches;
next	1.2;

1.2
date	2004.08.02.23.01.48;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.20.15.19.29;	author morrison;	state Exp;
branches;
next	;

14.7.4.1
date	2005.11.13.13.46.15;	author brlcad;	state Exp;
branches;
next	;


desc
@@


14.14
log
@ws. lots and lots of ws.  see sh/ws.sh for details (cases 'abcdeg').
@
text
@/*                         S C A L E . C
 * BRL-CAD
 *
 * Copyright (c) 2004-2007 United States Government as represented by
 * the U.S. Army Research Laboratory.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * version 2.1 as published by the Free Software Foundation.
 *
 * This library is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this file; see the file named COPYING for more
 * information.
 */
/** @@addtogroup plot */
/** @@{ */
/** @@file scale.c
 *
 * @@brief scale geometry points.
 *
 * @@author
 *	Michael John Muuss
 *
 * @@par Source
 *	The U. S. Army Research Laboratory
 * @@n	Aberdeen Proving Ground, Maryland  21005-5068  USA
 *
 *	@@note
 *	This file is a candidate for deletion.
 *	Nothing else in BRL-CAD uses this.
 */


#ifndef lint
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libbn/scale.c,v 14.13 2007/01/23 01:13:33 brlcad Exp $ (ARL)";
#endif

#include "common.h"


#include <stdio.h>
#include <math.h>
#include "machine.h"
#include "vmath.h"
#include "plot3.h"

/**
 * @@brief
 *	This routine is intended to take an array of
 * data points as input (either integer, floating, or
 * double), and scale it to fit in a space of LENGTH units.
 *
 * An output array is returned
 * which contains the scaled information stored in 16-bit integers.  The input
 * and output arrays may overlap, as the input will never
 * occupy more space than the output.  Also output are
 * the minimum value encountered (MIN), and a delta
 * factor showing the increase in value each XXXX.
 * This DX factor is rounded to 1,2,4,5,8,or 10 to
 * produce nicer looking axes.
 *
 *
 *	@@param[in] idata	This pointer contains the address
 *				of the input array to be scaled.
 *				Actual type of array is determined
 *				by MODE parameter.
 *
 *	@@param[in] elements	Number of elements in IDATA to be used.
 *
 *	@@param[in] mode		Specifies type of data that IDATA points
 *				to;  should be one of:
 *					'd' - double precision
 *					'f' - float (single precision)
 *					'i' - integer
 *
 *	@@param[in] length		Contains the length (in 1/1000ths of an
 *				inch) of the region in which the data is
 *				to be scaled into.  Note that the actual
 *				amount of space needed may be this value
 *				rounded up to the next inch.
 *
 *	@@param[out] odata	This pointer contains the address of the
 *				output array, which will always be of
 *				integer type.
 *
 *	@@param[out] min		This pointer contains the address of the
 *				location for minimum point found to be
 *				placed in.
 *
 *	@@param dx		This pointer addresses the delta value
 *				of the data which corresponds to the width
 *				of EACH tick.
 *				This implies that:
 *				 -#	This is exactly the number to divide
 *					raw data by to scale it to this scale
 *					(ex:  2 graphs with one scale factor)
 *				 -#	When this value is fed to the AXIS
 *					routine, it must be multiplied
 *					by 1000.0 first (to specify increment
 *					between one INCH ticks).
 *
 * The fact that this routine returns variables of type DOUBLE has
 * important implications for FORTRAN users.  These variables must
 * be declared of type DOUBLE PRECISION to reserve enough space.
 */
void
tp_scale(int *idata,
	 int elements,
	 register int mode,
	 int length,
	 int *odata,
	 double *min,
	 double *dx)
{
	double xmax, xmin, x, workdx;
	register int i;			/* Index variable */
	static double log_10;		/* Saved value for log base-2(10) */
	float *ifloatp;			/* Used to convert pointer-to-int to float */
	double *idoublep;		/* Used to convert pointer-to-int to double */
	double fractional;		/* Fractional part of DX */
	int integral;			/* Integral part of DX */

	/* Prepare to use a pointer to an array of variable type */
	ifloatp = (float *)idata;
	idoublep = (double *)idata;
	/* Find the maximum and minimum data values */
	xmax = xmin = 0.0;
	for( i=0; i<elements; i++ )  {
		x = (mode=='f')
			? ifloatp[i]
			: ( (mode=='d')
				? idoublep[i]
				: idata[i]
			);
		if( x > xmax )
			xmax = x;
		if( x < xmin )
			xmin = x;
	}

	/* Split initial DX into integral and fractional exponents of 10 */
	if( log_10 <= 0.0 )
		log_10 = log(10.0);

	fractional = log( (xmax-xmin)/length ) / log_10;	/* LOG10(DX) */
	integral = fractional;			/* truncate! */
	fractional -= integral;			/* leave only fract */

	if( fractional < 0.0 )  {
		fractional += 1.0;		/* ?? */
		integral -= 1;
	}

	fractional = pow( 10.0, fractional );
	i = fractional - 0.01;
	switch( i )  {

	case 1:
		fractional = 2.0;
		break;

	case 2:
	case 3:
		fractional = 4.0;
		break;

	case 4:
		fractional = 5.0;
		break;

	case 5:
	case 6:
	case 7:
		fractional = 8.0;
		break;

	case 8:
	case 9:
		fractional = 10.0;

	}

	/* Compute DX factor, combining power of ten & adjusted co-efficient */
	workdx = pow( 10.0, (double)integral ) * fractional;

	/* Apply the MIN and DX values to the users input data */
	for( i=0; i<elements; i++ )  {
		if( mode == 'f' )
			odata[i] = (ifloatp[i] - xmin) / workdx;
		else
			if( mode == 'd' )
				odata[i] = (idoublep[i] - xmin) / workdx;
			else
				odata[i] = (idata[i] - xmin) / workdx;
	}

	/* Send MIN and DX back to the user */
	*min = xmin;
	*dx = workdx;
}


/*
 *	FORTRAN Interface
 */
void
PL_FORTRAN(fscale, FSCALE)( idata, elements, mode, length, odata, min, dx )
int	idata[];
int	*elements;
char	*mode;
int	*length;
int	odata[];
double	*min;
double	*dx;
{
	tp_scale( idata, *elements, *mode, *length, odata, min, dx );
}

/** @@} */
/*
 * Local Variables:
 * mode: C
 * tab-width: 8
 * c-basic-offset: 4
 * indent-tabs-mode: t
 * End:
 * ex: shiftwidth=4 tabstop=8
 */
@


14.13
log
@Sweeping license updates.  Documentation is fully relicensed to the BSD Documentation License (a minor variant of the FreeBSD Documentation License and BSD License).  All GPL code (mostly application code) is converted to the LGPL and now also specifically declares version 2.1, revoking the blank check to the FSF.  The intent of these sweeping changes are to simplify the licensing terms and increase overall flexibility of use, both externally (to users for their purposes) and internally (to allow application code to be migrated to libraries without creating GPL libraries).  As a collective work, BRL-CAD is now LGPL.
@
text
@d34 1
a34 1
 *	This file is a candidate for deletion.  
d40 1
a40 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libbn/scale.c,v 14.12 2007/01/21 04:45:41 brlcad Exp $ (ARL)";
a45 1

d116 1
a116 1
	 int *odata,	
a207 1

@


14.12
log
@ugh, what tedium.  put some effort towards cleaning up the doxygen labels and making the headers more consistent.  also exclusively using @@ for doxygen instead of \ to try to keep things more consistent.
@
text
@d9 1
a9 2
 * as published by the Free Software Foundation; either version 2 of
 * the License, or (at your option) any later version.
d14 1
a14 1
 * Library General Public License for more details.
d40 1
a40 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libbn/scale.c,v 14.11 2007/01/20 14:36:51 brlcad Exp $ (ARL)";
@


14.11
log
@update copyright to 2007
@
text
@d21 2
a22 3

/** \addtogroup plot */
/*@@{*/
d24 1
d27 1
a27 2
 *
 *  @@author
d30 1
a30 1
 *  @@par Source
d32 1
a32 1
 *@@n	Aberdeen Proving Ground, Maryland  21005-5068  USA
a36 1
 *
d41 1
a41 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libbn/scale.c,v 14.10 2006/09/05 04:19:55 lbutler Exp $ (ARL)";
d227 1
a227 1
/*@@}*/
@


14.10
log
@Doxygen comment formatting
@
text
@d4 1
a4 1
 * Copyright (c) 2004-2006 United States Government as represented by
d43 1
a43 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libbn/scale.c,v 14.9 2006/01/18 06:46:16 brlcad Exp $ (ARL)";
@


14.9
log
@update copyright to 2006
@
text
@d22 1
a22 1
/** \addtogroup libbn */
d25 33
d61 1
a70 1
 * where
d72 1
a72 1
 *	int *idata	INPUT	This pointer contains the address
d77 1
a77 1
 *	int elements	INPUT	Number of elements in IDATA to be used.
d79 1
a79 1
 *	int mode	INPUT	Specifies type of data that IDATA points
d85 1
a85 1
 *	int length	INPUT	Contains the length (in 1/1000ths of an
d91 1
a91 1
 *	int *odata	OUTPUT	This pointer contains the address of the
d95 1
a95 1
 *	double *min	OUTPUT	This pointer contains the address of the
d99 1
a99 1
 *	double *dx	OUTPUT	This pointer addresses the delta value
d103 1
a103 1
 *				  1)	This is exactly the number to divide
d106 1
a106 1
 *				  2)	When this value is fed to the AXIS
a113 8
 *
 *  Author -
 *	Michael John Muuss
 *
 *  Source -
 *	The U. S. Army Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5068  USA
 *
a114 16
/*@@}*/

#ifndef lint
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libbn/scale.c,v 14.8 2005/10/23 04:44:31 brlcad Exp $ (ARL)";
#endif

#include "common.h"



#include <stdio.h>
#include <math.h>
#include "machine.h"
#include "vmath.h"
#include "plot3.h"

d116 7
a122 1
tp_scale(int *idata, int elements, register int mode, int length, int *odata, double *min, double *dx)
d229 1
@


14.8
log
@trailing ws
@
text
@d4 1
a4 1
 * Copyright (C) 2004-2005 United States Government as represented by
d93 1
a93 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libbn/scale.c,v 14.7 2005/08/12 22:28:35 lbutler Exp $ (ARL)";
@


14.7
log
@Doxygen changes
@
text
@d74 1
a74 1
 *					routine, it must be multiplied 
d84 1
a84 1
 *  
d88 1
a88 1
 *  
d93 1
a93 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libbn/scale.c,v 14.6 2005/01/30 20:30:44 brlcad Exp $ (ARL)";
@


14.7.4.1
log
@merge changes from HEAD aka rel-7-6-4 to the rel-7-6-branch just in case someone peeks a gander or tries to continue/build the branch
@
text
@d74 1
a74 1
 *					routine, it must be multiplied
d84 1
a84 1
 *
d88 1
a88 1
 *
d93 1
a93 1
static const char RCSid[] = "@@(#)$Header$ (ARL)";
@


14.6
log
@update copyright to 2005
@
text
@d21 3
a24 2
 *
 *
d43 1
d45 1
d51 1
d57 1
d61 1
d65 1
d90 2
d93 1
a93 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libbn/scale.c,v 14.5 2004/12/21 07:18:57 morrison Exp $ (ARL)";
@


14.5
log
@the significantly modified pd files are incorporated as new works and assigned copyright, so remove the old statement.
@
text
@d4 2
a5 2
 * Copyright (c) 2004 United States Government as represented by the
 * U.S. Army Research Laboratory.
d84 1
a84 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/libbn/scale.c,v 14.4 2004/12/21 06:18:43 morrison Exp $ (ARL)";
@


14.4
log
@they should have received a copy of the LGPL with LGPL'd files
@
text
@a81 2
 *  Distribution Status -
 *	Public Domain, Distribution Unlimited.
d84 1
a84 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/libbn/scale.c,v 14.3 2004/12/21 05:45:20 morrison Exp $ (ARL)";
@


14.3
log
@s/GNU Library General/GNU Lesser General/g
@
text
@d17 2
a18 2
 * You should have received a copy of the GNU General Public License
 * along with this file; see the file named COPYING for more
d86 1
a86 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/libbn/scale.c,v 14.2 2004/12/21 01:52:15 morrison Exp $ (ARL)";
@


14.2
log
@assign copyright and LGPL
@
text
@d8 1
a8 1
 * modify it under the terms of the GNU Library General Public License
d86 1
a86 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/libbn/scale.c,v 14.1 2004/11/16 19:42:13 morrison Exp $ (ARL)";
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d1 21
a21 2
/*
 *			T P _ S C A L E
d86 1
a86 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/libbn/scale.c,v 1.2 2004/08/02 23:01:48 morrison Exp $ (ARL)";
@


1.2
log
@replace the wrapped config.h block with common.h
@
text
@d67 1
a67 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/libbn/scale.c,v 1.1 2004/05/20 15:19:29 morrison Exp $ (ARL)";
d187 10
@


1.1
log
@Vast reorganization begins.  Sources moved from top-level directories into src/.
@
text
@d67 1
a67 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/libbn/scale.c,v 11.6 2004/05/10 15:30:43 erikg Exp $ (ARL)";
d70 1
a70 3
#ifdef HAVE_CONFIG_H
# include "config.h"
#endif
@

