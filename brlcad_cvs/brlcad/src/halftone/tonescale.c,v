head	14.7;
access;
symbols
	rel-7-10-4:14.7
	STABLE:14.7.0.2
	stable-branch:14.3
	rel-7-10-2:14.7
	rel-7-10-0:14.7
	rel-7-8-4:14.5
	rel-7-8-2:14.5
	rel-7-8-0:14.5
	trimnurbs-branch:14.5.0.2
	help:14.5
	temp_tag:14.4
	bobWinPort-20051223-freeze:14.3
	postmerge-20051223-bobWinPort:14.4
	premerge-20051223-bobWinPort:14.4
	rel-7-6-6:14.4
	rel-7-6-4:14.4
	rel-7-6-2:14.3
	rel-7-6-branch:14.3.0.6
	rel-7-6-0:14.3
	rel-7-4-2:14.3
	rel-7-4-branch:14.3.0.4
	bobWinPort:14.3.0.2
	rel-7-4-0:14.3
	rel-7-2-6:14.3
	rel-7-2-4:14.3
	rel-7-2-2:14.3
	rel-7-2-0:14.3
	rel-7-0-4:14.2
	rel-7-0-2:14.2
	rel-7-0-1:14.2
	opensource-post:14.2
	opensource-pre:1.4
	rel-7-0-branch:1.4.0.2
	rel-7-0:1.4;
locks; strict;
comment	@ * @;


14.7
date	2007.01.23.01.13.32;	author brlcad;	state Exp;
branches;
next	14.6;

14.6
date	2007.01.20.14.36.50;	author brlcad;	state Exp;
branches;
next	14.5;

14.5
date	2006.01.18.06.46.15;	author brlcad;	state Exp;
branches;
next	14.4;

14.4
date	2005.10.23.04.44.30;	author brlcad;	state Exp;
branches;
next	14.3;

14.3
date	2005.01.30.20.30.38;	author brlcad;	state Exp;
branches
	14.3.6.1;
next	14.2;

14.2
date	2004.12.20.20.33.01;	author morrison;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.13;	author morrison;	state Exp;
branches;
next	1.4;

1.4
date	2004.09.08.20.42.25;	author kermit;	state Exp;
branches;
next	1.3;

1.3
date	2004.08.02.23.01.47;	author morrison;	state Exp;
branches;
next	1.2;

1.2
date	2004.06.08.22.04.15;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.20.15.19.11;	author morrison;	state Exp;
branches;
next	;

14.3.6.1
date	2005.11.13.13.46.14;	author brlcad;	state Exp;
branches;
next	;


desc
@@


14.7
log
@Sweeping license updates.  Documentation is fully relicensed to the BSD Documentation License (a minor variant of the FreeBSD Documentation License and BSD License).  All GPL code (mostly application code) is converted to the LGPL and now also specifically declares version 2.1, revoking the blank check to the FSF.  The intent of these sweeping changes are to simplify the licensing terms and increase overall flexibility of use, both externally (to users for their purposes) and internally (to allow application code to be migrated to libraries without creating GPL libraries).  As a collective work, BRL-CAD is now LGPL.
@
text
@/*                     T O N E S C A L E . C
 * BRL-CAD
 *
 * Copyright (c) 2004-2007 United States Government as represented by
 * the U.S. Army Research Laboratory.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * version 2.1 as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this file; see the file named COPYING for more
 * information.
 */
/** @@file tonescale.c
 *
 * Given a raw pixel value, return a scaled value.
 *
 * This is normally used to map the output devices characteristics to
 * the input intinsites.  There can be a diffrent map for each color.
 *
 * Entry:
 *	map	pointer to a 256 byte map
 *	Slope	Slope of a line
 *	B	offset of line.
 *	eqptr	Null or the pointer to a equation for generating a curve
 *
 * Exit:
 *	map	is filled using eqptr
 *
 * Uses:
 *	EqCubics	x,A,B,C,D of a set of cubics for a curve
 *
 * Calls:
 *	eq_line	given x return y; requires EqLineSlope and EqLineB
 *	eqptr	if not null.
 *
 * Method:
 *	straight-forward.
 *
 * Author:
 *	Christopher T. Johnson	- 90/03/22
 *
 * Change History:
 *	ctj 90/04/04 - change to use a standard cubic line format for the
 *	tone scale.  If eqptr is null then Set EqCubic to evaluate to a line.
 */

#ifndef lint
static const char RCSid[] = "$Header: /cvsroot/brlcad/brlcad/src/halftone/tonescale.c,v 14.6 2007/01/20 14:36:50 brlcad Exp $";
#endif

#include "common.h"

#include <stdlib.h>
#include <stdio.h>

#include "machine.h"

#define	DLEVEL	1
extern int Debug;
typedef struct Cubic {
	double	x,A,B,C,D;
} C;
static struct Cubic	*EqCubics=0;
int eq_cubic(int x);

void
tonescale(unsigned char *map, float Slope, float B, int (*eqptr) (/* ??? */))
{
	int i,result;

/*
 * 	Is there a function we should be using?
 * N.B.	This code has not been tested with a funtion being passed in.
 */
	if (!eqptr ) eqptr=eq_cubic;

/*
 *	If there is no defined Cubics then set a straight line.
 */
	if (!EqCubics) {
/*
 *		We need an extra cubic to make eq_cubic processing
 *		easier.
 */
		EqCubics = (struct Cubic *)malloc(2*sizeof(struct Cubic));
		EqCubics[0].x = 0.0;
		EqCubics[0].A = B;
		EqCubics[0].B = Slope;
		EqCubics[1].x = 256.0;
		EqCubics[0].C = EqCubics[0].D =	EqCubics[1].A =
		    EqCubics[1].B = EqCubics[1].C = EqCubics[1].D = 0.0;
	}

	for (i=0;i<256;i++) {
		result=eqptr(i);
		if (result<0) {
			if (Debug >= DLEVEL) {
				fprintf(stderr,"tonescale: y=%d, x=%d\n",
				    result, i);
			}
			result=0;
		} else if (result > 255) {
			if (Debug >= DLEVEL) {
				fprintf(stderr,"tonescale: y=%d, x=%d\n",
				    result, i);
			}
			result=255;
		}

		map[i] = result;
	}
}

/* eq_cubic	default tone scale alorithm
 *
 * impliment
 *	y = A+B*(X-x)+C*(X-x)^2+D*(X-x)^3
 * as a default tonescale algorithm;
 *
 * Entry:
 *	x	x value for equation.
 *
 * Exit:
 *	returns	y in the range 0-255  reqires clipping.
 *
 * Calls:
 *	none.
 *
 * Uses:
 *	EqCubic		list of Cubic equations.
 *
 * Method:
 *	straight-forward.
 *
 * Author:
 *	Christopher T. Johnson - 90/03/22
 */
int
eq_cubic(int x)
{
	int y;
	struct Cubic *p = EqCubics;

	if (!p) {
		fprintf(stderr,"eq_cubic called with no cubics!\n");
		return(x);
	}
	while (x >= (p+1)->x) p++;

	y = ((p->D * (x - p->x) + p->C) * (x - p->x) + p->B)
	    * (x - p->x) + p->A;

	if (y<0) y = 0;
	if (y>255) y = 255;
	return(y);
}

/* cubic_init	initialize a cubic list given a set of points.
 *
 * Entry:
 *	n	number of points
 *	x	list of x points.
 *	y	list of y points.
 *
 * Exit:
 *	EqCubic	is set to a list of cubics
 *
 * Calls:
 *	none.
 *
 * Uses:
 *	none.
 *
 * Method:
 *	Cubic Spline Interpolation
 *	Taken from page 107 of:
 *		Numerical Analysis 2nd Edition by
 *		Richard L. Burden, J. Douglas Faires and
 *		    Albert C. Reynalds.
 *
 * I.e.  I don't have a clue to what is going on...... :-(
 *
 */
void
cubic_init(int n, int *x, int *y)
{
	int i;
	double *h,*alpha,*mi,*z,*l;

	h = (double *) malloc(n*sizeof(double));
	alpha = (double *) malloc(n*sizeof(double));
	mi = (double *) malloc(n*sizeof(double));
	z = (double *) malloc(n*sizeof(double));
	l = (double *) malloc(n*sizeof(double));

	EqCubics = (struct Cubic *) malloc(n*sizeof(struct Cubic));

	for (i=0; i<n-1; i++) {
		h[i] = x[i+1] - x[i];
		EqCubics[i].x = x[i];
		EqCubics[i].A = y[i];
	}

	EqCubics[i].x = x[i];
	EqCubics[i].A = y[i];

	for (i=1; i<n-1; i++) {
		alpha[i] = 3.0*(y[i+1]*h[i-1] - y[i]*(x[i+1]-x[i-1]) +
		    y[i-1]*h[i]) / (h[i-1]*h[i]);
	}

	z[0] = 0;
	mi[0] = 0;

	for (i=1; i<n-1; i++) {
		l[i] = 2.0*(x[i+1] - x[i-1]) - h[i-1]*mi[i-1];
		mi[i] = h[i]/l[i];
		z[i] = (alpha[i]-h[i-1]*z[i-1]) / l[i];
	}

	l[i] = 1.0;
	z[i] = 0.0;
	EqCubics[i].C = z[i];

	for (i=n-2; i>=0; i--) {
		EqCubics[i].C = z[i] - mi[i]*EqCubics[i+1].C;
		EqCubics[i].B = (y[i+1] - y[i])/h[i] -
		    h[i]*(EqCubics[i+1].C + 2.0*EqCubics[i].C)/3.0;
		EqCubics[i].D = (EqCubics[i+1].C - EqCubics[i].C)/(3.0*h[i]);
	}

	free(h);
	free(alpha);
	free(mi);
	free(z);
	free(l);
	if (Debug>1) {
		for(i=0;i<n;i++) {
			fprintf(stderr,"x=%g, A=%g, B=%g, C=%g, D=%g\n",
			EqCubics[i].x,EqCubics[i].A,EqCubics[i].B,
			EqCubics[i].C,EqCubics[i].D);
		}
	}
}

/*
 * Local Variables:
 * mode: C
 * tab-width: 8
 * c-basic-offset: 4
 * indent-tabs-mode: t
 * End:
 * ex: shiftwidth=4 tabstop=8
 */
@


14.6
log
@update copyright to 2007
@
text
@d8 2
a9 3
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation; either version 2 of the
 * License, or (at your option) any later version.
d14 1
a14 1
 * General Public License for more details.
d16 2
a17 2
 * You should have received a copy of the GNU General Public License
 * along with this file; see the file named COPYING for more
d55 1
a55 1
static const char RCSid[] = "$Header: /cvsroot/brlcad/brlcad/src/halftone/tonescale.c,v 14.5 2006/01/18 06:46:15 brlcad Exp $";
@


14.5
log
@update copyright to 2006
@
text
@d4 1
a4 1
 * Copyright (c) 2004-2006 United States Government as represented by
d56 1
a56 1
static const char RCSid[] = "$Header: /cvsroot/brlcad/brlcad/src/halftone/tonescale.c,v 14.4 2005/10/23 04:44:30 brlcad Exp $";
@


14.4
log
@trailing ws
@
text
@d4 1
a4 1
 * Copyright (C) 2004-2005 United States Government as represented by
d56 1
a56 1
static const char RCSid[] = "$Header: /cvsroot/brlcad/brlcad/src/halftone/tonescale.c,v 14.3 2005/01/30 20:30:38 brlcad Exp $";
@


14.3
log
@update copyright to 2005
@
text
@d35 1
a35 1
 *	map	is filled using eqptr 
d56 1
a56 1
static const char RCSid[] = "$Header: /cvsroot/brlcad/brlcad/src/halftone/tonescale.c,v 14.2 2004/12/20 20:33:01 morrison Exp $";
d157 1
a157 1
	
d190 1
a190 1
 *	
@


14.3.6.1
log
@merge changes from HEAD aka rel-7-6-4 to the rel-7-6-branch just in case someone peeks a gander or tries to continue/build the branch
@
text
@d35 1
a35 1
 *	map	is filled using eqptr
d56 1
a56 1
static const char RCSid[] = "$Header$";
d157 1
a157 1

d190 1
a190 1
 *
@


14.2
log
@acquire copyright and assign GPL license
@
text
@d4 2
a5 2
 * Copyright (c) 2004 United States Government as represented by the
 * U.S. Army Research Laboratory.
d56 1
a56 1
static const char RCSid[] = "$Header: /cvs/brlcad/src/halftone/tonescale.c,v 14.1 2004/11/16 19:42:13 morrison Exp $";
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d1 23
a23 20
#ifndef lint
static const char RCSid[] = "$Header: /cvs/brlcad/src/halftone/tonescale.c,v 1.4 2004/09/08 20:42:25 kermit Exp $";
#endif

#include "common.h"

#include <stdlib.h>
#include <stdio.h>

#include "machine.h"

#define	DLEVEL	1
extern int Debug;
typedef struct Cubic {
	double	x,A,B,C,D;
} C;
static struct Cubic	*EqCubics=0;
int eq_cubic(int x);

/*	tonescale	Given a raw pixel value, return a scaled value
d54 20
@


1.4
log
@Added <stdlib.h> to fix implicit cast (for IA64 architecture).
@
text
@d2 1
a2 1
static const char RCSid[] = "$Header: /cvs/brlcad/src/halftone/tonescale.c,v 1.3 2004/08/02 23:01:47 morrison Exp $";
d230 10
@


1.3
log
@replace the wrapped config.h block with common.h
@
text
@d2 1
a2 1
static const char RCSid[] = "$Header: /cvs/brlcad/src/halftone/tonescale.c,v 1.2 2004/06/08 22:04:15 morrison Exp $";
d7 1
a7 2


@


1.2
log
@obliterate externs.h
@
text
@d2 1
a2 1
static const char RCSid[] = "$Header$";
d5 1
a5 3
#ifdef HAVE_CONFIG_H
# include "config.h"
#endif
@


1.1
log
@Vast reorganization begins.  Sources moved from top-level directories into src/.
@
text
@d2 1
a2 1
static const char RCSid[] = "$Header: /cvs/brlcad/halftone/tonescale.c,v 11.8 2004/05/10 15:30:42 erikg Exp $";
a13 1
#include "externs.h"		/* For alloc */
a52 49
 *
 * $Log: tonescale.c,v $
 * Revision 11.8  2004/05/10 15:30:42  erikg
 * change conf.h to a wrapped config.h
 *
 * Revision 11.7  2004/04/05 07:47:59  morrison
 * merge of ansi-6-0-branch into HEAD
 *
 * Revision 11.6.2.1  2002/09/19 18:00:59  morrison
 * Initial ANSIfication
 *
 * Revision 11.6  2002/08/20 17:07:31  jra
 * Restoration of entire source tree to Pre-Hartley state
 *
 * Revision 11.4  2000/08/24 23:09:00  mike
 *
 * lint
 *
 * Revision 11.3  2000/01/31 16:20:25  jra
 * Eliminated an unused variable
 *
 * Revision 11.2  1996/07/17 17:02:46  jra
 * Minor Mods for IRIX 6.2
 *
 * Revision 11.1  1995/01/04  10:21:56  mike
 * Release_4.4
 *
 * Revision 10.2  94/08/23  17:58:17  gdurf
 * Added include of conf.h, machine.h and externs.h, the last for malloc()
 * 
 * Revision 10.1  1991/10/12  06:53:23  mike
 * Release_4.0
 *
 * Revision 2.2  91/07/19  01:51:34  mike
 * Can't declare something static and extern both
 * 
 * Revision 2.1  90/04/13  01:23:27  cjohnson
 * First Relese.
 * 
 * Revision 1.3  90/04/13  01:13:52  cjohnson
 * Cleanup the comments.
 * 
 * Revision 1.2  90/04/10  03:29:34  cjohnson
 * Bug fixes to allow Tonescale to be used.
 * added debug to print Cubics
 * 
 * Revision 1.1  90/04/09  16:18:47  cjohnson
 * Initial revision
 * 
@

