head	14.9;
access;
symbols
	rel-7-10-4:14.7
	STABLE:14.7.0.2
	stable-branch:14.3
	rel-7-10-2:14.7
	rel-7-10-0:14.7
	rel-7-8-4:14.5
	rel-7-8-2:14.5
	rel-7-8-0:14.5
	trimnurbs-branch:14.5.0.2
	help:14.5
	temp_tag:14.4
	bobWinPort-20051223-freeze:14.3
	postmerge-20051223-bobWinPort:14.4
	premerge-20051223-bobWinPort:14.4
	rel-7-6-6:14.4
	rel-7-6-4:14.4
	rel-7-6-2:14.3
	rel-7-6-branch:14.3.0.6
	rel-7-6-0:14.3
	rel-7-4-2:14.3
	rel-7-4-branch:14.3.0.4
	bobWinPort:14.3.0.2
	rel-7-4-0:14.3
	rel-7-2-6:14.3
	rel-7-2-4:14.3
	rel-7-2-2:14.3
	rel-7-2-0:14.3
	rel-7-0-4:14.2
	rel-7-0-2:14.2
	rel-7-0-1:14.2
	opensource-post:14.2
	opensource-pre:1.4
	rel-7-0-branch:1.4.0.2
	rel-7-0:1.4;
locks; strict;
comment	@ * @;


14.9
date	2007.11.21.20.49.08;	author erikgreenwald;	state Exp;
branches;
next	14.8;

14.8
date	2007.11.21.19.28.06;	author erikgreenwald;	state Exp;
branches;
next	14.7;

14.7
date	2007.01.23.01.13.32;	author brlcad;	state Exp;
branches;
next	14.6;

14.6
date	2007.01.20.14.36.50;	author brlcad;	state Exp;
branches;
next	14.5;

14.5
date	2006.01.18.06.46.15;	author brlcad;	state Exp;
branches;
next	14.4;

14.4
date	2005.10.23.04.44.30;	author brlcad;	state Exp;
branches;
next	14.3;

14.3
date	2005.01.30.20.30.38;	author brlcad;	state Exp;
branches
	14.3.6.1;
next	14.2;

14.2
date	2004.12.20.20.33.01;	author morrison;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.13;	author morrison;	state Exp;
branches;
next	1.4;

1.4
date	2004.09.08.20.42.25;	author kermit;	state Exp;
branches;
next	1.3;

1.3
date	2004.08.02.23.01.47;	author morrison;	state Exp;
branches;
next	1.2;

1.2
date	2004.06.08.22.04.15;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.20.15.19.10;	author morrison;	state Exp;
branches;
next	;

14.3.6.1
date	2005.11.13.13.46.14;	author brlcad;	state Exp;
branches;
next	;


desc
@@


14.9
log
@pass bu_exit a NULL instead of an empty string
@
text
@/*                       S H A R P E N . C
 * BRL-CAD
 *
 * Copyright (c) 2004-2007 United States Government as represented by
 * the U.S. Army Research Laboratory.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * version 2.1 as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this file; see the file named COPYING for more
 * information.
 */
/** @@file sharpen.c
 *
 * return a sharpened tone mapped buffer.
 *
 * Entry:
 *	buf	- buffer to place bytes.
 *	size	- size of element
 *	num	- number of elements to read.
 *	file	- file to read from.
 *	Map	- tone scale mapping.
 *
 * Exit:
 *	returns 0 on EOF
 *		number of byes read otherwise.
 *
 * Uses:
 *	Debug	- Current debug level.
 *	Beta	- sharpening value.
 *
 * Calls:
 *	None.
 *
 * Method:
 *	if no sharpening just read a line tone scale and return.
 *	if first time called get space for processing and do setup.
 *	if first line then
 *		only use cur and next lines
 *	else if last line then
 *		only use cur and last lines
 *	else
 *		use last cur and next lines
 *	endif
 *
 * Author:
 *	Christopher T. Johnson
 */

#ifndef lint
static const char RCSid[] = "$Header: /cvsroot/brlcad/brlcad/src/halftone/sharpen.c,v 14.8 2007/11/21 19:28:06 erikgreenwald Exp $";
#endif
#include "common.h"

#include <stdlib.h>
#include <stdio.h>

#include "machine.h"

extern int Debug;
extern double Beta;

int
sharpen(unsigned char *buf, int size, int num, FILE *file, unsigned char *Map)
{
	static unsigned char *last,*cur=0,*next;
	static int linelen;
	int result;
	register int newvalue;
	register  int i,value;

/*
 *	if no sharpening going on then just read from the file and exit.
 */
	if (Beta == 0.0) {
		result = fread(buf, size, num, file);
		if (!result) return(result);
		for (i=0; i<size*num; i++) {
			buf[i] = Map[buf[i]];
		}
		return(result);
	}

/*
 *	if we are sharpening we depend on the pixel size being one char.
 */
	if (size != 1) {
		fprintf(stderr, "sharpen: size != 1.\n");
		bu_exit(2, NULL);
	}

/*
 *	if this is the first time we have been called then get some
 *	space to load pixels into and read first and second line of
 *	the file.
 */
	if (!cur) {
		linelen=num;
		last = 0;
		cur  = (unsigned char *)malloc(linelen);
		next = (unsigned char *)malloc(linelen);
		result = fread(cur, 1, linelen, file);
		for (i=0; i<linelen;i++) cur[i] = Map[cur[i]];
		if (!result) return(result);	/* nothing there! */
		result = fread(next, 1, linelen, file);
		if (!result) {
			free(next);
			next = 0;
		} else {
			for (i=0; i<linelen;i++) cur[i] = Map[cur[i]];
		}
	} else {
		unsigned char *tmp;

		if (linelen != num) {
			fprintf(stderr,"sharpen: buffer size changed!\n");
			bu_exit(2, NULL);
		}
/*
 *		rotate the buffers.
 */
		tmp=last;
		last=cur;
		cur=next;
		next=tmp;
		result=fread(next, 1, linelen, file);
/*
 *		if at EOF then free up a buffer and set next to NULL
 *		to flag EOF for the next time we are called.
 */
		if (!result) {
			free(next);
			next = 0;
		} else {
			for (i=0; i<linelen;i++) cur[i] = Map[cur[i]];
		}
	}
/*
 *	if cur is NULL then we are at EOF.  Memory leak here as
 *	we don't free last.
 */
	if (!cur) return(0);

/*
 * Value is the following Laplacian filter kernel:
 *		0.25
 *	0.25	-1.0	0.25
 *		0.25
 *
 * Thus value is zero in constant value areas and none zero on
 * edges.
 *
 * Page 335 of Digital Halftoning defines
 *	J     [n] = J[n] - Beta*Laplacian_filter[n]*J[n]
 *	 sharp
 *
 * J, J     , Laplacian_filter[n] are all in the range 0.0 to 1.0
 *     sharp
 *
 * The folowing is done in mostly interger mode, there is only one
 * floating point multiply done.
 */

/*
 *	if first line
 */
	if (!last) {
		i=0;
		value=next[i] + cur[i+1] - cur[i]*2;
		newvalue = cur[i] - Beta*value*((int)cur[i])/(255*2);
		buf[i] = (newvalue < 0) ? 0 : (newvalue > 255) ?
		    255: newvalue;
		for (; i < linelen-1; i++) {
			value = next[i] + cur[i-1] + cur[i+1] - cur[i]*3;
			newvalue = cur[i] - Beta*value*((int)cur[i])/(255*3);
			buf[i] = (newvalue < 0) ? 0 : (newvalue > 255) ?
			    255: newvalue;
		}
		value=next[i] + cur[i-1] - cur[i]*2;
		newvalue = cur[i] - Beta*value*((int)cur[i])/(255*2);
		buf[i] = (newvalue < 0) ? 0 : (newvalue > 255) ?
		    255: newvalue;

/*
 *		first time through so we will need this buffer space
 *		the next time through.
 */
		last  = (unsigned char *)malloc(linelen);
/*
 *	if last line
 */
	} else if (!next) {
		i=0;
		value=last[i] + cur[i+1] - cur[i]*2;
		newvalue = cur[i] - Beta*value*((int)cur[i])/(255*2);
		buf[i] = (newvalue < 0) ? 0 : (newvalue > 255) ?
		    255: newvalue;
		for (; i < linelen-1; i++) {
			value = last[i] + cur[i-1] + cur[i+1] - cur[i]*3;
			newvalue = cur[i] - Beta*value*((int)cur[i])/(255*3);
			buf[i] = (newvalue < 0) ? 0 : (newvalue > 255) ?
			    255: newvalue;
		}
		value=last[i] + cur[i-1] - cur[i]*2;
		newvalue = cur[i] - Beta*value*((int)cur[i])/(255*2);
		buf[i] = (newvalue < 0) ? 0 : (newvalue > 255) ?
		    255: newvalue;
/*
 *	all other lines.
 */
	} else {
		i=0;
		value=last[i] + next[i] + cur[i+1] - cur[i]*3;
		newvalue = cur[i] - Beta*value*((int)cur[i])/(255*3);
		buf[i] = (newvalue < 0) ? 0 : (newvalue > 255) ?
		    255: newvalue;
		for (; i < linelen-1; i++) {
			value = last[i] + next[i] + cur[i-1] + cur[i+1]
			     - cur[i]*4;
			newvalue = cur[i] - Beta*value*((int)cur[i])/(255*4);
			buf[i] = (newvalue < 0) ? 0 : (newvalue > 255) ?
			    255: newvalue;
		}
		value=last[i] + next[i] + cur[i-1] - cur[i]*3;
		newvalue = cur[i] - Beta*value*((int)cur[i])/(255*3);
		buf[i] = (newvalue < 0) ? 0 : (newvalue > 255) ?
		    255: newvalue;
	}
	return(linelen);
}

/*
 * Local Variables:
 * mode: C
 * tab-width: 8
 * c-basic-offset: 4
 * indent-tabs-mode: t
 * End:
 * ex: shiftwidth=4 tabstop=8
 */
@


14.8
log
@exit->bu_exit where applicable
@
text
@d58 1
a58 1
static const char RCSid[] = "$Header: /cvsroot/brlcad/brlcad/src/halftone/sharpen.c,v 14.7 2007/01/23 01:13:32 brlcad Exp $";
d96 1
a96 1
		bu_exit(2, "");
d124 1
a124 1
			bu_exit(2, "");
@


14.7
log
@Sweeping license updates.  Documentation is fully relicensed to the BSD Documentation License (a minor variant of the FreeBSD Documentation License and BSD License).  All GPL code (mostly application code) is converted to the LGPL and now also specifically declares version 2.1, revoking the blank check to the FSF.  The intent of these sweeping changes are to simplify the licensing terms and increase overall flexibility of use, both externally (to users for their purposes) and internally (to allow application code to be migrated to libraries without creating GPL libraries).  As a collective work, BRL-CAD is now LGPL.
@
text
@d58 1
a58 1
static const char RCSid[] = "$Header: /cvsroot/brlcad/brlcad/src/halftone/sharpen.c,v 14.6 2007/01/20 14:36:50 brlcad Exp $";
d96 1
a96 1
		exit(2);
d124 1
a124 1
			exit(2);
@


14.6
log
@update copyright to 2007
@
text
@d8 2
a9 3
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation; either version 2 of the
 * License, or (at your option) any later version.
d14 1
a14 1
 * General Public License for more details.
d16 2
a17 2
 * You should have received a copy of the GNU General Public License
 * along with this file; see the file named COPYING for more
d58 1
a58 1
static const char RCSid[] = "$Header: /cvsroot/brlcad/brlcad/src/halftone/sharpen.c,v 14.5 2006/01/18 06:46:15 brlcad Exp $";
@


14.5
log
@update copyright to 2006
@
text
@d4 1
a4 1
 * Copyright (c) 2004-2006 United States Government as represented by
d59 1
a59 1
static const char RCSid[] = "$Header: /cvsroot/brlcad/brlcad/src/halftone/sharpen.c,v 14.4 2005/10/23 04:44:30 brlcad Exp $";
@


14.4
log
@trailing ws
@
text
@d4 1
a4 1
 * Copyright (C) 2004-2005 United States Government as represented by
d59 1
a59 1
static const char RCSid[] = "$Header: /cvsroot/brlcad/brlcad/src/halftone/sharpen.c,v 14.3 2005/01/30 20:30:38 brlcad Exp $";
@


14.3
log
@update copyright to 2005
@
text
@d59 1
a59 1
static const char RCSid[] = "$Header: /cvsroot/brlcad/brlcad/src/halftone/sharpen.c,v 14.2 2004/12/20 20:33:01 morrison Exp $";
d179 1
a179 1
		buf[i] = (newvalue < 0) ? 0 : (newvalue > 255) ? 
d184 1
a184 1
			buf[i] = (newvalue < 0) ? 0 : (newvalue > 255) ? 
d189 1
a189 1
		buf[i] = (newvalue < 0) ? 0 : (newvalue > 255) ? 
d204 1
a204 1
		buf[i] = (newvalue < 0) ? 0 : (newvalue > 255) ? 
d209 1
a209 1
			buf[i] = (newvalue < 0) ? 0 : (newvalue > 255) ? 
d214 1
a214 1
		buf[i] = (newvalue < 0) ? 0 : (newvalue > 255) ? 
d223 1
a223 1
		buf[i] = (newvalue < 0) ? 0 : (newvalue > 255) ? 
d229 1
a229 1
			buf[i] = (newvalue < 0) ? 0 : (newvalue > 255) ? 
d234 1
a234 1
		buf[i] = (newvalue < 0) ? 0 : (newvalue > 255) ? 
@


14.3.6.1
log
@merge changes from HEAD aka rel-7-6-4 to the rel-7-6-branch just in case someone peeks a gander or tries to continue/build the branch
@
text
@d59 1
a59 1
static const char RCSid[] = "$Header$";
d179 1
a179 1
		buf[i] = (newvalue < 0) ? 0 : (newvalue > 255) ?
d184 1
a184 1
			buf[i] = (newvalue < 0) ? 0 : (newvalue > 255) ?
d189 1
a189 1
		buf[i] = (newvalue < 0) ? 0 : (newvalue > 255) ?
d204 1
a204 1
		buf[i] = (newvalue < 0) ? 0 : (newvalue > 255) ?
d209 1
a209 1
			buf[i] = (newvalue < 0) ? 0 : (newvalue > 255) ?
d214 1
a214 1
		buf[i] = (newvalue < 0) ? 0 : (newvalue > 255) ?
d223 1
a223 1
		buf[i] = (newvalue < 0) ? 0 : (newvalue > 255) ?
d229 1
a229 1
			buf[i] = (newvalue < 0) ? 0 : (newvalue > 255) ?
d234 1
a234 1
		buf[i] = (newvalue < 0) ? 0 : (newvalue > 255) ?
@


14.2
log
@acquire copyright and assign GPL license
@
text
@d4 2
a5 2
 * Copyright (c) 2004 United States Government as represented by the
 * U.S. Army Research Laboratory.
d59 1
a59 1
static const char RCSid[] = "$Header: /cvs/brlcad/src/halftone/sharpen.c,v 14.1 2004/11/16 19:42:13 morrison Exp $";
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d1 23
a23 13
#ifndef lint
static const char RCSid[] = "$Header: /cvs/brlcad/src/halftone/sharpen.c,v 1.4 2004/09/08 20:42:25 kermit Exp $";
#endif
#include "common.h"

#include <stdlib.h>
#include <stdio.h>

#include "machine.h"

extern int Debug;
extern double Beta;
/*	sharpen	- return a sharpened tone mapped buffer.
d57 14
@


1.4
log
@Added <stdlib.h> to fix implicit cast (for IA64 architecture).
@
text
@d2 1
a2 1
static const char RCSid[] = "$Header: /cvs/brlcad/src/halftone/sharpen.c,v 1.3 2004/08/02 23:01:47 morrison Exp $";
d215 10
@


1.3
log
@replace the wrapped config.h block with common.h
@
text
@d2 1
a2 1
static const char RCSid[] = "$Header: /cvs/brlcad/src/halftone/sharpen.c,v 1.2 2004/06/08 22:04:15 morrison Exp $";
d6 1
a6 2


@


1.2
log
@obliterate externs.h
@
text
@d2 1
a2 4
static const char RCSid[] = "$Header$";
#endif
#ifdef HAVE_CONFIG_H
# include "config.h"
d4 1
@


1.1
log
@Vast reorganization begins.  Sources moved from top-level directories into src/.
@
text
@d2 1
a2 1
static const char RCSid[] = "$Header: /cvs/brlcad/halftone/sharpen.c,v 11.7 2004/05/10 15:30:42 erikg Exp $";
a12 1
#include "externs.h"			/* For malloc */
a48 51
 *
 * $Log: sharpen.c,v $
 * Revision 11.7  2004/05/10 15:30:42  erikg
 * change conf.h to a wrapped config.h
 *
 * Revision 11.6  2004/04/05 07:47:59  morrison
 * merge of ansi-6-0-branch into HEAD
 *
 * Revision 11.5.2.1  2002/09/19 18:00:58  morrison
 * Initial ANSIfication
 *
 * Revision 11.5  2002/08/20 17:07:30  jra
 * Restoration of entire source tree to Pre-Hartley state
 *
 * Revision 11.3  2000/08/24 23:09:00  mike
 *
 * lint
 *
 * Revision 11.2  2000/08/24 23:07:42  mike
 *
 * lint
 *
 * Revision 11.1  1995/01/04  10:21:52  mike
 * Release_4.4
 *
 * Revision 10.2  94/08/23  17:59:09  gdurf
 * Added includes of conf.h, machine.h, externs.h for malloc
 * 
 * Revision 10.1  1991/10/12  06:53:19  mike
 * Release_4.0
 *
 * Revision 2.4  91/08/30  00:26:43  mike
 * Stardent ANSI C
 * 
 * Revision 2.3  91/01/03  23:01:09  cjohnson
 * Added range checking, to limit values to 0..255
 * 
 * Revision 2.2  90/04/13  03:09:03  cjohnson
 * Back off code to reduce number of floating point multiblies.
 * 
 * Revision 2.1  90/04/13  01:23:12  cjohnson
 * First Relese.
 * 
 * Revision 1.2  90/04/13  00:46:54  cjohnson
 * Clean up comments.
 * Fix error on second line.
 * 
 * Revision 1.1  90/04/13  00:31:49  cjohnson
 * Initial revision
 * 
 * 
@

