head	14.13;
access;
symbols
	rel-7-10-4:14.12
	STABLE:14.12.0.2
	stable-branch:14.7
	rel-7-10-2:14.12
	rel-7-10-0:14.12
	rel-7-8-4:14.10
	rel-7-8-2:14.10
	rel-7-8-0:14.10
	trimnurbs-branch:14.10.0.2
	help:14.10
	temp_tag:14.8
	bobWinPort-20051223-freeze:14.7
	postmerge-20051223-bobWinPort:14.8
	premerge-20051223-bobWinPort:14.8
	rel-7-6-6:14.8
	rel-7-6-4:14.8
	rel-7-6-2:14.7
	rel-7-6-branch:14.7.0.6
	rel-7-6-0:14.7
	rel-7-4-2:14.7
	rel-7-4-branch:14.7.0.4
	bobWinPort:14.7.0.2
	rel-7-4-0:14.7
	rel-7-2-6:14.7
	rel-7-2-4:14.7
	rel-7-2-2:14.7
	rel-7-2-0:14.6
	rel-7-0-4:14.5
	rel-7-0-2:14.5
	rel-7-0-1:14.5
	opensource-post:14.5
	opensource-pre:1.2
	rel-7-0-branch:1.2.0.2
	rel-7-0:1.2;
locks; strict;
comment	@ * @;


14.13
date	2007.12.17.02.16.54;	author brlcad;	state Exp;
branches;
next	14.12;

14.12
date	2007.01.23.01.13.36;	author brlcad;	state Exp;
branches;
next	14.11;

14.11
date	2007.01.20.14.36.53;	author brlcad;	state Exp;
branches;
next	14.10;

14.10
date	2006.01.23.00.35.08;	author brlcad;	state Exp;
branches;
next	14.9;

14.9
date	2006.01.18.06.46.16;	author brlcad;	state Exp;
branches;
next	14.8;

14.8
date	2005.10.23.04.44.34;	author brlcad;	state Exp;
branches;
next	14.7;

14.7
date	2005.03.28.06.31.28;	author bob1961;	state Exp;
branches
	14.7.6.1;
next	14.6;

14.6
date	2005.01.30.20.30.54;	author brlcad;	state Exp;
branches;
next	14.5;

14.5
date	2004.12.21.06.38.20;	author morrison;	state Exp;
branches;
next	14.4;

14.4
date	2004.12.21.06.18.44;	author morrison;	state Exp;
branches;
next	14.3;

14.3
date	2004.12.21.05.45.23;	author morrison;	state Exp;
branches;
next	14.2;

14.2
date	2004.12.21.04.03.25;	author morrison;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.15;	author morrison;	state Exp;
branches;
next	1.2;

1.2
date	2004.08.02.23.01.49;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.20.15.19.50;	author morrison;	state Exp;
branches;
next	;

14.7.6.1
date	2005.11.13.13.46.15;	author brlcad;	state Exp;
branches;
next	;


desc
@@


14.13
log
@removal of the FAST declaration throughout.  now using register or letting the compiler sort things out.
@
text
@/*                      S H _ C L O U D . C
 * BRL-CAD
 *
 * Copyright (c) 1985-2007 United States Government as represented by
 * the U.S. Army Research Laboratory.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * version 2.1 as published by the Free Software Foundation.
 *
 * This library is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this file; see the file named COPYING for more
 * information.
 */
/** @@file sh_cloud.c
 *			C L O U D . C
 *
 * An attempt at 2D Geoffrey Gardner style cloud texture map
 *
 *
 *  Author -
 *	Phillip Dykstra
 *
 *  Source -
 *	SECAD/VLD Computing Consortium, Bldg 394
 *	The U. S. Army Ballistic Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005
 *
 */
#ifndef lint
static const char RCScloud[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/liboptical/sh_cloud.c,v 14.12 2007/01/23 01:13:36 brlcad Exp $ (BRL)";
#endif

#include "common.h"

#include <stddef.h>
#include <stdio.h>
#include <math.h>

#include "machine.h"
#include "vmath.h"
#include "raytrace.h"
#include "rtprivate.h"

struct cloud_specific {
	fastf_t	cl_thresh;
	fastf_t	cl_range;
};
#define CL_NULL	((struct cloud_specific *)0)
#define CL_O(m)	bu_offsetof(struct cloud_specific, m)

struct bu_structparse cloud_parse[] = {
	{"%f",	1, "thresh",	CL_O(cl_thresh),	BU_STRUCTPARSE_FUNC_NULL },
	{"%f",	1, "range",	CL_O(cl_range),		BU_STRUCTPARSE_FUNC_NULL },
	{"",	0, (char *)0,	0,			BU_STRUCTPARSE_FUNC_NULL }
};

HIDDEN int	cloud_setup(register struct region *rp, struct bu_vls *matparm, char **dpp, struct mfuncs *mfp, struct rt_i *rtip), cloud_render(struct application *ap, struct partition *pp, struct shadework *swp, char *dp);
HIDDEN void	cloud_print(register struct region *rp, char *dp), cloud_free(char *cp);

struct mfuncs cloud_mfuncs[] = {
	{MF_MAGIC,	"cloud",	0,		MFI_UV,		0,
	cloud_setup,	cloud_render,	cloud_print,	cloud_free },

	{0,		(char *)0,	0,		0,		0,
	0,		0,		0,		0 }
};

#define	NUMSINES	4

/*
 *			C L O U D _ T E X T U R E
 *
 * Returns the texture value for a plane point
 */
double
cloud_texture(register fastf_t x, register fastf_t y, fastf_t Contrast, fastf_t initFx, fastf_t initFy)
{
	register int	i;
	fastf_t	Px, Py, Fx, Fy, C;
	fastf_t	t1, t2, k;

	t1 = t2 = 0;

	/*
	 * Compute initial Phases and Frequencies
	 * Freq "1" goes through 2Pi as x or y go thru 0.0 -> 1.0
	 */
	Fx = bn_twopi * initFx;
	Fy = bn_twopi * initFy;
	Px = bn_halfpi * bn_tab_sin( 0.5 * Fy * y );
	Py = bn_halfpi * bn_tab_sin( 0.5 * Fx * x );
	C = 1.0;	/* ??? */

	for( i = 0; i < NUMSINES; i++ ) {
		/*
		 * Compute one term of each summation.
		 */
		t1 += C * bn_tab_sin( Fx * x + Px ) + Contrast;
		t2 += C * bn_tab_sin( Fy * y + Py ) + Contrast;

		/*
		 * Compute the new phases and frequencies.
		 * N.B. The phases shouldn't vary the same way!
		 */
		Px = bn_halfpi * bn_tab_sin( Fy * y );
		Py = bn_halfpi * bn_tab_sin( Fx * x );
		Fx *= 2.0;
		Fy *= 2.0;
		C  *= 0.707;
	}

	/* Choose a magic k! */
	/* Compute max possible summation */
	k =  NUMSINES * 2 * NUMSINES;

	return( t1 * t2 / k );
}

/*
 *			C L O U D _ S E T U P
 */
HIDDEN int
cloud_setup(register struct region *rp, struct bu_vls *matparm, char **dpp, struct mfuncs *mfp, struct rt_i *rtip)
{
	register struct cloud_specific *cp;

	BU_CK_VLS( matparm );
	BU_GETSTRUCT( cp, cloud_specific );
	*dpp = (char *)cp;

	cp->cl_thresh = 0.35;
	cp->cl_range = 0.3;
	if (bu_struct_parse( matparm, cloud_parse, (char *)cp ) < 0 )
		return(-1);

	return(1);
}

/*
 *			C L O U D _ P R I N T
 */
HIDDEN void
cloud_print(register struct region *rp, char *dp)
{
	bu_struct_print( rp->reg_name, cloud_parse, (char *)dp );
}

/*
 *			C L O U D _ F R E E
 */
HIDDEN void
cloud_free(char *cp)
{
	bu_free( cp, "cloud_specific" );
}

/*
 *			C L O U D _ R E N D E R
 *
 * Return a sky color with translucency control.
 *  Threshold is the intensity below which it is completely translucent.
 *  Range in the range on intensities over which translucence varies
 *   from 0 to 1.
 *  thresh=0.35, range=0.3 for decent clouds.
 */
int
cloud_render(struct application *ap, struct partition *pp, struct shadework *swp, char *dp)
{
	register struct cloud_specific *cp =
		(struct cloud_specific *)dp;
	double intensity;
	fastf_t	TR;

	intensity = cloud_texture( swp->sw_uv.uv_u, swp->sw_uv.uv_v,
		1.0, 2.0, 1.0 );

	/* Intensity is normalized - check bounds */
	if (intensity > 1.0 )
		intensity = 1.0;
	else if (intensity < 0.0 )
		intensity = 0.0;

	/* Compute Translucency Function */
	TR = 1.0 - ( intensity - cp->cl_thresh ) / cp->cl_range;
	if (TR < 0.0)
		TR = 0.0;
	else if (TR > 1.0)
		TR = 1.0;

	swp->sw_color[0] = ((1-TR) * intensity + (TR * .31));	/* Red */
	swp->sw_color[1] = ((1-TR) * intensity + (TR * .31));	/* Green */
	swp->sw_color[2] = ((1-TR) * intensity + (TR * .78));	/* Blue */
	return(1);
}

/*
 * Local Variables:
 * mode: C
 * tab-width: 8
 * c-basic-offset: 4
 * indent-tabs-mode: t
 * End:
 * ex: shiftwidth=4 tabstop=8
 */
@


14.12
log
@Sweeping license updates.  Documentation is fully relicensed to the BSD Documentation License (a minor variant of the FreeBSD Documentation License and BSD License).  All GPL code (mostly application code) is converted to the LGPL and now also specifically declares version 2.1, revoking the blank check to the FSF.  The intent of these sweeping changes are to simplify the licensing terms and increase overall flexibility of use, both externally (to users for their purposes) and internally (to allow application code to be migrated to libraries without creating GPL libraries).  As a collective work, BRL-CAD is now LGPL.
@
text
@d36 1
a36 1
static const char RCScloud[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/liboptical/sh_cloud.c,v 14.11 2007/01/20 14:36:53 brlcad Exp $ (BRL)";
d85 2
a86 2
	FAST fastf_t	Px, Py, Fx, Fy, C;
	FAST fastf_t	t1, t2, k;
d178 1
a178 1
	FAST fastf_t	TR;
@


14.11
log
@update copyright to 2007
@
text
@d9 1
a9 2
 * as published by the Free Software Foundation; either version 2 of
 * the License, or (at your option) any later version.
d14 1
a14 1
 * Library General Public License for more details.
d36 1
a36 1
static const char RCScloud[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/liboptical/sh_cloud.c,v 14.10 2006/01/23 00:35:08 brlcad Exp $ (BRL)";
@


14.10
log
@include stddef.h for bu_offset's usage of offset
@
text
@d4 1
a4 1
 * Copyright (c) 1985-2006 United States Government as represented by
d37 1
a37 1
static const char RCScloud[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/liboptical/sh_cloud.c,v 14.9 2006/01/18 06:46:16 brlcad Exp $ (BRL)";
@


14.9
log
@update copyright to 2006
@
text
@d37 1
a37 1
static const char RCScloud[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/liboptical/sh_cloud.c,v 14.8 2005/10/23 04:44:34 brlcad Exp $ (BRL)";
d42 1
a42 2


d45 1
d56 1
a56 1
#define CL_O(m)	offsetof(struct cloud_specific, m)
@


14.8
log
@trailing ws
@
text
@d4 1
a4 1
 * Copyright (C) 1985-2005 United States Government as represented by
d37 1
a37 1
static const char RCScloud[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/liboptical/sh_cloud.c,v 14.7 2005/03/28 06:31:28 bob1961 Exp $ (BRL)";
@


14.7
log
@Add code to allow liboptical to be a Windows DLL
@
text
@d29 1
a29 1
 *  
d34 1
a34 1
 *  
d37 1
a37 1
static const char RCScloud[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/liboptical/sh_cloud.c,v 14.6 2005/01/30 20:30:54 brlcad Exp $ (BRL)";
@


14.7.6.1
log
@merge changes from HEAD aka rel-7-6-4 to the rel-7-6-branch just in case someone peeks a gander or tries to continue/build the branch
@
text
@d29 1
a29 1
 *
d34 1
a34 1
 *
d37 1
a37 1
static const char RCScloud[] = "@@(#)$Header$ (BRL)";
@


14.6
log
@update copyright to 2005
@
text
@d37 1
a37 1
static const char RCScloud[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/liboptical/sh_cloud.c,v 14.5 2004/12/21 06:38:20 morrison Exp $ (BRL)";
a48 2
#include "shadefuncs.h"
#include "shadework.h"
@


14.5
log
@remove the old copyright notice section
@
text
@d4 1
a4 1
 * Copyright (c) 1985-2004 United States Government as represented by
d37 1
a37 1
static const char RCScloud[] = "@@(#)$Header: /cvs/brlcad/src/liboptical/sh_cloud.c,v 14.4 2004/12/21 06:18:44 morrison Exp $ (BRL)";
@


14.4
log
@they should have received a copy of the LGPL with LGPL'd files
@
text
@a34 3
 *  Copyright Notice -
 *	This software is Copyright (C) 1985-2004 by the United States Army.
 *	All rights reserved.
d37 1
a37 1
static const char RCScloud[] = "@@(#)$Header: /cvs/brlcad/src/liboptical/sh_cloud.c,v 14.3 2004/12/21 05:45:23 morrison Exp $ (BRL)";
@


14.3
log
@s/GNU Library General/GNU Lesser General/g
@
text
@d17 2
a18 2
 * You should have received a copy of the GNU General Public License
 * along with this file; see the file named COPYING for more
d40 1
a40 1
static const char RCScloud[] = "@@(#)$Header: /cvs/brlcad/src/liboptical/sh_cloud.c,v 14.2 2004/12/21 04:03:25 morrison Exp $ (BRL)";
@


14.2
log
@assign copyright and LGPL
@
text
@d8 1
a8 1
 * modify it under the terms of the GNU Library General Public License
d40 1
a40 1
static const char RCScloud[] = "@@(#)$Header: /cvs/brlcad/src/liboptical/sh_cloud.c,v 14.1 2004/11/16 19:42:15 morrison Exp $ (BRL)";
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d1 21
a21 1
/*
d40 1
a40 1
static const char RCScloud[] = "@@(#)$Header: /cvs/brlcad/src/liboptical/sh_cloud.c,v 1.2 2004/08/02 23:01:49 morrison Exp $ (BRL)";
@


1.2
log
@replace the wrapped config.h block with common.h
@
text
@d20 1
a20 1
static const char RCScloud[] = "@@(#)$Header: /cvs/brlcad/src/liboptical/sh_cloud.c,v 1.1 2004/05/20 15:19:50 morrison Exp $ (BRL)";
d187 10
@


1.1
log
@Vast reorganization begins.  Sources moved from top-level directories into src/.
@
text
@d20 1
a20 1
static const char RCScloud[] = "@@(#)$Header: /cvs/brlcad/liboptical/sh_cloud.c,v 11.20 2004/05/10 15:30:45 erikg Exp $ (BRL)";
d23 1
a23 3
#ifdef HAVE_CONFIG_H
# include "config.h"
#endif
@

