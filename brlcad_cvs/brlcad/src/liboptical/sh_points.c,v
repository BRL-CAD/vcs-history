head	14.16;
access;
symbols
	rel-7-10-4:14.15
	STABLE:14.15.0.2
	stable-branch:14.7
	rel-7-10-2:14.15
	rel-7-10-0:14.14
	rel-7-8-4:14.10
	rel-7-8-2:14.10
	rel-7-8-0:14.10
	trimnurbs-branch:14.10.0.2
	help:14.10
	temp_tag:14.8
	bobWinPort-20051223-freeze:14.7
	postmerge-20051223-bobWinPort:14.8
	premerge-20051223-bobWinPort:14.8
	rel-7-6-6:14.8
	rel-7-6-4:14.8
	rel-7-6-2:14.7
	rel-7-6-branch:14.7.0.6
	rel-7-6-0:14.7
	rel-7-4-2:14.7
	rel-7-4-branch:14.7.0.4
	bobWinPort:14.7.0.2
	rel-7-4-0:14.7
	rel-7-2-6:14.7
	rel-7-2-4:14.7
	rel-7-2-2:14.7
	rel-7-2-0:14.6
	rel-7-0-4:14.5
	rel-7-0-2:14.5
	rel-7-0-1:14.5
	opensource-post:14.5
	opensource-pre:1.2
	rel-7-0-branch:1.2.0.2
	rel-7-0:1.2;
locks; strict;
comment	@ * @;


14.16
date	2007.09.15.16.23.11;	author brlcad;	state Exp;
branches;
next	14.15;

14.15
date	2007.07.26.01.13.56;	author brlcad;	state Exp;
branches;
next	14.14;

14.14
date	2007.02.20.08.19.49;	author brlcad;	state Exp;
branches;
next	14.13;

14.13
date	2007.01.27.01.41.38;	author brlcad;	state Exp;
branches;
next	14.12;

14.12
date	2007.01.23.01.13.36;	author brlcad;	state Exp;
branches;
next	14.11;

14.11
date	2007.01.20.14.36.53;	author brlcad;	state Exp;
branches;
next	14.10;

14.10
date	2006.01.23.00.35.08;	author brlcad;	state Exp;
branches;
next	14.9;

14.9
date	2006.01.18.06.46.16;	author brlcad;	state Exp;
branches;
next	14.8;

14.8
date	2005.10.23.04.44.34;	author brlcad;	state Exp;
branches;
next	14.7;

14.7
date	2005.03.28.06.31.37;	author bob1961;	state Exp;
branches
	14.7.6.1;
next	14.6;

14.6
date	2005.01.30.20.30.55;	author brlcad;	state Exp;
branches;
next	14.5;

14.5
date	2004.12.21.06.38.20;	author morrison;	state Exp;
branches;
next	14.4;

14.4
date	2004.12.21.06.18.44;	author morrison;	state Exp;
branches;
next	14.3;

14.3
date	2004.12.21.05.45.23;	author morrison;	state Exp;
branches;
next	14.2;

14.2
date	2004.12.21.04.03.25;	author morrison;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.15;	author morrison;	state Exp;
branches;
next	1.2;

1.2
date	2004.08.02.23.01.49;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.20.15.19.51;	author morrison;	state Exp;
branches;
next	;

14.7.6.1
date	2005.11.13.13.46.16;	author brlcad;	state Exp;
branches;
next	;


desc
@@


14.16
log
@more c89 embracing.  c89 provides string.h for all of the various str*() and mem*() functions, so remove the check for its presence.  there is still likely to be work required for strict c89 conformance for the various bsd strings.h functions that may be in use.
@
text
@/*                     S H _ P O I N T S . C
 * BRL-CAD
 *
 * Copyright (c) 1989-2007 United States Government as represented by
 * the U.S. Army Research Laboratory.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * version 2.1 as published by the Free Software Foundation.
 *
 * This library is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this file; see the file named COPYING for more
 * information.
 */
/** @@file sh_points.c
 *			P O I N T S . C
 *
 *  Reads a file of u,v point locations and associated RGB color values.
 *  For each u,v texture mapping cell, this routine fills in the color
 *  of the "brightest" point contained in that cell (if any).
 *
 *  This routine was born in order to environment map the Yale Bright
 *  Star catalog data without under or over sampling the point sources.
 *  It was soon realized that making it "star" specific limited its
 *  usefulness.
 *
 *  Author -
 *	Phillip Dykstra
 *
 */
#ifndef lint
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/liboptical/sh_points.c,v 14.15 2007/07/26 01:13:56 brlcad Exp $ (BRL)";
#endif

#include "common.h"

#include <stddef.h>
#include <stdio.h>
#include <string.h>
#include <math.h>

#include "machine.h"
#include "vmath.h"
#include "raytrace.h"
#include "fb.h"
#include "spm.h"
#include "rtprivate.h"

#define PT_NAME_LEN 128
struct points_specific {
	char	pt_file[PT_NAME_LEN];	/* Filename */
	int	pt_size;	/* number of bins around equator */
	spm_map_t *pt_map;	/* stuff */
};
#define POINTS_NULL	((struct points_specific *)0)
#define POINTS_O(m)	bu_offsetof(struct points_specific, m)

struct bu_structparse points_parse[] = {
	{"%s",	PT_NAME_LEN, "file", bu_offsetofarray(struct points_specific, pt_file),	BU_STRUCTPARSE_FUNC_NULL },
	{"%d",	1, "size",		POINTS_O(pt_size),	BU_STRUCTPARSE_FUNC_NULL },
	{"%d",	1, "w",			POINTS_O(pt_size),	BU_STRUCTPARSE_FUNC_NULL },
	{"",	0, (char *)0,		0,			BU_STRUCTPARSE_FUNC_NULL }
};

HIDDEN int	points_setup(register struct region *rp, struct bu_vls *matparm, char **dpp, struct mfuncs *mfp, struct rt_i *rtip), points_render(struct application *ap, struct partition *partp, struct shadework *swp, char *dp);
HIDDEN void	points_print(register struct region *rp, char *dp), points_mfree(char *cp);

struct mfuncs points_mfuncs[] = {
	{MF_MAGIC,	"points",	0,		MFI_UV,		0,
	points_setup,	points_render,	points_print,	points_mfree },

	{0,		(char *)0,	0,		0,		0,
	0,		0,		0,		0 }
};

HIDDEN
struct points {
	fastf_t	u;			/* u location */
	fastf_t	v;			/* v location */
	vect_t	color;			/* color of point */
	struct points	*next;		/* next point in list */
};

/*
 *			P O I N T S _ S E T U P
 *
 *  Returns -
 *	<0	failed
 *	>0	success
 */
HIDDEN int
points_setup(register struct region *rp, struct bu_vls *matparm, char **dpp, struct mfuncs *mfp, struct rt_i *rtip)


				/* New since 4.4 release */
{
	register struct points_specific *ptp;
	char	buf[513];
	FILE	*fp;

	BU_CK_VLS( matparm );
	BU_GETSTRUCT( ptp, points_specific );
	*dpp = (char *)ptp;

	/* get or default shader parameters */
	ptp->pt_file[0] = '\0';
	ptp->pt_size = -1;
	if (bu_struct_parse( matparm, points_parse, (char *)ptp ) < 0 )  {
		bu_free( (char *)ptp, "points_specific" );
		return(-1);
	}
	if (ptp->pt_size < 0 )
		ptp->pt_size = 512;
	if (ptp->pt_file[0] == '\0' )
		strcpy( ptp->pt_file, "points.ascii" );

	/* create a spherical data structure to bin point lists into */
	if ((ptp->pt_map = spm_init( ptp->pt_size, sizeof(struct points) )) == SPM_NULL )
		goto fail;

	/* read in the data */
	if ((fp = fopen(ptp->pt_file, "r")) == NULL ) {
		bu_log("points_setup: can't open \"%s\"\n", ptp->pt_file);
		goto fail;
	}
	while( bu_fgets(buf,512,fp) != NULL ) {
		double	u, v, mag;
		struct points	*headp, *pp;

		if (buf[0] == '#' )
			continue;		/* comment */

		pp = (struct points *)bu_calloc(1, sizeof(struct points), "point");
		sscanf( buf, "%lf%lf%lf", &u, &v, &mag );
		pp->u = u;
		pp->v = v;
		pp->color[0] = mag;
		pp->color[1] = mag;
		pp->color[2] = mag;

		/* find a home for it */
		headp = (struct points *)spm_get( ptp->pt_map, u, v );
		pp->next = headp->next;
		headp->next = pp;
	}
	(void)fclose(fp);

	return(1);
fail:
	bu_free( (char *)ptp, "points_specific" );
	return(-1);
}

/*
 *  			P O I N T S _ R E N D E R
 *
 *  Given a u,v coordinate within the texture ( 0 <= u,v <= 1.0 ),
 *  and a "size" of the pixel being rendered (du, dv), fill in the
 *  color of the "brightest" point (if any) within that region.
 */
HIDDEN int
points_render(struct application *ap, struct partition *partp, struct shadework *swp, char *dp)
{
	register struct points_specific *ptp =
		(struct points_specific *)dp;
	register spm_map_t	*mapp;
	fastf_t	umin, umax, vmin, vmax;
	int	xmin, xmax, ymin, ymax;
	register int	x, y;
	register struct points	*pp;
	fastf_t	mag;

swp->sw_uv.uv_du = ap->a_diverge;
swp->sw_uv.uv_dv = ap->a_diverge;
	/*bu_log( "du,dv = %g %g\n", swp->sw_uv.uv_du, swp->sw_uv.uv_dv);*/

	/* compute and clip bounds in u,v space */
	umin = swp->sw_uv.uv_u - swp->sw_uv.uv_du;
	umax = swp->sw_uv.uv_u + swp->sw_uv.uv_du;
	vmin = swp->sw_uv.uv_v - swp->sw_uv.uv_dv;
	vmax = swp->sw_uv.uv_v + swp->sw_uv.uv_dv;
	if (umin < 0 )  umin = 0;
	if (vmin < 0 )  vmin = 0;
	if (umax > 1 )  umax = 1;
	if (vmax > 1 )  vmax = 1;

	mapp = ptp->pt_map;

	mag = 0;
	ymin = vmin * mapp->ny;
	ymax = vmax * mapp->ny;
	/* for each latitude band */
	for( y = ymin; y < ymax; y++ ) {
		xmin = umin * mapp->nx[y];
		xmax = umax * mapp->nx[y];
		/* for each bin spanned in that band */
		for( x = xmin; x < xmax; x++ ) {
			pp = (struct points *)&(mapp->xbin[y][x*mapp->elsize]);
			while( pp != NULL ) {
				if ( pp->u < umax && pp->u >= umin
				  && pp->v < vmax && pp->v >= vmin
				  && pp->color[0] > mag ) {
					mag = pp->color[0];
				}
				pp = pp->next;
			}
		}
	}

	/*bu_log( "points_render ([%g %g][%g %g]) = %g\n",
		umin, umax, vmin, vmax, mag );*/

	if (mag == 0 ) {
		VSET( swp->sw_color, 0, 0, 0 );
	} else {
		VSET( swp->sw_color, mag/255.0, mag/255.0, mag/255.0 );
	}

	return(1);
}

/*
 *			P O I N T S _ P R I N T
 */
HIDDEN void
points_print(register struct region *rp, char *dp)
{
	bu_struct_print("points_setup", points_parse, (char *)dp);
	/* Should be more here */
}

HIDDEN void
points_mfree(char *cp)
{
	/* XXX - free linked lists in every bin! */
	spm_free( (spm_map_t *)cp );
}

/*
 * Local Variables:
 * mode: C
 * tab-width: 8
 * c-basic-offset: 4
 * indent-tabs-mode: t
 * End:
 * ex: shiftwidth=4 tabstop=8
 */
@


14.15
log
@remove ephemeral data like phone numbers and addresses, including the misleading 'source' statements on code that is continually evolving and receiving contributions from many many sources
@
text
@d37 1
a37 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/liboptical/sh_points.c,v 14.14 2007/02/20 08:19:49 brlcad Exp $ (BRL)";
d44 1
a44 5
#ifdef HAVE_STRING_H
#  include <string.h>
#else
#  include <strings.h>
#endif
@


14.14
log
@update all usages of fgets() to instead use john's swanktastic bu_fgets() that behaves as one would generally want regardless of the line ending type of the compilation platform or of the input files.  bu_fgets() responds to input files that use CR (usually old mac), LF (usually unix, new mac), or CR/LF (usually windows) for the line ending so now these file do too effectivley squashing buggish/bad behavior.
@
text
@a34 5
 *  Source -
 *	SECAD/VLD Computing Consortium, Bldg 394
 *	The U. S. Army Ballistic Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5066
 *
d37 1
a37 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/liboptical/sh_points.c,v 14.13 2007/01/27 01:41:38 brlcad Exp $ (BRL)";
@


14.13
log
@ws. lots and lots of ws.  see sh/ws.sh for details (cases 'abcdeg').
@
text
@d42 1
a42 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/liboptical/sh_points.c,v 14.12 2007/01/23 01:13:36 brlcad Exp $ (BRL)";
d140 1
a140 1
	while( fgets(buf,512,fp) != NULL ) {
@


14.12
log
@Sweeping license updates.  Documentation is fully relicensed to the BSD Documentation License (a minor variant of the FreeBSD Documentation License and BSD License).  All GPL code (mostly application code) is converted to the LGPL and now also specifically declares version 2.1, revoking the blank check to the FSF.  The intent of these sweeping changes are to simplify the licensing terms and increase overall flexibility of use, both externally (to users for their purposes) and internally (to allow application code to be migrated to libraries without creating GPL libraries).  As a collective work, BRL-CAD is now LGPL.
@
text
@d42 1
a42 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/liboptical/sh_points.c,v 14.11 2007/01/20 14:36:53 brlcad Exp $ (BRL)";
d109 1
a109 3


                                /* New since 4.4 release */
@


14.11
log
@update copyright to 2007
@
text
@d9 1
a9 2
 * as published by the Free Software Foundation; either version 2 of
 * the License, or (at your option) any later version.
d14 1
a14 1
 * Library General Public License for more details.
d42 1
a42 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/liboptical/sh_points.c,v 14.10 2006/01/23 00:35:08 brlcad Exp $ (BRL)";
@


14.10
log
@include stddef.h for bu_offset's usage of offset
@
text
@d4 1
a4 1
 * Copyright (c) 1989-2006 United States Government as represented by
d43 1
a43 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/liboptical/sh_points.c,v 14.9 2006/01/18 06:46:16 brlcad Exp $ (BRL)";
@


14.9
log
@update copyright to 2006
@
text
@d43 1
a43 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/liboptical/sh_points.c,v 14.8 2005/10/23 04:44:34 brlcad Exp $ (BRL)";
d48 1
a48 2


d51 3
a53 1
#include <string.h>
d56 1
d71 1
a71 1
#define POINTS_O(m)	offsetof(struct points_specific, m)
@


14.8
log
@trailing ws
@
text
@d4 1
a4 1
 * Copyright (C) 1989-2005 United States Government as represented by
d43 1
a43 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/liboptical/sh_points.c,v 14.7 2005/03/28 06:31:37 bob1961 Exp $ (BRL)";
@


14.7
log
@Add code to allow liboptical to be a Windows DLL
@
text
@d35 1
a35 1
 *  
d40 1
a40 1
 *  
d43 1
a43 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/liboptical/sh_points.c,v 14.6 2005/01/30 20:30:55 brlcad Exp $ (BRL)";
d106 4
a109 4
                           
             	         
    	      
                             
d171 1
a171 1
 *  
@


14.7.6.1
log
@merge changes from HEAD aka rel-7-6-4 to the rel-7-6-branch just in case someone peeks a gander or tries to continue/build the branch
@
text
@d35 1
a35 1
 *
d40 1
a40 1
 *
d43 1
a43 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
d106 4
a109 4




d171 1
a171 1
 *
@


14.6
log
@update copyright to 2005
@
text
@d43 1
a43 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/liboptical/sh_points.c,v 14.5 2004/12/21 06:38:20 morrison Exp $ (BRL)";
a59 2
#include "shadefuncs.h"
#include "shadework.h"
@


14.5
log
@remove the old copyright notice section
@
text
@d4 1
a4 1
 * Copyright (c) 1989-2004 United States Government as represented by
d43 1
a43 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/liboptical/sh_points.c,v 14.4 2004/12/21 06:18:44 morrison Exp $ (BRL)";
@


14.4
log
@they should have received a copy of the LGPL with LGPL'd files
@
text
@a40 3
 *  Copyright Notice -
 *	This software is Copyright (C) 1989-2004 by the United States Army.
 *	All rights reserved.
d43 1
a43 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/liboptical/sh_points.c,v 14.3 2004/12/21 05:45:23 morrison Exp $ (BRL)";
@


14.3
log
@s/GNU Library General/GNU Lesser General/g
@
text
@d17 2
a18 2
 * You should have received a copy of the GNU General Public License
 * along with this file; see the file named COPYING for more
d46 1
a46 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/liboptical/sh_points.c,v 14.2 2004/12/21 04:03:25 morrison Exp $ (BRL)";
@


14.2
log
@assign copyright and LGPL
@
text
@d8 1
a8 1
 * modify it under the terms of the GNU Library General Public License
d46 1
a46 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/liboptical/sh_points.c,v 14.1 2004/11/16 19:42:15 morrison Exp $ (BRL)";
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d1 21
a21 1
/*
d46 1
a46 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/liboptical/sh_points.c,v 1.2 2004/08/02 23:01:49 morrison Exp $ (BRL)";
@


1.2
log
@replace the wrapped config.h block with common.h
@
text
@d26 1
a26 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/liboptical/sh_points.c,v 1.1 2004/05/20 15:19:51 morrison Exp $ (BRL)";
d238 10
@


1.1
log
@Vast reorganization begins.  Sources moved from top-level directories into src/.
@
text
@d26 1
a26 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/liboptical/sh_points.c,v 11.21 2004/05/10 15:30:45 erikg Exp $ (BRL)";
d29 1
a29 3
#ifdef HAVE_CONFIG_H
# include "config.h"
#endif
@

