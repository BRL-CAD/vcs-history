head	1.2;
access;
symbols
	rel-7-10-4:1.2
	STABLE:1.2.0.2
	rel-7-10-2:1.2
	rel-7-10-0:1.2
	rel-7-8-4:1.1
	rel-7-8-2:1.1
	rel-7-8-0:1.1
	trimnurbs-branch:1.1.0.4
	help:1.1
	temp_tag:1.1
	postmerge-20051223-bobWinPort:1.1
	premerge-20051223-bobWinPort:1.1
	rel-7-6-6:1.1
	rel-7-6-branch:1.1.0.2
	rel-7-6-4:1.1;
locks; strict;
comment	@ * @;


1.2
date	2007.02.18.19.11.46;	author brlcad;	state Exp;
branches;
next	1.1;

1.1
date	2005.11.11.21.53.27;	author brlcad;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2005.11.11.21.53.27;	author brlcad;	state dead;
branches;
next	1.1.2.2;

1.1.2.2
date	2005.11.13.13.46.17;	author brlcad;	state Exp;
branches;
next	;


desc
@@


1.2
log
@ws
@
text
@/*	This is a public-domain reimplementation of strtok(3).
	Not derived from licensed software.
	This code may be used on any computer system for any
	purpose by anyone.

	Henry Spencer @@ U of Toronto Zoology
	{allegra,ihnp4,decvax,pyramid}!utzoo!henry
	Wed Jun 25 19:21:34 EDT 1986
*/

#include "common.h"

/* quell empty-compilation unit warnings */
static const int unused = 0;

/*
 *  This public domain version of strtok() made available to systems that
 *  don't have their own.
 */
#ifndef HAVE_STRTOK


static char *scanpoint = 0;

/**
 * Get next token from string s (0 on 2nd, 3rd, etc. calls),
 * where tokens are nonempty strings separated by runs of
 * chars from delim.  Writes NULs into s to end tokens.  delim need not
 * remain constant from call to call.
 */
char *				/* 0 if no token left */
strtok(char *s, register const char *delim)
{
    register char *scan;
    char *tok;
    register const char *dscan;
    if (s == (char*)0 && scanpoint == (char*)0)
	return((char*)0);
    if (s != (char*)0)
	scan = s;
    else
	scan = scanpoint;

    /*
     * Scan leading delimiters.
     */
    for (; *scan != '\0'; scan++) {
	for (dscan = delim; *dscan != '\0'; dscan++)
	    if (*scan == *dscan)
		break;
	if (*dscan == '\0')
	    break;
    }
    if (*scan == '\0') {
	scanpoint = (char*)0;
	return((char*)0);
    }

    tok = scan;

    /*
     * Scan token.
     */
    for (; *scan != '\0'; scan++) {
	for (dscan = delim; *dscan != '\0';)	/* ++ moved down. */
	    if (*scan == *dscan++) {
		scanpoint = scan+1;
		*scan = '\0';
		return(tok);
	    }
    }

    /*
     * Reached end of string.
     */
    scanpoint = (char*)0;
    return(tok);
}

#endif

/*
 * Local Variables:
 * mode: C
 * tab-width: 8
 * c-basic-offset: 4
 * indent-tabs-mode: t
 * End:
 * ex: shiftwidth=4 tabstop=8
 */
@


1.1
log
@initial strtok.c file pulled/moved from src/lgt, with proper libsysv inclusion testing and some cleanup.
@
text
@d4 1
a4 1
		purpose by anyone.
d6 3
a8 3
				Henry Spencer @@ U of Toronto Zoology
				{allegra,ihnp4,decvax,pyramid}!utzoo!henry
				Wed Jun 25 19:21:34 EDT 1986
d34 21
a54 42
	register char *scan;
	char *tok;
	register const char *dscan;
	if (s == (char*)0 && scanpoint == (char*)0)
		return((char*)0);
	if (s != (char*)0)
		scan = s;
	else
		scan = scanpoint;

	/*
	 * Scan leading delimiters.
	 */
	for (; *scan != '\0'; scan++) {
		for (dscan = delim; *dscan != '\0'; dscan++)
			if (*scan == *dscan)
				break;
		if (*dscan == '\0')
			break;
	}
	if (*scan == '\0') {
		scanpoint = (char*)0;
		return((char*)0);
	}

	tok = scan;

	/*
	 * Scan token.
	 */
	for (; *scan != '\0'; scan++) {
		for (dscan = delim; *dscan != '\0';)	/* ++ moved down. */
			if (*scan == *dscan++) {
				scanpoint = scan+1;
				*scan = '\0';
				return(tok);
			}
	}

	/*
	 * Reached end of string.
	 */
d56 22
a77 1
	return(tok);
@


1.1.2.1
log
@file strtok.c was added on branch rel-7-6-branch on 2005-11-13 13:46:17 +0000
@
text
@d1 90
@


1.1.2.2
log
@merge changes from HEAD aka rel-7-6-4 to the rel-7-6-branch just in case someone peeks a gander or tries to continue/build the branch
@
text
@a0 90
/*	This is a public-domain reimplementation of strtok(3).
	Not derived from licensed software.
	This code may be used on any computer system for any
		purpose by anyone.

				Henry Spencer @@ U of Toronto Zoology
				{allegra,ihnp4,decvax,pyramid}!utzoo!henry
				Wed Jun 25 19:21:34 EDT 1986
*/

#include "common.h"

/* quell empty-compilation unit warnings */
static const int unused = 0;

/*
 *  This public domain version of strtok() made available to systems that
 *  don't have their own.
 */
#ifndef HAVE_STRTOK


static char *scanpoint = 0;

/**
 * Get next token from string s (0 on 2nd, 3rd, etc. calls),
 * where tokens are nonempty strings separated by runs of
 * chars from delim.  Writes NULs into s to end tokens.  delim need not
 * remain constant from call to call.
 */
char *				/* 0 if no token left */
strtok(char *s, register const char *delim)
{
	register char *scan;
	char *tok;
	register const char *dscan;
	if (s == (char*)0 && scanpoint == (char*)0)
		return((char*)0);
	if (s != (char*)0)
		scan = s;
	else
		scan = scanpoint;

	/*
	 * Scan leading delimiters.
	 */
	for (; *scan != '\0'; scan++) {
		for (dscan = delim; *dscan != '\0'; dscan++)
			if (*scan == *dscan)
				break;
		if (*dscan == '\0')
			break;
	}
	if (*scan == '\0') {
		scanpoint = (char*)0;
		return((char*)0);
	}

	tok = scan;

	/*
	 * Scan token.
	 */
	for (; *scan != '\0'; scan++) {
		for (dscan = delim; *dscan != '\0';)	/* ++ moved down. */
			if (*scan == *dscan++) {
				scanpoint = scan+1;
				*scan = '\0';
				return(tok);
			}
	}

	/*
	 * Reached end of string.
	 */
	scanpoint = (char*)0;
	return(tok);
}

#endif

/*
 * Local Variables:
 * mode: C
 * tab-width: 8
 * c-basic-offset: 4
 * indent-tabs-mode: t
 * End:
 * ex: shiftwidth=4 tabstop=8
 */
@


