head	14.10;
access;
symbols
	rel-7-10-4:14.8
	STABLE:14.8.0.2
	rel-7-10-2:14.8
	rel-7-10-0:14.7
	rel-7-8-4:14.3
	rel-7-8-2:14.3
	rel-7-8-0:14.3
	trimnurbs-branch:14.3.0.2
	help:14.3
	temp_tag:14.2
	postmerge-20051223-bobWinPort:14.2
	premerge-20051223-bobWinPort:14.2
	rel-7-6-6:14.2
	rel-7-6-branch:14.2.0.2
	rel-7-6-4:14.2;
locks; strict;
comment	@ * @;


14.10
date	2007.12.16.18.53.50;	author brlcad;	state Exp;
branches;
next	14.9;

14.9
date	2007.09.15.16.23.14;	author brlcad;	state Exp;
branches;
next	14.8;

14.8
date	2007.07.26.01.13.57;	author brlcad;	state Exp;
branches;
next	14.7;

14.7
date	2007.02.18.19.11.46;	author brlcad;	state Exp;
branches;
next	14.6;

14.6
date	2007.02.18.19.05.50;	author brlcad;	state Exp;
branches;
next	14.5;

14.5
date	2007.01.23.01.13.40;	author brlcad;	state Exp;
branches;
next	14.4;

14.4
date	2007.01.20.14.36.56;	author brlcad;	state Exp;
branches;
next	14.3;

14.3
date	2006.01.18.06.46.18;	author brlcad;	state Exp;
branches;
next	14.2;

14.2
date	2005.10.31.05.25.05;	author brlcad;	state Exp;
branches
	14.2.2.1;
next	14.1;

14.1
date	2005.10.27.04.00.25;	author brlcad;	state Exp;
branches;
next	;

14.2.2.1
date	2005.10.31.05.25.05;	author brlcad;	state dead;
branches;
next	14.2.2.2;

14.2.2.2
date	2005.11.13.13.46.17;	author brlcad;	state Exp;
branches;
next	;


desc
@@


14.10
log
@convert usages of bcopy to memcpy throughout.  although none of them should be buffers that overlap per machine.h history, all calls were individually checked regardless. new code should not use bzero/bcopy any more.
@
text
@/*                        S T R D U P . C
 * BRL-CAD
 *
 * Copyright (c) 1985-2007 United States Government as represented by
 * the U.S. Army Research Laboratory.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * version 2.1 as published by the Free Software Foundation.
 *
 * This library is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this file; see the file named COPYING for more
 * information.
 */
/** @@file strdup.c
 *
 *  Duplicate a string.
 *
 *  Author -
 *	Michael John Muuss
 *
 */

#include "common.h"


/* quell empty-compilation unit warnings */
static const int unused = 0;

#ifndef HAVE_STRDUP

/* for malloc */
#include <stdlib.h>
#include <string.h>


/*
 *			S T R D U P
 *
 * Given a string, allocate enough memory to hold it using malloc(),
 * duplicate the strings, returns a pointer to the new string.
 */
char *
strdup(register const char *cp)
{
    register char	*base;
    register int	len;

    len = strlen( cp )+2;
    if( (base = (char *)malloc( len )) == (char *)0 )
	return( (char *)0 );

    memcpy(base, cp, len);
    return(base);
}

#endif

/*
 * Local Variables:
 * mode: C
 * tab-width: 8
 * c-basic-offset: 4
 * indent-tabs-mode: t
 * End:
 * ex: shiftwidth=4 tabstop=8
 */
@


14.9
log
@more c89 embracing.  c89 provides string.h for all of the various str*() and mem*() functions, so remove the check for its presence.  there is still likely to be work required for strict c89 conformance for the various bsd strings.h functions that may be in use.
@
text
@d58 1
a58 1
    bcopy( cp, base, len );
@


14.8
log
@remove ephemeral data like phone numbers and addresses, including the misleading 'source' statements on code that is continually evolving and receiving contributions from many many sources
@
text
@d39 1
a39 8

#ifdef HAVE_STRING_H
#  include <string.h>
#else
#  ifdef HAVE_STRINGS_H
#    include <strings.h>
#  endif
#endif
@


14.7
log
@ws
@
text
@a26 4
 *  Source -
 *	SECAD/VLD Computing Consortium, Bldg 394
 *	The U. S. Army Ballistic Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5066
@


14.6
log
@deknrify the function
@
text
@d62 2
a63 2
	register char	*base;
	register int	len;
d65 3
a67 3
	len = strlen( cp )+2;
	if( (base = (char *)malloc( len )) == (char *)0 )
		return( (char *)0 );
d69 2
a70 2
	bcopy( cp, base, len );
	return(base);
@


14.5
log
@Sweeping license updates.  Documentation is fully relicensed to the BSD Documentation License (a minor variant of the FreeBSD Documentation License and BSD License).  All GPL code (mostly application code) is converted to the LGPL and now also specifically declares version 2.1, revoking the blank check to the FSF.  The intent of these sweeping changes are to simplify the licensing terms and increase overall flexibility of use, both externally (to users for their purposes) and internally (to allow application code to be migrated to libraries without creating GPL libraries).  As a collective work, BRL-CAD is now LGPL.
@
text
@d60 1
a60 2
strdup( cp )
register const char *cp;
@


14.4
log
@update copyright to 2007
@
text
@d9 1
a9 2
 * as published by the Free Software Foundation; either version 2 of
 * the License, or (at your option) any later version.
d14 1
a14 1
 * Library General Public License for more details.
@


14.3
log
@update copyright to 2006
@
text
@d4 1
a4 1
 * Copyright (c) 1985-2006 United States Government as represented by
@


14.2
log
@quell potential compiler warnings/errors about empty compilation units, toss in a static
@
text
@d4 1
a4 1
 * Copyright (C) 1985-2005 United States Government as represented by
@


14.2.2.1
log
@file strdup.c was added on branch rel-7-6-branch on 2005-11-13 13:46:17 +0000
@
text
@d1 85
@


14.2.2.2
log
@merge changes from HEAD aka rel-7-6-4 to the rel-7-6-branch just in case someone peeks a gander or tries to continue/build the branch
@
text
@a0 85
/*                        S T R D U P . C
 * BRL-CAD
 *
 * Copyright (C) 1985-2005 United States Government as represented by
 * the U.S. Army Research Laboratory.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * as published by the Free Software Foundation; either version 2 of
 * the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this file; see the file named COPYING for more
 * information.
 */
/** @@file strdup.c
 *
 *  Duplicate a string.
 *
 *  Author -
 *	Michael John Muuss
 *
 *  Source -
 *	SECAD/VLD Computing Consortium, Bldg 394
 *	The U. S. Army Ballistic Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5066
 */

#include "common.h"


/* quell empty-compilation unit warnings */
static const int unused = 0;

#ifndef HAVE_STRDUP

/* for malloc */
#include <stdlib.h>

#ifdef HAVE_STRING_H
#  include <string.h>
#else
#  ifdef HAVE_STRINGS_H
#    include <strings.h>
#  endif
#endif


/*
 *			S T R D U P
 *
 * Given a string, allocate enough memory to hold it using malloc(),
 * duplicate the strings, returns a pointer to the new string.
 */
char *
strdup( cp )
register const char *cp;
{
	register char	*base;
	register int	len;

	len = strlen( cp )+2;
	if( (base = (char *)malloc( len )) == (char *)0 )
		return( (char *)0 );

	bcopy( cp, base, len );
	return(base);
}

#endif

/*
 * Local Variables:
 * mode: C
 * tab-width: 8
 * c-basic-offset: 4
 * indent-tabs-mode: t
 * End:
 * ex: shiftwidth=4 tabstop=8
 */
@


14.1
log
@add strdup.c (moved from src/util)
@
text
@d36 4
@

