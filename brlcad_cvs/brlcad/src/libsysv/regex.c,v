head	14.5;
access;
symbols
	rel-7-10-4:14.5
	STABLE:14.5.0.2
	stable-branch:14.2
	rel-7-10-2:14.5
	rel-7-10-0:14.4
	rel-7-8-4:14.4
	rel-7-8-2:14.3
	rel-7-8-0:14.3
	trimnurbs-branch:14.3.0.2
	help:14.3
	temp_tag:14.3
	bobWinPort-20051223-freeze:14.2
	postmerge-20051223-bobWinPort:14.3
	premerge-20051223-bobWinPort:14.3
	rel-7-6-6:14.3
	rel-7-6-4:14.3
	rel-7-6-2:14.2
	rel-7-6-branch:14.2.0.6
	rel-7-6-0:14.2
	rel-7-4-2:14.2
	rel-7-4-branch:14.2.0.4
	bobWinPort:14.2.0.2
	rel-7-4-0:14.2
	rel-7-2-6:14.2
	rel-7-2-4:14.2
	rel-7-2-2:14.2
	rel-7-2-0:14.2
	rel-7-0-4:14.2
	rel-7-0-2:14.2
	rel-7-0-1:14.2
	opensource-post:14.2
	opensource-pre:1.5
	rel-7-0-branch:1.5.0.2
	rel-7-0:1.5;
locks; strict;
comment	@ * @;


14.5
date	2007.07.26.01.13.57;	author brlcad;	state Exp;
branches;
next	14.4;

14.4
date	2006.07.09.19.17.16;	author brlcad;	state Exp;
branches;
next	14.3;

14.3
date	2005.10.23.04.44.36;	author brlcad;	state Exp;
branches;
next	14.2;

14.2
date	2004.12.21.07.18.58;	author morrison;	state Exp;
branches
	14.2.6.1;
next	14.1;

14.1
date	2004.11.16.19.42.17;	author morrison;	state Exp;
branches;
next	1.5;

1.5
date	2004.09.20.06.04.00;	author morrison;	state Exp;
branches;
next	1.4;

1.4
date	2004.09.20.05.45.43;	author morrison;	state Exp;
branches;
next	1.3;

1.3
date	2004.08.02.23.01.50;	author morrison;	state Exp;
branches;
next	1.2;

1.2
date	2004.06.08.19.57.34;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.20.15.20.14;	author morrison;	state Exp;
branches;
next	;

14.2.6.1
date	2005.11.13.13.46.17;	author brlcad;	state Exp;
branches;
next	;


desc
@@


14.5
log
@remove ephemeral data like phone numbers and addresses, including the misleading 'source' statements on code that is continually evolving and receiving contributions from many many sources
@
text
@/*
 *			R E G E X . C
 *
 *  An interface to the System-V regular expression subroutines which
 *  present the Berkeley (BSD) names and semantics, so that all
 *  regular expression code can be programmed using the Berkeley interface.
 *
 *	last edit:	04-Nov-1987	D A Gwyn
 *
 *  Author -
 *	D A Gwyn
 *
 */
#ifndef lint
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libsysv/regex.c,v 14.4 2006/07/09 19:17:16 brlcad Exp $ (BRL)";
#endif

#include "common.h"

#include "machine.h"

#if defined(HAVE_REGEX)
#ifndef lint
char	regex_dummy;      /* some systems can't handle empty object modules */
#else
		/* Nothing further to do on systems that have regex */
#endif
#else

/* For systems with SYSV regular expression support */
#if defined(USE_SYSV_RE)
extern struct re_msg
	{
	int	number;
	char	*message;
	}	re_msgtab[];

static char	*re_err;		/* sneak path to error string */

/*	Handle error from <regexp.h>	*/

static void
re_error( n )
	register int		n;	/* error number */
	{
	register struct re_msg	*mp;

	for ( mp = re_msgtab; mp->number > 0; ++mp )
		if ( mp->number == n )
			break;

	re_err = mp->message;
	}

/* macros for <regexp.h> */
#define INIT		register char	*re_str = instring;
#define GETC()		(*re_str == '\0' ? '\0' : (int)*re_str++)
#define UNGETC( c )	--re_str
#define PEEKC()		((int)*re_str)
#define RETURN( c )	return (char *)0
#define ERROR( n )	re_error( n )

/* change the following global extern variables for safety's sake */
#define braelist re_braelist
#define braslist re_braslist
#define	ebra	re_ebra
#define	sed	re_sed
#define	nbra	re_nbra
#define	loc1	re_loc1
#define	loc2	re_loc2
#define	locs	re_locs
#define nodelim	re_nodelim
#define	circf	re_circf
#define low	re_low
#define size	re_size
#define bittab	re_bittab

/* change the following global extern functions for safety's sake */
#define	compile	re_cmpl			/* avoid truncated name collision! */
#define	step	re_step
#define	advance	re_advance
#define getrnge	re_getrnge
#if !defined(sgi) && !defined(__sgi) && !defined(i386) && !defined(SUNOS)
#	define ecmp	re_ecmp
#endif

#include	<regexp.h>

#define	ESIZE	512
static char	re_buf[ESIZE];		/* compiled r.e. */

/*	Compile regular expression	*/

char	*
re_comp( s )				/* returns 0 or ptr to error message */
	char	*s;
	{
	re_err = (char *)0;

	if ( s != (char *)0 && *s != '\0' )
		(void)compile( s, re_buf, &re_buf[ESIZE], '\0' );
	else if ( re_buf[0] == '\0' )
		ERROR( 41 );		/* no remembered search string */
	/* else use remembered search string from previous call */

	return re_err;
	}

/*	Test for match against compiled expression	*/

int
re_exec( s )				/* returns 1 if s matches, else 0 */
	char	*s;
	{
	locs = 0;			/* ??? */
	return step( s, re_buf );
	}
#endif


/* For systems with the POSIX regcomp() support */
#if defined(HAVE_REGCOMP)

#include <sys/types.h>

#if BUILD_REGEX
#  include "regex.h"
#elif defined(HAVE_REGEX_H)
#  include <regex.h>
#endif

#if !defined(REG_BASIC)
#	define REG_BASIC	0
#endif

static regex_t reg;

char *
re_comp(s)
const char *s;
{
	int i;
	static char errbuf[2048] = {0};
	i = regcomp(&reg, s, REG_BASIC|REG_NOSUB);

	if (i) {
		regerror(i, &reg, errbuf, sizeof(errbuf));
		return errbuf;
	}
	return (char *)0;
}

int
re_exec(s)
const char *s;
{
	int i;

	i = regexec(&reg, s, (size_t) 0, (regmatch_t *)0, 0);

	return !i;
}
#endif

#endif

/*
 * Local Variables:
 * mode: C
 * tab-width: 8
 * c-basic-offset: 4
 * indent-tabs-mode: t
 * End:
 * ex: shiftwidth=4 tabstop=8
 */
@


14.4
log
@increase and initialize some buffer sizes to something larger in order to minimize hitting buffer limits while processing.
@
text
@a12 5
 *  Source -
 *	SECAD/VLD Computing Consortium, Bldg 394
 *	The U. S. Army Ballistic Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5066
 *
d15 1
a15 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libsysv/regex.c,v 14.3 2005/10/23 04:44:36 brlcad Exp $ (BRL)";
@


14.3
log
@trailing ws
@
text
@d20 1
a20 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libsysv/regex.c,v 14.2 2004/12/21 07:18:58 morrison Exp $ (BRL)";
d148 1
a148 1
	static char errbuf[1024];
@


14.2
log
@the significantly modified pd files are incorporated as new works and assigned copyright, so remove the old statement.
@
text
@d12 1
a12 1
 *  
d17 1
a17 1
 *  
d20 1
a20 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/libsysv/regex.c,v 14.1 2004/11/16 19:42:17 morrison Exp $ (BRL)";
@


14.2.6.1
log
@merge changes from HEAD aka rel-7-6-4 to the rel-7-6-branch just in case someone peeks a gander or tries to continue/build the branch
@
text
@d12 1
a12 1
 *
d17 1
a17 1
 *
d20 1
a20 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@a17 2
 *  Distribution Status -
 *	Public Domain, Distribution Unlimitied.
d20 1
a20 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/libsysv/regex.c,v 1.5 2004/09/20 06:04:00 morrison Exp $ (BRL)";
@


1.5
log
@if we build regex, use local header. otherwise, use the system header.
@
text
@d22 1
a22 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/libsysv/regex.c,v 1.4 2004/09/20 05:45:43 morrison Exp $ (BRL)";
d173 10
@


1.4
log
@the bsd regex stuff is now in it's own library in src/other/libregex
@
text
@d22 1
a22 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/libsysv/regex.c,v 1.3 2004/08/02 23:01:50 morrison Exp $ (BRL)";
d132 6
a137 1
#include <regex.h>
@


1.3
log
@replace the wrapped config.h block with common.h
@
text
@d22 1
a22 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/libsysv/regex.c,v 1.2 2004/06/08 19:57:34 morrison Exp $ (BRL)";
a25 2


@


1.2
log
@HAVE_REGCMP now, not USE_REGCOMP
@
text
@d22 1
a22 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
d25 1
a25 3
#ifdef HAVE_CONFIG_H
# include "config.h"
#endif
@


1.1
log
@Vast reorganization begins.  Sources moved from top-level directories into src/.
@
text
@d22 1
a22 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/libsysv/regex.c,v 11.4 2004/05/10 15:30:47 erikg Exp $ (BRL)";
d133 1
a133 1
#if defined(USE_REGCOMP)
@

