head	14.18;
access;
symbols
	rel-7-10-4:14.18
	STABLE:14.18.0.2
	stable-branch:14.8
	rel-7-10-2:14.18
	rel-7-10-0:14.18
	rel-7-8-4:14.14
	rel-7-8-2:14.12
	rel-7-8-0:14.12
	trimnurbs-branch:14.12.0.2
	help:14.12
	temp_tag:14.10
	bobWinPort-20051223-freeze:14.9
	postmerge-20051223-bobWinPort:14.10
	premerge-20051223-bobWinPort:14.10
	rel-7-6-6:14.10
	rel-7-6-4:14.10
	rel-7-6-2:14.9
	rel-7-6-branch:14.9.0.4
	rel-7-6-0:14.9
	rel-7-4-2:14.8
	rel-7-4-branch:14.8.0.2
	bobWinPort:14.9.0.2
	rel-7-4-0:14.8
	rel-7-2-6:14.8
	rel-7-2-4:14.8
	rel-7-2-2:14.8
	rel-7-2-0:14.8
	rel-7-0-4:14.7
	rel-7-0-2:14.7
	rel-7-0-1:14.7
	opensource-post:14.7
	opensource-pre:1.2
	rel-7-0-branch:1.2.0.2
	rel-7-0:1.2;
locks; strict;
comment	@ * @;


14.18
date	2007.01.27.01.41.37;	author brlcad;	state Exp;
branches;
next	14.17;

14.17
date	2007.01.23.01.13.34;	author brlcad;	state Exp;
branches;
next	14.16;

14.16
date	2007.01.21.04.45.42;	author brlcad;	state Exp;
branches;
next	14.15;

14.15
date	2007.01.20.14.36.51;	author brlcad;	state Exp;
branches;
next	14.14;

14.14
date	2006.08.31.23.16.38;	author lbutler;	state Exp;
branches;
next	14.13;

14.13
date	2006.08.31.05.50.25;	author lbutler;	state Exp;
branches;
next	14.12;

14.12
date	2006.02.27.07.42.49;	author brlcad;	state Exp;
branches;
next	14.11;

14.11
date	2006.01.18.06.46.16;	author brlcad;	state Exp;
branches;
next	14.10;

14.10
date	2005.10.23.04.44.32;	author brlcad;	state Exp;
branches;
next	14.9;

14.9
date	2005.08.12.22.29.23;	author lbutler;	state Exp;
branches
	14.9.4.1;
next	14.8;

14.8
date	2005.01.30.20.30.46;	author brlcad;	state Exp;
branches;
next	14.7;

14.7
date	2004.12.21.07.32.30;	author morrison;	state Exp;
branches;
next	14.6;

14.6
date	2004.12.21.06.58.42;	author morrison;	state Exp;
branches;
next	14.5;

14.5
date	2004.12.21.06.44.32;	author morrison;	state Exp;
branches;
next	14.4;

14.4
date	2004.12.21.06.18.43;	author morrison;	state Exp;
branches;
next	14.3;

14.3
date	2004.12.21.05.45.21;	author morrison;	state Exp;
branches;
next	14.2;

14.2
date	2004.12.21.03.49.00;	author morrison;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.14;	author morrison;	state Exp;
branches;
next	1.2;

1.2
date	2004.08.02.23.01.48;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.20.15.19.35;	author morrison;	state Exp;
branches;
next	;

14.9.4.1
date	2005.11.13.13.46.15;	author brlcad;	state Exp;
branches;
next	;


desc
@@


14.18
log
@ws. lots and lots of ws.  see sh/ws.sh for details (cases 'abcdeg').
@
text
@/*                     R B _ D E L E T E . C
 * BRL-CAD
 *
 * Copyright (c) 1998-2007 United States Government as represented by
 * the U.S. Army Research Laboratory.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * version 2.1 as published by the Free Software Foundation.
 *
 * This library is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this file; see the file named COPYING for more
 * information.
 */
/** @@addtogroup rb  */
/** @@{ */
/** @@file rb_delete.c
 *
 *	    Routines to delete a node from a red-black tree
 *
 *  @@author	Paul J. Tanenbaum
 *
 *  @@par  Source -
 *	The U. S. Army Research Laboratory
 *  @@n	Aberdeen Proving Ground, Maryland  21005-5068  USA
 */
/** @@} */

#ifndef lint
static char const libbu_rb_delete_RCSid[] = "@@(#) $Header: /cvsroot/brlcad/brlcad/src/libbu/rb_delete.c,v 14.17 2007/01/23 01:13:34 brlcad Exp $";
#endif

#include "common.h"

#include <stdlib.h>
#include <stdio.h>
#include <math.h>

#include "machine.h"
#include "bu.h"
#include "./rb_internals.h"


/**			B U _ R B _ F I X U P ( )
 *
 *	    Restore the red-black properties of a red-black tree
 *		    after the splicing out of a node
 *
 *	This function has three parameters: the tree to be fixed up,
 *	the node where the trouble occurs, and the order.  bu_rb_fixup()
 *	is an implementation of the routine RB-DELETE-FIXUP on p. 274
 *	of Cormen et al.
 */
static void bu_rb_fixup (bu_rb_tree *tree, struct bu_rb_node *node, int order)
{
    int			direction;
    struct bu_rb_node	*parent;
    struct bu_rb_node	*w;

    BU_CKMAG(tree, BU_RB_TREE_MAGIC, "red-black tree");
    BU_CKMAG(node, BU_RB_NODE_MAGIC, "red-black node");
    BU_RB_CKORDER(tree, order);

    while ((node != bu_rb_root(tree, order))
	&& (bu_rb_get_color(node, order) == BU_RB_BLACK))
    {
	parent = bu_rb_parent(node, order);
	if (node == bu_rb_left_child(parent, order))
	    direction = BU_RB_LEFT;
	else
	    direction = BU_RB_RIGHT;

	w = bu_rb_other_child(parent, order, direction);
	if (bu_rb_get_color(w, order) == BU_RB_RED)
	{
	    bu_rb_set_color(w, order, BU_RB_BLACK);
	    bu_rb_set_color(parent, order, BU_RB_RED);
	    bu_rb_rotate(parent, order, direction);
	    w = bu_rb_other_child(parent, order, direction);
	}
	if ((bu_rb_get_color(bu_rb_child(w, order, direction), order)
		== BU_RB_BLACK)
	 && (bu_rb_get_color(bu_rb_other_child(w, order, direction), order)
		 == BU_RB_BLACK))
	{
	    bu_rb_set_color(w, order, BU_RB_RED);
	    node = parent;
	}
	else
	{
	    if (bu_rb_get_color(bu_rb_other_child(w, order, direction),
		order)
		    == BU_RB_BLACK)
	    {
		bu_rb_set_color(bu_rb_child(w, order, direction), order,
		    BU_RB_BLACK);
		bu_rb_set_color(w, order, BU_RB_RED);
		bu_rb_other_rotate(w, order, direction);
		w = bu_rb_other_child(parent, order, direction);
	    }
	    bu_rb_set_color(w, order, bu_rb_get_color(parent, order));
	    bu_rb_set_color(parent, order, BU_RB_BLACK);
	    bu_rb_set_color(bu_rb_other_child(w, order, direction),
				order, BU_RB_BLACK);
	    bu_rb_rotate(parent, order, direction);
	    node = bu_rb_root(tree, order);
	}
    }
    bu_rb_set_color(node, order, BU_RB_BLACK);
}

/**		        _ R B _ D E L E T E ( )
 *
 *	        Delete a node from one order of a red-black tree
 *
 *	This function has three parameters: a tree, the node to delete,
 *	and the order from which to delete it.  _rb_delete() is an
 *	implementation of the routine RB-DELETE on p. 273 of Cormen et al.
 */
static void _rb_delete (bu_rb_tree *tree, struct bu_rb_node *node, int order)
{
    struct bu_rb_node	*y;		/* The node to splice out */
    struct bu_rb_node	*parent;
    struct bu_rb_node	*only_child;

    BU_CKMAG(tree, BU_RB_TREE_MAGIC, "red-black tree");
    BU_CKMAG(node, BU_RB_NODE_MAGIC, "red-black node");
    BU_RB_CKORDER(tree, order);

    if (tree -> rbt_debug & BU_RB_DEBUG_DELETE)
	bu_log("_rb_delete(%x,%x,%d): data=x%x\n",
	    tree, node, order, bu_rb_data(node, order));

    if ((bu_rb_left_child(node, order) == bu_rb_null(tree))
     || (bu_rb_right_child(node, order) == bu_rb_null(tree)))
	y = node;
    else
	y = _rb_neighbor(node, order, SENSE_MAX);

    if (bu_rb_left_child(y, order) == bu_rb_null(tree))
	only_child = bu_rb_right_child(y, order);
    else
	only_child = bu_rb_left_child(y, order);

    parent = bu_rb_parent(only_child, order) = bu_rb_parent(y, order);
    if (parent == bu_rb_null(tree))
	bu_rb_root(tree, order) = only_child;
    else if (y == bu_rb_left_child(parent, order))
	bu_rb_left_child(parent, order) = only_child;
    else
	bu_rb_right_child(parent, order) = only_child;

    /*
     *	Splice y out if it's not node
     */
    if (y != node)
    {
	(node -> rbn_package)[order] = (y -> rbn_package)[order];
	((node -> rbn_package)[order] -> rbp_node)[order] = node;
    }

    if (bu_rb_get_color(y, order) == BU_RB_BLACK)
	bu_rb_fixup(tree, only_child, order);

    if (--(y -> rbn_pkg_refs) == 0)
	bu_rb_free_node(y);
}

/**		        B U _ R B _ D E L E T E ( )
 *
 *	        Applications interface to _rb_delete()
 *
 *	This function has two parameters: the tree and order from which
 *	to do the deleting.  bu_rb_delete() removes the data block stored
 *	in the current node (in the position of the specified order)
 *	from every order in the tree.
 */
void bu_rb_delete (bu_rb_tree *tree, int order)
{
    int				nm_orders;
    struct bu_rb_node		**node;		/* Nodes containing data */
    struct bu_rb_package	*package;

    BU_CKMAG(tree, BU_RB_TREE_MAGIC, "red-black tree");
    BU_RB_CKORDER(tree, order);

    if (tree -> rbt_nm_nodes <= 0)
    {
	bu_log("Error: Attempt to delete from tree with %d nodes\n",
		tree -> rbt_nm_nodes);
	bu_bomb("");
    }
    if (bu_rb_current(tree) == bu_rb_null(tree))
    {
	bu_log("Warning: bu_rb_delete(): current node is undefined\n");
	return;
    }

    nm_orders = tree -> rbt_nm_orders;
    package = (bu_rb_current(tree) -> rbn_package)[order];

    node = (struct bu_rb_node **)
	    bu_malloc(nm_orders * sizeof(struct bu_rb_node *), "node list");

    for (order = 0; order < nm_orders; ++order)
	node[order] = (package -> rbp_node)[order];

    /*
     *	Do the deletion from each order
     */
    for (order = 0; order < nm_orders; ++order)
	_rb_delete(tree, node[order], order);

    --(tree -> rbt_nm_nodes);
    bu_rb_free_package(package);
    bu_free((genptr_t) node, "node list");
}
/** @@} */
/*
 * Local Variables:
 * mode: C
 * tab-width: 8
 * c-basic-offset: 4
 * indent-tabs-mode: t
 * End:
 * ex: shiftwidth=4 tabstop=8
 */
@


14.17
log
@Sweeping license updates.  Documentation is fully relicensed to the BSD Documentation License (a minor variant of the FreeBSD Documentation License and BSD License).  All GPL code (mostly application code) is converted to the LGPL and now also specifically declares version 2.1, revoking the blank check to the FSF.  The intent of these sweeping changes are to simplify the licensing terms and increase overall flexibility of use, both externally (to users for their purposes) and internally (to allow application code to be migrated to libraries without creating GPL libraries).  As a collective work, BRL-CAD is now LGPL.
@
text
@d35 1
a35 1
static char const libbu_rb_delete_RCSid[] = "@@(#) $Header: /cvsroot/brlcad/brlcad/src/libbu/rb_delete.c,v 14.16 2007/01/21 04:45:42 brlcad Exp $";
d70 1
a70 1
        && (bu_rb_get_color(node, order) == BU_RB_BLACK))
@


14.16
log
@ugh, what tedium.  put some effort towards cleaning up the doxygen labels and making the headers more consistent.  also exclusively using @@ for doxygen instead of \ to try to keep things more consistent.
@
text
@d9 1
a9 2
 * as published by the Free Software Foundation; either version 2 of
 * the License, or (at your option) any later version.
d14 1
a14 1
 * Library General Public License for more details.
d35 1
a35 1
static char const libbu_rb_delete_RCSid[] = "@@(#) $Header: /cvsroot/brlcad/brlcad/src/libbu/rb_delete.c,v 14.15 2007/01/20 14:36:51 brlcad Exp $";
@


14.15
log
@update copyright to 2007
@
text
@d21 2
a22 2
/** \addtogroup rb  */
/*@@{*/
d24 1
a26 1
 *
d29 1
a29 1
 * @@par  Source -
d31 1
a31 1
 *@@n	Aberdeen Proving Ground, Maryland  21005-5068  USA
d33 1
a33 1
/*@@}*/
d36 1
a36 1
static char const libbu_rb_delete_RCSid[] = "@@(#) $Header: /cvsroot/brlcad/brlcad/src/libbu/rb_delete.c,v 14.14 2006/08/31 23:16:38 lbutler Exp $";
d224 1
a224 1
/*@@}*/
@


14.14
log
@Doxygen comments
@
text
@d4 1
a4 1
 * Copyright (c) 1998-2006 United States Government as represented by
d36 1
a36 1
static char const libbu_rb_delete_RCSid[] = "@@(#) $Header: /cvsroot/brlcad/brlcad/src/libbu/rb_delete.c,v 14.13 2006/08/31 05:50:25 lbutler Exp $";
@


14.13
log
@Mostly doxygen formatting.
@
text
@d21 1
a21 3
/** \addtogroup rb 
 * \ingroup libbu
 */
a25 2
 *  Author -
 *	Paul J. Tanenbaum
d27 3
a29 1
 *  Source -
d31 1
a31 1
 *	Aberdeen Proving Ground, Maryland  21005-5068  USA
d36 1
a36 1
static char const libbu_rb_delete_RCSid[] = "@@(#) $Header: /cvsroot/brlcad/brlcad/src/libbu/rb_delete.c,v 14.12 2006/02/27 07:42:49 brlcad Exp $";
d50 1
a50 1
/*			B U _ R B _ F I X U P ( )
d118 1
a118 1
/*		        _ R B _ D E L E T E ( )
d175 1
a175 1
/*		        B U _ R B _ D E L E T E ( )
d224 1
a224 1

@


14.12
log
@quell warnings, need stdlib.h for exit routines
@
text
@d21 3
a23 1
/** \addtogroup rb */
d38 1
a38 1
static char const libbu_rb_delete_RCSid[] = "@@(#) $Header: /cvsroot/brlcad/brlcad/src/libbu/rb_delete.c,v 14.11 2006/01/18 06:46:16 brlcad Exp $";
@


14.11
log
@update copyright to 2006
@
text
@d36 1
a36 1
static char const libbu_rb_delete_RCSid[] = "@@(#) $Header: /cvsroot/brlcad/brlcad/src/libbu/rb_delete.c,v 14.10 2005/10/23 04:44:32 brlcad Exp $";
d41 1
a41 2


d44 1
d49 1
d197 1
a197 1
	exit (0);
@


14.10
log
@trailing ws
@
text
@d4 1
a4 1
 * Copyright (C) 1998-2005 United States Government as represented by
d36 1
a36 1
static char const libbu_rb_delete_RCSid[] = "@@(#) $Header: /cvsroot/brlcad/brlcad/src/libbu/rb_delete.c,v 14.9 2005/08/12 22:29:23 lbutler Exp $";
@


14.9
log
@Doxygen changes
@
text
@d28 1
a28 1
 *  
d36 1
a36 1
static char const libbu_rb_delete_RCSid[] = "@@(#) $Header: /cvsroot/brlcad/brlcad/src/libbu/rb_delete.c,v 14.8 2005/01/30 20:30:46 brlcad Exp $";
d144 1
a144 1
    
d149 1
a149 1
    
d157 1
a157 1
    
d166 1
a166 1
    
d209 1
a209 1
	
@


14.9.4.1
log
@merge changes from HEAD aka rel-7-6-4 to the rel-7-6-branch just in case someone peeks a gander or tries to continue/build the branch
@
text
@d28 1
a28 1
 *
d36 1
a36 1
static char const libbu_rb_delete_RCSid[] = "@@(#) $Header$";
d144 1
a144 1

d149 1
a149 1

d157 1
a157 1

d166 1
a166 1

d209 1
a209 1

@


14.8
log
@update copyright to 2005
@
text
@d21 2
d33 2
d36 1
a36 1
static char const libbu_rb_delete_RCSid[] = "@@(#) $Header: /cvsroot/brlcad/brlcad/src/libbu/rb_delete.c,v 14.7 2004/12/21 07:32:30 morrison Exp $";
@


14.7
log
@tidy up a lil bit
@
text
@d4 1
a4 1
 * Copyright (c) 1998-2004 United States Government as represented by
d32 1
a32 1
static char const libbu_rb_delete_RCSid[] = "@@(#) $Header: /cvs/brlcad/src/libbu/rb_delete.c,v 14.6 2004/12/21 06:58:42 morrison Exp $";
@


14.6
log
@remove the old copyright notice section as it's been supplanted (and copyright is now claimable in the us via assignmgent)
@
text
@a29 2
 *  
 *
d32 1
a32 1
static char const libbu_rb_delete_RCSid[] = "@@(#) $Header: /cvs/brlcad/src/libbu/rb_delete.c,v 14.5 2004/12/21 06:44:32 morrison Exp $";
@


14.5
log
@remove the old distribution notice section
@
text
@a31 3
 *  Copyright Notice -
 *	This software is Copyright (C) 1998-2004 by the United States Army
 *	in all countries except the USA.  All rights reserved.
d34 1
a34 1
static char const libbu_rb_delete_RCSid[] = "@@(#) $Header: /cvs/brlcad/src/libbu/rb_delete.c,v 14.4 2004/12/21 06:18:43 morrison Exp $";
@


14.4
log
@they should have received a copy of the LGPL with LGPL'd files
@
text
@a30 4
 *  Distribution Notice -
 *	Re-distribution of this software is restricted, as described in
 *	your "Statement of Terms and Conditions for the Release of
 *	The BRL-CAD Package" agreement.
d37 1
a37 1
static char const libbu_rb_delete_RCSid[] = "@@(#) $Header: /cvs/brlcad/src/libbu/rb_delete.c,v 14.3 2004/12/21 05:45:21 morrison Exp $";
@


14.3
log
@s/GNU Library General/GNU Lesser General/g
@
text
@d17 2
a18 2
 * You should have received a copy of the GNU General Public License
 * along with this file; see the file named COPYING for more
d41 1
a41 1
static char const libbu_rb_delete_RCSid[] = "@@(#) $Header: /cvs/brlcad/src/libbu/rb_delete.c,v 14.2 2004/12/21 03:49:00 morrison Exp $";
@


14.2
log
@assign copyright and LGPL
@
text
@d8 1
a8 1
 * modify it under the terms of the GNU Library General Public License
d41 1
a41 1
static char const libbu_rb_delete_RCSid[] = "@@(#) $Header: /cvs/brlcad/src/libbu/rb_delete.c,v 14.1 2004/11/16 19:42:14 morrison Exp $";
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d1 2
a2 1
/*			R B _ D E L E T E . C
d4 18
d41 1
a41 1
static char const libbu_rb_delete_RCSid[] = "@@(#) $Header: /cvs/brlcad/src/libbu/rb_delete.c,v 1.2 2004/08/02 23:01:48 morrison Exp $";
@


1.2
log
@replace the wrapped config.h block with common.h
@
text
@d22 1
a22 1
static char const libbu_rb_delete_RCSid[] = "@@(#) $Header: /cvs/brlcad/src/libbu/rb_delete.c,v 1.1 2004/05/20 15:19:35 morrison Exp $";
d209 10
@


1.1
log
@Vast reorganization begins.  Sources moved from top-level directories into src/.
@
text
@d22 1
a22 1
static char const libbu_rb_delete_RCSid[] = "@@(#) $Header: /cvs/brlcad/libbu/rb_delete.c,v 11.15 2004/05/10 15:30:44 erikg Exp $";
d25 1
a25 3
#ifdef HAVE_CONFIG_H
# include "config.h"
#endif
@

