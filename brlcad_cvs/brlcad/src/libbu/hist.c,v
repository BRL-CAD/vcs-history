head	14.17;
access;
symbols
	rel-7-10-4:14.15
	STABLE:14.15.0.2
	stable-branch:14.6
	rel-7-10-2:14.15
	rel-7-10-0:14.14
	rel-7-8-4:14.10
	rel-7-8-2:14.9
	rel-7-8-0:14.9
	trimnurbs-branch:14.9.0.2
	help:14.9
	temp_tag:14.8
	bobWinPort-20051223-freeze:14.7
	postmerge-20051223-bobWinPort:14.8
	premerge-20051223-bobWinPort:14.8
	rel-7-6-6:14.8
	rel-7-6-4:14.8
	rel-7-6-2:14.7
	rel-7-6-branch:14.7.0.4
	rel-7-6-0:14.7
	rel-7-4-2:14.6
	rel-7-4-branch:14.6.0.2
	bobWinPort:14.7.0.2
	rel-7-4-0:14.6
	rel-7-2-6:14.6
	rel-7-2-4:14.6
	rel-7-2-2:14.6
	rel-7-2-0:14.6
	rel-7-0-4:14.5
	rel-7-0-2:14.5
	rel-7-0-1:14.5
	opensource-post:14.5
	opensource-pre:1.2
	rel-7-0-branch:1.2.0.2
	rel-7-0:1.2;
locks; strict;
comment	@ * @;


14.17
date	2007.12.16.18.53.48;	author brlcad;	state Exp;
branches;
next	14.16;

14.16
date	2007.09.15.16.23.09;	author brlcad;	state Exp;
branches;
next	14.15;

14.15
date	2007.07.26.01.13.56;	author brlcad;	state Exp;
branches;
next	14.14;

14.14
date	2007.01.27.01.41.36;	author brlcad;	state Exp;
branches;
next	14.13;

14.13
date	2007.01.23.01.13.34;	author brlcad;	state Exp;
branches;
next	14.12;

14.12
date	2007.01.21.04.45.41;	author brlcad;	state Exp;
branches;
next	14.11;

14.11
date	2007.01.20.14.36.51;	author brlcad;	state Exp;
branches;
next	14.10;

14.10
date	2006.08.31.23.16.38;	author lbutler;	state Exp;
branches;
next	14.9;

14.9
date	2006.01.18.06.46.16;	author brlcad;	state Exp;
branches;
next	14.8;

14.8
date	2005.10.23.04.44.32;	author brlcad;	state Exp;
branches;
next	14.7;

14.7
date	2005.08.12.22.29.23;	author lbutler;	state Exp;
branches
	14.7.4.1;
next	14.6;

14.6
date	2005.01.30.20.30.45;	author brlcad;	state Exp;
branches;
next	14.5;

14.5
date	2004.12.21.06.38.20;	author morrison;	state Exp;
branches;
next	14.4;

14.4
date	2004.12.21.06.18.43;	author morrison;	state Exp;
branches;
next	14.3;

14.3
date	2004.12.21.05.45.20;	author morrison;	state Exp;
branches;
next	14.2;

14.2
date	2004.12.21.03.49.00;	author morrison;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.14;	author morrison;	state Exp;
branches;
next	1.2;

1.2
date	2004.08.02.23.01.48;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.20.15.19.32;	author morrison;	state Exp;
branches;
next	;

14.7.4.1
date	2005.11.13.13.46.15;	author brlcad;	state Exp;
branches;
next	;


desc
@@


14.17
log
@convert usages of bcopy to memcpy throughout.  although none of them should be buffers that overlap per machine.h history, all calls were individually checked regardless. new code should not use bzero/bcopy any more.
@
text
@/*                          H I S T . C
 * BRL-CAD
 *
 * Copyright (c) 1990-2007 United States Government as represented by
 * the U.S. Army Research Laboratory.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * version 2.1 as published by the Free Software Foundation.
 *
 * This library is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this file; see the file named COPYING for more
 * information.
 */
/** @@addtogroup bu_hist */
/** @@{ */
/** @@file hist.c
 *
 *  @@brief
 *  General purpose histogram handling routines.
 *
 *  The macro RT_HISTOGRAM_TALLY is used to record items that
 *  live in a single "bin", while the subroutine rt_hist_range()
 *  is used to record items that may extend across multiple "bin"s.
 *
 *  @@author  Michael John Muuss
 *
 */

#ifndef lint
static const char RCShist[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libbu/hist.c,v 14.16 2007/09/15 16:23:09 brlcad Exp $ (BRL)";
#endif

#include "common.h"

#include <stdio.h>
#include <math.h>
#include <string.h>

#include "machine.h"
#include "bu.h"

/**
 *			B U _ H I S T _ F R E E
 */
void
bu_hist_free(struct bu_hist *histp)
{
	if( histp && histp->magic == 0 )  return;
	if( histp->magic == -1 ) return;
	BU_CK_HIST(histp);
	if( histp->hg_bins )
		bu_free( (char *)histp->hg_bins, "old bu_hist bins");
	histp->hg_bins = (long *)0;
	histp->hg_nbins = 0;
	histp->magic = -1;	/* sanity */
}

/**
 *			B U _ H I S T _ I N I T
 *
 *  Initialize a bu_hist structure.
 *  It is expected that the structure is junk upon entry.
 */
void
bu_hist_init(struct bu_hist *histp, fastf_t min, fastf_t max, unsigned int nbins)
{

	if( max <= min )  max = min+1;
	if( nbins < 1 )  {
		nbins = 1;	/* nbins=1 makes for a nice 2-bin binary histogram */
	} else if( nbins > 10000 )  {
		nbins = 10000;	/* This is a lot of lines to print out */
	}

	histp->hg_min = floor(min);
	histp->hg_max = ceil(max);
	histp->hg_nbins = nbins;

	histp->hg_clumpsize = ((max-min)/nbins);
	if( histp->hg_clumpsize <= 0 )  histp->hg_clumpsize = 1;

	histp->hg_nsamples = 0L;
	histp->hg_bins = (long *)bu_calloc( nbins+1, sizeof(long), "bu_hist bins");
	histp->magic = BU_HIST_MAGIC;
}

/**
 *			B U _ H I S T _ R A N G E
 */
void
bu_hist_range(register struct bu_hist *hp, fastf_t low, fastf_t high)
{
	long		a;
	long		b;
	register int	i;

	BU_CK_HIST(hp);
	if( low <= hp->hg_min )
		a = 0;
	else
		a = (low - hp->hg_min) / hp->hg_clumpsize;
	if( high >= hp->hg_max )
		b = hp->hg_nbins-1;
	else
		b = (high - hp->hg_min) / hp->hg_clumpsize;
	if( b >= hp->hg_nbins )  b = hp->hg_nbins-1;

	for( i=a; i <= b; i++ )  {
		hp->hg_bins[i]++;
	}
	hp->hg_nsamples++;
}

/**
 *			B U _ H I S T _ P R _ S U P P R E S S
 *
 *  Allows caller control over zero-suppression feature.
 */
void
bu_hist_pr_suppress(register const struct bu_hist *histp, const char *title, int zero_suppress)
{
	register int	i;
	long		maxcount;
	static const char	marks[] = "################################################################";
#define	NMARKS	50
	char		buf[256];
	int		percent;
	unsigned int	mark_count;
	double		val;
	int		nbins;

	BU_CK_HIST(histp);

	/* Find entry with highest count */
	maxcount = 0L;
	for( i=0; i<=histp->hg_nbins; i++ )  {
		if( histp->hg_bins[i] > maxcount )
			maxcount = histp->hg_bins[i];
	}
	if( maxcount <= 0 )  maxcount = 1;

	nbins = histp->hg_nbins;
	if( zero_suppress )  {
		/* Supress trailing bins with zero counts.  nbins s/b >= 1 */
		for( ; nbins >= 1; nbins-- )
			if(histp->hg_bins[nbins] > 0)  break;
	}

	/* 12345678 12345678 123 .... */
	bu_log("\nHistogram of %s\nmin=%g, max=%g, nbins=%d, clumpsize=%g\n%d samples collected, highest count was %d\n\n Value      Count Rel%%|  Bar Graph\n",
		title,
		histp->hg_min, histp->hg_max,
		histp->hg_nbins, histp->hg_clumpsize,
		histp->hg_nsamples, maxcount );

	/* Print each bin. */
	i = 0;
	if( zero_suppress )  {
		/* Leading bins with zero counts are supressed. */
		for( ; i <= nbins; i++ )  {
			if(histp->hg_bins[i] > 0)  break;
		}
	}
	for( ; i <= nbins; i++ )  {
		percent = (int)(((double)histp->hg_bins[i])*100.0/maxcount);
		mark_count = percent*NMARKS/100;
		if( mark_count <= 0 && histp->hg_bins[i] > 0 )
			mark_count = 1;
		if( mark_count > NMARKS )  {
			bu_log("mark_count = %d, NMARKS=%d, hg_bins[%d]=%d, maxcount\n",
				mark_count, NMARKS, i, histp->hg_bins[i], maxcount);
			bu_bomb("bu_hist_pr() bogus mark_count\n");
		}
		if( mark_count <= 0 )  {
			buf[0] = '\0';
		} else {
			memcpy(buf, marks, mark_count);
			buf[mark_count] = '\0';
		}
		val = histp->hg_min + i*histp->hg_clumpsize;
		bu_log("%8g %8d %3d |%s\n",
			val,
			histp->hg_bins[i], percent, buf );
	}
}

/**
 *			B U _ H I S T _ P R
 *
 *  The original interface.
 */
void
bu_hist_pr(register const struct bu_hist *histp, const char *title)
{
	bu_hist_pr_suppress( histp, title, 1 );
}

/** @@} */

/*
 * Local Variables:
 * mode: C
 * tab-width: 8
 * c-basic-offset: 4
 * indent-tabs-mode: t
 * End:
 * ex: shiftwidth=4 tabstop=8
 */
@


14.16
log
@more c89 embracing.  c89 provides string.h for all of the various str*() and mem*() functions, so remove the check for its presence.  there is still likely to be work required for strict c89 conformance for the various bsd strings.h functions that may be in use.
@
text
@d36 1
a36 1
static const char RCShist[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libbu/hist.c,v 14.15 2007/07/26 01:13:56 brlcad Exp $ (BRL)";
d183 1
a183 1
			bcopy( marks, buf, mark_count );
@


14.15
log
@remove ephemeral data like phone numbers and addresses, including the misleading 'source' statements on code that is continually evolving and receiving contributions from many many sources
@
text
@d36 1
a36 1
static const char RCShist[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libbu/hist.c,v 14.14 2007/01/27 01:41:36 brlcad Exp $ (BRL)";
a40 1

a42 1
#ifdef HAVE_STRING_H
d44 1
a44 1
#endif
@


14.14
log
@ws. lots and lots of ws.  see sh/ws.sh for details (cases 'abcdeg').
@
text
@a32 5
 *  @@par Source -
 *  @@n	SECAD/VLD Computing Consortium, Bldg 394
 *  @@n	The U. S. Army Ballistic Research Laboratory
 *  @@n	Aberdeen Proving Ground, Maryland  21005-5066
 *
d36 1
a36 1
static const char RCShist[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libbu/hist.c,v 14.13 2007/01/23 01:13:34 brlcad Exp $ (BRL)";
@


14.13
log
@Sweeping license updates.  Documentation is fully relicensed to the BSD Documentation License (a minor variant of the FreeBSD Documentation License and BSD License).  All GPL code (mostly application code) is converted to the LGPL and now also specifically declares version 2.1, revoking the blank check to the FSF.  The intent of these sweeping changes are to simplify the licensing terms and increase overall flexibility of use, both externally (to users for their purposes) and internally (to allow application code to be migrated to libraries without creating GPL libraries).  As a collective work, BRL-CAD is now LGPL.
@
text
@d41 1
a41 1
static const char RCShist[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libbu/hist.c,v 14.12 2007/01/21 04:45:41 brlcad Exp $ (BRL)";
a46 1

@


14.12
log
@ugh, what tedium.  put some effort towards cleaning up the doxygen labels and making the headers more consistent.  also exclusively using @@ for doxygen instead of \ to try to keep things more consistent.
@
text
@d9 1
a9 2
 * as published by the Free Software Foundation; either version 2 of
 * the License, or (at your option) any later version.
d14 1
a14 1
 * Library General Public License for more details.
d41 1
a41 1
static const char RCShist[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libbu/hist.c,v 14.11 2007/01/20 14:36:51 brlcad Exp $ (BRL)";
@


14.11
log
@update copyright to 2007
@
text
@d21 2
a22 3

/** \addtogroup bu_hist */
/*@@{*/
d25 1
a25 1
 *@@brief
d42 1
a42 1
static const char RCShist[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libbu/hist.c,v 14.10 2006/08/31 23:16:38 lbutler Exp $ (BRL)";
d213 1
a213 1
/*@@}*/
@


14.10
log
@Doxygen comments
@
text
@d4 1
a4 1
 * Copyright (c) 1990-2006 United States Government as represented by
d43 1
a43 1
static const char RCShist[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libbu/hist.c,v 14.9 2006/01/18 06:46:16 brlcad Exp $ (BRL)";
@


14.9
log
@update copyright to 2006
@
text
@d22 1
a22 1
/** \addtogroup libbu */
d25 2
d33 1
a33 2
 *  Author -
 *	Michael John Muuss
d35 4
a38 4
 *  Source -
 *	SECAD/VLD Computing Consortium, Bldg 394
 *	The U. S. Army Ballistic Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5066
a40 1
/*@@}*/
d43 1
a43 1
static const char RCShist[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libbu/hist.c,v 14.8 2005/10/23 04:44:32 brlcad Exp $ (BRL)";
d58 1
a58 1
/*
d74 1
a74 1
/*
d103 1
a103 1
/*
d130 1
a130 1
/*
d203 1
a203 1
/*
d214 2
@


14.8
log
@trailing ws
@
text
@d4 1
a4 1
 * Copyright (C) 1990-2005 United States Government as represented by
d43 1
a43 1
static const char RCShist[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libbu/hist.c,v 14.7 2005/08/12 22:29:23 lbutler Exp $ (BRL)";
@


14.7
log
@Doxygen changes
@
text
@d33 1
a33 1
 *  
d38 1
a38 1
 *  
d43 1
a43 1
static const char RCShist[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libbu/hist.c,v 14.6 2005/01/30 20:30:45 brlcad Exp $ (BRL)";
@


14.7.4.1
log
@merge changes from HEAD aka rel-7-6-4 to the rel-7-6-branch just in case someone peeks a gander or tries to continue/build the branch
@
text
@d33 1
a33 1
 *
d38 1
a38 1
 *
d43 1
a43 1
static const char RCShist[] = "@@(#)$Header$ (BRL)";
@


14.6
log
@update copyright to 2005
@
text
@d21 3
d25 1
a25 2
 *
 *  General purpose histogram handling routines
d40 2
d43 1
a43 1
static const char RCShist[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libbu/hist.c,v 14.5 2004/12/21 06:38:20 morrison Exp $ (BRL)";
@


14.5
log
@remove the old copyright notice section
@
text
@d4 1
a4 1
 * Copyright (c) 1990-2004 United States Government as represented by
d39 1
a39 1
static const char RCShist[] = "@@(#)$Header: /cvs/brlcad/src/libbu/hist.c,v 14.4 2004/12/21 06:18:43 morrison Exp $ (BRL)";
@


14.4
log
@they should have received a copy of the LGPL with LGPL'd files
@
text
@a36 3
 *  Copyright Notice -
 *	This software is Copyright (C) 1990-2004 by the United States Army.
 *	All rights reserved.
d39 1
a39 1
static const char RCShist[] = "@@(#)$Header: /cvs/brlcad/src/libbu/hist.c,v 14.3 2004/12/21 05:45:20 morrison Exp $ (BRL)";
@


14.3
log
@s/GNU Library General/GNU Lesser General/g
@
text
@d17 2
a18 2
 * You should have received a copy of the GNU General Public License
 * along with this file; see the file named COPYING for more
d42 1
a42 1
static const char RCShist[] = "@@(#)$Header: /cvs/brlcad/src/libbu/hist.c,v 14.2 2004/12/21 03:49:00 morrison Exp $ (BRL)";
@


14.2
log
@assign copyright and LGPL
@
text
@d8 1
a8 1
 * modify it under the terms of the GNU Library General Public License
d42 1
a42 1
static const char RCShist[] = "@@(#)$Header: /cvs/brlcad/src/libbu/hist.c,v 14.1 2004/11/16 19:42:14 morrison Exp $ (BRL)";
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d1 21
a21 2
/*
 *			H I S T . C
d42 1
a42 1
static const char RCShist[] = "@@(#)$Header: /cvs/brlcad/src/libbu/hist.c,v 1.2 2004/08/02 23:01:48 morrison Exp $ (BRL)";
@


1.2
log
@replace the wrapped config.h block with common.h
@
text
@d23 1
a23 1
static const char RCShist[] = "@@(#)$Header: /cvs/brlcad/src/libbu/hist.c,v 1.1 2004/05/20 15:19:32 morrison Exp $ (BRL)";
d193 10
@


1.1
log
@Vast reorganization begins.  Sources moved from top-level directories into src/.
@
text
@d23 1
a23 1
static const char RCShist[] = "@@(#)$Header: /cvs/brlcad/libbu/hist.c,v 1.16 2004/05/10 15:30:44 erikg Exp $ (BRL)";
d26 1
a26 3
#ifdef HAVE_CONFIG_H
# include "config.h"
#endif
@

