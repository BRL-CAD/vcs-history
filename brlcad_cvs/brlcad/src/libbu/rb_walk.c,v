head	14.16;
access;
symbols
	rel-7-10-4:14.16
	STABLE:14.16.0.2
	stable-branch:14.7
	rel-7-10-2:14.16
	rel-7-10-0:14.15
	rel-7-8-4:14.12
	rel-7-8-2:14.11
	rel-7-8-0:14.11
	trimnurbs-branch:14.11.0.2
	help:14.11
	temp_tag:14.9
	bobWinPort-20051223-freeze:14.8
	postmerge-20051223-bobWinPort:14.9
	premerge-20051223-bobWinPort:14.9
	rel-7-6-6:14.9
	rel-7-6-4:14.9
	rel-7-6-2:14.8
	rel-7-6-branch:14.8.0.4
	rel-7-6-0:14.8
	rel-7-4-2:14.7
	rel-7-4-branch:14.7.0.2
	bobWinPort:14.8.0.2
	rel-7-4-0:14.7
	rel-7-2-6:14.7
	rel-7-2-4:14.7
	rel-7-2-2:14.7
	rel-7-2-0:14.7
	rel-7-0-4:14.6
	rel-7-0-2:14.6
	rel-7-0-1:14.6
	opensource-post:14.6
	opensource-pre:1.2
	rel-7-0-branch:1.2.0.2
	rel-7-0:1.2;
locks; strict;
comment	@ * @;


14.16
date	2007.05.14.21.04.31;	author brlcad;	state Exp;
branches;
next	14.15;

14.15
date	2007.01.23.01.13.34;	author brlcad;	state Exp;
branches;
next	14.14;

14.14
date	2007.01.21.04.45.42;	author brlcad;	state Exp;
branches;
next	14.13;

14.13
date	2007.01.20.14.36.51;	author brlcad;	state Exp;
branches;
next	14.12;

14.12
date	2006.08.31.23.16.39;	author lbutler;	state Exp;
branches;
next	14.11;

14.11
date	2006.02.27.07.42.49;	author brlcad;	state Exp;
branches;
next	14.10;

14.10
date	2006.01.18.06.46.16;	author brlcad;	state Exp;
branches;
next	14.9;

14.9
date	2005.10.23.04.44.32;	author brlcad;	state Exp;
branches;
next	14.8;

14.8
date	2005.08.12.22.29.23;	author lbutler;	state Exp;
branches
	14.8.4.1;
next	14.7;

14.7
date	2005.01.30.20.30.46;	author brlcad;	state Exp;
branches;
next	14.6;

14.6
date	2004.12.21.06.58.42;	author morrison;	state Exp;
branches;
next	14.5;

14.5
date	2004.12.21.06.44.32;	author morrison;	state Exp;
branches;
next	14.4;

14.4
date	2004.12.21.06.18.43;	author morrison;	state Exp;
branches;
next	14.3;

14.3
date	2004.12.21.05.45.21;	author morrison;	state Exp;
branches;
next	14.2;

14.2
date	2004.12.21.03.49.00;	author morrison;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.14;	author morrison;	state Exp;
branches;
next	1.2;

1.2
date	2004.08.02.23.01.48;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.20.15.19.35;	author morrison;	state Exp;
branches;
next	;

14.8.4.1
date	2005.11.13.13.46.15;	author brlcad;	state Exp;
branches;
next	;


desc
@@


14.16
log
@gah, pick up where someone left off over half a decade ago.  finish updating all of the compat4 symbols throughout the code to their new names.  finally. it's done.  make the deprecated headers obsolete -- make compat4.h obsolete too so we can be sure that all of the changes are now picked up by the compiler as errors.  this change will likely impact muves if they've similarly not updated to the new names too, so the headers are kept with a #warning for now (though will likely disappear down the road entirely).
@
text
@/*                       R B _ W A L K . C
 * BRL-CAD
 *
 * Copyright (c) 1998-2007 United States Government as represented by
 * the U.S. Army Research Laboratory.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * version 2.1 as published by the Free Software Foundation.
 *
 * This library is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this file; see the file named COPYING for more
 * information.
 */
/** @@addtogroup rb */
/** @@{ */
/** @@file rb_walk.c
 *
 *	    Routines for traversal of red-black trees
 *
 *  @@author -
 *	Paul J. Tanenbaum
 *
 *  @@par Source -
 *	The U. S. Army Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5068  USA
 *
 *	The function bu_rb_walk() is defined in terms of the function
 *	_rb_walk(), which, in turn, calls any of the six functions
 *
 * @@arg		- static void prewalknodes()
 * @@arg		- static void inwalknodes()
 * @@arg		- static void postwalknodes()
 * @@arg		- static void prewalkdata()
 * @@arg		- static void inwalkdata()
 * @@arg		- static void postwalkdata()
 *
 *	depending on the type of traversal desired and the objects
 *	to be visited (nodes themselves, or merely the data stored
 *	in them).  Each of these last six functions has four parameters:
 *	the root of the tree to traverse, the order on which to do the
 *	walking, the function to apply at each visit, and the current
 *	depth in the tree.
 */
/** @@} */

#ifndef lint
static const char libbu_rb_walk_RCSid[] = "@@(#) $Header: /cvsroot/brlcad/brlcad/src/libbu/rb_walk.c,v 14.15 2007/01/23 01:13:34 brlcad Exp $";
#endif

#include "common.h"

#include <stdlib.h>
#include <stdio.h>
#include <math.h>

#include "bu.h"

#include "./rb_internals.h"


/**		        P R E W A L K N O D E S ( )
 *
 *	    Perform a preorder traversal of a red-black tree
 */
static void prewalknodes (struct bu_rb_node *root, int order, void (*visit) (/* ??? */), int depth)
{
    BU_CKMAG(root, BU_RB_NODE_MAGIC, "red-black node");
    BU_RB_CKORDER(root -> rbn_tree, order);

    if (root == bu_rb_null(root -> rbn_tree))
	return;
    visit(root, depth);
    prewalknodes (bu_rb_left_child(root, order), order, visit, depth + 1);
    prewalknodes (bu_rb_right_child(root, order), order, visit, depth + 1);
}

/**		        I N W A L K N O D E S ( )
 *
 *	    Perform an inorder traversal of a red-black tree
 */
static void inwalknodes (struct bu_rb_node *root, int order, void (*visit) (/* ??? */), int depth)
{
    BU_CKMAG(root, BU_RB_NODE_MAGIC, "red-black node");
    BU_RB_CKORDER(root -> rbn_tree, order);

    if (root == bu_rb_null(root -> rbn_tree))
	return;
    inwalknodes (bu_rb_left_child(root, order), order, visit, depth + 1);
    visit(root, depth);
    inwalknodes (bu_rb_right_child(root, order), order, visit, depth + 1);
}

/**		        P O S T W A L K N O D E S ( )
 *
 *	    Perform a postorder traversal of a red-black tree
 */
static void postwalknodes (struct bu_rb_node *root, int order, void (*visit) (/* ??? */), int depth)
{
    BU_CKMAG(root, BU_RB_NODE_MAGIC, "red-black node");
    BU_RB_CKORDER(root -> rbn_tree, order);

    if (root == bu_rb_null(root -> rbn_tree))
	return;
    postwalknodes (bu_rb_left_child(root, order), order, visit, depth + 1);
    postwalknodes (bu_rb_right_child(root, order), order, visit, depth + 1);
    visit(root, depth);
}

/**		        P R E W A L K D A T A ( )
 *
 *	    Perform a preorder traversal of a red-black tree
 */
static void prewalkdata (struct bu_rb_node *root, int order, void (*visit) (/* ??? */), int depth)
{
    BU_CKMAG(root, BU_RB_NODE_MAGIC, "red-black node");
    BU_RB_CKORDER(root -> rbn_tree, order);

    if (root == bu_rb_null(root -> rbn_tree))
	return;
    visit(bu_rb_data(root, order), depth);
    prewalkdata (bu_rb_left_child(root, order), order, visit, depth + 1);
    prewalkdata (bu_rb_right_child(root, order), order, visit, depth + 1);
}

/**		        I N W A L K D A T A ( )
 *
 *	    Perform an inorder traversal of a red-black tree
 */
static void inwalkdata (struct bu_rb_node *root, int order, void (*visit) (/* ??? */), int depth)
{
    BU_CKMAG(root, BU_RB_NODE_MAGIC, "red-black node");
    BU_RB_CKORDER(root -> rbn_tree, order);

    if (root == bu_rb_null(root -> rbn_tree))
	return;
    inwalkdata (bu_rb_left_child(root, order), order, visit, depth + 1);
    visit(bu_rb_data(root, order), depth);
    inwalkdata (bu_rb_right_child(root, order), order, visit, depth + 1);
}

/**		        P O S T W A L K D A T A ( )
 *
 *	    Perform a postorder traversal of a red-black tree
 */
static void postwalkdata (struct bu_rb_node *root, int order, void (*visit) (/* ??? */), int depth)
{
    BU_CKMAG(root, BU_RB_NODE_MAGIC, "red-black node");
    BU_RB_CKORDER(root -> rbn_tree, order);

    if (root == bu_rb_null(root -> rbn_tree))
	return;
    postwalkdata (bu_rb_left_child(root, order), order, visit, depth + 1);
    postwalkdata (bu_rb_right_child(root, order), order, visit, depth + 1);
    visit(bu_rb_data(root, order), depth);
}

/**		        _ R B _ W A L K ( )
 *
 *		    Traverse a red-black tree
 *
 *	This function has five parameters: the tree to traverse,
 *	the order on which to do the walking, the function to apply
 *	to each node, whether to apply the function to the entire node
 *	(or just to its data), and the type of traversal (preorder,
 *	inorder, or postorder).
 *
 *	N.B. _rb_walk() is not declared static because it is called
 *	by bu_rb_diagnose_tree() in rb_diag.c.
 */
void _rb_walk (bu_rb_tree *tree, int order, void (*visit) (/* ??? */), int what_to_visit, int trav_type)
{
    static void (*walk[][3])() =
		{
		    { prewalknodes, inwalknodes, postwalknodes },
		    { prewalkdata, inwalkdata, postwalkdata }
		};

    BU_CKMAG(tree, BU_RB_TREE_MAGIC, "red-black tree");
    BU_RB_CKORDER(tree, order);
    switch (trav_type)
    {
	case PREORDER:
	case INORDER:
	case POSTORDER:
	    switch (what_to_visit)
	    {
		case WALK_NODES:
		case WALK_DATA:
		    (*walk[what_to_visit][trav_type])
			(bu_rb_root(tree, order), order, visit, 0);
		    break;
		default:
		    bu_log("FATAL: _rb_walk(): Illegal visitation object: %d\n",
			what_to_visit);
		    bu_bomb("");
	    }
	    break;
	default:
	    bu_log("FATAL: _rb_walk(): Illegal traversal type: %d\n",
		trav_type);
	    bu_bomb("");
    }
}

/**		        B U _ R B _ W A L K ( )
 *
 *		Applications interface to _rb_walk()
 *
 *	This function has four parameters: the tree to traverse,
 *	the order on which to do the walking, the function to apply
 *	to each node, and the type of traversal (preorder, inorder,
 *	or postorder).
 */
void bu_rb_walk (bu_rb_tree *tree, int order, void (*visit) (/* ??? */), int trav_type)
{
    BU_CKMAG(tree, BU_RB_TREE_MAGIC, "red-black tree");
    BU_RB_CKORDER(tree, order);

    _rb_walk(tree, order, visit, WALK_DATA, trav_type);
}

/** @@} */
/*
 * Local Variables:
 * mode: C
 * tab-width: 8
 * c-basic-offset: 4
 * indent-tabs-mode: t
 * End:
 * ex: shiftwidth=4 tabstop=8
 */
@


14.15
log
@Sweeping license updates.  Documentation is fully relicensed to the BSD Documentation License (a minor variant of the FreeBSD Documentation License and BSD License).  All GPL code (mostly application code) is converted to the LGPL and now also specifically declares version 2.1, revoking the blank check to the FSF.  The intent of these sweeping changes are to simplify the licensing terms and increase overall flexibility of use, both externally (to users for their purposes) and internally (to allow application code to be migrated to libraries without creating GPL libraries).  As a collective work, BRL-CAD is now LGPL.
@
text
@d53 1
a53 1
static const char libbu_rb_walk_RCSid[] = "@@(#) $Header: /cvsroot/brlcad/brlcad/src/libbu/rb_walk.c,v 14.14 2007/01/21 04:45:42 brlcad Exp $";
a61 2
#include "machine.h"
#include "rtlist.h"
d63 1
a63 1
#include "compat4.h"
@


14.14
log
@ugh, what tedium.  put some effort towards cleaning up the doxygen labels and making the headers more consistent.  also exclusively using @@ for doxygen instead of \ to try to keep things more consistent.
@
text
@d9 1
a9 2
 * as published by the Free Software Foundation; either version 2 of
 * the License, or (at your option) any later version.
d14 1
a14 1
 * Library General Public License for more details.
d53 1
a53 1
static const char libbu_rb_walk_RCSid[] = "@@(#) $Header: /cvsroot/brlcad/brlcad/src/libbu/rb_walk.c,v 14.13 2007/01/20 14:36:51 brlcad Exp $";
@


14.13
log
@update copyright to 2007
@
text
@d21 2
a22 3

/** \addtogroup rb */
/*@@{*/
d24 1
a33 4
 *
 *
 *
 *
d51 1
a51 1
/*@@}*/
d54 1
a54 1
static const char libbu_rb_walk_RCSid[] = "@@(#) $Header: /cvsroot/brlcad/brlcad/src/libbu/rb_walk.c,v 14.12 2006/08/31 23:16:39 lbutler Exp $";
d231 1
a231 1
/*@@}*/
@


14.12
log
@Doxygen comments
@
text
@d4 1
a4 1
 * Copyright (c) 1998-2006 United States Government as represented by
d58 1
a58 1
static const char libbu_rb_walk_RCSid[] = "@@(#) $Header: /cvsroot/brlcad/brlcad/src/libbu/rb_walk.c,v 14.11 2006/02/27 07:42:49 brlcad Exp $";
@


14.11
log
@quell warnings, need stdlib.h for exit routines
@
text
@d27 1
a27 1
 *  Author -
d30 1
a30 1
 *  Source -
d41 6
a46 6
 *		- static void prewalknodes()
 *		- static void inwalknodes()
 *		- static void postwalknodes()
 *		- static void prewalkdata()
 *		- static void inwalkdata()
 *		- static void postwalkdata()
d58 1
a58 1
static const char libbu_rb_walk_RCSid[] = "@@(#) $Header: /cvsroot/brlcad/brlcad/src/libbu/rb_walk.c,v 14.10 2006/01/18 06:46:16 brlcad Exp $";
d74 1
a74 1
/*		        P R E W A L K N O D E S ( )
d90 1
a90 1
/*		        I N W A L K N O D E S ( )
d106 1
a106 1
/*		        P O S T W A L K N O D E S ( )
d122 1
a122 1
/*		        P R E W A L K D A T A ( )
d138 1
a138 1
/*		        I N W A L K D A T A ( )
d154 1
a154 1
/*		        P O S T W A L K D A T A ( )
d170 1
a170 1
/*		        _ R B _ W A L K ( )
d218 1
a218 1
/*		        B U _ R B _ W A L K ( )
d235 1
@


14.10
log
@update copyright to 2006
@
text
@d58 1
a58 1
static const char libbu_rb_walk_RCSid[] = "@@(#) $Header: /cvsroot/brlcad/brlcad/src/libbu/rb_walk.c,v 14.9 2005/10/23 04:44:32 brlcad Exp $";
d63 1
a63 2


d66 1
d73 1
d208 1
a208 1
		    exit (1);
d214 1
a214 1
	    exit (1);
@


14.9
log
@trailing ws
@
text
@d4 1
a4 1
 * Copyright (C) 1998-2005 United States Government as represented by
d58 1
a58 1
static const char libbu_rb_walk_RCSid[] = "@@(#) $Header: /cvsroot/brlcad/brlcad/src/libbu/rb_walk.c,v 14.8 2005/08/12 22:29:23 lbutler Exp $";
@


14.8
log
@Doxygen changes
@
text
@d29 1
a29 1
 *  
d33 1
a33 1
 *  
d58 1
a58 1
static const char libbu_rb_walk_RCSid[] = "@@(#) $Header: /cvsroot/brlcad/brlcad/src/libbu/rb_walk.c,v 14.7 2005/01/30 20:30:46 brlcad Exp $";
@


14.8.4.1
log
@merge changes from HEAD aka rel-7-6-4 to the rel-7-6-branch just in case someone peeks a gander or tries to continue/build the branch
@
text
@d29 1
a29 1
 *
d33 1
a33 1
 *
d58 1
a58 1
static const char libbu_rb_walk_RCSid[] = "@@(#) $Header$";
@


14.7
log
@update copyright to 2005
@
text
@d21 3
d41 6
a46 6
 *		static void prewalknodes()
 *		static void inwalknodes()
 *		static void postwalknodes()
 *		static void prewalkdata()
 *		static void inwalkdata()
 *		static void postwalkdata()
d55 2
d58 1
a58 1
static const char libbu_rb_walk_RCSid[] = "@@(#) $Header: /cvsroot/brlcad/brlcad/src/libbu/rb_walk.c,v 14.6 2004/12/21 06:58:42 morrison Exp $";
@


14.6
log
@remove the old copyright notice section as it's been supplanted (and copyright is now claimable in the us via assignmgent)
@
text
@d4 1
a4 1
 * Copyright (c) 1998-2004 United States Government as represented by
d53 1
a53 1
static const char libbu_rb_walk_RCSid[] = "@@(#) $Header: /cvs/brlcad/src/libbu/rb_walk.c,v 14.5 2004/12/21 06:44:32 morrison Exp $";
@


14.5
log
@remove the old distribution notice section
@
text
@a31 3
 *  Copyright Notice -
 *	This software is Copyright (C) 1998-2004 by the United States Army
 *	in all countries except the USA.  All rights reserved.
d53 1
a53 1
static const char libbu_rb_walk_RCSid[] = "@@(#) $Header: /cvs/brlcad/src/libbu/rb_walk.c,v 14.4 2004/12/21 06:18:43 morrison Exp $";
@


14.4
log
@they should have received a copy of the LGPL with LGPL'd files
@
text
@a30 4
 *  Distribution Notice -
 *	Re-distribution of this software is restricted, as described in
 *	your "Statement of Terms and Conditions for the Release of
 *	The BRL-CAD Package" agreement.
d56 1
a56 1
static const char libbu_rb_walk_RCSid[] = "@@(#) $Header: /cvs/brlcad/src/libbu/rb_walk.c,v 14.3 2004/12/21 05:45:21 morrison Exp $";
@


14.3
log
@s/GNU Library General/GNU Lesser General/g
@
text
@d17 2
a18 2
 * You should have received a copy of the GNU General Public License
 * along with this file; see the file named COPYING for more
d60 1
a60 1
static const char libbu_rb_walk_RCSid[] = "@@(#) $Header: /cvs/brlcad/src/libbu/rb_walk.c,v 14.2 2004/12/21 03:49:00 morrison Exp $";
@


14.2
log
@assign copyright and LGPL
@
text
@d8 1
a8 1
 * modify it under the terms of the GNU Library General Public License
d60 1
a60 1
static const char libbu_rb_walk_RCSid[] = "@@(#) $Header: /cvs/brlcad/src/libbu/rb_walk.c,v 14.1 2004/11/16 19:42:14 morrison Exp $";
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d1 2
a2 1
/*			R B _ W A L K . C
d4 18
d60 1
a60 1
static const char libbu_rb_walk_RCSid[] = "@@(#) $Header: /cvs/brlcad/src/libbu/rb_walk.c,v 1.2 2004/08/02 23:01:48 morrison Exp $";
@


1.2
log
@replace the wrapped config.h block with common.h
@
text
@d41 1
a41 1
static const char libbu_rb_walk_RCSid[] = "@@(#) $Header: /cvs/brlcad/src/libbu/rb_walk.c,v 1.1 2004/05/20 15:19:35 morrison Exp $";
d216 10
@


1.1
log
@Vast reorganization begins.  Sources moved from top-level directories into src/.
@
text
@d41 1
a41 1
static const char libbu_rb_walk_RCSid[] = "@@(#) $Header: /cvs/brlcad/libbu/rb_walk.c,v 11.14 2004/05/10 15:30:44 erikg Exp $";
d44 1
a44 3
#ifdef HAVE_CONFIG_H
# include "config.h"
#endif
@

