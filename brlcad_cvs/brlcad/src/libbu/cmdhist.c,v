head	14.19;
access;
symbols
	rel-7-10-4:14.18
	STABLE:14.18.0.2
	stable-branch:14.8
	rel-7-10-2:14.18
	rel-7-10-0:14.18
	rel-7-8-4:14.14
	rel-7-8-2:14.13
	rel-7-8-0:14.13
	trimnurbs-branch:14.11.0.2
	help:14.11
	temp_tag:14.10
	bobWinPort-20051223-freeze:14.9
	postmerge-20051223-bobWinPort:14.10
	premerge-20051223-bobWinPort:14.10
	rel-7-6-6:14.10
	rel-7-6-4:14.10
	rel-7-6-2:14.9
	rel-7-6-branch:14.9.0.4
	rel-7-6-0:14.9
	rel-7-4-2:14.8
	rel-7-4-branch:14.8.0.2
	bobWinPort:14.9.0.2
	rel-7-4-0:14.8
	rel-7-2-6:14.8
	rel-7-2-4:14.8
	rel-7-2-2:14.8
	rel-7-2-0:14.8
	rel-7-0-4:14.7
	rel-7-0-2:14.7
	rel-7-0-1:14.7
	opensource-post:14.7
	opensource-pre:1.3
	rel-7-0-branch:1.3.0.2
	rel-7-0:1.3;
locks; strict;
comment	@ * @;


14.19
date	2007.09.15.16.23.08;	author brlcad;	state Exp;
branches;
next	14.18;

14.18
date	2007.01.27.01.41.36;	author brlcad;	state Exp;
branches;
next	14.17;

14.17
date	2007.01.23.01.13.34;	author brlcad;	state Exp;
branches;
next	14.16;

14.16
date	2007.01.21.04.45.41;	author brlcad;	state Exp;
branches;
next	14.15;

14.15
date	2007.01.20.14.36.51;	author brlcad;	state Exp;
branches;
next	14.14;

14.14
date	2006.08.31.05.50.24;	author lbutler;	state Exp;
branches;
next	14.13;

14.13
date	2006.03.24.22.08.27;	author brlcad;	state Exp;
branches;
next	14.12;

14.12
date	2006.03.24.20.01.31;	author brlcad;	state Exp;
branches;
next	14.11;

14.11
date	2006.01.18.06.46.16;	author brlcad;	state Exp;
branches
	14.11.2.1;
next	14.10;

14.10
date	2005.10.23.04.44.32;	author brlcad;	state Exp;
branches;
next	14.9;

14.9
date	2005.08.12.22.29.23;	author lbutler;	state Exp;
branches
	14.9.4.1;
next	14.8;

14.8
date	2005.01.30.20.30.45;	author brlcad;	state Exp;
branches;
next	14.7;

14.7
date	2004.12.21.07.25.29;	author morrison;	state Exp;
branches;
next	14.6;

14.6
date	2004.12.21.06.58.42;	author morrison;	state Exp;
branches;
next	14.5;

14.5
date	2004.12.21.06.44.32;	author morrison;	state Exp;
branches;
next	14.4;

14.4
date	2004.12.21.06.18.43;	author morrison;	state Exp;
branches;
next	14.3;

14.3
date	2004.12.21.05.45.20;	author morrison;	state Exp;
branches;
next	14.2;

14.2
date	2004.12.21.03.49.00;	author morrison;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.13;	author morrison;	state Exp;
branches;
next	1.3;

1.3
date	2004.08.02.23.01.48;	author morrison;	state Exp;
branches;
next	1.2;

1.2
date	2004.06.08.19.28.49;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.20.15.19.31;	author morrison;	state Exp;
branches;
next	;

14.9.4.1
date	2005.11.13.13.46.15;	author brlcad;	state Exp;
branches;
next	;

14.11.2.1
date	2006.04.07.19.30.15;	author jlowenz;	state Exp;
branches;
next	;


desc
@@


14.19
log
@more c89 embracing.  c89 provides string.h for all of the various str*() and mem*() functions, so remove the check for its presence.  there is still likely to be work required for strict c89 conformance for the various bsd strings.h functions that may be in use.
@
text
@/*                       C M D H I S T . C
 * BRL-CAD
 *
 * Copyright (c) 1998-2007 United States Government as represented by
 * the U.S. Army Research Laboratory.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * version 2.1 as published by the Free Software Foundation.
 *
 * This library is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this file; see the file named COPYING for more
 * information.
 */
/** @@addtogroup butcl */
/** @@{ */
/** @@file cmdhist.c
 *
 * @@brief
 * Routines for maintaining a command history
 *
 * The history routines were borrowed from mged/history.c
 * and modified to work with command history objects.
 *
 *  @@author   Robert G. Parker
 *
 *  @@par Authors of mged/history.c
 *	   Glenn Durfee 				@@n
 *	   Robert G. Parker
 *
 *  @@par Source -
 *	The U. S. Army Research Laboratory			@@n
 *	Aberdeen Proving Ground, Maryland  21005-5068  USA
 *
 */

#include "common.h"

#include <string.h>

#include "tcl.h"

#include "machine.h"
#include "cmd.h"

/*
 *	H I S T O R Y _ R E C O R D
 *
 *	Stores the given command with start and finish times in the
 *	history vls'es.
 */
static void
history_record(struct bu_cmdhist_obj *chop, struct bu_vls *cmdp, struct timeval *start, struct timeval *finish, int status)


		   /* Either TCL_OK or TCL_ERROR */
{
	struct bu_cmdhist *new_hist;

	if (strcmp(bu_vls_addr(cmdp), "\n") == 0)
		return;

	new_hist = (struct bu_cmdhist *)bu_malloc(sizeof(struct bu_cmdhist),
						  "mged history");
	bu_vls_init(&new_hist->h_command);
	bu_vls_vlscat(&new_hist->h_command, cmdp);
	new_hist->h_start = *start;
	new_hist->h_finish = *finish;
	new_hist->h_status = status;
	BU_LIST_INSERT(&chop->cho_head.l, &new_hist->l);

	chop->cho_curr = &chop->cho_head;
}

static int
timediff(struct timeval *tvdiff, struct timeval *start, struct timeval *finish)
{
	if (finish->tv_sec == 0 && finish->tv_usec == 0)
		return -1;
	if (start->tv_sec == 0 && start->tv_usec == 0)
		return -1;

	tvdiff->tv_sec = finish->tv_sec - start->tv_sec;
	tvdiff->tv_usec = finish->tv_usec - start->tv_usec;
	if (tvdiff->tv_usec < 0) {
		--tvdiff->tv_sec;
		tvdiff->tv_usec += 1000000L;
	}

	return 0;
}

/**
 * @@brief
 * Prints out the command history.
 *
 * USAGE:
 *        procname history [-delays] [-outfile filename]
 */
int
bu_cmdhist_history(ClientData clientData, Tcl_Interp *interp, int argc, char **argv)
{
	struct bu_cmdhist_obj *chop = (struct  bu_cmdhist_obj *)clientData;
	FILE *fp;
	int with_delays = 0;
	struct bu_cmdhist *hp, *hp_prev;
	struct bu_vls str;
	struct timeval tvdiff;

	if (argc < 2 || 5 < argc) {
		struct bu_vls vls;

		bu_vls_init(&vls);
		bu_vls_printf(&vls, "help history");
		Tcl_Eval(interp, bu_vls_addr(&vls));
		bu_vls_free(&vls);
		return TCL_ERROR;
	}

	fp = NULL;
	while (argc >= 3)  {
		if (strcmp(argv[2], "-delays") == 0)
			with_delays = 1;
		else if( strcmp(argv[2], "-outfile") == 0 ) {
			if (fp != NULL) {
				fclose(fp);
				Tcl_AppendResult(interp, "history: -outfile option given more than once\n",
						 (char *)NULL);
				return TCL_ERROR;
			} else if (argc < 4 || strcmp(argv[3], "-delays") == 0) {
				Tcl_AppendResult(interp, "history: I need a file name\n", (char *)NULL);
				return TCL_ERROR;
			} else {
				fp = fopen( argv[3], "a+" );
				if (fp == NULL) {
					Tcl_AppendResult(interp, "history: error opening file", (char *)NULL);
					return TCL_ERROR;
				}
				--argc;
				++argv;
			}
		} else {
			Tcl_AppendResult(interp, "Invalid option ", argv[2], "\n", (char *)NULL);
		}
		--argc;
		++argv;
	}

	bu_vls_init(&str);
	for (BU_LIST_FOR(hp, bu_cmdhist, &chop->cho_head.l)) {
		bu_vls_trunc(&str, 0);
		hp_prev = BU_LIST_PREV(bu_cmdhist, &hp->l);
		if (with_delays && BU_LIST_NOT_HEAD(hp_prev, &chop->cho_head.l)) {
			if (timediff(&tvdiff, &(hp_prev->h_finish), &(hp->h_start)) >= 0)
				bu_vls_printf(&str, "delay %ld %ld\n", (long)tvdiff.tv_sec,
					      (long)tvdiff.tv_usec);

		}

		if (hp->h_status == TCL_ERROR)
			bu_vls_printf(&str, "# ");
		bu_vls_vlscat(&str, &(hp->h_command));

		if (fp != NULL)
			bu_vls_fwrite(fp, &str);
		else
			Tcl_AppendResult(interp, bu_vls_addr(&str), (char *)NULL);
	}

	if (fp != NULL)
		fclose(fp);

	return TCL_OK;
}

/**
 * @@brief
 * Add a command to the history list.
 *
 * USAGE:
 *        procname add cmd
 */
int
bu_cmdhist_add(ClientData clientData, Tcl_Interp *interp, int argc, char **argv)
{
	struct bu_cmdhist_obj *chop = (struct  bu_cmdhist_obj *)clientData;
	struct bu_vls vls;
	struct timeval zero;

	if(argc != 3){
		bu_vls_init(&vls);
		bu_vls_printf(&vls, "helplib cmdhist_add");
		Tcl_Eval(interp, bu_vls_addr(&vls));
		bu_vls_free(&vls);
		return TCL_ERROR;
	}

	if (argv[2][0] == '\n' || argv[2][0] == '\0')
		return TCL_OK;

	bu_vls_init(&vls);
	bu_vls_strcpy(&vls, argv[2]);
	if (argv[2][strlen(argv[2])-1] != '\n')
		bu_vls_putc(&vls, '\n');

	zero.tv_sec = zero.tv_usec = 0L;
	history_record(chop, &vls, &zero, &zero, TCL_OK);

	bu_vls_free(&vls);
	return TCL_OK;
}

/**
 * Set the current command to the previous command.
 *
 * USAGE:
 *        procname prev
 */
int
bu_cmdhist_prev(ClientData clientData, Tcl_Interp *interp, int argc, char **argv)
{
	struct bu_cmdhist_obj *chop = (struct  bu_cmdhist_obj *)clientData;
	struct bu_cmdhist *hp;

	if (argc != 2) {
		struct bu_vls vls;

		bu_vls_init(&vls);
		bu_vls_printf(&vls, "helplib cmdhist_prev");
		Tcl_Eval(interp, bu_vls_addr(&vls));
		bu_vls_free(&vls);
		return TCL_ERROR;
	}

	hp = BU_LIST_PLAST(bu_cmdhist, chop->cho_curr);
	if (BU_LIST_NOT_HEAD(hp, &chop->cho_head.l))
		chop->cho_curr = hp;

	Tcl_AppendResult(interp, bu_vls_addr(&chop->cho_curr->h_command), (char *)NULL);
	return TCL_OK;
}

/**
 * Return the current command.
 *
 * USAGE:
 *        procname curr
 */
int
bu_cmdhist_curr(ClientData clientData, Tcl_Interp *interp, int argc, char **argv)
{
	struct bu_cmdhist_obj *chop = (struct  bu_cmdhist_obj *)clientData;

	if (argc != 2) {
		struct bu_vls vls;

		bu_vls_init(&vls);
		bu_vls_printf(&vls, "helplib cmdhist_curr");
		Tcl_Eval(interp, bu_vls_addr(&vls));
		bu_vls_free(&vls);
		return TCL_ERROR;
	}

	if (BU_LIST_NOT_HEAD(chop->cho_curr, &chop->cho_head.l))
		Tcl_AppendResult(interp, bu_vls_addr(&chop->cho_curr->h_command), (char *)NULL);

	return TCL_OK;
}

/**
 * Set the current command to the next command.
 *
 * USAGE:
 *        procname next
 */
int
bu_cmdhist_next(ClientData clientData, Tcl_Interp *interp, int argc, char **argv)
{
	struct bu_cmdhist_obj *chop = (struct  bu_cmdhist_obj *)clientData;

	if (argc != 2) {
		struct bu_vls vls;

		bu_vls_init(&vls);
		bu_vls_printf(&vls, "helplib cmdhist_next");
		Tcl_Eval(interp, bu_vls_addr(&vls));
		bu_vls_free(&vls);
		return TCL_ERROR;
	}

	if (BU_LIST_IS_HEAD(chop->cho_curr, &chop->cho_head.l))
		return TCL_ERROR;

	chop->cho_curr = BU_LIST_PNEXT(bu_cmdhist, chop->cho_curr);
	if (BU_LIST_IS_HEAD(chop->cho_curr, &chop->cho_head.l))
		return TCL_ERROR;

	Tcl_AppendResult(interp, bu_vls_addr(&chop->cho_curr->h_command), (char *)NULL);
	return TCL_OK;
}

#if 0
/**
 *	F _ D E L A Y
 *
 * 	Uses select to delay for the specified amount of seconds and
 *	  microseconds.
 */

int
f_delay(clientData, interp, argc, argv)
     ClientData clientData;
     Tcl_Interp *interp;
     int argc;
     char **argv;
{
	struct timeval tv;

	if(argc < 3 || 3 < argc){
		struct bu_vls vls;

		bu_vls_init(&vls);
		bu_vls_printf(&vls, "help delay");
		Tcl_Eval(interp, bu_vls_addr(&vls));
		bu_vls_free(&vls);
		return TCL_ERROR;
	}

	tv.tv_sec = atoi(argv[1]);
	tv.tv_usec = atoi(argv[2]);
	select(0, NULL, NULL, NULL, &tv);

	return TCL_OK;
}
#endif
/** @@} */
/*
 * Local Variables:
 * mode: C
 * tab-width: 8
 * c-basic-offset: 4
 * indent-tabs-mode: t
 * End:
 * ex: shiftwidth=4 tabstop=8
 */
@


14.18
log
@ws. lots and lots of ws.  see sh/ws.sh for details (cases 'abcdeg').
@
text
@a41 1

a43 2

#ifdef HAVE_STRING_H
a44 1
#endif
@


14.17
log
@Sweeping license updates.  Documentation is fully relicensed to the BSD Documentation License (a minor variant of the FreeBSD Documentation License and BSD License).  All GPL code (mostly application code) is converted to the LGPL and now also specifically declares version 2.1, revoking the blank check to the FSF.  The intent of these sweeping changes are to simplify the licensing terms and increase overall flexibility of use, both externally (to users for their purposes) and internally (to allow application code to be migrated to libraries without creating GPL libraries).  As a collective work, BRL-CAD is now LGPL.
@
text
@d65 1
a65 2

                   /* Either TCL_OK or TCL_ERROR */
@


14.16
log
@ugh, what tedium.  put some effort towards cleaning up the doxygen labels and making the headers more consistent.  also exclusively using @@ for doxygen instead of \ to try to keep things more consistent.
@
text
@d9 1
a9 2
 * as published by the Free Software Foundation; either version 2 of
 * the License, or (at your option) any later version.
d14 1
a14 1
 * Library General Public License for more details.
@


14.15
log
@update copyright to 2007
@
text
@d21 2
a22 3

/** \addtogroup butcl */
/*@@{*/
d25 1
a25 1
 *@@brief
d347 1
a347 1
/*@@}*/
@


14.14
log
@Mostly doxygen formatting.
@
text
@d4 1
a4 1
 * Copyright (c) 1998-2006 United States Government as represented by
@


14.13
log
@quell intel 9 compiler on altix warnings
@
text
@d22 1
a22 1
/** \addtogroup cmd */
d25 4
d32 1
a32 2
 *  Author -
 *	   Robert G. Parker
d34 2
a35 2
 *  Authors of mged/history.c -
 *	   Glenn Durfee
d38 2
a39 2
 *  Source -
 *	The U. S. Army Research Laboratory
d43 1
a43 1
/*@@}*/
d105 2
a106 1
/*
d188 2
a189 1
/*
d225 1
a225 1
/*
d255 1
a255 1
/*
d282 1
a282 1
/*
d315 1
a315 1
/*
d348 1
a348 1

@


14.12
log
@quell compiler warning
@
text
@d163 2
a164 2
				bu_vls_printf(&str, "delay %ld %ld\n", tvdiff.tv_sec,
					      tvdiff.tv_usec);
@


14.11
log
@update copyright to 2006
@
text
@d163 1
a163 1
				bu_vls_printf(&str, "delay %d %d\n", tvdiff.tv_sec,
@


14.11.2.1
log
@update from HEAD
@
text
@d163 2
a164 2
				bu_vls_printf(&str, "delay %ld %ld\n", (long)tvdiff.tv_sec,
					      (long)tvdiff.tv_usec);
@


14.10
log
@trailing ws
@
text
@d4 1
a4 1
 * Copyright (C) 1998-2005 United States Government as represented by
@


14.9
log
@Doxygen changes
@
text
@d38 1
a38 1
 *  
d62 3
a64 3
                                 
                         
                                    
d91 1
a91 1
    
d300 1
a300 1
    
d313 1
a313 1
 * 	Uses select to delay for the specified amount of seconds and 
@


14.9.4.1
log
@merge changes from HEAD aka rel-7-6-4 to the rel-7-6-branch just in case someone peeks a gander or tries to continue/build the branch
@
text
@d38 1
a38 1
 *
d62 3
a64 3



d91 1
a91 1

d300 1
a300 1

d313 1
a313 1
 * 	Uses select to delay for the specified amount of seconds and
@


14.8
log
@update copyright to 2005
@
text
@d21 3
a24 1
 *
d40 1
@


14.7
log
@tidy up a lil bit
@
text
@d4 1
a4 1
 * Copyright (c) 1998-2004 United States Government as represented by
@


14.6
log
@remove the old copyright notice section as it's been supplanted (and copyright is now claimable in the us via assignmgent)
@
text
@a36 2
 *
 *
@


14.5
log
@remove the old distribution notice section
@
text
@a37 3
 *  Copyright Notice -
 *	This software is Copyright (C) 1998-2004 by the United States Army
 *	in all countries except the USA.  All rights reserved.
@


14.4
log
@they should have received a copy of the LGPL with LGPL'd files
@
text
@a36 4
 *  Distribution Notice -
 *	Re-distribution of this software is restricted, as described in
 *	your "Statement of Terms and Conditions for the Release of
 *	The BRL-CAD Package" license agreement.
@


14.3
log
@s/GNU Library General/GNU Lesser General/g
@
text
@d17 2
a18 2
 * You should have received a copy of the GNU General Public License
 * along with this file; see the file named COPYING for more
@


14.2
log
@assign copyright and LGPL
@
text
@d8 1
a8 1
 * modify it under the terms of the GNU Library General Public License
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d1 21
a21 2
/*
 *				C M D H I S T . C
@


1.3
log
@replace the wrapped config.h block with common.h
@
text
@d330 10
@


1.2
log
@poof goes the silly externs.h
@
text
@d29 1
a29 3
#ifdef HAVE_CONFIG_H
# include "config.h"
#endif
@


1.1
log
@Vast reorganization begins.  Sources moved from top-level directories into src/.
@
text
@a40 1
#include "externs.h"
@

