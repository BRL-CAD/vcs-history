head	14.8;
access;
symbols
	rel-7-8-4:14.3;
locks; strict;
comment	@ * @;


14.8
date	2007.02.20.03.37.37;	author brlcad;	state dead;
branches;
next	14.7;

14.7
date	2007.02.20.03.32.40;	author brlcad;	state Exp;
branches;
next	14.6;

14.6
date	2007.01.23.01.13.34;	author brlcad;	state Exp;
branches;
next	14.5;

14.5
date	2007.01.21.04.45.41;	author brlcad;	state Exp;
branches;
next	14.4;

14.4
date	2007.01.20.14.36.51;	author brlcad;	state Exp;
branches;
next	14.3;

14.3
date	2006.09.03.15.14.07;	author lbutler;	state Exp;
branches;
next	14.2;

14.2
date	2006.08.31.05.50.24;	author lbutler;	state Exp;
branches;
next	14.1;

14.1
date	2006.08.16.02.17.16;	author johnranderson;	state Exp;
branches;
next	;


desc
@@


14.8
log
@naming consistency, rename bu_fgets.c to fgets.c
@
text
@/*                      B U _ F G E T S . C
 * BRL-CAD
 *
 * Copyright (c) 2006-2007 United States Government as represented by
 * the U.S. Army Research Laboratory.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * version 2.1 as published by the Free Software Foundation.
 *
 * This library is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this file; see the file named COPYING for more
 * information.
 */
/** @@addtogroup bu_log */
/** @@{ */
/** @@file bu_fgets.c
 *
 * @@brief
 * fgets replacement function that also handles CR as an EOL marker
 *
 * @@Author John Anderson
 *
 * @@par Source
 *	The U. S. Army Research Laboratory			@@n
 *	Aberdeen Proving Ground, Maryland  21005-5068  USA
 */

#ifndef lint
static const char libbu_fgets_RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libbu/bu_fgets.c,v 14.7 2007/02/20 03:32:40 brlcad Exp $ (ARL)";
#endif

#include "common.h"

#include <stdlib.h>
#include <stdio.h>
#include <math.h>
#if HAVE_STRING_H
#  include <string.h>
#else
#  include <strings.h>
#endif

#include "machine.h"
#include "bu.h"


/**
 *			 B U _ F G E T S
 *
 * Reads in at most one less than size characters from stream and
 * stores them into the buffer pointed to by s. Reading stops after an
 * EOF, CR, LF, or a CR/LF combination. If a LF or CR is read, * it is
 * stored into the buffer. If a CR/LF is read, just a CR is * stored
 * into the buffer. A '\\0' is stored after the last * character in
 * the buffer. Returns s on success, and NULL on error or * when end
 * of file occurs while no characters have been read.
 */

char *
bu_fgets(char *s, int size, FILE *stream)
{
    int totBytesRead = 0;
    int isEOF = 0;

    /* if we are not asked to read anything, just return */
    if(size < 1) {
	return s;
    }

    /* if the buffer size is one, we have no space (we add a null)
     * so just return
     */
    if(size == 1) {
	*s = '\0';
	return s;
    }

    /* check for EOF or error */
    if(feof(stream) || ferror(stream)) {
	*s = '\0';
	return (char *)NULL;
    }

    /* actually do some reading */
    while(totBytesRead < size - 1) {
	int c;

	c = fgetc(stream);
	if(c == EOF) {
	    isEOF = 1;
	    break;
	}

	s[totBytesRead++] = c;

	/* check for newline */
	if(c == '\n') {
	    break;
	}

	/* chech for CR */
	if(c == '\r') {

	    /* check for CR/LF combination */
	    c = fgetc(stream);
	    if(c != '\n') {
		/* not a CR/LF, so unget the last char */
		ungetc(c, stream);
	    }

	    break;
	}
    }

    /* add our null */
    s[totBytesRead] = '\0';

    if(isEOF && totBytesRead == 0)
	return (char *)NULL;
    else
	return s;
}
/** @@} */
/*
 * Local Variables:
 * mode: C
 * tab-width: 8
 * c-basic-offset: 4
 * indent-tabs-mode: t
 * End:
 * ex: shiftwidth=4 tabstop=8
 */
@


14.7
log
@ws
@
text
@d35 1
a35 1
static const char libbu_fgets_RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libbu/bu_fgets.c,v 14.6 2007/01/23 01:13:34 brlcad Exp $ (ARL)";
@


14.6
log
@Sweeping license updates.  Documentation is fully relicensed to the BSD Documentation License (a minor variant of the FreeBSD Documentation License and BSD License).  All GPL code (mostly application code) is converted to the LGPL and now also specifically declares version 2.1, revoking the blank check to the FSF.  The intent of these sweeping changes are to simplify the licensing terms and increase overall flexibility of use, both externally (to users for their purposes) and internally (to allow application code to be migrated to libraries without creating GPL libraries).  As a collective work, BRL-CAD is now LGPL.
@
text
@d1 1
a1 1
/*                   B U _ F G E T S
d4 1
a4 1
 * Copyright (c) 1995-2007 United States Government as represented by
d35 1
a35 1
static const char libbu_fgets_RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libbu/bu_fgets.c,v 14.5 2007/01/21 04:45:41 brlcad Exp $ (ARL)";
d45 2
d56 7
a62 7
 *	    Reads in at most one less than size characters from stream and
 *      stores them into the buffer pointed to by s. Reading stops after an
 *      EOF, CR, LF, or a CR/LF combination. If a LF or CR is read,
 *	it is stored into the buffer. If a CR/LF is read, just a CR is
 *	stored into the buffer. A '\\0' is stored after the last
 *	character in the buffer. Returns s on success, and NULL on error or
 *	when end of file occurs while no characters have been read.
d68 2
a69 2
  int totBytesRead = 0;
  int isEOF = 0;
d71 3
a73 27
  /* if we are not asked to read anything, just return */
  if(size < 1) {
      return s;
  }

  /* if the buffer size is one, we have no space (we add a null)
   * so just return
   */
  if(size == 1) {
    *s = '\0';
    return s;
  }

  /* check for EOF or error */
  if(feof(stream) || ferror(stream)) {
      *s = '\0';
      return (char *)NULL;
  }

  /* actually do some reading */
  while(totBytesRead < size - 1) {
    int c;

    c = fgetc(stream);
    if(c == EOF) {
      isEOF = 1;
      break;
d76 7
a82 1
    s[totBytesRead++] = c;
d84 4
a87 3
    /* check for newline */
    if(c == '\n') {
      break;
d90 3
a92 2
    /* chech for CR */
    if(c == '\r') {
a93 1
	/* check for CR/LF combination */
d95 10
a104 3
	if(c != '\n') {
	    /* not a CR/LF, so unget the last char */
	    ungetc(c, stream);
d107 12
a118 1
	break;
a119 1
  }
d121 2
a122 2
  /* add our null */
  s[totBytesRead] = '\0';
d124 4
a127 4
  if(isEOF && totBytesRead == 0)
    return (char *)NULL;
  else
    return s;
@


14.5
log
@ugh, what tedium.  put some effort towards cleaning up the doxygen labels and making the headers more consistent.  also exclusively using @@ for doxygen instead of \ to try to keep things more consistent.
@
text
@d9 1
a9 2
 * as published by the Free Software Foundation; either version 2 of
 * the License, or (at your option) any later version.
d14 1
a14 1
 * Library General Public License for more details.
d35 1
a35 1
static const char libbu_fgets_RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libbu/bu_fgets.c,v 14.4 2007/01/20 14:36:51 brlcad Exp $ (ARL)";
@


14.4
log
@update copyright to 2007
@
text
@d21 2
a22 3

/** \addtogroup bu_log */
/*@@{*/
d24 2
a25 1
 *@@brief
d28 1
a28 1
 *  @@Author John Anderson
d30 1
a30 1
 *  @@par Source
d36 1
a36 1
static const char libbu_fgets_RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libbu/bu_fgets.c,v 14.3 2006/09/03 15:14:07 lbutler Exp $ (ARL)";
d128 1
a128 1
/*@@}*/
@


14.3
log
@Doxygen updates
@
text
@d4 1
a4 1
 * Copyright (c) 1995-2006 United States Government as represented by
d36 1
a36 1
static const char libbu_fgets_RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libbu/bu_fgets.c,v 14.2 2006/08/31 05:50:24 lbutler Exp $ (ARL)";
@


14.2
log
@Mostly doxygen formatting.
@
text
@d25 1
a25 1
 *
d36 1
a36 1
static const char libbu_fgets_RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libbu/bu_fgets.c,v 14.1 2006/08/16 02:17:16 johnranderson Exp $ (ARL)";
@


14.1
log
@Added bu_fgets(). A replacement for fgets() that also recognizes CR as an EOL marker
@
text
@d22 1
a22 1
/** \defgroup libbu libbu */
d25 1
d28 1
a28 2
 *  Author -
 *	John Anderson
d30 2
a31 2
 *  Source -
 *	The U. S. Army Research Laboratory
a33 1
/*@@}*/
d36 1
a36 1
static const char libbu_fgets_RCSid[] = "@@(#)$Header$ (ARL)";
d52 1
a52 1
/*
d59 1
a59 1
 *	stored into the buffer. A '\0' is stored after the last
a61 1
 *
d128 1
a128 1

@

