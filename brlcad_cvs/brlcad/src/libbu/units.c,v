head	14.18;
access;
symbols
	rel-7-10-4:14.17
	STABLE:14.17.0.2
	stable-branch:14.6
	rel-7-10-2:14.17
	rel-7-10-0:14.16
	rel-7-8-4:14.12
	rel-7-8-2:14.11
	rel-7-8-0:14.11
	trimnurbs-branch:14.10.0.2
	help:14.10
	temp_tag:14.9
	bobWinPort-20051223-freeze:14.8
	postmerge-20051223-bobWinPort:14.9
	premerge-20051223-bobWinPort:14.9
	rel-7-6-6:14.9
	rel-7-6-4:14.9
	rel-7-6-2:14.8
	rel-7-6-branch:14.8.0.4
	rel-7-6-0:14.8
	rel-7-4-2:14.7
	rel-7-4-branch:14.7.0.2
	bobWinPort:14.8.0.2
	rel-7-4-0:14.7
	rel-7-2-6:14.6
	rel-7-2-4:14.6
	rel-7-2-2:14.6
	rel-7-2-0:14.6
	rel-7-0-4:14.5
	rel-7-0-2:14.5
	rel-7-0-1:14.5
	opensource-post:14.5
	opensource-pre:1.3
	rel-7-0-branch:1.3.0.2
	rel-7-0:1.3;
locks; strict;
comment	@ * @;


14.18
date	2007.09.15.16.23.09;	author brlcad;	state Exp;
branches;
next	14.17;

14.17
date	2007.07.26.01.13.56;	author brlcad;	state Exp;
branches;
next	14.16;

14.16
date	2007.01.27.01.41.37;	author brlcad;	state Exp;
branches;
next	14.15;

14.15
date	2007.01.23.01.13.34;	author brlcad;	state Exp;
branches;
next	14.14;

14.14
date	2007.01.21.04.45.42;	author brlcad;	state Exp;
branches;
next	14.13;

14.13
date	2007.01.20.14.36.51;	author brlcad;	state Exp;
branches;
next	14.12;

14.12
date	2006.08.31.23.16.39;	author lbutler;	state Exp;
branches;
next	14.11;

14.11
date	2006.03.24.22.08.27;	author brlcad;	state Exp;
branches;
next	14.10;

14.10
date	2006.01.18.06.46.16;	author brlcad;	state Exp;
branches
	14.10.2.1;
next	14.9;

14.9
date	2005.10.23.04.44.32;	author brlcad;	state Exp;
branches;
next	14.8;

14.8
date	2005.08.12.22.29.23;	author lbutler;	state Exp;
branches
	14.8.4.1;
next	14.7;

14.7
date	2005.06.24.19.13.54;	author brlcad;	state Exp;
branches;
next	14.6;

14.6
date	2005.01.30.20.30.46;	author brlcad;	state Exp;
branches;
next	14.5;

14.5
date	2004.12.21.06.38.20;	author morrison;	state Exp;
branches;
next	14.4;

14.4
date	2004.12.21.06.18.43;	author morrison;	state Exp;
branches;
next	14.3;

14.3
date	2004.12.21.05.45.21;	author morrison;	state Exp;
branches;
next	14.2;

14.2
date	2004.12.21.03.49.00;	author morrison;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.14;	author morrison;	state Exp;
branches;
next	1.3;

1.3
date	2004.08.02.23.01.48;	author morrison;	state Exp;
branches;
next	1.2;

1.2
date	2004.06.08.19.28.50;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.20.15.19.36;	author morrison;	state Exp;
branches;
next	;

14.8.4.1
date	2005.11.13.13.46.15;	author brlcad;	state Exp;
branches;
next	;

14.10.2.1
date	2006.04.07.19.30.15;	author jlowenz;	state Exp;
branches;
next	;


desc
@@


14.18
log
@more c89 embracing.  c89 provides string.h for all of the various str*() and mem*() functions, so remove the check for its presence.  there is still likely to be work required for strict c89 conformance for the various bsd strings.h functions that may be in use.
@
text
@/*                         U N I T S . C
 * BRL-CAD
 *
 * Copyright (c) 1990-2007 United States Government as represented by
 * the U.S. Army Research Laboratory.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * version 2.1 as published by the Free Software Foundation.
 *
 * This library is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this file; see the file named COPYING for more
 * information.
 */
/** @@addtogroup bu_log */
/** @@{ */
/** @@file units.c
 *
 *  Module of libbu to handle units conversion between strings and mm.
 *
 *  @@author
 *	Michael John Muuss
 *
 */
/** @@} */

#ifndef lint
static const char libbu_units_RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libbu/units.c,v 14.17 2007/07/26 01:13:56 brlcad Exp $ (BRL)";
#endif

#include "common.h"

#include <stdlib.h>
#include <stdio.h>
#include <ctype.h>
#include <string.h>

#include "machine.h"
#include "bu.h"

static const struct cvt_tab {
	double	val;
	char	name[32];
} bu_units_tab[] = {
	{0.0,		"none"},
	{1.0e-7,	"angstrom"},
	{1.0e-7,	"decinanometer"},
	{1.0e-6,	"nm"},
	{1.0e-6,	"nanometer"},
	{1.0e-3,	"um"},
	{1.0e-3,	"micrometer"},
	{1.0e-3,	"micron"},
	{1.0,		"mm"},
	{1.0,		"millimeter"},
	{10.0,		"cm"},
	{10.0,		"centimeter"},
	{1000.0,	"m"},
	{1000.0,	"meter"},
	{1000000.0,	"km"},
	{1000000.0,	"kilometer"},
	{25.4,		"in"},
	{25.4,		"inch"},
	{25.4,		"inche"},		/* for plural */
	{304.8,		"ft"},
	{304.8,		"foot"},
	{304.8,		"feet"},
	{456.2,		"cubit"},
	{914.4,		"yd"},
	{914.4,		"yard"},
	{5029.2,	"rd"},
	{5029.2,	"rod"},
	{1609344.0,	"mi"},
	{1609344.0,	"mile"},
	{1852000.0,	"nmile"},
	{1852000.0,	"nautical mile"},
	{1.495979e+14,	"AU"},
	{1.495979e+14,	"astronomical unit"},
	{9.460730e+18,	"lightyear"},
	{3.085678e+19,	"pc"},
	{3.085678e+19,	"parsec"},
	{0.0,		""}			/* LAST ENTRY */
};
#define BU_UNITS_TABLE_SIZE (sizeof(bu_units_tab) / sizeof(struct cvt_tab) - 1)

/**
 *			B U _ U N I T S _ C O N V E R S I O N
 *
 *  Given a string representation of a unit of distance (eg, "feet"),
 *  return the multiplier which will convert that unit into millimeters.
 *
 *  Returns -
 *	0.0	error
 *	>0.0	success
 */
double
bu_units_conversion(const char *str)
{
	register char	*ip;
	register int	c;
	register const struct cvt_tab	*tp;
	char		ubuf[256];
	int		len;

	strncpy( ubuf, str, sizeof(ubuf)-1 );
	ubuf[sizeof(ubuf)-1] = '\0';

	/* Copy the given string, making it lower case */
	ip = ubuf;
	while( (c = *ip) )  {
		if( !isascii(c) )
			*ip++ = '_';
		else if( isupper(c) )
			*ip++ = tolower(c);
		else
			ip++;
	}

	/* Remove any trailing "s" (plural) */
	len = strlen(ubuf);
	if( ubuf[len-1] == 's' )  ubuf[len-1] = '\0';

	/* Search for this string in the table */
	for( tp=bu_units_tab; tp->name[0]; tp++ )  {
		if( ubuf[0] != tp->name[0] )  continue;
		if( strcmp( ubuf, tp->name ) != 0 )  continue;
		return( tp->val );
	}
	return(0.0);		/* Unable to find it */
}

/**
 *			B U _ U N I T S _ S T R I N G
 *
 *  Given a conversion factor to mm, search the table to find
 *  what unit this represents.
 *  To accomodate floating point fuzz, a "near miss" is allowed.
 *  The algorithm depends on the table being sorted small-to-large.
 *
 *  Returns -
 *	char*	units string
 *	NULL	No known unit matches this conversion factor.
 */
const char *
bu_units_string(register const double mm)
{
	register const struct cvt_tab	*tp;

	if( mm <= 0 )  return (char *)NULL;

	/* Search for this string in the table */
	for( tp=bu_units_tab; tp->name[0]; tp++ )  {
		fastf_t	diff, bigger;
		if( mm == tp->val )  return tp->name;

		/* Check for near-miss */
		if( mm > tp->val )  {
			bigger = mm;
			diff = mm - tp->val;
		}  else  {
			bigger = tp->val;
			diff = tp->val - mm;
		}

		/* Absolute difference less than 0.1 angstrom */
		if( diff < 1.0e-8 )  return tp->name;

		/* Relative difference less than 1 part per billion */
		if( diff < 0.000000001 * bigger )  return tp->name;
	}
	return (char *)NULL;
}

/**
 *			B U _ M M _ V A L U E
 *
 * Given a string of the form "25cm" or "5.2ft" returns the
 * corresponding distance in mm.
 *
 *  Returns -
 *	-1	on error
 *	>0	on success
 */
double
bu_mm_value(const char *s)
{
	double v;
	char *ptr;
	register const struct cvt_tab	*tp;

	v = strtod(s, &ptr);

	if (ptr == s)  {
		/* No number could be found, unity is implied */
		/* e.g. interprept "ft" as "1ft" */
		v = 1.0;
	}
	if ( ! *ptr)  {
		/* There are no characters following the scaned number */
		return v;
	}

	for (tp=bu_units_tab; tp->name[0]; tp++ )  {
		if( *ptr != tp->name[0] )  continue;
		if( strcmp( ptr, tp->name ) == 0 ) {
			v *= tp->val;
			return v;
		}
	}

	/* A string was seen, but not found in the table.  Signal error */
	return -1;
}

/**	B U _ M M _ C V T
 *
 *  Used primarily as a hooked function for bu_structparse tables
 *  to allow input of floating point values in other units.
 */
void
bu_mm_cvt(register const struct bu_structparse *sdp, register const char *name, char *base, const char *value)
						/* structure description */
						/* struct member name */
						/* begining of structure */
						/* string containing value */
{
	register double *p = (double *)(base+sdp->sp_offset);

	/* reconvert with optional units */
	*p = bu_mm_value(value);
}
/** @@} */
/*
 * Local Variables:
 * mode: C
 * tab-width: 8
 * c-basic-offset: 4
 * indent-tabs-mode: t
 * End:
 * ex: shiftwidth=4 tabstop=8
 */
@


14.17
log
@remove ephemeral data like phone numbers and addresses, including the misleading 'source' statements on code that is continually evolving and receiving contributions from many many sources
@
text
@d33 1
a33 1
static const char libbu_units_RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libbu/units.c,v 14.16 2007/01/27 01:41:37 brlcad Exp $ (BRL)";
d41 1
a41 6

#ifdef HAVE_STRING_H
#  include <string.h>
#else
#  include <strings.h>
#endif
@


14.16
log
@ws. lots and lots of ws.  see sh/ws.sh for details (cases 'abcdeg').
@
text
@a28 5
 *  @@par Source -
 *	SECAD/VLD Computing Consortium, Bldg 394
 *  @@n	The U. S. Army Ballistic Research Laboratory
 *  @@n	Aberdeen Proving Ground, Maryland  21005-5066
 *
d33 1
a33 1
static const char libbu_units_RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libbu/units.c,v 14.15 2007/01/23 01:13:34 brlcad Exp $ (BRL)";
@


14.15
log
@Sweeping license updates.  Documentation is fully relicensed to the BSD Documentation License (a minor variant of the FreeBSD Documentation License and BSD License).  All GPL code (mostly application code) is converted to the LGPL and now also specifically declares version 2.1, revoking the blank check to the FSF.  The intent of these sweeping changes are to simplify the licensing terms and increase overall flexibility of use, both externally (to users for their purposes) and internally (to allow application code to be migrated to libraries without creating GPL libraries).  As a collective work, BRL-CAD is now LGPL.
@
text
@d38 1
a38 1
static const char libbu_units_RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libbu/units.c,v 14.14 2007/01/21 04:45:42 brlcad Exp $ (BRL)";
d236 4
a239 4
                                    	     	/* structure description */
                   			      	/* struct member name */
    					      	/* begining of structure */
          				       	/* string containing value */
@


14.14
log
@ugh, what tedium.  put some effort towards cleaning up the doxygen labels and making the headers more consistent.  also exclusively using @@ for doxygen instead of \ to try to keep things more consistent.
@
text
@d9 1
a9 2
 * as published by the Free Software Foundation; either version 2 of
 * the License, or (at your option) any later version.
d14 1
a14 1
 * Library General Public License for more details.
d38 1
a38 1
static const char libbu_units_RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libbu/units.c,v 14.13 2007/01/20 14:36:51 brlcad Exp $ (BRL)";
@


14.13
log
@update copyright to 2007
@
text
@d21 2
a22 4

/** \addtogroup bu_log */
/*@@{*/

d24 1
d32 2
a33 2
 * @@n	The U. S. Army Ballistic Research Laboratory
 * @@n	Aberdeen Proving Ground, Maryland  21005-5066
d36 1
a36 1
/*@@}*/
d39 1
a39 1
static const char libbu_units_RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libbu/units.c,v 14.12 2006/08/31 23:16:39 lbutler Exp $ (BRL)";
d247 1
a247 1
/*@@}*/
@


14.12
log
@Doxygen comments
@
text
@d4 1
a4 1
 * Copyright (c) 1990-2006 United States Government as represented by
d40 1
a40 1
static const char libbu_units_RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libbu/units.c,v 14.11 2006/03/24 22:08:27 brlcad Exp $ (BRL)";
@


14.11
log
@quell intel 9 compiler on altix warnings
@
text
@d22 1
a22 1
/** \addtogroup libbu */
d28 1
a28 1
 *  Author -
d31 1
a31 1
 *  Source -
d33 2
a34 2
 *	The U. S. Army Ballistic Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5066
d40 1
a40 1
static const char libbu_units_RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libbu/units.c,v 14.10 2006/01/18 06:46:16 brlcad Exp $ (BRL)";
d102 1
a102 1
/*
d148 1
a148 1
/*
d190 1
a190 1
/*
d231 1
a231 1
/*	B U _ M M _ C V T
d248 1
a248 1

@


14.10
log
@update copyright to 2006
@
text
@d40 1
a40 1
static const char libbu_units_RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libbu/units.c,v 14.9 2005/10/23 04:44:32 brlcad Exp $ (BRL)";
d45 1
@


14.10.2.1
log
@update from HEAD
@
text
@d40 1
a40 1
static const char libbu_units_RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libbu/units.c,v 14.10 2006/01/18 06:46:16 brlcad Exp $ (BRL)";
a44 1
#include <stdlib.h>
@


14.9
log
@trailing ws
@
text
@d4 1
a4 1
 * Copyright (C) 1990-2005 United States Government as represented by
d40 1
a40 1
static const char libbu_units_RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libbu/units.c,v 14.8 2005/08/12 22:29:23 lbutler Exp $ (BRL)";
@


14.8
log
@Doxygen changes
@
text
@d30 1
a30 1
 *  
d35 1
a35 1
 *  
d40 1
a40 1
static const char libbu_units_RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libbu/units.c,v 14.7 2005/06/24 19:13:54 brlcad Exp $ (BRL)";
d192 1
a192 1
 * Given a string of the form "25cm" or "5.2ft" returns the 
d203 1
a203 1
	char *ptr;	
@


14.8.4.1
log
@merge changes from HEAD aka rel-7-6-4 to the rel-7-6-branch just in case someone peeks a gander or tries to continue/build the branch
@
text
@d30 1
a30 1
 *
d35 1
a35 1
 *
d40 1
a40 1
static const char libbu_units_RCSid[] = "@@(#)$Header$ (BRL)";
d192 1
a192 1
 * Given a string of the form "25cm" or "5.2ft" returns the
d203 1
a203 1
	char *ptr;
@


14.7
log
@ws
@
text
@d21 4
a25 1
 * 
d37 2
d40 1
a40 1
static const char libbu_units_RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libbu/units.c,v 14.6 2005/01/30 20:30:46 brlcad Exp $ (BRL)";
@


14.6
log
@update copyright to 2005
@
text
@d35 1
a35 1
static const char libbu_units_RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libbu/units.c,v 14.5 2004/12/21 06:38:20 morrison Exp $ (BRL)";
a39 2


d44 1
a44 1
#include <string.h>
d46 1
a46 1
#include <strings.h>
@


14.5
log
@remove the old copyright notice section
@
text
@d4 1
a4 1
 * Copyright (c) 1990-2004 United States Government as represented by
d35 1
a35 1
static const char libbu_units_RCSid[] = "@@(#)$Header: /cvs/brlcad/src/libbu/units.c,v 14.4 2004/12/21 06:18:43 morrison Exp $ (BRL)";
@


14.4
log
@they should have received a copy of the LGPL with LGPL'd files
@
text
@a32 3
 *  Copyright Notice -
 *	This software is Copyright (C) 1990-2004 by the United States Army.
 *	All rights reserved.
d35 1
a35 1
static const char libbu_units_RCSid[] = "@@(#)$Header: /cvs/brlcad/src/libbu/units.c,v 14.3 2004/12/21 05:45:21 morrison Exp $ (BRL)";
@


14.3
log
@s/GNU Library General/GNU Lesser General/g
@
text
@d17 2
a18 2
 * You should have received a copy of the GNU General Public License
 * along with this file; see the file named COPYING for more
d38 1
a38 1
static const char libbu_units_RCSid[] = "@@(#)$Header: /cvs/brlcad/src/libbu/units.c,v 14.2 2004/12/21 03:49:00 morrison Exp $ (BRL)";
@


14.2
log
@assign copyright and LGPL
@
text
@d8 1
a8 1
 * modify it under the terms of the GNU Library General Public License
d38 1
a38 1
static const char libbu_units_RCSid[] = "@@(#)$Header: /cvs/brlcad/src/libbu/units.c,v 14.1 2004/11/16 19:42:14 morrison Exp $ (BRL)";
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d1 21
a21 2
/*
 *			U N I T S . C
d38 1
a38 1
static const char libbu_units_RCSid[] = "@@(#)$Header: /cvs/brlcad/src/libbu/units.c,v 1.3 2004/08/02 23:01:48 morrison Exp $ (BRL)";
@


1.3
log
@replace the wrapped config.h block with common.h
@
text
@d19 1
a19 1
static const char libbu_units_RCSid[] = "@@(#)$Header: /cvs/brlcad/src/libbu/units.c,v 1.2 2004/06/08 19:28:50 morrison Exp $ (BRL)";
d228 10
@


1.2
log
@poof goes the silly externs.h
@
text
@d19 1
a19 1
static const char libbu_units_RCSid[] = "@@(#)$Header$ (BRL)";
d22 1
a22 3
#ifdef HAVE_CONFIG_H
# include "config.h"
#endif
@


1.1
log
@Vast reorganization begins.  Sources moved from top-level directories into src/.
@
text
@d19 1
a19 1
static const char libbu_units_RCSid[] = "@@(#)$Header: /cvs/brlcad/libbu/units.c,v 1.18 2004/05/10 15:30:44 erikg Exp $ (BRL)";
a37 1
#include "externs.h"	/* needed for things like strtod() */
@

