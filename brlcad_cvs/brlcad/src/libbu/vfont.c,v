head	14.22;
access;
symbols
	rel-7-10-4:14.22
	STABLE:14.22.0.2
	stable-branch:14.7
	rel-7-10-2:14.22
	rel-7-10-0:14.20
	rel-7-8-4:14.15
	rel-7-8-2:14.13
	rel-7-8-0:14.13
	trimnurbs-branch:14.13.0.2
	help:14.13
	temp_tag:14.11
	bobWinPort-20051223-freeze:14.9
	postmerge-20051223-bobWinPort:14.11
	premerge-20051223-bobWinPort:14.11
	rel-7-6-6:14.11
	rel-7-6-4:14.11
	rel-7-6-2:14.9
	rel-7-6-branch:14.9.0.4
	rel-7-6-0:14.9
	rel-7-4-2:14.8
	rel-7-4-branch:14.8.0.2
	bobWinPort:14.9.0.2
	rel-7-4-0:14.8
	rel-7-2-6:14.7
	rel-7-2-4:14.7
	rel-7-2-2:14.7
	rel-7-2-0:14.7
	rel-7-0-4:14.6
	rel-7-0-2:14.6
	rel-7-0-1:14.5
	opensource-post:14.5
	opensource-pre:1.4
	rel-7-0-branch:1.4.0.2
	rel-7-0:1.4;
locks; strict;
comment	@ * @;


14.22
date	2007.07.26.01.13.56;	author brlcad;	state Exp;
branches;
next	14.21;

14.21
date	2007.05.31.18.41.22;	author erikgreenwald;	state Exp;
branches;
next	14.20;

14.20
date	2007.03.14.08.47.36;	author brlcad;	state Exp;
branches;
next	14.19;

14.19
date	2007.01.27.01.41.37;	author brlcad;	state Exp;
branches;
next	14.18;

14.18
date	2007.01.23.01.13.34;	author brlcad;	state Exp;
branches;
next	14.17;

14.17
date	2007.01.21.04.45.42;	author brlcad;	state Exp;
branches;
next	14.16;

14.16
date	2007.01.20.14.36.51;	author brlcad;	state Exp;
branches;
next	14.15;

14.15
date	2006.09.03.15.14.07;	author lbutler;	state Exp;
branches;
next	14.14;

14.14
date	2006.08.31.23.16.39;	author lbutler;	state Exp;
branches;
next	14.13;

14.13
date	2006.01.22.18.37.40;	author brlcad;	state Exp;
branches;
next	14.12;

14.12
date	2006.01.18.06.46.16;	author brlcad;	state Exp;
branches;
next	14.11;

14.11
date	2005.10.23.04.44.32;	author brlcad;	state Exp;
branches;
next	14.10;

14.10
date	2005.09.09.09.44.08;	author brlcad;	state Exp;
branches;
next	14.9;

14.9
date	2005.08.12.22.29.23;	author lbutler;	state Exp;
branches
	14.9.4.1;
next	14.8;

14.8
date	2005.07.08.00.05.04;	author brlcad;	state Exp;
branches;
next	14.7;

14.7
date	2005.01.30.20.30.46;	author brlcad;	state Exp;
branches;
next	14.6;

14.6
date	2004.12.24.01.58.48;	author brlcad;	state Exp;
branches;
next	14.5;

14.5
date	2004.12.21.07.18.57;	author morrison;	state Exp;
branches;
next	14.4;

14.4
date	2004.12.21.06.18.43;	author morrison;	state Exp;
branches;
next	14.3;

14.3
date	2004.12.21.05.45.21;	author morrison;	state Exp;
branches;
next	14.2;

14.2
date	2004.12.21.03.49.00;	author morrison;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.14;	author morrison;	state Exp;
branches;
next	1.4;

1.4
date	2004.10.14.21.59.12;	author morrison;	state Exp;
branches;
next	1.3;

1.3
date	2004.08.02.23.01.48;	author morrison;	state Exp;
branches;
next	1.2;

1.2
date	2004.06.08.19.28.50;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.20.15.19.36;	author morrison;	state Exp;
branches;
next	;

14.9.4.1
date	2005.11.13.13.46.15;	author brlcad;	state Exp;
branches;
next	;


desc
@@


14.22
log
@remove ephemeral data like phone numbers and addresses, including the misleading 'source' statements on code that is continually evolving and receiving contributions from many many sources
@
text
@/*                         V F O N T . C
 * BRL-CAD
 *
 * Copyright (c) 2004-2007 United States Government as represented by
 * the U.S. Army Research Laboratory.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * version 2.1 as published by the Free Software Foundation.
 *
 * This library is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this file; see the file named COPYING for more
 * information.
 */
/** @@addtogroup vfont */
/** @@{ */
/** @@file vfont.c
 *
 * @@brief Berkely Vector Fonts
 *
 *	Provide a machine-independent interface to files containing
 *	Berkeley VFONT format fonts, stored with VAX byte ordering
 *	and word alignment.
 *
 *  @@author
 *	Michael John Muuss
 *
 */


#ifndef lint
static const char libbu_vfont_RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libbu/vfont.c,v 14.21 2007/05/31 18:41:22 erikgreenwald Exp $ (BRL)";
#endif

#include "common.h"

#include <stdio.h>
#include "machine.h"
#include "vfont-if.h"
#include "bu.h"

#define FONTDIR2	"/usr/lib/vfont"
#define DEFAULT_FONT	"nonie.r.12"
#define FONTNAMESZ	128

/*
 * Forward Definitions
 */
static int vax_gshort(unsigned char *);

/**
 *			V F O N T _ G E T
 *
 *  Fetch the named font, and return a struct vfont pointer.
 *
 *  First the filename provided is used, then the BRL-CAD font
 *  directory is searched (for places where "system" directories
 *  are considered sacred), and then finally the ordinary
 *  font directory is searched.
 *
 *  The font files are treated as pure byte streams, and are expected
 *  to be in VAX order.
 *
 *  VFONT_NULL is returned on error.  On ordinary errors, the function
 *  is silent.  On extraordinary errors, a remark is placed on stderr.
 */
struct vfont *
vfont_get(char *font)
{
	register struct vfont	*vfp = VFONT_NULL;
	register FILE		*fp = NULL;
	register int	i;
	char		fname[FONTNAMESZ];
	unsigned char	header[2*5];		/* 5 16-bit vax shorts */
	unsigned char	dispatch[10*256];	/* 256 10-byte structs */
	int		magic;
	int		size;

	if( font == NULL )
		font = DEFAULT_FONT;

	/* Open the file and read in the header information. */
	if( (fp = fopen( font, "r" )) == NULL )  {
		snprintf( fname, FONTNAMESZ, "%s/%s", (char *)bu_brlcad_data("vfont", 0), font );
		if( (fp = fopen( fname, "r" )) == NULL )  {
			snprintf( fname, FONTNAMESZ, "%s/%s", FONTDIR2, font );
			if( (fp = fopen( fname, "r" )) == NULL )  {
				return(VFONT_NULL);
			}
		}
	}
	if( fread( (char *)header, sizeof(header), 1, fp ) != 1 ||
	    fread( (char *)dispatch, sizeof(dispatch), 1, fp ) != 1 )  {
		fprintf(stderr, "vfont_get(%s):  header read error\n", fname );
		fclose(fp);
		return(VFONT_NULL);
	}
	magic = vax_gshort( &header[0*2] ) & 0xFFFF;
	size = vax_gshort( &header[1*2] ) & 0xFFFF;	/* unsigned short */

	if( magic != 0436 )  {
		fprintf(stderr, "vfont_get(%s):  bad magic number 0%o\n",
			fname, magic );
		fclose(fp);
		return(VFONT_NULL);
	}

	/* Read in the bit maps */
	vfp = (struct vfont *)bu_malloc(sizeof(struct vfont), "vfont");
	vfp->vf_bits = (char *)bu_malloc(size, "vfont bits");
	if( fread( vfp->vf_bits, size, 1, fp ) != 1 )  {
		fprintf(stderr,"vfont_get(%s):  bitmap read error\n", fname );
		fclose(fp);
		bu_free( vfp->vf_bits, "vfont bits" );
		bu_free( (char *)vfp, "vfont" );
		return(VFONT_NULL);
	}

	/*
	 *  Convert VAX data in header[] and dispatch[] arrays to
	 *  native machine form.
	 */
	vfp->vf_maxx = vax_gshort( &header[2*2] );
	vfp->vf_maxy = vax_gshort( &header[3*2] );
	vfp->vf_xtend = vax_gshort( &header[4*2] );

	for( i=0; i<255; i++ )  {
		register struct vfont_dispatch	*vdp = &(vfp->vf_dispatch[i]);
		register unsigned char		*cp = &dispatch[i*10];

		vdp->vd_addr = vax_gshort( &cp[0] );
		vdp->vd_nbytes = vax_gshort( &cp[2] );
		vdp->vd_up = SXT( cp[4] );
		vdp->vd_down = SXT( cp[5] );
		vdp->vd_left = SXT( cp[6] );
		vdp->vd_right = SXT( cp[7] );
		vdp->vd_width = vax_gshort( &cp[8] );
	}
	fclose(fp);
	return(vfp);
}

/**
 *			V A X _ G S H O R T
 *
 *  Obtain a 16-bit signed integer from two adjacent characters,
 *  stored in VAX order, regardless of word alignment.
 */
static int
vax_gshort(unsigned char *msgp)
{
	register unsigned char *p = (unsigned char *) msgp;
	register int	i;

	if( (i = (p[1] << 8) | p[0]) & 0x8000 )
		return(i | ~0xFFFF);	/* Sign extend */
	return(i);
}

/**
 *			V F O N T _ F R E E
 *
 *  Return the storage associated with a struct vfont
 */
void
vfont_free(register struct vfont *vfp)
{
	bu_free( vfp->vf_bits, "vfont bits" );
	bu_free( (char *)vfp, "vfont" );
}
/** @@} */
/*
 * Local Variables:
 * mode: C
 * tab-width: 8
 * c-basic-offset: 4
 * indent-tabs-mode: t
 * End:
 * ex: shiftwidth=4 tabstop=8
 */
@


14.21
log
@some sprintf->snprintf
@
text
@a32 4
 *  @@par Source -
 *	SECAD/VLD Computing Consortium, Bldg 394
 *@@n	The U. S. Army Ballistic Research Laboratory
 *@@n	Aberdeen Proving Ground, Maryland  21005-5066
d37 1
a37 1
static const char libbu_vfont_RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libbu/vfont.c,v 14.20 2007/03/14 08:47:36 brlcad Exp $ (BRL)";
@


14.20
log
@bu_malloc is guaranteed to never return NULL, so remove the unnecessary checks
@
text
@d41 1
a41 1
static const char libbu_vfont_RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libbu/vfont.c,v 14.19 2007/01/27 01:41:37 brlcad Exp $ (BRL)";
d93 1
a93 1
		sprintf( fname, "%s/%s", (char *)bu_brlcad_data("vfont", 0), font );
d95 1
a95 1
			sprintf( fname, "%s/%s", FONTDIR2, font );
@


14.19
log
@ws. lots and lots of ws.  see sh/ws.sh for details (cases 'abcdeg').
@
text
@d41 1
a41 1
static const char libbu_vfont_RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libbu/vfont.c,v 14.18 2007/01/23 01:13:34 brlcad Exp $ (BRL)";
a116 6
	if( (vfp = (struct vfont *)bu_malloc(sizeof(struct vfont), "vfont")) == VFONT_NULL )  {
		fprintf(stderr,"vfont_get(%s):  malloc failure 1\n", fname );
		fclose(fp);
		return(VFONT_NULL);
	}

d118 2
a119 7
	if( (vfp->vf_bits = (char *)bu_malloc(size, "vfont bits")) == (char *)0 )  {
		fprintf(stderr,"vfont_get(%s):  malloc failure 2 (%d)\n",
			fname, size);
		fclose(fp);
		bu_free( (char *)vfp, "vfont");
		return(VFONT_NULL);
	}
@


14.18
log
@Sweeping license updates.  Documentation is fully relicensed to the BSD Documentation License (a minor variant of the FreeBSD Documentation License and BSD License).  All GPL code (mostly application code) is converted to the LGPL and now also specifically declares version 2.1, revoking the blank check to the FSF.  The intent of these sweeping changes are to simplify the licensing terms and increase overall flexibility of use, both externally (to users for their purposes) and internally (to allow application code to be migrated to libraries without creating GPL libraries).  As a collective work, BRL-CAD is now LGPL.
@
text
@d41 1
a41 1
static const char libbu_vfont_RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libbu/vfont.c,v 14.17 2007/01/21 04:45:42 brlcad Exp $ (BRL)";
d104 2
a105 2
	    	fclose(fp);
	    	return(VFONT_NULL);
@


14.17
log
@ugh, what tedium.  put some effort towards cleaning up the doxygen labels and making the headers more consistent.  also exclusively using @@ for doxygen instead of \ to try to keep things more consistent.
@
text
@d9 1
a9 2
 * as published by the Free Software Foundation; either version 2 of
 * the License, or (at your option) any later version.
d14 1
a14 1
 * Library General Public License for more details.
d41 1
a41 1
static const char libbu_vfont_RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libbu/vfont.c,v 14.16 2007/01/20 14:36:51 brlcad Exp $ (BRL)";
@


14.16
log
@update copyright to 2007
@
text
@d21 2
a22 3

/** \addtogroup vfont */
/*@@{*/
d42 1
a42 1
static const char libbu_vfont_RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libbu/vfont.c,v 14.15 2006/09/03 15:14:07 lbutler Exp $ (BRL)";
d192 1
a192 1
/*@@}*/
@


14.15
log
@Doxygen updates
@
text
@d4 1
a4 1
 * Copyright (c) 2004-2006 United States Government as represented by
d43 1
a43 1
static const char libbu_vfont_RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libbu/vfont.c,v 14.14 2006/08/31 23:16:39 lbutler Exp $ (BRL)";
@


14.14
log
@Doxygen comments
@
text
@d25 3
d32 1
a32 1
 *  Author -
d35 1
a35 1
 *  Source -
d37 2
a38 3
 *	The U. S. Army Ballistic Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5066
 *
d43 1
a43 1
static const char libbu_vfont_RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libbu/vfont.c,v 14.13 2006/01/22 18:37:40 brlcad Exp $ (BRL)";
@


14.13
log
@use bu_malloc instead of malloc
@
text
@d22 1
a22 1
/** \addtogroup libbu */
d38 1
a38 1
/*@@}*/
d41 1
a41 1
static const char libbu_vfont_RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libbu/vfont.c,v 14.12 2006/01/18 06:46:16 brlcad Exp $ (BRL)";
d60 1
a60 1
/*
d163 1
a163 1
/*
d180 1
a180 1
/*
d191 1
a191 1

@


14.12
log
@update copyright to 2006
@
text
@d41 1
a41 1
static const char libbu_vfont_RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libbu/vfont.c,v 14.11 2005/10/23 04:44:32 brlcad Exp $ (BRL)";
a45 2


d117 1
a117 1
	if( (vfp = (struct vfont *)malloc(sizeof(struct vfont))) == VFONT_NULL )  {
d124 1
a124 1
	if( (vfp->vf_bits = malloc(size)) == (char *)0 )  {
d128 1
a128 1
		free( (char *)vfp);
d134 2
a135 2
		free( vfp->vf_bits );
		free( (char *)vfp );
d188 2
a189 2
	free( vfp->vf_bits );
	free( (char *)vfp );
@


14.11
log
@trailing ws
@
text
@d4 1
a4 1
 * Copyright (C) 2004-2005 United States Government as represented by
d41 1
a41 1
static const char libbu_vfont_RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libbu/vfont.c,v 14.10 2005/09/09 09:44:08 brlcad Exp $ (BRL)";
@


14.10
log
@BRL-CAD not BRLCAD, consistency
@
text
@d31 1
a31 1
 *  
d36 1
a36 1
 *  
d41 1
a41 1
static const char libbu_vfont_RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libbu/vfont.c,v 14.9 2005/08/12 22:29:23 lbutler Exp $ (BRL)";
@


14.9
log
@Doxygen changes
@
text
@d41 1
a41 1
static const char libbu_vfont_RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libbu/vfont.c,v 14.8 2005/07/08 00:05:04 brlcad Exp $ (BRL)";
d67 1
a67 1
 *  First the filename provided is used, then the BRLCAD font
@


14.9.4.1
log
@merge changes from HEAD aka rel-7-6-4 to the rel-7-6-branch just in case someone peeks a gander or tries to continue/build the branch
@
text
@d31 1
a31 1
 *
d36 1
a36 1
 *
d41 1
a41 1
static const char libbu_vfont_RCSid[] = "@@(#)$Header$ (BRL)";
d67 1
a67 1
 *  First the filename provided is used, then the BRL-CAD font
@


14.8
log
@use bu_brlcad_data instead of bu_brlcad_path now
@
text
@d21 3
a24 3
 *
 *  Function -
 *
d38 2
d41 1
a41 1
static const char libbu_vfont_RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libbu/vfont.c,v 14.7 2005/01/30 20:30:46 brlcad Exp $ (BRL)";
@


14.7
log
@update copyright to 2005
@
text
@d39 1
a39 1
static const char libbu_vfont_RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libbu/vfont.c,v 14.6 2004/12/24 01:58:48 brlcad Exp $ (BRL)";
d93 1
a93 1
		sprintf( fname, "%s/%s", (char *)bu_brlcad_path("vfont", 0), font );
@


14.6
log
@avoid multiple symbols, avoid requiring libutahrle, make vax_gshort() static
@
text
@d4 2
a5 2
 * Copyright (c) 2004 United States Government as represented by the
 * U.S. Army Research Laboratory.
d39 1
a39 1
static const char libbu_vfont_RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libbu/vfont.c,v 14.5 2004/12/21 07:18:57 morrison Exp $ (BRL)";
@


14.5
log
@the significantly modified pd files are incorporated as new works and assigned copyright, so remove the old statement.
@
text
@d39 1
a39 1
static const char libbu_vfont_RCSid[] = "@@(#)$Header: /cvs/brlcad/src/libbu/vfont.c,v 14.4 2004/12/21 06:18:43 morrison Exp $ (BRL)";
d58 1
a58 1
int vax_gshort(unsigned char *);
d169 1
a169 1
int
@


14.4
log
@they should have received a copy of the LGPL with LGPL'd files
@
text
@a36 2
 *  Distribution Status -
 *	Public Domain, Distribution Unlimited
d39 1
a39 1
static const char libbu_vfont_RCSid[] = "@@(#)$Header: /cvs/brlcad/src/libbu/vfont.c,v 14.3 2004/12/21 05:45:21 morrison Exp $ (BRL)";
@


14.3
log
@s/GNU Library General/GNU Lesser General/g
@
text
@d17 2
a18 2
 * You should have received a copy of the GNU General Public License
 * along with this file; see the file named COPYING for more
d41 1
a41 1
static const char libbu_vfont_RCSid[] = "@@(#)$Header: /cvs/brlcad/src/libbu/vfont.c,v 14.2 2004/12/21 03:49:00 morrison Exp $ (BRL)";
@


14.2
log
@assign copyright and LGPL
@
text
@d8 1
a8 1
 * modify it under the terms of the GNU Library General Public License
d41 1
a41 1
static const char libbu_vfont_RCSid[] = "@@(#)$Header: /cvs/brlcad/src/libbu/vfont.c,v 14.1 2004/11/16 19:42:14 morrison Exp $ (BRL)";
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d1 21
a21 2
/*
 *			V F O N T . C
d41 1
a41 1
static const char libbu_vfont_RCSid[] = "@@(#)$Header: /cvs/brlcad/src/libbu/vfont.c,v 1.4 2004/10/14 21:59:12 morrison Exp $ (BRL)";
@


1.4
log
@missed one of the little bu_brlcad_path buggers
@
text
@d22 1
a22 1
static const char libbu_vfont_RCSid[] = "@@(#)$Header: /cvs/brlcad/src/libbu/vfont.c,v 1.3 2004/08/02 23:01:48 morrison Exp $ (BRL)";
d174 10
@


1.3
log
@replace the wrapped config.h block with common.h
@
text
@d22 1
a22 1
static const char libbu_vfont_RCSid[] = "@@(#)$Header: /cvs/brlcad/src/libbu/vfont.c,v 1.2 2004/06/08 19:28:50 morrison Exp $ (BRL)";
d76 1
a76 1
		sprintf( fname, "%s/%s", (char *)bu_brlcad_path("vfont"), font );
@


1.2
log
@poof goes the silly externs.h
@
text
@d22 1
a22 1
static const char libbu_vfont_RCSid[] = "@@(#)$Header$ (BRL)";
d25 1
a25 3
#ifdef HAVE_CONFIG_H
# include "config.h"
#endif
@


1.1
log
@Vast reorganization begins.  Sources moved from top-level directories into src/.
@
text
@d22 1
a22 1
static const char libbu_vfont_RCSid[] = "@@(#)$Header: /cvs/brlcad/libbu/vfont.c,v 11.10 2004/05/10 15:30:44 erikg Exp $ (BRL)";
a32 1
#include "externs.h"
@

