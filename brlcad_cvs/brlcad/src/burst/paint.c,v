head	14.9;
access;
symbols
	rel-7-10-4:14.9
	STABLE:14.9.0.2
	stable-branch:14.4
	rel-7-10-2:14.9
	rel-7-10-0:14.8
	rel-7-8-4:14.6
	rel-7-8-2:14.6
	rel-7-8-0:14.6
	trimnurbs-branch:14.6.0.2
	help:14.6
	temp_tag:14.5
	bobWinPort-20051223-freeze:14.4
	postmerge-20051223-bobWinPort:14.5
	premerge-20051223-bobWinPort:14.5
	rel-7-6-6:14.5
	rel-7-6-4:14.5
	rel-7-6-2:14.4
	rel-7-6-branch:14.4.0.6
	rel-7-6-0:14.4
	rel-7-4-2:14.4
	rel-7-4-branch:14.4.0.4
	bobWinPort:14.4.0.2
	rel-7-4-0:14.4
	rel-7-2-6:14.4
	rel-7-2-4:14.4
	rel-7-2-2:14.4
	rel-7-2-0:14.4
	rel-7-0-4:14.3
	rel-7-0-2:14.3
	rel-7-0-1:14.3
	opensource-post:14.3
	opensource-pre:1.2
	rel-7-0-branch:1.2.0.2
	rel-7-0:1.2;
locks; strict;
comment	@ * @;


14.9
date	2007.07.26.01.13.50;	author brlcad;	state Exp;
branches;
next	14.8;

14.8
date	2007.01.23.01.13.24;	author brlcad;	state Exp;
branches;
next	14.7;

14.7
date	2007.01.20.14.36.42;	author brlcad;	state Exp;
branches;
next	14.6;

14.6
date	2006.01.18.06.46.13;	author brlcad;	state Exp;
branches;
next	14.5;

14.5
date	2005.11.04.10.43.04;	author brlcad;	state Exp;
branches;
next	14.4;

14.4
date	2005.01.30.20.30.16;	author brlcad;	state Exp;
branches
	14.4.6.1;
next	14.3;

14.3
date	2004.12.18.06.50.49;	author morrison;	state Exp;
branches;
next	14.2;

14.2
date	2004.12.18.01.52.36;	author morrison;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.12;	author morrison;	state Exp;
branches;
next	1.2;

1.2
date	2004.08.02.23.01.47;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.20.15.18.43;	author morrison;	state Exp;
branches;
next	;

14.4.6.1
date	2005.11.13.13.46.13;	author brlcad;	state Exp;
branches;
next	;


desc
@@


14.9
log
@remove ephemeral data like phone numbers and addresses, including the misleading 'source' statements on code that is continually evolving and receiving contributions from many many sources
@
text
@/*                         P A I N T . C
 * BRL-CAD
 *
 * Copyright (c) 2004-2007 United States Government as represented by
 * the U.S. Army Research Laboratory.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * version 2.1 as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this file; see the file named COPYING for more
 * information.
 *
 */
/** @@file paint.c
 *	Author:		Gary S. Moss
 */
#ifndef lint
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/burst/paint.c,v 14.8 2007/01/23 01:13:24 brlcad Exp $ (BRL)";
#endif

#include "common.h"

#include <assert.h>
#include <stdio.h>

#include "common.h"

#include "./vecmath.h"
#include "machine.h"
#include "vmath.h"
#include "raytrace.h"
#include "fb.h"

#include "./extern.h"


#define DEBUG_CELLFB	0
#define DEBUG_SPALLFB	0

/* Offset frame buffer coordinates to center of cell from grid lines. */
#define CenterCell(b)	(b += roundToInt( (fastf_t) zoom / 2.0 ))

/* Compare one RGB pixel to another. */
#define	SAMERGB(a,b)	((a)[RED] == (b)[RED] &&\
			 (a)[GRN] == (b)[GRN] &&\
			 (a)[BLU] == (b)[BLU])

static unsigned char	pixbuf[MAXDEVWID][3];
static int	gridxmargin;
static int	gridymargin;

void
gridToFb( gx, gy, fxp, fyp )
int	gx, gy;
int	*fxp, *fyp;
	{
	/* map grid offsets to frame buffer coordinates */
	*fxp = (gx - gridxorg)*zoom + gridxmargin;
	*fyp = (gy - gridyorg)*zoom + gridymargin;
	return;
	}

void
paintGridFb()
{
		register int	fx, fy;
		int		fxbeg, fybeg;
		int		fxfin, fyfin;
		int		fxorg, fyorg;
		int		fgridwid;
	if( fb_clear( fbiop, pixbkgr ) == -1 )
		return;
	gridxmargin = (devwid - (gridwidth*zoom)) / 2.0;
	gridymargin = (devhgt - (gridheight*zoom)) / 2.0;
	gridToFb( gridxorg, gridyorg, &fxbeg, &fybeg );
	gridToFb( gridxfin+1, gridyfin+1, &fxfin, &fyfin );
	gridToFb( 0, 0, &fxorg, &fyorg );
	CenterCell( fxorg ); /* center of cell */
	CenterCell( fyorg );
	if( zoom == 1 )
		{
		fgridwid = gridwidth + 2;
		fxfin++;
		}
	else
		fgridwid = gridwidth * zoom + 1;

	/* draw vertical lines */
	for( fx = 1; fx < fgridwid; fx++ )
		COPYRGB( &pixbuf[fx][0], pixbkgr );
	for( fx = fxbeg; fx <= fxfin; fx += zoom )
		COPYRGB( &pixbuf[fx-fxbeg][0], &pixgrid[0] );
	for( fy = fybeg; fy <= fyfin; fy++ )
		(void) fb_write( fbiop, fxbeg, fy, (unsigned char *)pixbuf, fgridwid );
	for( fy = 0; fy < devwid; fy++ )
		(void) fb_write( fbiop, fxorg, fy, pixaxis, 1 );

	/* draw horizontal lines */
	if( zoom > 1 )
		for( fy = fybeg; fy <= fyfin; fy += zoom )
			(void) fb_write( fbiop,
					 fxbeg, fy, pixgrid, fgridwid );
		for( fx = 0; fx < devwid; fx++ )
			COPYRGB( &pixbuf[fx][0], pixaxis );
	(void) fb_write( fbiop, 0, fyorg, (unsigned char *)pixbuf, devwid );
	return;
	}

void
paintCellFb( ap, pixpaint, pixexpendable )
register struct application	*ap;
unsigned char			*pixpaint;
unsigned char			*pixexpendable;
	{	int		gx, gy;
		register int	gyfin, gxfin;
		register int	gxorg, gyorg;
		register int	x, y;
		int		cnt;
#if DEBUG_CELLFB
	brst_log( "paintCellFb: expendable {%d,%d,%d}\n",
		pixexpendable[RED],
		pixexpendable[GRN],
		pixexpendable[BLU] );
#endif
	gridToFb( ap->a_x, ap->a_y, &gx, &gy );
	gxorg = gx+1;
	gyorg = gy+1;
	gxfin = zoom == 1 ? gx+zoom+1 : gx+zoom;
	gyfin = zoom == 1 ? gy+zoom+1 : gy+zoom;
	cnt = gxfin - gxorg;
	for( y = gyorg; y < gyfin; y++ )
		{
		if( zoom != 1 && (y - gy) % zoom == 0 )
			continue;
		bu_semaphore_acquire( RT_SEM_STATS );
		(void) fb_read( fbiop, gxorg, y, (unsigned char *)pixbuf, cnt );
		bu_semaphore_release( RT_SEM_STATS );
		for( x = gxorg; x < gxfin; x++ )
			{
			if( SAMERGB( &pixbuf[x-gxorg][0], pixexpendable )
				)
				{
#if DEBUG_CELLFB
				brst_log( "Clobbering:<%d,%d>{%d,%d,%d}\n",
					x, y,
					pixbuf[x-gxorg][RED],
					pixbuf[x-gxorg][GRN],
					pixbuf[x-gxorg][BLU] );
#endif
				COPYRGB( &pixbuf[x-gxorg][0], pixpaint );
				}
#if DEBUG_CELLFB
			else
				brst_log( "Preserving:<%d,%d>{%d,%d,%d}\n",
					x, y,
					pixbuf[x-gxorg][RED],
					pixbuf[x-gxorg][GRN],
					pixbuf[x-gxorg][BLU] );
#endif
			}
		bu_semaphore_acquire( RT_SEM_STATS );
		(void) fb_write( fbiop, gxorg, y, (unsigned char *)pixbuf, cnt );
		bu_semaphore_release( RT_SEM_STATS );
#if DEBUG_CELLFB
		brst_log( "paintCellFb: fb_write(%d,%d)\n", x, y );
#endif
		}
	return;
	}

void
paintSpallFb( ap )
register struct application	*ap;
	{	unsigned char pixel[3];
		int x, y;
		int err;
		fastf_t	celldist;
#if DEBUG_SPALLFB
	brst_log( "paintSpallFb: a_x=%d a_y=%d a_cumlen=%g cellsz=%g zoom=%d\n",
		ap->a_x, ap->a_y, ap->a_cumlen, cellsz, zoom );
#endif
	pixel[RED] = ap->a_color[RED] * 255;
	pixel[GRN] = ap->a_color[GRN] * 255;
	pixel[BLU] = ap->a_color[BLU] * 255;
	gridToFb( ap->a_x, ap->a_y, &x, &y );
	CenterCell( x );	/* center of cell */
	CenterCell( y );
	celldist = ap->a_cumlen/cellsz * zoom;
	x = roundToInt( x + Dot( ap->a_ray.r_dir, gridhor ) * celldist );
	y = roundToInt( y + Dot( ap->a_ray.r_dir, gridver ) * celldist );
	bu_semaphore_acquire( RT_SEM_STATS );
	err = fb_write( fbiop, x, y, pixel, 1 );
	bu_semaphore_release( RT_SEM_STATS );
#if DEBUG_SPALLFB
	brst_log( "paintSpallFb:gridhor=<%g,%g,%g> gridver=<%g,%g,%g>\n",
		gridhor[X], gridhor[Y], gridhor[Z],
		gridver[X], gridver[Y], gridver[Z] );
	brst_log( "paintSpallFb:fb_write(x=%d,y=%d,pixel={%d,%d,%d})\n",
		x, y,
		(int) pixel[RED],
		(int) pixel[GRN],
		(int) pixel[BLU]
		);
#endif
	if( err == -1 )
		brst_log( "Write failed to pixel <%d,%d> from cell <%d,%d>.\n",
			x, y, ap->a_x, ap->a_y );
	return;
	}

/*
 * Local Variables:
 * mode: C
 * tab-width: 8
 * c-basic-offset: 4
 * indent-tabs-mode: t
 * End:
 * ex: shiftwidth=4 tabstop=8
 */
@


14.8
log
@Sweeping license updates.  Documentation is fully relicensed to the BSD Documentation License (a minor variant of the FreeBSD Documentation License and BSD License).  All GPL code (mostly application code) is converted to the LGPL and now also specifically declares version 2.1, revoking the blank check to the FSF.  The intent of these sweeping changes are to simplify the licensing terms and increase overall flexibility of use, both externally (to users for their purposes) and internally (to allow application code to be migrated to libraries without creating GPL libraries).  As a collective work, BRL-CAD is now LGPL.
@
text
@d22 2
a23 5
	Author:		Gary S. Moss
			U. S. Army Ballistic Research Laboratory
			Aberdeen Proving Ground
			Maryland 21005-5066
*/
d25 1
a25 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/burst/paint.c,v 14.7 2007/01/20 14:36:42 brlcad Exp $ (BRL)";
@


14.7
log
@update copyright to 2007
@
text
@d8 2
a9 3
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation; either version 2 of the
 * License, or (at your option) any later version.
d14 1
a14 1
 * General Public License for more details.
d16 2
a17 2
 * You should have received a copy of the GNU General Public License
 * along with this file; see the file named COPYING for more
d28 1
a28 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/burst/paint.c,v 14.6 2006/01/18 06:46:13 brlcad Exp $ (BRL)";
@


14.6
log
@update copyright to 2006
@
text
@d4 1
a4 1
 * Copyright (c) 2004-2006 United States Government as represented by
d29 1
a29 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/burst/paint.c,v 14.5 2005/11/04 10:43:04 brlcad Exp $ (BRL)";
@


14.5
log
@DEBUG/NDEBUG cleanup, pull the value from and include common.h before system headers
@
text
@d4 1
a4 1
 * Copyright (C) 2004-2005 United States Government as represented by
d29 1
a29 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/burst/paint.c,v 14.4 2005/01/30 20:30:16 brlcad Exp $ (BRL)";
@


14.4
log
@update copyright to 2005
@
text
@d29 1
a29 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/burst/paint.c,v 14.3 2004/12/18 06:50:49 morrison Exp $ (BRL)";
d32 1
a32 6
#ifndef DEBUG
#define NDEBUG
#define STATIC static
#else
#define STATIC
#endif
a34 1

a38 1

d47 1
@


14.4.6.1
log
@merge changes from HEAD aka rel-7-6-4 to the rel-7-6-branch just in case someone peeks a gander or tries to continue/build the branch
@
text
@d29 1
a29 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
d32 6
a37 1
#include "common.h"
d40 1
d45 1
a53 1

@


14.3
log
@break up the doxygen marker to appease emacs M-x indent-region'ing
@
text
@d4 2
a5 2
 * Copyright (c) 2004 United States Government as represented by the
 * U.S. Army Research Laboratory.
d29 1
a29 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/burst/paint.c,v 14.2 2004/12/18 01:52:36 morrison Exp $ (BRL)";
@


14.2
log
@assign copyright and GPL license
@
text
@d21 2
a22 1
 **//** @@file paint.c
d29 1
a29 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/burst/paint.c,v 14.1 2004/11/16 19:42:12 morrison Exp $ (BRL)";
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d1 21
a21 1
/*
d28 1
a28 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/burst/paint.c,v 1.2 2004/08/02 23:01:47 morrison Exp $ (BRL)";
@


1.2
log
@replace the wrapped config.h block with common.h
@
text
@d8 1
a8 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/burst/paint.c,v 1.1 2004/05/20 15:18:43 morrison Exp $ (BRL)";
d206 10
@


1.1
log
@Vast reorganization begins.  Sources moved from top-level directories into src/.
@
text
@d8 1
a8 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/burst/paint.c,v 1.14 2004/05/10 15:30:41 erikg Exp $ (BRL)";
d22 1
a22 3
#ifdef HAVE_CONFIG_H
# include "config.h"
#endif
@

