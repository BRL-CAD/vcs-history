head	14.14;
access;
symbols
	rel-7-10-4:14.14
	STABLE:14.14.0.2
	stable-branch:14.4
	rel-7-10-2:14.14
	rel-7-10-0:14.12
	rel-7-8-4:14.9
	rel-7-8-2:14.8
	rel-7-8-0:14.8
	trimnurbs-branch:14.8.0.2
	help:14.8
	temp_tag:14.7
	bobWinPort-20051223-freeze:14.5
	postmerge-20051223-bobWinPort:14.7
	premerge-20051223-bobWinPort:14.7
	rel-7-6-6:14.7
	rel-7-6-4:14.7
	rel-7-6-2:14.5
	rel-7-6-branch:14.5.0.6
	rel-7-6-0:14.5
	rel-7-4-2:14.5
	rel-7-4-branch:14.5.0.4
	bobWinPort:14.5.0.2
	rel-7-4-0:14.5
	rel-7-2-6:14.5
	rel-7-2-4:14.5
	rel-7-2-2:14.4
	rel-7-2-0:14.4
	rel-7-0-4:14.3
	rel-7-0-2:14.3
	rel-7-0-1:14.3
	opensource-post:14.3
	opensource-pre:1.3
	rel-7-0-branch:1.3.0.2
	rel-7-0:1.3;
locks; strict;
comment	@ * @;


14.14
date	2007.07.26.01.13.50;	author brlcad;	state Exp;
branches;
next	14.13;

14.13
date	2007.04.18.02.53.03;	author brlcad;	state Exp;
branches;
next	14.12;

14.12
date	2007.01.27.01.41.31;	author brlcad;	state Exp;
branches;
next	14.11;

14.11
date	2007.01.23.01.13.24;	author brlcad;	state Exp;
branches;
next	14.10;

14.10
date	2007.01.20.14.36.42;	author brlcad;	state Exp;
branches;
next	14.9;

14.9
date	2006.07.09.19.17.15;	author brlcad;	state Exp;
branches;
next	14.8;

14.8
date	2006.01.18.06.46.13;	author brlcad;	state Exp;
branches;
next	14.7;

14.7
date	2005.11.04.14.50.57;	author brlcad;	state Exp;
branches;
next	14.6;

14.6
date	2005.10.23.04.44.29;	author brlcad;	state Exp;
branches;
next	14.5;

14.5
date	2005.04.27.02.24.27;	author brlcad;	state Exp;
branches
	14.5.6.1;
next	14.4;

14.4
date	2005.01.30.20.30.16;	author brlcad;	state Exp;
branches;
next	14.3;

14.3
date	2004.12.18.06.50.49;	author morrison;	state Exp;
branches;
next	14.2;

14.2
date	2004.12.18.01.52.36;	author morrison;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.12;	author morrison;	state Exp;
branches;
next	1.3;

1.3
date	2004.09.20.07.32.01;	author morrison;	state Exp;
branches;
next	1.2;

1.2
date	2004.09.17.20.13.30;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.20.15.18.43;	author morrison;	state Exp;
branches;
next	;

14.5.6.1
date	2005.11.13.13.46.13;	author brlcad;	state Exp;
branches;
next	;


desc
@@


14.14
log
@remove ephemeral data like phone numbers and addresses, including the misleading 'source' statements on code that is continually evolving and receiving contributions from many many sources
@
text
@/*                         B U R S T . H
 * BRL-CAD
 *
 * Copyright (c) 2004-2007 United States Government as represented by
 * the U.S. Army Research Laboratory.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * version 2.1 as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this file; see the file named COPYING for more
 * information.
 *
 */
/** @@file burst.h
 *	Author:		Gary S. Moss
 */

#ifndef __BURST_H__
#define __BURST_H__

#include "common.h"

/* for genptr_t */
#include "machine.h"


/* NSIG not always defined in <signal.h> */
#ifndef NSIG
#define NSIG 64
#endif

/* ANSI C definitions */
typedef int boolean;
typedef genptr_t pointer;			/* generic pointer */


#define DEGRAD	57.2957795130823208767981548141051703324054724665642

/* allow for SGI screw-up, the single-precision math libraries */
#if defined( sgi ) && ! defined( mips )
#  define SINGLE_PRECISION 1
#else
#  define SINGLE_PRECISION 0
#endif

/* allow for SGI screw-up, winclose() dumps core on some systems */
#if defined(SGI4D_Rel2)
#  define SGI_WINCLOSE_BUG 1
#else
#  define SGI_WINCLOSE_BUG 0
#endif

/* menu configuration */
#define MENU_LFT	1
#define MENU_TOP	2
#define MENU_MAXVISITEMS	10

/* prompt line configuration */
#define PROMPT_X	HmXPROMPT
#define PROMPT_Y	HmYPROMPT

/* banner (border) configuration */
#define BORDER_CHR	'_'
#define BORDER_Y	(PROMPT_Y+1)

/* grid offset printing window */
#define GRID_X		55	/* where grid indices are printed */
#define GRID_Y		BORDER_Y

/* scroll region configuration */
#define SCROLL_TOP	(BORDER_Y+1)
#define SCROLL_BTM	(ScLI-1) /* bottom line causes scroll */

/* timer (cpu statistics) window configuration */
#define TIMER_X		1
#define TIMER_Y		1

/* buffer sizes */
#define LNBUFSZ		1330	/* buffer for one-line messages */
#define MAXDEVWID	10000	/* maximum width of frame buffer */

#define CHAR_COMMENT	'#'
#define CMD_COMMENT	"comment"

/* default parameters */
#define DFL_AZIMUTH	0.0
#define DFL_BARRIERS	100
#define DFL_BDIST	0.0
#define DFL_CELLSIZE	101.6
#define DFL_CONEANGLE	(45.0/DEGRAD)
#define DFL_DEFLECT	0
#define DFL_DITHER	0
#define DFL_ELEVATION	0.0
#define DFL_NRAYS	200
#define DFL_OVERLAPS	1
#define DFL_RIPLEVELS	1
#define DFL_UNITS	U_MILLIMETERS

/* firing mode bit definitions */
#define ASNBIT(w,b)	(w = (b))
#define SETBIT(w,b)	(w |= (b))
#define CLRBIT(w,b)	(w &= ~(b))
#define TSTBIT(w,b)	((w)&(b))
#define FM_GRID  0	/* generate grid of shotlines */
#define FM_DFLT	 FM_GRID
#define FM_PART  (1)	/* bit 0: ON = partial envelope, OFF = full */
#define FM_SHOT	 (1<<1)	/* bit 1: ON = discrete shots, OFF = gridding */
#define FM_FILE	 (1<<2)	/* bit 2: ON = file input, OFF = direct input */
#define FM_3DIM	 (1<<3)	/* bit 3: ON = 3-D coords., OFF = 2-D coords */
#define FM_BURST (1<<4) /* bit 4: ON = discrete burst points, OFF = shots */

/* flags for notify() */
#define	NOTIFY_APPEND	1
#define NOTIFY_DELETE	2
#define NOTIFY_ERASE	4

#define NOTIFY_DELIM	':'

#define PB_ASPECT_INIT		'1'
#define PB_CELL_IDENT		'2'
#define PB_RAY_INTERSECT	'3'
#define PB_RAY_HEADER		'4'
#define PB_REGION_HEADER	'5'

#define PS_ASPECT_INIT		'1'
#define PS_CELL_IDENT		'2'
#define PS_SHOT_INTERSECT	'3'

#define TITLE_LEN	72
#define TIMER_LEN	72

#define U_INCHES	0
#define U_FEET		1
#define U_MILLIMETERS	2
#define U_CENTIMETERS	3
#define U_METERS	4
#define U_BAD		-1

#define UNITS_INCHES		"inches"
#define UNITS_FEET		"feet"
#define UNITS_MILLIMETERS	"millimeters"
#define UNITS_CENTIMETERS	"centimeters"
#define UNITS_METERS		"meters"

/* white space in input tokens */
#define WHITESPACE	" \t"

/* colors for UNIX plot files */
#define R_GRID		255	/* grid - yellow */
#define G_GRID		255
#define B_GRID		0

#define R_BURST		255	/* burst cone - red */
#define G_BURST		0
#define B_BURST		0

#define R_OUTAIR	100	/* outside air - light blue */
#define G_OUTAIR	100
#define B_OUTAIR	255

#define R_INAIR		100	/* inside air - light green */
#define G_INAIR		255
#define B_INAIR		100

#define R_COMP		0	/* component (default) - blue */
#define G_COMP		0
#define B_COMP		255

#define R_CRIT		255	/* critical component (default) - purple */
#define G_CRIT		0
#define B_CRIT		255

#define C_MAIN		0
#define C_CRIT		1

#define TWO_PI		6.28318530717958647692528676655900576839433879875022

#define COS_TOL		0.01
#define LOS_TOL		0.1
#define VEC_TOL		0.001
#define OVERLAP_TOL	0.25	/* thinner overlaps not reported */
#define EXIT_AIR	9	/* exit air is called 09 air */
#define OUTSIDE_AIR	1	/* outside air is called 01 air */

#define Air(rp)		((rp)->reg_aircode > 0)
#define DiffAir(rp,sp)	((rp)->reg_aircode != (sp)->reg_aircode)
#define SameAir(rp,sp)	((rp)->reg_aircode == (sp)->reg_aircode)
#define SameCmp(rp,sp)	((rp)->reg_regionid == (sp)->reg_regionid)
#define OutsideAir(rp)	((rp)->reg_aircode == OUTSIDE_AIR)
#define InsideAir(rp)	(Air(rp)&& !OutsideAir(rp))

#define Malloc_Bomb( _bytes_ ) \
		brst_log( "\"%s\"(%d) : allocation of %d bytes failed.\n",\
				__FILE__, __LINE__, _bytes_ )

#define Swap_Doubles( a_, b_ ) \
		{	fastf_t	f_ = a_; \
		a_ = b_; \
		b_ = f_; \
		}
#define Toggle(f)	(f) = !(f)

typedef struct ids	Ids;
struct ids
	{
	short	i_lower;
	short	i_upper;
	Ids	*i_next;
	};
#define IDS_NULL	(Ids *) 0

typedef struct colors	Colors;
struct colors
	{
	short	c_lower;
	short	c_upper;
	unsigned char	c_rgb[3];
	Colors	*c_next;
	};
#define COLORS_NULL	(Colors *) 0

typedef struct pt_queue	Pt_Queue;
struct pt_queue
	{
	struct partition	*q_part;
	Pt_Queue		*q_next;
	};

#define PT_Q_NULL	(Pt_Queue *) 0

#endif  /* __BURST_H__ */

/*
 * Local Variables:
 * mode: C
 * tab-width: 8
 * c-basic-offset: 4
 * indent-tabs-mode: t
 * End:
 * ex: shiftwidth=4 tabstop=8
 */
@


14.13
log
@rely on EXIT_SUCCESS/FAILURE even if it is c99
@
text
@d22 2
a23 4
	Author:		Gary S. Moss
			U. S. Army Ballistic Research Laboratory
			Aberdeen Proving Ground
			Maryland 21005-5066
a24 2
	$Header: /cvsroot/brlcad/brlcad/src/burst/burst.h,v 14.12 2007/01/27 01:41:31 brlcad Exp $ (BRL)
 */
@


14.12
log
@ws. lots and lots of ws.  see sh/ws.sh for details (cases 'abcdeg').
@
text
@d27 1
a27 1
	$Header: /cvsroot/brlcad/brlcad/src/burst/burst.h,v 14.11 2007/01/23 01:13:24 brlcad Exp $ (BRL)
a46 6
#ifndef BURST_EXIT_SUCCESS
#  define BURST_EXIT_SUCCESS	0
#endif
#ifndef BURST_EXIT_FAILURE
#  define BURST_EXIT_FAILURE	1
#endif
@


14.11
log
@Sweeping license updates.  Documentation is fully relicensed to the BSD Documentation License (a minor variant of the FreeBSD Documentation License and BSD License).  All GPL code (mostly application code) is converted to the LGPL and now also specifically declares version 2.1, revoking the blank check to the FSF.  The intent of these sweeping changes are to simplify the licensing terms and increase overall flexibility of use, both externally (to users for their purposes) and internally (to allow application code to be migrated to libraries without creating GPL libraries).  As a collective work, BRL-CAD is now LGPL.
@
text
@d27 1
a27 1
	$Header: /cvsroot/brlcad/brlcad/src/burst/burst.h,v 14.10 2007/01/20 14:36:42 brlcad Exp $ (BRL)
d210 2
a211 2
                brst_log( "\"%s\"(%d) : allocation of %d bytes failed.\n",\
                                __FILE__, __LINE__, _bytes_ )
@


14.10
log
@update copyright to 2007
@
text
@d8 2
a9 3
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation; either version 2 of the
 * License, or (at your option) any later version.
d14 1
a14 1
 * General Public License for more details.
d16 2
a17 2
 * You should have received a copy of the GNU General Public License
 * along with this file; see the file named COPYING for more
d27 1
a27 1
	$Header: /cvsroot/brlcad/brlcad/src/burst/burst.h,v 14.9 2006/07/09 19:17:15 brlcad Exp $ (BRL)
@


14.9
log
@increase and initialize some buffer sizes to something larger in order to minimize hitting buffer limits while processing.
@
text
@d4 1
a4 1
 * Copyright (c) 2004-2006 United States Government as represented by
d28 1
a28 1
	$Header: /cvsroot/brlcad/brlcad/src/burst/burst.h,v 14.8 2006/01/18 06:46:13 brlcad Exp $ (BRL)
@


14.8
log
@update copyright to 2006
@
text
@d28 1
a28 1
	$Header: /cvsroot/brlcad/brlcad/src/burst/burst.h,v 14.7 2005/11/04 14:50:57 brlcad Exp $ (BRL)
d97 2
a98 2
#define LNBUFSZ		133	/* buffer for one-line messages */
#define MAXDEVWID	1024	/* maximum width of frame buffer */
@


14.7
log
@burst the non-ansi-yet-willing-to-pretend-we-are-c99 bubble that the burst code likes to use.  that is, use static instead of STATIC and don't clobber the bool/true/false reserved words of the c++ compilers.  clean up the headers to support this.
@
text
@d4 1
a4 1
 * Copyright (C) 2004-2005 United States Government as represented by
d28 1
a28 1
	$Header: /cvsroot/brlcad/brlcad/src/burst/burst.h,v 14.6 2005/10/23 04:44:29 brlcad Exp $ (BRL)
@


14.6
log
@trailing ws
@
text
@d28 1
a28 1
	$Header: /cvsroot/brlcad/brlcad/src/burst/burst.h,v 14.5 2005/04/27 02:24:27 brlcad Exp $ (BRL)
d30 8
a37 2
#ifndef INCL_BURST
#define INCL_BURST
d44 3
a46 6
/* Some useful stuff from Doug Gwyn's std.h. */
/* Extended data types */
/* _CURSES_H is SGI header define in curses.h (they define bool as char) */
#if !defined(NCURSES_BOOL) && !defined(bool) && !defined(_CURSES_H)
typedef int bool;			/* Boolean data */
#endif
a47 21
#define false	0
#define true	1
/* ANSI C definitions */
/* Defense against some silly systems defining __STDC__ to random things. */
#ifdef STD_C
#undef STD_C
#endif
#ifdef __STDC__
#if __STDC__ > 0
#define STD_C   __STDC__                /* use this instead of __STDC__ */
#endif
#endif
#if STD_C
typedef void *pointer;			/* generic pointer */
#else
typedef char *pointer;			/* generic pointer */
#define const		/* nothing */	/* ANSI C type qualifier */
/* There really is no substitute for the following, but these might work: */
#define signed          /* nothing */   /* ANSI C type specifier */
#define volatile        /* nothing */   /* ANSI C type qualifier */
#endif
d49 1
a49 1
#define BURST_EXIT_SUCCESS	0
d52 1
a52 1
#define BURST_EXIT_FAILURE	1
d54 1
d59 1
a59 1
#define SINGLE_PRECISION 1
d61 1
a61 1
#define SINGLE_PRECISION 0
d66 1
a66 1
#define SGI_WINCLOSE_BUG 1
d68 1
a68 1
#define SGI_WINCLOSE_BUG 0
d109 2
a110 2
#define DFL_DEFLECT	false
#define DFL_DITHER	false
d113 1
a113 1
#define DFL_OVERLAPS	true
d248 2
a249 1
#endif /* INCL_BURST */
@


14.5
log
@get rid of the old STD_SIGNAL_DECLS define since an ansi compliant compiler is necessary now.  if a broken impl is found that needs to be accounted for, it can return as a proper configure check.
@
text
@d28 1
a28 1
	$Header: /cvsroot/brlcad/brlcad/src/burst/burst.h,v 14.4 2005/01/30 20:30:16 brlcad Exp $ (BRL)
d138 1
a138 1
#define TSTBIT(w,b)	((w)&(b))	
@


14.5.6.1
log
@merge changes from HEAD aka rel-7-6-4 to the rel-7-6-branch just in case someone peeks a gander or tries to continue/build the branch
@
text
@d28 1
a28 1
	$Header$ (BRL)
d30 2
a31 8
#ifndef __BURST_H__
#define __BURST_H__

#include "common.h"

/* for genptr_t */
#include "machine.h"

d38 9
d48 18
a65 3
typedef int boolean;
typedef genptr_t pointer;			/* generic pointer */

d67 1
a67 1
#  define BURST_EXIT_SUCCESS	0
d70 1
a70 1
#  define BURST_EXIT_FAILURE	1
a71 1

d76 1
a76 1
#  define SINGLE_PRECISION 1
d78 1
a78 1
#  define SINGLE_PRECISION 0
d83 1
a83 1
#  define SGI_WINCLOSE_BUG 1
d85 1
a85 1
#  define SGI_WINCLOSE_BUG 0
d126 2
a127 2
#define DFL_DEFLECT	0
#define DFL_DITHER	0
d130 1
a130 1
#define DFL_OVERLAPS	1
d138 1
a138 1
#define TSTBIT(w,b)	((w)&(b))
d265 1
a265 2

#endif  /* __BURST_H__ */
@


14.4
log
@update copyright to 2005
@
text
@d28 1
a28 1
	$Header: /cvsroot/brlcad/brlcad/src/burst/burst.h,v 14.3 2004/12/18 06:50:49 morrison Exp $ (BRL)
a87 7
/* allow for BSD screw-up, declaring signal handlers as 'int' functions */
#if STD_C || (defined(SYSV) && ! defined(cray))
#define STD_SIGNAL_DECLS 1
#else
#define STD_SIGNAL_DECLS 0
#endif

@


14.3
log
@break up the doxygen marker to appease emacs M-x indent-region'ing
@
text
@d4 2
a5 2
 * Copyright (c) 2004 United States Government as represented by the
 * U.S. Army Research Laboratory.
d28 1
a28 1
	$Header: /cvs/brlcad/src/burst/burst.h,v 14.2 2004/12/18 01:52:36 morrison Exp $ (BRL)
@


14.2
log
@assign copyright and GPL license
@
text
@d21 2
a22 1
 **//** @@file burst.h
d28 1
a28 1
	$Header: /cvs/brlcad/src/burst/burst.h,v 14.1 2004/11/16 19:42:12 morrison Exp $ (BRL)
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d1 21
a21 1
/*
d27 1
a27 1
	$Header: /cvs/brlcad/src/burst/burst.h,v 1.3 2004/09/20 07:32:01 morrison Exp $ (BRL)
@


1.3
log
@irix curses.h defines bool as a char typedef so make sure we didn't read that header already
@
text
@d7 1
a7 1
	$Header: /cvs/brlcad/src/burst/burst.h,v 1.2 2004/09/17 20:13:30 morrison Exp $ (BRL)
d252 10
@


1.2
log
@don't define/redifine bool if it's already defined by a curses header
@
text
@d7 1
a7 1
	$Header: /cvs/brlcad/src/burst/burst.h,v 1.1 2004/05/20 15:18:43 morrison Exp $ (BRL)
d19 2
a20 1
#if !defined(NCURSES_BOOL) && !defined(bool)
@


1.1
log
@Vast reorganization begins.  Sources moved from top-level directories into src/.
@
text
@d7 1
a7 1
	$Header: /cvs/brlcad/burst/burst.h,v 1.12 2003/09/27 00:15:39 morrison Exp $ (BRL)
d19 1
d21 2
@

