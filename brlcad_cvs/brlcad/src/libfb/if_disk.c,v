head	14.23;
access;
symbols
	rel-7-10-4:14.22.2.1
	STABLE:14.22.0.2
	stable-branch:14.8
	rel-7-10-2:14.20
	rel-7-10-0:14.19
	rel-7-8-4:14.15
	rel-7-8-2:14.12
	rel-7-8-0:14.12
	trimnurbs-branch:14.12.0.2
	help:14.12
	temp_tag:14.11
	bobWinPort-20051223-freeze:14.10
	postmerge-20051223-bobWinPort:14.11
	premerge-20051223-bobWinPort:14.11
	rel-7-6-6:14.11
	rel-7-6-4:14.11
	rel-7-6-2:14.10
	rel-7-6-branch:14.10.0.4
	rel-7-6-0:14.10
	rel-7-4-2:14.9
	rel-7-4-branch:14.9.0.2
	bobWinPort:14.10.0.2
	rel-7-4-0:14.9
	rel-7-2-6:14.9
	rel-7-2-4:14.8
	rel-7-2-2:14.8
	rel-7-2-0:14.6
	rel-7-0-4:14.5
	rel-7-0-2:14.5
	rel-7-0-1:14.5
	opensource-post:14.5
	opensource-pre:1.4
	rel-7-0-branch:1.4.0.2
	rel-7-0:1.4;
locks; strict;
comment	@ * @;


14.23
date	2007.09.15.16.23.10;	author brlcad;	state Exp;
branches;
next	14.22;

14.22
date	2007.08.18.03.15.11;	author brlcad;	state Exp;
branches
	14.22.2.1;
next	14.21;

14.21
date	2007.08.18.03.06.10;	author brlcad;	state Exp;
branches;
next	14.20;

14.20
date	2007.07.26.01.13.56;	author brlcad;	state Exp;
branches;
next	14.19;

14.19
date	2007.01.27.01.41.37;	author brlcad;	state Exp;
branches;
next	14.18;

14.18
date	2007.01.23.01.13.34;	author brlcad;	state Exp;
branches;
next	14.17;

14.17
date	2007.01.21.04.45.42;	author brlcad;	state Exp;
branches;
next	14.16;

14.16
date	2007.01.20.14.36.52;	author brlcad;	state Exp;
branches;
next	14.15;

14.15
date	2006.08.08.06.47.05;	author brlcad;	state Exp;
branches;
next	14.14;

14.14
date	2006.07.09.19.17.16;	author brlcad;	state Exp;
branches;
next	14.13;

14.13
date	2006.07.09.18.25.32;	author brlcad;	state Exp;
branches;
next	14.12;

14.12
date	2006.01.18.06.46.16;	author brlcad;	state Exp;
branches;
next	14.11;

14.11
date	2005.10.23.04.44.34;	author brlcad;	state Exp;
branches;
next	14.10;

14.10
date	2005.08.12.22.30.12;	author lbutler;	state Exp;
branches
	14.10.4.1;
next	14.9;

14.9
date	2005.05.28.02.14.51;	author brlcad;	state Exp;
branches;
next	14.8;

14.8
date	2005.03.28.05.31.56;	author bob1961;	state Exp;
branches;
next	14.7;

14.7
date	2005.03.16.07.46.21;	author brlcad;	state Exp;
branches;
next	14.6;

14.6
date	2005.01.30.20.30.48;	author brlcad;	state Exp;
branches;
next	14.5;

14.5
date	2004.12.21.06.38.20;	author morrison;	state Exp;
branches;
next	14.4;

14.4
date	2004.12.21.06.18.44;	author morrison;	state Exp;
branches;
next	14.3;

14.3
date	2004.12.21.05.45.22;	author morrison;	state Exp;
branches;
next	14.2;

14.2
date	2004.12.21.03.58.27;	author morrison;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.14;	author morrison;	state Exp;
branches;
next	1.4;

1.4
date	2004.09.08.19.44.21;	author kermit;	state Exp;
branches;
next	1.3;

1.3
date	2004.08.02.23.01.48;	author morrison;	state Exp;
branches;
next	1.2;

1.2
date	2004.06.08.22.04.21;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.20.15.19.42;	author morrison;	state Exp;
branches;
next	;

14.10.4.1
date	2005.11.13.13.46.15;	author brlcad;	state Exp;
branches;
next	;

14.22.2.1
date	2007.09.28.14.07.48;	author brlcad;	state Exp;
branches;
next	;


desc
@@


14.23
log
@more c89 embracing.  c89 provides string.h for all of the various str*() and mem*() functions, so remove the check for its presence.  there is still likely to be work required for strict c89 conformance for the various bsd strings.h functions that may be in use.
@
text
@/*                       I F _ D I S K . C
 * BRL-CAD
 *
 * Copyright (c) 1986-2007 United States Government as represented by
 * the U.S. Army Research Laboratory.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * version 2.1 as published by the Free Software Foundation.
 *
 * This library is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this file; see the file named COPYING for more
 * information.
 */
/** @@addtogroup if */
/** @@{ */
/** @@file if_disk.c
 *
 *  Author -
 *	Gary S. Moss
 *
 */
/** @@} */

#ifndef lint
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libfb/if_disk.c,v 14.22 2007/08/18 03:15:11 brlcad Exp $ (BRL)";
#endif

#include "common.h"

#include <stdlib.h>
#include <stdio.h>
#include <string.h>
#include <sys/types.h>

#ifdef HAVE_UNISTD_H
#  include <unistd.h>
#endif

#ifdef HAVE_SYS_FILE_H
#  include <sys/file.h>
#endif

#ifdef HAVE_FCNTL_H
#  include <fcntl.h>
#endif

#include "machine.h"
#include "fb.h"


#define FILE_CMAP_ADDR	((long) ifp->if_width*ifp->if_height\
			*sizeof(RGBpixel))

/* Ensure integer number of pixels per DMA */
#define	DISK_DMA_BYTES	(16*1024/sizeof(RGBpixel)*sizeof(RGBpixel))
#define	DISK_DMA_PIXELS	(DISK_DMA_BYTES/sizeof(RGBpixel))

HIDDEN int	dsk_open(FBIO *ifp, char *file, int width, int height),
		dsk_close(FBIO *ifp),
		dsk_clear(FBIO *ifp, unsigned char *bgpp),
		dsk_read(FBIO *ifp, int x, int y, unsigned char *pixelp, int count),
		dsk_write(FBIO *ifp, int x, int y, const unsigned char *pixelp, int count),
		dsk_rmap(FBIO *ifp, ColorMap *cmap),
		dsk_wmap(FBIO *ifp, const ColorMap *cmap),
		dsk_free(FBIO *ifp),
		dsk_help(FBIO *ifp);

FBIO disk_interface = {
	0,
	dsk_open,
	dsk_close,
	dsk_clear,
	dsk_read,
	dsk_write,
	dsk_rmap,
	dsk_wmap,
	fb_sim_view,		/* set view */
	fb_sim_getview,		/* get view */
	fb_null_setcursor,		/* define cursor */
	fb_sim_cursor,		/* set cursor */
	fb_sim_getcursor,	/* get cursor */
	fb_sim_readrect,
	fb_sim_writerect,
	fb_sim_bwreadrect,
	fb_sim_bwwriterect,
	fb_null,		/* poll */
	fb_null,		/* flush */
	dsk_free,
	dsk_help,
	"Disk File Interface",
	32*1024,		/* the sky's really the limit here */
	32*1024,
	"filename",		/* not in list so name is safe */
	512,
	512,
	-1,			/* select fd */
	-1,
	1, 1,			/* zoom */
	256, 256,		/* window center */
	0, 0, 0,		/* cursor */
	PIXEL_NULL,
	PIXEL_NULL,
	PIXEL_NULL,
	-1,
	0,
	0L,
	0L,
	0
};

#define if_seekpos	u5.l	/* stored seek position */

HIDDEN int	disk_color_clear(FBIO *ifp, register unsigned char *bpp);

HIDDEN int
dsk_open(FBIO *ifp, char *file, int width, int height)
{
	static char zero = 0;

	FB_CK_FBIO(ifp);

	/* check for default size */
	if( width == 0 )
		width = ifp->if_width;
	if( height == 0 )
		height = ifp->if_height;

	if( strcmp( file, "-" ) == 0 )  {
		/*
		 *  It is the applications job to write ascending scanlines.
		 *  If it does not, then this can be stacked with /dev/mem,
		 *  i.e.	/dev/mem -
		 */
		ifp->if_fd = 1;		/* fileno(stdout) */
		ifp->if_width = width;
		ifp->if_height = height;
		ifp->if_seekpos = 0L;
		return 0;
	}

	if( (ifp->if_fd = open( file, O_RDWR, 0 )) == -1
	  && (ifp->if_fd = open( file, O_RDONLY, 0 )) == -1 ) {
		if( (ifp->if_fd = open( file, O_RDWR|O_CREAT, 0664 )) > 0 ) {
			/* New file, write byte at end */
			if( lseek( ifp->if_fd, (off_t)(height*width*sizeof(RGBpixel)-1), 0 ) == -1 ) {
				fb_log( "disk_device_open : can not seek to end of new file.\n" );
				return	-1;
			}
			if( write( ifp->if_fd, &zero, 1 ) < 0 ) {
				fb_log( "disk_device_open : initial write failed.\n" );
				return	-1;
			}
		} else
			return	-1;
	}
	ifp->if_width = width;
	ifp->if_height = height;
	if( lseek( ifp->if_fd, (off_t)0L, 0 ) == -1L ) {
		fb_log( "disk_device_open : can not seek to beginning.\n" );
		return	-1;
	}
	ifp->if_seekpos = 0L;
	return	0;
}

HIDDEN int
dsk_close(FBIO *ifp)
{
	return	close( ifp->if_fd );
}

HIDDEN int
dsk_free(FBIO *ifp)
{
	close( ifp->if_fd );
	return unlink(ifp->if_name);
}

HIDDEN int
dsk_clear(FBIO *ifp, unsigned char *bgpp)
{
	static RGBpixel	black = { 0, 0, 0 };

	if( bgpp == (unsigned char *)NULL )
		return disk_color_clear( ifp, black );

	return	disk_color_clear( ifp, bgpp );
}

HIDDEN int
dsk_read(FBIO *ifp, int x, int y, unsigned char *pixelp, int count)
{
	register long bytes = count * (long) sizeof(RGBpixel);
	register long todo;
	long		got;
	long		dest;
	long		bytes_read = 0;
	int		fd = ifp->if_fd;

	/* Reads on stdout make no sense.  Take reads from stdin. */
	if( fd == 1 )  fd = 0;

	dest = (((long) y * (long) ifp->if_width) + (long) x)
	     * (long) sizeof(RGBpixel);
	if( ifp->if_seekpos != dest && lseek(fd, (off_t)dest, 0) == -1L ) {
		fb_log( "disk_buffer_read : seek to %ld failed.\n", dest );
		return	-1;
	}
	ifp->if_seekpos = dest;
	while( bytes > 0 ) {
		todo = bytes;
		if( (got = read( fd, (char *) pixelp, todo )) != todo )  {
			if( got <= 0 )  {
			    if (got < 0) {
				perror("READ ERROR");
			    }

			    if( bytes_read <= 0 )
				return -1;	/* error */

			    /* early EOF -- indicate what we got */
			    return bytes_read/sizeof(RGBpixel);
			}
			if( fd != 0 )  {
				/* This happens all the time reading from pipes */
				fb_log("disk_buffer_read(fd=%d): y=%d read of %d got %d bytes\n",
					fd, y, todo, got);
			}
		}
		bytes -= got;
		pixelp += got;
		ifp->if_seekpos += got;
		bytes_read += got;
	}
	return	bytes_read/sizeof(RGBpixel);
}

HIDDEN int
dsk_write(FBIO *ifp, int x, int y, const unsigned char *pixelp, int count)
{
	register long	bytes = count * (long) sizeof(RGBpixel);
	register long	todo;
	long		dest;

	dest = ((long) y * (long) ifp->if_width + (long) x)
	     * (long) sizeof(RGBpixel);
	if( dest != ifp->if_seekpos )  {
		if( lseek(ifp->if_fd, (off_t)dest, 0) == -1L ) {
			fb_log( "disk_buffer_write : seek to %ld failed.\n", dest );
			return	-1;
		}
		ifp->if_seekpos = dest;
	}
	while( bytes > 0 ) {
		todo = bytes;
		if( write( ifp->if_fd, (char *) pixelp, todo ) != todo )  {
			fb_log( "disk_buffer_write: write failed\n" );
			return	-1;
		}
		bytes -= todo;
		pixelp += todo / sizeof(RGBpixel);
		ifp->if_seekpos += todo;
	}
	return	count;
}

HIDDEN int
dsk_rmap(FBIO *ifp, ColorMap *cmap)
{
	int		fd = ifp->if_fd;

	/* Reads on stdout make no sense.  Take reads from stdin. */
	if( fd == 1 )  fd = 0;

	if( ifp->if_seekpos != FILE_CMAP_ADDR &&
	    lseek( fd, (off_t)FILE_CMAP_ADDR, 0 ) == -1 ) {
		fb_log(	"disk_colormap_read : seek to %ld failed.\n",
				FILE_CMAP_ADDR );
		return	-1;
	}
	if(read( fd, (char *) cmap, sizeof(ColorMap) ) != sizeof(ColorMap) ) {
	    /* Not necessarily an error.  It is not required that a
	     * color map be saved and the standard map is not
	     * generally saved.
	     */
	    return -1;
	}
	return	0;
}

HIDDEN int
dsk_wmap(FBIO *ifp, const ColorMap *cmap)
{
	if( cmap == (ColorMap *) NULL )
		/* Do not write default map to file. */
		return	0;
	if( fb_is_linear_cmap( cmap ) )
		return  0;
	if( lseek( ifp->if_fd, (off_t)FILE_CMAP_ADDR, 0 ) == -1 ) {
		fb_log(	"disk_colormap_write : seek to %ld failed.\n",
				FILE_CMAP_ADDR );
		return	-1;
	}
	if( write( ifp->if_fd, (char *) cmap, sizeof(ColorMap) )
	    != sizeof(ColorMap) ) {
		fb_log( "disk_colormap_write : write failed.\n" );
		return	-1;
	}
	return	0;
}

/*
 *		D I S K _ C O L O R _ C L E A R
 *
 *  Clear the disk file to the given color.
 */
HIDDEN int
disk_color_clear(FBIO *ifp, register unsigned char *bpp)
{
	static unsigned char	pix_buf[DISK_DMA_BYTES] = {0};
	register unsigned char *pix_to;
	register long	i;
	int	fd, pixelstodo;

	/* Fill buffer with background color. */
	for( i = DISK_DMA_PIXELS, pix_to = pix_buf; i > 0; i-- ) {
		COPYRGB( pix_to, bpp );
		pix_to += sizeof(RGBpixel);
	}

	/* Set start of framebuffer */
	fd = ifp->if_fd;
	if( ifp->if_seekpos != 0L && lseek( fd, (off_t)0L, 0 ) == -1 ) {
		fb_log( "disk_color_clear : seek failed.\n" );
		return	-1;
	}

	/* Send until frame buffer is full. */
	pixelstodo = ifp->if_height * ifp->if_width;
	while( pixelstodo > 0 ) {
		i = pixelstodo > DISK_DMA_PIXELS ? DISK_DMA_PIXELS : pixelstodo;
		if( write( fd, pix_buf, i * sizeof(RGBpixel) ) == -1 )
			return	-1;
		pixelstodo -= i;
		ifp->if_seekpos += i * sizeof(RGBpixel);
	}

	return	0;
}

HIDDEN int
dsk_help(FBIO *ifp)
{
	fb_log( "Description: %s\n", disk_interface.if_type );
	fb_log( "Device: %s\n", ifp->if_name );
	fb_log( "Max width/height: %d %d\n",
		disk_interface.if_max_width,
		disk_interface.if_max_height );
	fb_log( "Default width/height: %d %d\n",
		disk_interface.if_width,
		disk_interface.if_height );
	if( ifp->if_fd == 1 )  {
		fb_log("File \"-\" reads from stdin, writes to stdout\n");
	} else {
		fb_log( "Note: you may have just created a disk file\n" );
		fb_log( "called \"%s\" by running this.\n", ifp->if_name );
	}

	return(0);
}

/*
 * Local Variables:
 * mode: C
 * tab-width: 8
 * c-basic-offset: 4
 * indent-tabs-mode: t
 * End:
 * ex: shiftwidth=4 tabstop=8
 */
@


14.22
log
@remove the fblocal.h header file.  it was only used in three places (two files) and only contained one macro (wrapper to fb_log an error), so keep it simple until it's really needed.
@
text
@d31 1
a31 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libfb/if_disk.c,v 14.21 2007/08/18 03:06:10 brlcad Exp $ (BRL)";
d38 1
a38 5

#ifdef HAVE_STRING_H
#  include <string.h>
#endif

@


14.22.2.1
log
@merge from head, make linger the default framebuffer action instead of transient for all windowing framebuffer interfaces.
@
text
@d31 1
a31 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libfb/if_disk.c,v 14.23 2007/09/15 16:23:10 brlcad Exp $ (BRL)";
d38 5
a42 1
#include <string.h>
@


14.21
log
@get rid of a memory chunk not being released until exit that doesn't need to be mallocated in the first place since it's a fixed size
@
text
@d31 1
a31 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libfb/if_disk.c,v 14.20 2007/07/26 01:13:56 brlcad Exp $ (BRL)";
a58 1
#include "./fblocal.h"
@


14.20
log
@remove ephemeral data like phone numbers and addresses, including the misleading 'source' statements on code that is continually evolving and receiving contributions from many many sources
@
text
@d31 1
a31 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libfb/if_disk.c,v 14.19 2007/01/27 01:41:37 brlcad Exp $ (BRL)";
d331 1
a331 1
	static unsigned char	*pix_buf = NULL;
a335 6
	if( pix_buf == NULL )
		if( (pix_buf = (unsigned char *) malloc(DISK_DMA_BYTES)) == PIXEL_NULL ) {
			Malloc_Bomb(DISK_DMA_BYTES);
			return	-1;
		}

@


14.19
log
@ws. lots and lots of ws.  see sh/ws.sh for details (cases 'abcdeg').
@
text
@a26 5
 *  Source -
 *	SECAD/VLD Computing Consortium, Bldg 394
 *	The U. S. Army Ballistic Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5066
 *
d31 1
a31 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libfb/if_disk.c,v 14.18 2007/01/23 01:13:34 brlcad Exp $ (BRL)";
@


14.18
log
@Sweeping license updates.  Documentation is fully relicensed to the BSD Documentation License (a minor variant of the FreeBSD Documentation License and BSD License).  All GPL code (mostly application code) is converted to the LGPL and now also specifically declares version 2.1, revoking the blank check to the FSF.  The intent of these sweeping changes are to simplify the licensing terms and increase overall flexibility of use, both externally (to users for their purposes) and internally (to allow application code to be migrated to libraries without creating GPL libraries).  As a collective work, BRL-CAD is now LGPL.
@
text
@d36 1
a36 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libfb/if_disk.c,v 14.17 2007/01/21 04:45:42 brlcad Exp $ (BRL)";
d295 1
a295 1
	   	return	-1;
d322 1
a322 1
	    	fb_log( "disk_colormap_write : write failed.\n" );
@


14.17
log
@ugh, what tedium.  put some effort towards cleaning up the doxygen labels and making the headers more consistent.  also exclusively using @@ for doxygen instead of \ to try to keep things more consistent.
@
text
@d9 1
a9 2
 * as published by the Free Software Foundation; either version 2 of
 * the License, or (at your option) any later version.
d14 1
a14 1
 * Library General Public License for more details.
d36 1
a36 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libfb/if_disk.c,v 14.16 2007/01/20 14:36:52 brlcad Exp $ (BRL)";
@


14.16
log
@update copyright to 2007
@
text
@d21 2
a22 3

/** \addtogroup if */
/*@@{*/
d34 1
a34 1
/*@@}*/
d37 1
a37 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libfb/if_disk.c,v 14.15 2006/08/08 06:47:05 brlcad Exp $ (BRL)";
@


14.15
log
@get rid of the libfb-specific _LOCAL_ macro, instead using HIDDEN like everyone else (currently still provided by machine.h)
@
text
@d4 1
a4 1
 * Copyright (c) 1986-2006 United States Government as represented by
d38 1
a38 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libfb/if_disk.c,v 14.14 2006/07/09 19:17:16 brlcad Exp $ (BRL)";
@


14.14
log
@increase and initialize some buffer sizes to something larger in order to minimize hitting buffer limits while processing.
@
text
@d38 1
a38 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libfb/if_disk.c,v 14.13 2006/07/09 18:25:32 brlcad Exp $ (BRL)";
d76 1
a76 1
_LOCAL_ int	dsk_open(FBIO *ifp, char *file, int width, int height),
d131 1
a131 1
_LOCAL_ int	disk_color_clear(FBIO *ifp, register unsigned char *bpp);
d133 1
a133 1
_LOCAL_ int
d184 1
a184 1
_LOCAL_ int
d190 1
a190 1
_LOCAL_ int
d197 1
a197 1
_LOCAL_ int
d208 1
a208 1
_LOCAL_ int
d256 1
a256 1
_LOCAL_ int
d285 1
a285 1
_LOCAL_ int
d309 1
a309 1
_LOCAL_ int
d335 1
a335 1
_LOCAL_ int
d375 1
a375 1
_LOCAL_ int
@


14.13
log
@add additional error checking to make sure a -1 return value from read() is handled
@
text
@d38 1
a38 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libfb/if_disk.c,v 14.12 2006/01/18 06:46:16 brlcad Exp $ (BRL)";
d109 2
a110 2
	16*1024,		/* the sky's really the limit here */
	16*1024,
@


14.12
log
@update copyright to 2006
@
text
@d38 1
a38 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libfb/if_disk.c,v 14.11 2005/10/23 04:44:34 brlcad Exp $ (BRL)";
d231 10
a240 5
			if( got == 0 )  {
				if( bytes_read <= 0 )
					return -1;	/* error */
				/* early EOF -- indicate what we got */
				return bytes_read/sizeof(RGBpixel);
d299 6
a304 7
	if( read( fd, (char *) cmap, sizeof(ColorMap) )
		!= sizeof(ColorMap) ) {
		/* Not necessarily an error.  It is not required
		 * that a color map be saved and the standard
		 * map is not generally saved.
		 */
		return	-1;
@


14.11
log
@trailing ws
@
text
@d4 1
a4 1
 * Copyright (C) 1986-2005 United States Government as represented by
d38 1
a38 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libfb/if_disk.c,v 14.10 2005/08/12 22:30:12 lbutler Exp $ (BRL)";
@


14.10
log
@Doxygen changes
@
text
@d33 1
a33 1
 *  
d38 1
a38 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libfb/if_disk.c,v 14.9 2005/05/28 02:14:51 brlcad Exp $ (BRL)";
d55 1
a55 1
       
d297 1
a297 1
		 * that a color map be saved and the standard 
@


14.10.4.1
log
@merge changes from HEAD aka rel-7-6-4 to the rel-7-6-branch just in case someone peeks a gander or tries to continue/build the branch
@
text
@d33 1
a33 1
 *
d38 1
a38 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
d55 1
a55 1

d297 1
a297 1
		 * that a color map be saved and the standard
@


14.9
log
@convert WIN32 define checks to _WIN32 since the latter is one of the defaults provided by MSVC whereas the prior is not.  remove some of them related to header inclusions using HAVE_ defines instead.
@
text
@d21 3
d35 2
d38 1
a38 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libfb/if_disk.c,v 14.8 2005/03/28 05:31:56 bob1961 Exp $ (BRL)";
@


14.8
log
@Add code for Windows port: unlink() changes to remove(), lseek() changes to _lseek()
@
text
@d33 1
a33 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libfb/if_disk.c,v 14.7 2005/03/16 07:46:21 brlcad Exp $ (BRL)";
d47 1
a47 1
#ifndef WIN32
a157 3
#ifdef WIN32
			if(_lseek( ifp->if_fd, (off_t)(height*width*sizeof(RGBpixel)-1), 0 ) == -1 ) {
#else
a158 1
#endif
a170 3
#ifdef WIN32
	if(_lseek( ifp->if_fd, (off_t)0L, 0 ) == -1L ) {
#else
a171 1
#endif
a188 3
#ifdef WIN32
	return remove(ifp->if_name);
#else
a189 1
#endif
a217 3
#ifdef WIN32
	if( ifp->if_seekpos != dest && _lseek(fd, (off_t)dest, 0) == -1L ) {
#else
a218 1
#endif
a255 3
#ifdef WIN32
		if(_lseek(ifp->if_fd, (off_t)dest, 0) == -1L ) {
#else
a256 1
#endif
a283 3
#ifdef WIN32
	    _lseek( fd, (off_t)FILE_CMAP_ADDR, 0 ) == -1 ) {
#else
a284 1
#endif
a307 3
#ifdef WIN32
	if(_lseek( ifp->if_fd, (off_t)FILE_CMAP_ADDR, 0 ) == -1 ) {
#else
a308 1
#endif
a347 3
#ifdef WIN32
	if( ifp->if_seekpos != 0L && _lseek( fd, (off_t)0L, 0 ) == -1 ) {
#else
a348 1
#endif
@


14.7
log
@potentially need both sys/file.h and fcntl.h so separate them (solaris fix)
@
text
@d33 1
a33 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libfb/if_disk.c,v 14.6 2005/01/30 20:30:48 brlcad Exp $ (BRL)";
d158 3
d162 1
d175 3
d179 1
d197 5
a201 1
	return	unlink( ifp->if_name );
d230 3
d234 1
d272 3
d276 1
d304 3
d308 1
d332 3
d336 1
d376 3
d380 1
@


14.6
log
@update copyright to 2005
@
text
@d33 1
a33 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libfb/if_disk.c,v 14.5 2004/12/21 06:38:20 morrison Exp $ (BRL)";
a37 1

d40 1
d42 1
a42 1
#include <string.h>
d46 1
d48 1
a48 1
#include <unistd.h>
d52 5
a56 3
#include <sys/file.h>
#else
#include <fcntl.h>
d63 1
@


14.5
log
@remove the old copyright notice section
@
text
@d4 1
a4 1
 * Copyright (c) 1986-2004 United States Government as represented by
d33 1
a33 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/libfb/if_disk.c,v 14.4 2004/12/21 06:18:44 morrison Exp $ (BRL)";
@


14.4
log
@they should have received a copy of the LGPL with LGPL'd files
@
text
@a30 3
 *  Copyright Notice -
 *	This software is Copyright (C) 1986-2004 by the United States Army.
 *	All rights reserved.
d33 1
a33 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/libfb/if_disk.c,v 14.3 2004/12/21 05:45:22 morrison Exp $ (BRL)";
@


14.3
log
@s/GNU Library General/GNU Lesser General/g
@
text
@d17 2
a18 2
 * You should have received a copy of the GNU General Public License
 * along with this file; see the file named COPYING for more
d36 1
a36 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/libfb/if_disk.c,v 14.2 2004/12/21 03:58:27 morrison Exp $ (BRL)";
@


14.2
log
@assign copyright and LGPL
@
text
@d8 1
a8 1
 * modify it under the terms of the GNU Library General Public License
d36 1
a36 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/libfb/if_disk.c,v 14.1 2004/11/16 19:42:14 morrison Exp $ (BRL)";
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d1 21
a21 2
/*
 *			I F _ D I S K . C
d36 1
a36 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/libfb/if_disk.c,v 1.4 2004/09/08 19:44:21 kermit Exp $ (BRL)";
@


1.4
log
@Added <stdlib.h> to fix implicit cast (for IA64 architecture).
@
text
@d17 1
a17 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/libfb/if_disk.c,v 1.3 2004/08/02 23:01:48 morrison Exp $ (BRL)";
d366 10
@


1.3
log
@replace the wrapped config.h block with common.h
@
text
@d17 1
a17 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/libfb/if_disk.c,v 1.2 2004/06/08 22:04:21 morrison Exp $ (BRL)";
d23 1
a23 1

@


1.2
log
@obliterate externs.h
@
text
@d17 1
a17 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
d20 1
a20 3
#ifdef HAVE_CONFIG_H
# include "config.h"
#endif
@


1.1
log
@Vast reorganization begins.  Sources moved from top-level directories into src/.
@
text
@d17 1
a17 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/libfb/if_disk.c,v 11.15 2004/05/10 15:30:45 erikg Exp $ (BRL)";
a42 1
#include "externs.h"		/* For malloc */
@

