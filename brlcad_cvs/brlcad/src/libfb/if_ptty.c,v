head	14.16;
access;
symbols
	rel-7-10-4:14.16
	STABLE:14.16.0.2
	stable-branch:14.6
	rel-7-10-2:14.15
	rel-7-10-0:14.14
	rel-7-8-4:14.11
	rel-7-8-2:14.9
	rel-7-8-0:14.9
	trimnurbs-branch:14.9.0.2
	help:14.9
	temp_tag:14.8
	bobWinPort-20051223-freeze:14.7
	postmerge-20051223-bobWinPort:14.8
	premerge-20051223-bobWinPort:14.8
	rel-7-6-6:14.8
	rel-7-6-4:14.8
	rel-7-6-2:14.7
	rel-7-6-branch:14.7.0.4
	rel-7-6-0:14.7
	rel-7-4-2:14.6
	rel-7-4-branch:14.6.0.2
	bobWinPort:14.7.0.2
	rel-7-4-0:14.6
	rel-7-2-6:14.6
	rel-7-2-4:14.6
	rel-7-2-2:14.6
	rel-7-2-0:14.6
	rel-7-0-4:14.5
	rel-7-0-2:14.5
	rel-7-0-1:14.5
	opensource-post:14.5
	opensource-pre:1.2
	rel-7-0-branch:1.2.0.2
	rel-7-0:1.2;
locks; strict;
comment	@ * @;


14.16
date	2007.08.18.03.15.11;	author brlcad;	state Exp;
branches;
next	14.15;

14.15
date	2007.07.26.01.13.56;	author brlcad;	state Exp;
branches;
next	14.14;

14.14
date	2007.01.23.01.13.34;	author brlcad;	state Exp;
branches;
next	14.13;

14.13
date	2007.01.21.04.45.42;	author brlcad;	state Exp;
branches;
next	14.12;

14.12
date	2007.01.20.14.36.52;	author brlcad;	state Exp;
branches;
next	14.11;

14.11
date	2006.08.08.06.47.05;	author brlcad;	state Exp;
branches;
next	14.10;

14.10
date	2006.07.09.18.25.32;	author brlcad;	state Exp;
branches;
next	14.9;

14.9
date	2006.01.18.06.46.16;	author brlcad;	state Exp;
branches;
next	14.8;

14.8
date	2005.10.23.04.44.34;	author brlcad;	state Exp;
branches;
next	14.7;

14.7
date	2005.08.12.22.30.12;	author lbutler;	state Exp;
branches
	14.7.4.1;
next	14.6;

14.6
date	2005.01.30.20.30.53;	author brlcad;	state Exp;
branches;
next	14.5;

14.5
date	2004.12.21.06.38.20;	author morrison;	state Exp;
branches;
next	14.4;

14.4
date	2004.12.21.06.18.44;	author morrison;	state Exp;
branches;
next	14.3;

14.3
date	2004.12.21.05.45.22;	author morrison;	state Exp;
branches;
next	14.2;

14.2
date	2004.12.21.03.58.27;	author morrison;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.14;	author morrison;	state Exp;
branches;
next	1.2;

1.2
date	2004.08.02.23.01.48;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.20.15.19.43;	author morrison;	state Exp;
branches;
next	;

14.7.4.1
date	2005.11.13.13.46.15;	author brlcad;	state Exp;
branches;
next	14.7.4.2;

14.7.4.2
date	2005.11.13.17.45.01;	author brlcad;	state Exp;
branches;
next	;


desc
@@


14.16
log
@remove the fblocal.h header file.  it was only used in three places (two files) and only contained one macro (wrapper to fb_log an error), so keep it simple until it's really needed.
@
text
@/*                       I F _ P T T Y . C
 * BRL-CAD
 *
 * Copyright (c) 1986-2007 United States Government as represented by
 * the U.S. Army Research Laboratory.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * version 2.1 as published by the Free Software Foundation.
 *
 * This library is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this file; see the file named COPYING for more
 * information.
 */
/** @@addtogroup if */
/** @@{ */
/** @@file if_ptty.c

   Author -
	Gary S. Moss

 */
/** @@} */

#ifndef lint
static char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libfb/if_ptty.c,v 14.15 2007/07/26 01:13:56 brlcad Exp $ (BRL)";
#endif

#include "common.h"

#include <stdio.h>
#include <fcntl.h>

#include "machine.h"
#include "fb.h"

#include "./dmdfb.h"


#define MAX_DIMENSION	256
#define CVT2DMD( _i )		((_i)/(ifp->if_width/MAX_DIMENSION)*3)
#define INTENSITY_FACTOR	(1.0/26.0)
#define R_NTSC			(0.35*INTENSITY_FACTOR)
#define G_NTSC			(0.55*INTENSITY_FACTOR)
#define B_NTSC			(0.10*INTENSITY_FACTOR)
static int	over_sampl;

HIDDEN int	ptty_open(FBIO *ifp, char *ptty_name, int width, int height),
		ptty_close(FBIO *ifp),
		ptty_clear(FBIO *ifp, RGBpixel (*bgpp)),
		ptty_read(FBIO *ifp, int x, int y, RGBpixel (*pixelp), long int ct),
		ptty_write(register FBIO *ifp, int x, int y, RGBpixel (*pixelp), long int ct),
		ptty_view(FBIO *ifp, int xcenter, int ycenter, int xzoom, int yzoom),
		ptty_window_set(FBIO *ifp, int x, int y),	/* OLD */
		ptty_zoom_set(FBIO *ifp, int x, int y),	/* OLD */
		ptty_cursor(FBIO *ifp, int mode, int x, int y),
		ptty_background_set(),
		ptty_animate(),
		ptty_setsize(FBIO *ifp, int width, int height),
		ptty_help(FBIO *ifp);

FBIO ptty_interface = {
	0,
	ptty_open,
	ptty_close,
	ptty_clear,
	ptty_read,
	ptty_write,
	fb_null,			/* read colormap */
	fb_null,			/* write colormap */
	ptty_view,
	fb_sim_getview,
	fb_null,			/* curs_set */
	ptty_cursor,
	fb_sim_getcursor,
	fb_sim_readrect,
	fb_sim_writerect,
	fb_sim_bwreadrect,
	fb_sim_bwwriterect,
	fb_null,			/* poll */
	fb_null,			/* flush */
	ptty_close,			/* free */
	ptty_help,
	"Unix pseudo-tty Interface",
	800,
	1024,
	"/dev/tty",
	800,			/* XXX - are these good defaults? */
	1024,
	-1,			/* select fd */
	-1,
	1, 1,			/* zoom */
	400, 512,		/* window center */
	0, 0, 0,		/* cursor */
	PIXEL_NULL,
	PIXEL_NULL,
	PIXEL_NULL,
	-1,
	0,
	0L,
	0L,
	0
};

HIDDEN	int	output_Scan(FBIO *ifp, register RGBpixel (*pixels), int ct);
HIDDEN int	put_Run(register FBIO *ifp, register int ct, int val);
HIDDEN int	rgb_To_Dither_Val(register RGBpixel (*pixel));

/*ARGSUSED*/
HIDDEN int
ptty_open(FBIO *ifp, char *ptty_name, int width, int height)
{
	FB_CK_FBIO(ifp);

	/* Check for default size */
	if( width == 0 )
		width = ifp->if_width;
	if( height == 0 )
		height = ifp->if_height;

	ifp->if_width = width;
	ifp->if_height = height;
	over_sampl = ifp->if_width / MAX_DIMENSION;
	if( (ifp->if_fd = open( ptty_name, O_RDWR, 0 )) == -1 )
		return	-1;
	(void) ptty_setsize( ifp, width, height );
	return	ifp->if_fd;
}

HIDDEN int
ptty_close(FBIO *ifp)
{
	return	close( ifp->if_fd ) == -1 ? -1 : 0;
}

HIDDEN int
ptty_clear(FBIO *ifp, RGBpixel (*bgpp))
{
	static char	ptty_buf[2] = { PT_CLEAR, NULL };

	return	write( ifp->if_fd, ptty_buf, 1 ) < 1 ? -1 : 0;
}

HIDDEN int
ptty_write(register FBIO *ifp, int x, int y, RGBpixel (*pixelp), long int ct)
{
	static char	ptty_buf[10];
	register int	scan_ct;

/*	y = ifp->if_width-1-y;		/* 1st quadrant */
	(void) sprintf( ptty_buf, "%c%04d%04d", PT_SEEK, CVT2DMD( x ), CVT2DMD( y ));
	if( write( ifp->if_fd, ptty_buf, 9 ) < 9 )
		return	-1;
	for( ; ct > 0; pixelp += scan_ct, x = 0 )
		{
		if( ct > ifp->if_width - x )
			scan_ct = ifp->if_width - x;
		else
			scan_ct = ct;
		if( output_Scan( ifp, pixelp, scan_ct ) == -1 )
			return	-1;
		ct -= scan_ct;
		}
	return	0;
}

HIDDEN int
ptty_read(FBIO *ifp, int x, int y, RGBpixel (*pixelp), long int ct)
{
/*	y = ifp->if_width-1-y;		/* 1st quadrant */
#if 0 /* Not yet implemented. */
	if( read( ifp->if_fd, (char *) pixelp, (int)(sizeof(RGBpixel)*ct) ) < sizeof(RGBpixel)*ct)
	    return -1;
#endif
	return	0;
}

HIDDEN int
ptty_setsize(FBIO *ifp, int width, int height)
{
	static char	ptty_buf[10];

	width = CVT2DMD( width );
	height = CVT2DMD( height );
	(void) sprintf( ptty_buf, "%c%04d%04d", PT_SETSIZE, width, height );
	return	write( ifp->if_fd, ptty_buf, 9 ) == 9 ? 0 : -1;
}

HIDDEN int
ptty_view(FBIO *ifp, int xcenter, int ycenter, int xzoom, int yzoom)
{
	fb_sim_view(ifp, xcenter, ycenter, xzoom, yzoom);
	ptty_window_set(ifp, xcenter, ycenter);
	ptty_zoom_set(ifp, xzoom, yzoom);
	return	0;
}

HIDDEN int
ptty_window_set(FBIO *ifp, int x, int y)
{
	static char	ptty_buf[10];

/*	y = ifp->if_width-1-y;		/* 1st quadrant */
	(void) sprintf(	ptty_buf, "%c%04d%04d", PT_WINDOW, CVT2DMD( x ), CVT2DMD( y ) );
	return	write( ifp->if_fd, ptty_buf, 9 ) == 9 ? 0 : -1;
}

HIDDEN int
ptty_zoom_set(FBIO *ifp, int x, int y)
{
	static char	ptty_buf[10];

	x /= over_sampl; /* Correct for scale-down.	*/
	y /= over_sampl;
	(void) sprintf( ptty_buf, "%c%04d%04d", PT_ZOOM, x, y );
	return	write( ifp->if_fd, ptty_buf, 9 ) == 9 ? 0 : -1;
}

HIDDEN int
ptty_cursor(FBIO *ifp, int mode, int x, int y)
{
	static char	ptty_buf[11];

/*	y = ifp->if_width-1-y;		/* 1st quadrant */
	fb_sim_cursor(ifp, mode, x, y);
	(void) sprintf(	ptty_buf,
			"%c%1d%04d%04d",
			PT_CURSOR, mode, CVT2DMD( x ), CVT2DMD( y )
			);
	return	write( ifp->if_fd, ptty_buf, 10 ) == 10 ? 0 : -1;
}

#ifdef never
HIDDEN int
ptty_animate( ifp, nframes, framesz, fps )
FBIO	*ifp;
int	nframes, framesz, fps;
{
	static char	ptty_buf[14];
	(void) sprintf(	ptty_buf,
			"%c%04d%04d%04d",
			PT_ANIMATE, nframes, framesz, fps
			);
	return	write( ifp->if_fd, ptty_buf, 13 ) == 13 ? 0 : -1;
}
#endif

/*	o u t p u t _ S c a n ( )
	Take care of conversion to monochrome image, and run-length encoding
	of 1 scan line of 'ct' pixels.
	Output to stdout.
 */
HIDDEN int
output_Scan(FBIO *ifp, register RGBpixel (*pixels), int ct)
{
	register int	i, j;
	static char	output_buf[MAX_DIMENSION+1];
	register char	*p = output_buf;
	static int	line_ct = 1;

	/* Reduce image through pixel averaging to 256 x 256.		*/
	for( i = 0; i < ct; i += over_sampl, p++ ) {
		register int	val;
		for( j = 0, val = 0; j < over_sampl; j++, pixels++ )
			val += rgb_To_Dither_Val( pixels );
		val /= over_sampl;	/* Avg. horizontal summation.	*/
		if( line_ct == 1 )
			*p = val;
		else
			*p += val;
		if( line_ct == over_sampl )
			*p /= over_sampl;	/* Avg. vertical sum.	*/
	}
	if( line_ct < over_sampl ) {
		line_ct++;
		return	0;
	}
	else
		line_ct = 1;
	*p = '\0';

	/* Output buffer as run-length encoded byte stream.		*/
	{
	register int	byte_ct;
	for( i = 0, p = output_buf, byte_ct = 1; i < 256; i++, p++ ) {
		if( *p == *(p+1) )
			byte_ct++;
		else {
			if( put_Run( ifp, byte_ct, (int) *p ) == -1 )
				return	-1;
			byte_ct = 1;
		}
	}
	if( byte_ct > 1 && put_Run( ifp, byte_ct, (int) p[-1] ) == -1 )
		return	-1;
	}
	return	write( ifp->if_fd, "\n", 1 );
}

HIDDEN int
put_Run(register FBIO *ifp, register int ct, int val)
{
	static char	ptty_buf[4];
/*	(void) fprintf( stderr, "put_Run( %d, %d )\n", ct, val ); */
	while( ct > 0 ) {
		(void) sprintf(	ptty_buf,
				"%c%c%c",
				PT_WRITE, (ct >= 64 ? 64 : ct ) + ' ',
				val+'0'
				);
		if( write( ifp->if_fd, ptty_buf, 3 ) < 3 )
			return	-1;
		ct -= 64;
	}
	return	0;
}

HIDDEN int
rgb_To_Dither_Val(register RGBpixel (*pixel))
{
	return	(R_NTSC * (*pixel)[RED] + G_NTSC * (*pixel)[GRN]
		+ B_NTSC * (*pixel)[BLU]);
}

HIDDEN int
ptty_help(FBIO *ifp)
{
	fb_log( "Description: %s\n", ptty_interface.if_type );
	fb_log( "Device: %s\n", ifp->if_name );
	fb_log( "Max width/height: %d %d\n",
		ptty_interface.if_max_width,
		ptty_interface.if_max_height );
	fb_log( "Default width/height: %d %d\n",
		ptty_interface.if_width,
		ptty_interface.if_height );
	return(0);
}

/*
 * Local Variables:
 * mode: C
 * tab-width: 8
 * c-basic-offset: 4
 * indent-tabs-mode: t
 * End:
 * ex: shiftwidth=4 tabstop=8
 */
@


14.15
log
@remove ephemeral data like phone numbers and addresses, including the misleading 'source' statements on code that is continually evolving and receiving contributions from many many sources
@
text
@d31 1
a31 1
static char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libfb/if_ptty.c,v 14.14 2007/01/23 01:13:34 brlcad Exp $ (BRL)";
a42 1
#include "./fblocal.h"
@


14.14
log
@Sweeping license updates.  Documentation is fully relicensed to the BSD Documentation License (a minor variant of the FreeBSD Documentation License and BSD License).  All GPL code (mostly application code) is converted to the LGPL and now also specifically declares version 2.1, revoking the blank check to the FSF.  The intent of these sweeping changes are to simplify the licensing terms and increase overall flexibility of use, both externally (to users for their purposes) and internally (to allow application code to be migrated to libraries without creating GPL libraries).  As a collective work, BRL-CAD is now LGPL.
@
text
@a26 7
  Source -
	SECAD/VLD Computing Consortium, Bldg 394
	The U. S. Army Ballistic Research Laboratory
	Aberdeen Proving Ground, Maryland  21005-5066


	$Header: /cvsroot/brlcad/brlcad/src/libfb/if_ptty.c,v 14.13 2007/01/21 04:45:42 brlcad Exp $ (BRL)
d31 1
a31 1
static char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libfb/if_ptty.c,v 14.13 2007/01/21 04:45:42 brlcad Exp $ (BRL)";
@


14.13
log
@ugh, what tedium.  put some effort towards cleaning up the doxygen labels and making the headers more consistent.  also exclusively using @@ for doxygen instead of \ to try to keep things more consistent.
@
text
@d9 1
a9 2
 * as published by the Free Software Foundation; either version 2 of
 * the License, or (at your option) any later version.
d14 1
a14 1
 * Library General Public License for more details.
d33 1
a33 1
	$Header: /cvsroot/brlcad/brlcad/src/libfb/if_ptty.c,v 14.12 2007/01/20 14:36:52 brlcad Exp $ (BRL)
d38 1
a38 1
static char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libfb/if_ptty.c,v 14.12 2007/01/20 14:36:52 brlcad Exp $ (BRL)";
@


14.12
log
@update copyright to 2007
@
text
@d21 2
a22 3

/** \addtogroup if */
/*@@{*/
d34 1
a34 1
	$Header: /cvsroot/brlcad/brlcad/src/libfb/if_ptty.c,v 14.11 2006/08/08 06:47:05 brlcad Exp $ (BRL)
d36 1
a36 1
/*@@}*/
d39 1
a39 1
static char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libfb/if_ptty.c,v 14.11 2006/08/08 06:47:05 brlcad Exp $ (BRL)";
@


14.11
log
@get rid of the libfb-specific _LOCAL_ macro, instead using HIDDEN like everyone else (currently still provided by machine.h)
@
text
@d4 1
a4 1
 * Copyright (c) 1986-2006 United States Government as represented by
d35 1
a35 1
	$Header: /cvsroot/brlcad/brlcad/src/libfb/if_ptty.c,v 14.10 2006/07/09 18:25:32 brlcad Exp $ (BRL)
d40 1
a40 1
static char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libfb/if_ptty.c,v 14.10 2006/07/09 18:25:32 brlcad Exp $ (BRL)";
@


14.10
log
@add additional error checking to make sure a -1 return value from read() is handled
@
text
@d35 1
a35 1
	$Header: /cvsroot/brlcad/brlcad/src/libfb/if_ptty.c,v 14.9 2006/01/18 06:46:16 brlcad Exp $ (BRL)
d40 1
a40 1
static char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libfb/if_ptty.c,v 14.9 2006/01/18 06:46:16 brlcad Exp $ (BRL)";
a44 2


d50 1
d54 1
d63 1
a63 1
_LOCAL_ int	ptty_open(FBIO *ifp, char *ptty_name, int width, int height),
d120 3
a122 3
_LOCAL_	int	output_Scan(FBIO *ifp, register RGBpixel (*pixels), int ct);
_LOCAL_ int	put_Run(register FBIO *ifp, register int ct, int val);
_LOCAL_ int	rgb_To_Dither_Val(register RGBpixel (*pixel));
d125 1
a125 1
_LOCAL_ int
d145 1
a145 1
_LOCAL_ int
d151 1
a151 1
_LOCAL_ int
d159 1
a159 1
_LOCAL_ int
d182 1
a182 1
_LOCAL_ int
d193 1
a193 1
_LOCAL_ int
d204 1
a204 1
_LOCAL_ int
d213 1
a213 1
_LOCAL_ int
d223 1
a223 1
_LOCAL_ int
d234 1
a234 1
_LOCAL_ int
d249 1
a249 1
_LOCAL_ int
d268 1
a268 1
_LOCAL_ int
d315 1
a315 1
_LOCAL_ int
d333 1
a333 1
_LOCAL_ int
d340 1
a340 1
_LOCAL_ int
@


14.9
log
@update copyright to 2006
@
text
@d35 1
a35 1
	$Header: /cvsroot/brlcad/brlcad/src/libfb/if_ptty.c,v 14.8 2005/10/23 04:44:34 brlcad Exp $ (BRL)
d40 1
a40 1
static char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libfb/if_ptty.c,v 14.8 2005/10/23 04:44:34 brlcad Exp $ (BRL)";
d187 2
a188 4
	if( read( ifp->if_fd, (char *) pixelp, (int)(sizeof(RGBpixel)*ct) )
		< sizeof(RGBpixel)*ct
		)
		return	-1;
@


14.8
log
@trailing ws
@
text
@d4 1
a4 1
 * Copyright (C) 1986-2005 United States Government as represented by
d35 1
a35 1
	$Header: /cvsroot/brlcad/brlcad/src/libfb/if_ptty.c,v 14.7 2005/08/12 22:30:12 lbutler Exp $ (BRL)
d40 1
a40 1
static char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libfb/if_ptty.c,v 14.7 2005/08/12 22:30:12 lbutler Exp $ (BRL)";
@


14.7
log
@Doxygen changes
@
text
@d25 1
a25 1
 
a32 1
  
d34 2
a35 1
	$Header: /cvsroot/brlcad/brlcad/src/libfb/if_ptty.c,v 14.6 2005/01/30 20:30:53 brlcad Exp $ (BRL)
d40 1
a40 1
static char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libfb/if_ptty.c,v 14.6 2005/01/30 20:30:53 brlcad Exp $ (BRL)";
@


14.7.4.1
log
@merge changes from HEAD aka rel-7-6-4 to the rel-7-6-branch just in case someone peeks a gander or tries to continue/build the branch
@
text
@d25 1
a25 1

d33 1
d35 1
a35 2

	$Header$ (BRL)
d40 1
a40 1
static char RCSid[] = "@@(#)$Header$ (BRL)";
@


14.7.4.2
log
@more merging changes from HEAD aka rel-7-6-4 to the rel-7-6-branch, adding the items that were moved and resolving rcs keyword conflicts
@
text
@d34 2
a35 1
	$Header: /cvsroot/brlcad/brlcad/src/libfb/if_ptty.c,v 14.7.4.1 2005/11/13 13:46:15 brlcad Exp $ (BRL)
d40 1
a40 1
static char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libfb/if_ptty.c,v 14.7.4.1 2005/11/13 13:46:15 brlcad Exp $ (BRL)";
@


14.6
log
@update copyright to 2005
@
text
@d21 3
d25 2
a26 1
  Author -
d35 1
a35 1
	$Header: /cvsroot/brlcad/brlcad/src/libfb/if_ptty.c,v 14.5 2004/12/21 06:38:20 morrison Exp $ (BRL)
d37 2
d40 1
a40 1
static char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libfb/if_ptty.c,v 14.5 2004/12/21 06:38:20 morrison Exp $ (BRL)";
@


14.5
log
@remove the old copyright notice section
@
text
@d4 1
a4 1
 * Copyright (c) 1986-2004 United States Government as represented by
d31 1
a31 1
	$Header: /cvs/brlcad/src/libfb/if_ptty.c,v 14.4 2004/12/21 06:18:44 morrison Exp $ (BRL)
d34 1
a34 1
static char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/libfb/if_ptty.c,v 14.4 2004/12/21 06:18:44 morrison Exp $ (BRL)";
@


14.4
log
@they should have received a copy of the LGPL with LGPL'd files
@
text
@a29 3
  Copyright Notice -
	This software is Copyright (C) 1986-2004 by the United States Army.
	All rights reserved.
d31 1
a31 1
	$Header: /cvs/brlcad/src/libfb/if_ptty.c,v 14.3 2004/12/21 05:45:22 morrison Exp $ (BRL)
d34 1
a34 1
static char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/libfb/if_ptty.c,v 14.3 2004/12/21 05:45:22 morrison Exp $ (BRL)";
@


14.3
log
@s/GNU Library General/GNU Lesser General/g
@
text
@d17 2
a18 2
 * You should have received a copy of the GNU General Public License
 * along with this file; see the file named COPYING for more
d34 1
a34 1
	$Header: /cvs/brlcad/src/libfb/if_ptty.c,v 14.2 2004/12/21 03:58:27 morrison Exp $ (BRL)
d37 1
a37 1
static char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/libfb/if_ptty.c,v 14.2 2004/12/21 03:58:27 morrison Exp $ (BRL)";
@


14.2
log
@assign copyright and LGPL
@
text
@d8 1
a8 1
 * modify it under the terms of the GNU Library General Public License
d34 1
a34 1
	$Header: /cvs/brlcad/src/libfb/if_ptty.c,v 14.1 2004/11/16 19:42:14 morrison Exp $ (BRL)
d37 1
a37 1
static char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/libfb/if_ptty.c,v 14.1 2004/11/16 19:42:14 morrison Exp $ (BRL)";
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d1 21
a21 1
/*
d34 1
a34 1
	$Header: /cvs/brlcad/src/libfb/if_ptty.c,v 1.2 2004/08/02 23:01:48 morrison Exp $ (BRL)
d37 1
a37 1
static char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/libfb/if_ptty.c,v 1.2 2004/08/02 23:01:48 morrison Exp $ (BRL)";
@


1.2
log
@replace the wrapped config.h block with common.h
@
text
@d14 1
a14 1
	$Header: /cvs/brlcad/src/libfb/if_ptty.c,v 1.1 2004/05/20 15:19:43 morrison Exp $ (BRL)
d17 1
a17 1
static char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/libfb/if_ptty.c,v 1.1 2004/05/20 15:19:43 morrison Exp $ (BRL)";
d332 10
@


1.1
log
@Vast reorganization begins.  Sources moved from top-level directories into src/.
@
text
@d14 1
a14 1
	$Header: /cvs/brlcad/libfb/if_ptty.c,v 11.7 2004/05/10 15:30:45 erikg Exp $ (BRL)
d17 1
a17 1
static char RCSid[] = "@@(#)$Header: /cvs/brlcad/libfb/if_ptty.c,v 11.7 2004/05/10 15:30:45 erikg Exp $ (BRL)";
d20 1
a20 3
#ifdef HAVE_CONFIG_H
# include "config.h"
#endif
@

