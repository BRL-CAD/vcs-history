head	14.13;
access;
symbols
	rel-7-10-4:14.13
	STABLE:14.13.0.2
	stable-branch:14.5
	rel-7-10-2:14.12
	rel-7-10-0:14.12
	rel-7-8-4:14.9
	rel-7-8-2:14.8
	rel-7-8-0:14.8
	trimnurbs-branch:14.8.0.2
	help:14.8
	temp_tag:14.6
	bobWinPort-20051223-freeze:14.6
	postmerge-20051223-bobWinPort:14.6
	premerge-20051223-bobWinPort:14.6
	rel-7-6-6:14.6
	rel-7-6-4:14.6
	rel-7-6-2:14.6
	rel-7-6-branch:14.6.0.4
	rel-7-6-0:14.6
	rel-7-4-2:14.5
	rel-7-4-branch:14.5.0.2
	bobWinPort:14.6.0.2
	rel-7-4-0:14.5
	rel-7-2-6:14.5
	rel-7-2-4:14.5
	rel-7-2-2:14.5
	rel-7-2-0:14.5
	rel-7-0-4:14.4
	rel-7-0-2:14.4
	rel-7-0-1:14.4
	opensource-post:14.4
	opensource-pre:1.3
	rel-7-0-branch:1.3.0.2
	rel-7-0:1.3;
locks; strict;
comment	@ * @;


14.13
date	2007.08.18.03.15.11;	author brlcad;	state Exp;
branches;
next	14.12;

14.12
date	2007.01.23.01.13.34;	author brlcad;	state Exp;
branches;
next	14.11;

14.11
date	2007.01.21.04.45.42;	author brlcad;	state Exp;
branches;
next	14.10;

14.10
date	2007.01.20.14.36.52;	author brlcad;	state Exp;
branches;
next	14.9;

14.9
date	2006.08.08.06.47.05;	author brlcad;	state Exp;
branches;
next	14.8;

14.8
date	2006.02.27.08.31.53;	author brlcad;	state Exp;
branches;
next	14.7;

14.7
date	2006.01.18.06.46.16;	author brlcad;	state Exp;
branches;
next	14.6;

14.6
date	2005.08.12.22.30.12;	author lbutler;	state Exp;
branches;
next	14.5;

14.5
date	2005.01.30.20.30.48;	author brlcad;	state Exp;
branches;
next	14.4;

14.4
date	2004.12.21.06.18.44;	author morrison;	state Exp;
branches;
next	14.3;

14.3
date	2004.12.21.05.45.22;	author morrison;	state Exp;
branches;
next	14.2;

14.2
date	2004.12.21.03.58.27;	author morrison;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.14;	author morrison;	state Exp;
branches;
next	1.3;

1.3
date	2004.09.15.06.39.52;	author morrison;	state Exp;
branches;
next	1.2;

1.2
date	2004.08.02.23.01.48;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.20.15.19.42;	author morrison;	state Exp;
branches;
next	;


desc
@@


14.13
log
@remove the fblocal.h header file.  it was only used in three places (two files) and only contained one macro (wrapper to fb_log an error), so keep it simple until it's really needed.
@
text
@/*                      I F _ D E B U G . C
 * BRL-CAD
 *
 * Copyright (c) 2004-2007 United States Government as represented by
 * the U.S. Army Research Laboratory.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * version 2.1 as published by the Free Software Foundation.
 *
 * This library is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this file; see the file named COPYING for more
 * information.
 */
/** @@addtogroup if */
/** @@{ */
/** @@file if_debug.c
 *
 *  Reports all calls to fb_log().
 */
/** @@} */

#ifndef lint
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libfb/if_debug.c,v 14.12 2007/01/23 01:13:34 brlcad Exp $ (BRL)";
#endif

#include "common.h"

#include <stdlib.h>
#include <stdio.h>
#include <ctype.h>

#include "machine.h"
#include "fb.h"


HIDDEN int	deb_open(FBIO *ifp, char *file, int width, int height),
		deb_close(FBIO *ifp),
		deb_clear(FBIO *ifp, unsigned char *pp),
		deb_read(FBIO *ifp, int x, int y, unsigned char *pixelp, int count),
		deb_write(FBIO *ifp, int x, int y, const unsigned char *pixelp, int count),
		deb_rmap(FBIO *ifp, ColorMap *cmp),
		deb_wmap(FBIO *ifp, const ColorMap *cmp),
		deb_view(FBIO *ifp, int xcenter, int ycenter, int xzoom, int yzoom),
		deb_getview(FBIO *ifp, int *xcenter, int *ycenter, int *xzoom, int *yzoom),
		deb_setcursor(FBIO *ifp, const unsigned char *bits, int xbits, int ybits, int xorig, int yorig),
		deb_cursor(FBIO *ifp, int mode, int x, int y),
		deb_getcursor(FBIO *ifp, int *mode, int *x, int *y),
		deb_readrect(FBIO *ifp, int xmin, int ymin, int width, int height, unsigned char *pp),
		deb_writerect(FBIO *ifp, int xmin, int ymin, int width, int height, const unsigned char *pp),
		deb_bwreadrect(FBIO *ifp, int xmin, int ymin, int width, int height, unsigned char *pp),
		deb_bwwriterect(FBIO *ifp, int xmin, int ymin, int width, int height, const unsigned char *pp),
		deb_poll(FBIO *ifp),
		deb_flush(FBIO *ifp),
		deb_free(FBIO *ifp),
		deb_help(FBIO *ifp);

/* This is the ONLY thing that we "export" */
FBIO debug_interface = {
	0,
	deb_open,
	deb_close,
	deb_clear,
	deb_read,
	deb_write,
	deb_rmap,
	deb_wmap,
	deb_view,
	deb_getview,
	deb_setcursor,
	deb_cursor,
	deb_getcursor,
	deb_readrect,
	deb_writerect,
	deb_bwreadrect,
	deb_bwwriterect,
	deb_poll,
	deb_flush,
	deb_free,
	deb_help,
	"Debugging Interface",
	32*1024,		/* max width */
	32*1024,		/* max height */
	"/dev/debug",
	512,			/* current/default width */
	512,			/* current/default height */
	-1,			/* select fd */
	-1,			/* file descriptor */
	1, 1,			/* zoom */
	256, 256,		/* window center */
	0, 0, 0,		/* cursor */
	PIXEL_NULL,		/* page_base */
	PIXEL_NULL,		/* page_curp */
	PIXEL_NULL,		/* page_endp */
	-1,			/* page_no */
	0,			/* page_ref */
	0L,			/* page_curpos */
	0L,			/* page_pixels */
	0			/* debug */
};


HIDDEN int
deb_open(FBIO *ifp, char *file, int width, int height)
{
	FB_CK_FBIO(ifp);
	if( file == (char *)NULL )
		fb_log( "fb_open( 0x%lx, NULL, %d, %d )\n",
			(unsigned long)ifp, width, height );
	else
		fb_log( "fb_open( 0x%lx, \"%s\", %d, %d )\n",
			(unsigned long)ifp, file, width, height );

	/* check for default size */
	if( width <= 0 )
		width = ifp->if_width;
	if( height <= 0 )
		height = ifp->if_height;

	/* set debug bit vector */
	if( file != NULL ) {
		char *cp;
		for( cp = file; *cp != '\0' && !isdigit(*cp); cp++ ) ;
		sscanf( cp, "%d", &ifp->if_debug );
	} else {
		ifp->if_debug = 0;
	}

	/* Give the user whatever width was asked for */
	ifp->if_width = width;
	ifp->if_height = height;

	return	0;
}

HIDDEN int
deb_close(FBIO *ifp)
{
	FB_CK_FBIO(ifp);
	fb_log( "fb_close( 0x%lx )\n", (unsigned long)ifp );
	return	0;
}

HIDDEN int
deb_clear(FBIO *ifp, unsigned char *pp)
{
	FB_CK_FBIO(ifp);
	if( pp == 0 )
		fb_log( "fb_clear( 0x%lx, NULL )\n", (unsigned long)ifp );
	else
		fb_log( "fb_clear( 0x%lx, &[%d %d %d] )\n",
			(unsigned long)ifp,
			(int)(pp[RED]), (int)(pp[GRN]),
			(int)(pp[BLU]) );
	return	0;
}

HIDDEN int
deb_read(FBIO *ifp, int x, int y, unsigned char *pixelp, int count)
{
	FB_CK_FBIO(ifp);
	fb_log( "fb_read( 0x%lx,%4d,%4d, 0x%lx, %d )\n",
		(unsigned long)ifp, x, y,
		(unsigned long)pixelp, count );
	return	count;
}

HIDDEN int
deb_write(FBIO *ifp, int x, int y, const unsigned char *pixelp, int count)
{
	int	i;

	FB_CK_FBIO(ifp);
	fb_log( "fb_write( 0x%lx,%4d,%4d, 0x%lx, %d )\n",
		(unsigned long)ifp, x, y,
		(unsigned long)pixelp, count );

	/* write them out, four per line */
	if( ifp->if_debug & FB_DEBUG_RW ) {
		for( i = 0; i < count; i++ ) {
			if( i % 4 == 0 )
				fb_log( "%4d:", i );
			fb_log( "  [%3d,%3d,%3d]", *(pixelp+(i*3)+RED),
				*(pixelp+(i*3)+GRN), *(pixelp+(i*3)+BLU) );
			if( i % 4 == 3 )
				fb_log( "\n" );
		}
		if( i % 4 != 0 )
			fb_log( "\n" );
	}

	return	count;
}

HIDDEN int
deb_rmap(FBIO *ifp, ColorMap *cmp)
{
	FB_CK_FBIO(ifp);
	fb_log( "fb_rmap( 0x%lx, 0x%lx )\n",
		(unsigned long)ifp, (unsigned long)cmp );
	return	0;
}

HIDDEN int
deb_wmap(FBIO *ifp, const ColorMap *cmp)
{
	int	i;

	FB_CK_FBIO(ifp);
	if( cmp == NULL )
		fb_log( "fb_wmap( 0x%lx, NULL )\n",
			(unsigned long)ifp );
	else
		fb_log( "fb_wmap( 0x%lx, 0x%lx )\n",
			(unsigned long)ifp, (unsigned long)cmp );

	if( ifp->if_debug & FB_DEBUG_CMAP && cmp != NULL ) {
		for( i = 0; i < 256; i++ ) {
			fb_log( "%3d: [ 0x%4lx, 0x%4lx, 0x%4lx ]\n",
				i,
				(unsigned long)cmp->cm_red[i],
				(unsigned long)cmp->cm_green[i],
				(unsigned long)cmp->cm_blue[i] );
		}
	}

	return	0;
}

HIDDEN int
deb_view(FBIO *ifp, int xcenter, int ycenter, int xzoom, int yzoom)
{
	FB_CK_FBIO(ifp);
	fb_log( "fb_view( 0x%lx,%4d,%4d,%4d,%4d )\n",
		(unsigned long)ifp, xcenter, ycenter, xzoom, yzoom );
	fb_sim_view( ifp, xcenter, ycenter, xzoom, yzoom );
	return	0;
}

HIDDEN int
deb_getview(FBIO *ifp, int *xcenter, int *ycenter, int *xzoom, int *yzoom)
{
	FB_CK_FBIO(ifp);
	fb_log( "fb_getview( 0x%lx, 0x%x, 0x%x, 0x%x, 0x%x )\n",
		(unsigned long)ifp, xcenter, ycenter, xzoom, yzoom );
	fb_sim_getview( ifp, xcenter, ycenter, xzoom, yzoom );
	fb_log( " <= %d %d %d %d\n",
		*xcenter, *ycenter, *xzoom, *yzoom );
	return	0;
}

HIDDEN int
deb_setcursor(FBIO *ifp, const unsigned char *bits, int xbits, int ybits, int xorig, int yorig)
{
	FB_CK_FBIO(ifp);
	fb_log( "fb_setcursor( 0x%lx, 0x%lx, %d, %d, %d, %d )\n",
		(unsigned long)ifp, bits, xbits, ybits, xorig, yorig );
	return	0;
}

HIDDEN int
deb_cursor(FBIO *ifp, int mode, int x, int y)
{
	fb_log( "fb_cursor( 0x%lx, %d,%4d,%4d )\n",
		(unsigned long)ifp, mode, x, y );
	fb_sim_cursor( ifp, mode, x, y );
	return	0;
}

HIDDEN int
deb_getcursor(FBIO *ifp, int *mode, int *x, int *y)
{
	FB_CK_FBIO(ifp);
	fb_log( "fb_getcursor( 0x%lx, 0x%x,0x%x,0x%x )\n",
		(unsigned long)ifp, mode, x, y );
	fb_sim_getcursor( ifp, mode, x, y );
	fb_log( " <= %d %d %d\n", *mode, *x, *y );
	return	0;
}

HIDDEN int
deb_readrect(FBIO *ifp, int xmin, int ymin, int width, int height, unsigned char *pp)
{
	FB_CK_FBIO(ifp);
	fb_log( "fb_readrect( 0x%lx, (%4d,%4d), %4d,%4d, 0x%lx )\n",
		(unsigned long)ifp, xmin, ymin, width, height,
		(unsigned long)pp );
	return( width*height );
}

HIDDEN int
deb_writerect(FBIO *ifp, int xmin, int ymin, int width, int height, const unsigned char *pp)
{
	FB_CK_FBIO(ifp);
	fb_log( "fb_writerect( 0x%lx,%4d,%4d,%4d,%4d, 0x%lx )\n",
		(unsigned long)ifp, xmin, ymin, width, height,
		(unsigned long)pp );
	return( width*height );
}

HIDDEN int
deb_bwreadrect(FBIO *ifp, int xmin, int ymin, int width, int height, unsigned char *pp)
{
	FB_CK_FBIO(ifp);
	fb_log( "fb_bwreadrect( 0x%lx, (%4d,%4d), %4d,%4d, 0x%lx )\n",
		(unsigned long)ifp, xmin, ymin, width, height,
		(unsigned long)pp );
	return( width*height );
}

HIDDEN int
deb_bwwriterect(FBIO *ifp, int xmin, int ymin, int width, int height, const unsigned char *pp)
{
	FB_CK_FBIO(ifp);
	fb_log( "fb_bwwriterect( 0x%lx,%4d,%4d,%4d,%4d, 0x%lx )\n",
		(unsigned long)ifp, xmin, ymin, width, height,
		(unsigned long)pp );
	return( width*height );
}

HIDDEN int
deb_poll(FBIO *ifp)
{
	FB_CK_FBIO(ifp);
	fb_log( "fb_poll( 0x%lx )\n", (unsigned long)ifp );
	return	0;
}

HIDDEN int
deb_flush(FBIO *ifp)
{
	FB_CK_FBIO(ifp);
	fb_log( "if_flush( 0x%lx )\n", (unsigned long)ifp );
	return	0;
}

HIDDEN int
deb_free(FBIO *ifp)
{
	FB_CK_FBIO(ifp);
	fb_log( "fb_free( 0x%lx )\n", (unsigned long)ifp );
	return	0;
}

/*ARGSUSED*/
HIDDEN int
deb_help(FBIO *ifp)
{
	FB_CK_FBIO(ifp);
	fb_log( "Description: %s\n", debug_interface.if_type );
	fb_log( "Device: %s\n", ifp->if_name );
	fb_log( "Max width/height: %d %d\n",
		debug_interface.if_max_width,
		debug_interface.if_max_height );
	fb_log( "Default width/height: %d %d\n",
		debug_interface.if_width,
		debug_interface.if_height );
	fb_log( "\
Usage: /dev/debug[#]\n\
  where # is a optional bit vector from:\n\
    1    debug buffered I/O calls\n\
    2    show colormap entries in rmap/wmap calls\n\
    4    show actual pixel values in read/write calls\n" );
	/*8    buffered read/write values - ifdef'd out*/

	return	0;
}

/*
 * Local Variables:
 * mode: C
 * tab-width: 8
 * c-basic-offset: 4
 * indent-tabs-mode: t
 * End:
 * ex: shiftwidth=4 tabstop=8
 */
@


14.12
log
@Sweeping license updates.  Documentation is fully relicensed to the BSD Documentation License (a minor variant of the FreeBSD Documentation License and BSD License).  All GPL code (mostly application code) is converted to the LGPL and now also specifically declares version 2.1, revoking the blank check to the FSF.  The intent of these sweeping changes are to simplify the licensing terms and increase overall flexibility of use, both externally (to users for their purposes) and internally (to allow application code to be migrated to libraries without creating GPL libraries).  As a collective work, BRL-CAD is now LGPL.
@
text
@d29 1
a29 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libfb/if_debug.c,v 14.11 2007/01/21 04:45:42 brlcad Exp $ (BRL)";
a39 1
#include "./fblocal.h"
@


14.11
log
@ugh, what tedium.  put some effort towards cleaning up the doxygen labels and making the headers more consistent.  also exclusively using @@ for doxygen instead of \ to try to keep things more consistent.
@
text
@d9 1
a9 2
 * as published by the Free Software Foundation; either version 2 of
 * the License, or (at your option) any later version.
d14 1
a14 1
 * Library General Public License for more details.
d29 1
a29 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libfb/if_debug.c,v 14.10 2007/01/20 14:36:52 brlcad Exp $ (BRL)";
@


14.10
log
@update copyright to 2007
@
text
@d21 2
a22 3

/** \addtogroup if */
/*@@{*/
d24 1
d27 1
a27 1
/*@@}*/
d30 1
a30 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libfb/if_debug.c,v 14.9 2006/08/08 06:47:05 brlcad Exp $ (BRL)";
@


14.9
log
@get rid of the libfb-specific _LOCAL_ macro, instead using HIDDEN like everyone else (currently still provided by machine.h)
@
text
@d4 1
a4 1
 * Copyright (c) 2004-2006 United States Government as represented by
d30 1
a30 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libfb/if_debug.c,v 14.8 2006/02/27 08:31:53 brlcad Exp $ (BRL)";
@


14.8
log
@stdlib.h warning quelling
@
text
@d30 1
a30 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libfb/if_debug.c,v 14.7 2006/01/18 06:46:16 brlcad Exp $ (BRL)";
d44 1
a44 1
_LOCAL_ int	deb_open(FBIO *ifp, char *file, int width, int height),
d110 1
a110 1
_LOCAL_ int
d143 1
a143 1
_LOCAL_ int
d151 1
a151 1
_LOCAL_ int
d165 1
a165 1
_LOCAL_ int
d175 1
a175 1
_LOCAL_ int
d202 1
a202 1
_LOCAL_ int
d211 1
a211 1
_LOCAL_ int
d237 1
a237 1
_LOCAL_ int
d247 1
a247 1
_LOCAL_ int
d259 1
a259 1
_LOCAL_ int
d268 1
a268 1
_LOCAL_ int
d277 1
a277 1
_LOCAL_ int
d288 1
a288 1
_LOCAL_ int
d298 1
a298 1
_LOCAL_ int
d308 1
a308 1
_LOCAL_ int
d318 1
a318 1
_LOCAL_ int
d328 1
a328 1
_LOCAL_ int
d336 1
a336 1
_LOCAL_ int
d344 1
a344 1
_LOCAL_ int
d353 1
a353 1
_LOCAL_ int
@


14.7
log
@update copyright to 2006
@
text
@d30 1
a30 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libfb/if_debug.c,v 14.6 2005/08/12 22:30:12 lbutler Exp $ (BRL)";
d35 1
@


14.6
log
@Doxygen changes
@
text
@d4 1
a4 1
 * Copyright (C) 2004-2005 United States Government as represented by
d30 1
a30 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libfb/if_debug.c,v 14.5 2005/01/30 20:30:48 brlcad Exp $ (BRL)";
@


14.5
log
@update copyright to 2005
@
text
@d21 3
a24 1
 *
d27 2
d30 1
a30 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libfb/if_debug.c,v 14.4 2004/12/21 06:18:44 morrison Exp $ (BRL)";
@


14.4
log
@they should have received a copy of the LGPL with LGPL'd files
@
text
@d4 2
a5 2
 * Copyright (c) 2004 United States Government as represented by the
 * U.S. Army Research Laboratory.
d26 1
a26 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/libfb/if_debug.c,v 14.3 2004/12/21 05:45:22 morrison Exp $ (BRL)";
@


14.3
log
@s/GNU Library General/GNU Lesser General/g
@
text
@d17 2
a18 2
 * You should have received a copy of the GNU General Public License
 * along with this file; see the file named COPYING for more
d26 1
a26 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/libfb/if_debug.c,v 14.2 2004/12/21 03:58:27 morrison Exp $ (BRL)";
@


14.2
log
@assign copyright and LGPL
@
text
@d8 1
a8 1
 * modify it under the terms of the GNU Library General Public License
d26 1
a26 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/libfb/if_debug.c,v 14.1 2004/11/16 19:42:14 morrison Exp $ (BRL)";
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d1 21
a21 2
/*
 *		I F _ D E B U G
d26 1
a26 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/libfb/if_debug.c,v 1.3 2004/09/15 06:39:52 morrison Exp $ (BRL)";
@


1.3
log
@quell a slew of function pointer argument mismatches -- use unsigned chars like we're supposed to instead of RGBpixels (ia64 quelling)
@
text
@d7 1
a7 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/libfb/if_debug.c,v 1.2 2004/08/02 23:01:48 morrison Exp $ (BRL)";
d351 10
@


1.2
log
@replace the wrapped config.h block with common.h
@
text
@d7 1
a7 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/libfb/if_debug.c,v 1.1 2004/05/20 15:19:42 morrison Exp $ (BRL)";
a11 2


d19 1
d22 3
a24 3
		deb_clear(FBIO *ifp, RGBpixel (*pp)),
		deb_read(FBIO *ifp, int x, int y, RGBpixel (*pixelp), int count),
		deb_write(FBIO *ifp, int x, int y, RGBpixel (*pixelp), int count),
d26 1
a26 1
		deb_wmap(FBIO *ifp, ColorMap *cmp),
d29 1
a29 1
		deb_setcursor(FBIO *ifp, unsigned char *bits, int xbits, int ybits, int xorig, int yorig),
d32 4
a35 4
		deb_readrect(FBIO *ifp, int xmin, int ymin, int width, int height, RGBpixel (*pp)),
		deb_writerect(FBIO *ifp, int xmin, int ymin, int width, int height, RGBpixel (*pp)),
		deb_bwreadrect(FBIO *ifp, int xmin, int ymin, int width, int height, RGBpixel (*pp)),
		deb_bwwriterect(FBIO *ifp, int xmin, int ymin, int width, int height, RGBpixel (*pp)),
d85 1
d128 1
a128 1
deb_clear(FBIO *ifp, RGBpixel (*pp))
d136 2
a137 2
			(int)((*pp)[RED]), (int)((*pp)[GRN]),
			(int)((*pp)[BLU]) );
d142 1
a142 1
deb_read(FBIO *ifp, int x, int y, RGBpixel (*pixelp), int count)
d152 1
a152 1
deb_write(FBIO *ifp, int x, int y, RGBpixel (*pixelp), int count)
d166 2
a167 2
			fb_log( "  [%3d,%3d,%3d]", pixelp[i][RED],
				pixelp[i][GRN], pixelp[i][BLU] );
d188 1
a188 1
deb_wmap(FBIO *ifp, ColorMap *cmp)
d236 1
a236 1
deb_setcursor(FBIO *ifp, unsigned char *bits, int xbits, int ybits, int xorig, int yorig)
d265 1
a265 1
deb_readrect(FBIO *ifp, int xmin, int ymin, int width, int height, RGBpixel (*pp))
d275 1
a275 1
deb_writerect(FBIO *ifp, int xmin, int ymin, int width, int height, RGBpixel (*pp))
d285 1
a285 1
deb_bwreadrect(FBIO *ifp, int xmin, int ymin, int width, int height, RGBpixel (*pp))
d295 1
a295 1
deb_bwwriterect(FBIO *ifp, int xmin, int ymin, int width, int height, RGBpixel (*pp))
@


1.1
log
@Vast reorganization begins.  Sources moved from top-level directories into src/.
@
text
@d7 1
a7 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/libfb/if_debug.c,v 11.7 2004/05/10 15:30:45 erikg Exp $ (BRL)";
d10 1
a10 3
#ifdef HAVE_CONFIG_H
# include "config.h"
#endif
@

