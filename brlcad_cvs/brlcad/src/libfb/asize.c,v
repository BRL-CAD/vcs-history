head	14.18;
access;
symbols
	rel-7-10-4:14.17.2.1
	STABLE:14.17.0.2
	stable-branch:14.6
	rel-7-10-2:14.17
	rel-7-10-0:14.16
	rel-7-8-4:14.12
	rel-7-8-2:14.11
	rel-7-8-0:14.11
	trimnurbs-branch:14.11.0.2
	help:14.11
	temp_tag:14.10
	bobWinPort-20051223-freeze:14.9
	postmerge-20051223-bobWinPort:14.10
	premerge-20051223-bobWinPort:14.10
	rel-7-6-6:14.10
	rel-7-6-4:14.10
	rel-7-6-2:14.9
	rel-7-6-branch:14.9.0.4
	rel-7-6-0:14.9
	rel-7-4-2:14.7
	rel-7-4-branch:14.7.0.2
	bobWinPort:14.9.0.2
	rel-7-4-0:14.7
	rel-7-2-6:14.7
	rel-7-2-4:14.7
	rel-7-2-2:14.6
	rel-7-2-0:14.6
	rel-7-0-4:14.5
	rel-7-0-2:14.5
	rel-7-0-1:14.5
	opensource-post:14.5
	opensource-pre:1.3
	rel-7-0-branch:1.3.0.2
	rel-7-0:1.3;
locks; strict;
comment	@ * @;


14.18
date	2007.09.15.16.23.10;	author brlcad;	state Exp;
branches;
next	14.17;

14.17
date	2007.07.26.01.13.56;	author brlcad;	state Exp;
branches
	14.17.2.1;
next	14.16;

14.16
date	2007.01.27.01.41.37;	author brlcad;	state Exp;
branches;
next	14.15;

14.15
date	2007.01.23.01.13.34;	author brlcad;	state Exp;
branches;
next	14.14;

14.14
date	2007.01.21.04.45.42;	author brlcad;	state Exp;
branches;
next	14.13;

14.13
date	2007.01.20.14.36.52;	author brlcad;	state Exp;
branches;
next	14.12;

14.12
date	2006.08.01.15.02.55;	author brlcad;	state Exp;
branches;
next	14.11;

14.11
date	2006.01.18.06.46.16;	author brlcad;	state Exp;
branches;
next	14.10;

14.10
date	2005.10.23.04.44.34;	author brlcad;	state Exp;
branches;
next	14.9;

14.9
date	2005.08.15.21.47.08;	author bob1961;	state Exp;
branches
	14.9.4.1;
next	14.8;

14.8
date	2005.08.12.22.30.12;	author lbutler;	state Exp;
branches;
next	14.7;

14.7
date	2005.05.04.03.20.23;	author brlcad;	state Exp;
branches;
next	14.6;

14.6
date	2005.01.30.20.30.48;	author brlcad;	state Exp;
branches;
next	14.5;

14.5
date	2004.12.21.07.18.58;	author morrison;	state Exp;
branches;
next	14.4;

14.4
date	2004.12.21.06.18.44;	author morrison;	state Exp;
branches;
next	14.3;

14.3
date	2004.12.21.05.45.22;	author morrison;	state Exp;
branches;
next	14.2;

14.2
date	2004.12.21.03.58.27;	author morrison;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.14;	author morrison;	state Exp;
branches;
next	1.3;

1.3
date	2004.09.03.23.30.57;	author morrison;	state Exp;
branches;
next	1.2;

1.2
date	2004.08.02.23.01.48;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.20.15.19.40;	author morrison;	state Exp;
branches;
next	;

14.9.4.1
date	2005.11.13.13.46.15;	author brlcad;	state Exp;
branches;
next	;

14.17.2.1
date	2007.09.28.14.07.48;	author brlcad;	state Exp;
branches;
next	;


desc
@@


14.18
log
@more c89 embracing.  c89 provides string.h for all of the various str*() and mem*() functions, so remove the check for its presence.  there is still likely to be work required for strict c89 conformance for the various bsd strings.h functions that may be in use.
@
text
@/*                         A S I Z E . C
 * BRL-CAD
 *
 * Copyright (c) 2004-2007 United States Government as represented by
 * the U.S. Army Research Laboratory.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * version 2.1 as published by the Free Software Foundation.
 *
 * This library is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this file; see the file named COPYING for more
 * information.
 */
/** @@addtogroup libfb */
/** @@{ */
/** @@file ./libfb/asize.c
 *
 *  Image file AutoSizing code.
 *
 *  Author -
 *	Phil Dykstra
 *
 */
/** @@} */

#ifndef lint
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libfb/asize.c,v 14.17 2007/07/26 01:13:56 brlcad Exp $ (BRL)";
#endif

#include "common.h"

#include <stdio.h>
#include <math.h>
#include <sys/stat.h>
#include <string.h>

#include "machine.h"
#include "vmath.h"
#include "bu.h"
#include "fb.h"


/* This table does not need to include any square sizes */
struct sizes {
	unsigned long int	width;		/* image width in pixels */
	unsigned long int	height;		/* image height in pixels */
};
struct sizes fb_common_sizes[] = {
	{  160,  120 },		/* quarter 640x480 */
	{  192,  128 },		/* Kodak Photo-CD, level 1, Base/16 */
	{  320,  200 },		/* PC screen format */
	{  320,  240 },		/* half 640x480 */
	{  384,  256 },		/* Kodak Photo-CD, level 2, Base/4 */
	{  640,  512 },		/* half 1280x1024 */
	{  640,  400 },		/* PC screen format */
	{  640,	 480 },		/* Common video format */
	{  640,	 485 },		/* Common video format, most correct */
	{  640,	 486 },		/* Common video format */
	{  720,	 485 },		/* Abekas video format, most correct */
	{  720,	 486 },		/* Abekas video format */
	{  768,  512 },		/* Kodak Photo-CD, level 3, Base */
	{ 1024,	 768 },		/* SGI-3D screen size */
	{ 1152,  900 },		/* Sun screen size */
	{ 1280,  960 },		/* twice 640x480 */
	{ 1280,	1024 },		/* SGI-4D screen size */
	{ 1440,  972 },		/* double Abekas video format */
	{ 1536, 1024 },		/* Kodak Photo-CD, level 4, 4*Base */
	{ 1600, 1200 },		/* Digital camera */
	{ 1600, 1280 },		/* Large monitor */
	{ 3072, 2048 },		/* Kodak Photo-CD, level 5, 16*Base */
	{ 3200, 4000 },		/* 8x10 inches, 400 dpi */
	{ 3400, 4400 },		/* 8.5x11 inches, 400 dpi */
	{ 4700, 3300 },		/* A4 size, 11.75x8.25 inches, 400 dpi */
	{    0,	   0 }
};

/*
 *		       F B _ C O M M O N _ F I L E _ S I Z E
 *
 *  If the file name contains size information encoded in it,
 *  then that size is returned, even if it differs from the actual
 *  file dimensions.  (It might have been truncated).
 *  Otherwise, the actual file size is passed to fb_common_image_size()
 *  to see if this is a plausible image size.
 *
 *  Returns -
 *	0	size unknown
 *	1	width and height returned
 */
int
fb_common_file_size(unsigned long int *widthp, unsigned long int *heightp, const char *filename, int pixel_size)
				/* pointer to returned width */
				/* pointer to returned height */
				/* image file to stat */
				/* bytes per pixel */
{
	struct	stat	sbuf;
	unsigned long int	size;
	register const char	*cp;

	*widthp = *heightp = 0;		/* sanity */

	if (pixel_size <= 0) {
	    return 0;
	}

	if( filename == NULL || *filename == '\0' ) {
	    return 0;
	}

	/* Skip over directory names, if any */
	cp = strchr( filename, '/' );
	if( cp ) {
	    cp++;			/* skip over slash */
	} else {
	    cp = filename;		/* no slash */
	}

	if( fb_common_name_size( widthp, heightp, cp ) )
		return 1;

	if( stat( filename, &sbuf ) < 0 )
		return	0;

	size = (unsigned long int)(sbuf.st_size / pixel_size);

	return fb_common_image_size( widthp, heightp, size );
}


/*                      F B _ C O M M O N _ N A M E _ S I Z E
 *
 *  Given the number of pixels in an image file, along with a name for the
 *  image (possibly the filename), attempt to determine the
 *  the width and height of the image.
 *
 *  Returns -
 *	0	size unknown
 *	1	width and height returned
 */

int
fb_common_name_size(unsigned long int *widthp, unsigned long int *heightp, const char *name)
				/* pointer to returned width */
				/* pointer to returned height */
					/* name to parse */
{
    register const char *cp = name;

    /* File name may have several minus signs in it.  Try repeatedly */
    while( *cp )  {
	cp = strchr( cp, '-' );		/* Find a minus sign */
	if( cp == NULL )  break;
	if( sscanf(cp, "-w%lu-n%lu", widthp, heightp ) == 2 )
	    return 1;
	cp++;				/* skip over the minus */
    }

    /* If we got here, we didn't see the answer in the name. */
    return 0;
}


/*
 *			F B _ C O M M O N _ I M A G E _ S I Z E
 *
 *  Given the number of pixels in an image file,
 *  if this is a "common" image size,
 *  return the width and height of the image.
 *
 *  Returns -
 *	0	size unknown
 *	1	width and height returned
 */
int
fb_common_image_size(unsigned long int *widthp, unsigned long int *heightp, register unsigned long int npixels)
				/* pointer to returned width */
				/* pointer to returned height */
				/* Number of pixels */
{
	register struct	sizes	*sp;
	long int		root;

	if( npixels <= 0 )
		return	0;

	sp = fb_common_sizes;
	while( sp->width != 0 ) {
		if( npixels == sp->width * sp->height ) {
			*widthp = sp->width;
			*heightp = sp->height;
			return	1;
		}
		sp++;
	}

	/* If the size is a perfect square, then use that. */
	root = (long int)(sqrt((double)npixels)+0.999);
	if( root*root == npixels )  {
		*widthp = root;
		*heightp = root;
		return	1;
	}

	/* Nope, we are clueless. */
	return	0;
}

/*
 * Local Variables:
 * mode: C
 * tab-width: 8
 * c-basic-offset: 4
 * indent-tabs-mode: t
 * End:
 * ex: shiftwidth=4 tabstop=8
 */
@


14.17
log
@remove ephemeral data like phone numbers and addresses, including the misleading 'source' statements on code that is continually evolving and receiving contributions from many many sources
@
text
@d33 1
a33 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libfb/asize.c,v 14.16 2007/01/27 01:41:37 brlcad Exp $ (BRL)";
d41 1
a41 5
#ifdef HAVE_STRING_H
#  include <string.h>
#else
#  include <strings.h>
#endif
@


14.17.2.1
log
@merge from head, make linger the default framebuffer action instead of transient for all windowing framebuffer interfaces.
@
text
@d33 1
a33 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libfb/asize.c,v 14.18 2007/09/15 16:23:10 brlcad Exp $ (BRL)";
d41 5
a45 1
#include <string.h>
@


14.16
log
@ws. lots and lots of ws.  see sh/ws.sh for details (cases 'abcdeg').
@
text
@a28 5
 *  Source -
 *	SECAD/VLD Computing Consortium, Bldg 394
 *	The U. S. Army Ballistic Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5066
 *
d33 1
a33 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libfb/asize.c,v 14.15 2007/01/23 01:13:34 brlcad Exp $ (BRL)";
@


14.15
log
@Sweeping license updates.  Documentation is fully relicensed to the BSD Documentation License (a minor variant of the FreeBSD Documentation License and BSD License).  All GPL code (mostly application code) is converted to the LGPL and now also specifically declares version 2.1, revoking the blank check to the FSF.  The intent of these sweeping changes are to simplify the licensing terms and increase overall flexibility of use, both externally (to users for their purposes) and internally (to allow application code to be migrated to libraries without creating GPL libraries).  As a collective work, BRL-CAD is now LGPL.
@
text
@d38 1
a38 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libfb/asize.c,v 14.14 2007/01/21 04:45:42 brlcad Exp $ (BRL)";
d107 4
a110 4
   	        		/* pointer to returned width */
   	         		/* pointer to returned height */
          	          	/* image file to stat */
   	           		/* bytes per pixel */
d135 1
a135 1
	        return 1;
d159 3
a161 3
   	        		/* pointer to returned width */
   	         		/* pointer to returned height */
          	      		        /* name to parse */
a178 1

d192 3
a194 3
   	        		/* pointer to returned width */
   	         		/* pointer to returned height */
            	        	/* Number of pixels */
@


14.14
log
@ugh, what tedium.  put some effort towards cleaning up the doxygen labels and making the headers more consistent.  also exclusively using @@ for doxygen instead of \ to try to keep things more consistent.
@
text
@d9 1
a9 2
 * as published by the Free Software Foundation; either version 2 of
 * the License, or (at your option) any later version.
d14 1
a14 1
 * Library General Public License for more details.
d38 1
a38 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libfb/asize.c,v 14.13 2007/01/20 14:36:52 brlcad Exp $ (BRL)";
@


14.13
log
@update copyright to 2007
@
text
@d21 2
a22 2
/** \addtogroup libfb */
/*@@{*/
d24 2
a25 1
 * Image file AutoSizing code.
d36 1
a36 1
/*@@}*/
d39 1
a39 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libfb/asize.c,v 14.12 2006/08/01 15:02:55 brlcad Exp $ (BRL)";
@


14.12
log
@refactor the three asize.c implementations (libbn, libfb, & canon) into just one.  libbn had the most comprehensive and updated version, but the logic belongs in libfb.  so, the bn_common autosizing functions are now consolidated to libfb, refactoring accordingly.
@
text
@d4 1
a4 1
 * Copyright (c) 2004-2006 United States Government as represented by
d38 1
a38 1
static const char RCSid[] = "@@(#)$Header: $ (BRL)";
@


14.11
log
@update copyright to 2006
@
text
@a20 1

d38 1
a38 1
static char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libfb/asize.c,v 14.10 2005/10/23 04:44:34 brlcad Exp $ (BRL)";
d51 4
d57 1
d83 2
d93 1
a93 1
 *			F B _ C O M M O N _ F I L E _ S I Z E
d106 1
a106 1
fb_common_file_size(unsigned long int *widthp, unsigned long int *heightp, char *filename, int pixel_size)
d109 1
a109 1
    	          		/* image file to stat */
d113 2
a114 2
	size_t	size;
	register char	*cp;
d128 4
a131 11
	if( cp )
		cp++;			/* skip over slash */
	else
		cp = filename;		/* no slash */
	/* File name may have several minus signs in it.  Try repeatedly */
	while( *cp )  {
		cp = strchr( cp, '-' );		/* Find a minus sign */
		if( cp == NULL )  break;
		if( sscanf(cp, "-w%lu-n%lu", widthp, heightp ) == 2 )
			return 1;
		cp++;				/* skip over the minus */
d134 30
a163 3
	if( stat( filename, &sbuf ) < 0 ) {
	    return 0;
	}
d165 8
a172 1
	size = (size_t)(sbuf.st_size / pixel_size);
d174 2
a175 1
	return fb_common_image_size( widthp, heightp, (unsigned long int)size );
d178 2
@


14.10
log
@trailing ws
@
text
@d4 1
a4 1
 * Copyright (C) 2004-2005 United States Government as represented by
d39 1
a39 1
static char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libfb/asize.c,v 14.9 2005/08/15 21:47:08 bob1961 Exp $ (BRL)";
@


14.9
log
@include fb.h
@
text
@d29 1
a29 1
 *  
d34 1
a34 1
 *  
d39 1
a39 1
static char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libfb/asize.c,v 14.8 2005/08/12 22:30:12 lbutler Exp $ (BRL)";
@


14.9.4.1
log
@merge changes from HEAD aka rel-7-6-4 to the rel-7-6-branch just in case someone peeks a gander or tries to continue/build the branch
@
text
@d29 1
a29 1
 *
d34 1
a34 1
 *
d39 1
a39 1
static char RCSid[] = "@@(#)$Header$ (BRL)";
@


14.8
log
@Doxygen changes
@
text
@d39 1
a39 1
static char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libfb/asize.c,v 14.7 2005/05/04 03:20:23 brlcad Exp $ (BRL)";
d52 1
a52 1

@


14.7
log
@support images that are larger than int dimensions, kick it up a notch to unsigned long int dimensions
@
text
@d21 4
a24 2
/** @@file asize.c
 *
d36 1
d39 1
a39 1
static char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libfb/asize.c,v 14.6 2005/01/30 20:30:48 brlcad Exp $ (BRL)";
@


14.6
log
@update copyright to 2005
@
text
@d36 1
a36 1
static char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libfb/asize.c,v 14.5 2004/12/21 07:18:58 morrison Exp $ (BRL)";
a40 2


d45 1
a45 1
#include <string.h>
d47 1
a47 1
#include <strings.h>
d50 1
d53 2
a54 2
	int	width;		/* image width in pixels */
	int	height;		/* image height in pixels */
d97 1
a97 1
fb_common_file_size(int *widthp, int *heightp, char *filename, int pixel_size)
d104 1
a104 1
	int	size;
d109 7
a115 2
	if( filename == NULL || *filename == '\0' )
		return	0;
d127 1
a127 1
		if( sscanf(cp, "-w%d-n%d", widthp, heightp ) == 2 )
d132 3
a134 2
	if( stat( filename, &sbuf ) < 0 )
		return	0;
d136 1
a136 1
	size = sbuf.st_size / pixel_size;
d138 1
a138 1
	return fb_common_image_size( widthp, heightp, size );
d153 1
a153 1
fb_common_image_size(int *widthp, int *heightp, register int npixels)
d159 1
a159 1
	int			root;
d175 1
a175 1
	root = (int)(sqrt((double)npixels)+0.999);
@


14.5
log
@the significantly modified pd files are incorporated as new works and assigned copyright, so remove the old statement.
@
text
@d4 2
a5 2
 * Copyright (c) 2004 United States Government as represented by the
 * U.S. Army Research Laboratory.
d36 1
a36 1
static char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/libfb/asize.c,v 14.4 2004/12/21 06:18:44 morrison Exp $ (BRL)";
@


14.4
log
@they should have received a copy of the LGPL with LGPL'd files
@
text
@a32 2
 *  Distribution Status -
 *	Public Domain, Distribution Unlimitied.
d36 1
a36 1
static char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/libfb/asize.c,v 14.3 2004/12/21 05:45:22 morrison Exp $ (BRL)";
@


14.3
log
@s/GNU Library General/GNU Lesser General/g
@
text
@d17 2
a18 2
 * You should have received a copy of the GNU General Public License
 * along with this file; see the file named COPYING for more
d38 1
a38 1
static char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/libfb/asize.c,v 14.2 2004/12/21 03:58:27 morrison Exp $ (BRL)";
@


14.2
log
@assign copyright and LGPL
@
text
@d8 1
a8 1
 * modify it under the terms of the GNU Library General Public License
d38 1
a38 1
static char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/libfb/asize.c,v 14.1 2004/11/16 19:42:14 morrison Exp $ (BRL)";
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d1 21
a21 2
/*
 *			A S I Z E . C
d38 1
a38 1
static char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/libfb/asize.c,v 1.3 2004/09/03 23:30:57 morrison Exp $ (BRL)";
@


1.3
log
@USE_STRING_H is no more.. it's HAVE_STRING_H
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/libfb/asize.c,v 1.2 2004/08/02 23:01:48 morrison Exp $ (BRL)";
d163 10
@


1.2
log
@replace the wrapped config.h block with common.h
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/libfb/asize.c,v 1.1 2004/05/20 15:19:40 morrison Exp $ (BRL)";
d29 1
a29 1
#ifdef USE_STRING_H
@


1.1
log
@Vast reorganization begins.  Sources moved from top-level directories into src/.
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /cvs/brlcad/libfb/asize.c,v 11.5 2004/05/10 15:30:44 erikg Exp $ (BRL)";
d22 1
a22 3
#ifdef HAVE_CONFIG_H
# include "config.h"
#endif
@

