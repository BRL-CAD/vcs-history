head	14.12;
access;
symbols
	rel-7-10-4:14.11
	STABLE:14.11.0.2
	stable-branch:14.4
	rel-7-10-2:14.11
	rel-7-10-0:14.10
	rel-7-8-4:14.8
	rel-7-8-2:14.8
	rel-7-8-0:14.8
	trimnurbs-branch:14.7.0.2
	help:14.7
	temp_tag:14.5
	bobWinPort-20051223-freeze:14.4
	postmerge-20051223-bobWinPort:14.5
	premerge-20051223-bobWinPort:14.5
	rel-7-6-6:14.5
	rel-7-6-4:14.5
	rel-7-6-2:14.4
	rel-7-6-branch:14.4.0.6
	rel-7-6-0:14.4
	rel-7-4-2:14.4
	rel-7-4-branch:14.4.0.4
	bobWinPort:14.4.0.2
	rel-7-4-0:14.4
	rel-7-2-6:14.4
	rel-7-2-4:14.4
	rel-7-2-2:14.4
	rel-7-2-0:14.4
	rel-7-0-4:14.3
	rel-7-0-2:14.3
	rel-7-0-1:14.3
	opensource-post:14.3
	opensource-pre:1.4
	rel-7-0-branch:1.4.0.2
	rel-7-0:1.4;
locks; strict;
comment	@ * @;


14.12
date	2007.09.15.16.23.19;	author brlcad;	state Exp;
branches;
next	14.11;

14.11
date	2007.05.14.21.04.33;	author brlcad;	state Exp;
branches;
next	14.10;

14.10
date	2007.01.23.01.13.45;	author brlcad;	state Exp;
branches;
next	14.9;

14.9
date	2007.01.20.14.36.59;	author brlcad;	state Exp;
branches;
next	14.8;

14.8
date	2006.04.05.19.15.29;	author brlcad;	state Exp;
branches;
next	14.7;

14.7
date	2006.02.27.10.08.41;	author brlcad;	state Exp;
branches
	14.7.2.1;
next	14.6;

14.6
date	2006.01.18.06.46.23;	author brlcad;	state Exp;
branches;
next	14.5;

14.5
date	2005.10.23.04.44.37;	author brlcad;	state Exp;
branches;
next	14.4;

14.4
date	2005.01.30.20.31.09;	author brlcad;	state Exp;
branches
	14.4.6.1;
next	14.3;

14.3
date	2004.12.21.07.18.58;	author morrison;	state Exp;
branches;
next	14.2;

14.2
date	2004.12.21.02.43.05;	author morrison;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.30;	author morrison;	state Exp;
branches;
next	1.4;

1.4
date	2004.09.03.23.30.59;	author morrison;	state Exp;
branches;
next	1.3;

1.3
date	2004.08.02.23.01.52;	author morrison;	state Exp;
branches;
next	1.2;

1.2
date	2004.06.08.22.04.34;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.20.15.20.42;	author morrison;	state Exp;
branches;
next	;

14.4.6.1
date	2005.11.13.13.46.19;	author brlcad;	state Exp;
branches;
next	;

14.7.2.1
date	2006.04.07.19.34.21;	author jlowenz;	state Exp;
branches;
next	;


desc
@@


14.12
log
@more c89 embracing.  c89 provides string.h for all of the various str*() and mem*() functions, so remove the check for its presence.  there is still likely to be work required for strict c89 conformance for the various bsd strings.h functions that may be in use.
@
text
@/*                         I H O S T . C
 * BRL-CAD
 *
 * Copyright (c) 2004-2007 United States Government as represented by
 * the U.S. Army Research Laboratory.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * version 2.1 as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this file; see the file named COPYING for more
 * information.
 */
/** @@file ihost.c
 *
 *  Internal host table routines.
 *
 *  Author -
 *	Michael John Muuss
 *
 *  Source -
 *	The U. S. Army Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5068  USA
 *
 */
#ifndef lint
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/remrt/ihost.c,v 14.11 2007/05/14 21:04:33 brlcad Exp $ (ARL)";
#endif

#include "common.h"

#include <stdlib.h>
#include <stdio.h>
#include <ctype.h>
#include <signal.h>
#include <errno.h>
#include <math.h>
#include <string.h>

#include <netdb.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <arpa/inet.h>

#ifdef HAVE_UNISTD_H
#  include <unistd.h>
#endif

#include "machine.h"
#include "vmath.h"
#include "raytrace.h"

#include "./ihost.h"


struct bu_list	HostHead;

/*
 *			G E T _ O U R _ H O S T N A M E
 *
 * There is a problem in some hosts that gethostname() will only
 * return the host name and *not* the fully qualified host name
 * with domain name.
 *
 * gethostbyname() will return a host table (nameserver) entry
 * where h_name is the "offical name", i.e. fully qualified.
 * Therefore the following piece of code.
 */
char *
get_our_hostname(void)
{
	char temp[512];
	struct hostent *hp;

	/* Init list head here */
	BU_LIST_INIT( &HostHead );

	gethostname(temp, sizeof(temp));

	hp = gethostbyname(temp);

	return bu_strdup(hp->h_name);
}

/*
 *			H O S T _ L O O K U P _ B Y _ H O S T E N T
 *
 *  We have a hostent structure, of which, the only thing of interest is
 *  the host name.  Go from name to address back to name, to get formal name.
 *
 *  Used by host_lookup_by_addr, too.
 */
struct ihost *
host_lookup_by_hostent(struct hostent *addr, int enter)
{
	register struct ihost	*ihp;
	struct hostent	*addr2;
	struct hostent	*addr3;

	addr2 = gethostbyname(addr->h_name);
	if( addr != addr2 )  {
		bu_log("host_lookup_by_hostent(%s) got %s?\n",
			addr->h_name, addr2 ? addr2->h_name : "NULL" );
		return IHOST_NULL;
	}
	addr3 = gethostbyaddr(addr2->h_addr_list[0],
	    sizeof(struct in_addr), addr2->h_addrtype);
	if( addr != addr3 )  {
		bu_log("host_lookup_by_hostent(%s) got %s?\n",
			addr->h_name, addr3 ? addr3->h_name : "NULL" );
		return IHOST_NULL;
	}
	/* Now addr->h_name points to the "formal" name of the host */

	/* Search list for existing instance */
	for( BU_LIST_FOR( ihp, ihost, &HostHead ) )  {
		CK_IHOST(ihp);

		if( strcmp( ihp->ht_name, addr->h_name ) != 0 )
			continue;
		return( ihp );
	}
	if( enter == 0 )
		return( IHOST_NULL );

	/* If not found and enter==1, enter in host table w/defaults */
	/* Note: gethostbyxxx() routines keep stuff in a static buffer */
	return( make_default_host( addr->h_name ) );
}

/*
 *			M A K E _ D E F A U L T _ H O S T
 *
 *  Add a new host entry to the list of known hosts, with
 *  default parameters.
 *  This routine is used to handle unexpected volunteers.
 */
struct ihost *
make_default_host(char *name)
{
	register struct ihost	*ihp;

	BU_GETSTRUCT( ihp, ihost );
	ihp->l.magic = IHOST_MAGIC;

	/* Make private copy of host name -- callers have static buffers */
	ihp->ht_name = bu_strdup( name );

	/* Default host parameters */
	ihp->ht_flags = 0x0;
	ihp->ht_when = HT_PASSIVE;
	ihp->ht_where = HT_CONVERT;
	ihp->ht_path = "/tmp";

	/* Add to linked list of known hosts */
	BU_LIST_INSERT( &HostHead, &ihp->l );

	return(ihp);
}

/*
 *			H O S T _ L O O K U P _ B Y _ A D D R
 */
struct ihost *
host_lookup_by_addr(struct sockaddr_in *from, int enter)
{
	register struct ihost	*ihp;
	struct hostent	*addr;
	unsigned long	addr_tmp;
	char		name[64];

	addr_tmp = from->sin_addr.s_addr;
	addr = gethostbyaddr( (char *)&from->sin_addr, sizeof (struct in_addr),
		from->sin_family);
	if( addr != NULL )  {
		ihp = host_lookup_by_hostent( addr, enter );
		if( ihp )  return ihp;
	}

	/* Host name is not known */
	addr_tmp = ntohl(addr_tmp);
	sprintf( name, "%ld.%ld.%ld.%ld",
		(addr_tmp>>24) & 0xff,
		(addr_tmp>>16) & 0xff,
		(addr_tmp>> 8) & 0xff,
		(addr_tmp    ) & 0xff );
	if( enter == 0 )  {
		bu_log("%s: unknown host\n", name);
		return( IHOST_NULL );
	}

	/* See if this host has been previously entered by number */
	for( BU_LIST_FOR( ihp, ihost, &HostHead ) )  {
		CK_IHOST(ihp);
		if( strcmp( ihp->ht_name, name ) == 0 )
			return( ihp );
	}

	/* Create a new hostent structure */
	return( make_default_host( name ) );
}

/*
 *			H O S T _ L O O K U P _ B Y _ N A M E
 */
struct ihost *
host_lookup_by_name(char *name, int enter)
{
	struct sockaddr_in	sockhim;
	struct hostent		*addr;

	/* Determine name to be found */
	if( isdigit( *name ) )  {
		/* Numeric */
		sockhim.sin_family = AF_INET;
		sockhim.sin_addr.s_addr = inet_addr(name);
		return( host_lookup_by_addr( &sockhim, enter ) );
	} else {
		addr = gethostbyname(name);
	}
	if( addr == NULL )  {
		bu_log("%s:  bad host\n", name);
		return( IHOST_NULL );
	}
	return( host_lookup_by_hostent( addr, enter ) );
}

/*
 *			H O S T _ L O O K U P _ O F _ F D
 */
struct ihost *
host_lookup_of_fd(int fd)
{
	auto socklen_t	fromlen;
	struct sockaddr_in from;

	fromlen = sizeof (from);
	if (getpeername(fd, (struct sockaddr *)&from, &fromlen) < 0) {
		perror("getpeername");
		return IHOST_NULL;
	}

	return host_lookup_by_addr( &from, 1 );
}

/*
 * Local Variables:
 * mode: C
 * tab-width: 8
 * c-basic-offset: 4
 * indent-tabs-mode: t
 * End:
 * ex: shiftwidth=4 tabstop=8
 */
@


14.11
log
@gah, pick up where someone left off over half a decade ago.  finish updating all of the compat4 symbols throughout the code to their new names.  finally. it's done.  make the deprecated headers obsolete -- make compat4.h obsolete too so we can be sure that all of the changes are now picked up by the compiler as errors.  this change will likely impact muves if they've similarly not updated to the new names too, so the headers are kept with a #warning for now (though will likely disappear down the road entirely).
@
text
@d33 1
a33 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/remrt/ihost.c,v 14.10 2007/01/23 01:13:45 brlcad Exp $ (ARL)";
d44 2
a45 8
#ifdef HAVE_STRING_H
#  include <string.h>
#else
#  include <strings.h>
#endif
#ifdef HAVE_UNISTD_H
#  include <unistd.h>
#endif
d53 4
@


14.10
log
@Sweeping license updates.  Documentation is fully relicensed to the BSD Documentation License (a minor variant of the FreeBSD Documentation License and BSD License).  All GPL code (mostly application code) is converted to the LGPL and now also specifically declares version 2.1, revoking the blank check to the FSF.  The intent of these sweeping changes are to simplify the licensing terms and increase overall flexibility of use, both externally (to users for their purposes) and internally (to allow application code to be migrated to libraries without creating GPL libraries).  As a collective work, BRL-CAD is now LGPL.
@
text
@d33 1
a33 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/remrt/ihost.c,v 14.9 2007/01/20 14:36:59 brlcad Exp $ (ARL)";
a60 2
#include "rtstring.h"
#include "rtlist.h"
@


14.9
log
@update copyright to 2007
@
text
@d8 2
a9 3
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation; either version 2 of the
 * License, or (at your option) any later version.
d14 1
a14 1
 * General Public License for more details.
d16 2
a17 2
 * You should have received a copy of the GNU General Public License
 * along with this file; see the file named COPYING for more
d33 1
a33 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/remrt/ihost.c,v 14.8 2006/04/05 19:15:29 brlcad Exp $ (ARL)";
@


14.8
log
@more header/warning cleanup from Intel compiler warnings on Altix
@
text
@d4 1
a4 1
 * Copyright (c) 2004-2006 United States Government as represented by
d34 1
a34 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/remrt/ihost.c,v 14.7 2006/02/27 10:08:41 brlcad Exp $ (ARL)";
@


14.7
log
@stdlib.h and exit()
@
text
@d34 1
a34 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/remrt/ihost.c,v 14.6 2006/01/18 06:46:23 brlcad Exp $ (ARL)";
d50 3
@


14.7.2.1
log
@update from HEAD
@
text
@d34 1
a34 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/remrt/ihost.c,v 14.7 2006/02/27 10:08:41 brlcad Exp $ (ARL)";
a49 3
#ifdef HAVE_UNISTD_H
#  include <unistd.h>
#endif
@


14.6
log
@update copyright to 2006
@
text
@d34 1
a34 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/remrt/ihost.c,v 14.5 2005/10/23 04:44:37 brlcad Exp $ (ARL)";
d39 1
a39 2


d46 1
a46 2

# include <string.h>
d48 1
a48 1
# include <strings.h>
a49 1

a50 1

d65 1
d244 1
a244 1
	auto int	fromlen;
@


14.5
log
@trailing ws
@
text
@d4 1
a4 1
 * Copyright (C) 2004-2005 United States Government as represented by
d34 1
a34 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/remrt/ihost.c,v 14.4 2005/01/30 20:31:09 brlcad Exp $ (ARL)";
@


14.4
log
@update copyright to 2005
@
text
@d27 1
a27 1
 *  
d31 1
a31 1
 *  
d34 1
a34 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/remrt/ihost.c,v 14.3 2004/12/21 07:18:58 morrison Exp $ (ARL)";
@


14.4.6.1
log
@merge changes from HEAD aka rel-7-6-4 to the rel-7-6-branch just in case someone peeks a gander or tries to continue/build the branch
@
text
@d27 1
a27 1
 *
d31 1
a31 1
 *
d34 1
a34 1
static const char RCSid[] = "@@(#)$Header$ (ARL)";
@


14.3
log
@the significantly modified pd files are incorporated as new works and assigned copyright, so remove the old statement.
@
text
@d4 2
a5 2
 * Copyright (c) 2004 United States Government as represented by the
 * U.S. Army Research Laboratory.
d34 1
a34 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/remrt/ihost.c,v 14.2 2004/12/21 02:43:05 morrison Exp $ (ARL)";
@


14.2
log
@assign copyright and GPL
@
text
@a31 2
 *  Distribution Status -
 *	Public Domain, Distribution Unlimited.
d34 1
a34 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/remrt/ihost.c,v 14.1 2004/11/16 19:42:30 morrison Exp $ (ARL)";
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d1 21
a21 2
/*
 *			I H O S T . C
d36 1
a36 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/remrt/ihost.c,v 1.4 2004/09/03 23:30:59 morrison Exp $ (ARL)";
@


1.4
log
@USE_STRING_H is no more.. it's HAVE_STRING_H
@
text
@d17 1
a17 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/remrt/ihost.c,v 1.3 2004/08/02 23:01:52 morrison Exp $ (ARL)";
d241 10
@


1.3
log
@replace the wrapped config.h block with common.h
@
text
@d17 1
a17 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/remrt/ihost.c,v 1.2 2004/06/08 22:04:34 morrison Exp $ (ARL)";
d29 1
a29 1
#ifdef USE_STRING_H
@


1.2
log
@obliterate externs.h
@
text
@d17 1
a17 1
static const char RCSid[] = "@@(#)$Header$ (ARL)";
d20 1
a20 3
#ifdef HAVE_CONFIG_H
# include "config.h"
#endif
@


1.1
log
@Vast reorganization begins.  Sources moved from top-level directories into src/.
@
text
@d17 1
a17 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/remrt/ihost.c,v 1.17 2004/05/10 15:30:49 erikg Exp $ (ARL)";
a50 1
#include "externs.h"
@

