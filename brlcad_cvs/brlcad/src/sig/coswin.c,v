head	14.10;
access;
symbols
	rel-7-10-4:14.7
	STABLE:14.7.0.2
	stable-branch:14.3
	rel-7-10-2:14.6
	rel-7-10-0:14.6
	rel-7-8-4:14.4
	rel-7-8-2:14.4
	rel-7-8-0:14.4
	trimnurbs-branch:14.4.0.2
	help:14.4
	temp_tag:14.3
	bobWinPort-20051223-freeze:14.3
	postmerge-20051223-bobWinPort:14.3
	premerge-20051223-bobWinPort:14.3
	rel-7-6-6:14.3
	rel-7-6-4:14.3
	rel-7-6-2:14.3
	rel-7-6-branch:14.3.0.6
	rel-7-6-0:14.3
	rel-7-4-2:14.3
	rel-7-4-branch:14.3.0.4
	bobWinPort:14.3.0.2
	rel-7-4-0:14.3
	rel-7-2-6:14.3
	rel-7-2-4:14.3
	rel-7-2-2:14.3
	rel-7-2-0:14.3
	rel-7-0-4:14.2
	rel-7-0-2:14.2
	rel-7-0-1:14.2
	opensource-post:14.2
	opensource-pre:1.1
	rel-7-0-branch:1.1.0.2
	rel-7-0:1.1;
locks; strict;
comment	@ * @;


14.10
date	2007.10.31.08.34.22;	author brlcad;	state Exp;
branches;
next	14.9;

14.9
date	2007.09.14.20.06.50;	author brlcad;	state Exp;
branches;
next	14.8;

14.8
date	2007.09.14.18.12.29;	author erikgreenwald;	state Exp;
branches;
next	14.7;

14.7
date	2007.09.07.20.41.58;	author erikgreenwald;	state Exp;
branches;
next	14.6;

14.6
date	2007.01.23.01.13.47;	author brlcad;	state Exp;
branches;
next	14.5;

14.5
date	2007.01.20.14.37.00;	author brlcad;	state Exp;
branches;
next	14.4;

14.4
date	2006.01.18.06.46.24;	author brlcad;	state Exp;
branches;
next	14.3;

14.3
date	2005.01.30.20.31.12;	author brlcad;	state Exp;
branches;
next	14.2;

14.2
date	2004.12.21.03.11.57;	author morrison;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.31;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.20.15.20.51;	author morrison;	state Exp;
branches;
next	;


desc
@@


14.10
log
@quell malloc warning, use libbu allocator
@
text
@/*                        C O S W I N . C
 * BRL-CAD
 *
 * Copyright (c) 2004-2007 United States Government as represented by
 * the U.S. Army Research Laboratory.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * version 2.1 as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this file; see the file named COPYING for more
 * information.
 */
/** @@file coswin.c
 *
 *  Do Cosine windowing effecting p percent of the samples in
 *  the buffer.  Precomputes the window function.
 */

#include "common.h"

#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "machine.h"
#include "bu.h"
#include "vmath.h"
#include "bn.h"

static int	_init_length = 0;	/* Internal: last initialized size */
static int	maxinitlen = 0;
static double	*coswintab = NULL;

/*
 *		I N I T _ C O S W I N T A B
 *
 * Internal routine to initialize the cosine window table for
 *  a given effect length (number of sample at each end effected).
 */
int
init_coswintab(int size)
{
	int	i;
	double	theta;

	if( size > maxinitlen ) {
		if( coswintab != NULL ) {
			bu_free( coswintab, "coswintab" );
			maxinitlen = 0;
		}
		coswintab = (double *)bu_malloc(size*sizeof(double), "coswintab");
		maxinitlen = size;
	}

	/* Check for odd lengths? XXX */

	/*
	 * Size is okay.  Set up tables.
	 */
	for( i = 0; i < size; i++ ) {
		theta = M_PI * i / (double)(size);
		coswintab[ i ] = 0.5 - 0.5 * cos( theta );
	}

	/*
	 * Mark size and return success.
	 */
	_init_length = size;
	return( 1 );
}


void
coswin(double *data, int length, double percent)
{
	int	num, i;

	num = percent * length/2 + 0.5;

	/* Check for window table initialization */
	if( num != _init_length ) {
		if( init_coswintab( num ) == 0 ) {
			/* Can't do requested size */
			return;
		}
	}

	/* Do window - could use pointers here... */
	for( i = 0; i < num; i++ ) {
		data[i] *= coswintab[i];
		data[length-i-1] *= coswintab[i];
	}

	bu_free(coswintab, "coswintab");
}

/*
 * Complex Data Version.
 */
void
ccoswin(bn_complex_t *data, int length, double percent)
{
	int	num, i;

	num = percent * length/2 + 0.5;

	/* Check for window table initialization */
	if( num != _init_length ) {
		if( init_coswintab( num ) == 0 ) {
			/* Can't do requested size */
			return;
		}
	}

	/* Do window - could use pointers here... */
	for( i = 0; i < num; i++ ) {
		data[i].re *= coswintab[i];
		data[length-i-1].re *= coswintab[i];
	}

	bu_free(coswintab, "coswintab");
}

/*
 * Local Variables:
 * mode: C
 * tab-width: 8
 * c-basic-offset: 4
 * indent-tabs-mode: t
 * End:
 * ex: shiftwidth=4 tabstop=8
 */
@


14.9
log
@The c89 headers are all fair game since it's been a requirement since the move to ANSI c89 compliance.  So.. remove the HAVE_STDLIB_H checks and just use the header.  The headers <complex.h>, <fenv.h>, <inttypes.h>, <stdbool.h>, <stdint.h>, and <tgmath.h> were added with C99 and still need to be checked.  There are several other c89 headers that we could just use, though, that are still being checked.
@
text
@d41 38
a78 1
int init_coswintab( int size );
d100 2
a126 35
}

/*
 *		I N I T _ C O S W I N T A B
 *
 * Internal routine to initialize the cosine window table for
 *  a given effect length (number of sample at each end effected).
 */
int
init_coswintab(int size)
{
	int	i;
	double	theta;

	if( size > maxinitlen ) {
		if( coswintab != NULL ) {
			free( coswintab );
			maxinitlen = 0;
		}
		if( (coswintab = (double *)malloc(size*sizeof(double))) == NULL ) {
			fprintf( stderr, "coswin: couldn't malloc space for %d elements\n", size );
			return( 0 );
		}
		maxinitlen = size;
	}

	/* Check for odd lengths? XXX */

	/*
	 * Size is okay.  Set up tables.
	 */
	for( i = 0; i < size; i++ ) {
		theta = M_PI * i / (double)(size);
		coswintab[ i ] = 0.5 - 0.5 * cos( theta );
	}
d128 1
a128 5
	/*
	 * Mark size and return success.
	 */
	_init_length = size;
	return( 1 );
@


14.8
log
@include stdlib.h for malloc()
@
text
@d27 1
d29 2
a31 5
#ifdef HAVE_STDLIB_H
# include <stdlib.h>
#endif

#include <math.h>
@


14.7
log
@eliminate complex.h
@
text
@d28 5
@


14.6
log
@Sweeping license updates.  Documentation is fully relicensed to the BSD Documentation License (a minor variant of the FreeBSD Documentation License and BSD License).  All GPL code (mostly application code) is converted to the LGPL and now also specifically declares version 2.1, revoking the blank check to the FSF.  The intent of these sweeping changes are to simplify the licensing terms and increase overall flexibility of use, both externally (to users for their purposes) and internally (to allow application code to be migrated to libraries without creating GPL libraries).  As a collective work, BRL-CAD is now LGPL.
@
text
@d25 8
a32 4
#include <stdlib.h>
#include <stdio.h>	/* for stderr */
#include <math.h>	/* for double sin(), cos() */
#include "./complex.h"
d66 1
a66 1
ccoswin(COMPLEX *data, int length, double percent)
d117 1
a117 1
		theta = PI * i / (double)(size);
@


14.5
log
@update copyright to 2007
@
text
@d8 2
a9 3
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation; either version 2 of the
 * License, or (at your option) any later version.
d14 1
a14 1
 * General Public License for more details.
d16 2
a17 2
 * You should have received a copy of the GNU General Public License
 * along with this file; see the file named COPYING for more
@


14.4
log
@update copyright to 2006
@
text
@d4 1
a4 1
 * Copyright (c) 2004-2006 United States Government as represented by
@


14.3
log
@update copyright to 2005
@
text
@d4 1
a4 1
 * Copyright (C) 2004-2005 United States Government as represented by
@


14.2
log
@assign copyright and GPL
@
text
@d4 2
a5 2
 * Copyright (c) 2004 United States Government as represented by the
 * U.S. Army Research Laboratory.
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d1 21
a21 2
/*
 *			C O S W I N
@


1.1
log
@Vast reorganization begins.  Sources moved from top-level directories into src/.
@
text
@d105 10
@

