head	14.13;
access;
symbols
	rel-7-10-4:14.12
	STABLE:14.12.0.2
	stable-branch:14.4
	rel-7-10-2:14.11
	rel-7-10-0:14.10
	rel-7-8-4:14.7
	rel-7-8-2:14.7
	rel-7-8-0:14.7
	trimnurbs-branch:14.7.0.2
	help:14.7
	temp_tag:14.5
	bobWinPort-20051223-freeze:14.4
	postmerge-20051223-bobWinPort:14.5
	premerge-20051223-bobWinPort:14.5
	rel-7-6-6:14.5
	rel-7-6-4:14.5
	rel-7-6-2:14.4
	rel-7-6-branch:14.4.0.6
	rel-7-6-0:14.4
	rel-7-4-2:14.4
	rel-7-4-branch:14.4.0.4
	bobWinPort:14.4.0.2
	rel-7-4-0:14.4
	rel-7-2-6:14.4
	rel-7-2-4:14.4
	rel-7-2-2:14.4
	rel-7-2-0:14.4
	rel-7-0-4:14.3
	rel-7-0-2:14.3
	rel-7-0-1:14.3
	opensource-post:14.3
	opensource-pre:1.6
	rel-7-0-branch:1.6.0.2
	rel-7-0:1.6;
locks; strict;
comment	@ * @;


14.13
date	2007.09.15.16.23.22;	author brlcad;	state Exp;
branches;
next	14.12;

14.12
date	2007.08.29.18.33.24;	author erikgreenwald;	state Exp;
branches;
next	14.11;

14.11
date	2007.07.26.01.13.59;	author brlcad;	state Exp;
branches;
next	14.10;

14.10
date	2007.02.02.08.48.30;	author brlcad;	state Exp;
branches;
next	14.9;

14.9
date	2007.01.23.01.13.47;	author brlcad;	state Exp;
branches;
next	14.8;

14.8
date	2007.01.20.14.37.00;	author brlcad;	state Exp;
branches;
next	14.7;

14.7
date	2006.01.28.00.36.29;	author brlcad;	state Exp;
branches;
next	14.6;

14.6
date	2006.01.18.06.46.24;	author brlcad;	state Exp;
branches;
next	14.5;

14.5
date	2005.10.23.04.44.38;	author brlcad;	state Exp;
branches;
next	14.4;

14.4
date	2005.01.30.20.31.12;	author brlcad;	state Exp;
branches
	14.4.6.1;
next	14.3;

14.3
date	2004.12.21.06.38.23;	author morrison;	state Exp;
branches;
next	14.2;

14.2
date	2004.12.21.03.11.57;	author morrison;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.31;	author morrison;	state Exp;
branches;
next	1.6;

1.6
date	2004.10.14.21.30.17;	author butler;	state Exp;
branches;
next	1.5;

1.5
date	2004.09.03.23.31.00;	author morrison;	state Exp;
branches;
next	1.4;

1.4
date	2004.08.02.23.01.52;	author morrison;	state Exp;
branches;
next	1.3;

1.3
date	2004.06.09.18.12.54;	author erikg;	state Exp;
branches;
next	1.2;

1.2
date	2004.06.08.22.04.36;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.20.15.20.53;	author morrison;	state Exp;
branches;
next	;

14.4.6.1
date	2005.11.13.13.46.19;	author brlcad;	state Exp;
branches;
next	;


desc
@@


14.13
log
@more c89 embracing.  c89 provides string.h for all of the various str*() and mem*() functions, so remove the check for its presence.  there is still likely to be work required for strict c89 conformance for the various bsd strings.h functions that may be in use.
@
text
@/*                          I M O D . C
 * BRL-CAD
 *
 * Copyright (c) 1986-2007 United States Government as represented by
 * the U.S. Army Research Laboratory.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * version 2.1 as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this file; see the file named COPYING for more
 * information.
 */
/** @@file imod.c
 *
 *  Modify intensities in a stream of short (16 bit) unsigned integers.
 *
 *  Allows any number of add, subtract, multiply, divide, or
 *  exponentiation operations to be performed on a picture.
 *  Keeps track of and reports clipping.
 *
 *  Author -
 *  	Lee A. Butler
 *	25 October 1990
 *
 */
#ifndef lint
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/sig/imod.c,v 14.12 2007/08/29 18:33:24 erikgreenwald Exp $ (BRL)";
#endif

#include "common.h"

#include <stdlib.h>
#include <stdio.h>
#include <string.h>
#include <math.h>

#ifdef HAVE_UNISTD_H
#  include <unistd.h>
#endif

#include "machine.h"
#include "bu.h"


char *progname = "(noname)";
char *file_name = NULL;

char usage[] = "\
Usage: imod {-a add -s sub -m mult -d div -A(abs) -e exp -r root} [file.s]\n";

#define	ADD	1
#define MULT	2
#define	ABS	3
#define	POW	4
#define	BUFLEN	(8192*2)	/* usually 2 pages of memory, 16KB */

int	numop = 0;		/* number of operations */
int	op[256];		/* operations */
double	val[256];		/* arguments to operations */
short iobuf[BUFLEN];		/* input buffer */
int mapbuf[65536];		/* translation buffer/lookup table */

int
get_args(int argc, register char **argv)
{
    register int c;
    double	d;

    while ( (c = bu_getopt( argc, argv, "a:s:m:d:Ae:r:" )) != EOF )  {
	switch( c )  {
	    case 'a':
		op[ numop ] = ADD;
		val[ numop++ ] = atof(bu_optarg);
		break;
	    case 's':
		op[ numop ] = ADD;
		val[ numop++ ] = - atof(bu_optarg);
		break;
	    case 'm':
		op[ numop ] = MULT;
		val[ numop++ ] = atof(bu_optarg);
		break;
	    case 'd':
		op[ numop ] = MULT;
		d = atof(bu_optarg);
		if( d == 0.0 ) {
		    (void)fprintf( stderr, "bwmod: divide by zero!\n" );
		    exit( 2 );
		}
		val[ numop++ ] = 1.0 / d;
		break;
	    case 'A':
		op[ numop ] = ABS;
		val[ numop++ ] = 0;
		break;
	    case 'e':
		op[ numop ] = POW;
		val[ numop++ ] = atof(bu_optarg);
		break;
	    case 'r':
		op[ numop ] = POW;
		d = atof(bu_optarg);
		if( d == 0.0 ) {
		    (void)fprintf( stderr, "bwmod: zero root!\n" );
		    exit( 2 );
		}
		val[ numop++ ] = 1.0 / d;
		break;

	    default:		/* '?' */
		return(0);
	}
    }

    if( bu_optind >= argc )  {
	if( isatty((int)fileno(stdin)) )
	    return(0);
	file_name = "-";
    } else {
	file_name = argv[bu_optind];
	if( freopen(file_name, "r", stdin) == NULL )  {
	    (void)fprintf( stderr,
			   "bwmod: cannot open \"%s\" for reading\n",
			   file_name );
	    return(0);
	}
    }

    if ( argc > ++bu_optind )
	(void)fprintf( stderr, "bwmod: excess argument(s) ignored\n" );

    return(1);		/* OK */
}

void mk_trans_tbl(void)
{
    register int i, j;
    register double d;

    /* create translation map */
    for (j = -32768; j < 32768 ; ++j) {
	d = j;
	for (i=0 ; i < numop ; i++) {
	    switch (op[i]) {
		case ADD : d += val[i]; break;
		case MULT: d *= val[i]; break;
		case POW : d = pow( d, val[i]); break;
		case ABS : if (d < 0.0) d = - d; break;
		default  : (void)fprintf(stderr, "%s: error in op\n",
					 progname); break;
	    }
	}

	if (d > 32767.0)
	    mapbuf[j+32768] = 65537;
	else if (d < -32768.0)
	    mapbuf[j+32768] = -65536;
	else if (d < 0.0)
	    mapbuf[j+32768] = d - 0.5;
	else
	    mapbuf[j+32768] = d + 0.5;
    }
}

int main(int argc, char **argv)
{
    register short *p, *q;
    register int i;
    register unsigned int	n;
    unsigned long clip_high, clip_low;

    if (!(progname=strrchr(*argv, '/')))
	progname = *argv;

    if( !get_args( argc, argv ) || isatty(fileno(stdin))
	|| isatty(fileno(stdout)) ) {
	(void)fputs(usage, stderr);
	exit( 1 );
    }

    mk_trans_tbl();

    clip_high = clip_low = 0;

    while ( (n=fread(iobuf, sizeof(*iobuf), BUFLEN, stdin)) > 0) {
	/* translate */
	for (p=iobuf, q= &iobuf[n] ; p < q ; ++p) {
	    i = *p + 32768;
	    if (mapbuf[i] > 32767) { ++clip_high; *p = 32767; }
	    else if (mapbuf[i] < -32768) { ++clip_low; *p = -32768; }
	    else *p = (short)mapbuf[i];
	}
	/* output */
	if (fwrite(iobuf, sizeof(*iobuf), n, stdout) != n) {
	    (void)fprintf(stderr, "%s: Error writing stdout\n",
			  progname);
	    exit(-1);
	}
    }

    if( clip_high != 0L || clip_low != 0L ) {
	(void)fprintf( stderr, "%s: clipped %lu high, %lu low\n",
		       progname,
		       clip_high, clip_low );
    }

    return 0;
}

/*
 * Local Variables:
 * mode: C
 * tab-width: 8
 * c-basic-offset: 4
 * indent-tabs-mode: t
 * End:
 * ex: shiftwidth=4 tabstop=8
 */
@


14.12
log
@fix program name in usage string. PR#1775598
@
text
@d34 1
a34 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/sig/imod.c,v 14.11 2007/07/26 01:13:59 brlcad Exp $ (BRL)";
d41 3
a46 6
#ifdef HAVE_STRING_H
#  include <string.h>
#else
#  include <strings.h>
#endif
#include <math.h>
@


14.11
log
@remove ephemeral data like phone numbers and addresses, including the misleading 'source' statements on code that is continually evolving and receiving contributions from many many sources
@
text
@d34 1
a34 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/sig/imod.c,v 14.10 2007/02/02 08:48:30 brlcad Exp $ (BRL)";
d59 1
a59 1
Usage: smod {-a add -s sub -m mult -d div -A(abs) -e exp -r root} [file.s]\n";
@


14.10
log
@convert all of the lingering getopt calls to bu_getopt (as well as the related getopt globals optind, opterr, optarg) -- libbu's getopt has the benefit of being re-entrant and is portable to environments where getopt() may not be available.
@
text
@a31 5
 *  Source -
 *	SECAD/VLD Computing Consortium, Bldg 394
 *	The U. S. Army Ballistic Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5066
 *
d34 1
a34 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/sig/imod.c,v 14.9 2007/01/23 01:13:47 brlcad Exp $ (BRL)";
@


14.9
log
@Sweeping license updates.  Documentation is fully relicensed to the BSD Documentation License (a minor variant of the FreeBSD Documentation License and BSD License).  All GPL code (mostly application code) is converted to the LGPL and now also specifically declares version 2.1, revoking the blank check to the FSF.  The intent of these sweeping changes are to simplify the licensing terms and increase overall flexibility of use, both externally (to users for their purposes) and internally (to allow application code to be migrated to libraries without creating GPL libraries).  As a collective work, BRL-CAD is now LGPL.
@
text
@d39 1
a39 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/sig/imod.c,v 14.8 2007/01/20 14:37:00 brlcad Exp $ (BRL)";
d57 2
d61 1
a61 2

char	*file_name;
d81 2
a82 2
	register int c;
	double	d;
d84 40
a123 40
	while ( (c = getopt( argc, argv, "a:s:m:d:Ae:r:" )) != EOF )  {
		switch( c )  {
		case 'a':
			op[ numop ] = ADD;
			val[ numop++ ] = atof(optarg);
			break;
		case 's':
			op[ numop ] = ADD;
			val[ numop++ ] = - atof(optarg);
			break;
		case 'm':
			op[ numop ] = MULT;
			val[ numop++ ] = atof(optarg);
			break;
		case 'd':
			op[ numop ] = MULT;
			d = atof(optarg);
			if( d == 0.0 ) {
				(void)fprintf( stderr, "bwmod: divide by zero!\n" );
				exit( 2 );
			}
			val[ numop++ ] = 1.0 / d;
			break;
		case 'A':
			op[ numop ] = ABS;
			val[ numop++ ] = 0;
			break;
		case 'e':
			op[ numop ] = POW;
			val[ numop++ ] = atof(optarg);
			break;
		case 'r':
			op[ numop ] = POW;
			d = atof(optarg);
			if( d == 0.0 ) {
				(void)fprintf( stderr, "bwmod: zero root!\n" );
				exit( 2 );
			}
			val[ numop++ ] = 1.0 / d;
			break;
d125 2
a126 3
		default:		/* '?' */
			return(0);
		}
d128 1
d130 11
a140 12
	if( optind >= argc )  {
		if( isatty((int)fileno(stdin)) )
			return(0);
		file_name = "-";
	} else {
		file_name = argv[optind];
		if( freopen(file_name, "r", stdin) == NULL )  {
			(void)fprintf( stderr,
				"bwmod: cannot open \"%s\" for reading\n",
				file_name );
			return(0);
		}
d142 1
d144 2
a145 2
	if ( argc > ++optind )
		(void)fprintf( stderr, "bwmod: excess argument(s) ignored\n" );
d147 1
a147 1
	return(1);		/* OK */
d152 2
a153 16
	register int i, j;
	register double d;

	/* create translation map */
	for (j = -32768; j < 32768 ; ++j) {
		d = j;
		for (i=0 ; i < numop ; i++) {
			switch (op[i]) {
			case ADD : d += val[i]; break;
			case MULT: d *= val[i]; break;
			case POW : d = pow( d, val[i]); break;
			case ABS : if (d < 0.0) d = - d; break;
			default  : (void)fprintf(stderr, "%s: error in op\n",
					progname); break;
			}
		}
d155 23
a177 9
		if (d > 32767.0)
			mapbuf[j+32768] = 65537;
		else if (d < -32768.0)
			mapbuf[j+32768] = -65536;
		else if (d < 0.0)
			mapbuf[j+32768] = d - 0.5;
		else
			mapbuf[j+32768] = d + 0.5;
	}
d182 39
a220 39
	register short *p, *q;
	register int i;
	register unsigned int	n;
	unsigned long clip_high, clip_low;

	if (!(progname=strrchr(*argv, '/')))
		progname = *argv;

	if( !get_args( argc, argv ) || isatty(fileno(stdin))
	    || isatty(fileno(stdout)) ) {
		(void)fputs(usage, stderr);
		exit( 1 );
	}

	mk_trans_tbl();

	clip_high = clip_low = 0;

	while ( (n=fread(iobuf, sizeof(*iobuf), BUFLEN, stdin)) > 0) {
		/* translate */
		for (p=iobuf, q= &iobuf[n] ; p < q ; ++p) {
			i = *p + 32768;
			if (mapbuf[i] > 32767) { ++clip_high; *p = 32767; }
			else if (mapbuf[i] < -32768) { ++clip_low; *p = -32768; }
			else *p = (short)mapbuf[i];
		}
		/* output */
		if (fwrite(iobuf, sizeof(*iobuf), n, stdout) != n) {
			(void)fprintf(stderr, "%s: Error writing stdout\n",
				progname);
			exit(-1);
		}
	}

	if( clip_high != 0L || clip_low != 0L ) {
		(void)fprintf( stderr, "%s: clipped %lu high, %lu low\n",
			progname,
			clip_high, clip_low );
	}
d222 1
a222 1
	return 0;
@


14.8
log
@update copyright to 2007
@
text
@d8 2
a9 3
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation; either version 2 of the
 * License, or (at your option) any later version.
d14 1
a14 1
 * General Public License for more details.
d16 2
a17 2
 * You should have received a copy of the GNU General Public License
 * along with this file; see the file named COPYING for more
d39 1
a39 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/sig/imod.c,v 14.7 2006/01/28 00:36:29 brlcad Exp $ (BRL)";
@


14.7
log
@header cleanup, atof() requires stdlib.h on altix/posix, fix 64-bitness
@
text
@d4 1
a4 1
 * Copyright (c) 1986-2006 United States Government as represented by
d40 1
a40 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/sig/imod.c,v 14.6 2006/01/18 06:46:24 brlcad Exp $ (BRL)";
@


14.6
log
@update copyright to 2006
@
text
@d40 1
a40 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/sig/imod.c,v 14.5 2005/10/23 04:44:38 brlcad Exp $ (BRL)";
d45 2
d48 1
a48 1
# include <unistd.h>
a49 4

#include <stdio.h>
#include <stdlib.h>

d51 1
a51 1
#include <string.h>
d53 1
a53 1
#include <strings.h>
@


14.5
log
@trailing ws
@
text
@d4 1
a4 1
 * Copyright (C) 1986-2005 United States Government as represented by
d40 1
a40 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/sig/imod.c,v 14.4 2005/01/30 20:31:12 brlcad Exp $ (BRL)";
@


14.4
log
@update copyright to 2005
@
text
@d37 1
a37 1
 *  
d40 1
a40 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/sig/imod.c,v 14.3 2004/12/21 06:38:23 morrison Exp $ (BRL)";
d48 1
a48 1
                                                                                                                                                                            
d177 1
a177 1
		else	
d188 1
a188 1
	
@


14.4.6.1
log
@merge changes from HEAD aka rel-7-6-4 to the rel-7-6-branch just in case someone peeks a gander or tries to continue/build the branch
@
text
@d37 1
a37 1
 *
d40 1
a40 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
d48 1
a48 1

d177 1
a177 1
		else
d188 1
a188 1

@


14.3
log
@remove the old copyright notice section
@
text
@d4 1
a4 1
 * Copyright (c) 1986-2004 United States Government as represented by
d40 1
a40 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/sig/imod.c,v 14.2 2004/12/21 03:11:57 morrison Exp $ (BRL)";
@


14.2
log
@assign copyright and GPL
@
text
@a37 3
 *  Copyright Notice -
 *	This software is Copyright (C) 1986-2004 by the United States Army.
 *	All rights reserved.
d40 1
a40 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/sig/imod.c,v 14.1 2004/11/16 19:42:31 morrison Exp $ (BRL)";
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d1 21
a21 2
/*
 *		I M O D . C
d43 1
a43 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/sig/imod.c,v 1.6 2004/10/14 21:30:17 butler Exp $ (BRL)";
@


1.6
log
@added #include <stdlib.h> to get declaration of atof()
@
text
@d24 1
a24 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/sig/imod.c,v 1.5 2004/09/03 23:31:00 morrison Exp $ (BRL)";
d210 10
@


1.5
log
@USE_STRING_H is no more.. it's HAVE_STRING_H
@
text
@d24 1
a24 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/sig/imod.c,v 1.4 2004/08/02 23:01:52 morrison Exp $ (BRL)";
d34 2
@


1.4
log
@replace the wrapped config.h block with common.h
@
text
@d24 1
a24 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/sig/imod.c,v 1.3 2004/06/09 18:12:54 erikg Exp $ (BRL)";
d34 1
a34 1
#ifdef USE_STRING_H
@


1.3
log
@include unistd.h for getopt stuff
@
text
@d24 1
a24 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/sig/imod.c,v 1.2 2004/06/08 22:04:36 morrison Exp $ (BRL)";
d27 1
a27 3
#ifdef HAVE_CONFIG_H
# include "config.h"
#endif
@


1.2
log
@obliterate externs.h
@
text
@d24 1
a24 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
d31 4
a34 2


@


1.1
log
@Vast reorganization begins.  Sources moved from top-level directories into src/.
@
text
@d24 1
a24 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/sig/imod.c,v 11.8 2004/05/10 15:30:50 erikg Exp $ (BRL)";
a41 1
#include "externs.h"
@

