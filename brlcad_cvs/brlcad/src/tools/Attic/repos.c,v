head	14.2;
access;
symbols
	opensource-pre:1.3
	rel-7-0-branch:1.3.0.2
	rel-7-0:1.3;
locks; strict;
comment	@ * @;


14.2
date	2004.12.21.03.32.05;	author morrison;	state dead;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.32;	author morrison;	state Exp;
branches;
next	1.3;

1.3
date	2004.08.02.23.01.52;	author morrison;	state Exp;
branches;
next	1.2;

1.2
date	2004.06.08.22.04.39;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.20.15.21.30;	author morrison;	state Exp;
branches;
next	;


desc
@@


14.2
log
@moved src/tools/ to src/other/URToolkit/ as the entire Utah Raster Toolkit is not ours but, rather, University of Utah codeage.
@
text
@/*
 * This software is copyrighted as noted below.  It may be freely copied,
 * modified, and redistributed, provided that the copyright notice is 
 * preserved on all copies.
 * 
 * There is no warranty or other guarantee of fitness for this software,
 * it is provided solely "as is".  Bug reports or fixes may be sent
 * to the author, who may or may not act on them as he desires.
 *
 * You may not include this software in a program or other software product
 * without supplying the source, or without informing the end-user that the 
 * source is available for no extra charge.
 *
 * If you modify this software, you should include a notice giving the
 * name of the person performing the modification, the date of modification,
 * and the reason for such modification.
 */
/* 
 * repos.c - Reposition RLE image.
 * 
 * Author:	Rod Bogart & John W. Peterson
 * 		Computer Science Dept.
 * 		University of Utah
 * Date:	Sat Jun 21 1986
 * Copyright (c) 1986, University of Utah
 * 
 */
#ifndef lint
static const char rcs_ident[] = "$Header: /cvs/brlcad/src/tools/repos.c,v 14.1 2004/11/16 19:42:32 morrison Exp $";
#endif

#include "common.h"



#include <stdio.h>

#include "machine.h"
#include "rle.h"

char buffer[4096];

int
main(int argc, char **argv)
{
    int xlen, ylen, xpos, ypos, posflag=0;
    int oflag = 0, incflag=0, xinc, yinc;
    char * infilename = NULL, *out_fname = NULL;
    FILE *outfile = stdout;
    rle_hdr in_hdr, out_hdr;
    int rle_cnt, rle_err;

    if (scanargs(argc, argv,
		 "% p%-xpos!dypos!d P%-xinc!dyinc!d o%-outfile!s infile%s",
                 &posflag, &xpos, &ypos, &incflag, &xinc, &yinc,
		 &oflag, &out_fname, &infilename) == 0)
    {
	exit(-1);
    }

    in_hdr.rle_file = rle_open_f("repos", infilename, "r");

    for ( rle_cnt = 0;
	  (rle_err = rle_get_setup( &in_hdr )) == RLE_SUCCESS;
	  rle_cnt++ )
    {
	out_hdr = in_hdr;
	if ( rle_cnt == 0 )
	    outfile = rle_open_f( cmd_name( argv ), out_fname, "w" );
	out_hdr.rle_file = outfile;
	rle_addhist( argv, &in_hdr, &out_hdr );

	xlen = in_hdr.xmax - in_hdr.xmin;
	ylen = in_hdr.ymax - in_hdr.ymin;

	if (posflag)
	{
	    out_hdr.xmin = xpos;
	    out_hdr.ymin = ypos;
	    out_hdr.xmax = xpos + xlen;
	    out_hdr.ymax = ypos + ylen;
	}
	else if (incflag)
	{
	    out_hdr.xmin = in_hdr.xmin + xinc;
	    out_hdr.ymin = in_hdr.ymin + yinc;
	    out_hdr.xmax = in_hdr.xmax + xinc;
	    out_hdr.ymax = in_hdr.ymax + yinc;
	}
	else
	{
	    /* nothing specified on command line, assume -p 0 0 */
	    out_hdr.xmin = 0;
	    out_hdr.ymin = 0;
	    out_hdr.xmax = xlen;
	    out_hdr.ymax = ylen;
	}

	if ((out_hdr.xmin < 0) || (out_hdr.ymin < 0))
	{
	    fprintf(stderr, "Negative boundaries are not allowed!!!\n");
	    exit( -1 );
	}

	rle_put_setup( &out_hdr );

	rle_cp( &in_hdr, &out_hdr );
    }

    /* Check for an error.  EOF or EMPTY is ok if at least one image
     * has been read.  Otherwise, print an error message.
     */
    if ( rle_cnt == 0 || (rle_err != RLE_EOF && rle_err != RLE_EMPTY) )
	rle_get_error( rle_err, cmd_name( argv ), infilename );

    exit( 0 );
}

/*
 * Local Variables:
 * mode: C
 * tab-width: 8
 * c-basic-offset: 4
 * indent-tabs-mode: t
 * End:
 * ex: shiftwidth=4 tabstop=8
 */
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d29 1
a29 1
static const char rcs_ident[] = "$Header: /cvs/brlcad/src/tools/repos.c,v 1.3 2004/08/02 23:01:52 morrison Exp $";
@


1.3
log
@replace the wrapped config.h block with common.h
@
text
@d29 1
a29 1
static const char rcs_ident[] = "$Header: /cvs/brlcad/src/tools/repos.c,v 1.2 2004/06/08 22:04:39 morrison Exp $";
d118 10
@


1.2
log
@obliterate externs.h
@
text
@d29 1
a29 1
static const char rcs_ident[] = "$Header$";
d32 1
a32 3
#ifdef HAVE_CONFIG_H
# include "config.h"
#endif
@


1.1
log
@Vast reorganization begins.  Sources moved from top-level directories into src/.
@
text
@d29 1
a29 1
static const char rcs_ident[] = "$Header: /cvs/brlcad/tools/repos.c,v 11.6 2004/05/10 15:30:50 erikg Exp $";
a40 1
#include "externs.h"
@

