head	14.13;
access;
symbols
	rel-7-10-4:14.12
	STABLE:14.12.0.2
	stable-branch:14.6
	rel-7-10-2:14.12
	rel-7-10-0:14.12
	rel-7-8-4:14.10
	rel-7-8-2:14.9
	rel-7-8-0:14.9
	trimnurbs-branch:14.9.0.2
	help:14.9
	temp_tag:14.7
	bobWinPort-20051223-freeze:14.6
	postmerge-20051223-bobWinPort:14.7
	premerge-20051223-bobWinPort:14.7
	rel-7-6-6:14.7
	rel-7-6-4:14.7
	rel-7-6-2:14.6
	rel-7-6-branch:14.6.0.6
	rel-7-6-0:14.6
	rel-7-4-2:14.6
	rel-7-4-branch:14.6.0.4
	bobWinPort:14.6.0.2
	rel-7-4-0:14.6
	rel-7-2-6:14.6
	rel-7-2-4:14.6
	rel-7-2-2:14.6
	rel-7-2-0:14.6
	rel-7-0-4:14.5
	rel-7-0-2:14.5
	rel-7-0-1:14.4
	opensource-post:14.4
	opensource-pre:1.6
	rel-7-0-branch:1.6.0.2
	rel-7-0:1.6;
locks; strict;
comment	@ * @;


14.13
date	2007.09.15.16.23.20;	author brlcad;	state Exp;
branches;
next	14.12;

14.12
date	2007.01.23.01.13.46;	author brlcad;	state Exp;
branches;
next	14.11;

14.11
date	2007.01.20.14.37.00;	author brlcad;	state Exp;
branches;
next	14.10;

14.10
date	2006.09.05.22.27.26;	author brlcad;	state Exp;
branches;
next	14.9;

14.9
date	2006.01.23.04.05.59;	author brlcad;	state Exp;
branches;
next	14.8;

14.8
date	2006.01.18.06.46.23;	author brlcad;	state Exp;
branches;
next	14.7;

14.7
date	2005.10.23.04.44.38;	author brlcad;	state Exp;
branches;
next	14.6;

14.6
date	2005.01.30.20.31.09;	author brlcad;	state Exp;
branches
	14.6.6.1;
next	14.5;

14.5
date	2004.12.24.01.40.00;	author brlcad;	state Exp;
branches;
next	14.4;

14.4
date	2004.12.21.07.32.32;	author morrison;	state Exp;
branches;
next	14.3;

14.3
date	2004.12.21.06.58.44;	author morrison;	state Exp;
branches;
next	14.2;

14.2
date	2004.12.21.06.44.33;	author morrison;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.31;	author morrison;	state Exp;
branches;
next	1.6;

1.6
date	2004.09.16.06.34.47;	author morrison;	state Exp;
branches;
next	1.5;

1.5
date	2004.09.15.07.06.30;	author morrison;	state Exp;
branches;
next	1.4;

1.4
date	2004.09.03.23.30.59;	author morrison;	state Exp;
branches;
next	1.3;

1.3
date	2004.08.02.23.01.52;	author morrison;	state Exp;
branches;
next	1.2;

1.2
date	2004.06.08.22.04.35;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.20.15.20.46;	author morrison;	state Exp;
branches;
next	;

14.6.6.1
date	2005.11.13.13.46.19;	author brlcad;	state Exp;
branches;
next	;


desc
@@


14.13
log
@more c89 embracing.  c89 provides string.h for all of the various str*() and mem*() functions, so remove the check for its presence.  there is still likely to be work required for strict c89 conformance for the various bsd strings.h functions that may be in use.
@
text
@/*                        S H _ T C L . C
 * BRL-CAD
 *
 * Copyright (c) 1997-2007 United States Government as represented by
 * the U.S. Army Research Laboratory.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * version 2.1 as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this file; see the file named COPYING for more
 * information.
 */
/** @@file sh_tcl.c
 *
 *  Tcl interfaces to RT material & shader routines.
 *
 *  These routines are not for casual command-line use;
 *  as a result, the Tcl name for the function should be exactly
 *  the same as the C name for the underlying function.
 *
 *  Author -
 *	Michael John Muuss
 *
 *  Source -
 *	The U. S. Army Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5068  USA
 */
#ifndef lint
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/rt/sh_tcl.c,v 14.12 2007/01/23 01:13:46 brlcad Exp $ (ARL)";
#endif

#include "common.h"

#include <stdlib.h>
#include <stdio.h>
#include <math.h>
#include <string.h>

#include "tcl.h"

#include "machine.h"
#include "bu.h"
#include "vmath.h"
#include "bn.h"
#include "raytrace.h"
#include "shadefuncs.h"


extern struct mfuncs	*mfHead;	/* rt/view.c */


/*
 *			S H _ D I R E C T C H A N G E _ R G B
 *
 *  Go poke the rgb values of a region, on the fly.
 *  This does not update the inmemory database,
 *  so any changes will vanish on next re-prep unless other measures
 *  are taken.
 */
sh_directchange_rgb(ClientData clientData, Tcl_Interp *interp, int argc, const char *argv[])
{
	struct rt_i	*rtip;
	struct region	*regp;
	struct directory *dp;
	float		r,g,b;

	if( argc != 6 )  {
		Tcl_AppendResult(interp, "Usage: sh_directchange_rgb $rtip comb r g b\n", NULL);
		return TCL_ERROR;
	}

	r = atoi(argv[3+0]) / 255.;
	g = atoi(argv[3+1]) / 255.;
	b = atoi(argv[3+2]) / 255.;

	rtip = (struct rt_i *)atol(argv[1]);
	RT_CK_RTI_TCL(interp, rtip);

	if( rtip->needprep )  {
		Tcl_AppendResult(interp, "rt_prep() hasn't been called yet, error.\n", NULL);
		return TCL_ERROR;
	}

	if( (dp = db_lookup( rtip->rti_dbip, argv[2], LOOKUP_NOISY)) == DIR_NULL )  {
		Tcl_AppendResult(interp, argv[2], ": not found\n", NULL);
		return TCL_ERROR;
	}

	/* Find all region names which match /comb/ pattern */
	for( BU_LIST_FOR( regp, region, &rtip->HeadRegion ) )  {
		if( dp->d_flags & DIR_REGION )  {
			/* name will occur at end of region string w/leading slash */
		} else {
			/* name will occur anywhere, bracked by slashes */
		}

		/* XXX quick hack */
		if( strstr( regp->reg_name, argv[2] ) == NULL )  continue;

		/* Modify the region's color */
		bu_log("sh_directchange_rgb() changing %s\n", regp->reg_name);
		VSET( regp->reg_mater.ma_color, r, g, b );

		/* Update the shader */
		mlib_free(regp);
		if( mlib_setup( &mfHead, regp, rtip ) != 1 )  {
			Tcl_AppendResult(interp, regp->reg_name, ": mlib_setup() failure\n", NULL);
		}
	}

	return TCL_OK;
}


/*
 *			S H _ D I R E C T C H A N G E _ S H A D E R
 *
 *  Go poke the rgb values of a region, on the fly.
 *  This does not update the inmemory database,
 *  so any changes will vanish on next re-prep unless other measures
 *  are taken.
 */
sh_directchange_shader(ClientData clientData, Tcl_Interp *interp, int argc, const char *argv[])
{
	struct rt_i	*rtip;
	struct region	*regp;
	struct directory *dp;
	struct bu_vls	shader;

	if( argc < 4 )  {
		Tcl_AppendResult(interp, "Usage: sh_directchange_shader $rtip comb shader_arg(s)\n", NULL);
		return TCL_ERROR;
	}

	rtip = (struct rt_i *)atol(argv[1]);
	RT_CK_RTI_TCL(interp, rtip);

	if( rtip->needprep )  {
		Tcl_AppendResult(interp, "rt_prep() hasn't been called yet, error.\n", NULL);
		return TCL_ERROR;
	}

	if( (dp = db_lookup( rtip->rti_dbip, argv[2], LOOKUP_NOISY)) == DIR_NULL )  {
		Tcl_AppendResult(interp, argv[2], ": not found\n", NULL);
		return TCL_ERROR;
	}

	bu_vls_init(&shader);
	bu_vls_from_argv(&shader, argc-3, argv+3);
	bu_vls_trimspace(&shader);

	/* Find all region names which match /comb/ pattern */
	for( BU_LIST_FOR( regp, region, &rtip->HeadRegion ) )  {
		if( dp->d_flags & DIR_REGION )  {
			/* name will occur at end of region string w/leading slash */
		} else {
			/* name will occur anywhere, bracked by slashes */
		}

		/* XXX quick hack */
		if( strstr( regp->reg_name, argv[2] ) == NULL )  continue;

		/* Modify the region's shader string */
		bu_log("sh_directchange_shader() changing %s\n", regp->reg_name);
		if( regp->reg_mater.ma_shader )
			bu_free( (genptr_t)regp->reg_mater.ma_shader, "reg_mater.ma_shader");
		regp->reg_mater.ma_shader = bu_vls_strdup(&shader);

		/* Update the shader */
		mlib_free(regp);
		if( mlib_setup( &mfHead, regp, rtip ) != 1 )  {
			Tcl_AppendResult(interp, regp->reg_name, ": mlib_setup() failure\n", NULL);
		}
	}

	bu_vls_free(&shader);
	return TCL_OK;
}

/*
 *			S H _ O P T
 *
 *  Process RT-style command-line options.
 */
sh_opt(ClientData clientData, Tcl_Interp *interp, int argc, const char *argv[])
{
	if( argc < 2 )  {
		Tcl_AppendResult(interp, "Usage: sh_opt command_line_option(s)\n", NULL);
		return TCL_ERROR;
	}
	if( get_args( argc, argv ) <= 0 )
		return TCL_ERROR;
	return TCL_OK;
}

/*
 *			S H _ T C L _ S E T U P
 *
 *  Add all the supported Tcl interfaces to RT material/shader routines to
 *  the list of commands known by the given interpreter.
 */
void
sh_tcl_setup(Tcl_Interp *interp)
{
	(void)Tcl_CreateCommand(interp, "sh_directchange_rgb", sh_directchange_rgb,
		(ClientData)NULL, (Tcl_CmdDeleteProc *)NULL);
	(void)Tcl_CreateCommand(interp, "sh_directchange_shader", sh_directchange_shader,
		(ClientData)NULL, (Tcl_CmdDeleteProc *)NULL);
	(void)Tcl_CreateCommand(interp, "sh_opt", sh_opt,
		(ClientData)NULL, (Tcl_CmdDeleteProc *)NULL);
}

/*
 * Local Variables:
 * mode: C
 * tab-width: 8
 * c-basic-offset: 4
 * indent-tabs-mode: t
 * End:
 * ex: shiftwidth=4 tabstop=8
 */
@


14.12
log
@Sweeping license updates.  Documentation is fully relicensed to the BSD Documentation License (a minor variant of the FreeBSD Documentation License and BSD License).  All GPL code (mostly application code) is converted to the LGPL and now also specifically declares version 2.1, revoking the blank check to the FSF.  The intent of these sweeping changes are to simplify the licensing terms and increase overall flexibility of use, both externally (to users for their purposes) and internally (to allow application code to be migrated to libraries without creating GPL libraries).  As a collective work, BRL-CAD is now LGPL.
@
text
@d36 1
a36 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/rt/sh_tcl.c,v 14.11 2007/01/20 14:37:00 brlcad Exp $ (ARL)";
d44 1
a44 5
#ifdef HAVE_STRING_H
#  include <string.h>
#else
#  include <strings.h>
#endif
@


14.11
log
@update copyright to 2007
@
text
@d8 2
a9 3
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation; either version 2 of the
 * License, or (at your option) any later version.
d14 1
a14 1
 * General Public License for more details.
d16 2
a17 2
 * You should have received a copy of the GNU General Public License
 * along with this file; see the file named COPYING for more
d36 1
a36 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/rt/sh_tcl.c,v 14.10 2006/09/05 22:27:26 brlcad Exp $ (ARL)";
@


14.10
log
@remove unused buf arrays and other unused vars
@
text
@d4 1
a4 1
 * Copyright (c) 1997-2006 United States Government as represented by
d37 1
a37 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/rt/sh_tcl.c,v 14.9 2006/01/23 04:05:59 brlcad Exp $ (ARL)";
@


14.9
log
@convert to libbu memory management
@
text
@d37 1
a37 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/rt/sh_tcl.c,v 14.8 2006/01/18 06:46:23 brlcad Exp $ (ARL)";
a77 1
	char		buf[64];
a140 1
	char		buf[64];
a198 6
	struct rt_i	*rtip;
	struct region	*regp;
	struct directory *dp;
	float		r,g,b;
	char		buf[64];

@


14.8
log
@update copyright to 2006
@
text
@d37 1
a37 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/rt/sh_tcl.c,v 14.7 2005/10/23 04:44:38 brlcad Exp $ (ARL)";
d42 1
@


14.7
log
@trailing ws
@
text
@d4 1
a4 1
 * Copyright (C) 1997-2005 United States Government as represented by
d37 1
a37 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/rt/sh_tcl.c,v 14.6 2005/01/30 20:31:09 brlcad Exp $ (ARL)";
@


14.6
log
@update copyright to 2005
@
text
@d31 1
a31 1
 *  
d37 1
a37 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/rt/sh_tcl.c,v 14.5 2004/12/24 01:40:00 brlcad Exp $ (ARL)";
@


14.6.6.1
log
@merge changes from HEAD aka rel-7-6-4 to the rel-7-6-branch just in case someone peeks a gander or tries to continue/build the branch
@
text
@d31 1
a31 1
 *
d37 1
a37 1
static const char RCSid[] = "@@(#)$Header$ (ARL)";
@


14.5
log
@add the mysteriously missing gpl header..
@
text
@d4 1
a4 1
 * Copyright (c) 1997-2004 United States Government as represented by
d37 1
a37 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/rt/sh_tcl.c,v 14.4 2004/12/21 07:32:32 morrison Exp $ (ARL)";
@


14.4
log
@tidy up a lil bit
@
text
@d1 21
a21 2
/*
 *			S H _ T C L . C
d37 1
a37 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/rt/sh_tcl.c,v 14.3 2004/12/21 06:58:44 morrison Exp $ (ARL)";
@


14.3
log
@remove the old copyright notice section as it's been supplanted (and copyright is now claimable in the us via assignmgent)
@
text
@a15 2
 *  
 *
d18 1
a18 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/rt/sh_tcl.c,v 14.2 2004/12/21 06:44:33 morrison Exp $ (ARL)";
@


14.2
log
@remove the old distribution notice section
@
text
@a17 3
 *  Copyright Notice -
 *	This software is Copyright (C) 1997-2004 by the United States Army
 *	in all countries except the USA.  All rights reserved.
d20 1
a20 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/rt/sh_tcl.c,v 14.1 2004/11/16 19:42:31 morrison Exp $ (ARL)";
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@a16 4
 *  Distribution Notice -
 *	Re-distribution of this software is restricted, as described in
 *	your "Statement of Terms and Conditions for the Release of
 *	The BRL-CAD Package" agreement.
d23 1
a23 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/rt/sh_tcl.c,v 1.6 2004/09/16 06:34:47 morrison Exp $ (ARL)";
@


1.6
log
@quell hook warnings (const)
@
text
@d27 1
a27 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/rt/sh_tcl.c,v 1.5 2004/09/15 07:06:30 morrison Exp $ (ARL)";
d221 10
@


1.5
log
@quell warnings about int to pointer truncations on 64-bit platforms (ia64) by usint atol.. why are we reading pointer addresses as argv input??
@
text
@d27 1
a27 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/rt/sh_tcl.c,v 1.4 2004/09/03 23:30:59 morrison Exp $ (ARL)";
d61 1
a61 1
sh_directchange_rgb(ClientData clientData, Tcl_Interp *interp, int argc, char **argv)
d103 1
a103 1
bu_log("sh_directchange_rgb() changing %s\n", regp->reg_name);
d125 1
a125 1
sh_directchange_shader(ClientData clientData, Tcl_Interp *interp, int argc, char **argv)
d167 1
a167 1
bu_log("sh_directchange_shader() changing %s\n", regp->reg_name);
d188 1
a188 1
sh_opt(ClientData clientData, Tcl_Interp *interp, int argc, char **argv)
@


1.4
log
@USE_STRING_H is no more.. it's HAVE_STRING_H
@
text
@d27 1
a27 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/rt/sh_tcl.c,v 1.3 2004/08/02 23:01:52 morrison Exp $ (ARL)";
a29 1

a31 2


d35 1
a35 1
#include <string.h>
d37 1
a37 1
#include <strings.h>
d49 1
d52 1
d78 1
a78 1
	rtip = (struct rt_i *)atoi(argv[1]);
d138 1
a138 1
	rtip = (struct rt_i *)atoi(argv[1]);
@


1.3
log
@replace the wrapped config.h block with common.h
@
text
@d27 1
a27 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/rt/sh_tcl.c,v 1.2 2004/06/08 22:04:35 morrison Exp $ (ARL)";
d37 1
a37 1
#ifdef USE_STRING_H
@


1.2
log
@obliterate externs.h
@
text
@d27 1
a27 1
static const char RCSid[] = "@@(#)$Header$ (ARL)";
d31 1
a31 3
#ifdef HAVE_CONFIG_H
# include "config.h"
#endif
@


1.1
log
@Vast reorganization begins.  Sources moved from top-level directories into src/.
@
text
@d27 1
a27 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/rt/sh_tcl.c,v 1.12 2004/05/10 15:30:49 erikg Exp $ (ARL)";
a51 1
#include "externs.h"
@

