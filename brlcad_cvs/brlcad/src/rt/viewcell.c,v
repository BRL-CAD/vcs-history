head	14.12;
access;
symbols
	rel-7-10-4:14.10
	STABLE:14.10.0.2
	stable-branch:14.4
	rel-7-10-2:14.10
	rel-7-10-0:14.8
	rel-7-8-4:14.6
	rel-7-8-2:14.6
	rel-7-8-0:14.6
	trimnurbs-branch:14.6.0.2
	help:14.6
	temp_tag:14.5
	bobWinPort-20051223-freeze:14.4
	postmerge-20051223-bobWinPort:14.5
	premerge-20051223-bobWinPort:14.5
	rel-7-6-6:14.5
	rel-7-6-4:14.5
	rel-7-6-2:14.4
	rel-7-6-branch:14.4.0.6
	rel-7-6-0:14.4
	rel-7-4-2:14.4
	rel-7-4-branch:14.4.0.4
	bobWinPort:14.4.0.2
	rel-7-4-0:14.4
	rel-7-2-6:14.4
	rel-7-2-4:14.4
	rel-7-2-2:14.4
	rel-7-2-0:14.4
	rel-7-0-4:14.3
	rel-7-0-2:14.3
	rel-7-0-1:14.2
	opensource-post:14.2
	opensource-pre:1.4
	rel-7-0-branch:1.4.0.2
	rel-7-0:1.4;
locks; strict;
comment	@ * @;


14.12
date	2007.11.21.16.18.53;	author erikgreenwald;	state Exp;
branches;
next	14.11;

14.11
date	2007.09.15.16.23.20;	author brlcad;	state Exp;
branches;
next	14.10;

14.10
date	2007.05.18.04.13.50;	author brlcad;	state Exp;
branches;
next	14.9;

14.9
date	2007.04.17.03.23.57;	author brlcad;	state Exp;
branches;
next	14.8;

14.8
date	2007.01.23.01.13.46;	author brlcad;	state Exp;
branches;
next	14.7;

14.7
date	2007.01.20.14.37.00;	author brlcad;	state Exp;
branches;
next	14.6;

14.6
date	2006.01.18.06.46.24;	author brlcad;	state Exp;
branches;
next	14.5;

14.5
date	2005.10.23.04.44.38;	author brlcad;	state Exp;
branches;
next	14.4;

14.4
date	2005.01.30.20.31.10;	author brlcad;	state Exp;
branches
	14.4.6.1;
next	14.3;

14.3
date	2004.12.24.01.40.00;	author brlcad;	state Exp;
branches;
next	14.2;

14.2
date	2004.12.21.06.38.22;	author morrison;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.31;	author morrison;	state Exp;
branches;
next	1.4;

1.4
date	2004.09.16.03.13.13;	author morrison;	state Exp;
branches;
next	1.3;

1.3
date	2004.09.03.23.30.59;	author morrison;	state Exp;
branches;
next	1.2;

1.2
date	2004.08.02.23.01.52;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.20.15.20.46;	author morrison;	state Exp;
branches;
next	;

14.4.6.1
date	2005.11.13.13.46.19;	author brlcad;	state Exp;
branches;
next	;


desc
@@


14.12
log
@change bu_bomb to bu_exit when the sky isn't really falling
@
text
@/*                      V I E W C E L L . C
 * BRL-CAD
 *
 * Copyright (c) 1989-2007 United States Government as represented by
 * the U.S. Army Research Laboratory.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * version 2.1 as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this file; see the file named COPYING for more
 * information.
 */
/** @@file viewcell.c
 *
 *  Ray Tracing program RTCELL bottom half.
 *
 *  Author -
 *	Michael John Muuss
 *
 *  Source -
 *	SECAD/VLD Computing Consortium, Bldg 394
 *	The U. S. Army Ballistic Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005
 */
#ifndef lint
static const char RCScell[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/rt/viewcell.c,v 14.11 2007/09/15 16:23:20 brlcad Exp $ (BRL)";
#endif

#include "common.h"

#include <stdio.h>
#include <stdlib.h>
#include <math.h>
#include <string.h>

#include "machine.h"
#include "vmath.h"
#include "raytrace.h"
#include "./ext.h"

#include "rtprivate.h"


#define	MM2IN	0.03937008		/* mm times MM2IN gives inches */


extern fastf_t	gift_grid_rounding;
extern point_t	viewbase_model;

extern int	npsw;			/* number of worker PSWs to run */

int		use_air = 0;		/* Handling of air in librt */

/* Viewing module specific "set" variables */
struct bu_structparse view_parse[] = {
	{"",	0, (char *)0,	0,		BU_STRUCTPARSE_FUNC_NULL }
};

static mat_t	model2hv;		/* model coords to GIFT h,v in inches */


const char title[] = "RT Cell";
const char usage[] = "\
Usage:  rtcell [options] model.g objects... >file.cell\n\
Options:\n\
 -s #		Grid size in pixels, default 512\n\
 -a Az		Azimuth in degrees	(conflicts with -M)\n\
 -e Elev	Elevation in degrees	(conflicts with -M)\n\
 -M		Read model2view matrix on stdin (conflicts with -a, -e)\n\
 -g #		Grid cell width in millimeters (conflicts with -s\n\
 -G #		Grid cell height in millimeters (conflicts with -s\n\
 -J #		Jitter.  Default is off.  Any non-zero number is on\n\
 -o model.cell	Specify output file (default=stdout)\n\
 -U #		Set use_air boolean to # (default=1)\n\
 -x #		Set librt debug flags\n\
";


int	rayhit(register struct application *ap, struct partition *PartHeadp, struct seg *segp);
int     raymiss(register struct application *ap);


/*
 *  			V I E W _ I N I T
 *
 *  This routine is called by main().  It prints the overall shotline
 *  header. Furthermore, pointers to rayhit() and raymiss() are set up
 *  and are later called from do_run().
 */
int
view_init(register struct application *ap, char *file, char *obj, int minus_o)
{

	if( !minus_o )
		outfp = stdout;

	/*
	 *  Cause grid_setup() to align the grid on one inch boundaries,
	 *  or cell_width boundaries, if it is given.
	 */
	if( cell_width > 0 )
		gift_grid_rounding = cell_width;
	else
		gift_grid_rounding = 25.4;		/* one inch */

	ap->a_hit = rayhit;
	ap->a_miss = raymiss;
	ap->a_onehit = 0;

	output_is_binary = 0;		/* output is printable ascii */

	return(0);		/* No framebuffer needed */
}

/*
 *			V I E W _ 2 I N I T
 *
 *  View_2init is called by do_frame(), which in turn is called by
 *  main() in rt.c.
 *
 */
void
view_2init(struct application *ap)
{

	if( outfp == NULL )
		bu_exit(EXIT_FAILURE, "outfp is NULL\n");

	/*
	 *  Not dropping out of parallel mode until here permits
	 *  tree walking and database prepping to still be done in parallel.
	 */
	if( npsw >= 1 )  {
		bu_log("Note: changing from %d cpus to 1 cpu\n", npsw );
		npsw = 1;		/* Disable parallel processing */
	}

	/*
	 *  GIFT uses an H,V coordinate system that is anchored at the
	 *  model origin, but rotated according to the view.
	 *  For convenience later, build a matrix that will take
	 *  a point in model space (with units of mm), and convert it
	 *  to a point in HV space, with units of inches.
	 */
	MAT_COPY( model2hv, Viewrotscale );
	model2hv[15] = 1/MM2IN;
}

/*
 *			R A Y M I S S
 *
 *  Null function -- handle a miss
 *  This function is called by rt_shootray(), which is called by
 *  do_frame().
 */
int
raymiss(register struct application *ap)
{
	return(0);
}

/*
 *			V I E W _ P I X E L
 *
 *  This routine is called from do_run(), and in this case does nothing.
 */
void
view_pixel(void)
{
	return;
}

/*
 *			R A Y H I T
 *
 *  Rayhit() is called by rt_shootray() when the ray hits one or more objects.
 *  Write information about this "cell".
 */
int
rayhit(struct application *ap, register struct partition *PartHeadp, struct seg *segp)
{
	register struct partition *pp = PartHeadp->pt_forw;
	point_t			hv;		/* GIFT h,v coords, in inches */
	fastf_t			dot;
	vect_t			normal;

	if( pp == PartHeadp )
		return(0);		/* nothing was actually hit?? */

	if( jitter & JITTER_CELL )  {
		/*
		 *  Find exact h,v coordinates of actual ray start by
		 *  projecting start point into GIFT h,v coordinates.
		 */
		MAT4X3PNT( hv, model2hv, ap->a_ray.r_pt );
	} else {
		/*
		 *  Find the H,V coordinates of the grid cell _center_,
		 *  for GIFT compatible behavior.
		 *  RT uses the lower left _corner_ of each cell.
		 */
		point_t		center;
		fastf_t		dx;
		fastf_t		dy;

		dx = ap->a_x + 0.5;
		dy = ap->a_y + 0.5;
		VJOIN2( center, viewbase_model, dx, dx_model, dy, dy_model );
		MAT4X3PNT( hv, model2hv, center );
	}

	RT_HIT_NORMAL( normal, pp->pt_inhit, pp->pt_inseg->seg_stp, &(ap->a_ray), pp->pt_inflip );
	dot = -VDOT( normal, ap->a_ray.r_dir );
	if( dot < 0 )  dot = 0;
	fprintf( outfp, "%g %g %g\n",
		hv[0], hv[1], dot );

	return(0);
}

/*
 *			V I E W _ E O L
 *
 *  View_eol() is called by rt_shootray() in do_run().  In this case,
 *  it does nothing.
 */
void	view_eol(void)
{
}

/*
 *			V I E W _ E N D
 *
 *  View_end() is called by rt_shootray in do_run().
 */
void
view_end(void)
{
	fflush(outfp);
}

void view_setup(void) {}
void view_cleanup(void) {}

void application_init (void) {}

/*
 * Local Variables:
 * mode: C
 * tab-width: 8
 * c-basic-offset: 4
 * indent-tabs-mode: t
 * End:
 * ex: shiftwidth=4 tabstop=8
 */
@


14.11
log
@more c89 embracing.  c89 provides string.h for all of the various str*() and mem*() functions, so remove the check for its presence.  there is still likely to be work required for strict c89 conformance for the various bsd strings.h functions that may be in use.
@
text
@d33 1
a33 1
static const char RCScell[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/rt/viewcell.c,v 14.10 2007/05/18 04:13:50 brlcad Exp $ (BRL)";
d39 1
d134 1
a134 1
		bu_bomb("outfp is NULL\n");
@


14.10
log
@rt_bomb() has been deprecated since before 7.0, but even our sources weren't properly updated to reflect this change.  update all of our sources to use bu_bomb() now.
@
text
@d33 1
a33 1
static const char RCScell[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/rt/viewcell.c,v 14.9 2007/04/17 03:23:57 brlcad Exp $ (BRL)";
d40 1
a40 6

#ifdef HAVE_STRING_H
#  include <string.h>
#else
#  include <strings.h>
#endif
@


14.9
log
@redo the client-side version reporting to use the new brlcad_version() interface, utilizing a per-binary title as needed, instead of the former vers.sh setup.
@
text
@d33 1
a33 1
static const char RCScell[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/rt/viewcell.c,v 14.8 2007/01/23 01:13:46 brlcad Exp $ (BRL)";
d138 1
a138 1
		rt_bomb("outfp is NULL\n");
@


14.8
log
@Sweeping license updates.  Documentation is fully relicensed to the BSD Documentation License (a minor variant of the FreeBSD Documentation License and BSD License).  All GPL code (mostly application code) is converted to the LGPL and now also specifically declares version 2.1, revoking the blank check to the FSF.  The intent of these sweeping changes are to simplify the licensing terms and increase overall flexibility of use, both externally (to users for their purposes) and internally (to allow application code to be migrated to libraries without creating GPL libraries).  As a collective work, BRL-CAD is now LGPL.
@
text
@d33 1
a33 1
static const char RCScell[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/rt/viewcell.c,v 14.7 2007/01/20 14:37:00 brlcad Exp $ (BRL)";
d72 3
a74 1
char usage[] = "\
d89 1
d93 1
@


14.7
log
@update copyright to 2007
@
text
@d8 2
a9 3
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation; either version 2 of the
 * License, or (at your option) any later version.
d14 1
a14 1
 * General Public License for more details.
d16 2
a17 2
 * You should have received a copy of the GNU General Public License
 * along with this file; see the file named COPYING for more
d33 1
a33 1
static const char RCScell[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/rt/viewcell.c,v 14.6 2006/01/18 06:46:24 brlcad Exp $ (BRL)";
@


14.6
log
@update copyright to 2006
@
text
@d4 1
a4 1
 * Copyright (c) 1989-2006 United States Government as represented by
d34 1
a34 1
static const char RCScell[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/rt/viewcell.c,v 14.5 2005/10/23 04:44:38 brlcad Exp $ (BRL)";
@


14.5
log
@trailing ws
@
text
@d4 1
a4 1
 * Copyright (C) 1989-2005 United States Government as represented by
d34 1
a34 1
static const char RCScell[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/rt/viewcell.c,v 14.4 2005/01/30 20:31:10 brlcad Exp $ (BRL)";
@


14.4
log
@update copyright to 2005
@
text
@d27 1
a27 1
 *  
d34 1
a34 1
static const char RCScell[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/rt/viewcell.c,v 14.3 2004/12/24 01:40:00 brlcad Exp $ (BRL)";
d104 1
a104 1
	
d128 1
a128 1
 * 
@


14.4.6.1
log
@merge changes from HEAD aka rel-7-6-4 to the rel-7-6-branch just in case someone peeks a gander or tries to continue/build the branch
@
text
@d27 1
a27 1
 *
d34 1
a34 1
static const char RCScell[] = "@@(#)$Header$ (BRL)";
d104 1
a104 1

d128 1
a128 1
 *
@


14.3
log
@add the mysteriously missing gpl header..
@
text
@d4 1
a4 1
 * Copyright (c) 1989-2004 United States Government as represented by
d34 1
a34 1
static const char RCScell[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/rt/viewcell.c,v 14.2 2004/12/21 06:38:22 morrison Exp $ (BRL)";
@


14.2
log
@remove the old copyright notice section
@
text
@d1 21
a21 2
/*
 *			V I E W C E L L
a31 1
 *  
d34 1
a34 1
static const char RCScell[] = "@@(#)$Header: /cvs/brlcad/src/rt/viewcell.c,v 14.1 2004/11/16 19:42:31 morrison Exp $ (BRL)";
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@a13 3
 *  Copyright Notice -
 *	This software is Copyright (C) 1989-2004 by the United States Army.
 *	All rights reserved.
d16 1
a16 1
static const char RCScell[] = "@@(#)$Header: /cvs/brlcad/src/rt/viewcell.c,v 1.4 2004/09/16 03:13:13 morrison Exp $ (BRL)";
@


1.4
log
@a_hit hook functions are now also given a segment pointer, so match prototype even if unused and quell the warnings
@
text
@d19 1
a19 1
static const char RCScell[] = "@@(#)$Header: /cvs/brlcad/src/rt/viewcell.c,v 1.3 2004/09/03 23:30:59 morrison Exp $ (BRL)";
d239 10
@


1.3
log
@USE_STRING_H is no more.. it's HAVE_STRING_H
@
text
@d19 1
a19 1
static const char RCScell[] = "@@(#)$Header: /cvs/brlcad/src/rt/viewcell.c,v 1.2 2004/08/02 23:01:52 morrison Exp $ (BRL)";
a23 2


d28 1
a28 1
#include <string.h>
d30 1
a30 1
#include <strings.h>
d40 1
d73 1
a73 1
int	rayhit(register struct application *ap, struct partition *PartHeadp);
d173 1
a173 1
rayhit(struct application *ap, register struct partition *PartHeadp)
@


1.2
log
@replace the wrapped config.h block with common.h
@
text
@d19 1
a19 1
static const char RCScell[] = "@@(#)$Header: /cvs/brlcad/src/rt/viewcell.c,v 1.1 2004/05/20 15:20:46 morrison Exp $ (BRL)";
d29 1
a29 1
#ifdef USE_STRING_H
@


1.1
log
@Vast reorganization begins.  Sources moved from top-level directories into src/.
@
text
@d19 1
a19 1
static const char RCScell[] = "@@(#)$Header: /cvs/brlcad/rt/viewcell.c,v 11.19 2004/05/10 15:30:49 erikg Exp $ (BRL)";
d22 1
a22 3
#ifdef HAVE_CONFIG_H
# include "config.h"
#endif
@

