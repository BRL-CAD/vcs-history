head	14.11;
access;
symbols
	rel-7-10-4:14.10
	STABLE:14.10.0.2
	stable-branch:14.4
	rel-7-10-2:14.10
	rel-7-10-0:14.9
	rel-7-8-4:14.6
	rel-7-8-2:14.6
	rel-7-8-0:14.6
	trimnurbs-branch:14.6.0.2
	help:14.6
	temp_tag:14.5
	bobWinPort-20051223-freeze:14.4
	postmerge-20051223-bobWinPort:14.5
	premerge-20051223-bobWinPort:14.5
	rel-7-6-6:14.5
	rel-7-6-4:14.5
	rel-7-6-2:14.4
	rel-7-6-branch:14.4.0.6
	rel-7-6-0:14.4
	rel-7-4-2:14.4
	rel-7-4-branch:14.4.0.4
	bobWinPort:14.4.0.2
	rel-7-4-0:14.4
	rel-7-2-6:14.4
	rel-7-2-4:14.4
	rel-7-2-2:14.4
	rel-7-2-0:14.4
	rel-7-0-4:14.3
	rel-7-0-2:14.3
	rel-7-0-1:14.2
	opensource-post:14.2
	opensource-pre:1.2
	rel-7-0-branch:1.2.0.2
	rel-7-0:1.2;
locks; strict;
comment	@ * @;


14.11
date	2007.11.21.16.18.53;	author erikgreenwald;	state Exp;
branches;
next	14.10;

14.10
date	2007.05.18.04.13.50;	author brlcad;	state Exp;
branches;
next	14.9;

14.9
date	2007.01.27.01.41.45;	author brlcad;	state Exp;
branches;
next	14.8;

14.8
date	2007.01.23.01.13.46;	author brlcad;	state Exp;
branches;
next	14.7;

14.7
date	2007.01.20.14.37.00;	author brlcad;	state Exp;
branches;
next	14.6;

14.6
date	2006.01.18.06.46.24;	author brlcad;	state Exp;
branches;
next	14.5;

14.5
date	2005.10.23.04.44.38;	author brlcad;	state Exp;
branches;
next	14.4;

14.4
date	2005.01.30.20.31.10;	author brlcad;	state Exp;
branches
	14.4.6.1;
next	14.3;

14.3
date	2004.12.24.01.40.00;	author brlcad;	state Exp;
branches;
next	14.2;

14.2
date	2004.12.21.06.38.22;	author morrison;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.31;	author morrison;	state Exp;
branches;
next	1.2;

1.2
date	2004.08.02.23.01.52;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.20.15.20.47;	author morrison;	state Exp;
branches;
next	;

14.4.6.1
date	2005.11.13.13.46.19;	author brlcad;	state Exp;
branches;
next	;


desc
@@


14.11
log
@change bu_bomb to bu_exit when the sky isn't really falling
@
text
@/*                       V I E W D I R . C
 * BRL-CAD
 *
 * Copyright (c) 1993-2007 United States Government as represented by
 * the U.S. Army Research Laboratory.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * version 2.1 as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this file; see the file named COPYING for more
 * information.
 */
/** @@file viewdir.c
 *
 *  RT-View-Module for printing out the hit point of a ray and the ray's
 *  direction on a user-specified grid.
 *
 *  Author -
 *	Susanne L. Muuss, J.D.
 *
 *  Source -
 *	SECAD/VLD Computing Consortium, Bldg 394
 *	The U. S. Army Ballistic Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005
 */

#ifndef lint
static const char RCSraydir[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/rt/viewdir.c,v 14.10 2007/05/18 04:13:50 brlcad Exp $";
#endif

#include "common.h"

#include <stdio.h>
#include <math.h>

#include "machine.h"
#include "vmath.h"
#include "raytrace.h"
#include "./ext.h"
#include "rtprivate.h"


extern	int	width;			/* # of pixels in X; picture width */
extern int	npsw;			/* number of worker PSWs to run */


int		use_air = 0;		/* Internal air recognition is off */

int		using_mlib = 0;		/* Material routines NOT used */

/* Viewing module specific "set" variables */
struct bu_structparse view_parse[] = {
	{"",	0, (char *)0,	0,	BU_STRUCTPARSE_FUNC_NULL }
};


char usage[] = "\
Usage:  rtrange [options] model.g objects... >file.ray\n\
Options:\n\
 -s #		Grid size in pixels, default 512\n\
 -a Az		Azimuth in degrees	(conflicts with -M)\n\
 -e Elev	Elevation in degrees	(conflicts with -M)\n\
 -M		Read model2view matrix on stdin (conflicts with -a, -e)\n\
 -o model.g	Specify output file (default=stdout)\n\
 -U #		Set use_air boolean to # (default=1)\n\
 -x #		Set librt debug flags\n\
";

int	rayhit(register struct application *ap, struct partition *PartHeadp), raymiss(register struct application *ap);

/*
 *  			V I E W _ I N I T
 *
 *  This routine is called by main().  It initializes the entire run, i.e.,
 *  it does things such as opening files, etc., which must be done before
 *  any other computations take place.  It is called only once per run.
 *  Pointers to rayhit() and raymiss() are set up and are later called from
 *  do_run().
 *
 */

int
view_init(register struct application *ap, char *file, char *obj, int minus_o)
{

	ap->a_hit = rayhit;
	ap->a_miss = raymiss;
	ap->a_onehit = 1;		/* only the first hit is considered */

	output_is_binary = 0;		/* output is not binary */

	return(0);			/* No framebuffer needed */
}

/*
 *			V I E W _ 2 I N I T
 *
 *  A null-function.
 *  View_2init is called by do_frame(), which in turn is called by
 *  main() in rt.c.  This routine is called once per frame.  Static
 *  images only have one frame.  Animations have MANY frames, and bounding
 *  boxes, for example, need to be computed once per frame.
 *  Never preclude a new and nifty animation: rule: if it's a variable, it can
 *  change from frame to frame ( frame/picture width; angle between surface
 *  normals triggering shading.... etc).
 */

void
view_2init(struct application *ap)
{
	if( outfp == NULL )
		bu_exit(EXIT_FAILURE, "outfp is NULL\n");

	/*
	 *  For now, RTVIEWDIR does not operate in parallel, while ray-tracing.
	 *  However, not dropping out of parallel mode here permits
	 *  tree walking and database prepping to still be done in parallel.
	 */
	if( npsw >= 1 )  {
		bu_log("Note: changing from %d cpus to 1 cpu\n", npsw );
		npsw = 1;		/* Disable parallel processing */
	}


}


/*
 *			R A Y M I S S
 *
 *  This function is called by rt_shootray(), which is called by
 *  do_frame(). Records coordinates where a miss is detected.
 */

int
raymiss(register struct application *ap)
{

	struct	cell	*posp;		/* store the current cell position */

	/* Getting defensive.... just in case. */
	if(ap->a_x > width)  {
		bu_exit(EXIT_FAILURE, "raymiss: pixels exceed width\n");
	}


	return(0);
}

/*
 *			V I E W _ P I X E L
 *
 *  This routine is called from do_run(), and in this case does nothing.
 */

void
view_pixel(void)
{
	return;
}

void view_setup(void) {}
void view_cleanup(void) {}


/*
 *			R A Y H I T
 *
 *  Rayhit() is called by rt_shootray() when a hit is detected.  It
 *  computes the hit distance, the distance traveled by the
 *  ray, and the direction vector.
 *
 */

 int
rayhit(struct application *ap, register struct partition *PartHeadp)
{
	register struct partition *pp = PartHeadp->pt_forw;

	if( pp == PartHeadp )
		return(0);		/* nothing was actually hit?? */


	/* Getting defensive.... just in case. */
	if(ap->a_x > width)  {
		bu_exit(EXIT_FAILURE, "rayhit: pixels exceed width\n");
	}


	/* Calculate the hit distance and the direction vector.  This is done
	 * by VJOIN1(hitp->hit_point, rp->r_pt, hitp->hit_dist, rp->r_dir).
	 */

	VJOIN1(pp->pt_inhit->hit_point, ap->a_ray.r_pt,
		pp->pt_inhit->hit_dist, ap->a_ray.r_dir);

	/* Print the information onto stdout.  The first three numbers are
	 * ray impact coordinates, and the next three numbers are the ray
	 * direction.  The line must be semi-colon terminated so that
	 * the output can be read by "miss" for use with PCAVAM.
	 */

	fprintf(stdout, "%g %g %g %g %g %g;\n",
	    pp->pt_inhit->hit_point[0], pp->pt_inhit->hit_point[1], pp->pt_inhit->hit_point[2],
	    ap->a_ray.r_dir[0], ap->a_ray.r_dir[1], ap->a_ray.r_dir[2]);


	return(0);
}

/*
 *			V I E W _ E O L
 *
 *  View_eol() is called by rt_shootray() in do_run().
 *  This routine is called by worker.c whenever there is a full scanline.
 *  worker.c figures out what is a full scanline.  Whenever there
 *  is a full buffer in memory, the hit distances ar plotted.
 */

void	view_eol(struct application *ap)
{


}


/*
 *			V I E W _ E N D
 *
 *  View_end() is called by rt_shootray in do_run().
 */

void
view_end(struct application *ap)
{

	fflush(outfp);
}


void application_init (void) {}

/*
 * Local Variables:
 * mode: C
 * tab-width: 8
 * c-basic-offset: 4
 * indent-tabs-mode: t
 * End:
 * ex: shiftwidth=4 tabstop=8
 */
@


14.10
log
@rt_bomb() has been deprecated since before 7.0, but even our sources weren't properly updated to reflect this change.  update all of our sources to use bu_bomb() now.
@
text
@d35 1
a35 1
static const char RCSraydir[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/rt/viewdir.c,v 14.9 2007/01/27 01:41:45 brlcad Exp $";
d119 1
a119 1
		bu_bomb("outfp is NULL\n");
d150 1
a150 1
		bu_bomb("raymiss: pixels exceed width\n");
d193 1
a193 1
		bu_bomb("rayhit: pixels exceed width\n");
@


14.9
log
@ws. lots and lots of ws.  see sh/ws.sh for details (cases 'abcdeg').
@
text
@d35 1
a35 1
static const char RCSraydir[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/rt/viewdir.c,v 14.8 2007/01/23 01:13:46 brlcad Exp $";
d119 1
a119 1
		rt_bomb("outfp is NULL\n");
d150 1
a150 1
		rt_bomb("raymiss: pixels exceed width\n");
d193 1
a193 1
		rt_bomb("rayhit: pixels exceed width\n");
@


14.8
log
@Sweeping license updates.  Documentation is fully relicensed to the BSD Documentation License (a minor variant of the FreeBSD Documentation License and BSD License).  All GPL code (mostly application code) is converted to the LGPL and now also specifically declares version 2.1, revoking the blank check to the FSF.  The intent of these sweeping changes are to simplify the licensing terms and increase overall flexibility of use, both externally (to users for their purposes) and internally (to allow application code to be migrated to libraries without creating GPL libraries).  As a collective work, BRL-CAD is now LGPL.
@
text
@d35 1
a35 1
static const char RCSraydir[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/rt/viewdir.c,v 14.7 2007/01/20 14:37:00 brlcad Exp $";
a53 1

a153 1

d212 1
a212 2
            ap->a_ray.r_dir[0], ap->a_ray.r_dir[1], ap->a_ray.r_dir[2]);

@


14.7
log
@update copyright to 2007
@
text
@d8 2
a9 3
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation; either version 2 of the
 * License, or (at your option) any later version.
d14 1
a14 1
 * General Public License for more details.
d16 2
a17 2
 * You should have received a copy of the GNU General Public License
 * along with this file; see the file named COPYING for more
d35 1
a35 1
static const char RCSraydir[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/rt/viewdir.c,v 14.6 2006/01/18 06:46:24 brlcad Exp $";
@


14.6
log
@update copyright to 2006
@
text
@d4 1
a4 1
 * Copyright (c) 1993-2006 United States Government as represented by
d36 1
a36 1
static const char RCSraydir[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/rt/viewdir.c,v 14.5 2005/10/23 04:44:38 brlcad Exp $";
@


14.5
log
@trailing ws
@
text
@d4 1
a4 1
 * Copyright (C) 1993-2005 United States Government as represented by
d36 1
a36 1
static const char RCSraydir[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/rt/viewdir.c,v 14.4 2005/01/30 20:31:10 brlcad Exp $";
@


14.4
log
@update copyright to 2005
@
text
@d25 1
a25 1
 *  
d28 1
a28 1
 *  
d36 1
a36 1
static const char RCSraydir[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/rt/viewdir.c,v 14.3 2004/12/24 01:40:00 brlcad Exp $";
d88 1
a88 1
 *  
d182 1
a182 1
 *  
d213 2
a214 2
	fprintf(stdout, "%g %g %g %g %g %g;\n", 
	    pp->pt_inhit->hit_point[0], pp->pt_inhit->hit_point[1], pp->pt_inhit->hit_point[2], 
d233 1
a233 1
 
@


14.4.6.1
log
@merge changes from HEAD aka rel-7-6-4 to the rel-7-6-branch just in case someone peeks a gander or tries to continue/build the branch
@
text
@d25 1
a25 1
 *
d28 1
a28 1
 *
d36 1
a36 1
static const char RCSraydir[] = "@@(#)$Header$";
d88 1
a88 1
 *
d182 1
a182 1
 *
d213 2
a214 2
	fprintf(stdout, "%g %g %g %g %g %g;\n",
	    pp->pt_inhit->hit_point[0], pp->pt_inhit->hit_point[1], pp->pt_inhit->hit_point[2],
d233 1
a233 1

@


14.3
log
@add the mysteriously missing gpl header..
@
text
@d4 1
a4 1
 * Copyright (c) 1993-2004 United States Government as represented by
d36 1
a36 1
static const char RCSraydir[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/rt/viewdir.c,v 14.2 2004/12/21 06:38:22 morrison Exp $";
@


14.2
log
@remove the old copyright notice section
@
text
@d1 21
a21 2
/*
 *			V I E W_ R A Y_D I R E C T I O N
a25 3
 *  
 *  
 *  
a32 1
 *  
a34 1

d36 1
a36 1
static const char RCSraydir[] = "@@(#)$Header: /cvs/brlcad/src/rt/viewdir.c,v 14.1 2004/11/16 19:42:31 morrison Exp $";
a40 2


@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@a17 3
 *  Copyright Notice -
 *	This software is Copyright (C) 1993-2004 by the United States Army.
 *	All rights reserved.
d22 1
a22 1
static const char RCSraydir[] = "@@(#)$Header: /cvs/brlcad/src/rt/viewdir.c,v 1.2 2004/08/02 23:01:52 morrison Exp $";
@


1.2
log
@replace the wrapped config.h block with common.h
@
text
@d25 1
a25 1
static const char RCSraydir[] = "@@(#)$Header: /cvs/brlcad/src/rt/viewdir.c,v 1.1 2004/05/20 15:20:47 morrison Exp $";
d244 10
@


1.1
log
@Vast reorganization begins.  Sources moved from top-level directories into src/.
@
text
@d25 1
a25 1
static const char RCSraydir[] = "@@(#)$Header: /cvs/brlcad/rt/viewdir.c,v 11.13 2004/05/10 15:30:49 erikg Exp $";
d28 1
a28 3
#ifdef HAVE_CONFIG_H
# include "config.h"
#endif
@

