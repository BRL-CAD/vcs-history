head	14.18;
access;
symbols
	rel-7-10-4:14.15
	STABLE:14.15.0.2
	stable-branch:14.5
	rel-7-10-2:14.15
	rel-7-10-0:14.13
	rel-7-8-4:14.10
	rel-7-8-2:14.9
	rel-7-8-0:14.9
	trimnurbs-branch:14.9.0.2
	help:14.9
	temp_tag:14.7
	bobWinPort-20051223-freeze:14.6
	postmerge-20051223-bobWinPort:14.7
	premerge-20051223-bobWinPort:14.7
	rel-7-6-6:14.7
	rel-7-6-4:14.7
	rel-7-6-2:14.6
	rel-7-6-branch:14.6.0.4
	rel-7-6-0:14.6
	rel-7-4-2:14.5.2.1
	rel-7-4-branch:14.5.0.2
	bobWinPort:14.6.0.2
	rel-7-4-0:14.5
	rel-7-2-6:14.5
	rel-7-2-4:14.5
	rel-7-2-2:14.5
	rel-7-2-0:14.5
	rel-7-0-4:14.4
	rel-7-0-2:14.4
	rel-7-0-1:14.3
	opensource-post:14.3
	opensource-pre:1.4
	rel-7-0-branch:1.4.0.2
	rel-7-0:1.4;
locks; strict;
comment	@ * @;


14.18
date	2007.11.28.13.55.47;	author erikgreenwald;	state Exp;
branches;
next	14.17;

14.17
date	2007.11.21.16.18.53;	author erikgreenwald;	state Exp;
branches;
next	14.16;

14.16
date	2007.09.15.16.23.20;	author brlcad;	state Exp;
branches;
next	14.15;

14.15
date	2007.05.18.04.13.50;	author brlcad;	state Exp;
branches;
next	14.14;

14.14
date	2007.04.17.03.23.57;	author brlcad;	state Exp;
branches;
next	14.13;

14.13
date	2007.02.20.08.19.50;	author brlcad;	state Exp;
branches;
next	14.12;

14.12
date	2007.01.23.01.13.46;	author brlcad;	state Exp;
branches;
next	14.11;

14.11
date	2007.01.20.14.37.00;	author brlcad;	state Exp;
branches;
next	14.10;

14.10
date	2006.07.09.19.17.16;	author brlcad;	state Exp;
branches;
next	14.9;

14.9
date	2006.02.27.10.08.41;	author brlcad;	state Exp;
branches;
next	14.8;

14.8
date	2006.01.18.06.46.24;	author brlcad;	state Exp;
branches;
next	14.7;

14.7
date	2005.10.23.04.44.38;	author brlcad;	state Exp;
branches;
next	14.6;

14.6
date	2005.07.16.23.19.49;	author brlcad;	state Exp;
branches
	14.6.4.1;
next	14.5;

14.5
date	2005.01.30.20.31.10;	author brlcad;	state Exp;
branches
	14.5.2.1;
next	14.4;

14.4
date	2004.12.24.01.40.00;	author brlcad;	state Exp;
branches;
next	14.3;

14.3
date	2004.12.21.06.58.44;	author morrison;	state Exp;
branches;
next	14.2;

14.2
date	2004.12.21.06.44.33;	author morrison;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.31;	author morrison;	state Exp;
branches;
next	1.4;

1.4
date	2004.09.15.06.57.17;	author morrison;	state Exp;
branches;
next	1.3;

1.3
date	2004.09.03.23.30.59;	author morrison;	state Exp;
branches;
next	1.2;

1.2
date	2004.08.02.23.01.52;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.20.15.20.46;	author morrison;	state Exp;
branches;
next	;

14.5.2.1
date	2005.08.16.21.03.50;	author brlcad;	state Exp;
branches;
next	;

14.6.4.1
date	2005.11.13.13.46.19;	author brlcad;	state Exp;
branches;
next	;


desc
@@


14.18
log
@(type)(size_t)val hack to quell compiler warning...
@
text
@/*                V I E W _ B O T _ F A C E S . C
 * BRL-CAD
 *
 * Copyright (c) 2003-2007 United States Government as represented by
 * the U.S. Army Research Laboratory.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * version 2.1 as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this file; see the file named COPYING for more
 * information.
 */
/** @@file view_bot_faces.c
 *
 *  Ray Tracing program view module to find visible bot faces
 *
 *  Author -
 *	John R. Anderson
 *
 *  Source -
 *	The U. S. Army Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5068
 */
#ifndef lint
static const char RCSray_bot_faces[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/rt/view_bot_faces.c,v 14.17 2007/11/21 16:18:53 erikgreenwald Exp $ (BRL)";
#endif

#include "common.h"

#include <stdlib.h>
#include <stdio.h>
#include <math.h>
#include <string.h>
#include <ctype.h>

#ifdef HAVE_UNIX_IO
#  include <sys/types.h>
#  include <sys/stat.h>
#endif

#include "machine.h"
#include "vmath.h"
#include "raytrace.h"
#include "./ext.h"
#include "../librt/debug.h"
#include "plot3.h"
#include "rtprivate.h"


extern char	*outputfile;		/* output file name */

extern point_t	viewbase_model;

extern int	npsw;			/* number of worker PSWs to run */

int		use_air = 1;		/* Handling of air in librt */

extern int 	 rpt_overlap;

extern fastf_t  rt_cline_radius;        /* from g_cline.c */

extern struct bu_vls    ray_data_file;  /* file name for ray data output (declared in do.c) */
extern FILE		*outfp;

static Tcl_HashTable bots;		/* hash table with a bot_face_list entry for each BOT primitive hit */

/* Viewing module specific "set" variables */
struct bu_structparse view_parse[] = {
	{"",	0, (char *)0,	0,		BU_STRUCTPARSE_FUNC_NULL }
};

const char title[] = "RT BoT Faces";
const char usage[] = "\
Usage:  rt_bot_faces [options] model.g objects... >file.ray\n\
Options:\n\
 -s #		Grid size in pixels, default 512\n\
 -a Az		Azimuth in degrees	(conflicts with -M)\n\
 -e Elev	Elevation in degrees	(conflicts with -M)\n\
 -M		Read model2view matrix on stdin (conflicts with -a, -e)\n\
 -g #		Grid cell width in millimeters (conflicts with -s)\n\
 -G #		Grid cell height in millimeters (conflicts with -s)\n\
 -J #		Jitter.  Default is off.  Any non-zero number is on\n\
 -o bot_faces_file	Specify output file, list of bot_faces hit (default=stdout)\n\
 -U #		Set use_air boolean to # (default=1)\n\
 -c \"set save_overlaps=1\"     Reproduce FASTGEN behavior for regions flagged as FASTGEN regions\n\
 -c \"set rt_cline_radius=radius\"      Additional radius to be added to CLINE solids\n\
 -x #		Set librt debug flags\n\
";


int rayhit();
int raymiss();


/*
 *  			V I E W _ I N I T
 *
 *  This routine is called by main().
 */

int
view_init( struct application *ap, char *file, char *obj, int minus_o )
{

	if( !minus_o )
		outfp = stdout;

	ap->a_hit = rayhit;
	ap->a_miss = raymiss;
	ap->a_onehit = 1;

	output_is_binary = 0;

	if( !rpt_overlap )
		 ap->a_logoverlap = rt_silent_logoverlap;

	/* initialize hash table */
	Tcl_InitHashTable( &bots, TCL_STRING_KEYS );

	return(0);		/* No framebuffer needed */
}

/*
 *			V I E W _ 2 I N I T
 *
 *  View_2init is called by do_frame(), which in turn is called by
 *  main() in rt.c.
 *
 */
void
view_2init( struct application *ap, char *framename )
{
#ifdef HAVE_UNIX_IO
	struct stat sb;
	char line[RT_MAXLINE];
#endif

	if( outfp == NULL )
		bu_exit(EXIT_FAILURE, "outfp is NULL\n");

#ifdef HAVE_UNIX_IO
	/* read in any existing data */
	if( outfp != NULL && stat( framename, &sb ) >= 0 && sb.st_size > 0 )  {
		Tcl_HashEntry *entry;
		char *bot_name;
		struct bu_ptbl *faces=NULL;
		int newPtr;
		int i, j;

		/* File exists, with partial results */
		while( bu_fgets( line, RT_MAXLINE, outfp ) ) {
			if( !strncmp( line, "BOT:", 4 ) ) {
				struct directory *dp;

				/* found a BOT entry, addit to the hash table */
				i = 4;
				while( line[i] != '\0' && isspace( line[i] ) ) i++;
				if( line[i] == '\0' ) {
					bu_log( "Unexpected EOF found in partial results (%s)\n", outputfile );
					bu_exit(EXIT_FAILURE, "Unexpected EOF");
				}
				j = i;
				while( line[j] != '\0' && !isspace( line[j] ) ) j++;
				line[j] = '\0';
				if( (dp=db_lookup( ap->a_rt_i->rti_dbip, &line[i], LOOKUP_QUIET)) == DIR_NULL ) {
					bot_name = bu_strdup( &line[i] );
				} else {
					bot_name = dp->d_namep;
				}
				entry = Tcl_CreateHashEntry( &bots, bot_name, &newPtr );
				if( newPtr ) {
					faces = (struct bu_ptbl *)bu_calloc( 1, sizeof( struct bu_ptbl ),
									       "bot_faces" );
					bu_ptbl_init( faces, 128, "bot faces" );
					Tcl_SetHashValue( entry, (char *)faces );
				} else {
					faces = (struct bu_ptbl *)Tcl_GetHashValue( entry );
				}
			} else {
				long int face_num;

				if( !faces ) {
					bu_exit( EXIT_FAILURE, "No faces structure while reading partial data!!!\n" );
				}
				face_num = atoi( line );
				bu_ptbl_ins_unique( faces, (long *)face_num );
			}
		}
	}

#endif
}

/*
 *			R A Y M I S S
 *
 *  Null function -- handle a miss
 *  This function is called by rt_shootray(), which is called by
 *  do_frame().
 */
int
raymiss()
{
	return(0);
}

/*
 *			V I E W _ P I X E L
 *
 *  This routine is called from do_run(), and in this case does nothing.
 */
void
view_pixel()
{
	return;
}

/*
 *			R A Y H I T
 *
 *  Rayhit() is called by rt_shootray() when the ray hits one or more objects.
 */
int
rayhit( struct application *ap, struct partition *PartHeadp )
{
	register struct partition *pp = PartHeadp->pt_forw;
	Tcl_HashEntry *entry;
	int newPtr;
	struct bu_ptbl *faces;

	if( pp == PartHeadp )
		return(0);		/* nothing was actually hit?? */

	if( ap->a_rt_i->rti_save_overlaps )
		rt_rebuild_overlaps( PartHeadp, ap, 1 );

	/* did we hit a BOT?? */
	if( pp->pt_inseg->seg_stp->st_dp->d_major_type != DB5_MAJORTYPE_BRLCAD ||
	    pp->pt_inseg->seg_stp->st_dp->d_minor_type != DB5_MINORTYPE_BRLCAD_BOT ) {
		return 0;
	}

	/* this is a BOT, get the hash tabel entry for it */
	bu_semaphore_acquire( BU_SEM_LISTS );
	entry = Tcl_CreateHashEntry( &bots, pp->pt_inseg->seg_stp->st_dp->d_namep, &newPtr );
	if( newPtr ) {
		faces = (struct bu_ptbl *)bu_malloc( sizeof( struct bu_ptbl ), "faces" );
		bu_ptbl_init( faces, 128, "faces" );
		Tcl_SetHashValue( entry, (char *)faces );
	} else {
		faces = (struct bu_ptbl *)Tcl_GetHashValue( entry );
	}

	bu_ptbl_ins_unique( faces, (long *)(size_t)pp->pt_inhit->hit_surfno );
	bu_semaphore_release( BU_SEM_LISTS );

	return(0);
}

/*
 *			V I E W _ E O L
 *
 *  View_eol() is called by rt_shootray() in do_run().  In this case,
 *  it does nothing.
 */
void	view_eol()
{
}

/*
 *			V I E W _ E N D
 *
 *  View_end() is called by rt_shootray in do_run().
 *
 */
void
view_end()
{
	Tcl_HashEntry *entry;
	Tcl_HashSearch search;
	struct bu_ptbl *faces;

	/* rewrite entire output file */
	rewind( outfp );

	entry = Tcl_FirstHashEntry( &bots, &search );

	while( entry ) {
		int i;

		fprintf( outfp, "BOT: %s\n", Tcl_GetHashKey( &bots, entry ) );
		faces = (struct bu_ptbl *)Tcl_GetHashValue( entry );
		for( i=0 ; i<BU_PTBL_LEN( faces ) ; i++ ) {
			fprintf( outfp, "\t%ld\n", (long int)BU_PTBL_GET( faces, i ) );
		}
		entry = Tcl_NextHashEntry( &search );
	}

	fflush(outfp);
}

void view_setup() {}
void view_cleanup() {}
void application_init () {}

/*
 * Local Variables:
 * mode: C
 * tab-width: 8
 * c-basic-offset: 4
 * indent-tabs-mode: t
 * End:
 * ex: shiftwidth=4 tabstop=8
 */
@


14.17
log
@change bu_bomb to bu_exit when the sky isn't really falling
@
text
@d32 1
a32 1
static const char RCSray_bot_faces[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/rt/view_bot_faces.c,v 14.16 2007/09/15 16:23:20 brlcad Exp $ (BRL)";
d261 1
a261 1
	bu_ptbl_ins_unique( faces, (long *)pp->pt_inhit->hit_surfno );
@


14.16
log
@more c89 embracing.  c89 provides string.h for all of the various str*() and mem*() functions, so remove the check for its presence.  there is still likely to be work required for strict c89 conformance for the various bsd strings.h functions that may be in use.
@
text
@d32 1
a32 1
static const char RCSray_bot_faces[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/rt/view_bot_faces.c,v 14.15 2007/05/18 04:13:50 brlcad Exp $ (BRL)";
d146 1
a146 1
		bu_bomb("outfp is NULL\n");
d167 1
a167 1
					bu_bomb("Unexpected EOF");
d190 1
a190 1
					bu_bomb( "No faces structure while reading partial data!!!\n" );
@


14.15
log
@rt_bomb() has been deprecated since before 7.0, but even our sources weren't properly updated to reflect this change.  update all of our sources to use bu_bomb() now.
@
text
@d32 1
a32 1
static const char RCSray_bot_faces[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/rt/view_bot_faces.c,v 14.14 2007/04/17 03:23:57 brlcad Exp $ (BRL)";
d40 3
a46 6
#ifdef HAVE_STRING_H
#  include <string.h>
#else
#  include <strings.h>
#endif
#include <ctype.h>
@


14.14
log
@redo the client-side version reporting to use the new brlcad_version() interface, utilizing a per-binary title as needed, instead of the former vers.sh setup.
@
text
@d32 1
a32 1
static const char RCSray_bot_faces[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/rt/view_bot_faces.c,v 14.13 2007/02/20 08:19:50 brlcad Exp $ (BRL)";
d149 1
a149 1
		rt_bomb("outfp is NULL\n");
@


14.13
log
@update all usages of fgets() to instead use john's swanktastic bu_fgets() that behaves as one would generally want regardless of the line ending type of the compilation platform or of the input files.  bu_fgets() responds to input files that use CR (usually old mac), LF (usually unix, new mac), or CR/LF (usually windows) for the line ending so now these file do too effectivley squashing buggish/bad behavior.
@
text
@d32 1
a32 1
static const char RCSray_bot_faces[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/rt/view_bot_faces.c,v 14.12 2007/01/23 01:13:46 brlcad Exp $ (BRL)";
d82 1
d100 4
a103 1
int	rayhit(), raymiss();
@


14.12
log
@Sweeping license updates.  Documentation is fully relicensed to the BSD Documentation License (a minor variant of the FreeBSD Documentation License and BSD License).  All GPL code (mostly application code) is converted to the LGPL and now also specifically declares version 2.1, revoking the blank check to the FSF.  The intent of these sweeping changes are to simplify the licensing terms and increase overall flexibility of use, both externally (to users for their purposes) and internally (to allow application code to be migrated to libraries without creating GPL libraries).  As a collective work, BRL-CAD is now LGPL.
@
text
@d32 1
a32 1
static const char RCSray_bot_faces[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/rt/view_bot_faces.c,v 14.11 2007/01/20 14:37:00 brlcad Exp $ (BRL)";
d157 1
a157 1
		while( fgets( line, RT_MAXLINE, outfp ) ) {
@


14.11
log
@update copyright to 2007
@
text
@d8 2
a9 3
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation; either version 2 of the
 * License, or (at your option) any later version.
d14 1
a14 1
 * General Public License for more details.
d16 2
a17 2
 * You should have received a copy of the GNU General Public License
 * along with this file; see the file named COPYING for more
d32 1
a32 1
static const char RCSray_bot_faces[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/rt/view_bot_faces.c,v 14.10 2006/07/09 19:17:16 brlcad Exp $ (BRL)";
@


14.10
log
@increase and initialize some buffer sizes to something larger in order to minimize hitting buffer limits while processing.
@
text
@d4 1
a4 1
 * Copyright (c) 2003-2006 United States Government as represented by
d33 1
a33 1
static const char RCSray_bot_faces[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/rt/view_bot_faces.c,v 14.9 2006/02/27 10:08:41 brlcad Exp $ (BRL)";
@


14.9
log
@stdlib.h and exit()
@
text
@d33 1
a33 1
static const char RCSray_bot_faces[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/rt/view_bot_faces.c,v 14.8 2006/01/18 06:46:24 brlcad Exp $ (BRL)";
a61 1
#define MAX_LINE_LEN	1024		/* max line length in output file */
d142 1
a142 1
	char line[MAX_LINE_LEN];
d158 1
a158 1
		while( fgets( line, MAX_LINE_LEN, outfp ) ) {
@


14.8
log
@update copyright to 2006
@
text
@d33 1
a33 1
static const char RCSray_bot_faces[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/rt/view_bot_faces.c,v 14.7 2005/10/23 04:44:38 brlcad Exp $ (BRL)";
d38 1
a40 1

a44 1

d50 1
a59 1
#include <ctype.h>
d168 1
a168 1
					exit( 1 );
d191 1
a191 2
					bu_log( "No faces structure while reading partial data!!!\n" );
					exit( 1 );
@


14.7
log
@trailing ws
@
text
@d4 1
a4 1
 * Copyright (C) 2003-2005 United States Government as represented by
d33 1
a33 1
static const char RCSray_bot_faces[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/rt/view_bot_faces.c,v 14.6 2005/07/16 23:19:49 brlcad Exp $ (BRL)";
@


14.6
log
@knr to ansify funcage
@
text
@d27 1
a27 1
 *  
d33 1
a33 1
static const char RCSray_bot_faces[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/rt/view_bot_faces.c,v 14.5 2005/01/30 20:31:10 brlcad Exp $ (BRL)";
d116 1
a116 1
	
d137 1
a137 1
 * 
d200 1
a200 1
	
@


14.6.4.1
log
@merge changes from HEAD aka rel-7-6-4 to the rel-7-6-branch just in case someone peeks a gander or tries to continue/build the branch
@
text
@d27 1
a27 1
 *
d33 1
a33 1
static const char RCSray_bot_faces[] = "@@(#)$Header$ (BRL)";
d116 1
a116 1

d137 1
a137 1
 *
d200 1
a200 1

@


14.5
log
@update copyright to 2005
@
text
@d33 1
a33 1
static const char RCSray_bot_faces[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/rt/view_bot_faces.c,v 14.4 2004/12/24 01:40:00 brlcad Exp $ (BRL)";
d111 1
a111 3
view_init( ap, file, obj, minus_o )
register struct application *ap;
char *file, *obj;
d140 1
a140 3
view_2init( ap, framename )
struct application	*ap;
char *framename;
d234 1
a234 3
rayhit( ap, PartHeadp )
struct application *ap;
register struct partition *PartHeadp;
@


14.5.2.1
log
@merge in changes through Aug10 for 7.4.2 release
@
text
@d33 1
a33 1
static const char RCSray_bot_faces[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/rt/view_bot_faces.c,v 14.6 2005/07/16 23:19:49 brlcad Exp $ (BRL)";
d111 3
a113 1
view_init( struct application *ap, char *file, char *obj, int minus_o )
d142 3
a144 1
view_2init( struct application *ap, char *framename )
d238 3
a240 1
rayhit( struct application *ap, struct partition *PartHeadp )
@


14.4
log
@add the mysteriously missing gpl header..
@
text
@d4 1
a4 1
 * Copyright (c) 2003-2004 United States Government as represented by
d33 1
a33 1
static const char RCSray_bot_faces[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/rt/view_bot_faces.c,v 14.3 2004/12/21 06:58:44 morrison Exp $ (BRL)";
@


14.3
log
@remove the old copyright notice section as it's been supplanted (and copyright is now claimable in the us via assignmgent)
@
text
@d1 21
a21 2
/*
 *			V I E W _ B O T _ F A C E S
a30 3
 *  
 *

d33 1
a33 1
static const char RCSray_bot_faces[] = "@@(#)$Header: /cvs/brlcad/src/rt/view_bot_faces.c,v 14.2 2004/12/21 06:44:33 morrison Exp $ (BRL)";
a37 2


d42 2
a43 2
# include <sys/types.h>
# include <sys/stat.h>
d47 1
a47 1
#include <string.h>
d49 1
a49 1
#include <strings.h>
@


14.2
log
@remove the old distribution notice section
@
text
@a13 3
 *  Copyright Notice -
 *	This software is Copyright (C) 2003-2004 by the United States Army
 *	in all countries except the USA.  All rights reserved.
d17 1
a17 1
static const char RCSray_bot_faces[] = "@@(#)$Header: /cvs/brlcad/src/rt/view_bot_faces.c,v 14.1 2004/11/16 19:42:31 morrison Exp $ (BRL)";
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@a12 4
 *  Distribution Notice -
 *	Re-distribution of this software is restricted, as described in
 *	your "Statement of Terms and Conditions for the Release of
 *	The BRL-CAD Package" agreement.
d20 1
a20 1
static const char RCSray_bot_faces[] = "@@(#)$Header: /cvs/brlcad/src/rt/view_bot_faces.c,v 1.4 2004/09/15 06:57:17 morrison Exp $ (BRL)";
@


1.4
log
@quell pointer to integer conversion warning (ia64 hunt)
@
text
@d24 1
a24 1
static const char RCSray_bot_faces[] = "@@(#)$Header: /cvs/brlcad/src/rt/view_bot_faces.c,v 1.3 2004/09/03 23:30:59 morrison Exp $ (BRL)";
d314 10
@


1.3
log
@USE_STRING_H is no more.. it's HAVE_STRING_H
@
text
@d24 1
a24 1
static const char RCSray_bot_faces[] = "@@(#)$Header: /cvs/brlcad/src/rt/view_bot_faces.c,v 1.2 2004/08/02 23:01:52 morrison Exp $ (BRL)";
d186 1
a186 1
				int face_num;
d303 1
a303 1
			fprintf( outfp, "\t%d\n", (int)BU_PTBL_GET( faces, i ) );
@


1.2
log
@replace the wrapped config.h block with common.h
@
text
@d24 1
a24 1
static const char RCSray_bot_faces[] = "@@(#)$Header: /cvs/brlcad/src/rt/view_bot_faces.c,v 1.1 2004/05/20 15:20:46 morrison Exp $ (BRL)";
d39 1
a39 1
#ifdef USE_STRING_H
@


1.1
log
@Vast reorganization begins.  Sources moved from top-level directories into src/.
@
text
@d24 1
a24 1
static const char RCSray_bot_faces[] = "@@(#)$Header: /cvs/brlcad/rt/view_bot_faces.c,v 11.3 2004/05/10 15:30:49 erikg Exp $ (BRL)";
d27 1
a27 3
#ifdef HAVE_CONFIG_H
# include "config.h"
#endif
@

