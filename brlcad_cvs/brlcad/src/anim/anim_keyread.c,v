head	14.12;
access;
symbols
	rel-7-10-4:14.12
	STABLE:14.12.0.2
	stable-branch:14.8
	rel-7-10-2:14.12
	rel-7-10-0:14.12
	rel-7-8-4:14.10
	rel-7-8-2:14.10
	rel-7-8-0:14.10
	trimnurbs-branch:14.10.0.2
	help:14.10
	temp_tag:14.9
	bobWinPort-20051223-freeze:14.8
	postmerge-20051223-bobWinPort:14.9
	premerge-20051223-bobWinPort:14.9
	rel-7-6-6:14.9
	rel-7-6-4:14.9
	rel-7-6-2:14.8
	rel-7-6-branch:14.8.0.6
	rel-7-6-0:14.8
	rel-7-4-2:14.8
	rel-7-4-branch:14.8.0.4
	bobWinPort:14.8.0.2
	rel-7-4-0:14.8
	rel-7-2-6:14.8
	rel-7-2-4:14.8
	rel-7-2-2:14.8
	rel-7-2-0:14.8
	rel-7-0-4:14.6
	rel-7-0-2:14.6
	rel-7-0-1:14.6
	opensource-post:14.6
	opensource-pre:1.2
	rel-7-0-branch:1.2.0.2
	rel-7-0:1.2;
locks; strict;
comment	@ * @;


14.12
date	2007.01.23.01.13.23;	author brlcad;	state Exp;
branches;
next	14.11;

14.11
date	2007.01.20.14.36.42;	author brlcad;	state Exp;
branches;
next	14.10;

14.10
date	2006.01.18.06.46.12;	author brlcad;	state Exp;
branches;
next	14.9;

14.9
date	2005.10.23.04.44.28;	author brlcad;	state Exp;
branches;
next	14.8;

14.8
date	2005.02.14.02.29.35;	author brlcad;	state Exp;
branches
	14.8.6.1;
next	14.7;

14.7
date	2005.01.30.20.30.14;	author brlcad;	state Exp;
branches;
next	14.6;

14.6
date	2004.12.21.07.32.29;	author morrison;	state Exp;
branches;
next	14.5;

14.5
date	2004.12.21.06.58.41;	author morrison;	state Exp;
branches;
next	14.4;

14.4
date	2004.12.21.06.50.58;	author morrison;	state Exp;
branches;
next	14.3;

14.3
date	2004.12.18.06.50.49;	author morrison;	state Exp;
branches;
next	14.2;

14.2
date	2004.12.18.00.54.02;	author morrison;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.12;	author morrison;	state Exp;
branches;
next	1.2;

1.2
date	2004.08.02.23.01.47;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.20.15.18.38;	author morrison;	state Exp;
branches;
next	;

14.8.6.1
date	2005.11.13.13.46.12;	author brlcad;	state Exp;
branches;
next	;


desc
@@


14.12
log
@Sweeping license updates.  Documentation is fully relicensed to the BSD Documentation License (a minor variant of the FreeBSD Documentation License and BSD License).  All GPL code (mostly application code) is converted to the LGPL and now also specifically declares version 2.1, revoking the blank check to the FSF.  The intent of these sweeping changes are to simplify the licensing terms and increase overall flexibility of use, both externally (to users for their purposes) and internally (to allow application code to be migrated to libraries without creating GPL libraries).  As a collective work, BRL-CAD is now LGPL.
@
text
@/*                  A N I M _ K E Y R E A D . C
 * BRL-CAD
 *
 * Copyright (c) 1993-2007 United States Government as represented by
 * the U.S. Army Research Laboratory.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * version 2.1 as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this file; see the file named COPYING for more
 * information.
 *
 */
/** @@file anim_keyread.c
 *	Convert an list of mged-style 'savekey' keyframes into an
 *  animation table
 *
 *  The output table specifies the orientation in one of three ways:
 *
 *	default	 - quaternions in the order x, y, z, w.
 *
 *	-z option - Eulers angles, in the order xyz. The model axes are
 *		considered to be rotated about the camera's z, y, and
 *		x axes (in that order).
 *
 *	-y option - Eulers angles in the form yaw, pitch, roll.
 *
 *  This is more or less a special case of anim_orient.c
 *
 *  Author -
 *	Carl J. Nuzman
 *
 *  Source -
 *      The U. S. Army Research Laboratory
 *      Aberdeen Proving Ground, Maryland  21005-5068  USA
 */

#include "common.h"


#include <stdio.h>
#include <math.h>
#include "machine.h"
#include "vmath.h"
#include "bu.h"

#ifndef M_PI
#define M_PI	3.14159265358979323846
#endif

#define YPR		0
#define XYZ		1
#define QUATERNION	2

#define DEGREES		0
#define RADIANS		1

#define NORMAL		0
#define ERROR1		1
#define ERROR2		2

#define DTOR    M_PI/180.0
#define RTOD    180.0/M_PI

int mode;
int units;

extern int bu_optind;
extern char *bu_optarg;

int get_args(int argc, char **argv);
extern void anim_v_unpermute(fastf_t *);

int
main(int argc, char **argv)
{
    int c;
    fastf_t time, viewsize;

    fastf_t eyept[3], viewrot[16], angle[3], quat[4];
    int anim_mat2ypr(fastf_t *, fastf_t *), anim_mat2zyx(const fastf_t *, fastf_t *), anim_mat2quat(fastf_t *, const fastf_t *);

    if (!get_args(argc,argv))
	fprintf(stderr,"anim_keyread: get_args error");

    while (!feof(stdin)){  /* read one keyframe */
	scanf("%lf", &time);
	scanf("%lf", &viewsize);
	scanf("%lf %lf %lf", eyept, eyept+1, eyept+2);
	/* read in transposed matrix */
	scanf("%lf %lf %lf %lf", viewrot+0, viewrot+4, viewrot+8, viewrot+12);
	scanf("%lf %lf %lf %lf", viewrot+1, viewrot+5, viewrot+9, viewrot+13);
	scanf("%lf %lf %lf %lf", viewrot+2, viewrot+6, viewrot+10, viewrot+14);
	scanf("%lf %lf %lf %lf", viewrot+3, viewrot+7, viewrot+11, viewrot+15);

	if (feof(stdin)) break;

	printf("%.10g\t%.10g\t%.10g\t%.10g\t%.10g\t", time, viewsize,
	       eyept[0], eyept[1], eyept[2]);


	if (mode==YPR) {
	    anim_v_unpermute(viewrot);
	    c = anim_mat2ypr(angle,viewrot);
	    if (c==ERROR1)
		fprintf(stderr,"Warning: yaw and roll arbitrarily defined at time = %f.\n",time);
	    else if (c==ERROR2)
		fprintf(stderr,"Keyread: can't interpret matrix at time = %f.\n",time);
	    if (units == DEGREES)
		VSCALE(angle,angle,RTOD);
	    printf("%.10g\t%.10g\t%.10g\n",angle[0],angle[1],angle[2]);
	}
	else if (mode==XYZ) {
	    c = anim_mat2zyx(angle,viewrot);
	    if (c==ERROR1)
		fprintf(stderr,"Warning: x and z rotations arbitrarily defined at time = %f.\n",time);
	    else if (c==ERROR2)
		fprintf(stderr,"Keyread: can't interpret matrix at time = %f\n.",time);
	    if (units == DEGREES)
		VSCALE(angle,angle,RTOD);
	    printf("%.10g\t%.10g\t%.10g\n",angle[X],angle[Y],angle[Z]);
	}
	else if (mode==QUATERNION){
	    anim_mat2quat(quat,viewrot);
	    printf("%.10g\t%.10g\t%.10g\t%.10g\n",quat[X],quat[Y],quat[Z],quat[W]);
	}
    }
    return( 0 );
}


#define OPT_STR "yzqr"

int get_args(int argc, char **argv)
{

    int c;

    mode = QUATERNION; /* default */
    units = DEGREES;

    while ( (c=bu_getopt(argc,argv,OPT_STR)) != EOF) {
	switch(c){
	case 'y':
	    mode = YPR;
	    break;
	case 'z':
	    mode = XYZ;
	    break;
	case 'q':
	    mode = QUATERNION;
	    break;
	case 'r':
	    units = RADIANS;
	    break;
	default:
	    fprintf(stderr,"Unknown option: -%c\n",c);
	    return(0);
	}
    }
    return(1);
}


/*
 * Local Variables:
 * mode: C
 * tab-width: 8
 * c-basic-offset: 4
 * indent-tabs-mode: t
 * End:
 * ex: shiftwidth=4 tabstop=8
 */
@


14.11
log
@update copyright to 2007
@
text
@d8 2
a9 3
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation; either version 2 of the
 * License, or (at your option) any later version.
d14 1
a14 1
 * General Public License for more details.
d16 2
a17 2
 * You should have received a copy of the GNU General Public License
 * along with this file; see the file named COPYING for more
@


14.10
log
@update copyright to 2006
@
text
@d4 1
a4 1
 * Copyright (c) 1993-2006 United States Government as represented by
@


14.9
log
@trailing ws
@
text
@d4 1
a4 1
 * Copyright (C) 1993-2005 United States Government as represented by
@


14.8
log
@M-x indent-region
@
text
@d23 1
a23 1
 *	Convert an list of mged-style 'savekey' keyframes into an 
d30 2
a31 2
 *	-z option - Eulers angles, in the order xyz. The model axes are 
 *		considered to be rotated about the camera's z, y, and 
d33 1
a33 1
 *	
d40 1
a40 1
 *  
d62 1
a62 1
 
d73 1
a73 1
int mode; 
@


14.8.6.1
log
@merge changes from HEAD aka rel-7-6-4 to the rel-7-6-branch just in case someone peeks a gander or tries to continue/build the branch
@
text
@d23 1
a23 1
 *	Convert an list of mged-style 'savekey' keyframes into an
d30 2
a31 2
 *	-z option - Eulers angles, in the order xyz. The model axes are
 *		considered to be rotated about the camera's z, y, and
d33 1
a33 1
 *
d40 1
a40 1
 *
d62 1
a62 1

d73 1
a73 1
int mode;
@


14.7
log
@update copyright to 2005
@
text
@d85 2
a86 2
	int c;
	fastf_t time, viewsize;
d88 2
a89 2
	fastf_t eyept[3], viewrot[16], angle[3], quat[4];
	int anim_mat2ypr(fastf_t *, fastf_t *), anim_mat2zyx(const fastf_t *, fastf_t *), anim_mat2quat(fastf_t *, const fastf_t *);
d91 2
a92 2
	if (!get_args(argc,argv))
		fprintf(stderr,"anim_keyread: get_args error");
d94 26
a119 41
	while (!feof(stdin)){  /* read one keyframe */
		scanf("%lf", &time);
		scanf("%lf", &viewsize);
		scanf("%lf %lf %lf", eyept, eyept+1, eyept+2);
		/* read in transposed matrix */
		scanf("%lf %lf %lf %lf", viewrot+0, viewrot+4, viewrot+8, viewrot+12);
		scanf("%lf %lf %lf %lf", viewrot+1, viewrot+5, viewrot+9, viewrot+13);
		scanf("%lf %lf %lf %lf", viewrot+2, viewrot+6, viewrot+10, viewrot+14);
		scanf("%lf %lf %lf %lf", viewrot+3, viewrot+7, viewrot+11, viewrot+15);

		if (feof(stdin)) break;

		printf("%.10g\t%.10g\t%.10g\t%.10g\t%.10g\t", time, viewsize,
					 eyept[0], eyept[1], eyept[2]);


		if (mode==YPR) {
			anim_v_unpermute(viewrot);
			c = anim_mat2ypr(angle,viewrot);
			if (c==ERROR1)
				fprintf(stderr,"Warning: yaw and roll arbitrarily defined at time = %f.\n",time);
			else if (c==ERROR2)
				fprintf(stderr,"Keyread: can't interpret matrix at time = %f.\n",time);
			if (units == DEGREES)
				VSCALE(angle,angle,RTOD);
			printf("%.10g\t%.10g\t%.10g\n",angle[0],angle[1],angle[2]);
		}
		else if (mode==XYZ) {
			c = anim_mat2zyx(angle,viewrot);
			if (c==ERROR1)
				fprintf(stderr,"Warning: x and z rotations arbitrarily defined at time = %f.\n",time);
			else if (c==ERROR2)
				fprintf(stderr,"Keyread: can't interpret matrix at time = %f\n.",time);
			if (units == DEGREES)
				VSCALE(angle,angle,RTOD);
			printf("%.10g\t%.10g\t%.10g\n",angle[X],angle[Y],angle[Z]);
		}
		else if (mode==QUATERNION){
			anim_mat2quat(quat,viewrot);
			printf("%.10g\t%.10g\t%.10g\t%.10g\n",quat[X],quat[Y],quat[Z],quat[W]);
		}
d121 16
a136 1
	return( 0 );
d145 1
a145 1
	int c;
d147 2
a148 2
	mode = QUATERNION; /* default */
	units = DEGREES;
d150 17
a166 18
	while ( (c=bu_getopt(argc,argv,OPT_STR)) != EOF) {
		switch(c){
		case 'y':
			mode = YPR;
			break;
		case 'z':
			mode = XYZ;
			break;
		case 'q':
			mode = QUATERNION;
			break;
		case 'r':
			units = RADIANS;
			break;
		default:
			fprintf(stderr,"Unknown option: -%c\n",c);
			return(0);
		}
d168 2
a169 1
	return(1);
@


14.6
log
@tidy up a lil bit
@
text
@d4 1
a4 1
 * Copyright (c) 1993-2004 United States Government as represented by
@


14.5
log
@remove the old copyright notice section as it's been supplanted (and copyright is now claimable in the us via assignmgent)
@
text
@a43 2
 *  
 *
@


14.4
log
@remove the old distribution notice section
@
text
@a45 3
 *  Copyright Notice -
 *      This software is Copyright (C) 1993-2004 by the United States Army
 *      in all countries except the USA.  All rights reserved.
@


14.3
log
@break up the doxygen marker to appease emacs M-x indent-region'ing
@
text
@a44 4
 *  Distribution Notice -
 *      Re-distribution of this software is restricted, as described in
 *      your "Statement of Terms and Conditions for the Release of
 *      The BRL-CAD Pacakge" agreement.
@


14.2
log
@assign copyright and GPL license
@
text
@d21 2
a22 1
 **//** @@file anim_keyread.c
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d1 2
a2 1
/*                         A N I M _ K E Y R E A D . C
d4 18
@


1.2
log
@replace the wrapped config.h block with common.h
@
text
@d161 10
@


1.1
log
@Vast reorganization begins.  Sources moved from top-level directories into src/.
@
text
@d35 1
a35 3
#ifdef HAVE_CONFIG_H
# include "config.h"
#endif
@

