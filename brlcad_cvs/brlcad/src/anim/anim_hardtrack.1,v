head	14.14;
access;
symbols
	rel-7-10-4:14.13
	STABLE:14.13.0.2
	stable-branch:14.3
	rel-7-10-2:14.13
	rel-7-10-0:14.12
	rel-7-8-4:14.9
	rel-7-8-2:14.9
	rel-7-8-0:14.9
	trimnurbs-branch:14.9.0.2
	help:14.9
	temp_tag:14.7
	bobWinPort-20051223-freeze:14.4
	postmerge-20051223-bobWinPort:14.7
	premerge-20051223-bobWinPort:14.7
	rel-7-6-6:14.7
	rel-7-6-4:14.7
	rel-7-6-2:14.4
	rel-7-6-branch:14.4.0.6
	rel-7-6-0:14.4
	rel-7-4-2:14.4
	rel-7-4-branch:14.4.0.4
	bobWinPort:14.4.0.2
	rel-7-4-0:14.4
	rel-7-2-6:14.4
	rel-7-2-4:14.4
	rel-7-2-2:14.3
	rel-7-2-0:14.3
	rel-7-0-4:14.2
	rel-7-0-2:14.2
	rel-7-0-1:14.2
	opensource-post:14.2
	opensource-pre:1.1
	rel-7-0-branch:1.1.0.2
	rel-7-0:1.1;
locks; strict;
comment	@.\" @;


14.14
date	2007.09.14.15.21.02;	author erikgreenwald;	state Exp;
branches;
next	14.13;

14.13
date	2007.08.14.18.12.31;	author erikgreenwald;	state Exp;
branches;
next	14.12;

14.12
date	2007.01.27.01.41.31;	author brlcad;	state Exp;
branches;
next	14.11;

14.11
date	2007.01.23.01.13.23;	author brlcad;	state Exp;
branches;
next	14.10;

14.10
date	2007.01.20.14.36.42;	author brlcad;	state Exp;
branches;
next	14.9;

14.9
date	2006.01.18.06.46.12;	author brlcad;	state Exp;
branches;
next	14.8;

14.8
date	2006.01.17.05.54.47;	author brlcad;	state Exp;
branches;
next	14.7;

14.7
date	2005.10.23.04.44.28;	author brlcad;	state Exp;
branches;
next	14.6;

14.6
date	2005.09.09.04.17.38;	author brlcad;	state Exp;
branches;
next	14.5;

14.5
date	2005.09.09.03.29.34;	author brlcad;	state Exp;
branches;
next	14.4;

14.4
date	2005.05.02.01.58.25;	author brlcad;	state Exp;
branches
	14.4.6.1;
next	14.3;

14.3
date	2005.01.30.20.30.14;	author brlcad;	state Exp;
branches;
next	14.2;

14.2
date	2004.12.21.07.51.12;	author butler;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.12;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.20.15.18.38;	author morrison;	state Exp;
branches;
next	;

14.4.6.1
date	2005.11.13.13.46.12;	author brlcad;	state Exp;
branches;
next	;


desc
@@


14.14
log
@removed trailing whitespace
@
text
@.TH ANIM_HARDTRACK 1 BRL-CAD
.\"               A N I M _ H A R D T R A C K . 1
.\" BRL-CAD
.\"
.\" Copyright (c) 1993-2007 United States Government as represented by
.\" the U.S. Army Research Laboratory.
.\"
.\" Redistribution and use in source (Docbook format) and 'compiled'
.\" forms (PDF, PostScript, HTML, RTF, etc), with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\"
.\" 1. Redistributions of source code (Docbook format) must retain the
.\" above copyright notice, this list of conditions and the following
.\" disclaimer.
.\"
.\" 2. Redistributions in compiled form (transformed to other DTDs,
.\" converted to PDF, PostScript, HTML, RTF, and other formats) must
.\" reproduce the above copyright notice, this list of conditions and
.\" the following disclaimer in the documentation and/or other
.\" materials provided with the distribution.
.\"
.\" 3. The name of the author may not be used to endorse or promote
.\" products derived from this documentation without specific prior
.\" written permission.
.\"
.\" THIS DOCUMENTATION IS PROVIDED BY THE AUTHOR AS IS'' AND ANY
.\" EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
.\" PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
.\" ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
.\" CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT
.\" OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
.\" BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
.\" LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
.\" (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
.\" USE OF THIS DOCUMENTATION, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\".\".\"
.SH NAME
anim_hardtrack - make an animation script for the links and/or wheels of a
tracked vehicle with rigid axles.
.SH SYNOPSIS
.B
anim_hardtrack [-l num_links linkname] [-w wheelname] [options] wheelfile < in.table > out.script
.SH DESCRIPTION
.I Anim_hardtrack
is designed to produce an animation script for the
animation of a track and/or the wheels defining a track, where the wheels
are rigidly fixed in place with respect to the vehicle. The main
difference between
.I anim_hardtrack
and
.I anim_track
is that
.I anim_track
handles vehicles with dynamic axles. Both are designed to be use in
conjunction with
.I anim_script,
to achieve the final result.
.PP
.B in.table
is the file that will be used to animate the
vehicle itself. By default, it is assumed that it contains a time column,
three columns of translation information, and three columns specifying the
vehicle's yaw, pitch, and roll. If it is desired that the vehicle be steered
automatically, then the table should contain only time and position, and the
.B -s
option should be used.
.PP
The track's
geometry is defined by
.BR wheelfile ,
a table which contains one row for each wheel defining the track. The
first three columns of the table specify the x, y, and z coordinates of
the wheel centers. The fourth column specifies the radius of each wheel.
.PP
The order in which the wheels are listed should be the order in which a
link of the track would move around the wheels when the vehicle is moving
forward. (clockwise, when looking from the right of the vehicle).
The wheel centers should all lie in a plane perpendicular to the vehicle's
left-right axis. If this is not the case,
.I anim_hardtrack
uses the first wheel as the standard and projects all the other wheels into
the same plane as the first wheel. By default, it is assumed that the
vehicle's left-right axis is the y-axis. If the modeled vehicle has some
other orientation, this must be specified with the
.B -b
option.
.PP
By default, it is
assumed that
all of the link objects are modeled at the model origin,
with the wheel-contacting surface centered on the origin and the
ground-contacting surface facing up. The sides of each link which
connect to other links should face the positive and negative x-axes.
.I Anim_hardtrack
prints the appropriate
commands to move the links from
the origin to the correct place around the wheels.
.PP
If the links are modeled in place around the wheels to begin with, the
the
.B -p
and
.B -i
options are needed.

.SH OPTIONS:
.PP
One or both of the first two options should always be specified.
.TP
.B \-l num linkname
Print animation scripts to animate the links of the track. Animation
commands will be printed for
.I num
different links
named
.IR linkname .0, linkname .1,
up through
.IR linkname .( num -1).
A typical example of a linkname might
be "tank/righttrack/links/link". The full pathname must be specified,
because anim_hardtrack's method is to roll the links around within
the vehicle's tree structure so that when the whole vehicle "tank" is
animated, the complete combination of rolling around and translating is
achieved.
.TP
.B \-w wheelname
Print animation
scripts to rotate each wheel. The wheels are named wheelname.0, wheelname.1,
and so on, where wheelname.0 is the first wheel listed in
.BR wheelfile .
As with the links, the full pathname for the wheels should be specified.
.TP
.B \-b # # #
Specify the yaw, pitch, and roll of the vehicle's axes
with respect to the world axes. By default, the vehicle is assumed to
have a yaw, pitch, and roll of 0.
.TP
.B \-d # # #
Specify (in world coordinates) the centroid of the vehicle
of which the track is a part. By default, the vehicle is assumed
centered at the origin.
.\" Should this be .PP? It munges up the indentation.
.PP
When calling
.I anim_script
to handle the animation of the vehicle
itself, the parameters following the
.B -b
and
.B -d
options should be identical
to those used for
.IR anim_hardtrack .
.TP
.B \-r #
Specify the common radius of all wheels. In this case the fourth column
should be omitted from the
.BR wheelfile .
.TP
.B \-s
Automatic steering. In this case,
.B in.table
specifies only the time and position
of the vehicle. The orientation is calculated to always face the vehicle
in the direction of motion.
This should be used when the
.B \-s
option is used by
.I anim_script
to animate the vehicle.
.PP
.TP
.B \-f#
Specify the integer with which to begin numbering frames.
Default is zero.
.TP
.B \-p
Animate placed links, rather than links stored at the origin.
In order for placed links to be animated, they must be equally spaced
around the wheels defining the track. The track must be formed of arcs
around the wheels and straight lines between the wheels, and the links
must be numbered clockwise as seen from the right.
By default, it is assumed that the
center of the first link, linkname.0, is at the beginning of the
straight track segment between wheel.(n-1) and wheel.0 . If this is
not the case, the position of the first link must be identified with the
.B \-i#
option.
.TP
.B \-i#
Specify the initial offset of the first link. If this option is
not used, the initial position of linkname.0 is assumed to be the
beginning of the straight track segment between wheel.(n-1) and wheel.0.
If it is used, the argument specifies the distance clockwise around the
track from the default position to the actual desired offset. If the
links are modeled at the origin, the user can choose any offset. This
can be useful for lining up the links with gears of a drive wheel, for
example.
If the
.B -p
option is being used to animated pre-placed links, then it is essential
that the actual offset of the first pre-placed link be specified.
.TP
.B \-g#
Return "arced" for mged instead of "anim" for rt.
.TP
.B \-ml<string>
Use
.B <string>
for the link command. Defaults to "rarc".
.TP
.B \-mw<string>
Use
.B <string>
for the wheel command. Defaults to "lmul".
.TP
.B \-c
Only output the circumference of the track.
.SS Output:
.PP
The output is a script containing as many frames as there
are positions in
.BR in.table .
If there are
.I n
links and
.I k
wheels, each
frame contains up to
.IR  n + k
anim commands, either:
.nf

anim linkname.i matrix lmul
[... matrix ...] ;
				or
anim wheelname.j matrix lmul
[... matrix ...] ;

for 0<=i<n and 0<=j<k.

.fi
.SH EXAMPLES
Suppose you want to make an animation of a tank rolling across
flat ground. A list of desired positions is created, perhaps by
interpolating between a few key positions; this information is placed
in a four column animation table, in.table. The model of the tank is stored in
model.g as a combination named "tank". Its centroid is at the
point (0,0,1000) and it faces the y-axis. An animation script for the
tank itself is created as follows:
.PP
anim_script -s -d 0 0 1000 -b 90 0 0 /tank < in.table > tank.script
.PP
Suppose that there are two
roadwheels and a drivewheel (tank/rwheel/wheel.i, 0<=i<3) which define
the shape of the right track.
A file called
.B rwheelfile
is created:
.nf

1500   -2000    30      30
1500   0        1000    35
1500   2000     30      30

.fi
This
.B rwheelfile
lists the position and
radius of each of the three wheels.
.PP
There are eighty links which make up the right track
(tank/rtrack/link.i, 0<=i<80).
The links of the right track are all modeled
at the origin with the outer, ground-contacting surface
facing up and the inner, wheel-contacting surface centered at the
origin.
.PP
The appropriate call to
.I anim_hardtrack
is now:
.sp
anim_hardtrack -d 0 0 1000 -b 90 0 0 -w tank/rwheel -l 80 tank/rtrack/link
	rwheelfile < in.table > rtrack.script
.sp
Suppose that the left track is similar to the right track,
except that all the wheels are of radius 30 units, and the links, rather
than being stored at the origin, are actually placed in position around
the left wheels to begin with. The
.B lwheelfile
would be:
.nf

-1500   -2000   30
-1500   0       1000
-1500   2000    30

.fi
and the call would be:
.sp
anim_hardtrack -p -r 30 -d 0 0 1000 -b 90 0 0 -w tank/lwheel
	-l 80 tank/ltrack/link lwheelfile <in.table > ltrack.script
.sp
Here, it is assumed that tank/ltrack/link.0 is initially at the
beginning of the straight track segment between lwheel.2 and lwheel.0,
that is, at the point (2000,1500,-1000) in the vehicle's coordinates.
If, instead, the first link is initially centered halfway between the
two roadwheels, this must be specified with the
.B -i#
option. If the link's
actual position is 2000 units farther around the track than expected:
.sp
anim_hardtrack -i 2000 -p -r 30 -d 0 0 1000 -b 90 0 0 -w tank/lwheel
	-l 80 tank/ltrack/link lwheelfile <in.table > ltrack.script
.sp
One final step may remain. The above procedure produces a script with rigid
naming conventions, in order to make input simple. This may mean that
the names in the script do not match the names in model.g. An editor
should then be used at the end to replace all instances of the
conventional name with the real name; for example, in this case it may
be necessary to replace "rwheel.1" with "r_drivewheel".
.PP
.BR Tank.script ,
.BR rtrack.script ,
and
.B ltrack.script
can be combined
with
.I anim_sort
to make the complete script.
.PP
.SH BUGS
Tracks must have at least two wheels, and they must be listed in clockwise
order, or the results are unpredictable.
.SH SEE ALSO
anim_script(1), anim_track(1)
.SH AUTHOR
Carl J. Nuzman
.SH COPYRIGHT
	This software is Copyright (c) 1993-2007 by the United States
Government as represented by U.S. Army Research Laboratory.

.SH "BUG REPORTS"
Reports of bugs or problems should be submitted via electronic
mail to <devs@@brlcad.org>.
@


14.13
log
@Stub out missing options for PR 1773831. Someone with scary guru powers in anim should expand on it.
@
text
@d212 2
a213 2
Use 
.B <string> 
d217 2
a218 2
Use 
.B <string> 
@


14.12
log
@ws. lots and lots of ws.  see sh/ws.sh for details (cases 'abcdeg').
@
text
@d146 1
d207 16
@


14.11
log
@Sweeping license updates.  Documentation is fully relicensed to the BSD Documentation License (a minor variant of the FreeBSD Documentation License and BSD License).  All GPL code (mostly application code) is converted to the LGPL and now also specifically declares version 2.1, revoking the blank check to the FSF.  The intent of these sweeping changes are to simplify the licensing terms and increase overall flexibility of use, both externally (to users for their purposes) and internally (to allow application code to be migrated to libraries without creating GPL libraries).  As a collective work, BRL-CAD is now LGPL.
@
text
@d12 1
a12 1
.\" 
d16 1
a16 1
.\" 
d22 1
a22 1
.\" 
d26 1
a26 1
.\" 
a332 1

@


14.10
log
@update copyright to 2007
@
text
@d8 31
a38 15
.\" This document is made available under the terms of the GNU Free
.\" Documentation License or, at your option, under the terms of the
.\" GNU General Public License as published by the Free Software
.\" Foundation.  Permission is granted to copy, distribute and/or
.\" modify this document under the terms of the GNU Free Documentation
.\" License, Version 1.2 or any later version published by the Free
.\" Software Foundation; with no Invariant Sections, no Front-Cover
.\" Texts, and no Back-Cover Texts.  Permission is also granted to
.\" redistribute this document under the terms of the GNU General
.\" Public License; either version 2 of the License, or (at your
.\" option) any later version.
.\"
.\" You should have received a copy of the GNU Free Documentation
.\" License and/or the GNU General Public License along with this
.\" document; see the file named COPYING for more information.
@


14.9
log
@update copyright to 2006
@
text
@d5 1
a5 1
.\" Copyright (c) 1993-2006 United States Government as represented by
d311 1
a311 1
	This software is Copyright (c) 1993-2006 by the United States
@


14.8
log
@fix the manpage commments via s/\.\/"/.\\\"/g
@
text
@d5 1
a5 1
.\" Copyright (c) 1993-2005 United States Government as represented by
d311 1
a311 1
	This software is Copyright (C) 1993-2005 by the United States
@


14.7
log
@trailing ws
@
text
@d2 23
a24 23
./"               A N I M _ H A R D T R A C K . 1
./" BRL-CAD
./"
./" Copyright (c) 1993-2005 United States Government as represented by
./" the U.S. Army Research Laboratory.
./"
./" This document is made available under the terms of the GNU Free
./" Documentation License or, at your option, under the terms of the
./" GNU General Public License as published by the Free Software
./" Foundation.  Permission is granted to copy, distribute and/or
./" modify this document under the terms of the GNU Free Documentation
./" License, Version 1.2 or any later version published by the Free
./" Software Foundation; with no Invariant Sections, no Front-Cover
./" Texts, and no Back-Cover Texts.  Permission is also granted to
./" redistribute this document under the terms of the GNU General
./" Public License; either version 2 of the License, or (at your
./" option) any later version.
./"
./" You should have received a copy of the GNU Free Documentation
./" License and/or the GNU General Public License along with this
./" document; see the file named COPYING for more information.
./"
./"./"./"
@


14.6
log
@BRL-CAD not BRL/CAD
@
text
@d29 1
a29 1
.B 
d32 1
a32 1
.I Anim_hardtrack 
d38 1
a38 1
and 
d40 1
a40 1
is that 
d42 1
a42 1
handles vehicles with dynamic axles. Both are designed to be use in 
d44 1
a44 1
.I anim_script, 
d47 1
a47 1
.B in.table 
d53 1
a53 1
.B -s 
d57 2
a58 2
geometry is defined by 
.BR wheelfile , 
d63 1
a63 1
The order in which the wheels are listed should be the order in which a 
d73 1
a73 1
.B -b 
d77 1
a77 1
assumed that 
d82 1
a82 1
.I Anim_hardtrack 
d84 1
a84 1
commands to move the links from 
d88 4
a91 4
the 
.B -p 
and 
.B -i 
d101 6
a106 6
.I num 
different links 
named 
.IR linkname .0, linkname .1, 
up through 
.IR linkname .( num -1). 
d112 1
a112 1
achieved. 
d116 3
a118 3
scripts to rotate each wheel. The wheels are named wheelname.0, wheelname.1, 
and so on, where wheelname.0 is the first wheel listed in 
.BR wheelfile . 
d131 2
a132 2
When calling 
.I anim_script 
d134 4
a137 4
itself, the parameters following the 
.B -b 
and 
.B -d 
d139 1
a139 1
to those used for 
d148 3
a150 3
Automatic steering. In this case, 
.B in.table 
specifies only the time and position 
d153 3
a155 3
This should be used when the 
.B \-s 
option is used by 
d186 2
a187 2
If the 
.B -p 
d193 6
a198 6
are positions in 
.BR in.table . 
If there are 
.I n 
links and 
.I k 
d200 2
a201 2
frame contains up to 
.IR  n + k 
d210 2
a211 2
 
for 0<=i<n and 0<=j<k. 
d227 3
a229 3
the shape of the right track. 
A file called 
.B rwheelfile 
d238 2
a239 2
This 
.B rwheelfile 
d243 1
a243 1
There are eighty links which make up the right track 
d250 2
a251 2
The appropriate call to 
.I anim_hardtrack 
d254 1
a254 1
anim_hardtrack -d 0 0 1000 -b 90 0 0 -w tank/rwheel -l 80 tank/rtrack/link 
d260 2
a261 2
the left wheels to begin with. The 
.B lwheelfile 
d272 1
a272 1
anim_hardtrack -p -r 30 -d 0 0 1000 -b 90 0 0 -w tank/lwheel 
d279 2
a280 2
two roadwheels, this must be specified with the 
.B -i# 
d284 1
a284 1
anim_hardtrack -i 2000 -p -r 30 -d 0 0 1000 -b 90 0 0 -w tank/lwheel 
d294 4
a297 4
.BR Tank.script , 
.BR rtrack.script , 
and 
.B ltrack.script 
d299 2
a300 2
with 
.I anim_sort 
d311 1
a311 1
	This software is Copyright (C) 1993-2005 by the United States 
@


14.5
log
@add the standard documentation gfdl/gpl license header and copyright/distribution notice
@
text
@d1 1
a1 1
.TH ANIM_HARDTRACK 1 BRL/CAD
@


14.4
log
@replace the old cad e-mail with devs at brlcad dot org since the dot mil forward is no more.
@
text
@d2 23
@


14.4.6.1
log
@merge changes from HEAD aka rel-7-6-4 to the rel-7-6-branch just in case someone peeks a gander or tries to continue/build the branch
@
text
@d1 1
a1 24
.TH ANIM_HARDTRACK 1 BRL-CAD
./"               A N I M _ H A R D T R A C K . 1
./" BRL-CAD
./"
./" Copyright (c) 1993-2005 United States Government as represented by
./" the U.S. Army Research Laboratory.
./"
./" This document is made available under the terms of the GNU Free
./" Documentation License or, at your option, under the terms of the
./" GNU General Public License as published by the Free Software
./" Foundation.  Permission is granted to copy, distribute and/or
./" modify this document under the terms of the GNU Free Documentation
./" License, Version 1.2 or any later version published by the Free
./" Software Foundation; with no Invariant Sections, no Front-Cover
./" Texts, and no Back-Cover Texts.  Permission is also granted to
./" redistribute this document under the terms of the GNU General
./" Public License; either version 2 of the License, or (at your
./" option) any later version.
./"
./" You should have received a copy of the GNU Free Documentation
./" License and/or the GNU General Public License along with this
./" document; see the file named COPYING for more information.
./"
./"./"./"
d6 1
a6 1
.B
d9 1
a9 1
.I Anim_hardtrack
d15 1
a15 1
and
d17 1
a17 1
is that
d19 1
a19 1
handles vehicles with dynamic axles. Both are designed to be use in
d21 1
a21 1
.I anim_script,
d24 1
a24 1
.B in.table
d30 1
a30 1
.B -s
d34 2
a35 2
geometry is defined by
.BR wheelfile ,
d40 1
a40 1
The order in which the wheels are listed should be the order in which a
d50 1
a50 1
.B -b
d54 1
a54 1
assumed that
d59 1
a59 1
.I Anim_hardtrack
d61 1
a61 1
commands to move the links from
d65 4
a68 4
the
.B -p
and
.B -i
d78 6
a83 6
.I num
different links
named
.IR linkname .0, linkname .1,
up through
.IR linkname .( num -1).
d89 1
a89 1
achieved.
d93 3
a95 3
scripts to rotate each wheel. The wheels are named wheelname.0, wheelname.1,
and so on, where wheelname.0 is the first wheel listed in
.BR wheelfile .
d108 2
a109 2
When calling
.I anim_script
d111 4
a114 4
itself, the parameters following the
.B -b
and
.B -d
d116 1
a116 1
to those used for
d125 3
a127 3
Automatic steering. In this case,
.B in.table
specifies only the time and position
d130 3
a132 3
This should be used when the
.B \-s
option is used by
d163 2
a164 2
If the
.B -p
d170 6
a175 6
are positions in
.BR in.table .
If there are
.I n
links and
.I k
d177 2
a178 2
frame contains up to
.IR  n + k
d187 2
a188 2

for 0<=i<n and 0<=j<k.
d204 3
a206 3
the shape of the right track.
A file called
.B rwheelfile
d215 2
a216 2
This
.B rwheelfile
d220 1
a220 1
There are eighty links which make up the right track
d227 2
a228 2
The appropriate call to
.I anim_hardtrack
d231 1
a231 1
anim_hardtrack -d 0 0 1000 -b 90 0 0 -w tank/rwheel -l 80 tank/rtrack/link
d237 2
a238 2
the left wheels to begin with. The
.B lwheelfile
d249 1
a249 1
anim_hardtrack -p -r 30 -d 0 0 1000 -b 90 0 0 -w tank/lwheel
d256 2
a257 2
two roadwheels, this must be specified with the
.B -i#
d261 1
a261 1
anim_hardtrack -i 2000 -p -r 30 -d 0 0 1000 -b 90 0 0 -w tank/lwheel
d271 4
a274 4
.BR Tank.script ,
.BR rtrack.script ,
and
.B ltrack.script
d276 2
a277 2
with
.I anim_sort
d288 1
a288 1
	This software is Copyright (C) 1993-2005 by the United States
@


14.3
log
@update copyright to 2005
@
text
@d293 1
a293 1
mail to <CAD@@ARL.ARMY.MIL>.
@


14.2
log
@Copyright fix on man pages
@
text
@d288 2
a289 2
	This software is Copyright (C) 1993-2004 by the United States 
Government as represented by the U.S. Army Research Laboratory.
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d288 3
a290 2
	This software is Copyright (C) 1993-2004 by the United States Army
in all countries except the USA.  All rights reserved.
@


1.1
log
@Vast reorganization begins.  Sources moved from top-level directories into src/.
@
text
@@

