head	14.12;
access;
symbols
	rel-7-10-4:14.12
	STABLE:14.12.0.2
	stable-branch:14.3
	rel-7-10-2:14.12
	rel-7-10-0:14.12
	rel-7-8-4:14.9
	rel-7-8-2:14.9
	rel-7-8-0:14.9
	trimnurbs-branch:14.9.0.2
	help:14.9
	temp_tag:14.7
	bobWinPort-20051223-freeze:14.4
	postmerge-20051223-bobWinPort:14.7
	premerge-20051223-bobWinPort:14.7
	rel-7-6-6:14.7
	rel-7-6-4:14.7
	rel-7-6-2:14.4
	rel-7-6-branch:14.4.0.6
	rel-7-6-0:14.4
	rel-7-4-2:14.4
	rel-7-4-branch:14.4.0.4
	bobWinPort:14.4.0.2
	rel-7-4-0:14.4
	rel-7-2-6:14.4
	rel-7-2-4:14.4
	rel-7-2-2:14.3
	rel-7-2-0:14.3
	rel-7-0-4:14.2
	rel-7-0-2:14.2
	rel-7-0-1:14.2
	opensource-post:14.2
	opensource-pre:1.1
	rel-7-0-branch:1.1.0.2
	rel-7-0:1.1;
locks; strict;
comment	@.\" @;


14.12
date	2007.01.27.01.41.31;	author brlcad;	state Exp;
branches;
next	14.11;

14.11
date	2007.01.23.01.13.23;	author brlcad;	state Exp;
branches;
next	14.10;

14.10
date	2007.01.20.14.36.42;	author brlcad;	state Exp;
branches;
next	14.9;

14.9
date	2006.01.18.06.46.12;	author brlcad;	state Exp;
branches;
next	14.8;

14.8
date	2006.01.17.05.54.47;	author brlcad;	state Exp;
branches;
next	14.7;

14.7
date	2005.10.23.04.44.28;	author brlcad;	state Exp;
branches;
next	14.6;

14.6
date	2005.09.09.04.17.38;	author brlcad;	state Exp;
branches;
next	14.5;

14.5
date	2005.09.09.03.29.34;	author brlcad;	state Exp;
branches;
next	14.4;

14.4
date	2005.05.02.01.58.25;	author brlcad;	state Exp;
branches
	14.4.6.1;
next	14.3;

14.3
date	2005.01.30.20.30.14;	author brlcad;	state Exp;
branches;
next	14.2;

14.2
date	2004.12.21.07.51.12;	author butler;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.12;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.20.15.18.39;	author morrison;	state Exp;
branches;
next	;

14.4.6.1
date	2005.11.13.13.46.12;	author brlcad;	state Exp;
branches;
next	;


desc
@@


14.12
log
@ws. lots and lots of ws.  see sh/ws.sh for details (cases 'abcdeg').
@
text
@.TH ANIM_SCRIPT 1 BRL-CAD
.\"                  A N I M _ S C R I P T . 1
.\" BRL-CAD
.\"
.\" Copyright (c) 1993-2007 United States Government as represented by
.\" the U.S. Army Research Laboratory.
.\"
.\" Redistribution and use in source (Docbook format) and 'compiled'
.\" forms (PDF, PostScript, HTML, RTF, etc), with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\"
.\" 1. Redistributions of source code (Docbook format) must retain the
.\" above copyright notice, this list of conditions and the following
.\" disclaimer.
.\"
.\" 2. Redistributions in compiled form (transformed to other DTDs,
.\" converted to PDF, PostScript, HTML, RTF, and other formats) must
.\" reproduce the above copyright notice, this list of conditions and
.\" the following disclaimer in the documentation and/or other
.\" materials provided with the distribution.
.\"
.\" 3. The name of the author may not be used to endorse or promote
.\" products derived from this documentation without specific prior
.\" written permission.
.\"
.\" THIS DOCUMENTATION IS PROVIDED BY THE AUTHOR AS IS'' AND ANY
.\" EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
.\" PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
.\" ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
.\" CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT
.\" OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
.\" BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
.\" LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
.\" (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
.\" USE OF THIS DOCUMENTATION, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\".\".\"
.SH NAME
anim_script - make an animation script for one object
.SH SYNOPSIS
.B anim_script
.B [-v #]
.B [-r|t|s]
.B [-q][-p]
.B [-a|b # # #]
.B [-c|d # # #]
.B [-f #]
.B [-m cmd]
.B [objectname]
.B < in.table
.B > out.script
.SH DESCRIPTION
.I Anim_script
is designed to produce an animation script for the
animation of the virtual camera or one
.I brlcad
object at a time. It is
complementary to
.I tabsub
in that it performs a similar
function, but with a different philosophy.
.PP
Both
.I anim_script
and
.I tabsub
use one row of an animation table to
produce one frame of an animation script. With
.I tabsub,
the user supplies
a template file which controls the form of the animation frames. This
allows the maximum user control, but also requires a good understanding
of the script format. With
.I anim_script,
the user supplies all the necessary
information on the command line. The range of possible output scripts is
limited, but the user does not have to deal directly with the details.
Both routines have special features which make certain common situations
easy to do. One of the most important special features of
.I anim_script
is the
ability to specify a reference position and orientation, as explained
below.
.PP
The objectname is the name of the object which is to be
animated, as it will appear in the ouput script. For example, if
"hatch1"
is a member of "turret" which is a member of "tank" which is one of the
objects specified on the command line of the call to
.I rt,
then the objectname "tank/turret/hatch1" or simply "turret/hatch1" would be used to
animate the hatch. The tank itself would be referred to by the name,
"/tank". Note that toplevel objects should be preceeded by a slash.
If view animation is being performed, no objectname
should be included.
.PP
.B in.table
should be a seven-column animation table,
specifying the time, 3d position, yaw, pitch and roll of the
object (or camera), although this changes if the
.BR -r ,
.BR -t ,
.BR -s ,
or
.B -v#
options are used.
.SH OPTIONS
.TP
.B \-r
.B in.table
is a four-column file including time and rotation
information only. No translation will occur.
.TP
.B \-t
.B in.table
is a four-column file including time and translation
information only. No rotation will occur.
.TP
.B \-s
.B in.table
is a four-column file including time and translation
information only. The vehicle will be rotated (steered) to face the
direction of motion.
.TP
.B \-q
Quaternion orientation. Any orientation information in
.B in.table
will be in quaternion form, in the order x,y,z,w. The identity quaternion
representing no orientation change is (0,0,0,1).
.TP
.B \-p
Permuted orientation. This option indicates that transformations defined by
the quaternions should be applied to an object which has first been placed
in
.IR rt 's
default eye orientation. Thus, the identity quaternion represents yawing the
object 90 degrees to the left and then pitching it 90 degrees downward.
The quaternions produced by
.IR mged 's
saveview command and used by
.IR rt 's
orientation command
are quaternions of this type. See
.I anim_orient
for more information.
.TP
.B \-v#
The desired output is a view animation script, rather
than an object animation script. No object should be specified. The
argument can be any floating point number. If
the argument
is positive, the command:
.sp
viewsize #;
.sp
will be placed at the beginning of the ouput file. If it is
zero, the `viewsize' command is omitted from the output script. If it is
negative, then the
viewsize for each frame is expected to be in the first column after the
time in
.BR in.table .
A `viewsize' command would then be
included immediately after the `start' command of each frame.
.TP
.B \-f#
Specify the integer with which to begin
numbering the frames of the output script. The default is 0.
.PP
The remaining options give information about the object which is
to be animated.
.TP
.B \-a # # #
or
.TP
.B \-b # # #
These options take three arguments, which are the
yaw, pitch, and roll of the object's axes with respect to the
world axes. With
.B \-a,
rotations specified in the infile will be applied
with respect to the object's axes. With the
.B \-b
option, the object is
rotated so that its axes coincide with the world axes, and then all
rotations and translations are carried out with respect to the world
axes. The
.B \-b
option is particularly useful in conjunction with the
.B \-s
option, because it tells
.I anim_script
which way the front of the vehicle faces. See
the examples below.
.TP
.B \-c # # #
or
.TP
.B \-d # # #
These options take three arguments, which are the x, y,
and z coordinates of the point which is to be considered the "centroid"
of the object. All rotations will occur about this point. If
.B \-c
is used,
translations from the input table will be considered to be relative
displacements from this point. If
.B \-d
is used, the translations in the
input table will be interpreted as absolute displacement from the world
origin. The direction of translation in both cases is along the world
axes, unless the
.B \-a
option  has been used, in which case the
translations are with respect to the object's axes. See the examples below.
.PP
When the
.B \-v
option is used, the virtual camera is the object
being animated, and so the meaning of the preceeding four options
changes somewhat. The
.B \-c
and
.B \-a
options are not useful in this context.
The
.B \-d
option can be thought of as specifying the position and
orientation of a virtual
tripod with respect to the camera lens.  The translations and rotations
specified in
the input table will be applied to the tripod, to which the camera is
rigidly attached.  For example, the option
.B \-d 10 0 \-2
in conjunction with
the
.B \-v#
option means that the virtual tripod is 10 units in front of the
camera and 2
units below the camera's line of sight. The option
.B \-b -90 0 0
in this
context would mean that the front of the virtual tripod faces 90 degrees
to the right of the virtual camera. As translation and rotation
information are read in from in.table, they are applied to the virtual
tripod, with the virtual camera rigidly attached. See below for examples
of how this might be used.
.TP
.B -m cmd
Specify a matrix command to use in, object animation. The default value
is "lmul", which means that matrices in the output script are
multiplied onto the
left of the matrix between the object being animated and its parent.
The matrix residing between the object and its parent is referred to as
the current arc. The possible matrix commands are the following:
.nf

     lmul   - left-multiply the matrix onto the current arc
     rmul   - right-multiply the matrix onto the current arc
     rarc   - replace the current arc with the matrix
     rstack - replace the stack of ancestor matrices with the matrix
     rboth  - replace the current arc with the matrix and replace the
		 stack of ancestor matrices with the identity matrix.

.fi
This option is intended primarily to give expert users additional
flexibility, and shouldn't be needed by most animators.
.SH EXAMPLES
To animate a truck which is modeled with the front facing the positive
x-direction, the position of the center of the truck and its orientation at
each time should be in
.BR truck.table .
If the center of the modeled truck is at
the  point (234,0,1200) then the following command could be used:
.sp
anim_script -d 234 0 1200 /truck < truck.table > truck.script.
.sp
If the front of the model truck faces (for some reason)
halfway
between the x and y axes, a
.B \-b
option is added, to show the relationship
between world and truck axes:
.sp
anim_script -b 45 0 0 -d 234 0 1200 /truck < truck.table > truck.script.
.sp
To steer the truck automatically to face the direction of motion,
the
.B \-s
option is added, and the orientation columns should be removed from
.BR truck.table .
.sp
anim_script -s -b 45 0 0 -d 234 0 1200 /truck < truck.table > truck.script.
.sp
.sp
Animating a steering wheel: Suppose the steering wheel is stored
in the database so that the axis it turns on is at an yaw of -135
degrees and an pitch of 30 degrees.  It passes through the point
(700,800,2400). Then we select "rotation only" with
.B \-r
and specify the
relationship between the steering wheels axes and the world with the
.B \-a
and
.B \-c
options. In
.B roll.table
we put the time, two zero columns, and a
column specifying the roll of the wheel (How much it is to be twisted).
.sp
anim_script -r -a -135 30 0 -c 700 800 2400 truck/steering_column/wheel <
roll.table > steer.table
.sp
Alternativly, if the turning of the wheel was stored in the yaw
(second) column of a file,
.BR turn.table ,
a different set of axes would be
used to achieve the same effect:
.sp
anim_script -r -a 45 60 0 -c 700 800 2400 truck/steering_column/wheel <
turn.table > steer.table
.sp
.PP
To animate seven little men doing simultaneous backflips in different
places, you would want to use relative motion. That is, a translation
vector of (0,0,1) means move one unit upward, instead of move to the
point (0,0,1). For each little man, we specify his position in the
model using the
.B \-c
option. Then we can use the same backflip instuctions
for each of the little men.
.sp
anim_script -c 12 34 5 /little.man.one < generic.backflip.table >
little.man.one.script
.sp
anim_script -c -3 13 5 /little.man.two < generic.backflip.table >
little.man.two.script
.sp
and so on.
.sp
.sp
.SS Camera examples
If we know the desired postion of the camera and its orientation
at each time, it's very simple. The
.B -v#
option indicates that the view is
being animated; no object is specified.
.sp
anim_script -v0 < view.table > view.script
.sp
To follow a truck, so that the camera is always ten units behind and 4
units above it, we specify a virtual tripod in front of and below the
camera:
.sp
anim_script -v0 -d 10 0 -4 < truck.table > view.script
.sp
To do the same thing but with the camera turned to look at the right
side of the truck, we specify that the virtual tripod originally faces
to the right, so that the camera faces its right side. Thus when the
virtual tripod is placed in the same position and orientation as the
truck, the camera will be looking at the right side of the
truck.
.sp
anim_script -v0 -d 10 0 -4 -b -90 0 0 < truck.table > view.script
.SH BUGS
The reading of command line options which take more than one
argument are somewhat finicky. For example, it understands the
option "-d 1 1 1" but not "-d1 1 1".
.SH AUTHOR
Carl J. Nuzman
.SH COPYRIGHT
	This software is Copyright (c) 1993-2007 by the United States
Government as represented by U.S. Army Research Laboratory.
.SH "BUG REPORTS"
Reports of bugs or problems should be submitted via electronic
mail to <devs@@brlcad.org>.
@


14.11
log
@Sweeping license updates.  Documentation is fully relicensed to the BSD Documentation License (a minor variant of the FreeBSD Documentation License and BSD License).  All GPL code (mostly application code) is converted to the LGPL and now also specifically declares version 2.1, revoking the blank check to the FSF.  The intent of these sweeping changes are to simplify the licensing terms and increase overall flexibility of use, both externally (to users for their purposes) and internally (to allow application code to be migrated to libraries without creating GPL libraries).  As a collective work, BRL-CAD is now LGPL.
@
text
@d12 1
a12 1
.\" 
d16 1
a16 1
.\" 
d22 1
a22 1
.\" 
d26 1
a26 1
.\" 
d264 1
a264 1
                 stack of ancestor matrices with the identity matrix.
a377 1

@


14.10
log
@update copyright to 2007
@
text
@d8 31
a38 15
.\" This document is made available under the terms of the GNU Free
.\" Documentation License or, at your option, under the terms of the
.\" GNU General Public License as published by the Free Software
.\" Foundation.  Permission is granted to copy, distribute and/or
.\" modify this document under the terms of the GNU Free Documentation
.\" License, Version 1.2 or any later version published by the Free
.\" Software Foundation; with no Invariant Sections, no Front-Cover
.\" Texts, and no Back-Cover Texts.  Permission is also granted to
.\" redistribute this document under the terms of the GNU General
.\" Public License; either version 2 of the License, or (at your
.\" option) any later version.
.\"
.\" You should have received a copy of the GNU Free Documentation
.\" License and/or the GNU General Public License along with this
.\" document; see the file named COPYING for more information.
@


14.9
log
@update copyright to 2006
@
text
@d5 1
a5 1
.\" Copyright (c) 1993-2006 United States Government as represented by
d357 1
a357 1
	This software is Copyright (c) 1993-2006 by the United States
@


14.8
log
@fix the manpage commments via s/\.\/"/.\\\"/g
@
text
@d5 1
a5 1
.\" Copyright (c) 1993-2005 United States Government as represented by
d357 1
a357 1
	This software is Copyright (C) 1993-2005 by the United States
@


14.7
log
@trailing ws
@
text
@d2 23
a24 23
./"                  A N I M _ S C R I P T . 1
./" BRL-CAD
./"
./" Copyright (c) 1993-2005 United States Government as represented by
./" the U.S. Army Research Laboratory.
./"
./" This document is made available under the terms of the GNU Free
./" Documentation License or, at your option, under the terms of the
./" GNU General Public License as published by the Free Software
./" Foundation.  Permission is granted to copy, distribute and/or
./" modify this document under the terms of the GNU Free Documentation
./" License, Version 1.2 or any later version published by the Free
./" Software Foundation; with no Invariant Sections, no Front-Cover
./" Texts, and no Back-Cover Texts.  Permission is also granted to
./" redistribute this document under the terms of the GNU General
./" Public License; either version 2 of the License, or (at your
./" option) any later version.
./"
./" You should have received a copy of the GNU Free Documentation
./" License and/or the GNU General Public License along with this
./" document; see the file named COPYING for more information.
./"
./"./"./"
@


14.6
log
@BRL-CAD not BRL/CAD
@
text
@d28 3
a30 3
.B anim_script 
.B [-v #] 
.B [-r|t|s] 
d32 2
a33 2
.B [-a|b # # #] 
.B [-c|d # # #] 
d36 2
a37 2
.B [objectname] 
.B < in.table 
d40 1
a40 1
.I Anim_script 
d42 2
a43 2
animation of the virtual camera or one 
.I brlcad 
d45 2
a46 2
complementary to 
.I tabsub 
d48 1
a48 1
function, but with a different philosophy. 
d50 4
a53 4
Both 
.I anim_script 
and 
.I tabsub 
d55 2
a56 2
produce one frame of an animation script. With 
.I tabsub, 
d60 2
a61 2
of the script format. With 
.I anim_script, 
d66 2
a67 2
easy to do. One of the most important special features of 
.I anim_script 
d76 1
a76 1
objects specified on the command line of the call to 
d84 1
a84 1
.B in.table 
d87 1
a87 1
object (or camera), although this changes if the 
d97 1
a97 1
.B in.table 
d102 1
a102 1
.B in.table 
d107 1
a107 1
.B in.table 
d115 2
a116 2
will be in quaternion form, in the order x,y,z,w. The identity quaternion 
representing no orientation change is (0,0,0,1). 
d120 2
a121 2
the quaternions should be applied to an object which has first been placed 
in 
d125 1
a125 1
The quaternions produced by 
d127 1
a127 1
saveview command and used by 
d130 2
a131 2
are quaternions of this type. See 
.I anim_orient 
d137 1
a137 1
argument can be any floating point number. If 
d139 1
a139 1
is positive, the command: 
d141 1
a141 1
viewsize #; 
d144 1
a144 1
zero, the `viewsize' command is omitted from the output script. If it is 
d147 2
a148 2
time in 
.BR in.table . 
d157 1
a157 1
to be animated. 
d159 1
a159 1
.B \-a # # #  
d165 2
a166 2
world axes. With 
.B \-a, 
d168 2
a169 2
with respect to the object's axes. With the 
.B \-b 
d173 3
a175 3
axes. The 
.B \-b 
option is particularly useful in conjunction with the 
d177 2
a178 2
option, because it tells 
.I anim_script 
d182 1
a182 1
.B \-c # # #  
d188 2
a189 2
of the object. All rotations will occur about this point. If 
.B \-c 
d192 2
a193 2
displacements from this point. If 
.B \-d 
d197 2
a198 2
axes, unless the 
.B \-a 
d202 2
a203 2
When the 
.B \-v 
d206 4
a209 4
changes somewhat. The 
.B \-c 
and 
.B \-a 
d211 2
a212 2
The 
.B \-d 
d215 1
a215 1
tripod with respect to the camera lens.  The translations and rotations 
d218 2
a219 2
rigidly attached.  For example, the option 
.B \-d 10 0 \-2 
d221 1
a221 1
the 
d225 2
a226 2
units below the camera's line of sight. The option 
.B \-b -90 0 0 
d236 2
a237 2
is "lmul", which means that matrices in the output script are 
multiplied onto the 
d247 1
a247 1
     rboth  - replace the current arc with the matrix and replace the 
d252 1
a252 1
flexibility, and shouldn't be needed by most animators. 
d255 3
a257 3
x-direction, the position of the center of the truck and its orientation at 
each time should be in 
.BR truck.table . 
d263 1
a263 1
If the front of the model truck faces (for some reason) 
d265 2
a266 2
between the x and y axes, a 
.B \-b 
d272 2
a273 2
To steer the truck automatically to face the direction of motion, 
the 
d284 2
a285 2
(700,800,2400). Then we select "rotation only" with 
.B \-r 
d287 1
a287 1
relationship between the steering wheels axes and the world with the 
d289 4
a292 4
and 
.B \-c 
options. In 
.B roll.table 
d300 2
a301 2
(second) column of a file, 
.BR turn.table , 
d313 2
a314 2
model using the 
.B \-c 
d329 2
a330 2
at each time, it's very simple. The 
.B -v# 
d344 2
a345 2
to the right, so that the camera faces its right side. Thus when the 
virtual tripod is placed in the same position and orientation as the 
d357 1
a357 1
	This software is Copyright (C) 1993-2005 by the United States 
@


14.5
log
@add the standard documentation gfdl/gpl license header and copyright/distribution notice
@
text
@d1 1
a1 1
.TH ANIM_SCRIPT 1 BRL/CAD
@


14.4
log
@replace the old cad e-mail with devs at brlcad dot org since the dot mil forward is no more.
@
text
@d2 23
@


14.4.6.1
log
@merge changes from HEAD aka rel-7-6-4 to the rel-7-6-branch just in case someone peeks a gander or tries to continue/build the branch
@
text
@d1 1
a1 24
.TH ANIM_SCRIPT 1 BRL-CAD
./"                  A N I M _ S C R I P T . 1
./" BRL-CAD
./"
./" Copyright (c) 1993-2005 United States Government as represented by
./" the U.S. Army Research Laboratory.
./"
./" This document is made available under the terms of the GNU Free
./" Documentation License or, at your option, under the terms of the
./" GNU General Public License as published by the Free Software
./" Foundation.  Permission is granted to copy, distribute and/or
./" modify this document under the terms of the GNU Free Documentation
./" License, Version 1.2 or any later version published by the Free
./" Software Foundation; with no Invariant Sections, no Front-Cover
./" Texts, and no Back-Cover Texts.  Permission is also granted to
./" redistribute this document under the terms of the GNU General
./" Public License; either version 2 of the License, or (at your
./" option) any later version.
./"
./" You should have received a copy of the GNU Free Documentation
./" License and/or the GNU General Public License along with this
./" document; see the file named COPYING for more information.
./"
./"./"./"
d5 3
a7 3
.B anim_script
.B [-v #]
.B [-r|t|s]
d9 2
a10 2
.B [-a|b # # #]
.B [-c|d # # #]
d13 2
a14 2
.B [objectname]
.B < in.table
d17 1
a17 1
.I Anim_script
d19 2
a20 2
animation of the virtual camera or one
.I brlcad
d22 2
a23 2
complementary to
.I tabsub
d25 1
a25 1
function, but with a different philosophy.
d27 4
a30 4
Both
.I anim_script
and
.I tabsub
d32 2
a33 2
produce one frame of an animation script. With
.I tabsub,
d37 2
a38 2
of the script format. With
.I anim_script,
d43 2
a44 2
easy to do. One of the most important special features of
.I anim_script
d53 1
a53 1
objects specified on the command line of the call to
d61 1
a61 1
.B in.table
d64 1
a64 1
object (or camera), although this changes if the
d74 1
a74 1
.B in.table
d79 1
a79 1
.B in.table
d84 1
a84 1
.B in.table
d92 2
a93 2
will be in quaternion form, in the order x,y,z,w. The identity quaternion
representing no orientation change is (0,0,0,1).
d97 2
a98 2
the quaternions should be applied to an object which has first been placed
in
d102 1
a102 1
The quaternions produced by
d104 1
a104 1
saveview command and used by
d107 2
a108 2
are quaternions of this type. See
.I anim_orient
d114 1
a114 1
argument can be any floating point number. If
d116 1
a116 1
is positive, the command:
d118 1
a118 1
viewsize #;
d121 1
a121 1
zero, the `viewsize' command is omitted from the output script. If it is
d124 2
a125 2
time in
.BR in.table .
d134 1
a134 1
to be animated.
d136 1
a136 1
.B \-a # # #
d142 2
a143 2
world axes. With
.B \-a,
d145 2
a146 2
with respect to the object's axes. With the
.B \-b
d150 3
a152 3
axes. The
.B \-b
option is particularly useful in conjunction with the
d154 2
a155 2
option, because it tells
.I anim_script
d159 1
a159 1
.B \-c # # #
d165 2
a166 2
of the object. All rotations will occur about this point. If
.B \-c
d169 2
a170 2
displacements from this point. If
.B \-d
d174 2
a175 2
axes, unless the
.B \-a
d179 2
a180 2
When the
.B \-v
d183 4
a186 4
changes somewhat. The
.B \-c
and
.B \-a
d188 2
a189 2
The
.B \-d
d192 1
a192 1
tripod with respect to the camera lens.  The translations and rotations
d195 2
a196 2
rigidly attached.  For example, the option
.B \-d 10 0 \-2
d198 1
a198 1
the
d202 2
a203 2
units below the camera's line of sight. The option
.B \-b -90 0 0
d213 2
a214 2
is "lmul", which means that matrices in the output script are
multiplied onto the
d224 1
a224 1
     rboth  - replace the current arc with the matrix and replace the
d229 1
a229 1
flexibility, and shouldn't be needed by most animators.
d232 3
a234 3
x-direction, the position of the center of the truck and its orientation at
each time should be in
.BR truck.table .
d240 1
a240 1
If the front of the model truck faces (for some reason)
d242 2
a243 2
between the x and y axes, a
.B \-b
d249 2
a250 2
To steer the truck automatically to face the direction of motion,
the
d261 2
a262 2
(700,800,2400). Then we select "rotation only" with
.B \-r
d264 1
a264 1
relationship between the steering wheels axes and the world with the
d266 4
a269 4
and
.B \-c
options. In
.B roll.table
d277 2
a278 2
(second) column of a file,
.BR turn.table ,
d290 2
a291 2
model using the
.B \-c
d306 2
a307 2
at each time, it's very simple. The
.B -v#
d321 2
a322 2
to the right, so that the camera faces its right side. Thus when the
virtual tripod is placed in the same position and orientation as the
d334 1
a334 1
	This software is Copyright (C) 1993-2005 by the United States
@


14.3
log
@update copyright to 2005
@
text
@d338 1
a338 1
mail to <CAD@@ARL.ARMY.MIL>.
@


14.2
log
@Copyright fix on man pages
@
text
@d334 2
a335 2
	This software is Copyright (C) 1993-2004 by the United States 
Government as represented by the U.S. Army Research Laboratory.
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d334 2
a335 2
	This software is Copyright (C) 1993-2004 by the United States Army
in all countries except the USA.  All rights reserved.
@


1.1
log
@Vast reorganization begins.  Sources moved from top-level directories into src/.
@
text
@@

