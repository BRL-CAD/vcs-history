head	14.12;
access;
symbols
	rel-7-10-4:14.12
	STABLE:14.12.0.2
	stable-branch:14.3
	rel-7-10-2:14.12
	rel-7-10-0:14.12
	rel-7-8-4:14.9
	rel-7-8-2:14.9
	rel-7-8-0:14.9
	trimnurbs-branch:14.9.0.2
	help:14.9
	temp_tag:14.7
	bobWinPort-20051223-freeze:14.4
	postmerge-20051223-bobWinPort:14.7
	premerge-20051223-bobWinPort:14.7
	rel-7-6-6:14.7
	rel-7-6-4:14.7
	rel-7-6-2:14.4
	rel-7-6-branch:14.4.0.6
	rel-7-6-0:14.4
	rel-7-4-2:14.4
	rel-7-4-branch:14.4.0.4
	bobWinPort:14.4.0.2
	rel-7-4-0:14.4
	rel-7-2-6:14.4
	rel-7-2-4:14.4
	rel-7-2-2:14.3
	rel-7-2-0:14.3
	rel-7-0-4:14.2
	rel-7-0-2:14.2
	rel-7-0-1:14.2
	opensource-post:14.2
	opensource-pre:1.1
	rel-7-0-branch:1.1.0.2
	rel-7-0:1.1;
locks; strict;
comment	@.\" @;


14.12
date	2007.01.27.01.41.31;	author brlcad;	state Exp;
branches;
next	14.11;

14.11
date	2007.01.23.01.13.23;	author brlcad;	state Exp;
branches;
next	14.10;

14.10
date	2007.01.20.14.36.42;	author brlcad;	state Exp;
branches;
next	14.9;

14.9
date	2006.01.18.06.46.12;	author brlcad;	state Exp;
branches;
next	14.8;

14.8
date	2006.01.17.05.54.47;	author brlcad;	state Exp;
branches;
next	14.7;

14.7
date	2005.10.23.04.44.28;	author brlcad;	state Exp;
branches;
next	14.6;

14.6
date	2005.09.09.04.17.38;	author brlcad;	state Exp;
branches;
next	14.5;

14.5
date	2005.09.09.03.29.34;	author brlcad;	state Exp;
branches;
next	14.4;

14.4
date	2005.05.02.01.58.25;	author brlcad;	state Exp;
branches
	14.4.6.1;
next	14.3;

14.3
date	2005.01.30.20.30.14;	author brlcad;	state Exp;
branches;
next	14.2;

14.2
date	2004.12.21.07.51.12;	author butler;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.12;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.20.15.18.38;	author morrison;	state Exp;
branches;
next	;

14.4.6.1
date	2005.11.13.13.46.12;	author brlcad;	state Exp;
branches;
next	;


desc
@@


14.12
log
@ws. lots and lots of ws.  see sh/ws.sh for details (cases 'abcdeg').
@
text
@.TH ANIM_ORIENT 1 BRL-CAD
.\"                  A N I M _ O R I E N T . 1
.\" BRL-CAD
.\"
.\" Copyright (c) 1993-2007 United States Government as represented by
.\" the U.S. Army Research Laboratory.
.\"
.\" Redistribution and use in source (Docbook format) and 'compiled'
.\" forms (PDF, PostScript, HTML, RTF, etc), with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\"
.\" 1. Redistributions of source code (Docbook format) must retain the
.\" above copyright notice, this list of conditions and the following
.\" disclaimer.
.\"
.\" 2. Redistributions in compiled form (transformed to other DTDs,
.\" converted to PDF, PostScript, HTML, RTF, and other formats) must
.\" reproduce the above copyright notice, this list of conditions and
.\" the following disclaimer in the documentation and/or other
.\" materials provided with the distribution.
.\"
.\" 3. The name of the author may not be used to endorse or promote
.\" products derived from this documentation without specific prior
.\" written permission.
.\"
.\" THIS DOCUMENTATION IS PROVIDED BY THE AUTHOR AS IS'' AND ANY
.\" EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
.\" PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
.\" ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
.\" CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT
.\" OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
.\" BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
.\" LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
.\" (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
.\" USE OF THIS DOCUMENTATION, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\".\".\"
.SH NAME
anim_orient - convert between orientation formats
.SH SYNOPSIS
.B anim_orient
.B [q|y|a|z|m][vri]
.B [q|y|a|z|m][vriu]
.B < in.table
.B > out.table
.SH DESCRIPTION
.I Anim_orient
is a filter which translates a table of orientation
information from one format to another. The method used is to convert
the input format to a matrix, then convert the matrix to the desired
output format. The input format is specified in the first argument, and
the output format is specified in the second.
The orientation formats
must be one of the following:
.B q
(quaternion),
.B y
(yaw,pitch, and roll),
.B a
(azimuth, elevation, and twist),
.B z
(x-y-z angles), or
.B m
(rotation matrix).
In addition, the output format may be modified by the
.B u
option, and the input and output formats may be modified by the
.BR r ,
.BR i ,
and
.B v
options. The
.B r
option specifies that angles are read or written in radians, rather
than degrees. The
.BR i , v ,
and
.B u
options are explained below.
.PP
To clearly understand the operation of anim_orient, it is important to
examine the difference between orientation and rotation.
The matrices, quaternions, and angles
used by anim_orient specify rotations. These are transformations
which, when applied to an object, preserve its shape but change its
orientation with respect to a fixed set of axes. Given the initial
orientation of an object, a rotation defines the final orientation, but
different initial orientations will yield different final orientations.
In order
to represent orientations with rotations, we
must define a default initial orientation for the object.
Then a given matrix, quaternion, or set of angles represents the orientation
resulting from applying the rotation to the initial object orientation.
.PP
If no modifying codes are specified, anim_orient assumes that the
default orientation of the object in question faces the positive
x-direction, with the world y-axis pointing to the object's left and the
z-axis pointing up. This is the orientation in which many
.I brlcad
objects
are modeled, and the default assumed by other animation routines such as
anim_script. If the
.B v
code is specified, then the default orientation
is taken to be facing the negative z-direction, with the world x-axis
pointing to the object's right and the y-axis pointing up. This is the
default orientation of the eye in
.I mged
and
.IR rt .
Some common uses of the v
option are demonstrated in the examples section.
.PP
The input and output format codes are:
.TP
.BR q :
Quaternions, in the order x,y,z,w. This is the default input and
output format. The output will
always be unit quaternions. For a unit quaternion, the
xyz-vector represents an axis of rotation and and w represents
cos(omega/2), where
omega is the angle to be rotated about the given axis.
.TP
.BR z :
x-y-z angles, in the order x, y, z. They represent a rotation
of z degrees around the z-axis, followed by y degrees around the y-axis,
followed by x degrees around the x-axis. If the code
.B zr
is used
then the angles will be read or written in radians
rather than degrees.
.TP
.BR y :
yaw-pitch-roll format, in that order. They represent
a rotation of +roll degrees about the x-axis, -pitch degrees about
the y-axis, followed by +yaw degrees about the z-axis. If the code
.B yr
is used, angles are in radians rather than degrees.
.TP
.BR a :
azimuth, elevation, twist, in that order. They represent a rotation of
-twist degrees about the x-axis, +elevation degrees about the y-axis,
and +azimuth + 180 degrees about the z-axis. Alternatively, they can
be thought of as a 180 degree rotation about the z-axis followed by a
rotation of +twist degrees about the x-axis, -elevation degrees about
the y-axis, and +azimuth degrees about the z-axis.
.TP
.BR m :
pre-multiplication rotation matrix. Sixteen
numbers form a 4x4 matrix, although only the nine elements in the upper
left corner are actually used. This is the format used at the interior of
the conversion routine. It is a transformation from initial orientation to
a new orientation.
.PP
The input and ouput modification codes are:
.TP
.B i
This code is used in conjunction with any of the format codes to represent
the inverse transformation. Under the
.B i
code, a matrix, quaternion, or
set of angles represents the inverse of the rotation that it normally
represents.
For example, normally, the orientation
corresponding to a given matrix is the orientation that the default
object ends up in after the matrix is applied to it. With the
.B i
code,
a given matrix represents the orientation an object should be placed
in so that the applying the matrix puts it back in the default
orientation.

One common use of the
.B i
option is for handling "Viewrot" matrices used
by
.I mged
and
.IR rt .
The viewrot matrix is a model-to-view matrix, which is
the transpose (inverse) of the matrix which would conceptually be
applied to an eye object to put it in the desired place in the model.
.TP
.B v
When this option is specified, the corresponding rotation is considered
applied to the default view orientation, rather than the default object
orientation, as explained above.
.TP
.B u
This option forces the output orientation to be upright, or "right-side
up", where the z-axis is the up direction. In terms of yaw, pitch, and
roll, this means that the roll is forced to zero. Because this is a
one-way operation, it can only be applied to the output orientation, not
the input.

.SH EXAMPLES
.sp
Normalize a table of quaternions to unit magnitude. (quaternions are the
default format).
.sp
	anim_orient < in.table > out.table
.sp
change xyz angles to a rotation matrix
.sp
	anim_orient z m < in.table > out.table
.sp
change azimuth,elevation, and twist to a matrix suitable for the
.I rt
viewrot command
.sp
	anim_orient a miv < in.table > out.table
.sp
transpose matrices
.sp
	anim_orient m mi < in.table > out.table
.sp
change radian xyz angles to yaw-pitch-roll in degrees
.sp
	anim_orient zr y < in.table > out.table
.sp
given a quaternion being applied to an object facing the x-axis,
find the quaternion needed
to turn the virtual camera in the same direction using
.IR rt 's
orientation command
.sp
	anim_orient q qv < in.table > out.table
.sp
Given the yaw, pitch, and roll of an object, find the yaw, pitch, and
roll which would bring it back to the default position.
.sp
	anim_orient y yi < in.table > out.table
.sp
Force a table of view quaternions to represent "right-side up"
orientations.
.sp
	anim_orient qv qvu < in.table > out.table
.SH BUGS
There are built-in trouble spots which occur, in ypr, xyz, or aet
formats, when the pitch, y-rotation, or elevation is an odd multiple of 90
degrees, because at this point the other two angles become
indistinguishable. The program makes the arbitrary assumption that the
roll is zero or that the x-rotation is zero, depending on the format,
and gives a warning to that effect on standard error.
.SH AUTHOR
Carl J. Nuzman
.SH COPYRIGHT
	This software is Copyright (c) 1993-2007 by the United States
Government as represented by U.S. Army Research Laboratory.
.SH "BUG REPORTS"
Reports of bugs or problems should be submitted via electronic
mail to <devs@@brlcad.org>.
@


14.11
log
@Sweeping license updates.  Documentation is fully relicensed to the BSD Documentation License (a minor variant of the FreeBSD Documentation License and BSD License).  All GPL code (mostly application code) is converted to the LGPL and now also specifically declares version 2.1, revoking the blank check to the FSF.  The intent of these sweeping changes are to simplify the licensing terms and increase overall flexibility of use, both externally (to users for their purposes) and internally (to allow application code to be migrated to libraries without creating GPL libraries).  As a collective work, BRL-CAD is now LGPL.
@
text
@d12 1
a12 1
.\" 
d16 1
a16 1
.\" 
d22 1
a22 1
.\" 
d26 1
a26 1
.\" 
a255 1

@


14.10
log
@update copyright to 2007
@
text
@d8 31
a38 15
.\" This document is made available under the terms of the GNU Free
.\" Documentation License or, at your option, under the terms of the
.\" GNU General Public License as published by the Free Software
.\" Foundation.  Permission is granted to copy, distribute and/or
.\" modify this document under the terms of the GNU Free Documentation
.\" License, Version 1.2 or any later version published by the Free
.\" Software Foundation; with no Invariant Sections, no Front-Cover
.\" Texts, and no Back-Cover Texts.  Permission is also granted to
.\" redistribute this document under the terms of the GNU General
.\" Public License; either version 2 of the License, or (at your
.\" option) any later version.
.\"
.\" You should have received a copy of the GNU Free Documentation
.\" License and/or the GNU General Public License along with this
.\" document; see the file named COPYING for more information.
@


14.9
log
@update copyright to 2006
@
text
@d5 1
a5 1
.\" Copyright (c) 1993-2006 United States Government as represented by
d235 1
a235 1
	This software is Copyright (c) 1993-2006 by the United States
@


14.8
log
@fix the manpage commments via s/\.\/"/.\\\"/g
@
text
@d5 1
a5 1
.\" Copyright (c) 1993-2005 United States Government as represented by
d235 1
a235 1
	This software is Copyright (C) 1993-2005 by the United States
@


14.7
log
@trailing ws
@
text
@d2 23
a24 23
./"                  A N I M _ O R I E N T . 1
./" BRL-CAD
./"
./" Copyright (c) 1993-2005 United States Government as represented by
./" the U.S. Army Research Laboratory.
./"
./" This document is made available under the terms of the GNU Free
./" Documentation License or, at your option, under the terms of the
./" GNU General Public License as published by the Free Software
./" Foundation.  Permission is granted to copy, distribute and/or
./" modify this document under the terms of the GNU Free Documentation
./" License, Version 1.2 or any later version published by the Free
./" Software Foundation; with no Invariant Sections, no Front-Cover
./" Texts, and no Back-Cover Texts.  Permission is also granted to
./" redistribute this document under the terms of the GNU General
./" Public License; either version 2 of the License, or (at your
./" option) any later version.
./"
./" You should have received a copy of the GNU Free Documentation
./" License and/or the GNU General Public License along with this
./" document; see the file named COPYING for more information.
./"
./"./"./"
@


14.6
log
@BRL-CAD not BRL/CAD
@
text
@d28 1
a28 1
.B anim_orient 
d31 1
a31 1
.B < in.table 
d39 1
a39 1
the output format is specified in the second. 
d41 3
a43 3
must be one of the following: 
.B q 
(quaternion), 
d45 1
a45 1
(yaw,pitch, and roll), 
d47 2
a48 2
(azimuth, elevation, and twist), 
.B z 
d50 1
a50 1
.B m 
d53 2
a54 2
.B u 
option, and the input and output formats may be modified by the 
d59 2
a60 2
options. The 
.B r 
d64 1
a64 1
and 
d75 1
a75 1
different initial orientations will yield different final orientations. 
d79 1
a79 1
Then a given matrix, quaternion, or set of angles represents the orientation 
d85 2
a86 2
z-axis pointing up. This is the orientation in which many 
.I brlcad 
d89 3
a91 3
anim_script. If the 
.B v 
code is specified, then the default orientation  
d94 4
a97 4
default orientation of the eye in 
.I mged 
and 
.IR rt . 
d103 1
a103 1
.BR q : 
d107 1
a107 1
xyz-vector represents an axis of rotation and and w represents 
d111 1
a111 1
.BR z : 
d114 2
a115 2
followed by x degrees around the x-axis. If the code 
.B zr 
d120 1
a120 1
.BR y : 
d124 2
a125 2
.B yr 
is used, angles are in radians rather than degrees. 
d135 1
a135 1
.BR m : 
d139 1
a139 1
the conversion routine. It is a transformation from initial orientation to 
d146 2
a147 2
the inverse transformation. Under the 
.B i 
d153 2
a154 2
object ends up in after the matrix is applied to it. With the 
.B i 
d158 1
a158 1
orientation. 
d160 2
a161 2
One common use of the 
.B i 
d163 4
a166 4
by 
.I mged 
and 
.IR rt . 
d179 1
a179 1
roll, this means that the roll is forced to zero. Because this is a 
d188 1
a188 1
	anim_orient < in.table > out.table 
d194 1
a194 1
change azimuth,elevation, and twist to a matrix suitable for the 
d208 1
a208 1
given a quaternion being applied to an object facing the x-axis, 
d210 2
a211 2
to turn the virtual camera in the same direction using 
.IR rt 's 
d223 1
a223 1
.sp 
d235 1
a235 1
	This software is Copyright (C) 1993-2005 by the United States 
@


14.5
log
@add the standard documentation gfdl/gpl license header and copyright/distribution notice
@
text
@d1 1
a1 1
.TH ANIM_ORIENT 1 BRL/CAD
@


14.4
log
@replace the old cad e-mail with devs at brlcad dot org since the dot mil forward is no more.
@
text
@d2 23
@


14.4.6.1
log
@merge changes from HEAD aka rel-7-6-4 to the rel-7-6-branch just in case someone peeks a gander or tries to continue/build the branch
@
text
@d1 1
a1 24
.TH ANIM_ORIENT 1 BRL-CAD
./"                  A N I M _ O R I E N T . 1
./" BRL-CAD
./"
./" Copyright (c) 1993-2005 United States Government as represented by
./" the U.S. Army Research Laboratory.
./"
./" This document is made available under the terms of the GNU Free
./" Documentation License or, at your option, under the terms of the
./" GNU General Public License as published by the Free Software
./" Foundation.  Permission is granted to copy, distribute and/or
./" modify this document under the terms of the GNU Free Documentation
./" License, Version 1.2 or any later version published by the Free
./" Software Foundation; with no Invariant Sections, no Front-Cover
./" Texts, and no Back-Cover Texts.  Permission is also granted to
./" redistribute this document under the terms of the GNU General
./" Public License; either version 2 of the License, or (at your
./" option) any later version.
./"
./" You should have received a copy of the GNU Free Documentation
./" License and/or the GNU General Public License along with this
./" document; see the file named COPYING for more information.
./"
./"./"./"
d5 1
a5 1
.B anim_orient
d8 1
a8 1
.B < in.table
d16 1
a16 1
the output format is specified in the second.
d18 3
a20 3
must be one of the following:
.B q
(quaternion),
d22 1
a22 1
(yaw,pitch, and roll),
d24 2
a25 2
(azimuth, elevation, and twist),
.B z
d27 1
a27 1
.B m
d30 2
a31 2
.B u
option, and the input and output formats may be modified by the
d36 2
a37 2
options. The
.B r
d41 1
a41 1
and
d52 1
a52 1
different initial orientations will yield different final orientations.
d56 1
a56 1
Then a given matrix, quaternion, or set of angles represents the orientation
d62 2
a63 2
z-axis pointing up. This is the orientation in which many
.I brlcad
d66 3
a68 3
anim_script. If the
.B v
code is specified, then the default orientation
d71 4
a74 4
default orientation of the eye in
.I mged
and
.IR rt .
d80 1
a80 1
.BR q :
d84 1
a84 1
xyz-vector represents an axis of rotation and and w represents
d88 1
a88 1
.BR z :
d91 2
a92 2
followed by x degrees around the x-axis. If the code
.B zr
d97 1
a97 1
.BR y :
d101 2
a102 2
.B yr
is used, angles are in radians rather than degrees.
d112 1
a112 1
.BR m :
d116 1
a116 1
the conversion routine. It is a transformation from initial orientation to
d123 2
a124 2
the inverse transformation. Under the
.B i
d130 2
a131 2
object ends up in after the matrix is applied to it. With the
.B i
d135 1
a135 1
orientation.
d137 2
a138 2
One common use of the
.B i
d140 4
a143 4
by
.I mged
and
.IR rt .
d156 1
a156 1
roll, this means that the roll is forced to zero. Because this is a
d165 1
a165 1
	anim_orient < in.table > out.table
d171 1
a171 1
change azimuth,elevation, and twist to a matrix suitable for the
d185 1
a185 1
given a quaternion being applied to an object facing the x-axis,
d187 2
a188 2
to turn the virtual camera in the same direction using
.IR rt 's
d200 1
a200 1
.sp
d212 1
a212 1
	This software is Copyright (C) 1993-2005 by the United States
@


14.3
log
@update copyright to 2005
@
text
@d216 1
a216 1
mail to <CAD@@ARL.ARMY.MIL>.
@


14.2
log
@Copyright fix on man pages
@
text
@d212 2
a213 2
	This software is Copyright (C) 1993-2004 by the United States 
Government as represented by the U.S. Army Research Laboratory.
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d212 2
a213 2
	This software is Copyright (C) 1993-2004 by the United States Army
in all countries except the USA.  All rights reserved.
@


1.1
log
@Vast reorganization begins.  Sources moved from top-level directories into src/.
@
text
@@

