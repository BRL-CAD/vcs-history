head	14.15;
access;
symbols
	rel-7-10-4:14.13
	STABLE:14.13.0.2
	stable-branch:14.4
	rel-7-10-2:14.13
	rel-7-10-0:14.12
	rel-7-8-4:14.10
	rel-7-8-2:14.10
	rel-7-8-0:14.10
	trimnurbs-branch:14.10.0.2
	help:14.10
	temp_tag:14.8
	bobWinPort-20051223-freeze:14.4
	postmerge-20051223-bobWinPort:14.8
	premerge-20051223-bobWinPort:14.8
	rel-7-6-6:14.8
	rel-7-6-4:14.8
	rel-7-6-2:14.5
	rel-7-6-branch:14.5.0.2
	rel-7-6-0:14.5
	rel-7-4-2:14.4
	rel-7-4-branch:14.4.0.4
	bobWinPort:14.4.0.2
	rel-7-4-0:14.4
	rel-7-2-6:14.4
	rel-7-2-4:14.4
	rel-7-2-2:14.4
	rel-7-2-0:14.4
	rel-7-0-4:14.3
	rel-7-0-2:14.3
	rel-7-0-1:14.3
	opensource-post:14.3
	opensource-pre:1.4
	rel-7-0-branch:1.4.0.2
	rel-7-0:1.4;
locks; strict;
comment	@ * @;


14.15
date	2007.11.21.20.49.07;	author erikgreenwald;	state Exp;
branches;
next	14.14;

14.14
date	2007.11.21.19.09.24;	author erikgreenwald;	state Exp;
branches;
next	14.13;

14.13
date	2007.07.26.01.13.53;	author brlcad;	state Exp;
branches;
next	14.12;

14.12
date	2007.01.23.01.13.27;	author brlcad;	state Exp;
branches;
next	14.11;

14.11
date	2007.01.20.14.36.48;	author brlcad;	state Exp;
branches;
next	14.10;

14.10
date	2006.02.07.06.16.56;	author brlcad;	state Exp;
branches;
next	14.9;

14.9
date	2006.01.18.06.46.15;	author brlcad;	state Exp;
branches;
next	14.8;

14.8
date	2005.10.23.04.44.30;	author brlcad;	state Exp;
branches;
next	14.7;

14.7
date	2005.09.21.19.00.27;	author brlcad;	state Exp;
branches;
next	14.6;

14.6
date	2005.09.21.17.17.18;	author brlcad;	state Exp;
branches;
next	14.5;

14.5
date	2005.08.21.13.51.43;	author brlcad;	state Exp;
branches
	14.5.2.1;
next	14.4;

14.4
date	2005.01.30.20.30.21;	author brlcad;	state Exp;
branches;
next	14.3;

14.3
date	2004.12.21.06.38.19;	author morrison;	state Exp;
branches;
next	14.2;

14.2
date	2004.12.18.06.09.12;	author morrison;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.13;	author morrison;	state Exp;
branches;
next	1.4;

1.4
date	2004.08.02.23.01.47;	author morrison;	state Exp;
branches;
next	1.3;

1.3
date	2004.06.09.17.56.22;	author erikg;	state Exp;
branches;
next	1.2;

1.2
date	2004.06.08.22.04.12;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.20.15.19.02;	author morrison;	state Exp;
branches;
next	;

14.5.2.1
date	2005.11.13.13.46.13;	author brlcad;	state Exp;
branches;
next	;


desc
@@


14.15
log
@pass bu_exit a NULL instead of an empty string
@
text
@/*                        F B L I N E . C
 * BRL-CAD
 *
 * Copyright (c) 1988-2007 United States Government as represented by
 * the U.S. Army Research Laboratory.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * version 2.1 as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this file; see the file named COPYING for more
 * information.
 *
 */
/** @@file fbline.c
 *
 *  Draw a single 2-D line on the framebuffer, in a given color
 *
 *  Author -
 *	Michael John Muuss
 *
 * Acknowledgment:
 * 	Based rather heavily on plot-fb.c
 *
 */
#ifndef lint
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/fb/fbline.c,v 14.14 2007/11/21 19:09:24 erikgreenwald Exp $ (BRL)";
#endif

#include "common.h"

#include <stdlib.h>
#ifdef HAVE_UNISTD_H
#  include <unistd.h>
#endif
#include <stdio.h>
#include <ctype.h>

#include "machine.h"
#include "bu.h"
#include "fb.h"


typedef int	bool;			/* boolean data type */
#define false	0
#define true	1

struct  coords {
	short		x;
	short		y;
}; 		/* Cartesian coordinates */

struct stroke {
	struct stroke	*next;		/* next in list, or NULL */
	struct coords	pixel;		/* starting scan, nib */
	short		xsign;		/* 0 or +1 */
	short		ysign;		/* -1, 0, or +1 */
	bool		ymajor; 	/* true iff Y is major dir. */
#undef major
#undef minor
	short		major;		/* major dir delta (nonneg) */
	short		minor;		/* minor dir delta (nonneg) */
	short		e;		/* DDA error accumulator */
	short		de;		/* increment for `e' */
}; 		/* rasterization descriptor */

static char	*framebuffer = NULL;
FBIO		*fbp;			/* Current framebuffer */

static int	screen_width = 512;	/* default input width */
static int	screen_height = 512;	/* default input height */
static int	clear = 0;

RGBpixel	pixcolor = { 255, 255, 255 };

static int	fbx1, fby1, fbx2, fby2;

void		edgelimit(register struct coords *ppos);
void		BuildStr(struct coords *pt1, struct coords *pt2);
void		Raster(register struct stroke *vp);

static char usage[] = "\
Usage: fbline [-h -c ] [-F framebuffer]\n\
	[-W screen_width] [-N screen_height]\n\
	[-r red] [-g green] [-b blue] x1 y1 x2 y2\n";

/*
 *			G E T_ A R G S
 */
int
get_args(int argc, register char **argv)
{

	register int c;

	while ( (c = bu_getopt( argc, argv, "hW:w:N:n:cF:r:g:b:" )) != EOF )  {
		switch( c )  {
		case 'h':
			/* high-res */
			screen_height = screen_width = 1024;
			break;
		case 'W':
		case 'w':
			screen_width = atoi(bu_optarg);
			break;
		case 'N':
		case 'n':
			screen_height = atoi(bu_optarg);
			break;
		case 'c':
			clear = 1;
			break;
		case 'F':
			framebuffer = bu_optarg;
			break;
		case 'r':
			pixcolor[RED] = atoi( bu_optarg );
			break;
		case 'g':
			pixcolor[GRN] = atoi( bu_optarg );
			break;
		case 'b':
			pixcolor[BLU] = atoi( bu_optarg );
			break;
		default:		/* '?' */
			return(0);
		}
	}

	if( bu_optind+4 > argc )
		return(0);		/* BAD */
	fbx1 = atoi( argv[bu_optind++]);
	fby1 = atoi( argv[bu_optind++]);
	fbx2 = atoi( argv[bu_optind++]);
	fby2 = atoi( argv[bu_optind++]);

	if ( argc > bu_optind )
		(void)fprintf( stderr, "fbline: excess argument(s) ignored\n" );

	return(1);		/* OK */
}

/*
 *			M A I N
 */
int
main(int argc, char **argv)
{
	struct coords	start, end;

	if ( !get_args( argc, argv ) ) {
		fputs( usage, stderr);
		bu_exit(1, NULL);
	}

	if( (fbp = fb_open( framebuffer, screen_width, screen_height )) == NULL )
		bu_exit(12, NULL);

	if( clear ) {
		fb_clear( fbp, PIXEL_NULL);
	}
	screen_width = fb_getwidth(fbp);
	screen_height = fb_getheight(fbp);

	start.x = fbx1;
	start.y = fby1;
	end.x = fbx2;
	end.y = fby2;
	edgelimit( &start );
	edgelimit( &end );
	BuildStr( &start, &end );	/* pixels */

	fb_close( fbp );
	bu_exit(0, NULL);
}

/*
 *			E D G E L I M I T
 *
 *	Limit generated positions to edges of screen
 *	Really should clip to screen, instead.
 */
void
edgelimit(register struct coords *ppos)
{
	if( ppos->x >= screen_width )
		ppos->x = screen_width -1;

	if( ppos->y >= screen_height )
		ppos->y = screen_height -1;
}

/*
 *			B U I L D S T R
 *
 *  set up DDA parameters
 */
void
BuildStr(struct coords *pt1, struct coords *pt2)
{
	struct stroke cur_stroke;
	register struct stroke *vp = &cur_stroke;

	/* arrange for pt1 to have the smaller Y-coordinate: */
	if ( pt1->y > pt2->y )  {
		register struct coords *temp;	/* temporary for swap */

		temp = pt1;		/* swap pointers */
		pt1 = pt2;
		pt2 = temp;
	}

	/* set up DDA parameters for stroke */
	vp->pixel = *pt1;		/* initial pixel */
	vp->major = pt2->y - vp->pixel.y;	/* always nonnegative */
	vp->ysign = vp->major ? 1 : 0;
	vp->minor = pt2->x - vp->pixel.x;
	if ( (vp->xsign = vp->minor ? (vp->minor > 0 ? 1 : -1) : 0) < 0 )
		vp->minor = -vp->minor;

	/* if Y is not really major, correct the assignments */
	if ( !(vp->ymajor = vp->minor <= vp->major) )  {
		register short	temp;	/* temporary for swap */

		temp = vp->minor;
		vp->minor = vp->major;
		vp->major = temp;
	}

	vp->e = vp->major / 2 - vp->minor;	/* initial DDA error */
	vp->de = vp->major - vp->minor;

	Raster( vp );
}

/*
 *			R A S T E R
 *
 *	Raster - rasterize stroke.
 *
 * Method:
 *	Modified Bresenham algorithm.  Guaranteed to mark a dot for
 *	a zero-length stroke.
 */
void
Raster(register struct stroke *vp)
{
	register short	dy;		/* raster within active band */

	/*
	 *  Write the color of this vector on all pixels.
	 */
	for ( dy = vp->pixel.y; dy < screen_height; )  {

		/* set the appropriate pixel in the buffer */
		fb_write( fbp, vp->pixel.x, dy, pixcolor, 1 );

		if ( vp->major-- == 0 )
			return;		/* Done */

		if ( vp->e < 0 )  {
			/* advance major & minor */
			dy += vp->ysign;
			vp->pixel.x += vp->xsign;
			vp->e += vp->de;
		}  else	{
			/* advance major only */
			if ( vp->ymajor )	/* Y is major dir */
				++dy;
			else			/* X is major dir */
				vp->pixel.x += vp->xsign;
			vp->e -= vp->minor;
		}
	}
	fprintf(stderr,"line left screen?\n");
}

/*
 * Local Variables:
 * mode: C
 * tab-width: 8
 * c-basic-offset: 4
 * indent-tabs-mode: t
 * End:
 * ex: shiftwidth=4 tabstop=8
 */
@


14.14
log
@exit->bu_exit where applicable
@
text
@d33 1
a33 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/fb/fbline.c,v 14.13 2007/07/26 01:13:53 brlcad Exp $ (BRL)";
d159 1
a159 1
		bu_exit(1, "");
d163 1
a163 1
		bu_exit(12, "");
d180 1
a180 1
	bu_exit(0, "");
@


14.13
log
@remove ephemeral data like phone numbers and addresses, including the misleading 'source' statements on code that is continually evolving and receiving contributions from many many sources
@
text
@d33 1
a33 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/fb/fbline.c,v 14.12 2007/01/23 01:13:27 brlcad Exp $ (BRL)";
d159 1
a159 1
		exit(1);
d163 1
a163 1
		exit(12);
d180 1
a180 1
	exit(0);
@


14.12
log
@Sweeping license updates.  Documentation is fully relicensed to the BSD Documentation License (a minor variant of the FreeBSD Documentation License and BSD License).  All GPL code (mostly application code) is converted to the LGPL and now also specifically declares version 2.1, revoking the blank check to the FSF.  The intent of these sweeping changes are to simplify the licensing terms and increase overall flexibility of use, both externally (to users for their purposes) and internally (to allow application code to be migrated to libraries without creating GPL libraries).  As a collective work, BRL-CAD is now LGPL.
@
text
@a30 5
 *  Source -
 *	SECAD/VLD Computing Consortium, Bldg 394
 *	The U. S. Army Ballistic Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5066
 *
d33 1
a33 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/fb/fbline.c,v 14.11 2007/01/20 14:36:48 brlcad Exp $ (BRL)";
@


14.11
log
@update copyright to 2007
@
text
@d8 2
a9 3
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation; either version 2 of the
 * License, or (at your option) any later version.
d14 1
a14 1
 * General Public License for more details.
d16 2
a17 2
 * You should have received a copy of the GNU General Public License
 * along with this file; see the file named COPYING for more
d38 1
a38 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/fb/fbline.c,v 14.10 2006/02/07 06:16:56 brlcad Exp $ (BRL)";
@


14.10
log
@avoid 'y1' since AIX math.h header defines a y1()
@
text
@d4 1
a4 1
 * Copyright (c) 1988-2006 United States Government as represented by
d39 1
a39 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/fb/fbline.c,v 14.9 2006/01/18 06:46:15 brlcad Exp $ (BRL)";
@


14.9
log
@update copyright to 2006
@
text
@d39 1
a39 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/fb/fbline.c,v 14.8 2005/10/23 04:44:30 brlcad Exp $ (BRL)";
d88 1
a88 1
static int	x1, y1, x2, y2;
d144 4
a147 4
	x1 = atoi( argv[bu_optind++]);
	y1 = atoi( argv[bu_optind++]);
	x2 = atoi( argv[bu_optind++]);
	y2 = atoi( argv[bu_optind++]);
d177 4
a180 4
	start.x = x1;
	start.y = y1;
	end.x = x2;
	end.y = y2;
@


14.8
log
@trailing ws
@
text
@d4 1
a4 1
 * Copyright (C) 1988-2005 United States Government as represented by
d39 1
a39 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/fb/fbline.c,v 14.7 2005/09/21 19:00:27 brlcad Exp $ (BRL)";
@


14.7
log
@needs bu.h for bu_getopt
@
text
@d36 1
a36 1
 *  
d39 1
a39 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/fb/fbline.c,v 14.6 2005/09/21 17:17:18 brlcad Exp $ (BRL)";
d251 1
a251 1
 *	Raster - rasterize stroke. 
@


14.6
log
@use bu_optarg, bu_optind and bu_getopt
@
text
@d39 1
a39 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/fb/fbline.c,v 14.5 2005/08/21 13:51:43 brlcad Exp $ (BRL)";
d52 1
@


14.5
log
@add missing headers
@
text
@d39 1
a39 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/fb/fbline.c,v 14.4 2005/01/30 20:30:21 brlcad Exp $ (BRL)";
d107 1
a107 1
	while ( (c = getopt( argc, argv, "hW:w:N:n:cF:r:g:b:" )) != EOF )  {
d115 1
a115 1
			screen_width = atoi(optarg);
d119 1
a119 1
			screen_height = atoi(optarg);
d125 1
a125 1
			framebuffer = optarg;
d128 1
a128 1
			pixcolor[RED] = atoi( optarg );
d131 1
a131 1
			pixcolor[GRN] = atoi( optarg );
d134 1
a134 1
			pixcolor[BLU] = atoi( optarg );
d141 1
a141 1
	if( optind+4 > argc )
d143 4
a146 4
	x1 = atoi( argv[optind++]);
	y1 = atoi( argv[optind++]);
	x2 = atoi( argv[optind++]);
	y2 = atoi( argv[optind++]);
d148 1
a148 1
	if ( argc > optind )
@


14.5.2.1
log
@merge changes from HEAD aka rel-7-6-4 to the rel-7-6-branch just in case someone peeks a gander or tries to continue/build the branch
@
text
@d36 1
a36 1
 *
d39 1
a39 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
a51 1
#include "bu.h"
d107 1
a107 1
	while ( (c = bu_getopt( argc, argv, "hW:w:N:n:cF:r:g:b:" )) != EOF )  {
d115 1
a115 1
			screen_width = atoi(bu_optarg);
d119 1
a119 1
			screen_height = atoi(bu_optarg);
d125 1
a125 1
			framebuffer = bu_optarg;
d128 1
a128 1
			pixcolor[RED] = atoi( bu_optarg );
d131 1
a131 1
			pixcolor[GRN] = atoi( bu_optarg );
d134 1
a134 1
			pixcolor[BLU] = atoi( bu_optarg );
d141 1
a141 1
	if( bu_optind+4 > argc )
d143 4
a146 4
	x1 = atoi( argv[bu_optind++]);
	y1 = atoi( argv[bu_optind++]);
	x2 = atoi( argv[bu_optind++]);
	y2 = atoi( argv[bu_optind++]);
d148 1
a148 1
	if ( argc > bu_optind )
d250 1
a250 1
 *	Raster - rasterize stroke.
@


14.4
log
@update copyright to 2005
@
text
@d39 1
a39 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/fb/fbline.c,v 14.3 2004/12/21 06:38:19 morrison Exp $ (BRL)";
d44 1
d46 1
a46 1
# include <unistd.h>
a47 1
                                                                                                                                                                            
d50 1
d54 1
@


14.3
log
@remove the old copyright notice section
@
text
@d4 1
a4 1
 * Copyright (c) 1988-2004 United States Government as represented by
d39 1
a39 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/fb/fbline.c,v 14.2 2004/12/18 06:09:12 morrison Exp $ (BRL)";
@


14.2
log
@assign copyright and GPL license
@
text
@a36 3
 *  Copyright Notice -
 *	This software is Copyright (C) 1988-2004 by the United States Army.
 *	All rights reserved.
d39 1
a39 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/fb/fbline.c,v 14.1 2004/11/16 19:42:13 morrison Exp $ (BRL)";
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d1 22
a22 2
/*
 *			F B L I N E . C
d42 1
a42 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/fb/fbline.c,v 1.4 2004/08/02 23:01:47 morrison Exp $ (BRL)";
@


1.4
log
@replace the wrapped config.h block with common.h
@
text
@d22 1
a22 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/fb/fbline.c,v 1.3 2004/06/09 17:56:22 erikg Exp $ (BRL)";
d269 10
@


1.3
log
@fix missing header issues
@
text
@d22 1
a22 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/fb/fbline.c,v 1.2 2004/06/08 22:04:12 morrison Exp $ (BRL)";
d25 1
a25 3
#ifdef HAVE_CONFIG_H
# include "config.h"
#endif
@


1.2
log
@obliterate externs.h
@
text
@d22 1
a22 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
d29 4
a32 2


@


1.1
log
@Vast reorganization begins.  Sources moved from top-level directories into src/.
@
text
@d22 1
a22 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/fb/fbline.c,v 11.8 2004/05/10 15:30:42 erikg Exp $ (BRL)";
a33 1
#include "externs.h"			/* For getopt() */
@

