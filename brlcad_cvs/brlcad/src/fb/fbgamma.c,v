head	14.15;
access;
symbols
	rel-7-10-4:14.13
	STABLE:14.13.0.2
	stable-branch:14.4
	rel-7-10-2:14.13
	rel-7-10-0:14.12
	rel-7-8-4:14.9
	rel-7-8-2:14.9
	rel-7-8-0:14.9
	trimnurbs-branch:14.9.0.2
	help:14.9
	temp_tag:14.7
	bobWinPort-20051223-freeze:14.4
	postmerge-20051223-bobWinPort:14.7
	premerge-20051223-bobWinPort:14.7
	rel-7-6-6:14.7
	rel-7-6-4:14.7
	rel-7-6-2:14.4
	rel-7-6-branch:14.4.0.6
	rel-7-6-0:14.4
	rel-7-4-2:14.4
	rel-7-4-branch:14.4.0.4
	bobWinPort:14.4.0.2
	rel-7-4-0:14.4
	rel-7-2-6:14.4
	rel-7-2-4:14.4
	rel-7-2-2:14.4
	rel-7-2-0:14.4
	rel-7-0-4:14.3
	rel-7-0-2:14.3
	rel-7-0-1:14.3
	opensource-post:14.3
	opensource-pre:1.6
	rel-7-0-branch:1.6.0.2
	rel-7-0:1.6;
locks; strict;
comment	@ * @;


14.15
date	2007.10.28.17.35.08;	author brlcad;	state Exp;
branches;
next	14.14;

14.14
date	2007.09.15.16.23.06;	author brlcad;	state Exp;
branches;
next	14.13;

14.13
date	2007.07.26.01.13.53;	author brlcad;	state Exp;
branches;
next	14.12;

14.12
date	2007.02.02.08.48.29;	author brlcad;	state Exp;
branches;
next	14.11;

14.11
date	2007.01.23.01.13.27;	author brlcad;	state Exp;
branches;
next	14.10;

14.10
date	2007.01.20.14.36.48;	author brlcad;	state Exp;
branches;
next	14.9;

14.9
date	2006.01.28.00.36.28;	author brlcad;	state Exp;
branches;
next	14.8;

14.8
date	2006.01.18.06.46.15;	author brlcad;	state Exp;
branches;
next	14.7;

14.7
date	2005.10.23.04.44.30;	author brlcad;	state Exp;
branches;
next	14.6;

14.6
date	2005.09.21.19.00.27;	author brlcad;	state Exp;
branches;
next	14.5;

14.5
date	2005.09.21.17.17.18;	author brlcad;	state Exp;
branches;
next	14.4;

14.4
date	2005.01.30.20.30.21;	author brlcad;	state Exp;
branches
	14.4.6.1;
next	14.3;

14.3
date	2004.12.21.06.38.19;	author morrison;	state Exp;
branches;
next	14.2;

14.2
date	2004.12.18.06.09.12;	author morrison;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.13;	author morrison;	state Exp;
branches;
next	1.6;

1.6
date	2004.09.08.20.31.24;	author kermit;	state Exp;
branches;
next	1.5;

1.5
date	2004.09.03.23.30.56;	author morrison;	state Exp;
branches;
next	1.4;

1.4
date	2004.08.02.23.01.47;	author morrison;	state Exp;
branches;
next	1.3;

1.3
date	2004.06.09.17.56.22;	author erikg;	state Exp;
branches;
next	1.2;

1.2
date	2004.06.08.22.04.11;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.20.15.19.02;	author morrison;	state Exp;
branches;
next	;

14.4.6.1
date	2005.11.13.13.46.13;	author brlcad;	state Exp;
branches;
next	;


desc
@@


14.15
log
@convert to libbu memory management
@
text
@/*                       F B G A M M A . C
 * BRL-CAD
 *
 * Copyright (c) 1986-2007 United States Government as represented by
 * the U.S. Army Research Laboratory.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * version 2.1 as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this file; see the file named COPYING for more
 * information.
 *
 */
/** @@file fbgamma.c
 *
 *  Load a gamma correcting colormap into a framebuffer.
 *
 *  Author -
 *	Phillip Dykstra
 *
 */
#ifndef lint
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/fb/fbgamma.c,v 14.14 2007/09/15 16:23:06 brlcad Exp $ (BRL)";
#endif

#include "common.h"

#include <stdlib.h>
#include <stdio.h>
#include <string.h>
#include <math.h>

#ifdef HAVE_UNISTD_H
#  include <unistd.h>
#endif

#include "machine.h"
#include "bu.h"
#include "fb.h"

char *options = "ihoF:";

void	checkgamma(double g);

unsigned char rampval[10] = { 255, 128, 64, 32, 16, 8, 4, 2, 1, 0 };
int x, y, scr_width, scr_height, patch_width, patch_height;
unsigned char	*altline;
unsigned char	*line;
char *framebuffer = (char *)NULL;
int image = 0;

static char usage[] = "\
Usage: fbgamma [-h -o -i] [-F framebuffer] val [gval bval]\n";

void mk_ramp(FBIO *fb, int r, int g, int b, int n)
{

	/* grey ramp */
	for (x=0 ; x < scr_width ; ++x) {
		if (r) line[x*3] = rampval[x / patch_width + 1];
		else line[x*3] = 0;
		if (g) line[x*3+1] = rampval[x / patch_width + 1];
		else line[x*3+1] = 0;
		if (b) line[x*3+2] = rampval[x / patch_width + 1];
		else line[x*3+2] = 0;
	}
	for (y=patch_height*n ; y < patch_height*(n+1) && y < scr_height ; ++y) {
		fb_write(fb, 0, y, line, scr_width);
	}

	for (x=0 ; x < scr_width ; ++x) {
		if (r) line[x*3] = rampval[x / patch_width];
		else line[x*3] = 0;
		if (g) line[x*3+1] = rampval[x / patch_width];
		else line[x*3+1] = 0;
		if (b) line[x*3+2] = rampval[x / patch_width];
		else line[x*3+2] = 0;
	}
	for (y=patch_height*(n+1) ; y < patch_height*(n+2) && y < scr_height ; y += 2) {
		fb_write(fb, 0, y, altline, scr_width);
		fb_write(fb, 0, y+1, line, scr_width);
	}
}

void disp_image(FBIO *fb)
{

	scr_width = fb_getwidth(fb);
	scr_height = fb_getheight(fb);

	patch_width = scr_width / 8;
	patch_height = scr_height / 14;

	line = (unsigned char *) bu_malloc(scr_width*3, "line");
	altline = (unsigned char *) bu_calloc(scr_width*3, sizeof(unsigned char), "altline");

	mk_ramp(fb, 1, 1, 1, 0);
	mk_ramp(fb, 1, 0, 0, 2);
	mk_ramp(fb, 1, 1, 0, 4);
	mk_ramp(fb, 0, 1, 0, 6);
	mk_ramp(fb, 0, 1, 1, 8);
	mk_ramp(fb, 0, 0, 1, 10);
	mk_ramp(fb, 1, 0, 1, 12);

	(void)bu_free(line, "line");
	(void)bu_free(altline, "altline");
}


int
main(int argc, char **argv)
{
	int	i;
	int	onegamma = 0;
	int	fbsize = 512;
	int	overlay = 0;
	double	gamr = 0, gamg = 0, gamb = 0;	/* gamma's */
	double	f;
	ColorMap cm;
	FBIO	*fbp;

	onegamma = 0;

	/* check for flags */
	bu_opterr = 0;
	while ((i=bu_getopt(argc, argv, options)) != EOF) {
		switch(i) {
		case 'h'	: fbsize = 1024; break;
		case 'o'	: overlay++; break;
		case 'i'	: image = !image; break;
		case 'F'	: framebuffer = bu_optarg; break;
		default		: break;
		}
	}

	if (bu_optind == argc - 1) {
		/* single value for all channels */
		f = atof( argv[bu_optind] );
		checkgamma( f );
		gamr = gamg = gamb = 1.0 / f;
		onegamma++;
	} else if (bu_optind == argc - 4 ) {
		/* different RGB values */
		f = atof( argv[bu_optind] );
		checkgamma( f );
		gamr = 1.0 / f;
		f = atof( argv[bu_optind+1] );
		checkgamma( f );
		gamg = 1.0 / f;
		f = atof( argv[bu_optind+2] );
		checkgamma( f );
		gamb = 1.0 / f;
	} else {
		bu_exit(1, "%s", usage );
	}

	if( (fbp = fb_open( framebuffer, fbsize, fbsize )) == FBIO_NULL ) {
		bu_exit( 2, "Unable to open framebuffer\n" );
	}

	/* draw the gamma image if requested */
	if (image) disp_image(fbp);

	/* get the starting map */
	if( overlay ) {
		fb_rmap( fbp, &cm );
	} else {
		/* start with a linear map */
		for( i = 0; i < 256; i++ ) {
			cm.cm_red[i] = cm.cm_green[i]
			= cm.cm_blue[i] = i << 8;
		}
	}

	/* apply the gamma(s) */
	for( i = 0; i < 256; i++ ) {
		if( gamr < 0 )
			cm.cm_red[i] = 65535 * pow( (double)cm.cm_red[i] / 65535.0, -1.0/gamr );
		else
			cm.cm_red[i] = 65535 * pow( (double)cm.cm_red[i] / 65535.0, gamr );
		if( onegamma && (overlay == 0) ) {
			cm.cm_green[i] = cm.cm_red[i];
			cm.cm_blue[i]  = cm.cm_red[i];
		} else {
			if( gamg < 0 )
				cm.cm_green[i] = 65535 * pow( (double)cm.cm_green[i] / 65535.0, -1.0/gamg );
			else
				cm.cm_green[i] = 65535 * pow( (double)cm.cm_green[i] / 65535.0, gamg );
			if( gamb < 0 )
				cm.cm_blue[i]  = 65535 * pow( (double)cm.cm_blue[i] / 65535.0, -1.0/gamb );
			else
				cm.cm_blue[i]  = 65535 * pow( (double)cm.cm_blue[i] / 65535.0, gamb );
		}
	}

	fb_wmap( fbp, &cm );
	fb_close( fbp );
	return(0);
}

void
checkgamma(double g)
{
	if( fabs(g) < 1.0e-10 ) {
		fprintf( stderr, "fbgamma: gamma too close to zero\n" );
		bu_exit(3, "%s", usage );
	}
}

/*
 * Local Variables:
 * mode: C
 * tab-width: 8
 * c-basic-offset: 4
 * indent-tabs-mode: t
 * End:
 * ex: shiftwidth=4 tabstop=8
 */
@


14.14
log
@more c89 embracing.  c89 provides string.h for all of the various str*() and mem*() functions, so remove the check for its presence.  there is still likely to be work required for strict c89 conformance for the various bsd strings.h functions that may be in use.
@
text
@d30 1
a30 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/fb/fbgamma.c,v 14.13 2007/07/26 01:13:53 brlcad Exp $ (BRL)";
d101 2
a102 9
	if ((line = (unsigned char *) malloc(scr_width*3)) == (unsigned char *)NULL) {
		exit(-1);
	}

	if ((altline = (unsigned char *) malloc(scr_width*3)) == (unsigned char *)NULL) {
		exit(-1);
	} else {
		bzero( (char *)altline, scr_width*3);
	}
d112 2
a113 2
	(void)free(line);
	(void)free(altline);
d161 1
a161 2
		fprintf( stderr, usage );
		exit( 1 );
d165 1
a165 1
		exit( 2 );
d213 1
a213 2
		fprintf( stderr, usage );
		exit( 3 );
@


14.13
log
@remove ephemeral data like phone numbers and addresses, including the misleading 'source' statements on code that is continually evolving and receiving contributions from many many sources
@
text
@d30 1
a30 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/fb/fbgamma.c,v 14.12 2007/02/02 08:48:29 brlcad Exp $ (BRL)";
d37 1
a37 5
#ifdef HAVE_STRING_H
#  include <string.h>
#else
#  include <strings.h>
#endif
d39 1
@


14.12
log
@convert all of the lingering getopt calls to bu_getopt (as well as the related getopt globals optind, opterr, optarg) -- libbu's getopt has the benefit of being re-entrant and is portable to environments where getopt() may not be available.
@
text
@a27 5
 *  Source -
 *	SECAD/VLD Computing Consortium, Bldg 394
 *	The U. S. Army Ballistic Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5066
 *
d30 1
a30 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/fb/fbgamma.c,v 14.11 2007/01/23 01:13:27 brlcad Exp $ (BRL)";
@


14.11
log
@Sweeping license updates.  Documentation is fully relicensed to the BSD Documentation License (a minor variant of the FreeBSD Documentation License and BSD License).  All GPL code (mostly application code) is converted to the LGPL and now also specifically declares version 2.1, revoking the blank check to the FSF.  The intent of these sweeping changes are to simplify the licensing terms and increase overall flexibility of use, both externally (to users for their purposes) and internally (to allow application code to be migrated to libraries without creating GPL libraries).  As a collective work, BRL-CAD is now LGPL.
@
text
@d35 1
a35 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/fb/fbgamma.c,v 14.10 2007/01/20 14:36:48 brlcad Exp $ (BRL)";
d147 1
a147 1
	opterr = 0;
@


14.10
log
@update copyright to 2007
@
text
@d8 2
a9 3
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation; either version 2 of the
 * License, or (at your option) any later version.
d14 1
a14 1
 * General Public License for more details.
d16 2
a17 2
 * You should have received a copy of the GNU General Public License
 * along with this file; see the file named COPYING for more
d35 1
a35 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/fb/fbgamma.c,v 14.9 2006/01/28 00:36:28 brlcad Exp $ (BRL)";
@


14.9
log
@header cleanup, atof() requires stdlib.h on altix/posix, fix 64-bitness
@
text
@d4 1
a4 1
 * Copyright (c) 1986-2006 United States Government as represented by
d36 1
a36 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/fb/fbgamma.c,v 14.8 2006/01/18 06:46:15 brlcad Exp $ (BRL)";
@


14.8
log
@update copyright to 2006
@
text
@d36 1
a36 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/fb/fbgamma.c,v 14.7 2005/10/23 04:44:30 brlcad Exp $ (BRL)";
a40 4
#ifdef HAVE_UNISTD_H
# include <unistd.h>
#endif

d44 1
a44 1
#include <string.h>
d46 1
a46 1
#include <strings.h>
d49 3
@


14.7
log
@trailing ws
@
text
@d4 1
a4 1
 * Copyright (C) 1986-2005 United States Government as represented by
d36 1
a36 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/fb/fbgamma.c,v 14.6 2005/09/21 19:00:27 brlcad Exp $ (BRL)";
@


14.6
log
@needs bu.h for bu_getopt
@
text
@d28 1
a28 1
 *  
d33 1
a33 1
 *  
d36 1
a36 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/fb/fbgamma.c,v 14.5 2005/09/21 17:17:18 brlcad Exp $ (BRL)";
@


14.5
log
@use bu_optarg, bu_optind and bu_getopt
@
text
@d36 1
a36 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/fb/fbgamma.c,v 14.4 2005/01/30 20:30:21 brlcad Exp $ (BRL)";
d55 1
@


14.4
log
@update copyright to 2005
@
text
@d36 1
a36 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/fb/fbgamma.c,v 14.3 2004/12/21 06:38:19 morrison Exp $ (BRL)";
d149 1
a149 1
	while ((i=getopt(argc, argv, options)) != EOF) {
d154 1
a154 1
		case 'F'	: framebuffer = optarg; break;
d159 1
a159 1
	if (optind == argc - 1) {
d161 1
a161 1
		f = atof( argv[optind] );
d165 1
a165 1
	} else if (optind == argc - 4 ) {
d167 1
a167 1
		f = atof( argv[optind] );
d170 1
a170 1
		f = atof( argv[optind+1] );
d173 1
a173 1
		f = atof( argv[optind+2] );
@


14.4.6.1
log
@merge changes from HEAD aka rel-7-6-4 to the rel-7-6-branch just in case someone peeks a gander or tries to continue/build the branch
@
text
@d28 1
a28 1
 *
d33 1
a33 1
 *
d36 1
a36 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
a54 1
#include "bu.h"
d149 1
a149 1
	while ((i=bu_getopt(argc, argv, options)) != EOF) {
d154 1
a154 1
		case 'F'	: framebuffer = bu_optarg; break;
d159 1
a159 1
	if (bu_optind == argc - 1) {
d161 1
a161 1
		f = atof( argv[bu_optind] );
d165 1
a165 1
	} else if (bu_optind == argc - 4 ) {
d167 1
a167 1
		f = atof( argv[bu_optind] );
d170 1
a170 1
		f = atof( argv[bu_optind+1] );
d173 1
a173 1
		f = atof( argv[bu_optind+2] );
@


14.3
log
@remove the old copyright notice section
@
text
@d4 1
a4 1
 * Copyright (c) 1986-2004 United States Government as represented by
d36 1
a36 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/fb/fbgamma.c,v 14.2 2004/12/18 06:09:12 morrison Exp $ (BRL)";
@


14.2
log
@assign copyright and GPL license
@
text
@a33 3
 *  Copyright Notice -
 *	This software is Copyright (C) 1986-2004 by the United States Army.
 *	All rights reserved.
d36 1
a36 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/fb/fbgamma.c,v 14.1 2004/11/16 19:42:13 morrison Exp $ (BRL)";
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d1 22
a22 2
/*
 *			F B G A M M A . C
d39 1
a39 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/fb/fbgamma.c,v 1.6 2004/09/08 20:31:24 kermit Exp $ (BRL)";
@


1.6
log
@Added <stdlib.h> to fix implicit cast (for IA64 architecture).
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/fb/fbgamma.c,v 1.5 2004/09/03 23:30:56 morrison Exp $ (BRL)";
d217 10
@


1.5
log
@USE_STRING_H is no more.. it's HAVE_STRING_H
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/fb/fbgamma.c,v 1.4 2004/08/02 23:01:47 morrison Exp $ (BRL)";
d27 2
a28 1
                                                                                                                                                                            
d36 1
@


1.4
log
@replace the wrapped config.h block with common.h
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/fb/fbgamma.c,v 1.3 2004/06/09 17:56:22 erikg Exp $ (BRL)";
d29 1
a29 1
#ifdef USE_STRING_H
@


1.3
log
@fix missing header issues
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/fb/fbgamma.c,v 1.2 2004/06/08 22:04:11 morrison Exp $ (BRL)";
d22 1
a22 3
#ifdef HAVE_CONFIG_H
# include "config.h"
#endif
@


1.2
log
@obliterate externs.h
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
d26 4
a29 2


@


1.1
log
@Vast reorganization begins.  Sources moved from top-level directories into src/.
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/fb/fbgamma.c,v 11.8 2004/05/10 15:30:42 erikg Exp $ (BRL)";
a35 1
#include "externs.h"
a38 1
/* externs.h includes externs for getopt and associated variables */
@

