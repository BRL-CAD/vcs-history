head	14.15;
access;
symbols
	rel-7-10-4:14.13
	STABLE:14.13.0.2
	stable-branch:14.4
	rel-7-10-2:14.13
	rel-7-10-0:14.12
	rel-7-8-4:14.9
	rel-7-8-2:14.9
	rel-7-8-0:14.9
	trimnurbs-branch:14.8.0.2
	help:14.8
	temp_tag:14.7
	bobWinPort-20051223-freeze:14.4
	postmerge-20051223-bobWinPort:14.7
	premerge-20051223-bobWinPort:14.7
	rel-7-6-6:14.7
	rel-7-6-4:14.7
	rel-7-6-2:14.4
	rel-7-6-branch:14.4.0.6
	rel-7-6-0:14.4
	rel-7-4-2:14.4
	rel-7-4-branch:14.4.0.4
	bobWinPort:14.4.0.2
	rel-7-4-0:14.4
	rel-7-2-6:14.4
	rel-7-2-4:14.4
	rel-7-2-2:14.4
	rel-7-2-0:14.4
	rel-7-0-4:14.3
	rel-7-0-2:14.3
	rel-7-0-1:14.3
	opensource-post:14.3
	opensource-pre:1.5
	rel-7-0-branch:1.5.0.2
	rel-7-0:1.5;
locks; strict;
comment	@ * @;


14.15
date	2007.12.16.15.59.37;	author brlcad;	state Exp;
branches;
next	14.14;

14.14
date	2007.09.15.16.23.06;	author brlcad;	state Exp;
branches;
next	14.13;

14.13
date	2007.07.26.01.13.53;	author brlcad;	state Exp;
branches;
next	14.12;

14.12
date	2007.01.27.01.41.33;	author brlcad;	state Exp;
branches;
next	14.11;

14.11
date	2007.01.23.01.13.27;	author brlcad;	state Exp;
branches;
next	14.10;

14.10
date	2007.01.20.14.36.48;	author brlcad;	state Exp;
branches;
next	14.9;

14.9
date	2006.04.06.19.56.04;	author brlcad;	state Exp;
branches;
next	14.8;

14.8
date	2006.01.18.06.46.15;	author brlcad;	state Exp;
branches
	14.8.2.1;
next	14.7;

14.7
date	2005.10.23.04.44.30;	author brlcad;	state Exp;
branches;
next	14.6;

14.6
date	2005.09.21.19.00.27;	author brlcad;	state Exp;
branches;
next	14.5;

14.5
date	2005.09.21.17.17.18;	author brlcad;	state Exp;
branches;
next	14.4;

14.4
date	2005.01.30.20.30.21;	author brlcad;	state Exp;
branches
	14.4.6.1;
next	14.3;

14.3
date	2004.12.21.06.38.19;	author morrison;	state Exp;
branches;
next	14.2;

14.2
date	2004.12.18.06.09.12;	author morrison;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.13;	author morrison;	state Exp;
branches;
next	1.5;

1.5
date	2004.09.03.23.30.56;	author morrison;	state Exp;
branches;
next	1.4;

1.4
date	2004.08.02.23.01.47;	author morrison;	state Exp;
branches;
next	1.3;

1.3
date	2004.06.09.17.56.22;	author erikg;	state Exp;
branches;
next	1.2;

1.2
date	2004.06.08.22.04.11;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.20.15.19.01;	author morrison;	state Exp;
branches;
next	;

14.4.6.1
date	2005.11.13.13.46.13;	author brlcad;	state Exp;
branches;
next	;

14.8.2.1
date	2006.04.07.19.26.27;	author jlowenz;	state Exp;
branches;
next	;


desc
@@


14.15
log
@convert all bzero calls to memset
@
text
@/*                       F B C O L O R . C
 * BRL-CAD
 *
 * Copyright (c) 1986-2007 United States Government as represented by
 * the U.S. Army Research Laboratory.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * version 2.1 as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this file; see the file named COPYING for more
 * information.
 *
 */
/** @@file fbcolor.c
 *
 * Function -
 *	Dynamicly show the desired color as the background,
 *	and in bargraph form, using the color map.
 *
 *  Author -
 *	Michael John Muuss
 *
 */
#ifndef lint
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/fb/fbcolor.c,v 14.14 2007/09/15 16:23:06 brlcad Exp $ (BRL)";
#endif

#include "common.h"

#include <stdlib.h>
#include <stdio.h>
#include <string.h>

#ifdef HAVE_UNISTD_H
#  include <unistd.h>
#endif

#include "machine.h"
#include "bu.h"
#include "fb.h"
#include "libtermio.h"

int curchan = 0;	/* 0=r, 1=g, 2=b */

int col[6] = {128,128,128};		/* r,g,b h,s,v */

unsigned char buf[3*2048];
ColorMap old_map;
ColorMap cm;

static char	*framebuffer = NULL;
static FBIO	*fbp;
static int	scr_height;
static int	scr_width;

void	new_rgb(void), rgbhsv(register int *rgb, register int *hsv), hsvrgb(register int *hsv, register int *rgb);
int	pars_Argv(int argc, register char **argv);
int	doKeyPad(void);

static char usage[] = "\
Usage: fbcolor [-h] [-F framebuffer]\n\
	[-s squarescrsize] [-w scr_width] [-n scr_height]\n\
	[-S squarescrsize] [-W scr_width] [-N scr_height]\n";

int
main(int argc, char **argv)
{
	register int i;

	if( ! pars_Argv( argc, argv ) )  {
		(void)fputs(usage, stderr);
		return	1;
	}
	if( (fbp = fb_open( framebuffer, scr_width, scr_height )) == FBIO_NULL )  {
		fprintf(stderr,"fbcolor:  fb_open(%s) failure\n", framebuffer);
		return	1;
	}

	/* Get the actual screen size we were given */
	scr_width = fb_getwidth(fbp);
	scr_height = fb_getheight(fbp);

	fb_rmap( fbp, &old_map );
	fb_clear( fbp, RGBPIXEL_NULL );

	rgbhsv( col, &col[3] );

	/* Note that color 0,0,0 is special;  use 1,1,1 for black */
	/* Red */
	for( i=0; i<255; i++)  {
		buf[3*i+RED] = i;
		buf[3*i+GRN] = 1;
		buf[3*i+BLU] = 1;
	}
	for( i=0; i<99; i++ )
		fb_write( fbp, 0, i, buf, 256 );

	/* Green */
	memset((char *)buf, 0, sizeof(buf));
	for( i=0; i<255; i++) {
		buf[3*i+RED] = 1;
		buf[3*i+GRN] = i;
		buf[3*i+BLU] = 1;
	}
	for( i=100; i<199; i++ )
		fb_write( fbp, 0, i, buf, 256 );

	/* Blue */
	memset((char *)buf, 0, sizeof(buf));
	for( i=0; i<255; i++)  {
		buf[3*i+RED] = 1;
		buf[3*i+GRN] = 1;
		buf[3*i+BLU] = i;
	}
	for( i=200; i<299; i++ )
		fb_write( fbp, 0, i, buf, 256 );

	/* Set RAW mode */
	save_Tty( 0 );
	set_Raw( 0 );
	clr_Echo( 0 );

	do  {
		/* Build color map for current value */
		memset((char *)&cm, 0, sizeof(cm));
		for( i=0; i<col[RED]; i++ )
			cm.cm_red[i] = 0xFFFF;
		for( ; i<255; i++ )
			cm.cm_red[i] = 0;

		for( i=0; i<col[GRN]; i++ )
			cm.cm_green[i] = 0xFFFF;
		for( ; i<255; i++ )
			cm.cm_green[i] = 0;

		for( i=0; i<col[BLU]; i++ )
			cm.cm_blue[i] = 0xFFFF;
		for( ; i<255; i++ )
			cm.cm_blue[i] = 0;

		/* 0,0,0 is color chosen */
		cm.cm_red[0] = col[RED]<<8;
		cm.cm_green[0] = col[GRN]<<8;
		cm.cm_blue[0] = col[BLU]<<8;

		/* 1,1,1 is for black */
		cm.cm_red[1] = 0;
		cm.cm_green[1] = 0;
		cm.cm_blue[1] = 0;

		fb_wmap( fbp, &cm );

		(void) fprintf( stdout,
				"%c rgb=%3d,%3d,%3d hsv=%3d,%3d,%3d   \r",
				"RGBHSIx"[curchan],
				col[0], col[1], col[2],
				col[3], col[4], col[5]	);
		(void) fflush( stdout );
	} while( doKeyPad() );

	fb_wmap( fbp, &old_map );
	reset_Tty( 0 );
	(void) fprintf( stdout,  "\n");	/* Move off of the output line.	*/
	return	0;
}

char help[] = "\r\n\
+ .	increase by 1\r\n\
- ,	decrease by 1\r\n\
>	increase by 16\r\n\
<	decrease by 16\r\n\
r	select red\r\n\
g	select green\r\n\
b	select blue\r\n\
h	select hue\r\n\
s	select saturation\r\n\
i v	select intensity value\r\n\
q	quit\r\n\
\\n	Exit\r\n";

int
doKeyPad(void)
{
	register int ch;

	if( (ch = getchar()) == EOF )
		return	0;		/* done */

	switch( ch )  {
	default :
		(void) fprintf( stdout,
				"\r\n'%c' bad -- Type ? for help\r\n",
				ch
				);
		break;
	case '?' :
		(void) fprintf( stdout, "\r\n%s", help );
		break;
	case '\r' :
	case '\n' :				/* Done, return to normal */
	case 'q' :
		return	0;
	case 'Q' :				/* Done, leave "as is" */
		return	0;

	case 'r':
		curchan = 0;
		break;
	case 'g':
		curchan = 1;
		break;
	case 'b':
		curchan = 2;
		break;
	case 'h':
		curchan = 3;
		break;
	case 's':
		curchan = 4;
		break;
	case 'v':
	case 'i':
		curchan = 5;
		break;
	case '/':
		if( ++curchan >= 6 )  curchan = 0;
		break;

	/* unit changes with -+ or ,. */
	case '+':
	case '.':
		col[curchan]++;
		new_rgb();
		break;
	case '-':
	case ',':
		col[curchan]--;
		new_rgb();
		break;

	/* big changes with <> */
	case '>':
		col[curchan]+=16;
		new_rgb();
		break;
	case '<':
		col[curchan]-=16;
		new_rgb();
		break;
	}
	return	1;		/* keep going */
}

void
new_rgb(void) {
	/* Wrap values to stay in range 0..255 */
	if( col[curchan] < 0 ) col[curchan] = 255;
	if( col[curchan] > 255 ) col[curchan] = 0;
	/* recompute either rgb or hsv from the other */
	if( curchan < 3 )
		rgbhsv( col, &col[3] );
	else
		hsvrgb( &col[3], col );
}

/*	p a r s _ A r g v ( )
 */
int
pars_Argv(int argc, register char **argv)
{
	register int	c;
	while( (c = bu_getopt( argc, argv, "F:s:S:w:W:n:N:h" )) != EOF )  {
		switch( c )  {
		case 'F':
			framebuffer = bu_optarg;
			break;
		case 'h' : /* High resolution frame buffer.	*/
			scr_height = scr_width = 1024;
			break;
		case 's':
		case 'S':
			scr_height = scr_width = atoi(bu_optarg);
			break;
		case 'w':
		case 'W':
			scr_width = atoi(bu_optarg);
			break;
		case 'n':
		case 'N':
			scr_height = atoi(bu_optarg);
			break;
		case '?' :
			return	0;
		}
	}
	return	1;
}

/* rgbhsv
 *
 * convert red green blue to hue saturation value
 */
void
rgbhsv(register int *rgb, register int *hsv)
{
	int	s, v;
	int	r, g, b;
	int	x;
	static int h;
	double dif = 0;

	r = rgb[0];
	g = rgb[1];
	b = rgb[2];
	v = ((r > g) ? r : g);
	v = ((v > b) ? v : b);
	x = ((r < g) ? r : g);
	x = ((x < b) ? x : b);
	if (v != x)  {
	    dif = (double) (v - x);
	    if (r != v)  {
		if (g == v)  {
		    if (b != x)
			h = (int) (42.5 * (3. - (double)(v-b) / dif));
		    else
			h = (int) (42.5 * (1. + (double)(v-r) / dif));
		} else {
		    if (r != x)
			h = (int) (42.5 * (5. - (double)(v-r) / dif));
		    else
			h = (int) (42.5 * (3. + (double)(v-g) / dif));
		}
	    } else {
		if (g != x)
		    h = (int) (42.5 * (1. - (double)(v-g) / dif));
		else
		    h = (int) (42.5 * (5. + (double)(v-b) / dif));
	    }
	}

	if (v != 0)
	    s = (int)(255. * dif / (double)v);
	else
	    s = 0;

	hsv[0] = h;
	hsv[1] = s;
	hsv[2] = v;
}

/* hsvrgb
 *
 * convert hue saturation and value to red, green, blue
 */

double modf(double, double *);

void
hsvrgb(register int *hsv, register int *rgb)
{
	int r, g, b, m, n, k;
	double h, s, v, foo;
	double f;

	if(hsv[1] != 0)
	{
	    s = (double)hsv[1] / 255.;
	    h = (double)hsv[0] / 42.666;
	    f = modf(h, &(foo));
	    v = (double)hsv[2];
	    m = (int) (v * (1. - s) + .5);
	    n = (int) (v * (1. - s*f) + .5);
	    k = (int) (v * (1. - (s * (1.-f))) + .5);
	    switch((int) h)
	    {
	    case 0:
		r = hsv[2];
		g = k;
		b = m;
		break;
	    case 1:
		r = n;
		g = hsv[2];
		b = m;
		break;
	    case 2:
		r = m;
		g = hsv[2];
		b = k;
		break;
	    case 3:
		r = m;
		g = n;
		b = hsv[2];
		break;
	    case 4:
		r = k;
		g = m;
		b = hsv[2];
		break;
	    default:
	    case 5:
		r = hsv[2];
		g = m;
		b = n;
		break;
	    }
	}
	else
	    r = g = b = hsv[2];

	rgb[0] = r;
	rgb[1] = g;
	rgb[2] = b;
}

/*
 * Local Variables:
 * mode: C
 * tab-width: 8
 * c-basic-offset: 4
 * indent-tabs-mode: t
 * End:
 * ex: shiftwidth=4 tabstop=8
 */
@


14.14
log
@more c89 embracing.  c89 provides string.h for all of the various str*() and mem*() functions, so remove the check for its presence.  there is still likely to be work required for strict c89 conformance for the various bsd strings.h functions that may be in use.
@
text
@d32 1
a32 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/fb/fbcolor.c,v 14.13 2007/07/26 01:13:53 brlcad Exp $ (BRL)";
d106 1
a106 1
	bzero( (char *)buf, sizeof(buf) );
d116 1
a116 1
	bzero( (char *)buf, sizeof(buf) );
d132 1
a132 1
		bzero( (char *)&cm, sizeof(cm) );
@


14.13
log
@remove ephemeral data like phone numbers and addresses, including the misleading 'source' statements on code that is continually evolving and receiving contributions from many many sources
@
text
@d32 1
a32 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/fb/fbcolor.c,v 14.12 2007/01/27 01:41:33 brlcad Exp $ (BRL)";
d38 3
a44 6
#include <stdio.h>
#ifdef HAVE_STRING_H
#  include <string.h>
#else
#  include <strings.h>
#endif
@


14.12
log
@ws. lots and lots of ws.  see sh/ws.sh for details (cases 'abcdeg').
@
text
@a29 5
 *  Source -
 *	SECAD/VLD Computing Consortium, Bldg 394
 *	The U. S. Army Ballistic Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5066
 *
d32 1
a32 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/fb/fbcolor.c,v 14.11 2007/01/23 01:13:27 brlcad Exp $ (BRL)";
@


14.11
log
@Sweeping license updates.  Documentation is fully relicensed to the BSD Documentation License (a minor variant of the FreeBSD Documentation License and BSD License).  All GPL code (mostly application code) is converted to the LGPL and now also specifically declares version 2.1, revoking the blank check to the FSF.  The intent of these sweeping changes are to simplify the licensing terms and increase overall flexibility of use, both externally (to users for their purposes) and internally (to allow application code to be migrated to libraries without creating GPL libraries).  As a collective work, BRL-CAD is now LGPL.
@
text
@d37 1
a37 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/fb/fbcolor.c,v 14.10 2007/01/20 14:36:48 brlcad Exp $ (BRL)";
d321 3
a323 3
        int	s, v;
        int	r, g, b;
        int	x;
d325 1
a325 1
        double dif = 0;
d327 7
a333 7
        r = rgb[0];
        g = rgb[1];
        b = rgb[2];
        v = ((r > g) ? r : g);
        v = ((v > b) ? v : b);
        x = ((r < g) ? r : g);
        x = ((x < b) ? x : b);
d335 19
a353 19
            dif = (double) (v - x);
            if (r != v)  {
                if (g == v)  {
                    if (b != x)
                        h = (int) (42.5 * (3. - (double)(v-b) / dif));
                    else
                        h = (int) (42.5 * (1. + (double)(v-r) / dif));
                } else {
                    if (r != x)
                        h = (int) (42.5 * (5. - (double)(v-r) / dif));
                    else
                        h = (int) (42.5 * (3. + (double)(v-g) / dif));
                }
            } else {
                if (g != x)
                    h = (int) (42.5 * (1. - (double)(v-g) / dif));
                else
                    h = (int) (42.5 * (5. + (double)(v-b) / dif));
            }
d357 7
a363 7
            s = (int)(255. * dif / (double)v);
        else
            s = 0;

        hsv[0] = h;
        hsv[1] = s;
        hsv[2] = v;
d376 3
a378 3
  	int r, g, b, m, n, k;
        double h, s, v, foo;
        double f;
d381 49
a429 49
        {
            s = (double)hsv[1] / 255.;
            h = (double)hsv[0] / 42.666;
            f = modf(h, &(foo));
            v = (double)hsv[2];
            m = (int) (v * (1. - s) + .5);
            n = (int) (v * (1. - s*f) + .5);
            k = (int) (v * (1. - (s * (1.-f))) + .5);
            switch((int) h)
            {
            case 0:
                r = hsv[2];
                g = k;
                b = m;
                break;
            case 1:
                r = n;
                g = hsv[2];
                b = m;
                break;
            case 2:
                r = m;
                g = hsv[2];
                b = k;
                break;
            case 3:
                r = m;
                g = n;
                b = hsv[2];
                break;
            case 4:
                r = k;
                g = m;
                b = hsv[2];
                break;
            default:
            case 5:
                r = hsv[2];
                g = m;
                b = n;
                break;
            }
        }
        else
            r = g = b = hsv[2];

        rgb[0] = r;
        rgb[1] = g;
        rgb[2] = b;
@


14.10
log
@update copyright to 2007
@
text
@d8 2
a9 3
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation; either version 2 of the
 * License, or (at your option) any later version.
d14 1
a14 1
 * General Public License for more details.
d16 2
a17 2
 * You should have received a copy of the GNU General Public License
 * along with this file; see the file named COPYING for more
d37 1
a37 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/fb/fbcolor.c,v 14.9 2006/04/06 19:56:04 brlcad Exp $ (BRL)";
@


14.9
log
@quell/fix issues raised by the Intel compiler on Altix
@
text
@d4 1
a4 1
 * Copyright (c) 1986-2006 United States Government as represented by
d38 1
a38 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/fb/fbcolor.c,v 14.8 2006/01/18 06:46:15 brlcad Exp $ (BRL)";
@


14.8
log
@update copyright to 2006
@
text
@d38 1
a38 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/fb/fbcolor.c,v 14.7 2005/10/23 04:44:30 brlcad Exp $ (BRL)";
d43 1
d45 1
a45 1
# include <unistd.h>
d50 1
a50 1
#include <string.h>
d52 1
a52 1
#include <strings.h>
@


14.8.2.1
log
@update from HEAD
@
text
@d38 1
a38 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/fb/fbcolor.c,v 14.8 2006/01/18 06:46:15 brlcad Exp $ (BRL)";
a42 1
#include <stdlib.h>
d44 1
a44 1
#  include <unistd.h>
d49 1
a49 1
#  include <string.h>
d51 1
a51 1
#  include <strings.h>
@


14.7
log
@trailing ws
@
text
@d4 1
a4 1
 * Copyright (C) 1986-2005 United States Government as represented by
d38 1
a38 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/fb/fbcolor.c,v 14.6 2005/09/21 19:00:27 brlcad Exp $ (BRL)";
@


14.6
log
@needs bu.h for bu_getopt
@
text
@d30 1
a30 1
 *  
d35 1
a35 1
 *  
d38 1
a38 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/fb/fbcolor.c,v 14.5 2005/09/21 17:17:18 brlcad Exp $ (BRL)";
d46 2
a47 2
                                                                                                                                                                            
#include <stdio.h>	
d198 2
a199 2
{ 
	register int ch;	
d214 1
a214 1
	case '\r' :    
d315 1
a315 1
 * 
d367 1
a367 1
 * 
d380 1
a380 1
	if(hsv[1] != 0) 
@


14.5
log
@use bu_optarg, bu_optind and bu_getopt
@
text
@d38 1
a38 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/fb/fbcolor.c,v 14.4 2005/01/30 20:30:21 brlcad Exp $ (BRL)";
d54 1
@


14.4
log
@update copyright to 2005
@
text
@d38 1
a38 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/fb/fbcolor.c,v 14.3 2004/12/21 06:38:19 morrison Exp $ (BRL)";
d286 1
a286 1
	while( (c = getopt( argc, argv, "F:s:S:w:W:n:N:h" )) != EOF )  {
d289 1
a289 1
			framebuffer = optarg;
d296 1
a296 1
			scr_height = scr_width = atoi(optarg);
d300 1
a300 1
			scr_width = atoi(optarg);
d304 1
a304 1
			scr_height = atoi(optarg);
@


14.4.6.1
log
@merge changes from HEAD aka rel-7-6-4 to the rel-7-6-branch just in case someone peeks a gander or tries to continue/build the branch
@
text
@d30 1
a30 1
 *
d35 1
a35 1
 *
d38 1
a38 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
d46 2
a47 2

#include <stdio.h>
a53 1
#include "bu.h"
d197 2
a198 2
{
	register int ch;
d213 1
a213 1
	case '\r' :
d286 1
a286 1
	while( (c = bu_getopt( argc, argv, "F:s:S:w:W:n:N:h" )) != EOF )  {
d289 1
a289 1
			framebuffer = bu_optarg;
d296 1
a296 1
			scr_height = scr_width = atoi(bu_optarg);
d300 1
a300 1
			scr_width = atoi(bu_optarg);
d304 1
a304 1
			scr_height = atoi(bu_optarg);
d314 1
a314 1
 *
d366 1
a366 1
 *
d379 1
a379 1
	if(hsv[1] != 0)
@


14.3
log
@remove the old copyright notice section
@
text
@d4 1
a4 1
 * Copyright (c) 1986-2004 United States Government as represented by
d38 1
a38 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/fb/fbcolor.c,v 14.2 2004/12/18 06:09:12 morrison Exp $ (BRL)";
@


14.2
log
@assign copyright and GPL license
@
text
@a35 3
 *  Copyright Notice -
 *	This software is Copyright (C) 1986-2004 by the United States Army.
 *	All rights reserved.
d38 1
a38 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/fb/fbcolor.c,v 14.1 2004/11/16 19:42:13 morrison Exp $ (BRL)";
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d1 22
a22 2
/*
 *			F B C O L O R . C
d41 1
a41 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/fb/fbcolor.c,v 1.5 2004/09/03 23:30:56 morrison Exp $ (BRL)";
@


1.5
log
@USE_STRING_H is no more.. it's HAVE_STRING_H
@
text
@d21 1
a21 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/fb/fbcolor.c,v 1.4 2004/08/02 23:01:47 morrison Exp $ (BRL)";
d413 10
@


1.4
log
@replace the wrapped config.h block with common.h
@
text
@d21 1
a21 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/fb/fbcolor.c,v 1.3 2004/06/09 17:56:22 erikg Exp $ (BRL)";
d31 1
a31 1
#ifdef USE_STRING_H
@


1.3
log
@fix missing header issues
@
text
@d21 1
a21 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/fb/fbcolor.c,v 1.2 2004/06/08 22:04:11 morrison Exp $ (BRL)";
d24 1
a24 3
#ifdef HAVE_CONFIG_H
# include "config.h"
#endif
@


1.2
log
@obliterate externs.h
@
text
@d21 1
a21 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
d28 4
a31 2


@


1.1
log
@Vast reorganization begins.  Sources moved from top-level directories into src/.
@
text
@d21 1
a21 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/fb/fbcolor.c,v 11.9 2004/05/10 15:30:42 erikg Exp $ (BRL)";
a36 1
#include "externs.h"
@

