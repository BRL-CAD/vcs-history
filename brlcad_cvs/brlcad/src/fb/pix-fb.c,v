head	14.20;
access;
symbols
	rel-7-10-4:14.16
	STABLE:14.16.0.2
	stable-branch:14.4
	rel-7-10-2:14.16
	rel-7-10-0:14.15
	rel-7-8-4:14.12
	rel-7-8-2:14.10
	rel-7-8-0:14.10
	trimnurbs-branch:14.9.0.2
	help:14.9
	temp_tag:14.8
	bobWinPort-20051223-freeze:14.4.2.1
	postmerge-20051223-bobWinPort:14.8
	premerge-20051223-bobWinPort:14.7
	rel-7-6-6:14.7
	rel-7-6-4:14.7
	rel-7-6-2:14.4
	rel-7-6-branch:14.4.0.6
	rel-7-6-0:14.4
	rel-7-4-2:14.4
	rel-7-4-branch:14.4.0.4
	bobWinPort:14.4.0.2
	rel-7-4-0:14.4
	rel-7-2-6:14.4
	rel-7-2-4:14.4
	rel-7-2-2:14.4
	rel-7-2-0:14.4
	rel-7-0-4:14.3
	rel-7-0-2:14.3
	rel-7-0-1:14.3
	opensource-post:14.3
	opensource-pre:1.5
	rel-7-0-branch:1.5.0.2
	rel-7-0:1.5;
locks; strict;
comment	@ * @;


14.20
date	2007.11.21.20.49.08;	author erikgreenwald;	state Exp;
branches;
next	14.19;

14.19
date	2007.11.21.19.09.24;	author erikgreenwald;	state Exp;
branches;
next	14.18;

14.18
date	2007.11.05.04.38.17;	author brlcad;	state Exp;
branches;
next	14.17;

14.17
date	2007.10.13.20.24.56;	author brlcad;	state Exp;
branches;
next	14.16;

14.16
date	2007.07.26.01.13.53;	author brlcad;	state Exp;
branches;
next	14.15;

14.15
date	2007.01.27.01.41.34;	author brlcad;	state Exp;
branches;
next	14.14;

14.14
date	2007.01.23.01.13.31;	author brlcad;	state Exp;
branches;
next	14.13;

14.13
date	2007.01.20.14.36.49;	author brlcad;	state Exp;
branches;
next	14.12;

14.12
date	2006.08.01.15.02.56;	author brlcad;	state Exp;
branches;
next	14.11;

14.11
date	2006.07.09.09.50.24;	author brlcad;	state Exp;
branches;
next	14.10;

14.10
date	2006.04.06.19.56.04;	author brlcad;	state Exp;
branches;
next	14.9;

14.9
date	2006.01.18.06.46.15;	author brlcad;	state Exp;
branches
	14.9.2.1;
next	14.8;

14.8
date	2005.12.23.21.26.29;	author bob1961;	state Exp;
branches;
next	14.7;

14.7
date	2005.10.23.04.44.30;	author brlcad;	state Exp;
branches;
next	14.6;

14.6
date	2005.09.21.18.55.36;	author brlcad;	state Exp;
branches;
next	14.5;

14.5
date	2005.09.21.17.17.18;	author brlcad;	state Exp;
branches;
next	14.4;

14.4
date	2005.01.30.20.30.21;	author brlcad;	state Exp;
branches
	14.4.2.1
	14.4.6.1;
next	14.3;

14.3
date	2004.12.21.06.38.19;	author morrison;	state Exp;
branches;
next	14.2;

14.2
date	2004.12.18.06.09.12;	author morrison;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.13;	author morrison;	state Exp;
branches;
next	1.5;

1.5
date	2004.09.08.20.31.24;	author kermit;	state Exp;
branches;
next	1.4;

1.4
date	2004.08.02.23.01.47;	author morrison;	state Exp;
branches;
next	1.3;

1.3
date	2004.06.09.17.56.22;	author erikg;	state Exp;
branches;
next	1.2;

1.2
date	2004.06.08.22.04.12;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.20.15.19.04;	author morrison;	state Exp;
branches;
next	;

14.4.2.1
date	2005.09.08.16.23.20;	author bob1961;	state Exp;
branches;
next	;

14.4.6.1
date	2005.11.13.13.46.13;	author brlcad;	state Exp;
branches;
next	;

14.9.2.1
date	2006.04.07.19.26.27;	author jlowenz;	state Exp;
branches;
next	;


desc
@@


14.20
log
@pass bu_exit a NULL instead of an empty string
@
text
@/*                        P I X - F B . C
 * BRL-CAD
 *
 * Copyright (c) 1986-2007 United States Government as represented by
 * the U.S. Army Research Laboratory.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * version 2.1 as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this file; see the file named COPYING for more
 * information.
 *
 */
/** @@file pix-fb.c
 *
 *  Program to take bottom-up pixel files and send them to a framebuffer.
 *
 *  Author -
 *	Michael John Muuss
 *
 */
#ifndef lint
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/fb/pix-fb.c,v 14.19 2007/11/21 19:09:24 erikgreenwald Exp $ (BRL)";
#endif

#include "common.h"

#include <stdio.h>
#include <stdlib.h>
#ifdef HAVE_UNISTD_H
#  include <unistd.h>
#endif
#ifdef HAVE_SYS_TYPES_H
#  include <sys/types.h>
#endif
#ifdef HAVE_SYS_STAT_H
#  include <sys/stat.h>
#endif
#ifdef HAVE_FCNTL_H
#  include <fcntl.h>
#endif
#ifdef HAVE_WINSOCK_H
#  include <winsock.h>
#endif

#include "machine.h"
#include "bu.h"
#include "fb.h"

#include "pkg.h"


int skipbytes(int fd, off_t num);

static unsigned char *scanline;		/* 1 scanline pixel buffer */
static int	scanbytes;		/* # of bytes of scanline */
static int	scanpix;		/* # of pixels of scanline */

static int	multiple_lines = 0;	/* Streamlined operation */

static char	*framebuffer = NULL;
static char	*file_name;
static int	infd;

static int	fileinput = 0;		/* file of pipe on input? */
static int	autosize = 0;		/* !0 to autosize input */

static unsigned long int	file_width = 512;	/* default input width */
static unsigned long int	file_height = 512;	/* default input height */
static int	scr_width = 0;		/* screen tracks file if not given */
static int	scr_height = 0;
static int	file_xoff, file_yoff;
static int	scr_xoff, scr_yoff;
static int	clear = 0;
static int	zoom = 0;
static int	inverse = 0;		/* Draw upside-down */
static int	one_line_only = 0;	/* insist on 1-line writes */
static int	pause_sec = 0; /* Pause that many seconds before closing the FB
			      and exiting */

static char usage[] = "\
Usage: pix-fb [-a -h -i -c -z -1] [-m #lines] [-F framebuffer]\n\
	[-s squarefilesize] [-w file_width] [-n file_height]\n\
	[-x file_xoff] [-y file_yoff] [-X scr_xoff] [-Y scr_yoff]\n\
	[-S squarescrsize] [-W scr_width] [-N scr_height] [-p seconds]\n\
	[file.pix]\n";

int
get_args(int argc, register char **argv)
{
	register int c;

	while ( (c = bu_getopt( argc, argv, "1m:ahiczF:p:s:w:n:x:y:X:Y:S:W:N:" )) != EOF )  {
		switch( c )  {
		case '1':
			one_line_only = 1;
			break;
		case 'm':
			multiple_lines = atoi(bu_optarg);
			break;
		case 'a':
			autosize = 1;
			break;
		case 'h':
			/* high-res */
			file_height = file_width = 1024;
			scr_height = scr_width = 1024;
			autosize = 0;
			break;
		case 'i':
			inverse = 1;
			break;
		case 'c':
			clear = 1;
			break;
		case 'z':
			zoom = 1;
			break;
		case 'F':
			framebuffer = bu_optarg;
			break;
		case 's':
			/* square file size */
			file_height = file_width = atoi(bu_optarg);
			autosize = 0;
			break;
		case 'w':
			file_width = atoi(bu_optarg);
			autosize = 0;
			break;
		case 'n':
			file_height = atoi(bu_optarg);
			autosize = 0;
			break;
		case 'x':
			file_xoff = atoi(bu_optarg);
			break;
		case 'y':
			file_yoff = atoi(bu_optarg);
			break;
		case 'X':
			scr_xoff = atoi(bu_optarg);
			break;
		case 'Y':
			scr_yoff = atoi(bu_optarg);
			break;
		case 'S':
			scr_height = scr_width = atoi(bu_optarg);
			break;
		case 'W':
			scr_width = atoi(bu_optarg);
			break;
		case 'N':
			scr_height = atoi(bu_optarg);
			break;
		case 'p':
			pause_sec=atoi(bu_optarg);
			break;

		default:		/* '?' */
			return(0);
		}
	}

	if( bu_optind >= argc )  {
		if( isatty(fileno(stdin)) )
			return(0);
		file_name = "-";
		infd = 0;
	} else {
		file_name = argv[bu_optind];
		if( (infd = open(file_name, 0)) < 0 )  {
			perror(file_name);
			(void)fprintf( stderr,
				"pix-fb: cannot open \"%s\" for reading\n",
				file_name );
			bu_exit(1, NULL);
		}
#ifdef _WIN32
		_setmode(infd, _O_BINARY);
#endif
		fileinput++;
	}

	if ( argc > ++bu_optind )
		(void)fprintf( stderr, "pix-fb: excess argument(s) ignored\n" );

	return(1);		/* OK */
}

int
main(int argc, char **argv)
{
	register int y;
	register FBIO *fbp;
	int	xout, yout, n, m, xstart, xskip;

	if ( !get_args( argc, argv ) )  {
		(void)fputs(usage, stderr);
		bu_exit( 1, NULL );
	}

	if (pkg_init() != 0)
	    bu_exit(1, NULL);

	/* autosize input? */
	if( fileinput && autosize ) {
		unsigned long int	w, h;
		if( fb_common_file_size(&w, &h, file_name, 3) ) {
			file_width = w;
			file_height = h;
		} else {
			fprintf(stderr,"pix-fb: unable to autosize\n");
		}
	}

	/* If screen size was not set, track the file size */
	if( scr_width == 0 )
		scr_width = file_width;
	if( scr_height == 0 )
		scr_height = file_height;

	if ((fbp = fb_open( framebuffer, scr_width, scr_height)) == NULL) {
	    pkg_terminate();
	    bu_exit(12, NULL);
	}

	/* Get the screen size we were given */
	scr_width = fb_getwidth(fbp);
	scr_height = fb_getheight(fbp);

	/* compute number of pixels to be output to screen */
	if( scr_xoff < 0 )
	{
		xout = scr_width + scr_xoff;
		xskip = (-scr_xoff);
		xstart = 0;
	}
	else
	{
		xout = scr_width - scr_xoff;
		xskip = 0;
		xstart = scr_xoff;
	}

	if( xout < 0 )
		bu_exit(0, NULL);			/* off screen */
	if( xout > (file_width-file_xoff) )
		xout = (file_width-file_xoff);
	scanpix = xout;				/* # pixels on scanline */

	if( inverse )
		scr_yoff = (-scr_yoff);

	yout = scr_height - scr_yoff;
	if( yout < 0 )
		bu_exit(0, NULL);			/* off screen */
	if( yout > (file_height-file_yoff) )
		yout = (file_height-file_yoff);

	/* Only in the simplest case use multi-line writes */
	if( !one_line_only && multiple_lines > 0 && !inverse && !zoom &&
	    xout == file_width &&
	    file_width <= scr_width )  {
		scanpix *= multiple_lines;
	}

	scanbytes = scanpix * sizeof(RGBpixel);
	if( (scanline = (unsigned char *)malloc(scanbytes)) == RGBPIXEL_NULL )  {
		fprintf(stderr,
			"pix-fb:  malloc(%d) failure for scanline buffer\n",
			scanbytes);
		pkg_terminate();
		bu_exit(2, NULL);
	}

	if( clear )  {
		fb_clear( fbp, PIXEL_NULL );
	}
	if( zoom ) {
		/* Zoom in, and center the display.  Use square zoom. */
		int	zoom;
		zoom = scr_width/xout;
		if( scr_height/yout < zoom )  zoom = scr_height/yout;
		if( inverse )  {
			fb_view( fbp,
				scr_xoff+xout/2, scr_height-1-(scr_yoff+yout/2),
				zoom, zoom );
		} else {
			fb_view( fbp,
				scr_xoff+xout/2, scr_yoff+yout/2,
				zoom, zoom );
		}
	}

	if( file_yoff != 0 ) skipbytes( infd, (off_t)file_yoff*(off_t)file_width*sizeof(RGBpixel) );

	if( multiple_lines )  {
		/* Bottom to top with multi-line reads & writes */
		int	height;
		for( y = scr_yoff; y < scr_yoff + yout; y += multiple_lines )  {
			n = bu_mread( infd, (char *)scanline, scanbytes );
			if( n <= 0 ) break;
			height = multiple_lines;
			if( n != scanbytes )  {
				height = (n/sizeof(RGBpixel)+xout-1)/xout;
				if( height <= 0 )  break;
			}
			/* Don't over-write */
			if( y + height > scr_yoff + yout )
				height = scr_yoff + yout - y;
			if( height <= 0 )  break;
			m = fb_writerect( fbp, scr_xoff, y,
				file_width, height,
				scanline );
			if( m != file_width*height )  {
				fprintf(stderr,
					"pix-fb: fb_writerect(x=%d, y=%d, w=%d, h=%d) failure, ret=%d, s/b=%d\n",
					scr_xoff, y,
					file_width, height, m, scanbytes );
			}
		}
	} else if( !inverse )  {
		/* Normal way -- bottom to top */
		for( y = scr_yoff; y < scr_yoff + yout; y++ )  {
			if( y < 0 || y > scr_height )
			{
				skipbytes( infd , (off_t)file_width*sizeof(RGBpixel) );
				continue;
			}
			if( file_xoff+xskip != 0 )
				skipbytes( infd, (off_t)(file_xoff+xskip)*sizeof(RGBpixel) );
			n = bu_mread( infd, (char *)scanline, scanbytes );
			if( n <= 0 ) break;
			m = fb_write( fbp, xstart, y, scanline, xout );
			if( m != xout )  {
				fprintf(stderr,
					"pix-fb: fb_write(x=%d, y=%d, npix=%d) ret=%d, s/b=%d\n",
					scr_xoff, y, xout,
					m, xout );
			}
			/* slop at the end of the line? */
			if( file_xoff+xskip+scanpix < file_width )
				skipbytes( infd, (off_t)(file_width-file_xoff-xskip-scanpix)*sizeof(RGBpixel) );
		}
	}  else  {
		/* Inverse -- top to bottom */
		for( y = scr_height-1-scr_yoff; y >= scr_height-scr_yoff-yout; y-- )  {
			if( y < 0 || y >= scr_height )
			{
				skipbytes( infd , (off_t)file_width*sizeof(RGBpixel) );
				continue;
			}
			if( file_xoff+xskip != 0 )
				skipbytes( infd, (off_t)(file_xoff+xskip)*sizeof(RGBpixel) );
			n = bu_mread( infd, (char *)scanline, scanbytes );
			if( n <= 0 ) break;
			m = fb_write( fbp, xstart, y, scanline, xout );
			if( m != xout )  {
				fprintf(stderr,
					"pix-fb: fb_write(x=%d, y=%d, npix=%d) ret=%d, s/b=%d\n",
					scr_xoff, y, xout,
					m, xout );
			}
			/* slop at the end of the line? */
			if( file_xoff+xskip+scanpix < file_width )
				skipbytes( infd, (off_t)(file_width-file_xoff-xskip-scanpix)*sizeof(RGBpixel) );
		}
	}
	sleep(pause_sec);
	if( fb_close( fbp ) < 0 )  {
		fprintf(stderr, "pix-fb: Warning: fb_close() error\n");
	}

	pkg_terminate();
	bu_exit(0, NULL);
}

/*
 * Throw bytes away.  Use reads into scanline buffer if a pipe, else seek.
 */
int
skipbytes(int fd, off_t num)
{
	int	n, try;

	if( fileinput ) {
		(void)lseek( fd, (off_t)num, 1 );
		return 0;
	}

	while( num > 0 ) {
		try = num > scanbytes ? scanbytes : num;
		n = read( fd, scanline, try );
		if( n <= 0 ){
			return -1;
		}
		num -= n;
	}
	return	0;
}

/*
 * Local Variables:
 * mode: C
 * tab-width: 8
 * c-basic-offset: 4
 * indent-tabs-mode: t
 * End:
 * ex: shiftwidth=4 tabstop=8
 */
@


14.19
log
@exit->bu_exit where applicable
@
text
@d30 1
a30 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/fb/pix-fb.c,v 14.18 2007/11/05 04:38:17 brlcad Exp $ (BRL)";
d184 1
a184 1
			bu_exit(1, "");
d207 1
a207 1
		bu_exit( 1, "" );
d211 1
a211 1
	    bu_exit(1, "");
d232 1
a232 1
	    bu_exit(12, "");
d254 1
a254 1
		bu_exit(0, "");			/* off screen */
d264 1
a264 1
		bu_exit(0, "");			/* off screen */
d281 1
a281 1
		bu_exit(2, "");
d383 1
a383 1
	bu_exit(0, "");
@


14.18
log
@use the feature-specific HAVE_WINSOCK_H header define instead of platform-specific defines
@
text
@d30 1
a30 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/fb/pix-fb.c,v 14.17 2007/10/13 20:24:56 brlcad Exp $ (BRL)";
d184 1
a184 1
			exit(1);
d207 1
a207 1
		exit( 1 );
d211 1
a211 1
	    exit(1);
d232 1
a232 1
	    exit(12);
d254 1
a254 1
		exit(0);			/* off screen */
d264 1
a264 1
		exit(0);			/* off screen */
d281 1
a281 1
		exit(2);
d383 1
a383 1
	exit(0);
@


14.17
log
@accept karel's sf patch 1802016, which provides a -p option to pix-fb causing the application to pause the specified number of seconds before exiting and closing the framebuffer.
@
text
@d30 1
a30 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/fb/pix-fb.c,v 14.16 2007/07/26 01:13:53 brlcad Exp $ (BRL)";
d49 1
a49 1
#ifdef _WIN32
@


14.16
log
@remove ephemeral data like phone numbers and addresses, including the misleading 'source' statements on code that is continually evolving and receiving contributions from many many sources
@
text
@d30 1
a30 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/fb/pix-fb.c,v 14.15 2007/01/27 01:41:34 brlcad Exp $ (BRL)";
d85 2
d92 2
a93 1
	[-S squarescrsize] [-W scr_width] [-N scr_height] [file.pix]\n";
d100 1
a100 1
	while ( (c = bu_getopt( argc, argv, "1m:ahiczF:s:w:n:x:y:X:Y:S:W:N:" )) != EOF )  {
d163 3
d377 1
@


14.15
log
@ws. lots and lots of ws.  see sh/ws.sh for details (cases 'abcdeg').
@
text
@a27 5
 *  Source -
 *	SECAD/VLD Computing Consortium, Bldg 394
 *	The U. S. Army Ballistic Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5066
 *
d30 1
a30 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/fb/pix-fb.c,v 14.14 2007/01/23 01:13:31 brlcad Exp $ (BRL)";
@


14.14
log
@Sweeping license updates.  Documentation is fully relicensed to the BSD Documentation License (a minor variant of the FreeBSD Documentation License and BSD License).  All GPL code (mostly application code) is converted to the LGPL and now also specifically declares version 2.1, revoking the blank check to the FSF.  The intent of these sweeping changes are to simplify the licensing terms and increase overall flexibility of use, both externally (to users for their purposes) and internally (to allow application code to be migrated to libraries without creating GPL libraries).  As a collective work, BRL-CAD is now LGPL.
@
text
@d35 1
a35 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/fb/pix-fb.c,v 14.13 2007/01/20 14:36:49 brlcad Exp $ (BRL)";
d271 1
a271 1
	    	scanpix *= multiple_lines;
@


14.13
log
@update copyright to 2007
@
text
@d8 2
a9 3
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation; either version 2 of the
 * License, or (at your option) any later version.
d14 1
a14 1
 * General Public License for more details.
d16 2
a17 2
 * You should have received a copy of the GNU General Public License
 * along with this file; see the file named COPYING for more
d35 1
a35 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/fb/pix-fb.c,v 14.12 2006/08/01 15:02:56 brlcad Exp $ (BRL)";
@


14.12
log
@refactor the three asize.c implementations (libbn, libfb, & canon) into just one.  libbn had the most comprehensive and updated version, but the logic belongs in libfb.  so, the bn_common autosizing functions are now consolidated to libfb, refactoring accordingly.
@
text
@d4 1
a4 1
 * Copyright (c) 1986-2006 United States Government as represented by
d36 1
a36 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/fb/pix-fb.c,v 14.11 2006/07/09 09:50:24 brlcad Exp $ (BRL)";
@


14.11
log
@refactor utilizing bu_mread now from libbu
@
text
@d36 1
a36 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/fb/pix-fb.c,v 14.10 2006/04/06 19:56:04 brlcad Exp $ (BRL)";
a64 2
/* defined in libbn/asize.c */
extern int bn_common_file_size(int *, int *, const char *, int);
d81 2
a82 2
static int	file_width = 512;	/* default input width */
static int	file_height = 512;	/* default input height */
d215 2
a216 2
		int	w, h;
		if( bn_common_file_size(&w, &h, file_name, 3) ) {
@


14.10
log
@quell/fix issues raised by the Intel compiler on Altix
@
text
@d36 1
a36 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/fb/pix-fb.c,v 14.9 2006/01/18 06:46:15 brlcad Exp $ (BRL)";
a67 1
int mread(int fd, register char *bp, register int num);
d311 1
a311 1
			n = mread( infd, (char *)scanline, scanbytes );
d342 1
a342 1
			n = mread( infd, (char *)scanline, scanbytes );
d365 1
a365 1
			n = mread( infd, (char *)scanline, scanbytes );
a411 27
 * "Multiple try" read.
 *  Will keep reading until either an error occurs
 *  or the requested number of bytes is read.  This
 *  is important for pipes.
 */
int
mread(int fd, register char *bp, register int num)
{
	register int	n;
	int	count;

	count = 0;

	while( num > 0 ) {
		n = read( fd, bp, num );
		if( n < 0 )
			return	-1;
		if( n == 0 )
			return count;
		bp += n;
		count += n;
		num -= n;
	}
	return count;
}

/*
@


14.9
log
@update copyright to 2006
@
text
@d36 1
a36 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/fb/pix-fb.c,v 14.8 2005/12/23 21:26:29 bob1961 Exp $ (BRL)";
d41 2
d44 1
a44 1
# include <unistd.h>
d47 10
a56 1
# include <sys/types.h>
a57 2
#include <stdio.h>
#include <stdlib.h>
a64 5
#ifdef _WIN32
#  include <winsock.h>
#  include <fcntl.h>
#endif

@


14.9.2.1
log
@update from HEAD
@
text
@d36 1
a36 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/fb/pix-fb.c,v 14.9 2006/01/18 06:46:15 brlcad Exp $ (BRL)";
a40 2
#include <stdio.h>
#include <stdlib.h>
d42 1
a42 1
#  include <unistd.h>
d45 1
a45 10
#  include <sys/types.h>
#endif
#ifdef HAVE_SYS_STAT_H
#  include <sys/stat.h>
#endif
#ifdef HAVE_FCNTL_H
#  include <fcntl.h>
#endif
#ifdef _WIN32
#  include <winsock.h>
d47 2
d56 5
@


14.8
log
@Merge of bobWinPort
@
text
@d4 1
a4 1
 * Copyright (C) 1986-2005 United States Government as represented by
d36 1
a36 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/fb/pix-fb.c,v 14.7 2005/10/23 04:44:30 brlcad Exp $ (BRL)";
@


14.7
log
@trailing ws
@
text
@d36 1
a36 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/fb/pix-fb.c,v 14.6 2005/09/21 18:55:36 brlcad Exp $ (BRL)";
d54 7
d185 3
d209 3
d229 4
a232 2
	if( (fbp = fb_open( framebuffer, scr_width, scr_height )) == NULL )
		exit(12);
d279 1
d379 2
@


14.6
log
@needs bu.h for bu_getopt
@
text
@d23 1
a23 1
 *  
d25 1
a25 1
 *  
d28 1
a28 1
 *  
d33 1
a33 1
 *  
d36 1
a36 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/fb/pix-fb.c,v 14.5 2005/09/21 17:17:18 brlcad Exp $ (BRL)";
d378 1
a378 1
	
@


14.5
log
@use bu_optarg, bu_optind and bu_getopt
@
text
@d36 1
a36 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/fb/pix-fb.c,v 14.4 2005/01/30 20:30:21 brlcad Exp $ (BRL)";
d51 1
@


14.4
log
@update copyright to 2005
@
text
@d36 1
a36 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/fb/pix-fb.c,v 14.3 2004/12/21 06:38:19 morrison Exp $ (BRL)";
d94 1
a94 1
	while ( (c = getopt( argc, argv, "1m:ahiczF:s:w:n:x:y:X:Y:S:W:N:" )) != EOF )  {
d100 1
a100 1
			multiple_lines = atoi(optarg);
d121 1
a121 1
			framebuffer = optarg;
d125 1
a125 1
			file_height = file_width = atoi(optarg);
d129 1
a129 1
			file_width = atoi(optarg);
d133 1
a133 1
			file_height = atoi(optarg);
d137 1
a137 1
			file_xoff = atoi(optarg);
d140 1
a140 1
			file_yoff = atoi(optarg);
d143 1
a143 1
			scr_xoff = atoi(optarg);
d146 1
a146 1
			scr_yoff = atoi(optarg);
d149 1
a149 1
			scr_height = scr_width = atoi(optarg);
d152 1
a152 1
			scr_width = atoi(optarg);
d155 1
a155 1
			scr_height = atoi(optarg);
d163 1
a163 1
	if( optind >= argc )  {
d169 1
a169 1
		file_name = argv[optind];
d180 1
a180 1
	if ( argc > ++optind )
@


14.4.6.1
log
@merge changes from HEAD aka rel-7-6-4 to the rel-7-6-branch just in case someone peeks a gander or tries to continue/build the branch
@
text
@d23 1
a23 1
 *
d25 1
a25 1
 *
d28 1
a28 1
 *
d33 1
a33 1
 *
d36 1
a36 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
a50 1
#include "bu.h"
d94 1
a94 1
	while ( (c = bu_getopt( argc, argv, "1m:ahiczF:s:w:n:x:y:X:Y:S:W:N:" )) != EOF )  {
d100 1
a100 1
			multiple_lines = atoi(bu_optarg);
d121 1
a121 1
			framebuffer = bu_optarg;
d125 1
a125 1
			file_height = file_width = atoi(bu_optarg);
d129 1
a129 1
			file_width = atoi(bu_optarg);
d133 1
a133 1
			file_height = atoi(bu_optarg);
d137 1
a137 1
			file_xoff = atoi(bu_optarg);
d140 1
a140 1
			file_yoff = atoi(bu_optarg);
d143 1
a143 1
			scr_xoff = atoi(bu_optarg);
d146 1
a146 1
			scr_yoff = atoi(bu_optarg);
d149 1
a149 1
			scr_height = scr_width = atoi(bu_optarg);
d152 1
a152 1
			scr_width = atoi(bu_optarg);
d155 1
a155 1
			scr_height = atoi(bu_optarg);
d163 1
a163 1
	if( bu_optind >= argc )  {
d169 1
a169 1
		file_name = argv[bu_optind];
d180 1
a180 1
	if ( argc > ++bu_optind )
d377 1
a377 1

@


14.4.2.1
log
@Mods for windows port
@
text
@d36 1
a36 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/fb/pix-fb.c,v 14.4 2005/01/30 20:30:21 brlcad Exp $ (BRL)";
a50 1
#include "bu.h"
a52 7
#include "pkg.h"

#ifdef _WIN32
#  include <winsock.h>
#  include <fcntl.h>
#endif

d94 1
a94 1
	while ( (c = bu_getopt( argc, argv, "1m:ahiczF:s:w:n:x:y:X:Y:S:W:N:" )) != EOF )  {
d100 1
a100 1
			multiple_lines = atoi(bu_optarg);
d121 1
a121 1
			framebuffer = bu_optarg;
d125 1
a125 1
			file_height = file_width = atoi(bu_optarg);
d129 1
a129 1
			file_width = atoi(bu_optarg);
d133 1
a133 1
			file_height = atoi(bu_optarg);
d137 1
a137 1
			file_xoff = atoi(bu_optarg);
d140 1
a140 1
			file_yoff = atoi(bu_optarg);
d143 1
a143 1
			scr_xoff = atoi(bu_optarg);
d146 1
a146 1
			scr_yoff = atoi(bu_optarg);
d149 1
a149 1
			scr_height = scr_width = atoi(bu_optarg);
d152 1
a152 1
			scr_width = atoi(bu_optarg);
d155 1
a155 1
			scr_height = atoi(bu_optarg);
d163 1
a163 1
	if( bu_optind >= argc )  {
d169 1
a169 1
		file_name = argv[bu_optind];
a176 3
#ifdef _WIN32
		_setmode(infd, _O_BINARY);
#endif
d180 1
a180 1
	if ( argc > ++bu_optind )
a197 3
	if (pkg_init() != 0)
	    exit(1);

d215 2
a216 4
	if ((fbp = fb_open( framebuffer, scr_width, scr_height)) == NULL) {
	    pkg_terminate();
	    exit(12);
	}
a262 1
		pkg_terminate();
a361 2

	pkg_terminate();
@


14.3
log
@remove the old copyright notice section
@
text
@d4 1
a4 1
 * Copyright (c) 1986-2004 United States Government as represented by
d36 1
a36 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/fb/pix-fb.c,v 14.2 2004/12/18 06:09:12 morrison Exp $ (BRL)";
@


14.2
log
@assign copyright and GPL license
@
text
@a33 3
 *  Copyright Notice -
 *	This software is Copyright (C) 1986-2004 by the United States Army.
 *	All rights reserved.
d36 1
a36 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/fb/pix-fb.c,v 14.1 2004/11/16 19:42:13 morrison Exp $ (BRL)";
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d1 22
a22 2
/*
 *  			P I X - F B . C
d39 1
a39 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/fb/pix-fb.c,v 1.5 2004/09/08 20:31:24 kermit Exp $ (BRL)";
@


1.5
log
@Added <stdlib.h> to fix implicit cast (for IA64 architecture).
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/fb/pix-fb.c,v 1.4 2004/08/02 23:01:47 morrison Exp $ (BRL)";
d398 10
@


1.4
log
@replace the wrapped config.h block with common.h
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/fb/pix-fb.c,v 1.3 2004/06/09 17:56:22 erikg Exp $ (BRL)";
a26 1
                                                                                                                                                                            
a29 1
                                                                                                                                                                            
d31 2
@


1.3
log
@fix missing header issues
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/fb/pix-fb.c,v 1.2 2004/06/08 22:04:12 morrison Exp $ (BRL)";
d22 1
a22 3
#ifdef HAVE_CONFIG_H
# include "config.h"
#endif
@


1.2
log
@obliterate externs.h
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
d26 8
a33 2


@


1.1
log
@Vast reorganization begins.  Sources moved from top-level directories into src/.
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/fb/pix-fb.c,v 11.9 2004/05/10 15:30:42 erikg Exp $ (BRL)";
a29 1
#include "externs.h"			/* For getopt */
@

