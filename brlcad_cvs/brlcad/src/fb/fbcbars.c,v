head	14.14;
access;
symbols
	rel-7-10-4:14.12
	STABLE:14.12.0.2
	stable-branch:14.4
	rel-7-10-2:14.12
	rel-7-10-0:14.11
	rel-7-8-4:14.9
	rel-7-8-2:14.9
	rel-7-8-0:14.9
	trimnurbs-branch:14.9.0.2
	help:14.9
	temp_tag:14.8
	bobWinPort-20051223-freeze:14.4
	postmerge-20051223-bobWinPort:14.8
	premerge-20051223-bobWinPort:14.8
	rel-7-6-6:14.8
	rel-7-6-4:14.8
	rel-7-6-2:14.5
	rel-7-6-branch:14.5.0.2
	rel-7-6-0:14.5
	rel-7-4-2:14.4
	rel-7-4-branch:14.4.0.4
	bobWinPort:14.4.0.2
	rel-7-4-0:14.4
	rel-7-2-6:14.4
	rel-7-2-4:14.4
	rel-7-2-2:14.4
	rel-7-2-0:14.4
	rel-7-0-4:14.3
	rel-7-0-2:14.3
	rel-7-0-1:14.3
	opensource-post:14.3
	opensource-pre:1.4
	rel-7-0-branch:1.4.0.2
	rel-7-0:1.4;
locks; strict;
comment	@ * @;


14.14
date	2007.11.21.20.49.07;	author erikgreenwald;	state Exp;
branches;
next	14.13;

14.13
date	2007.11.21.19.09.24;	author erikgreenwald;	state Exp;
branches;
next	14.12;

14.12
date	2007.07.26.01.13.53;	author brlcad;	state Exp;
branches;
next	14.11;

14.11
date	2007.01.23.01.13.27;	author brlcad;	state Exp;
branches;
next	14.10;

14.10
date	2007.01.20.14.36.48;	author brlcad;	state Exp;
branches;
next	14.9;

14.9
date	2006.01.18.06.46.15;	author brlcad;	state Exp;
branches;
next	14.8;

14.8
date	2005.10.23.04.44.30;	author brlcad;	state Exp;
branches;
next	14.7;

14.7
date	2005.09.21.19.00.27;	author brlcad;	state Exp;
branches;
next	14.6;

14.6
date	2005.09.21.17.17.18;	author brlcad;	state Exp;
branches;
next	14.5;

14.5
date	2005.08.21.13.51.43;	author brlcad;	state Exp;
branches
	14.5.2.1;
next	14.4;

14.4
date	2005.01.30.20.30.21;	author brlcad;	state Exp;
branches;
next	14.3;

14.3
date	2004.12.21.07.18.57;	author morrison;	state Exp;
branches;
next	14.2;

14.2
date	2004.12.18.06.09.12;	author morrison;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.13;	author morrison;	state Exp;
branches;
next	1.4;

1.4
date	2004.08.02.23.01.47;	author morrison;	state Exp;
branches;
next	1.3;

1.3
date	2004.06.09.17.56.22;	author erikg;	state Exp;
branches;
next	1.2;

1.2
date	2004.06.08.22.04.11;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.20.15.19.00;	author morrison;	state Exp;
branches;
next	;

14.5.2.1
date	2005.11.13.13.46.13;	author brlcad;	state Exp;
branches;
next	;


desc
@@


14.14
log
@pass bu_exit a NULL instead of an empty string
@
text
@/*                       F B C B A R S . C
 * BRL-CAD
 *
 * Copyright (c) 2004-2007 United States Government as represented by
 * the U.S. Army Research Laboratory.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * version 2.1 as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this file; see the file named COPYING for more
 * information.
 *
 */
/** @@file fbcbars.c
 *
 *  Program to make vertical color scales arranged horizontally on screen.
 *  The wonderful thing about standards is that there are so many to
 *  choose from:
 *	FCC/EBU		Full screen is FCC pattern
 *	EIA		Uses lower and upper patterns
 *	SMPTE		Uses three patterns
 *
 *  The lower portion of the screen will contain:
 *	-I, 100% white, Q, black
 *
 *  In SMPTE mode, the middle portion of the screen will contain:
 *	blue, black, magenta, black, cyan, black, 75% grey
 *
 *  The upper portion of the screen will contain:
 *	75% gray, yellow, cyan, green, magenta, red, blue
 *
 *  In EBU/FCC mode, the whole screen will contain:
 *	100% white, yellow, cyan, green, magenta, red, blue, black
 *
 *
 *  The reason for this program running directly to the framebuffer, rather
 *  than generating a pix(5) format file (like pixbackgnd(1)) is twofold:
 *	1)  Some framebuffers may have irregular shapes (like the SGI
 *	    3030 is "hi-res" mode.
 *	2)  This program will most often be used to place an image on
 *	    a framebuffer;  other processing of this image is likely
 *	    to be a rare event.
 *  Thus, this bundled version is more efficient, easier to use,
 *  and more likely to have the desired effect.
 *
 *  Author -
 *	Michael John Muuss
 *
 *  Original inspiration -
 *	"ikcolorbars" by Mike Pique, University of North Carolina.
 *
 *  Details on SMPTE and FCC patterns -
 *	"bars" by Doris Kochanek, National Film Board of Canada
 *
 */
#ifndef lint
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/fb/fbcbars.c,v 14.13 2007/11/21 19:09:24 erikgreenwald Exp $ (BRL)";
#endif

#include "common.h"

#ifdef HAVE_UNISTD_H
# include <unistd.h>
#endif
#include <stdlib.h>
#include <stdio.h>

#include "machine.h"
#include "bu.h"
#include "fb.h"

#define MAX_LINE	(8*1024)	/* Max pixels/line */
static unsigned char scanline[3*MAX_LINE];	/* 1 scanline pixel buffer */

static char	*framebuffer = NULL;

static int	scr_width = 0;
static int	scr_height = 0;

/*
 * "Since the relationship between RGB and the amplitude of YIQ in
 * the encoded signal depends on the encoder's setup value,
 * this must be defined below.  SETUP is normally 7.5 for NTSC.
 * The full luminance range is encoded into the range between
 * the setup level and 100 IRE, so Y values are effectively scaled
 * by (1-setup) when being converted to voltages.  I and Q are
 * scaled by the same amount to retain their relationship with Y.
 * To get -I and Q signals that are 40 IRE after encoding, we must
 * scale them by 1/(1-setup) before encoding."
 *
 *  "The -I and Q signals are not quite standard, since there is
 *  necessarily some luminance present when RGB is positive.
 *  They are designed to be 40 IRE P-P after encoding."
 *
 *	-- Doris Kochanek, National Film Board of Canada
 */

#define	SETUP		7.5			/* black setup; 7.5 IRE */
#define	COMP(x)		\
	(unsigned char)(((x) * 255.) / (1.0 - SETUP/100.0))	/* setup compensation */

static  RGBpixel fcc_all[8] = {
	/* 100% white */{255, 255, 255},
	/* yellow */	{191, 191, 0},
	/* cyan */	{0, 191, 191},
	/* green */	{0, 191, 0},
	/* magenta */	{191, 0, 191},
	/* red */	{191, 0, 0},
	/* blue */	{0, 0, 191},
	/* black */	{0, 0, 0}
};

/*
 *  SMPTE bars can be useful for aligning color demodulators
 */
static	RGBpixel smpte_middle[7] = {
	/* All bars at 75%, no blue, reversed side-to-side from eia_top */
	/* blue */	{0, 0, 191},
	/* black(red)*/	{0, 0, 0},
	/* magenta */	{191, 0, 191},
	/* black(green)*/{0, 0, 0},
	/* cyan */	{0, 191, 191},
	/* black(yellow)*/{0, 0, 0},
	/* 75% grey */ 	{191, 191, 191},
};

static  RGBpixel eia_top[7] = {
	/* All bars at 75% */
	/* grey */ 	{191, 191, 191},
	/* yel */	{191, 191, 0},
	/* cyan */	{0, 191, 191},
	/* green */	{0, 191, 0},
	/* magenta */	{191, 0, 191},
	/* red */	{191, 0, 0},
	/* blue */	{0, 0, 191}
};

static RGBpixel botpart[5] = {
#ifndef Floating_Initializers
	/* Most systems can't handle floating-point formulas as initializers */
	{ 0,		68,		114 },		/* 40 IRE -I */
	{ 255,		255,		255 },		/* 100% white */
	{ 69,		0,		129 },		/* 40 IRE Q */
	{ 0,		0,		0 },		/* black */
	{ 0,		0,		0 }		/* black */
#else
	{ 0,		COMP(0.2472),	COMP(0.4123) },	/* 40 IRE -I */
	{ 255,		255,		255 },		/* 100% white */
	{ COMP(0.2508),	0,		COMP(0.4670) },	/* 40 IRE Q */
	{ 0,		0,		0 },		/* black */
	{ 0,		0,		0 }		/* black */
#endif
};

static char usage[] = "\
Usage: fbcbars [-fs] [-h] [-F framebuffer]\n\
	[-S squarescrsize] [-W scr_width] [-N scr_height]\n\
	-f	FCC/EBU bars\n\
	-e	EIA bars\n\
	-s	SMPTE bars\n";

#define	M_EIA	0
#define M_FCC	1
#define M_SMPTE	2
int	mode = M_SMPTE;

int
get_args(int argc, register char **argv)
{
	register int c;

	while ( (c = bu_getopt( argc, argv, "efshF:S:W:N:" )) != EOF )  {
		switch( c )  {
		case 'e':
			mode = M_EIA;
			break;
		case 's':
			mode = M_SMPTE;
			break;
		case 'f':
			mode = M_FCC;
			break;
		case 'h':
			/* high-res */
			scr_height = scr_width = 1024;
			break;
		case 'F':
			framebuffer = bu_optarg;
			break;
		case 'S':
			scr_height = scr_width = atoi(bu_optarg);
			break;
		case 'W':
			scr_width = atoi(bu_optarg);
			break;
		case 'N':
			scr_height = atoi(bu_optarg);
			break;

		default:		/* '?' */
			return(0);
		}
	}

	if ( argc > ++bu_optind )
		(void)fprintf( stderr, "fbcbars: excess argument(s) ignored\n" );

	return(1);		/* OK */
}

int
main(int argc, char **argv)
{
	register int x, y;
	register FBIO *fbp;

	if ( !get_args( argc, argv ) )  {
		(void)fputs(usage, stderr);
		bu_exit( 1, NULL );
	}

	if( (fbp = fb_open( framebuffer, scr_width, scr_height )) == NULL )
		bu_exit(12, NULL);

	/* Get the screen size we were actually given */
	scr_width = fb_getwidth(fbp);
	scr_height = fb_getheight(fbp);

	/*
	 *  Operation is bottom-to-top.
	 */
	switch(mode)  {
	case M_FCC:
		for( x=0; x<scr_width; x++) {
			COPYRGB( &scanline[3*x], fcc_all[x*8/scr_width] );
		}
		for( y=0; y<scr_height; y++)
			fb_write( fbp, 0, y, scanline, scr_width );
		break;

	case M_EIA:
		/*
		 *  Build bottom line, and send it for 1/4th of the screen,
		 *  then build the top line, and fill the rest of the screen.
		 */
		for( x=0; x<scr_width; x++) {
			COPYRGB( &scanline[3*x], botpart[x*5/scr_width] );
		}
		for( y=0; y<(scr_height/4); y++)
			fb_write( fbp, 0, y, scanline, scr_width );

		for( x=0; x<scr_width; x++)  {
			COPYRGB( &scanline[3*x], eia_top[x*7/scr_width] );
		}
		for( ; y<scr_height; y++)
			fb_write( fbp, 0, y, scanline, scr_width );
		break;

	case M_SMPTE:
		/*
		 *  Build bottom line, and send it for 3/16th of the screen,
		 *  then send the SMPTE middle for 1/16th of the screen,
		 *  then build the top line, and fill the rest of the screen.
		 *  (Convert upper 1/4 of EIA -I white Q black to smpte)
		 */
		for( x=0; x<scr_width; x++) {
			COPYRGB( &scanline[3*x], botpart[x*5/scr_width] );
		}
		for( y=0; y<(scr_height*3/16); y++)
			fb_write( fbp, 0, y, scanline, scr_width );

		for( x=0; x<scr_width; x++) {
			COPYRGB( &scanline[3*x], smpte_middle[x*7/scr_width] );
		}
		for( ; y<(scr_height*4/16); y++)
			fb_write( fbp, 0, y, scanline, scr_width );

		for( x=0; x<scr_width; x++)  {
			COPYRGB( &scanline[3*x], eia_top[x*7/scr_width] );
		}
		for( ; y<scr_height; y++)
			fb_write( fbp, 0, y, scanline, scr_width );
		break;
	}
	fb_close(fbp);
	return(0);
}

/*
 * Local Variables:
 * mode: C
 * tab-width: 8
 * c-basic-offset: 4
 * indent-tabs-mode: t
 * End:
 * ex: shiftwidth=4 tabstop=8
 */
@


14.13
log
@exit->bu_exit where applicable
@
text
@d64 1
a64 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/fb/fbcbars.c,v 14.12 2007/07/26 01:13:53 brlcad Exp $ (BRL)";
d226 1
a226 1
		bu_exit( 1, "" );
d230 1
a230 1
		bu_exit(12, "");
@


14.12
log
@remove ephemeral data like phone numbers and addresses, including the misleading 'source' statements on code that is continually evolving and receiving contributions from many many sources
@
text
@d64 1
a64 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/fb/fbcbars.c,v 14.11 2007/01/23 01:13:27 brlcad Exp $ (BRL)";
d226 1
a226 1
		exit( 1 );
d230 1
a230 1
		exit(12);
@


14.11
log
@Sweeping license updates.  Documentation is fully relicensed to the BSD Documentation License (a minor variant of the FreeBSD Documentation License and BSD License).  All GPL code (mostly application code) is converted to the LGPL and now also specifically declares version 2.1, revoking the blank check to the FSF.  The intent of these sweeping changes are to simplify the licensing terms and increase overall flexibility of use, both externally (to users for their purposes) and internally (to allow application code to be migrated to libraries without creating GPL libraries).  As a collective work, BRL-CAD is now LGPL.
@
text
@a61 5
 *  Source -
 *	SECAD/VLD Computing Consortium, Bldg 394
 *	The U. S. Army Ballistic Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5066
 *
d64 1
a64 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/fb/fbcbars.c,v 14.10 2007/01/20 14:36:48 brlcad Exp $ (BRL)";
@


14.10
log
@update copyright to 2007
@
text
@d8 2
a9 3
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation; either version 2 of the
 * License, or (at your option) any later version.
d14 1
a14 1
 * General Public License for more details.
d16 2
a17 2
 * You should have received a copy of the GNU General Public License
 * along with this file; see the file named COPYING for more
d69 1
a69 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/fb/fbcbars.c,v 14.9 2006/01/18 06:46:15 brlcad Exp $ (BRL)";
@


14.9
log
@update copyright to 2006
@
text
@d4 1
a4 1
 * Copyright (c) 2004-2006 United States Government as represented by
d70 1
a70 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/fb/fbcbars.c,v 14.8 2005/10/23 04:44:30 brlcad Exp $ (BRL)";
@


14.8
log
@trailing ws
@
text
@d4 1
a4 1
 * Copyright (C) 2004-2005 United States Government as represented by
d70 1
a70 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/fb/fbcbars.c,v 14.7 2005/09/21 19:00:27 brlcad Exp $ (BRL)";
@


14.7
log
@needs bu.h for bu_getopt
@
text
@d23 1
a23 1
 *  
d53 1
a53 1
 *  
d67 1
a67 1
 *  
d70 1
a70 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/fb/fbcbars.c,v 14.6 2005/09/21 17:17:18 brlcad Exp $ (BRL)";
@


14.6
log
@use bu_optarg, bu_optind and bu_getopt
@
text
@d70 1
a70 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/fb/fbcbars.c,v 14.5 2005/08/21 13:51:43 brlcad Exp $ (BRL)";
d82 1
@


14.5
log
@add missing headers
@
text
@d70 1
a70 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/fb/fbcbars.c,v 14.4 2005/01/30 20:30:21 brlcad Exp $ (BRL)";
d184 1
a184 1
	while ( (c = getopt( argc, argv, "efshF:S:W:N:" )) != EOF )  {
d200 1
a200 1
			framebuffer = optarg;
d203 1
a203 1
			scr_height = scr_width = atoi(optarg);
d206 1
a206 1
			scr_width = atoi(optarg);
d209 1
a209 1
			scr_height = atoi(optarg);
d217 1
a217 1
	if ( argc > ++optind )
@


14.5.2.1
log
@merge changes from HEAD aka rel-7-6-4 to the rel-7-6-branch just in case someone peeks a gander or tries to continue/build the branch
@
text
@d23 1
a23 1
 *
d53 1
a53 1
 *
d67 1
a67 1
 *
d70 1
a70 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
a81 1
#include "bu.h"
d184 1
a184 1
	while ( (c = bu_getopt( argc, argv, "efshF:S:W:N:" )) != EOF )  {
d200 1
a200 1
			framebuffer = bu_optarg;
d203 1
a203 1
			scr_height = scr_width = atoi(bu_optarg);
d206 1
a206 1
			scr_width = atoi(bu_optarg);
d209 1
a209 1
			scr_height = atoi(bu_optarg);
d217 1
a217 1
	if ( argc > ++bu_optind )
@


14.4
log
@update copyright to 2005
@
text
@d70 1
a70 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/fb/fbcbars.c,v 14.3 2004/12/21 07:18:57 morrison Exp $ (BRL)";
d78 1
a78 1
                                                                                                                                                                            
@


14.3
log
@the significantly modified pd files are incorporated as new works and assigned copyright, so remove the old statement.
@
text
@d4 2
a5 2
 * Copyright (c) 2004 United States Government as represented by the
 * U.S. Army Research Laboratory.
d70 1
a70 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/fb/fbcbars.c,v 14.2 2004/12/18 06:09:12 morrison Exp $ (BRL)";
@


14.2
log
@assign copyright and GPL license
@
text
@a67 2
 *  Distribution Status -
 *	Public Domain, Distribution Unlimitied.
d70 1
a70 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/fb/fbcbars.c,v 14.1 2004/11/16 19:42:13 morrison Exp $ (BRL)";
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d1 22
a22 2
/*
 *  			F B C B A R S . C
d72 1
a72 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/fb/fbcbars.c,v 1.4 2004/08/02 23:01:47 morrison Exp $ (BRL)";
@


1.4
log
@replace the wrapped config.h block with common.h
@
text
@d52 1
a52 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/fb/fbcbars.c,v 1.3 2004/06/09 17:56:22 erikg Exp $ (BRL)";
d282 10
@


1.3
log
@fix missing header issues
@
text
@d52 1
a52 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/fb/fbcbars.c,v 1.2 2004/06/08 22:04:11 morrison Exp $ (BRL)";
d55 1
a55 3
#ifdef HAVE_CONFIG_H
# include "config.h"
#endif
@


1.2
log
@obliterate externs.h
@
text
@d52 1
a52 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
d59 4
a62 2


@


1.1
log
@Vast reorganization begins.  Sources moved from top-level directories into src/.
@
text
@d52 1
a52 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/fb/fbcbars.c,v 11.7 2004/05/10 15:30:42 erikg Exp $ (BRL)";
a63 1
#include "externs.h"		/* For getopt() */
@

