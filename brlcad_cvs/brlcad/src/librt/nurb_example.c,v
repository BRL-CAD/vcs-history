head	14.14;
access;
symbols
	rel-7-10-4:14.14
	STABLE:14.14.0.2
	stable-branch:14.6
	rel-7-10-2:14.14
	rel-7-10-0:14.14
	rel-7-8-4:14.11
	rel-7-8-2:14.10
	rel-7-8-0:14.10
	trimnurbs-branch:14.9.0.2
	help:14.9
	temp_tag:14.8
	bobWinPort-20051223-freeze:14.7
	postmerge-20051223-bobWinPort:14.8
	premerge-20051223-bobWinPort:14.8
	rel-7-6-6:14.8
	rel-7-6-4:14.8
	rel-7-6-2:14.7
	rel-7-6-branch:14.7.0.4
	rel-7-6-0:14.7
	rel-7-4-2:14.6
	rel-7-4-branch:14.6.0.2
	bobWinPort:14.7.0.2
	rel-7-4-0:14.6
	rel-7-2-6:14.6
	rel-7-2-4:14.6
	rel-7-2-2:14.6
	rel-7-2-0:14.6
	rel-7-0-4:14.5
	rel-7-0-2:14.5
	rel-7-0-1:14.5
	opensource-post:14.5
	opensource-pre:1.4
	rel-7-0-branch:1.4.0.2
	rel-7-0:1.4;
locks; strict;
comment	@ * @;


14.14
date	2007.01.23.01.13.38;	author brlcad;	state Exp;
branches;
next	14.13;

14.13
date	2007.01.21.04.45.45;	author brlcad;	state Exp;
branches;
next	14.12;

14.12
date	2007.01.20.14.36.55;	author brlcad;	state Exp;
branches;
next	14.11;

14.11
date	2006.09.16.02.04.25;	author lbutler;	state Exp;
branches;
next	14.10;

14.10
date	2006.03.24.23.30.59;	author brlcad;	state Exp;
branches;
next	14.9;

14.9
date	2006.01.18.06.46.17;	author brlcad;	state Exp;
branches
	14.9.2.1;
next	14.8;

14.8
date	2005.10.23.04.44.36;	author brlcad;	state Exp;
branches;
next	14.7;

14.7
date	2005.08.12.22.31.08;	author lbutler;	state Exp;
branches
	14.7.4.1;
next	14.6;

14.6
date	2005.01.30.20.31.03;	author brlcad;	state Exp;
branches;
next	14.5;

14.5
date	2004.12.21.07.18.58;	author morrison;	state Exp;
branches;
next	14.4;

14.4
date	2004.12.21.06.18.47;	author morrison;	state Exp;
branches;
next	14.3;

14.3
date	2004.12.21.05.45.24;	author morrison;	state Exp;
branches;
next	14.2;

14.2
date	2004.12.21.04.18.20;	author morrison;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.16;	author morrison;	state Exp;
branches;
next	1.4;

1.4
date	2004.10.04.17.07.31;	author morrison;	state Exp;
branches;
next	1.3;

1.3
date	2004.10.04.14.50.14;	author morrison;	state Exp;
branches;
next	1.2;

1.2
date	2004.08.02.23.01.49;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.20.15.20.07;	author morrison;	state Exp;
branches;
next	;

14.7.4.1
date	2005.11.13.13.46.17;	author brlcad;	state Exp;
branches;
next	;

14.9.2.1
date	2006.04.07.19.30.25;	author jlowenz;	state Exp;
branches;
next	;


desc
@@


14.14
log
@Sweeping license updates.  Documentation is fully relicensed to the BSD Documentation License (a minor variant of the FreeBSD Documentation License and BSD License).  All GPL code (mostly application code) is converted to the LGPL and now also specifically declares version 2.1, revoking the blank check to the FSF.  The intent of these sweeping changes are to simplify the licensing terms and increase overall flexibility of use, both externally (to users for their purposes) and internally (to allow application code to be migrated to libraries without creating GPL libraries).  As a collective work, BRL-CAD is now LGPL.
@
text
@/*                  N U R B _ E X A M P L E . C
 * BRL-CAD
 *
 * Copyright (c) 2004-2007 United States Government as represented by
 * the U.S. Army Research Laboratory.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * version 2.1 as published by the Free Software Foundation.
 *
 * This library is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this file; see the file named COPYING for more
 * information.
 */
/** @@addtogroup nurb */
/** @@{ */
/** @@file nurb_example.c
 *
 *  Author -
 *	Paul R. Stay
 *
 *  Source -
 *	The U. S. Army Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5068  USA
 *
 */
/** @@} */

#ifndef lint
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/librt/nurb_example.c,v 14.13 2007/01/21 04:45:45 brlcad Exp $ (ARL)";
#endif

#include "common.h"

#include <stdlib.h>
#include <stdio.h>
#include <math.h>
#include "machine.h"
#include "vmath.h"
#include "raytrace.h"
#include "nurb.h"
#include "plot3.h"


fastf_t grid[10][10][3];
fastf_t ngrid[10][10][3];


/* Interpoate the data using b-splines */
void
interpolate_data()
{
	struct face_g_snurb srf;
	struct face_g_snurb *srf2, *srf3;
	struct knot_vector new_kv;

	rt_nurb_sinterp( &srf, 4, (const fastf_t *)grid, 10, 10 );

#if 0
	/* Draw control mesh in blue */
	pl_color( stdout, 145, 145, 255 );
	rt_nurb_plot_snurb( stdout, &srf );
#endif

#if 0
	rt_nurb_reverse_srf( &srf );
	rt_nurb_kvnorm( &srf.u );
	rt_nurb_kvnorm( &srf.v );
#endif

	/* lets take a look at it.  Refine to 100 points in both directions. */
	rt_nurb_kvknot( &new_kv, srf.order[0], 0.0, 1.0, 100, (struct resource *)NULL);
	srf2 = (struct face_g_snurb *) rt_nurb_s_refine( &srf, 0, &new_kv, (struct resource *)NULL);
	srf3 = (struct face_g_snurb *) rt_nurb_s_refine( srf2, 1, &new_kv, (struct resource *)NULL);

	/* Draw refined mesh in yellow */
	pl_color( stdout, 200, 200, 50 );
	rt_nurb_plot_snurb( stdout, srf3 );
}

int main(int argc, char *argv[])
{

	fastf_t hscale;
	fastf_t v;
	int i, j;

	hscale = 2.5;

	/* generate a 10 x 10 grid of random height data */

	pl_color(stdout,155, 55, 55);

	for( i = 0; i < 10; i++)
		for( j = 0; j < 10; j++)
		{
			v = hscale * drand48() + 10.0;
			grid[i][j][0] = i;
			grid[i][j][1] = j;
			grid[i][j][2] = v;

			pd_3move( stdout,
			    grid[i][j][0],  grid[i][j][1], grid[i][j][2] - .14);
			pd_3cont( stdout,
			    grid[i][j][0], grid[i][j][1], grid[i][j][2] + .14);

			pd_3move( stdout,
			    grid[i][j][0] - .14, grid[i][j][1], grid[i][j][2]);
			pd_3cont( stdout,
			    grid[i][j][0] + .14, grid[i][j][1], grid[i][j][2] );

			pd_3move( stdout,
			    grid[i][j][0], grid[i][j][1]-.14, grid[i][j][2]);
			pd_3cont( stdout,
			    grid[i][j][0], grid[i][j][1]+.14, grid[i][j][2]);
		}

	interpolate_data();
}

/*
 * Local Variables:
 * mode: C
 * tab-width: 8
 * c-basic-offset: 4
 * indent-tabs-mode: t
 * End:
 * ex: shiftwidth=4 tabstop=8
 */
@


14.13
log
@ugh, what tedium.  put some effort towards cleaning up the doxygen labels and making the headers more consistent.  also exclusively using @@ for doxygen instead of \ to try to keep things more consistent.
@
text
@d9 1
a9 2
 * as published by the Free Software Foundation; either version 2 of
 * the License, or (at your option) any later version.
d14 1
a14 1
 * Library General Public License for more details.
d35 1
a35 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/librt/nurb_example.c,v 14.12 2007/01/20 14:36:55 brlcad Exp $ (ARL)";
@


14.12
log
@update copyright to 2007
@
text
@a20 1

d22 1
a22 2

/*@@{*/
d33 1
a33 1
/*@@}*/
d36 1
a36 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/librt/nurb_example.c,v 14.11 2006/09/16 02:04:25 lbutler Exp $ (ARL)";
@


14.11
log
@Doxygen updates
@
text
@d4 1
a4 1
 * Copyright (c) 2004-2006 United States Government as represented by
d38 1
a38 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/librt/nurb_example.c,v 14.10 2006/03/24 23:30:59 brlcad Exp $ (ARL)";
@


14.10
log
@quell more intel 9 compiler warnings, reorder interpolate_data() to avoid decl
@
text
@d22 1
a22 1
/** \addtogroup nurb */
d38 1
a38 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/librt/nurb_example.c,v 14.9 2006/01/18 06:46:17 brlcad Exp $ (ARL)";
@


14.9
log
@update copyright to 2006
@
text
@d38 1
a38 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/librt/nurb_example.c,v 14.8 2005/10/23 04:44:36 brlcad Exp $ (ARL)";
d43 1
d50 1
d57 32
a128 32
/* Interpoate the data using b-splines */

interpolate_data()
{
	struct face_g_snurb srf;
	struct face_g_snurb *srf2, *srf3;
	struct knot_vector new_kv;

	rt_nurb_sinterp( &srf, 4, (const fastf_t *)grid, 10, 10 );

#if 0
	/* Draw control mesh in blue */
	pl_color( stdout, 145, 145, 255 );
	rt_nurb_plot_snurb( stdout, &srf );
#endif

#if 0
	rt_nurb_reverse_srf( &srf );
	rt_nurb_kvnorm( &srf.u );
	rt_nurb_kvnorm( &srf.v );
#endif

	/* lets take a look at it.  Refine to 100 points in both directions. */
	rt_nurb_kvknot( &new_kv, srf.order[0], 0.0, 1.0, 100, (struct resource *)NULL);
	srf2 = (struct face_g_snurb *) rt_nurb_s_refine( &srf, 0, &new_kv, (struct resource *)NULL);
	srf3 = (struct face_g_snurb *) rt_nurb_s_refine( srf2, 1, &new_kv, (struct resource *)NULL);

	/* Draw refined mesh in yellow */
	pl_color( stdout, 200, 200, 50 );
	rt_nurb_plot_snurb( stdout, srf3 );
}

@


14.9.2.1
log
@update from HEAD
@
text
@d38 1
a38 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/librt/nurb_example.c,v 14.9 2006/01/18 06:46:17 brlcad Exp $ (ARL)";
a42 1
#include <stdlib.h>
a48 1
#include "plot3.h"
a54 32
/* Interpoate the data using b-splines */
void
interpolate_data()
{
	struct face_g_snurb srf;
	struct face_g_snurb *srf2, *srf3;
	struct knot_vector new_kv;

	rt_nurb_sinterp( &srf, 4, (const fastf_t *)grid, 10, 10 );

#if 0
	/* Draw control mesh in blue */
	pl_color( stdout, 145, 145, 255 );
	rt_nurb_plot_snurb( stdout, &srf );
#endif

#if 0
	rt_nurb_reverse_srf( &srf );
	rt_nurb_kvnorm( &srf.u );
	rt_nurb_kvnorm( &srf.v );
#endif

	/* lets take a look at it.  Refine to 100 points in both directions. */
	rt_nurb_kvknot( &new_kv, srf.order[0], 0.0, 1.0, 100, (struct resource *)NULL);
	srf2 = (struct face_g_snurb *) rt_nurb_s_refine( &srf, 0, &new_kv, (struct resource *)NULL);
	srf3 = (struct face_g_snurb *) rt_nurb_s_refine( srf2, 1, &new_kv, (struct resource *)NULL);

	/* Draw refined mesh in yellow */
	pl_color( stdout, 200, 200, 50 );
	rt_nurb_plot_snurb( stdout, srf3 );
}

d95 32
@


14.8
log
@trailing ws
@
text
@d4 1
a4 1
 * Copyright (C) 2004-2005 United States Government as represented by
d38 1
a38 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/librt/nurb_example.c,v 14.7 2005/08/12 22:31:08 lbutler Exp $ (ARL)";
@


14.7
log
@Doxygen changes
@
text
@d29 1
a29 1
 *  
d33 1
a33 1
 *  
d38 1
a38 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/librt/nurb_example.c,v 14.6 2005/01/30 20:31:03 brlcad Exp $ (ARL)";
@


14.7.4.1
log
@merge changes from HEAD aka rel-7-6-4 to the rel-7-6-branch just in case someone peeks a gander or tries to continue/build the branch
@
text
@d29 1
a29 1
 *
d33 1
a33 1
 *
d38 1
a38 1
static const char RCSid[] = "@@(#)$Header$ (ARL)";
@


14.6
log
@update copyright to 2005
@
text
@d21 4
a25 1
 *			E X A M P L E . C
d35 2
d38 1
a38 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/librt/nurb_example.c,v 14.5 2004/12/21 07:18:58 morrison Exp $ (ARL)";
@


14.5
log
@the significantly modified pd files are incorporated as new works and assigned copyright, so remove the old statement.
@
text
@d4 2
a5 2
 * Copyright (c) 2004 United States Government as represented by the
 * U.S. Army Research Laboratory.
d33 1
a33 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/librt/nurb_example.c,v 14.4 2004/12/21 06:18:47 morrison Exp $ (ARL)";
@


14.4
log
@they should have received a copy of the LGPL with LGPL'd files
@
text
@a30 2
 *  Distribution Status -
 *	Public Domain, Distribution Unlimited.
d33 1
a33 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/librt/nurb_example.c,v 14.3 2004/12/21 05:45:24 morrison Exp $ (ARL)";
@


14.3
log
@s/GNU Library General/GNU Lesser General/g
@
text
@d17 2
a18 2
 * You should have received a copy of the GNU General Public License
 * along with this file; see the file named COPYING for more
d35 1
a35 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/librt/nurb_example.c,v 14.2 2004/12/21 04:18:20 morrison Exp $ (ARL)";
@


14.2
log
@assign copyright and LGPL
@
text
@d8 1
a8 1
 * modify it under the terms of the GNU Library General Public License
d35 1
a35 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/librt/nurb_example.c,v 14.1 2004/11/16 19:42:16 morrison Exp $ (ARL)";
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d1 21
a21 1
/*
d35 1
a35 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/librt/nurb_example.c,v 1.4 2004/10/04 17:07:31 morrison Exp $ (ARL)";
@


1.4
log
@quell warnings
@
text
@d15 1
a15 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/librt/nurb_example.c,v 1.3 2004/10/04 14:50:14 morrison Exp $ (ARL)";
d103 10
@


1.3
log
@ansi
@
text
@d15 1
a15 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/librt/nurb_example.c,v 1.2 2004/08/02 23:01:49 morrison Exp $ (ARL)";
d80 1
a80 1
	rt_nurb_sinterp( &srf, 4, grid, 10, 10 );
d95 3
a97 3
	rt_nurb_kvknot( &new_kv, srf.order[0], 0.0, 1.0, 100);
	srf2 = (struct face_g_snurb *) rt_nurb_s_refine( &srf, 0, &new_kv);
	srf3 = (struct face_g_snurb *) rt_nurb_s_refine( srf2, 1, &new_kv);
@


1.2
log
@replace the wrapped config.h block with common.h
@
text
@d15 1
a15 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/librt/nurb_example.c,v 1.1 2004/05/20 15:20:07 morrison Exp $ (ARL)";
a19 2


d27 1
d31 2
a32 1
main()
@


1.1
log
@Vast reorganization begins.  Sources moved from top-level directories into src/.
@
text
@d15 1
a15 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/librt/nurb_example.c,v 11.4 2004/05/10 15:30:46 erikg Exp $ (ARL)";
d18 1
a18 3
#ifdef HAVE_CONFIG_H
# include "config.h"
#endif
@

