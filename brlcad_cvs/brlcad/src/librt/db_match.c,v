head	14.16;
access;
symbols
	rel-7-10-4:14.16
	STABLE:14.16.0.2
	stable-branch:14.8
	rel-7-10-2:14.16
	rel-7-10-0:14.16
	rel-7-8-4:14.12
	rel-7-8-2:14.11
	rel-7-8-0:14.11
	trimnurbs-branch:14.11.0.2
	help:14.11
	temp_tag:14.10
	bobWinPort-20051223-freeze:14.9
	postmerge-20051223-bobWinPort:14.10
	premerge-20051223-bobWinPort:14.10
	rel-7-6-6:14.10
	rel-7-6-4:14.10
	rel-7-6-2:14.9
	rel-7-6-branch:14.9.0.4
	rel-7-6-0:14.9
	rel-7-4-2:14.8
	rel-7-4-branch:14.8.0.2
	bobWinPort:14.9.0.2
	rel-7-4-0:14.8
	rel-7-2-6:14.8
	rel-7-2-4:14.8
	rel-7-2-2:14.8
	rel-7-2-0:14.8
	rel-7-0-4:14.7
	rel-7-0-2:14.7
	rel-7-0-1:14.7
	opensource-post:14.7
	opensource-pre:1.2
	rel-7-0-branch:1.2.0.2
	rel-7-0:1.2;
locks; strict;
comment	@ * @;


14.16
date	2007.01.27.01.41.39;	author brlcad;	state Exp;
branches;
next	14.15;

14.15
date	2007.01.23.01.13.36;	author brlcad;	state Exp;
branches;
next	14.14;

14.14
date	2007.01.21.04.45.43;	author brlcad;	state Exp;
branches;
next	14.13;

14.13
date	2007.01.20.14.36.54;	author brlcad;	state Exp;
branches;
next	14.12;

14.12
date	2006.09.16.02.04.24;	author lbutler;	state Exp;
branches;
next	14.11;

14.11
date	2006.01.18.06.46.17;	author brlcad;	state Exp;
branches;
next	14.10;

14.10
date	2005.10.23.04.44.35;	author brlcad;	state Exp;
branches;
next	14.9;

14.9
date	2005.08.12.22.31.07;	author lbutler;	state Exp;
branches
	14.9.4.1;
next	14.8;

14.8
date	2005.01.30.20.30.58;	author brlcad;	state Exp;
branches;
next	14.7;

14.7
date	2004.12.21.07.32.30;	author morrison;	state Exp;
branches;
next	14.6;

14.6
date	2004.12.21.06.58.43;	author morrison;	state Exp;
branches;
next	14.5;

14.5
date	2004.12.21.06.44.33;	author morrison;	state Exp;
branches;
next	14.4;

14.4
date	2004.12.21.06.18.45;	author morrison;	state Exp;
branches;
next	14.3;

14.3
date	2004.12.21.05.45.23;	author morrison;	state Exp;
branches;
next	14.2;

14.2
date	2004.12.21.04.18.20;	author morrison;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.15;	author morrison;	state Exp;
branches;
next	1.2;

1.2
date	2004.08.02.23.01.49;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.20.15.19.57;	author morrison;	state Exp;
branches;
next	;

14.9.4.1
date	2005.11.13.13.46.16;	author brlcad;	state Exp;
branches;
next	;


desc
@@


14.16
log
@ws. lots and lots of ws.  see sh/ws.sh for details (cases 'abcdeg').
@
text
@/*                      D B _ M A T C H . C
 * BRL-CAD
 *
 * Copyright (c) 1994-2007 United States Government as represented by
 * the U.S. Army Research Laboratory.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * version 2.1 as published by the Free Software Foundation.
 *
 * This library is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this file; see the file named COPYING for more
 * information.
 */
/** @@addtogroup dbio */
/** @@{ */
/** @@file db_match.c
 *
 * Functions -
 *	db_regexp_match		Determine if a string matches a regexp pattern
 *	db_regexp_match_all	Return a vls filled with all names matching
 *				the given pattern
 *	db_update_nref		Updates the d_nref fields of each member of
 *				the directory in the given database.
 *
 *  Author -
 *	Michael John Muuss
 *	Glenn Durfee
 *
 *  Source -
 *	The U. S. Army Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5068  USA
 */

#ifndef lint
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/librt/db_match.c,v 14.15 2007/01/23 01:13:36 brlcad Exp $ (ARL)";
#endif

#include "common.h"


#include <stdio.h>

#include "machine.h"
#include "vmath.h"
#include "db.h"
#include "raytrace.h"
#include "rtgeom.h"

#include "./debug.h"

/**
 *			D B _ R E G E X P _ M A T C H
 *
 *	If string matches pattern, return 1, else return 0
 *
 *	special characters:
 *		*	Matches any string including the null string.
 *		?	Matches any single character.
 *		[...]	Matches any one of the characters enclosed.
 *		-	May be used inside brackets to specify range
 *			(i.e. str[1-58] matches str1, str2, ... str5, str8)
 *		\	Escapes special characters.
 */
int
db_regexp_match(register const char *pattern, register const char *string)
{
	do {
		switch( *pattern ) {
		case '*':
			/* match any string including null string */
			++pattern;
			do {
				if( db_regexp_match( pattern, string ) )
					return( 1 );
			} while( *string++ != '\0' );
			return( 0 );
		case '?':
			/* match any character  */
			if( *string == '\0' )
				return( 0 );
			break;
		case '[':
			/* try to match one of the characters in brackets */
			++pattern;
			if( *pattern == '\0' )
				return( 0 );
			while( *pattern != *string ) {
				if( pattern[0] == '-' && pattern[-1] != '\\')
					if(	pattern[-1] <= *string &&
						pattern[-1] != '[' &&
						pattern[ 1] >= *string &&
						pattern[ 1] != ']' )
						break;
				++pattern;
				if( *pattern == '\0' || *pattern == ']' )
					return( 0 );
			}
			/* skip to next character after closing bracket */
			while( *pattern != '\0' && *pattern != ']' )
				++pattern;
			break;
		case '\\':
			/* escape special character */
			++pattern;
			/* compare characters */
			if( *pattern != *string )
				return( 0 );
			break;
		default:
			/* compare characters */
			if( *pattern != *string )
				return( 0 );
		}
		++string;
	} while( *pattern++ != '\0' );
	return( 1 );
}


/**
 *			D B _ R E G E X P _ M A T C H _ A L L
 *
 * Appends a list of all database matches to the given vls, or the pattern
 * itself if no matches are found.
 * Returns the number of matches.
 */

int
db_regexp_match_all(struct bu_vls *dest, struct db_i *dbip, const char *pattern)
{
	register int i, num;
	register struct directory *dp;

	for( i = num = 0; i < RT_DBNHASH; i++ )  {
		for( dp = dbip->dbi_Head[i]; dp != DIR_NULL; dp = dp->d_forw ){
			if( !db_regexp_match( pattern, dp->d_namep ) )
				continue;
			if( num == 0 )
				bu_vls_strcat( dest, dp->d_namep );
			else {
				bu_vls_strcat( dest, " " );
				bu_vls_strcat( dest, dp->d_namep );
			}
			++num;
		}
	}

	return num;
}


HIDDEN void
db_count_refs(struct db_i *dbip, struct rt_comb_internal *comb, union tree *comb_leaf, genptr_t dummy1, genptr_t dummy2, genptr_t dummy3)
{
	struct directory	*dp;

	RT_CK_TREE( comb_leaf );

	if( (dp=db_lookup(dbip, comb_leaf->tr_l.tl_name, LOOKUP_QUIET)) != DIR_NULL )
		++dp->d_nref;
}


/**
 *			D B _ U P D A T E _ N R E F
 *
 * Updates the d_nref fields (which count the number of times a given entry
 * is referenced by a COMBination in the database).
 *
 */

void
db_update_nref( struct db_i *dbip, struct resource *resp )
{
	register int			i;
	register struct directory      *dp;
	struct rt_db_internal		intern;
	struct rt_comb_internal	       *comb;

	RT_CK_DBI( dbip );
	RT_CK_RESOURCE(resp);

	/* First, clear any existing counts */
	for( i = 0; i < RT_DBNHASH; i++ )
		for( dp = dbip->dbi_Head[i]; dp != DIR_NULL; dp = dp->d_forw )
			dp->d_nref = 0;

	/* Examine all COMB nodes */
	for( i = 0; i < RT_DBNHASH; i++ )  {
		for( dp = dbip->dbi_Head[i]; dp != DIR_NULL; dp = dp->d_forw ){

			/* handle non-combination objects that reference other objects */
			if( dp->d_major_type == DB5_MAJORTYPE_BRLCAD ) {
				struct directory *dp2;

				if( dp->d_minor_type == DB5_MINORTYPE_BRLCAD_EXTRUDE ) {
					struct rt_extrude_internal *extr;

					if( rt_db_get_internal(&intern, dp, dbip, (fastf_t *)NULL, resp) < 0 )
						continue;
					extr = (struct rt_extrude_internal *)intern.idb_ptr;
					RT_EXTRUDE_CK_MAGIC( extr );
					if( extr->sketch_name ) {
						dp2 = db_lookup( dbip, extr->sketch_name, LOOKUP_QUIET );
						if( dp2 != DIR_NULL ) {
							dp2->d_nref++;
						}
					}
					rt_db_free_internal( &intern, resp );
				} else if( dp->d_minor_type ==  DB5_MINORTYPE_BRLCAD_DSP ) {
					struct rt_dsp_internal *dsp;

					if( rt_db_get_internal(&intern, dp, dbip, (fastf_t *)NULL, resp) < 0 )
						continue;
					dsp = (struct rt_dsp_internal *)intern.idb_ptr;
					RT_DSP_CK_MAGIC( dsp );
					if( dsp->dsp_datasrc == RT_DSP_SRC_OBJ && bu_vls_strlen( &dsp->dsp_name) > 0 ) {
						dp2 = db_lookup( dbip, bu_vls_addr( &dsp->dsp_name ), LOOKUP_QUIET );
						if( dp2 != DIR_NULL ) {
							dp2->d_nref++;
						}
					}
					rt_db_free_internal( &intern, resp );
				}
			}
			if( !(dp->d_flags & DIR_COMB) )
				continue;
			if( rt_db_get_internal(&intern, dp, dbip, (fastf_t *)NULL, resp) < 0 )
				continue;
			if( intern.idb_type != ID_COMBINATION )  {
				bu_log("NOTICE: %s was marked a combination, but isn't one?  Clearing flag\n",
					dp->d_namep);
				dp->d_flags &= ~DIR_COMB;
				rt_db_free_internal( &intern, resp );
				continue;
			}
			comb = (struct rt_comb_internal *)intern.idb_ptr;
			db_tree_funcleaf( dbip, comb, comb->tree,
					  db_count_refs, (genptr_t)NULL,
					  (genptr_t)NULL, (genptr_t)NULL );
			rt_db_free_internal( &intern, resp );
		}
	}
}

/** @@} */
/*
 * Local Variables:
 * mode: C
 * tab-width: 8
 * c-basic-offset: 4
 * indent-tabs-mode: t
 * End:
 * ex: shiftwidth=4 tabstop=8
 */
@


14.15
log
@Sweeping license updates.  Documentation is fully relicensed to the BSD Documentation License (a minor variant of the FreeBSD Documentation License and BSD License).  All GPL code (mostly application code) is converted to the LGPL and now also specifically declares version 2.1, revoking the blank check to the FSF.  The intent of these sweeping changes are to simplify the licensing terms and increase overall flexibility of use, both externally (to users for their purposes) and internally (to allow application code to be migrated to libraries without creating GPL libraries).  As a collective work, BRL-CAD is now LGPL.
@
text
@d41 1
a41 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/librt/db_match.c,v 14.14 2007/01/21 04:45:43 brlcad Exp $ (ARL)";
a46 1

a125 1

@


14.14
log
@ugh, what tedium.  put some effort towards cleaning up the doxygen labels and making the headers more consistent.  also exclusively using @@ for doxygen instead of \ to try to keep things more consistent.
@
text
@d9 1
a9 2
 * as published by the Free Software Foundation; either version 2 of
 * the License, or (at your option) any later version.
d14 1
a14 1
 * Library General Public License for more details.
d41 1
a41 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/librt/db_match.c,v 14.13 2007/01/20 14:36:54 brlcad Exp $ (ARL)";
@


14.13
log
@update copyright to 2007
@
text
@a20 1

d22 1
a22 2

/*@@{*/
d42 1
a42 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/librt/db_match.c,v 14.12 2006/09/16 02:04:24 lbutler Exp $ (ARL)";
d255 1
a255 1
/*@@}*/
@


14.12
log
@Doxygen updates
@
text
@d4 1
a4 1
 * Copyright (c) 1994-2006 United States Government as represented by
d44 1
a44 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/librt/db_match.c,v 14.11 2006/01/18 06:46:17 brlcad Exp $ (ARL)";
@


14.11
log
@update copyright to 2006
@
text
@d22 1
a22 1
/** \addtogroup db*/
a41 1
/*@@}*/
d44 1
a44 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/librt/db_match.c,v 14.10 2005/10/23 04:44:35 brlcad Exp $ (ARL)";
d257 1
@


14.10
log
@trailing ws
@
text
@d4 1
a4 1
 * Copyright (C) 1994-2005 United States Government as represented by
d45 1
a45 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/librt/db_match.c,v 14.9 2005/08/12 22:31:07 lbutler Exp $ (ARL)";
@


14.9
log
@Doxygen changes
@
text
@d37 1
a37 1
 *  
d45 1
a45 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/librt/db_match.c,v 14.8 2005/01/30 20:30:58 brlcad Exp $ (ARL)";
d139 1
a139 1
 
@


14.9.4.1
log
@merge changes from HEAD aka rel-7-6-4 to the rel-7-6-branch just in case someone peeks a gander or tries to continue/build the branch
@
text
@d37 1
a37 1
 *
d45 1
a45 1
static const char RCSid[] = "@@(#)$Header$ (ARL)";
d139 1
a139 1

@


14.8
log
@update copyright to 2005
@
text
@d21 4
d42 1
d45 1
a45 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/librt/db_match.c,v 14.7 2004/12/21 07:32:30 morrison Exp $ (ARL)";
d62 1
a62 1
/*
d132 1
a132 1
/*
d176 1
a176 1
/*
@


14.7
log
@tidy up a lil bit
@
text
@d4 1
a4 1
 * Copyright (c) 1994-2004 United States Government as represented by
d40 1
a40 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/librt/db_match.c,v 14.6 2004/12/21 06:58:43 morrison Exp $ (ARL)";
@


14.6
log
@remove the old copyright notice section as it's been supplanted (and copyright is now claimable in the us via assignmgent)
@
text
@a36 2
 *  
 *
d40 1
a40 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/librt/db_match.c,v 14.5 2004/12/21 06:44:33 morrison Exp $ (ARL)";
@


14.5
log
@remove the old distribution notice section
@
text
@a38 3
 *  Copyright Notice -
 *	This software is Copyright (C) 1994-2004 by the United States Army
 *	in all countries except the USA.  All rights reserved.
d42 1
a42 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/librt/db_match.c,v 14.4 2004/12/21 06:18:45 morrison Exp $ (ARL)";
@


14.4
log
@they should have received a copy of the LGPL with LGPL'd files
@
text
@a37 4
 *  Distribution Notice -
 *	Re-distribution of this software is restricted, as described in
 *	your "Statement of Terms and Conditions for the Release of
 *	The BRL-CAD Package" agreement.
d45 1
a45 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/librt/db_match.c,v 14.3 2004/12/21 05:45:23 morrison Exp $ (ARL)";
@


14.3
log
@s/GNU Library General/GNU Lesser General/g
@
text
@d17 2
a18 2
 * You should have received a copy of the GNU General Public License
 * along with this file; see the file named COPYING for more
d49 1
a49 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/librt/db_match.c,v 14.2 2004/12/21 04:18:20 morrison Exp $ (ARL)";
@


14.2
log
@assign copyright and LGPL
@
text
@d8 1
a8 1
 * modify it under the terms of the GNU Library General Public License
d49 1
a49 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/librt/db_match.c,v 14.1 2004/11/16 19:42:15 morrison Exp $ (ARL)";
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d1 21
a21 2
/*
 *			D B _ M A T C H . C
d49 1
a49 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/librt/db_match.c,v 1.2 2004/08/02 23:01:49 morrison Exp $ (ARL)";
@


1.2
log
@replace the wrapped config.h block with common.h
@
text
@d30 1
a30 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/librt/db_match.c,v 1.1 2004/05/20 15:19:57 morrison Exp $ (ARL)";
d242 10
@


1.1
log
@Vast reorganization begins.  Sources moved from top-level directories into src/.
@
text
@d30 1
a30 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/librt/db_match.c,v 1.16 2004/05/10 15:30:46 erikg Exp $ (ARL)";
d33 1
a33 3
#ifdef HAVE_CONFIG_H
# include "config.h"
#endif
@

