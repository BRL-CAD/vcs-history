head	14.16;
access;
symbols
	rel-7-10-4:14.15
	STABLE:14.15.0.2
	stable-branch:14.6
	rel-7-10-2:14.15
	rel-7-10-0:14.14
	rel-7-8-4:14.11
	rel-7-8-2:14.10
	rel-7-8-0:14.10
	trimnurbs-branch:14.9.0.2
	help:14.9
	temp_tag:14.8
	bobWinPort-20051223-freeze:14.7
	postmerge-20051223-bobWinPort:14.8
	premerge-20051223-bobWinPort:14.8
	rel-7-6-6:14.8
	rel-7-6-4:14.8
	rel-7-6-2:14.7
	rel-7-6-branch:14.7.0.4
	rel-7-6-0:14.7
	rel-7-4-2:14.6
	rel-7-4-branch:14.6.0.2
	bobWinPort:14.7.0.2
	rel-7-4-0:14.6
	rel-7-2-6:14.6
	rel-7-2-4:14.6
	rel-7-2-2:14.6
	rel-7-2-0:14.6
	rel-7-0-4:14.5
	rel-7-0-2:14.5
	rel-7-0-1:14.5
	opensource-post:14.5
	opensource-pre:1.7
	rel-7-0-branch:1.7.0.2
	rel-7-0:1.7;
locks; strict;
comment	@ * @;


14.16
date	2007.09.15.16.23.14;	author brlcad;	state Exp;
branches;
next	14.15;

14.15
date	2007.07.26.01.13.57;	author brlcad;	state Exp;
branches;
next	14.14;

14.14
date	2007.01.23.01.13.39;	author brlcad;	state Exp;
branches;
next	14.13;

14.13
date	2007.01.21.04.45.45;	author brlcad;	state Exp;
branches;
next	14.12;

14.12
date	2007.01.20.14.36.55;	author brlcad;	state Exp;
branches;
next	14.11;

14.11
date	2006.09.16.02.04.26;	author lbutler;	state Exp;
branches;
next	14.10;

14.10
date	2006.03.24.23.21.34;	author brlcad;	state Exp;
branches;
next	14.9;

14.9
date	2006.01.18.06.46.17;	author brlcad;	state Exp;
branches
	14.9.2.1;
next	14.8;

14.8
date	2005.10.23.04.44.36;	author brlcad;	state Exp;
branches;
next	14.7;

14.7
date	2005.08.12.22.31.08;	author lbutler;	state Exp;
branches
	14.7.4.1;
next	14.6;

14.6
date	2005.01.30.20.31.03;	author brlcad;	state Exp;
branches;
next	14.5;

14.5
date	2004.12.21.06.38.21;	author morrison;	state Exp;
branches;
next	14.4;

14.4
date	2004.12.21.06.18.48;	author morrison;	state Exp;
branches;
next	14.3;

14.3
date	2004.12.21.05.45.24;	author morrison;	state Exp;
branches;
next	14.2;

14.2
date	2004.12.21.04.18.21;	author morrison;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.16;	author morrison;	state Exp;
branches;
next	1.7;

1.7
date	2004.09.20.06.01.40;	author morrison;	state Exp;
branches;
next	1.6;

1.6
date	2004.09.03.23.30.58;	author morrison;	state Exp;
branches;
next	1.5;

1.5
date	2004.08.03.20.42.29;	author morrison;	state Exp;
branches;
next	1.4;

1.4
date	2004.08.02.23.01.49;	author morrison;	state Exp;
branches;
next	1.3;

1.3
date	2004.06.08.19.57.55;	author morrison;	state Exp;
branches;
next	1.2;

1.2
date	2004.06.04.05.56.59;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.20.15.20.10;	author morrison;	state Exp;
branches;
next	;

14.7.4.1
date	2005.11.13.13.46.17;	author brlcad;	state Exp;
branches;
next	;

14.9.2.1
date	2006.04.07.19.30.25;	author jlowenz;	state Exp;
branches;
next	;


desc
@@


14.16
log
@more c89 embracing.  c89 provides string.h for all of the various str*() and mem*() functions, so remove the check for its presence.  there is still likely to be work required for strict c89 conformance for the various bsd strings.h functions that may be in use.
@
text
@/*                     R E G I O N F I X . C
 * BRL-CAD
 *
 * Copyright (c) 1989-2007 United States Government as represented by
 * the U.S. Army Research Laboratory.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * version 2.1 as published by the Free Software Foundation.
 *
 * This library is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this file; see the file named COPYING for more
 * information.
 */
/** @@addtogroup librt */
/** @@{ */
/** @@file regionfix.c
 *
 *  Subroutines for adjusting old GIFT-style region-IDs,
 *  to take into account the presence of instancing.
 *
 *  Author -
 *	Michael John Muuss
 *
 */
/** @@} */

#ifndef lint
static const char RCSregionfix[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/librt/regionfix.c,v 14.15 2007/07/26 01:13:57 brlcad Exp $ (BRL)";
#endif

#include "common.h"

#include <stdlib.h>
#include <sys/types.h>
#include <stdio.h>
#include <ctype.h>
#include <string.h>

#if BUILD_REGEX
#  include "regex.h"
#elif defined(HAVE_REGEX_H)
#  include <regex.h>
#endif

#include "machine.h"
#include "vmath.h"
#include "raytrace.h"

#include "./debug.h"


/*
 *			R T_ R E G I O N F I X
 *
 *  Apply any deltas to reg_regionid values
 *  to allow old applications that use the reg_regionid number
 *  to distinguish between different instances of the same
 *  prototype region.
 *
 *  Called once, from rt_prep(), before raytracing begins.
 */
void
rt_regionfix(struct rt_i *rtip)
{
	FILE	*fp;
	char	*file;
	char	*line;
	char	*tabp;
	int	linenum = 0;
	register struct region	*rp;
	int	ret;
	int	oldid;
	int	newid;
	struct bu_vls	name;

	RT_CK_RTI(rtip);

	/*  If application has provided an alternative file name
	 *  before rt_prep() was called, then use that.
	 *  Otherwise, replace ".g" suffix on database name
	 *  with ".regexp".
	 */
	bu_vls_init(&name);
	file = rtip->rti_region_fix_file;
	if( file == (char *)NULL )  {
		bu_vls_strcpy( &name, rtip->rti_dbip->dbi_filename );
		if( (tabp = strrchr( bu_vls_addr(&name), '.' )) != NULL )  {
			/* Chop off "." and suffix */
			bu_vls_trunc( &name, tabp-bu_vls_addr(&name) );
		}
		bu_vls_strcat( &name, ".regexp" );
		file = bu_vls_addr(&name);
	}

	if( (fp = fopen( file, "r" )) == NULL )	 {
		if( rtip->rti_region_fix_file ) perror(file);
		bu_vls_free(&name);
		return;
	}
	bu_log("librt/rt_regionfix(%s):  Modifying instanced region-ids.\n", file);

	while( (line = rt_read_cmd( fp )) != (char *) 0 )  {
		regex_t	re_space;
		linenum++;
		/*  For now, establish a simple format:
		 *  regexp TAB [more_white_space] formula SEMICOLON
		 */
		if( (tabp = strchr( line, '\t' )) == (char *)0 )  {
			bu_log("%s: missing TAB on line %d:\n%s\n", file, linenum, line );
			continue;		/* just ignore it */
		}
		*tabp++ = '\0';
		while( *tabp && isspace( *tabp ) )  tabp++;
		if( (ret = regcomp(&re_space,line,0)) != 0 )  {
			bu_log("%s: line %d, regcomp error '%d'\n", file, line, ret );
			continue;		/* just ignore it */
		}

		for( BU_LIST_FOR( rp, region, &(rtip->HeadRegion) ) )  {
			ret = regexec(&re_space, (char *)rp->reg_name, 0, 0,0);
			if(RT_G_DEBUG&DEBUG_INSTANCE)  {
				bu_log("'%s' %s '%s'\n", line,
					ret==1 ? "==" : "!=",
					rp->reg_name);
			}
			if( (ret) == 0  )
				continue;	/* didn't match */
			if( ret == -1 )  {
				bu_log("%s: line %d, invalid regular expression\n", file, linenum);
				break;		/* on to next RE */
			}
			/*
			 *  RE matched this name, perform indicated operation
			 *  For now, choices are limited.  Later this might
			 *  become an interpreted expression.  For now:
			 *	99	replace old region id with "num"
			 *	+99	increment old region id with "num"
			 *		(which may itself be a negative number)
			 *	+uses	increment old region id by the
			 *		current instance (use) count.
			 */
			oldid = rp->reg_regionid;
			if( strcmp( tabp, "+uses" ) == 0  )  {
				newid = oldid + rp->reg_instnum;
			} else if( *tabp == '+' )  {
				newid = oldid + atoi( tabp+1 );
			} else {
				newid = atoi( tabp );
				if( newid == 0 )  bu_log("%s, line %d Warning:  new id = 0\n", file, linenum );
			}
			if(RT_G_DEBUG&DEBUG_INSTANCE)  {
				bu_log("%s instance %d:  region id changed from %d to %d\n",
					rp->reg_name, rp->reg_instnum,
					oldid, newid );
			}
			rp->reg_regionid = newid;
		}
#if HAVE_REGFREE
		regfree(&re_space);
#endif
		bu_free( line, "reg_expr line");
	}
	fclose( fp );
	bu_vls_free(&name);
}

/*
 * Local Variables:
 * mode: C
 * tab-width: 8
 * c-basic-offset: 4
 * indent-tabs-mode: t
 * End:
 * ex: shiftwidth=4 tabstop=8
 */
@


14.15
log
@remove ephemeral data like phone numbers and addresses, including the misleading 'source' statements on code that is continually evolving and receiving contributions from many many sources
@
text
@d34 1
a34 1
static const char RCSregionfix[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/librt/regionfix.c,v 14.14 2007/01/23 01:13:39 brlcad Exp $ (BRL)";
d43 2
a49 5
#ifdef HAVE_STRING_H
#  include <string.h>
#else
#  include <strings.h>
#endif
@


14.14
log
@Sweeping license updates.  Documentation is fully relicensed to the BSD Documentation License (a minor variant of the FreeBSD Documentation License and BSD License).  All GPL code (mostly application code) is converted to the LGPL and now also specifically declares version 2.1, revoking the blank check to the FSF.  The intent of these sweeping changes are to simplify the licensing terms and increase overall flexibility of use, both externally (to users for their purposes) and internally (to allow application code to be migrated to libraries without creating GPL libraries).  As a collective work, BRL-CAD is now LGPL.
@
text
@a29 5
 *  Source -
 *	SECAD/VLD Computing Consortium, Bldg 394
 *	The U. S. Army Ballistic Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5066
 *
d34 1
a34 1
static const char RCSregionfix[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/librt/regionfix.c,v 14.13 2007/01/21 04:45:45 brlcad Exp $ (BRL)";
@


14.13
log
@ugh, what tedium.  put some effort towards cleaning up the doxygen labels and making the headers more consistent.  also exclusively using @@ for doxygen instead of \ to try to keep things more consistent.
@
text
@d9 1
a9 2
 * as published by the Free Software Foundation; either version 2 of
 * the License, or (at your option) any later version.
d14 1
a14 1
 * Library General Public License for more details.
d39 1
a39 1
static const char RCSregionfix[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/librt/regionfix.c,v 14.12 2007/01/20 14:36:55 brlcad Exp $ (BRL)";
@


14.12
log
@update copyright to 2007
@
text
@a20 1

d22 1
a22 2
/*@@{*/

d24 1
d37 1
a37 1
/*@@}*/
d40 1
a40 1
static const char RCSregionfix[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/librt/regionfix.c,v 14.11 2006/09/16 02:04:26 lbutler Exp $ (BRL)";
@


14.11
log
@Doxygen updates
@
text
@d4 1
a4 1
 * Copyright (c) 1989-2006 United States Government as represented by
d41 1
a41 1
static const char RCSregionfix[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/librt/regionfix.c,v 14.10 2006/03/24 23:21:34 brlcad Exp $ (BRL)";
@


14.10
log
@lots of intel 9 for altix compiler warning quellings
@
text
@d22 1
a22 1
/** \addtogroup librt */
d41 1
a41 1
static const char RCSregionfix[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/librt/regionfix.c,v 14.9 2006/01/18 06:46:17 brlcad Exp $ (BRL)";
@


14.9
log
@update copyright to 2006
@
text
@d41 1
a41 1
static const char RCSregionfix[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/librt/regionfix.c,v 14.8 2005/10/23 04:44:36 brlcad Exp $ (BRL)";
d46 1
d56 1
a56 1
#include <string.h>
d58 1
a58 1
#include <strings.h>
d67 1
@


14.9.2.1
log
@update from HEAD
@
text
@d41 1
a41 1
static const char RCSregionfix[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/librt/regionfix.c,v 14.9 2006/01/18 06:46:17 brlcad Exp $ (BRL)";
a45 1
#include <stdlib.h>
d55 1
a55 1
#  include <string.h>
d57 1
a57 1
#  include <strings.h>
a65 1

@


14.8
log
@trailing ws
@
text
@d4 1
a4 1
 * Copyright (C) 1989-2005 United States Government as represented by
d41 1
a41 1
static const char RCSregionfix[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/librt/regionfix.c,v 14.7 2005/08/12 22:31:08 lbutler Exp $ (BRL)";
@


14.7
log
@Doxygen changes
@
text
@d31 1
a31 1
 *  
d36 1
a36 1
 *  
d41 1
a41 1
static const char RCSregionfix[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/librt/regionfix.c,v 14.6 2005/01/30 20:31:03 brlcad Exp $ (BRL)";
d132 1
a132 1
		
@


14.7.4.1
log
@merge changes from HEAD aka rel-7-6-4 to the rel-7-6-branch just in case someone peeks a gander or tries to continue/build the branch
@
text
@d31 1
a31 1
 *
d36 1
a36 1
 *
d41 1
a41 1
static const char RCSregionfix[] = "@@(#)$Header$ (BRL)";
d132 1
a132 1

@


14.6
log
@update copyright to 2005
@
text
@d21 4
a25 1
 *
d38 2
d41 1
a41 1
static const char RCSregionfix[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/librt/regionfix.c,v 14.5 2004/12/21 06:38:21 morrison Exp $ (BRL)";
@


14.5
log
@remove the old copyright notice section
@
text
@d4 1
a4 1
 * Copyright (c) 1989-2004 United States Government as represented by
d36 1
a36 1
static const char RCSregionfix[] = "@@(#)$Header: /cvs/brlcad/src/librt/regionfix.c,v 14.4 2004/12/21 06:18:48 morrison Exp $ (BRL)";
@


14.4
log
@they should have received a copy of the LGPL with LGPL'd files
@
text
@a33 3
 *  Copyright Notice -
 *	This software is Copyright (C) 1989-2004 by the United States Army.
 *	All rights reserved.
d36 1
a36 1
static const char RCSregionfix[] = "@@(#)$Header: /cvs/brlcad/src/librt/regionfix.c,v 14.3 2004/12/21 05:45:24 morrison Exp $ (BRL)";
@


14.3
log
@s/GNU Library General/GNU Lesser General/g
@
text
@d17 2
a18 2
 * You should have received a copy of the GNU General Public License
 * along with this file; see the file named COPYING for more
d39 1
a39 1
static const char RCSregionfix[] = "@@(#)$Header: /cvs/brlcad/src/librt/regionfix.c,v 14.2 2004/12/21 04:18:21 morrison Exp $ (BRL)";
@


14.2
log
@assign copyright and LGPL
@
text
@d8 1
a8 1
 * modify it under the terms of the GNU Library General Public License
d39 1
a39 1
static const char RCSregionfix[] = "@@(#)$Header: /cvs/brlcad/src/librt/regionfix.c,v 14.1 2004/11/16 19:42:16 morrison Exp $ (BRL)";
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d1 21
a21 2
/*
 *			R E G I O N F I X
d39 1
a39 1
static const char RCSregionfix[] = "@@(#)$Header: /cvs/brlcad/src/librt/regionfix.c,v 1.7 2004/09/20 06:01:40 morrison Exp $ (BRL)";
@


1.7
log
@if we build regex, use local header. otherwise, use the system header.
@
text
@d20 1
a20 1
static const char RCSregionfix[] = "@@(#)$Header: /cvs/brlcad/src/librt/regionfix.c,v 1.6 2004/09/03 23:30:58 morrison Exp $ (BRL)";
d159 10
@


1.6
log
@USE_STRING_H is no more.. it's HAVE_STRING_H
@
text
@d20 1
a20 1
static const char RCSregionfix[] = "@@(#)$Header: /cvs/brlcad/src/librt/regionfix.c,v 1.5 2004/08/03 20:42:29 morrison Exp $ (BRL)";
a24 2


d28 3
a30 4
#if HAVE_REGEX_H
#if defined(WIN32)
#  include <brlregex.h>
#else
a31 1
#endif
@


1.5
log
@apply Bob's provided patches from 20040630.  this includes itcl namespace scoping, windows DLL exporting, and wdb arb edit support
@
text
@d20 1
a20 1
static const char RCSregionfix[] = "@@(#)$Header: /cvs/brlcad/src/librt/regionfix.c,v 1.3 2004/06/08 19:57:55 morrison Exp $ (BRL)";
d37 1
a37 1
#ifdef USE_STRING_H
@


1.4
log
@replace the wrapped config.h block with common.h
@
text
@d27 1
d31 5
a35 1
#include <regex.h>
@


1.3
log
@bye bye externs.h
@
text
@d20 1
a20 1
static const char RCSregionfix[] = "@@(#)$Header$ (BRL)";
d23 1
a23 3
#ifdef HAVE_CONFIG_H
# include "config.h"
#endif
@


1.2
log
@obliterated USE_REGCOMP and archaic reg_exec/re_comp support since if they don't have regexec/regcomp, it is provided for them.  -- now should only need to check for header.
@
text
@a41 1
#include "externs.h"
@


1.1
log
@Vast reorganization begins.  Sources moved from top-level directories into src/.
@
text
@d20 1
a20 1
static const char RCSregionfix[] = "@@(#)$Header: /cvs/brlcad/librt/regionfix.c,v 11.14 2004/05/10 15:30:47 erikg Exp $ (BRL)";
d31 1
a31 1
#if USE_REGCOMP
a97 1
#if USE_REGCOMP
a98 1
#endif
a108 1
#if USE_REGCOMP
a112 9
#else
		{
			char	*err;
			if( (err = re_comp(line)) != (char *)0 )  {
				bu_log("%s: line %d, re_comp error '%s'\n", file, line, err );
				continue;		/* just ignore it */
			}
		}
#endif
a114 1
#if USE_REGCOMP
a115 3
#else				      
			ret = re_exec((char *)rp->reg_name);
#endif
d153 1
a153 1
#if USE_REGCOMP
@

