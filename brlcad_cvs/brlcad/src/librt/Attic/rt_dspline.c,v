head	14.16;
access;
symbols
	stable-branch:14.6
	rel-7-8-4:14.11
	rel-7-8-2:14.10
	rel-7-8-0:14.10
	trimnurbs-branch:14.10.0.2
	help:14.10
	temp_tag:14.8
	bobWinPort-20051223-freeze:14.7
	postmerge-20051223-bobWinPort:14.8
	premerge-20051223-bobWinPort:14.8
	rel-7-6-6:14.8
	rel-7-6-4:14.8
	rel-7-6-2:14.7
	rel-7-6-branch:14.7.0.4
	rel-7-6-0:14.7
	rel-7-4-2:14.6
	rel-7-4-branch:14.6.0.2
	bobWinPort:14.7.0.2
	rel-7-4-0:14.6
	rel-7-2-6:14.6
	rel-7-2-4:14.6
	rel-7-2-2:14.6
	rel-7-2-0:14.6
	rel-7-0-4:14.5
	rel-7-0-2:14.5
	rel-7-0-1:14.5
	opensource-post:14.5
	opensource-pre:1.3
	rel-7-0-branch:1.3.0.2
	rel-7-0:1.3;
locks; strict;
comment	@ * @;


14.16
date	2007.02.20.03.17.09;	author brlcad;	state dead;
branches;
next	14.15;

14.15
date	2007.01.27.01.41.42;	author brlcad;	state Exp;
branches;
next	14.14;

14.14
date	2007.01.23.01.13.39;	author brlcad;	state Exp;
branches;
next	14.13;

14.13
date	2007.01.21.04.45.45;	author brlcad;	state Exp;
branches;
next	14.12;

14.12
date	2007.01.20.14.36.55;	author brlcad;	state Exp;
branches;
next	14.11;

14.11
date	2006.09.16.02.04.26;	author lbutler;	state Exp;
branches;
next	14.10;

14.10
date	2006.02.27.08.20.11;	author brlcad;	state Exp;
branches;
next	14.9;

14.9
date	2006.01.18.06.46.17;	author brlcad;	state Exp;
branches;
next	14.8;

14.8
date	2005.10.23.04.44.36;	author brlcad;	state Exp;
branches;
next	14.7;

14.7
date	2005.08.12.22.31.08;	author lbutler;	state Exp;
branches
	14.7.4.1;
next	14.6;

14.6
date	2005.01.30.20.31.03;	author brlcad;	state Exp;
branches;
next	14.5;

14.5
date	2004.12.21.07.18.58;	author morrison;	state Exp;
branches;
next	14.4;

14.4
date	2004.12.21.06.18.48;	author morrison;	state Exp;
branches;
next	14.3;

14.3
date	2004.12.21.05.45.24;	author morrison;	state Exp;
branches;
next	14.2;

14.2
date	2004.12.21.04.18.21;	author morrison;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.16;	author morrison;	state Exp;
branches;
next	1.3;

1.3
date	2004.08.04.18.16.14;	author morrison;	state Exp;
branches;
next	1.2;

1.2
date	2004.06.08.19.57.55;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.20.15.20.10;	author morrison;	state Exp;
branches;
next	;

14.7.4.1
date	2005.11.13.13.46.17;	author brlcad;	state Exp;
branches;
next	;


desc
@@


14.16
log
@naming consistency, rename rt_dspline.c sans prefix to dspline.c
@
text
@/*                    R T _ D S P L I N E . C
 * BRL-CAD
 *
 * Copyright (c) 2004-2007 United States Government as represented by
 * the U.S. Army Research Laboratory.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * version 2.1 as published by the Free Software Foundation.
 *
 * This library is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this file; see the file named COPYING for more
 * information.
 */
/** @@addtogroup librt */
/** @@{ */
/** @@file rt_dspline.c
 *
 * Simple data (double) spline package.
 *
 *  rt_dspline_matrix(m, type, tension, bias)	create basis matrix
 *  rt_dspline4(m, a, b, c, d, alpha)		interpolate 1 value
 *  rt_dspline4v(m, a, b, c, d, depth alpha)	interpolate vectors
 *  rt_dspline(r, m, knots, n, depth, alpha)	interpolate n knots over 0..1
 *
 *  Example:
 *	mat_t	m;
 *	double	d;
 *	vect_t	v;
 *	vect_t  kn = { 	{0., 0., 0.},
 *		 	{0., 1., 0.},
 * 			{.5, 1., 0.},
 *		 	{1., 1., 0.},
 *		 	{1., 0., 0.} };
 *
 *	rt_dspline_matrix(m, "Beta", 0.5, 1.0);
 *
 *	d = rt_dspline4(m, .0, .0, 1.0, 1.0, 0.25);
 *
 *	for (p = 0.0 ; p <= 1.0 ; p += 0.0625 ) {
 *		rt_dspline(v, m, kn, 5, 3, p);
 *		bu_log("%g (%g %g %g)\n", p, V3ARGS(v));
 *	}
 *
 *  Author -
 *	Lee A. Butler
 *
 *  Source -
 *	The U. S. Army Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5068  USA
 *
 */
/** @@} */

#ifndef lint
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/librt/rt_dspline.c,v 14.15 2007/01/27 01:41:42 brlcad Exp $ (ARL)";
#endif

#include "common.h"

#include <stdlib.h>
#include <stdio.h>
#include <string.h>
#include <math.h>

#include "machine.h"
#include "vmath.h"
#include "bu.h"
#include "raytrace.h"


static void
GetBeta(fastf_t *m, const double bias, const double tension)
{
	register int i;
	double d, b2, b3;
	register double tmp;

	b2 = bias * bias;
	b3 = bias * b2;

	tmp = 2.0 * b3;
	m[12] = tmp;
	m[ 0] = -tmp;

	tmp = tension+b2+bias;
	m[ 1] = 2.0 * (tmp + b3);
	m[ 2] = -2.0 * (tmp + 1.0);

	tmp = tension + 2.0 * b2;
	m[ 5] = -3.0 * (tmp + 2.0 * b3);
	m[ 6] =  3.0 * tmp;

	tmp = 6.0 * b3;
	m[ 4] = tmp;
	m[ 8] = -tmp;

	m[ 9] = 6.0 * (b3 - bias);
	m[10] = 6.0 * bias;

	tmp = tension + 4.0 * (b2 + bias);
	m[13] = tmp;
	d = 1.0 / ( tmp + 2.0 * b3 + 2.0);

	m[ 3] = m[14] = 2.0;
	m[ 7] = m[11] = m[15] = 0.0;

	for (i=0 ; i < 16; i++) m[i] *= d;
}

static void
GetCardinal(fastf_t *m, const double tension)
{
	m[ 1] = 2.0 - tension;
	m[ 2] = tension - 2.0;
	m[ 4] = 2.0 * tension;
	m[ 5] = tension - 3.0;
	m[ 6] = 3.0 - 2.0 * tension;
	m[13] = 1.0;
	m[ 3] = m[10] = tension;
	m[ 0] = m[7] = m[ 8] = -tension;
	m[ 9] = m[11] = m[12] = m[14] = m[15] = 0.0;
}

/*	R T _ D S P L I N E _ M A T R I X
 *
 *	Initialize a spline matrix for a particular spline type.
 *
 */
void
rt_dspline_matrix(fastf_t *m, const char *type, const double tension, const double bias)

				/* "Cardinal", "Catmull", "Beta" */
				/* Cardinal tension of .5 is Catmull spline */
				/* only for B spline */
{
	if (!strncmp(type, "Cardinal", 8))	GetCardinal(m, tension);
	else if (!strncmp(type, "Catmull", 7))	GetCardinal(m, 0.5);
	else if (!strncmp(type, "Beta", 4)) 	GetBeta(m, bias, tension);
	else {
		bu_log( "Error: %s:%d spline type \"%s\" Unknown\n",
			__FILE__, __LINE__, type);
		abort();
	}
}

/*	R T _ D S P L I N E 4
 *
 *	m		spline matrix (see rt_dspline4_matrix)
 *	a, b, c, d	knot values
 *	alpha:	0..1	interpolation point
 *
 *	Evaluate a 1-dimensional spline at a point "alpha" on knot values
 *	a, b, c, d.
 */
double
rt_dspline4(fastf_t *m, double a, double b, double c, double d, double alpha)
			/* spline matrix */
			/* control pts */
			/* point to interpolate at */
{
	double p0, p1, p2, p3;

	p0 = m[ 0]*a + m[ 1]*b + m[ 2]*c + m[ 3]*d;
	p1 = m[ 4]*a + m[ 5]*b + m[ 6]*c + m[ 7]*d;
	p2 = m[ 8]*a + m[ 9]*b + m[10]*c + m[11]*d;
	p3 = m[12]*a + m[13]*b + m[14]*c + m[15]*d;

	return  p3 +  alpha*(p2 + alpha*(p1 + alpha*p0) );
}

/*	R T _ D S P L I N E 4 V
 *
 *	pt		vector to recieve the interpolation result
 *	m		spline matrix (see rt_dspline4_matrix)
 *	a, b, c, d	knot values
 *	alpha:	0..1	interpolation point
 *
 *  Evaluate a spline at a point "alpha" between knot pts b & c
 *  The knots and result are all vectors with "depth" values (length).
 *
 */
void
rt_dspline4v(double *pt, const fastf_t *m, const double *a, const double *b, const double *c, const double *d, const int depth, const double alpha)
		/* result */
			/* spline matrix obtained with spline_matrix() */
			/* knots */


			/* number of values per knot */
			/* 0 <= alpha <= 1 */
{
	int i;
	double p0, p1, p2, p3;

	for (i=0 ; i < depth ; i++) {
		p0 = m[ 0]*a[i] + m[ 1]*b[i] + m[ 2]*c[i] + m[ 3]*d[i];
		p1 = m[ 4]*a[i] + m[ 5]*b[i] + m[ 6]*c[i] + m[ 7]*d[i];
		p2 = m[ 8]*a[i] + m[ 9]*b[i] + m[10]*c[i] + m[11]*d[i];
		p3 = m[12]*a[i] + m[13]*b[i] + m[14]*c[i] + m[15]*d[i];

		pt[i] = p3 +  alpha*(p2 + alpha*(p1 + alpha*p0) );
	}
}


/*	R T _ D S P L I N E _ N
 *
 *	Interpolate n knot vectors over the range 0..1
 *
 *	"knots" is an array of "n" knot vectors.  Each vector consists of
 *	"depth" values.  They define an "n" dimensional surface which is
 *	evaluated at the single point "alpha".  The evaluated point is
 *	returned in "r"
 *
 *	Example use:
 *		double result[MAX_DEPTH], knots[MAX_DEPTH*MAX_KNOTS];
 *		mat_t	m;
 *		int	knot_count, depth;
 *
 *		knots = bu_malloc(sizeof(double) * knot_length * knot_count);
 *		result = bu_malloc(sizeof(double) * knot_length);
 *
 *		rt_dspline4_matrix(m, "Catmull", (double *)NULL, 0.0);
 *
 *		for (i=0 ; i < knot_count ; i++)
 *			get a knot(knots, i, knot_length);
 *
 *		rt_dspline_n(result, m, knots, knot_count, knot_length, alpha);
 *
 */
void
rt_dspline_n(double *r, const fastf_t *m, const double *knots, const int nknots, const int depth, const double alpha)
			/* result */
			/* spline matrix */
			/* knot values */
			/* number of knots */
			/* number of values per knot */
			/* point on surface (0..1) to evaluate */
{
	double *a, *b, *c, *d, x;
	int nspans = nknots - 3;
	int span;

	/* validate args */
	if (nspans < 1 || depth < 1 || alpha < 0.0 || alpha > 1.0 ||
	    !r || !knots)
	    bu_bomb("invalid args given to rt_dspline_r");


	/* compute which knots (span) we're going to interpolate */


	x = alpha * nspans;
	span = (int)x;
	if (span >= nspans) span = nspans - 1;
	x -= span;

	/* compute point (alpha 0..1) within this span */

	a = (double *)&knots[span*depth];
	b = a+depth;
	c = b+depth;
	d = c+depth;

	rt_dspline4v(r, m, a, b, c, d, depth, x);

}

/*
 * Local Variables:
 * mode: C
 * tab-width: 8
 * c-basic-offset: 4
 * indent-tabs-mode: t
 * End:
 * ex: shiftwidth=4 tabstop=8
 */
@


14.15
log
@ws. lots and lots of ws.  see sh/ws.sh for details (cases 'abcdeg').
@
text
@d61 1
a61 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/librt/rt_dspline.c,v 14.14 2007/01/23 01:13:39 brlcad Exp $ (ARL)";
@


14.14
log
@Sweeping license updates.  Documentation is fully relicensed to the BSD Documentation License (a minor variant of the FreeBSD Documentation License and BSD License).  All GPL code (mostly application code) is converted to the LGPL and now also specifically declares version 2.1, revoking the blank check to the FSF.  The intent of these sweeping changes are to simplify the licensing terms and increase overall flexibility of use, both externally (to users for their purposes) and internally (to allow application code to be migrated to libraries without creating GPL libraries).  As a collective work, BRL-CAD is now LGPL.
@
text
@d61 1
a61 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/librt/rt_dspline.c,v 14.13 2007/01/21 04:45:45 brlcad Exp $ (ARL)";
d138 3
a140 3
          	      		/* "Cardinal", "Catmull", "Beta" */
            	        	/* Cardinal tension of .5 is Catmull spline */
            	     		/* only for B spline */
d163 3
a165 3
     	  		/* spline matrix */
                  	/* control pts */
             		/* point to interpolate at */
d190 3
a192 3
           	/* result */
           	  	/* spline matrix obtained with spline_matrix() */
                	/* knots */
d195 2
a196 3

                	/* number of values per knot */
                   	/* 0 <= alpha <= 1 */
d239 6
a244 6
            	   	/* result */
           	  	/* spline matrix */
            	       	/* knot values */
         	       	/* number of knots */
         	      	/* number of values per knot */
            	      	/* point on surface (0..1) to evaluate */
@


14.13
log
@ugh, what tedium.  put some effort towards cleaning up the doxygen labels and making the headers more consistent.  also exclusively using @@ for doxygen instead of \ to try to keep things more consistent.
@
text
@d9 1
a9 2
 * as published by the Free Software Foundation; either version 2 of
 * the License, or (at your option) any later version.
d14 1
a14 1
 * Library General Public License for more details.
d61 1
a61 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/librt/rt_dspline.c,v 14.12 2007/01/20 14:36:55 brlcad Exp $ (ARL)";
@


14.12
log
@update copyright to 2007
@
text
@a20 1

d22 1
a22 1
/*@@{*/
d24 1
d59 1
a59 1
/*@@}*/
d62 1
a62 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/librt/rt_dspline.c,v 14.11 2006/09/16 02:04:26 lbutler Exp $ (ARL)";
@


14.11
log
@Doxygen updates
@
text
@d4 1
a4 1
 * Copyright (c) 2004-2006 United States Government as represented by
d62 1
a62 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/librt/rt_dspline.c,v 14.10 2006/02/27 08:20:11 brlcad Exp $ (ARL)";
@


14.10
log
@stdlib.h warning quelling, conversions to bu_bomb instead of aborting
@
text
@d22 1
a22 1
/** \addtogroup librt */
d62 1
a62 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/librt/rt_dspline.c,v 14.9 2006/01/18 06:46:17 brlcad Exp $ (ARL)";
@


14.9
log
@update copyright to 2006
@
text
@d62 1
a62 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/librt/rt_dspline.c,v 14.8 2005/10/23 04:44:36 brlcad Exp $ (ARL)";
d67 1
d77 1
d255 1
a255 1
		abort();
@


14.8
log
@trailing ws
@
text
@d4 1
a4 1
 * Copyright (C) 2004-2005 United States Government as represented by
d62 1
a62 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/librt/rt_dspline.c,v 14.7 2005/08/12 22:31:08 lbutler Exp $ (ARL)";
@


14.7
log
@Doxygen changes
@
text
@d62 1
a62 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/librt/rt_dspline.c,v 14.6 2005/01/30 20:31:03 brlcad Exp $ (ARL)";
d129 1
a129 1
/*	R T _ D S P L I N E _ M A T R I X 
d136 1
a136 1
           	  
d145 1
a145 1
		bu_log( "Error: %s:%d spline type \"%s\" Unknown\n", 
d192 3
a194 3
                
                
                
@


14.7.4.1
log
@merge changes from HEAD aka rel-7-6-4 to the rel-7-6-branch just in case someone peeks a gander or tries to continue/build the branch
@
text
@d62 1
a62 1
static const char RCSid[] = "@@(#)$Header$ (ARL)";
d129 1
a129 1
/*	R T _ D S P L I N E _ M A T R I X
d136 1
a136 1

d145 1
a145 1
		bu_log( "Error: %s:%d spline type \"%s\" Unknown\n",
d192 3
a194 3



@


14.6
log
@update copyright to 2005
@
text
@d21 3
d25 1
a25 6
 *
 */

/*	R T _ S P L I N E . C
 *
 *  Simple data (double) spline package.
d59 1
d62 1
a62 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/librt/rt_dspline.c,v 14.5 2004/12/21 07:18:58 morrison Exp $ (ARL)";
@


14.5
log
@the significantly modified pd files are incorporated as new works and assigned copyright, so remove the old statement.
@
text
@d4 2
a5 2
 * Copyright (c) 2004 United States Government as represented by the
 * U.S. Army Research Laboratory.
d63 1
a63 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/librt/rt_dspline.c,v 14.4 2004/12/21 06:18:48 morrison Exp $ (ARL)";
@


14.4
log
@they should have received a copy of the LGPL with LGPL'd files
@
text
@a59 2
 *  Distribution Status -
 *	Public Domain, Distribution Unlimited.
d63 1
a63 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/librt/rt_dspline.c,v 14.3 2004/12/21 05:45:24 morrison Exp $ (ARL)";
@


14.3
log
@s/GNU Library General/GNU Lesser General/g
@
text
@d17 2
a18 2
 * You should have received a copy of the GNU General Public License
 * along with this file; see the file named COPYING for more
d65 1
a65 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/librt/rt_dspline.c,v 14.2 2004/12/21 04:18:21 morrison Exp $ (ARL)";
@


14.2
log
@assign copyright and LGPL
@
text
@d8 1
a8 1
 * modify it under the terms of the GNU Library General Public License
d65 1
a65 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/librt/rt_dspline.c,v 14.1 2004/11/16 19:42:16 morrison Exp $ (ARL)";
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d1 24
d65 1
a65 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/librt/rt_dspline.c,v 1.3 2004/08/04 18:16:14 morrison Exp $ (ARL)";
@


1.3
log
@add the venerable common.h
@
text
@d41 1
a41 1
static const char RCSid[] = "@@(#)$Header: /n/xoff/cvs/brlcad/src/librt/rt_dspline.c,v 1.2 2004/06/08 19:57:55 morrison Exp $ (ARL)";
d253 10
@


1.2
log
@bye bye externs.h
@
text
@d41 1
a41 1
static const char RCSid[] = "@@(#)$Header$ (ARL)";
d43 2
@


1.1
log
@Vast reorganization begins.  Sources moved from top-level directories into src/.
@
text
@d41 1
a41 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/librt/rt_dspline.c,v 1.11 2004/04/05 08:48:58 morrison Exp $ (ARL)";
a48 1
#include "externs.h"
@

