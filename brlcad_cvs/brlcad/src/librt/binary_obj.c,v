head	14.23;
access;
symbols
	rel-7-10-4:14.21
	STABLE:14.21.0.2
	stable-branch:14.8
	rel-7-10-2:14.21
	rel-7-10-0:14.20
	rel-7-8-4:14.17
	rel-7-8-2:14.16
	rel-7-8-0:14.16
	trimnurbs-branch:14.16.0.2
	help:14.16
	temp_tag:14.15
	bobWinPort-20051223-freeze:14.14
	postmerge-20051223-bobWinPort:14.15
	premerge-20051223-bobWinPort:14.15
	rel-7-6-6:14.15
	rel-7-6-4:14.15
	rel-7-6-2:14.14
	rel-7-6-branch:14.14.0.4
	rel-7-6-0:14.14
	rel-7-4-2:14.13
	rel-7-4-branch:14.13.0.2
	bobWinPort:14.14.0.2
	rel-7-4-0:14.13
	rel-7-2-6:14.12
	rel-7-2-4:14.11
	rel-7-2-2:14.8
	rel-7-2-0:14.8
	rel-7-0-4:14.7
	rel-7-0-2:14.7
	rel-7-0-1:14.7
	opensource-post:14.7
	opensource-pre:1.2
	rel-7-0-branch:1.2.0.2
	rel-7-0:1.2;
locks; strict;
comment	@ * @;


14.23
date	2007.12.16.18.53.49;	author brlcad;	state Exp;
branches;
next	14.22;

14.22
date	2007.09.15.16.23.12;	author brlcad;	state Exp;
branches;
next	14.21;

14.21
date	2007.05.14.21.04.31;	author brlcad;	state Exp;
branches;
next	14.20;

14.20
date	2007.01.23.01.13.36;	author brlcad;	state Exp;
branches;
next	14.19;

14.19
date	2007.01.21.04.45.43;	author brlcad;	state Exp;
branches;
next	14.18;

14.18
date	2007.01.20.14.36.53;	author brlcad;	state Exp;
branches;
next	14.17;

14.17
date	2006.09.16.02.04.24;	author lbutler;	state Exp;
branches;
next	14.16;

14.16
date	2006.01.18.06.46.17;	author brlcad;	state Exp;
branches;
next	14.15;

14.15
date	2005.10.23.04.44.35;	author brlcad;	state Exp;
branches;
next	14.14;

14.14
date	2005.08.12.22.31.07;	author lbutler;	state Exp;
branches
	14.14.4.1;
next	14.13;

14.13
date	2005.06.14.17.17.32;	author bob1961;	state Exp;
branches;
next	14.12;

14.12
date	2005.05.14.17.28.55;	author brlcad;	state Exp;
branches;
next	14.11;

14.11
date	2005.05.08.17.57.51;	author brlcad;	state Exp;
branches;
next	14.10;

14.10
date	2005.05.08.05.53.22;	author brlcad;	state Exp;
branches;
next	14.9;

14.9
date	2005.05.04.02.52.54;	author brlcad;	state Exp;
branches;
next	14.8;

14.8
date	2005.01.30.20.30.57;	author brlcad;	state Exp;
branches;
next	14.7;

14.7
date	2004.12.21.07.32.30;	author morrison;	state Exp;
branches;
next	14.6;

14.6
date	2004.12.21.06.58.43;	author morrison;	state Exp;
branches;
next	14.5;

14.5
date	2004.12.21.06.44.33;	author morrison;	state Exp;
branches;
next	14.4;

14.4
date	2004.12.21.06.18.45;	author morrison;	state Exp;
branches;
next	14.3;

14.3
date	2004.12.21.05.45.23;	author morrison;	state Exp;
branches;
next	14.2;

14.2
date	2004.12.21.04.18.19;	author morrison;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.15;	author morrison;	state Exp;
branches;
next	1.2;

1.2
date	2004.08.02.23.01.49;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.20.15.19.55;	author morrison;	state Exp;
branches;
next	;

14.14.4.1
date	2005.11.13.13.46.16;	author brlcad;	state Exp;
branches;
next	;


desc
@@


14.23
log
@convert usages of bcopy to memcpy throughout.  although none of them should be buffers that overlap per machine.h history, all calls were individually checked regardless. new code should not use bzero/bcopy any more.
@
text
@/*                    B I N A R Y _ O B J . C
 * BRL-CAD
 *
 * Copyright (c) 2001-2007 United States Government as represented by
 * the U.S. Army Research Laboratory.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * version 2.1 as published by the Free Software Foundation.
 *
 * This library is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this file; see the file named COPYING for more
 * information.
 */
/** @@addtogroup db5  */
/** @@{ */
/** @@file binary_obj.c
 *
 *  Routines for writing binary objects to a BRL-CAD database
 *  Assumes that some of the structure of such databases are known
 *  by the calling routines.
 *
 *  Return codes of 0 are OK, -1 signal an error.
 *
 *  Authors -
 *	John R. Anderson
 *  Source -
 *	The U. S. Army Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5068  USA
 */
/** @@} */

#ifndef lint
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/librt/binary_obj.c,v 14.22 2007/09/15 16:23:12 brlcad Exp $ (BRL)";
#endif

#include "common.h"

#include <stdio.h>
#include <sys/stat.h>
#include <math.h>
#include <string.h>
#include <limits.h>

#ifdef HAVE_SYS_TYPES_H
#  include <sys/types.h>
#endif

#include "machine.h"
#include "bu.h"
#include "vmath.h"
#include "bn.h"
#include "rtgeom.h"
#include "raytrace.h"
#include "wdb.h"

#ifndef __LONG_MAX__
#  define __LONG_MAX__ 2147483647L
#endif


int
rt_mk_binunif(struct rt_wdb *wdbp, const char *obj_name, const char *file_name, unsigned int minor_type, long max_count)
{
	struct stat st;
	unsigned int major_type=DB5_MAJORTYPE_BINARY_UNIF;
#if defined(_WIN32) && !defined(__CYGWIN__)
	__int64 num_items=-1;
	__int64 obj_length=-1;
#else
	long long num_items=-1;
	long long obj_length=-1;
#endif
	int item_length=0;
	struct bu_mapped_file *bu_fd;
	struct rt_binunif_internal *bip;
	struct rt_db_internal intern;
	struct bu_external body;
	struct bu_external bin_ext;
	struct directory *dp;

	if( (item_length=db5_type_sizeof_h_binu( minor_type ) ) <= 0 ) {
		bu_log( "Unrecognized minor type!!!\n" );
		return -1;
	}

	if( stat( file_name, &st ) ) {
		bu_log( "Cannot stat input file(%s)", file_name );
		return -1;
	}

	if( (bu_fd=bu_open_mapped_file( file_name, NULL)) == NULL ) {
		bu_log( "Cannot open input file(%s) for reading",
			      file_name );
		return -1;
	}

	/* create the rt_binunif internal form */
	BU_GETSTRUCT( bip, rt_binunif_internal );
	bip->magic = RT_BINUNIF_INTERNAL_MAGIC;
	bip->type = minor_type;

	num_items = (long)(st.st_size / item_length);

	/* maybe only a partial file read */
	if (max_count > 0 && max_count < num_items) {
	    num_items = max_count;
	}

	obj_length = num_items * item_length;

	if (obj_length > __LONG_MAX__) {
	    bu_log("Unable to create binary objects larger than %ld bytes\n", __LONG_MAX__);
	    return -1;
	}

	/* just copy the bytes */
	bip->count = num_items;
	bip->u.int8 = (char *)bu_malloc( obj_length, "binary uniform object" );
	memcpy(bip->u.int8, bu_fd->buf, obj_length);

	bu_close_mapped_file( bu_fd );

	/* create the rt_internal form */
	RT_INIT_DB_INTERNAL( &intern );
	intern.idb_major_type = major_type;
	intern.idb_minor_type = minor_type;
	intern.idb_ptr = (genptr_t)bip;
	intern.idb_meth = &rt_functab[ID_BINUNIF];

	/* create body portion of external form */
	if( intern.idb_meth->ft_export5( &body, &intern, 1.0, wdbp->dbip, wdbp->wdb_resp, intern.idb_minor_type ) ) {

		bu_log( "Error while attemptimg to export %s\n", obj_name );
		rt_db_free_internal( &intern, wdbp->wdb_resp );
		return -1;
	}

	/* create entire external form */
	db5_export_object3( &bin_ext, DB5HDR_HFLAGS_DLI_APPLICATION_DATA_OBJECT,
			    obj_name, 0, NULL, &body,
			    intern.idb_major_type, intern.idb_minor_type,
			    DB5_ZZZ_UNCOMPRESSED, DB5_ZZZ_UNCOMPRESSED );

	rt_db_free_internal( &intern, wdbp->wdb_resp );
	bu_free_external( &body );

	/* add this object to the directory */
	if( (dp=db_diradd5( wdbp->dbip, obj_name, -1, major_type,
			    minor_type, 0, 0, NULL )) == DIR_NULL ) {
		bu_log( "Error while attemptimg to add new name (%s) to the database",
			obj_name );
		bu_free_external( &bin_ext );
		return -1;
	}

	/* and write it to the database */
	if( db_put_external5( &bin_ext, dp, wdbp->dbip ) ) {
		bu_log( "Error while adding new binary object (%s) to the database",
			obj_name );
		bu_free_external( &bin_ext );
		return -1;
	}

	bu_free_external( &bin_ext );

	return 0;
}

/*
 * Local Variables:
 * mode: C
 * tab-width: 8
 * c-basic-offset: 4
 * indent-tabs-mode: t
 * End:
 * ex: shiftwidth=4 tabstop=8
 */
@


14.22
log
@more c89 embracing.  c89 provides string.h for all of the various str*() and mem*() functions, so remove the check for its presence.  there is still likely to be work required for strict c89 conformance for the various bsd strings.h functions that may be in use.
@
text
@d39 1
a39 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/librt/binary_obj.c,v 14.21 2007/05/14 21:04:31 brlcad Exp $ (BRL)";
d125 1
a125 1
	memcpy( bip->u.int8, bu_fd->buf, obj_length );
@


14.21
log
@gah, pick up where someone left off over half a decade ago.  finish updating all of the compat4 symbols throughout the code to their new names.  finally. it's done.  make the deprecated headers obsolete -- make compat4.h obsolete too so we can be sure that all of the changes are now picked up by the compiler as errors.  this change will likely impact muves if they've similarly not updated to the new names too, so the headers are kept with a #warning for now (though will likely disappear down the road entirely).
@
text
@d39 1
a39 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/librt/binary_obj.c,v 14.20 2007/01/23 01:13:36 brlcad Exp $ (BRL)";
d47 3
a49 5
#ifdef HAVE_STRING_H
#  include <string.h>
#else
#  include <strings.h>
#endif
a52 1
#include <limits.h>
@


14.20
log
@Sweeping license updates.  Documentation is fully relicensed to the BSD Documentation License (a minor variant of the FreeBSD Documentation License and BSD License).  All GPL code (mostly application code) is converted to the LGPL and now also specifically declares version 2.1, revoking the blank check to the FSF.  The intent of these sweeping changes are to simplify the licensing terms and increase overall flexibility of use, both externally (to users for their purposes) and internally (to allow application code to be migrated to libraries without creating GPL libraries).  As a collective work, BRL-CAD is now LGPL.
@
text
@d39 1
a39 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/librt/binary_obj.c,v 14.19 2007/01/21 04:45:43 brlcad Exp $ (BRL)";
d107 1
a107 1
	GETSTRUCT( bip, rt_binunif_internal );
@


14.19
log
@ugh, what tedium.  put some effort towards cleaning up the doxygen labels and making the headers more consistent.  also exclusively using @@ for doxygen instead of \ to try to keep things more consistent.
@
text
@d9 1
a9 2
 * as published by the Free Software Foundation; either version 2 of
 * the License, or (at your option) any later version.
d14 1
a14 1
 * Library General Public License for more details.
d39 1
a39 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/librt/binary_obj.c,v 14.18 2007/01/20 14:36:53 brlcad Exp $ (BRL)";
@


14.18
log
@update copyright to 2007
@
text
@a20 1

d22 1
a22 1
/*@@{*/
d24 1
d37 1
a37 1
/*@@}*/
d40 1
a40 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/librt/binary_obj.c,v 14.17 2006/09/16 02:04:24 lbutler Exp $ (BRL)";
@


14.17
log
@Doxygen updates
@
text
@d4 1
a4 1
 * Copyright (c) 2001-2006 United States Government as represented by
d40 1
a40 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/librt/binary_obj.c,v 14.16 2006/01/18 06:46:17 brlcad Exp $ (BRL)";
@


14.16
log
@update copyright to 2006
@
text
@d22 1
a22 1
/** \addtogroup librt  */
d40 1
a40 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/librt/binary_obj.c,v 14.15 2005/10/23 04:44:35 brlcad Exp $ (BRL)";
@


14.15
log
@trailing ws
@
text
@d4 1
a4 1
 * Copyright (C) 2001-2005 United States Government as represented by
d40 1
a40 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/librt/binary_obj.c,v 14.14 2005/08/12 22:31:07 lbutler Exp $ (BRL)";
@


14.14
log
@Doxygen changes
@
text
@d40 1
a40 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/librt/binary_obj.c,v 14.13 2005/06/14 17:17:32 bob1961 Exp $ (BRL)";
d113 1
a113 1
	
@


14.14.4.1
log
@merge changes from HEAD aka rel-7-6-4 to the rel-7-6-branch just in case someone peeks a gander or tries to continue/build the branch
@
text
@d40 1
a40 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
d113 1
a113 1

@


14.13
log
@Use __int64 instead of long long if the OS is Windows
@
text
@d21 3
a24 1
 *
d37 2
d40 1
a40 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/librt/binary_obj.c,v 14.12 2005/05/14 17:28:55 brlcad Exp $ (BRL)";
@


14.12
log
@replace the off_t with a long -- this requires a check to make sure the data being created is actually not too big since an off_t is potentially a 64bit type.
@
text
@d36 1
a36 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/librt/binary_obj.c,v 14.11 2005/05/08 17:57:51 brlcad Exp $ (BRL)";
d72 4
d78 1
@


14.11
log
@Rename librt's mk_binunif function to rt_mk_binunif and add a
mk_binunif interface to libwdb.  The libwdb interface supports reading
from either a file or from data already loaded into memory.  Since the
count needed for the memcpy, we also modify the binunif to accept a
value count so that we know how many values to read from either memory
or disk (partial file loading, for example).
@
text
@d36 1
a36 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/librt/binary_obj.c,v 14.10 2005/05/08 05:53:22 brlcad Exp $ (BRL)";
d49 4
d62 4
d68 1
a68 1
rt_mk_binunif(struct rt_wdb *wdbp, const char *obj_name, const char *file_name, unsigned int minor_type, off_t max_count)
d72 2
a73 2
	long num_items=-1;
	long obj_length=-1;
d112 5
@


14.10
log
@rename mk_binunif to rt_mk_binunif since the mk_* routines are supposed to be libwdb interface names.
@
text
@d36 1
a36 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/librt/binary_obj.c,v 14.9 2005/05/04 02:52:54 brlcad Exp $ (BRL)";
d60 1
a60 1
rt_mk_binunif(struct rt_wdb *wdbp, const char *obj_name, const char *file_name, unsigned int minor_type)
d96 6
@


14.9
log
@match sizes
@
text
@a26 1
 *
d36 1
a36 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/librt/binary_obj.c,v 14.8 2005/01/30 20:30:57 brlcad Exp $ (BRL)";
a40 2


d45 3
a47 1
#include <string.h>
d49 1
d58 1
d60 1
a60 5
mk_binunif(
	   struct rt_wdb *wdbp,
	   const char *obj_name,
	   const char *file_name,
	   unsigned int minor_type)
@


14.8
log
@update copyright to 2005
@
text
@d37 1
a37 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/librt/binary_obj.c,v 14.7 2004/12/21 07:32:30 morrison Exp $ (BRL)";
d98 1
a98 1
	num_items = st.st_size / item_length;
@


14.7
log
@tidy up a lil bit
@
text
@d4 1
a4 1
 * Copyright (c) 2001-2004 United States Government as represented by
d37 1
a37 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/librt/binary_obj.c,v 14.6 2004/12/21 06:58:43 morrison Exp $ (BRL)";
@


14.6
log
@remove the old copyright notice section as it's been supplanted (and copyright is now claimable in the us via assignmgent)
@
text
@a34 2
 *  
 *
d37 1
a37 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/librt/binary_obj.c,v 14.5 2004/12/21 06:44:33 morrison Exp $ (BRL)";
@


14.5
log
@remove the old distribution notice section
@
text
@a36 3
 *  Copyright Notice -
 *	This software is Copyright (C) 2001-2004 by the United States Army
 *	in all countries except the USA.  All rights reserved.
d39 1
a39 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/librt/binary_obj.c,v 14.4 2004/12/21 06:18:45 morrison Exp $ (BRL)";
@


14.4
log
@they should have received a copy of the LGPL with LGPL'd files
@
text
@a35 4
 *  Distribution Notice -
 *	Re-distribution of this software is restricted, as described in
 *	your "Statement of Terms and Conditions for the Release of
 *	The BRL-CAD Package" agreement.
d42 1
a42 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/librt/binary_obj.c,v 14.3 2004/12/21 05:45:23 morrison Exp $ (BRL)";
@


14.3
log
@s/GNU Library General/GNU Lesser General/g
@
text
@d17 2
a18 2
 * You should have received a copy of the GNU General Public License
 * along with this file; see the file named COPYING for more
d46 1
a46 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/librt/binary_obj.c,v 14.2 2004/12/21 04:18:19 morrison Exp $ (BRL)";
@


14.2
log
@assign copyright and LGPL
@
text
@d8 1
a8 1
 * modify it under the terms of the GNU Library General Public License
d46 1
a46 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/librt/binary_obj.c,v 14.1 2004/11/16 19:42:15 morrison Exp $ (BRL)";
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d1 21
a21 2
/*
 *			B I N A R Y _ O B J . C
d46 1
a46 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/librt/binary_obj.c,v 1.2 2004/08/02 23:01:49 morrison Exp $ (BRL)";
@


1.2
log
@replace the wrapped config.h block with common.h
@
text
@d27 1
a27 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/librt/binary_obj.c,v 1.1 2004/05/20 15:19:55 morrison Exp $ (BRL)";
d143 10
@


1.1
log
@Vast reorganization begins.  Sources moved from top-level directories into src/.
@
text
@d27 1
a27 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/librt/binary_obj.c,v 1.4 2004/05/10 15:30:45 erikg Exp $ (BRL)";
d30 1
a30 3
#ifdef HAVE_CONFIG_H
# include "config.h"
#endif
@

