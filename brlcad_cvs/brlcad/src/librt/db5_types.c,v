head	14.16;
access;
symbols
	rel-7-10-4:14.15
	STABLE:14.15.0.2
	stable-branch:14.6
	rel-7-10-2:14.15
	rel-7-10-0:14.14
	rel-7-8-4:14.10
	rel-7-8-2:14.9
	rel-7-8-0:14.9
	trimnurbs-branch:14.9.0.2
	help:14.9
	temp_tag:14.8
	bobWinPort-20051223-freeze:14.7
	postmerge-20051223-bobWinPort:14.8
	premerge-20051223-bobWinPort:14.8
	rel-7-6-6:14.8
	rel-7-6-4:14.8
	rel-7-6-2:14.7
	rel-7-6-branch:14.7.0.4
	rel-7-6-0:14.7
	rel-7-4-2:14.6
	rel-7-4-branch:14.6.0.2
	bobWinPort:14.7.0.2
	rel-7-4-0:14.6
	rel-7-2-6:14.6
	rel-7-2-4:14.6
	rel-7-2-2:14.6
	rel-7-2-0:14.6
	rel-7-0-4:14.5
	rel-7-0-2:14.5
	rel-7-0-1:14.5
	opensource-post:14.5
	opensource-pre:1.2
	rel-7-0-branch:1.2.0.2
	rel-7-0:1.2;
locks; strict;
comment	@ * @;


14.16
date	2007.09.15.16.23.12;	author brlcad;	state Exp;
branches;
next	14.15;

14.15
date	2007.07.26.01.13.57;	author brlcad;	state Exp;
branches;
next	14.14;

14.14
date	2007.01.27.01.41.38;	author brlcad;	state Exp;
branches;
next	14.13;

14.13
date	2007.01.23.01.13.36;	author brlcad;	state Exp;
branches;
next	14.12;

14.12
date	2007.01.21.04.45.43;	author brlcad;	state Exp;
branches;
next	14.11;

14.11
date	2007.01.20.14.36.54;	author brlcad;	state Exp;
branches;
next	14.10;

14.10
date	2006.09.16.02.04.24;	author lbutler;	state Exp;
branches;
next	14.9;

14.9
date	2006.01.18.06.46.17;	author brlcad;	state Exp;
branches;
next	14.8;

14.8
date	2005.10.23.04.44.35;	author brlcad;	state Exp;
branches;
next	14.7;

14.7
date	2005.08.12.22.31.07;	author lbutler;	state Exp;
branches
	14.7.4.1;
next	14.6;

14.6
date	2005.01.30.20.30.57;	author brlcad;	state Exp;
branches;
next	14.5;

14.5
date	2004.12.21.06.38.20;	author morrison;	state Exp;
branches;
next	14.4;

14.4
date	2004.12.21.06.18.45;	author morrison;	state Exp;
branches;
next	14.3;

14.3
date	2004.12.21.05.45.23;	author morrison;	state Exp;
branches;
next	14.2;

14.2
date	2004.12.21.04.18.19;	author morrison;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.15;	author morrison;	state Exp;
branches;
next	1.2;

1.2
date	2004.08.02.23.01.49;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.20.15.19.57;	author morrison;	state Exp;
branches;
next	;

14.7.4.1
date	2005.11.13.13.46.16;	author brlcad;	state Exp;
branches;
next	;


desc
@@


14.16
log
@more c89 embracing.  c89 provides string.h for all of the various str*() and mem*() functions, so remove the check for its presence.  there is still likely to be work required for strict c89 conformance for the various bsd strings.h functions that may be in use.
@
text
@/*                     D B 5 _ T Y P E S . C
 * BRL-CAD
 *
 * Copyright (c) 2000-2007 United States Government as represented by
 * the U.S. Army Research Laboratory.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * version 2.1 as published by the Free Software Foundation.
 *
 * This library is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this file; see the file named COPYING for more
 * information.
 */
/** @@addtogroup db5 */
/** @@{ */
/** @@file db5_types.c
 *
 *	Map between Major_Types/Minor_Types and ASCII strings
 *
 *  Author -
 *	Paul J. Tanenbaum
 *
 */
#ifndef lint
static const char RCSell[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/librt/db5_types.c,v 14.15 2007/07/26 01:13:57 brlcad Exp $ (BRL)";
#endif

#include "common.h"

#include <stdio.h>
#include <string.h>
#include <math.h>

#include "machine.h"
#include "bu.h"
#include "vmath.h"
#include "db5.h"
#include "nmg.h"
#include "raytrace.h"

struct db5_type {
    int		major_code;
    int		minor_code;
    int		heed_minor;
    char	*tag;
    char	*description;
};

/*
 *	In order to support looking up Major_Types
 *	as well as (Major_Type, Minor_Type) pairs,
 *	every Major_Type needs an entry with heed_minor==0
 *	and it must occur below any of its entries that
 *	have heed_minor==1.
 */
const static struct db5_type type_table[] = {
    {
	DB5_MAJORTYPE_BRLCAD, DB5_MINORTYPE_BRLCAD_TOR, 1, "tor", "torus"
    },
    {
	DB5_MAJORTYPE_BRLCAD, DB5_MINORTYPE_BRLCAD_TGC, 1, "tgc", "truncated general cone"
    },
    {
	DB5_MAJORTYPE_BRLCAD, DB5_MINORTYPE_BRLCAD_ELL, 1, "ell", "ellipsoid"
    },
    {
	DB5_MAJORTYPE_BRLCAD, DB5_MINORTYPE_BRLCAD_ARB8, 1, "arb8", "arb8"
    },
    {
	DB5_MAJORTYPE_BRLCAD, DB5_MINORTYPE_BRLCAD_ARS, 1, "ars", "waterline"
    },
    {
	DB5_MAJORTYPE_BRLCAD, DB5_MINORTYPE_BRLCAD_HALF, 1, "half", "halfspace"
    },
    {
	DB5_MAJORTYPE_BRLCAD, DB5_MINORTYPE_BRLCAD_REC, 1, "rec", "right elliptical cylinder"
    },
    {
	DB5_MAJORTYPE_BRLCAD, DB5_MINORTYPE_BRLCAD_BSPLINE, 1, "bspline", "B-spline"
    },
    {
	DB5_MAJORTYPE_BRLCAD, DB5_MINORTYPE_BRLCAD_SPH, 1, "sph", "sphere"
    },
    {
	DB5_MAJORTYPE_BRLCAD, DB5_MINORTYPE_BRLCAD_NMG, 1, "nmg", "nmg"
    },
    {
	DB5_MAJORTYPE_BRLCAD, DB5_MINORTYPE_BRLCAD_EBM, 1, "ebm", "extruded bitmap"
    },
    {
	DB5_MAJORTYPE_BRLCAD, DB5_MINORTYPE_BRLCAD_VOL, 1, "vol", "voxels"
    },
    {
	DB5_MAJORTYPE_BRLCAD, DB5_MINORTYPE_BRLCAD_ARBN, 1, "arbn", "arbn"
    },
    {
	DB5_MAJORTYPE_BRLCAD, DB5_MINORTYPE_BRLCAD_PIPE, 1, "pipe", "pipe"
    },
    {
	DB5_MAJORTYPE_BRLCAD, DB5_MINORTYPE_BRLCAD_PARTICLE, 1, "particle", "particle"
    },
    {
	DB5_MAJORTYPE_BRLCAD, DB5_MINORTYPE_BRLCAD_RPC, 1, "rpc", "right parabolic cylinder"
    },
    {
	DB5_MAJORTYPE_BRLCAD, DB5_MINORTYPE_BRLCAD_RHC, 1, "rhc", "right hyperbolic cylinder"
    },
    {
	DB5_MAJORTYPE_BRLCAD, DB5_MINORTYPE_BRLCAD_EPA, 1, "epa", "elliptical paraboloid"
    },
    {
	DB5_MAJORTYPE_BRLCAD, DB5_MINORTYPE_BRLCAD_EHY, 1, "ehy", "elliptical hyperboloid"
    },
    {
	DB5_MAJORTYPE_BRLCAD, DB5_MINORTYPE_BRLCAD_ETO, 1, "eto", "elliptical torus"
    },
    {
	DB5_MAJORTYPE_BRLCAD, DB5_MINORTYPE_BRLCAD_GRIP, 1, "grip", "grip"
    },
    {
	DB5_MAJORTYPE_BRLCAD, DB5_MINORTYPE_BRLCAD_JOINT, 1, "joint", "joint"
    },
    {
	DB5_MAJORTYPE_BRLCAD, DB5_MINORTYPE_BRLCAD_DSP, 1, "dsp", "displacement map (height field)"
    },
    {
	DB5_MAJORTYPE_BRLCAD, DB5_MINORTYPE_BRLCAD_SKETCH, 1, "sketch", "sketch"
    },
    {
	DB5_MAJORTYPE_BRLCAD, DB5_MINORTYPE_BRLCAD_EXTRUDE, 1, "extrude", "extrusion"
    },
    {
	DB5_MAJORTYPE_BRLCAD, DB5_MINORTYPE_BRLCAD_SUBMODEL, 1, "submodel", "submodel"
    },
    {
	DB5_MAJORTYPE_BRLCAD, DB5_MINORTYPE_BRLCAD_CLINE, 1, "cline", "cline"
    },
    {
	DB5_MAJORTYPE_BRLCAD, DB5_MINORTYPE_BRLCAD_BOT, 1, "bot", "bag of triangles"
    },
    {
	DB5_MAJORTYPE_BRLCAD, DB5_MINORTYPE_BRLCAD_COMBINATION, 1, "combination", "combination"
    },
    {
	DB5_MAJORTYPE_BRLCAD, 0, 0, "brlcad", "BRL-CAD geometry"
    },
    {
	DB5_MAJORTYPE_ATTRIBUTE_ONLY, 0, 0, "attribonly", "attribute only"
    },
    {
	DB5_MAJORTYPE_BINARY_EXPM, 0, 0, "binexpm", "experimental binary"
    },
    {
	DB5_MAJORTYPE_BINARY_UNIF, DB5_MINORTYPE_BINU_FLOAT, 1, "float", "array of floats"
    },
    {
	DB5_MAJORTYPE_BINARY_UNIF, DB5_MINORTYPE_BINU_FLOAT, 1, "f", "array of floats"
    },
    {
	DB5_MAJORTYPE_BINARY_UNIF, DB5_MINORTYPE_BINU_DOUBLE, 1, "double", "array of doubles"
    },
    {
	DB5_MAJORTYPE_BINARY_UNIF, DB5_MINORTYPE_BINU_DOUBLE, 1, "d", "array of doubles"
    },
    {
	DB5_MAJORTYPE_BINARY_UNIF, DB5_MINORTYPE_BINU_8BITINT_U, 1, "u8", "array of unsigned 8-bit ints"
    },
    {
	DB5_MAJORTYPE_BINARY_UNIF, DB5_MINORTYPE_BINU_16BITINT_U, 1, "u16", "array of unsigned 16-bit ints"
    },
    {
	DB5_MAJORTYPE_BINARY_UNIF, DB5_MINORTYPE_BINU_32BITINT_U, 1, "u32", "array of unsigned 32-bit ints"
    },
    {
	DB5_MAJORTYPE_BINARY_UNIF, DB5_MINORTYPE_BINU_32BITINT_U, 1, "uint", "array of unsigned 32-bit ints"
    },
    {
	DB5_MAJORTYPE_BINARY_UNIF, DB5_MINORTYPE_BINU_32BITINT_U, 1, "ui", "array of unsigned 32-bit ints"
    },
    {
	DB5_MAJORTYPE_BINARY_UNIF, DB5_MINORTYPE_BINU_64BITINT_U, 1, "u64", "array of unsigned 64-bit ints"
    },
    {
	DB5_MAJORTYPE_BINARY_UNIF, DB5_MINORTYPE_BINU_8BITINT, 1, "8", "array of 8-bit ints"
    },
    {
	DB5_MAJORTYPE_BINARY_UNIF, DB5_MINORTYPE_BINU_16BITINT, 1, "16", "array of 16-bit ints"
    },
    {
	DB5_MAJORTYPE_BINARY_UNIF, DB5_MINORTYPE_BINU_32BITINT, 1, "32", "array of 32-bit ints"
    },
    {
	DB5_MAJORTYPE_BINARY_UNIF, DB5_MINORTYPE_BINU_32BITINT, 1, "int", "array of 32-bit ints"
    },
    {
	DB5_MAJORTYPE_BINARY_UNIF, DB5_MINORTYPE_BINU_32BITINT, 1, "i", "array of 32-bit ints"
    },
    {
	DB5_MAJORTYPE_BINARY_UNIF, DB5_MINORTYPE_BINU_64BITINT, 1, "64", "array of 64-bit ints"
    },
    {
	DB5_MAJORTYPE_BINARY_UNIF, 0, 0, "binunif", "uniform-array binary"
    },
    {
	DB5_MAJORTYPE_BINARY_MIME, 0, 0, "binmime", "MIME-typed binary"
    },
    /*
     *	Following entry must be at end of table
     */
    {
	DB5_MAJORTYPE_RESERVED, 0, 0, 0, 0
    },
};

int
db5_type_tag_from_major( char **tag, const int major ) {
    register struct db5_type	*tp;

    for (tp = (struct db5_type *) type_table;
	    tp -> major_code != DB5_MAJORTYPE_RESERVED;
	    ++tp) {
	if ((tp -> major_code == major) && !(tp -> heed_minor)) {
	    *tag = tp -> tag;
	    return 0;
	}
    }
    return 1;
}

int
db5_type_descrip_from_major( char **descrip, const int major ) {
    register struct db5_type	*tp;

    for (tp = (struct db5_type *) type_table;
	    tp -> major_code != DB5_MAJORTYPE_RESERVED;
	    ++tp) {
	if ((tp -> major_code == major) && !(tp -> heed_minor)) {
	    *descrip = tp -> description;
	    return 0;
	}
    }
    return 1;
}

int
db5_type_tag_from_codes( char **tag, const int major, const int minor ) {
    register struct db5_type	*tp;
    register int		found_minors = 0;

    for (tp = (struct db5_type *) type_table;
	    tp -> major_code != DB5_MAJORTYPE_RESERVED;
	    ++tp) {
	if (tp -> major_code == major) {
	    if (tp -> heed_minor)
		found_minors = 1;
	    if ((tp -> minor_code == minor) || !found_minors) {
		*tag = tp -> tag;
		return 0;
	    }
	}
    }
    return 1;
}

int
db5_type_descrip_from_codes( char **descrip, const int major,
			    const int minor ) {
    register struct db5_type	*tp;
    register int		found_minors = 0;

    for (tp = (struct db5_type *) type_table;
	    tp -> major_code != DB5_MAJORTYPE_RESERVED;
	    ++tp) {
	if (tp -> major_code == major) {
	    if (tp -> heed_minor)
		found_minors = 1;
	    if ((tp -> minor_code == minor) || !found_minors) {
		*descrip = tp -> description;
		return 0;
	    }
	}
    }
    return 1;
}

int
db5_type_codes_from_tag( int *major, int *minor, const char *tag ) {
    register struct db5_type	*tp;


    for (tp = (struct db5_type *) type_table;
	    tp -> major_code != DB5_MAJORTYPE_RESERVED;
	    ++tp) {
	if ((*(tp -> tag) == *tag) && (strcmp(tp -> tag, tag) == 0)) {
	    *major = tp -> major_code;
	    *minor = tp -> minor_code;
	    return 0;
	}
    }
    return 1;
}

int
db5_type_codes_from_descrip( int *major, int *minor, const char *descrip ) {
    register struct db5_type	*tp;


    for (tp = (struct db5_type *) type_table;
	    tp -> major_code != DB5_MAJORTYPE_RESERVED;
	    ++tp) {
	if ((*(tp -> description) == *descrip)
	 && (strcmp(tp -> description, descrip) == 0)) {
	    *major = tp -> major_code;
	    *minor = tp -> minor_code;
	    return 0;
	}
    }
    return 1;
}

size_t
db5_type_sizeof_h_binu( const int minor ) {
    switch ( minor ) {
	case DB5_MINORTYPE_BINU_FLOAT:
	    return sizeof(float);
	case DB5_MINORTYPE_BINU_DOUBLE:
	    return sizeof(double);
	case DB5_MINORTYPE_BINU_8BITINT:
	case DB5_MINORTYPE_BINU_8BITINT_U:
	    return (size_t) 1;
	case DB5_MINORTYPE_BINU_16BITINT:
	case DB5_MINORTYPE_BINU_16BITINT_U:
	    return (size_t) 2;
	case DB5_MINORTYPE_BINU_32BITINT:
	case DB5_MINORTYPE_BINU_32BITINT_U:
	    return (size_t) 4;
	case DB5_MINORTYPE_BINU_64BITINT:
	case DB5_MINORTYPE_BINU_64BITINT_U:
	    return (size_t) 8;
    }
    return 0;
}

size_t
db5_type_sizeof_n_binu( const int minor ) {
    switch ( minor ) {
	case DB5_MINORTYPE_BINU_FLOAT:
	    return (size_t) SIZEOF_NETWORK_FLOAT;
	case DB5_MINORTYPE_BINU_DOUBLE:
	    return (size_t) SIZEOF_NETWORK_DOUBLE;
	case DB5_MINORTYPE_BINU_8BITINT:
	case DB5_MINORTYPE_BINU_8BITINT_U:
	    return (size_t) 1;
	case DB5_MINORTYPE_BINU_16BITINT:
	case DB5_MINORTYPE_BINU_16BITINT_U:
	    return (size_t) 2;
	case DB5_MINORTYPE_BINU_32BITINT:
	case DB5_MINORTYPE_BINU_32BITINT_U:
	    return (size_t) 4;
	case DB5_MINORTYPE_BINU_64BITINT:
	case DB5_MINORTYPE_BINU_64BITINT_U:
	    return (size_t) 8;
    }
    return 0;
}

/** @@} */
/*
 * Local Variables:
 * mode: C
 * tab-width: 8
 * c-basic-offset: 4
 * indent-tabs-mode: t
 * End:
 * ex: shiftwidth=4 tabstop=8
 */
@


14.15
log
@remove ephemeral data like phone numbers and addresses, including the misleading 'source' statements on code that is continually evolving and receiving contributions from many many sources
@
text
@d31 1
a31 1
static const char RCSell[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/librt/db5_types.c,v 14.14 2007/01/27 01:41:38 brlcad Exp $ (BRL)";
a35 1

a36 1
#ifdef HAVE_STRING_H
a37 1
#endif
d39 1
@


14.14
log
@ws. lots and lots of ws.  see sh/ws.sh for details (cases 'abcdeg').
@
text
@a28 3
 *  Source -
 *	The U. S. Army Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5066
d31 1
a31 1
static const char RCSell[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/librt/db5_types.c,v 14.13 2007/01/23 01:13:36 brlcad Exp $ (BRL)";
@


14.13
log
@Sweeping license updates.  Documentation is fully relicensed to the BSD Documentation License (a minor variant of the FreeBSD Documentation License and BSD License).  All GPL code (mostly application code) is converted to the LGPL and now also specifically declares version 2.1, revoking the blank check to the FSF.  The intent of these sweeping changes are to simplify the licensing terms and increase overall flexibility of use, both externally (to users for their purposes) and internally (to allow application code to be migrated to libraries without creating GPL libraries).  As a collective work, BRL-CAD is now LGPL.
@
text
@d34 1
a34 1
static const char RCSell[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/librt/db5_types.c,v 14.12 2007/01/21 04:45:43 brlcad Exp $ (BRL)";
a39 1

@


14.12
log
@ugh, what tedium.  put some effort towards cleaning up the doxygen labels and making the headers more consistent.  also exclusively using @@ for doxygen instead of \ to try to keep things more consistent.
@
text
@d9 1
a9 2
 * as published by the Free Software Foundation; either version 2 of
 * the License, or (at your option) any later version.
d14 1
a14 1
 * Library General Public License for more details.
d34 1
a34 1
static const char RCSell[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/librt/db5_types.c,v 14.11 2007/01/20 14:36:54 brlcad Exp $ (BRL)";
@


14.11
log
@update copyright to 2007
@
text
@a20 1

d22 1
a22 2

/*@@{*/
d24 1
a32 1
 *
d35 1
a35 1
static const char RCSell[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/librt/db5_types.c,v 14.10 2006/09/16 02:04:24 lbutler Exp $ (BRL)";
d380 1
a380 1
/*@@}*/
@


14.10
log
@Doxygen updates
@
text
@d4 1
a4 1
 * Copyright (c) 2000-2006 United States Government as represented by
d37 1
a37 1
static const char RCSell[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/librt/db5_types.c,v 14.9 2006/01/18 06:46:17 brlcad Exp $ (BRL)";
@


14.9
log
@update copyright to 2006
@
text
@d22 1
a22 1
/** \addtogroup db5 */
a35 1
/*@@}*/
d37 1
a37 1
static const char RCSell[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/librt/db5_types.c,v 14.8 2005/10/23 04:44:35 brlcad Exp $ (BRL)";
d382 1
@


14.8
log
@trailing ws
@
text
@d4 1
a4 1
 * Copyright (C) 2000-2005 United States Government as represented by
d38 1
a38 1
static const char RCSell[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/librt/db5_types.c,v 14.7 2005/08/12 22:31:07 lbutler Exp $ (BRL)";
@


14.7
log
@Doxygen changes
@
text
@d34 1
a34 1
 *  
d38 1
a38 1
static const char RCSell[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/librt/db5_types.c,v 14.6 2005/01/30 20:30:57 brlcad Exp $ (BRL)";
@


14.7.4.1
log
@merge changes from HEAD aka rel-7-6-4 to the rel-7-6-branch just in case someone peeks a gander or tries to continue/build the branch
@
text
@d34 1
a34 1
 *
d38 1
a38 1
static const char RCSell[] = "@@(#)$Header$ (BRL)";
@


14.6
log
@update copyright to 2005
@
text
@d21 4
a25 2
 *
 *  Purpose -
d36 1
d38 1
a38 1
static const char RCSell[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/librt/db5_types.c,v 14.5 2004/12/21 06:38:20 morrison Exp $ (BRL)";
@


14.5
log
@remove the old copyright notice section
@
text
@d4 1
a4 1
 * Copyright (c) 2000-2004 United States Government as represented by
d35 1
a35 1
static const char RCSell[] = "@@(#)$Header: /cvs/brlcad/src/librt/db5_types.c,v 14.4 2004/12/21 06:18:45 morrison Exp $ (BRL)";
@


14.4
log
@they should have received a copy of the LGPL with LGPL'd files
@
text
@a32 3
 *  Copyright Notice -
 *	This software is Copyright (C) 2000-2004 by the United States Army.
 *	All rights reserved.
d35 1
a35 1
static const char RCSell[] = "@@(#)$Header: /cvs/brlcad/src/librt/db5_types.c,v 14.3 2004/12/21 05:45:23 morrison Exp $ (BRL)";
@


14.3
log
@s/GNU Library General/GNU Lesser General/g
@
text
@d17 2
a18 2
 * You should have received a copy of the GNU General Public License
 * along with this file; see the file named COPYING for more
d38 1
a38 1
static const char RCSell[] = "@@(#)$Header: /cvs/brlcad/src/librt/db5_types.c,v 14.2 2004/12/21 04:18:19 morrison Exp $ (BRL)";
@


14.2
log
@assign copyright and LGPL
@
text
@d8 1
a8 1
 * modify it under the terms of the GNU Library General Public License
d38 1
a38 1
static const char RCSell[] = "@@(#)$Header: /cvs/brlcad/src/librt/db5_types.c,v 14.1 2004/11/16 19:42:15 morrison Exp $ (BRL)";
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d1 21
a21 2
/*
 *			D B 5 _ T Y P E S . C
d38 1
a38 1
static const char RCSell[] = "@@(#)$Header: /cvs/brlcad/src/librt/db5_types.c,v 1.2 2004/08/02 23:01:49 morrison Exp $ (BRL)";
@


1.2
log
@replace the wrapped config.h block with common.h
@
text
@d19 1
a19 1
static const char RCSell[] = "@@(#)$Header: /cvs/brlcad/src/librt/db5_types.c,v 1.1 2004/05/20 15:19:57 morrison Exp $ (BRL)";
d363 10
@


1.1
log
@Vast reorganization begins.  Sources moved from top-level directories into src/.
@
text
@d19 1
a19 1
static const char RCSell[] = "@@(#)$Header: /cvs/brlcad/librt/db5_types.c,v 1.9 2004/05/10 15:30:46 erikg Exp $ (BRL)";
d22 1
a22 3
#ifdef HAVE_CONFIG_H
# include "config.h"
#endif
@

