head	14.14;
access;
symbols
	rel-7-10-4:14.14
	STABLE:14.14.0.2
	stable-branch:14.6
	rel-7-10-2:14.14
	rel-7-10-0:14.14
	rel-7-8-4:14.10
	rel-7-8-2:14.9
	rel-7-8-0:14.9
	trimnurbs-branch:14.9.0.2
	help:14.9
	temp_tag:14.8
	bobWinPort-20051223-freeze:14.7
	postmerge-20051223-bobWinPort:14.8
	premerge-20051223-bobWinPort:14.8
	rel-7-6-6:14.8
	rel-7-6-4:14.8
	rel-7-6-2:14.7
	rel-7-6-branch:14.7.0.4
	rel-7-6-0:14.7
	rel-7-4-2:14.6
	rel-7-4-branch:14.6.0.2
	bobWinPort:14.7.0.2
	rel-7-4-0:14.6
	rel-7-2-6:14.6
	rel-7-2-4:14.6
	rel-7-2-2:14.6
	rel-7-2-0:14.6
	rel-7-0-4:14.5
	rel-7-0-2:14.5
	rel-7-0-1:14.5
	opensource-post:14.5
	opensource-pre:1.2
	rel-7-0-branch:1.2.0.2
	rel-7-0:1.2;
locks; strict;
comment	@ * @;


14.14
date	2007.01.27.01.41.41;	author brlcad;	state Exp;
branches;
next	14.13;

14.13
date	2007.01.23.01.13.37;	author brlcad;	state Exp;
branches;
next	14.12;

14.12
date	2007.01.21.04.45.44;	author brlcad;	state Exp;
branches;
next	14.11;

14.11
date	2007.01.20.14.36.55;	author brlcad;	state Exp;
branches;
next	14.10;

14.10
date	2006.09.16.02.04.25;	author lbutler;	state Exp;
branches;
next	14.9;

14.9
date	2006.01.18.06.46.17;	author brlcad;	state Exp;
branches;
next	14.8;

14.8
date	2005.10.23.04.44.35;	author brlcad;	state Exp;
branches;
next	14.7;

14.7
date	2005.08.12.22.31.08;	author lbutler;	state Exp;
branches
	14.7.4.1;
next	14.6;

14.6
date	2005.01.30.20.31.00;	author brlcad;	state Exp;
branches;
next	14.5;

14.5
date	2004.12.21.06.38.21;	author morrison;	state Exp;
branches;
next	14.4;

14.4
date	2004.12.21.06.18.45;	author morrison;	state Exp;
branches;
next	14.3;

14.3
date	2004.12.21.05.45.24;	author morrison;	state Exp;
branches;
next	14.2;

14.2
date	2004.12.21.04.18.20;	author morrison;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.16;	author morrison;	state Exp;
branches;
next	1.2;

1.2
date	2004.08.02.23.01.49;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.20.15.20.04;	author morrison;	state Exp;
branches;
next	;

14.7.4.1
date	2005.11.13.13.46.16;	author brlcad;	state Exp;
branches;
next	;


desc
@@


14.14
log
@ws. lots and lots of ws.  see sh/ws.sh for details (cases 'abcdeg').
@
text
@/*                         M A T E R . C
 * BRL-CAD
 *
 * Copyright (c) 1985-2007 United States Government as represented by
 * the U.S. Army Research Laboratory.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * version 2.1 as published by the Free Software Foundation.
 *
 * This library is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this file; see the file named COPYING for more
 * information.
 */
/** @@addtogroup librt */
/** @@{ */
/** @@file mater.c
 *
 *  Code to deal with establishing and maintaining the tables which
 *  map region ID codes into worthwhile material information
 *  (colors and outboard database "handles").
 *
 *  These really are "db_" routines, more fundamental than "rt_".
 *
 *  Functions -
 *	color_addrec	Called by rt_dirbuild on startup
 *	color_map	Map one region reference to a material
 *
 *  Author -
 *	Michael John Muuss
 *
 *  Source -
 *	SECAD/VLD Computing Consortium, Bldg 394
 *	The U. S. Army Ballistic Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005
 *
 */
/** @@} */

#ifndef lint
static const char RCSmater[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/librt/mater.c,v 14.13 2007/01/23 01:13:37 brlcad Exp $ (BRL)";
#endif

#include "common.h"


#include <stdio.h>
#include "machine.h"
#include "vmath.h"
#include "mater.h"
#include "raytrace.h"
#include "./debug.h"

/*
 *  It is expected that entries on this mater list will be sorted
 *  in strictly ascending order, with no overlaps (ie, monotonicly
 * increasing).
 */
struct mater *rt_material_head = MATER_NULL;

void	rt_insert_color(struct mater *newp);

/*
 *			R T _ P R _ M A T E R
 */
void
rt_pr_mater(register struct mater *mp)
{
	(void)bu_log( "%5d..%d\t", mp->mt_low, mp->mt_high );
	(void)bu_log( "%d,%d,%d\t", mp->mt_r, mp->mt_g, mp->mt_b);
}

/*
 *  			R T _ C O L O R _ A D D R E C
 *
 *  Called from db_scan() when initially scanning database.
 */
void
rt_color_addrec( int low, int hi, int r, int g, int b, long addr )
{
	register struct mater *mp;

	BU_GETSTRUCT( mp, mater );
	mp->mt_low = low;
	mp->mt_high = hi;
	mp->mt_r = r;
	mp->mt_g = g;
	mp->mt_b = b;
/*	mp->mt_handle = bu_strdup( recp->md.md_material ); */
	mp->mt_daddr = addr;
	rt_insert_color( mp );
}

/*
 *  			R T _ I N S E R T _ C O L O R
 *
 *  While any additional database records are created and written here,
 *  it is the responsibility of the caller to color_putrec(newp) if needed.
 */
void
rt_insert_color( struct mater *newp )
{
	register struct mater *mp;
	register struct mater *zot;

	if( rt_material_head == MATER_NULL || newp->mt_high < rt_material_head->mt_low )  {
		/* Insert at head of list */
		newp->mt_forw = rt_material_head;
		rt_material_head = newp;
		return;
	}
	if( newp->mt_low < rt_material_head->mt_low )  {
		/* Insert at head of list, check for redefinition */
		newp->mt_forw = rt_material_head;
		rt_material_head = newp;
		goto check_overlap;
	}
	for( mp = rt_material_head; mp != MATER_NULL; mp = mp->mt_forw )  {
		if( mp->mt_low == newp->mt_low  &&
		    mp->mt_high <= newp->mt_high )  {
			bu_log("dropping overwritten region-id based material property entry:\n");
			newp->mt_forw = mp->mt_forw;
			rt_pr_mater( mp );
			*mp = *newp;		/* struct copy */
			bu_free( (char *)newp, "getstruct mater" );
			newp = mp;
			goto check_overlap;
		}
		if( mp->mt_low  < newp->mt_low  &&
		    mp->mt_high > newp->mt_high )  {
			/* New range entirely contained in old range; split */
			bu_log("Splitting region-id based material property entry into 3 ranges\n");
			BU_GETSTRUCT( zot, mater );
			*zot = *mp;		/* struct copy */
			zot->mt_daddr = MATER_NO_ADDR;
			/* zot->mt_high = mp->mt_high; */
			zot->mt_low = newp->mt_high+1;
			mp->mt_high = newp->mt_low-1;
			/* mp, newp, zot */
			/* zot->mt_forw = mp->mt_forw; */
			newp->mt_forw = zot;
			mp->mt_forw = newp;
			rt_pr_mater( mp );
			rt_pr_mater( newp );
			rt_pr_mater( zot );
			return;
		}
		if( mp->mt_high > newp->mt_low )  {
			/* Overlap to the left: Shorten preceeding entry */
			bu_log("Shortening region-id based material property entry lhs range, from:\n");
			rt_pr_mater( mp );
			bu_log("to:\n");
			mp->mt_high = newp->mt_low-1;
			rt_pr_mater( mp );
			/* Now append */
			newp->mt_forw = mp->mt_forw;
			mp->mt_forw = newp;
			goto check_overlap;
		}
		if( mp->mt_forw == MATER_NULL ||
		    newp->mt_low < mp->mt_forw->mt_low )  {
			/* Append */
			newp->mt_forw = mp->mt_forw;
			mp->mt_forw = newp;
			goto check_overlap;
		}
	}
	bu_log("fell out of rt_insert_color loop, append region-id based material property entry to end of list\n");
	/* Append at end */
	newp->mt_forw = MATER_NULL;
	mp->mt_forw = newp;
	return;

	/* Check for overlap, ie, redefinition of following colors */
check_overlap:
	while( newp->mt_forw != MATER_NULL &&
	       newp->mt_high >= newp->mt_forw->mt_low )  {
		if( newp->mt_high >= newp->mt_forw->mt_high )  {
			/* Drop this mater struct */
			zot = newp->mt_forw;
			newp->mt_forw = zot->mt_forw;
			bu_log("dropping overlaping region-id based material property entry:\n");
			rt_pr_mater( zot );
			bu_free( (char *)zot, "getstruct mater" );
			continue;
		}
		if( newp->mt_high >= newp->mt_forw->mt_low )  {
			/* Shorten this mater struct, then done */
			bu_log("Shortening region-id based material property entry rhs range, from:\n");
			rt_pr_mater( newp->mt_forw );
			bu_log("to:\n");
			newp->mt_forw->mt_low = newp->mt_high+1;
			rt_pr_mater( newp->mt_forw );
			continue;	/* more conservative than returning */
		}
	}
}

/*
 *  			R T _ R E G I O N _ C O L O R _ M A P
 *
 *  If the GIFT regionid of this region falls into a mapped area
 *  of regionid-driven color override.
 */
void
rt_region_color_map(register struct region *regp)
{
	register struct mater *mp;

	if( regp == REGION_NULL )  {
		bu_log("color_map(NULL)\n");
		return;
	}
	for( mp = rt_material_head; mp != MATER_NULL; mp = mp->mt_forw )  {
		if( regp->reg_regionid <= mp->mt_high &&
		    regp->reg_regionid >= mp->mt_low ) {
			regp->reg_mater.ma_color_valid = 1;
			regp->reg_mater.ma_color[0] =
				(((double)mp->mt_r)+0.5)*bn_inv255;
			regp->reg_mater.ma_color[1] =
				(((double)mp->mt_g)+0.5)*bn_inv255;
			regp->reg_mater.ma_color[2] =
				(((double)mp->mt_b)+0.5)*bn_inv255;
			return;
		}
	}
}

/*
 *			R T _ C O L O R _ F R E E
 *
 *  Really should be db_color_free().
 *  Called from db_close().
 */
void
rt_color_free(void)
{
	register struct mater *mp;

	while( (mp = rt_material_head) != MATER_NULL )  {
		rt_material_head = mp->mt_forw;	/* Dequeue 'mp' */
		/* mt_handle? */
		bu_free( (char *)mp, "getstruct mater" );
	}
}

/*
 * Local Variables:
 * mode: C
 * tab-width: 8
 * c-basic-offset: 4
 * indent-tabs-mode: t
 * End:
 * ex: shiftwidth=4 tabstop=8
 */
@


14.13
log
@Sweeping license updates.  Documentation is fully relicensed to the BSD Documentation License (a minor variant of the FreeBSD Documentation License and BSD License).  All GPL code (mostly application code) is converted to the LGPL and now also specifically declares version 2.1, revoking the blank check to the FSF.  The intent of these sweeping changes are to simplify the licensing terms and increase overall flexibility of use, both externally (to users for their purposes) and internally (to allow application code to be migrated to libraries without creating GPL libraries).  As a collective work, BRL-CAD is now LGPL.
@
text
@d46 1
a46 1
static const char RCSmater[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/librt/mater.c,v 14.12 2007/01/21 04:45:44 brlcad Exp $ (BRL)";
a51 1

d222 1
a222 1
		    	regp->reg_mater.ma_color_valid = 1;
@


14.12
log
@ugh, what tedium.  put some effort towards cleaning up the doxygen labels and making the headers more consistent.  also exclusively using @@ for doxygen instead of \ to try to keep things more consistent.
@
text
@d9 1
a9 2
 * as published by the Free Software Foundation; either version 2 of
 * the License, or (at your option) any later version.
d14 1
a14 1
 * Library General Public License for more details.
d46 1
a46 1
static const char RCSmater[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/librt/mater.c,v 14.11 2007/01/20 14:36:55 brlcad Exp $ (BRL)";
@


14.11
log
@update copyright to 2007
@
text
@a20 1

d22 1
a22 2

/*@@{*/
d24 1
d44 1
a44 1
/*@@}*/
d47 1
a47 1
static const char RCSmater[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/librt/mater.c,v 14.10 2006/09/16 02:04:25 lbutler Exp $ (BRL)";
@


14.10
log
@Doxygen updates
@
text
@d4 1
a4 1
 * Copyright (c) 1985-2006 United States Government as represented by
d48 1
a48 1
static const char RCSmater[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/librt/mater.c,v 14.9 2006/01/18 06:46:17 brlcad Exp $ (BRL)";
@


14.9
log
@update copyright to 2006
@
text
@d22 1
a22 1
/** \addtogroup librt */
d48 1
a48 1
static const char RCSmater[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/librt/mater.c,v 14.8 2005/10/23 04:44:35 brlcad Exp $ (BRL)";
@


14.8
log
@trailing ws
@
text
@d4 1
a4 1
 * Copyright (C) 1985-2005 United States Government as represented by
d48 1
a48 1
static const char RCSmater[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/librt/mater.c,v 14.7 2005/08/12 22:31:08 lbutler Exp $ (BRL)";
@


14.7
log
@Doxygen changes
@
text
@d38 1
a38 1
 *  
d43 1
a43 1
 *  
d48 1
a48 1
static const char RCSmater[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/librt/mater.c,v 14.6 2005/01/30 20:31:00 brlcad Exp $ (BRL)";
d83 1
a83 1
 *  
@


14.7.4.1
log
@merge changes from HEAD aka rel-7-6-4 to the rel-7-6-branch just in case someone peeks a gander or tries to continue/build the branch
@
text
@d38 1
a38 1
 *
d43 1
a43 1
 *
d48 1
a48 1
static const char RCSmater[] = "@@(#)$Header$ (BRL)";
d83 1
a83 1
 *
@


14.6
log
@update copyright to 2005
@
text
@d21 4
a25 1
 *  
d45 2
d48 1
a48 1
static const char RCSmater[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/librt/mater.c,v 14.5 2004/12/21 06:38:21 morrison Exp $ (BRL)";
@


14.5
log
@remove the old copyright notice section
@
text
@d4 1
a4 1
 * Copyright (c) 1985-2004 United States Government as represented by
d43 1
a43 1
static const char RCSmater[] = "@@(#)$Header: /cvs/brlcad/src/librt/mater.c,v 14.4 2004/12/21 06:18:45 morrison Exp $ (BRL)";
@


14.4
log
@they should have received a copy of the LGPL with LGPL'd files
@
text
@a40 3
 *  Copyright Notice -
 *	This software is Copyright (C) 1985-2004 by the United States Army.
 *	All rights reserved.
d43 1
a43 1
static const char RCSmater[] = "@@(#)$Header: /cvs/brlcad/src/librt/mater.c,v 14.3 2004/12/21 05:45:24 morrison Exp $ (BRL)";
@


14.3
log
@s/GNU Library General/GNU Lesser General/g
@
text
@d17 2
a18 2
 * You should have received a copy of the GNU General Public License
 * along with this file; see the file named COPYING for more
d46 1
a46 1
static const char RCSmater[] = "@@(#)$Header: /cvs/brlcad/src/librt/mater.c,v 14.2 2004/12/21 04:18:20 morrison Exp $ (BRL)";
@


14.2
log
@assign copyright and LGPL
@
text
@d8 1
a8 1
 * modify it under the terms of the GNU Library General Public License
d46 1
a46 1
static const char RCSmater[] = "@@(#)$Header: /cvs/brlcad/src/librt/mater.c,v 14.1 2004/11/16 19:42:16 morrison Exp $ (BRL)";
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d1 21
a21 2
/*
 *  			M A T E R . C
d46 1
a46 1
static const char RCSmater[] = "@@(#)$Header: /cvs/brlcad/src/librt/mater.c,v 1.2 2004/08/02 23:01:49 morrison Exp $ (BRL)";
@


1.2
log
@replace the wrapped config.h block with common.h
@
text
@d27 1
a27 1
static const char RCSmater[] = "@@(#)$Header: /cvs/brlcad/src/librt/mater.c,v 1.1 2004/05/20 15:20:04 morrison Exp $ (BRL)";
d233 10
@


1.1
log
@Vast reorganization begins.  Sources moved from top-level directories into src/.
@
text
@d27 1
a27 1
static const char RCSmater[] = "@@(#)$Header: /cvs/brlcad/librt/mater.c,v 11.14 2004/05/10 15:30:46 erikg Exp $ (BRL)";
d30 1
a30 3
#ifdef HAVE_CONFIG_H
# include "config.h"
#endif
@

