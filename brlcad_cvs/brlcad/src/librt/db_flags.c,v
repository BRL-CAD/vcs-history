head	14.7;
access;
symbols
	rel-7-10-4:14.7
	STABLE:14.7.0.2
	rel-7-10-2:14.7
	rel-7-10-0:14.6
	rel-7-8-4:14.3
	rel-7-8-2:14.2
	rel-7-8-0:14.2
	trimnurbs-branch:14.2.0.2
	help:14.2;
locks; strict;
comment	@ * @;


14.7
date	2007.07.26.01.13.57;	author brlcad;	state Exp;
branches;
next	14.6;

14.6
date	2007.01.23.01.13.36;	author brlcad;	state Exp;
branches;
next	14.5;

14.5
date	2007.01.21.04.45.43;	author brlcad;	state Exp;
branches;
next	14.4;

14.4
date	2007.01.20.14.36.54;	author brlcad;	state Exp;
branches;
next	14.3;

14.3
date	2006.09.16.02.04.24;	author lbutler;	state Exp;
branches;
next	14.2;

14.2
date	2006.01.18.06.46.17;	author brlcad;	state Exp;
branches;
next	14.1;

14.1
date	2006.01.16.18.18.56;	author brlcad;	state Exp;
branches;
next	;


desc
@@


14.7
log
@remove ephemeral data like phone numbers and addresses, including the misleading 'source' statements on code that is continually evolving and receiving contributions from many many sources
@
text
@/*                     D B _ F L A G S . C
 * BRL-CAD
 *
 * Copyright (c) 2006-2007 United States Government as represented by
 * the U.S. Army Research Laboratory.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * version 2.1 as published by the Free Software Foundation.
 *
 * This library is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this file; see the file named COPYING for more
 * information.
 */
/** @@addtogroup db4 */
/** @@{ */
/** @@file db_flags.c
 *
 *  Given an internal representation of a geometry object, there are
 *  particular directory flags associated with it (at least for
 *  geometric objects) that we may need to obtain.  The directory
 *  flags are mostly based on the major and minor type of the object
 *  so these routines consolidate that logic.
 *
 *  Functions
 *    db_flags_internal - given an rt_db_internal, return the flags
 *    db_flags_raw_internal - given a db5_raw_internal, return flags
 *
 *  Authors -
 *      Christopher Sean Morrison
 *
 */

#include "common.h"

#include "machine.h"
#include "bu.h"
#include "vmath.h"
#include "db.h"
#include "raytrace.h"


/**
 *  D B _ F L A G S _ I N T E R N A L
 *
 * Given the internal form of a database object, return the
 * appropriate 'flags' word for stashing in the in-memory directory of
 * objects.
 */
int
db_flags_internal(const struct rt_db_internal *intern)
{
	const struct rt_comb_internal	*comb;

	RT_CK_DB_INTERNAL(intern);

	if( intern->idb_type != ID_COMBINATION )
		return DIR_SOLID;

	comb = (struct rt_comb_internal *)intern->idb_ptr;
	RT_CK_COMB(comb);

	if( comb->region_flag )
		return DIR_COMB | DIR_REGION;
	return DIR_COMB;
}


/* XXX - should use in db5_diradd() */
/**
 * d b _ f l a g s _ r a w _ i n t e r n a l
 *
 * Given a database object in "raw" internal form, return the
 * appropriate 'flags' word for stashing in the in-memory directory of
 * objects.
 */
int
db_flags_raw_internal(const struct db5_raw_internal *raw)
{
    struct bu_attribute_value_set avs;

    if (raw->major_type != DB5_MAJORTYPE_BRLCAD) {
	return DIR_NON_GEOM;
    }
    if (raw->minor_type == DB5_MINORTYPE_BRLCAD_COMBINATION) {
	if (raw->attributes.ext_buf) {
	    bu_avs_init_empty(&avs);
	    if (db5_import_attributes(&avs, &raw->attributes) < 0) {
		/* could not load attributes, so presume not a region */
		return DIR_COMB;
	    }
	    if (avs.count == 0) {
		return DIR_COMB;
	    }
	    if (bu_avs_get( &avs, "region" ) != NULL) {
		return DIR_COMB|DIR_REGION;
	    }
	}
	return DIR_COMB;
    }

    /* anything else is a solid? */
    return DIR_SOLID;
}

/** @@} */
/*
 * Local Variables:
 * mode: C
 * tab-width: 8
 * c-basic-offset: 4
 * indent-tabs-mode: t
 * End:
 * ex: shiftwidth=4 tabstop=8
 */
@


14.6
log
@Sweeping license updates.  Documentation is fully relicensed to the BSD Documentation License (a minor variant of the FreeBSD Documentation License and BSD License).  All GPL code (mostly application code) is converted to the LGPL and now also specifically declares version 2.1, revoking the blank check to the FSF.  The intent of these sweeping changes are to simplify the licensing terms and increase overall flexibility of use, both externally (to users for their purposes) and internally (to allow application code to be migrated to libraries without creating GPL libraries).  As a collective work, BRL-CAD is now LGPL.
@
text
@a36 5
 *  Source -
 *	SECAD/VLD Computing Consortium, Bldg 394
 *	The U. S. Army Ballistic Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5066
 *
@


14.5
log
@ugh, what tedium.  put some effort towards cleaning up the doxygen labels and making the headers more consistent.  also exclusively using @@ for doxygen instead of \ to try to keep things more consistent.
@
text
@d9 1
a9 2
 * as published by the Free Software Foundation; either version 2 of
 * the License, or (at your option) any later version.
d14 1
a14 1
 * Library General Public License for more details.
@


14.4
log
@update copyright to 2007
@
text
@a20 1

d22 1
a22 2

/*@@{*/
d117 1
a117 1
/*@@}*/
@


14.3
log
@Doxygen updates
@
text
@d4 1
a4 1
 * Copyright (c) 2006 United States Government as represented by
@


14.2
log
@update copyright to 2006
@
text
@d22 1
a22 1
/** \addtogroup db */
a45 1
/*@@}*/
d119 1
@


14.1
log
@move the db_flags_internal() to its own db_flags.c file as it has very little to do with allocations. also, add another routine for getting the flags from a db5_raw_internal as well.
@
text
@d4 1
a4 1
 * Copyright (C) 2006 United States Government as represented by
@

