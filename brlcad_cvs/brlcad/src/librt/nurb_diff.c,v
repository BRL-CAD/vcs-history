head	14.14;
access;
symbols
	rel-7-10-4:14.14
	STABLE:14.14.0.2
	stable-branch:14.6
	rel-7-10-2:14.14
	rel-7-10-0:14.14
	rel-7-8-4:14.10
	rel-7-8-2:14.9
	rel-7-8-0:14.9
	trimnurbs-branch:14.9.0.2
	help:14.9
	temp_tag:14.8
	bobWinPort-20051223-freeze:14.7
	postmerge-20051223-bobWinPort:14.8
	premerge-20051223-bobWinPort:14.8
	rel-7-6-6:14.8
	rel-7-6-4:14.8
	rel-7-6-2:14.7
	rel-7-6-branch:14.7.0.4
	rel-7-6-0:14.7
	rel-7-4-2:14.6
	rel-7-4-branch:14.6.0.2
	bobWinPort:14.7.0.2
	rel-7-4-0:14.6
	rel-7-2-6:14.6
	rel-7-2-4:14.6
	rel-7-2-2:14.6
	rel-7-2-0:14.6
	rel-7-0-4:14.5
	rel-7-0-2:14.5
	rel-7-0-1:14.5
	opensource-post:14.5
	opensource-pre:1.2
	rel-7-0-branch:1.2.0.2
	rel-7-0:1.2;
locks; strict;
comment	@ * @;


14.14
date	2007.01.27.01.41.41;	author brlcad;	state Exp;
branches;
next	14.13;

14.13
date	2007.01.23.01.13.38;	author brlcad;	state Exp;
branches;
next	14.12;

14.12
date	2007.01.21.04.45.44;	author brlcad;	state Exp;
branches;
next	14.11;

14.11
date	2007.01.20.14.36.55;	author brlcad;	state Exp;
branches;
next	14.10;

14.10
date	2006.09.16.02.04.25;	author lbutler;	state Exp;
branches;
next	14.9;

14.9
date	2006.01.18.06.46.17;	author brlcad;	state Exp;
branches;
next	14.8;

14.8
date	2005.10.23.04.44.36;	author brlcad;	state Exp;
branches;
next	14.7;

14.7
date	2005.08.12.22.31.08;	author lbutler;	state Exp;
branches
	14.7.4.1;
next	14.6;

14.6
date	2005.01.30.20.31.03;	author brlcad;	state Exp;
branches;
next	14.5;

14.5
date	2004.12.21.06.38.21;	author morrison;	state Exp;
branches;
next	14.4;

14.4
date	2004.12.21.06.18.47;	author morrison;	state Exp;
branches;
next	14.3;

14.3
date	2004.12.21.05.45.24;	author morrison;	state Exp;
branches;
next	14.2;

14.2
date	2004.12.21.04.18.20;	author morrison;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.16;	author morrison;	state Exp;
branches;
next	1.2;

1.2
date	2004.08.02.23.01.49;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.20.15.20.07;	author morrison;	state Exp;
branches;
next	;

14.7.4.1
date	2005.11.13.13.46.17;	author brlcad;	state Exp;
branches;
next	;


desc
@@


14.14
log
@ws. lots and lots of ws.  see sh/ws.sh for details (cases 'abcdeg').
@
text
@/*                     N U R B _ D I F F . C
 * BRL-CAD
 *
 * Copyright (c) 1986-2007 United States Government as represented by
 * the U.S. Army Research Laboratory.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * version 2.1 as published by the Free Software Foundation.
 *
 * This library is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this file; see the file named COPYING for more
 * information.
 */
/** @@addtogroup nurb */
/** @@{ */
/** @@file nurb_diff.c
 *
 *	Differentiate a Non Uniform Rational B-Spline (NURB) Surface.
 *  Author -
 *	Paul Randal Stay
 *
 *  Source -
 * 	SECAD/VLD Computing Consortium, Bldg 394
 *	The U.S. Army Ballistic Research Laboratory
 * 	Aberdeen Proving Ground, Maryland 21005
 *
 */
/** @@} */

#include "common.h"


#include <stdio.h>
#include "machine.h"
#include "vmath.h"
#include "nmg.h"
#include "raytrace.h"
#include "nurb.h"

/* Given a NURB surface and a direction, differentiate the surface
 * and return a new surface which is the derivative of the original
 * surface.
 *
 * The algorithm is found in the following reference:
 *	Carl De Boor, "A Practical Guide To Splines", page 139
 *
 * The algorithm deals mainly with the new control mesh, but the new knot
 * vector is a subset of the original. (subtract a knot from each of
 * the ends).
 *
 * Arguments to rt_nurb_s_diff() --
 *	srf - NURB surface
 *	dir - parametric direction of the split.
 */

struct face_g_snurb *
rt_nurb_s_diff(const struct face_g_snurb *srf, int dir)
{
	struct face_g_snurb *nsrf;
	int	i;

	NMG_CK_SNURB(srf);

	if (dir == RT_NURB_SPLIT_ROW) {
		nsrf = (struct face_g_snurb *)
		rt_nurb_new_snurb( srf->order[0] - 1, srf->order[1],
		    srf->u.k_size - 2, srf->v.k_size,
		    srf->s_size[0], srf->s_size[1] - 1,
		    srf->pt_type, (struct resource *)NULL );

		for ( i = 0; i < srf->s_size[0]; i++) {
			fastf_t * old_points, *new_points;

			old_points = srf->ctl_points +
			    i * RT_NURB_EXTRACT_COORDS(srf->pt_type)
			*srf->s_size[1];

			new_points = nsrf->ctl_points +
			    i * RT_NURB_EXTRACT_COORDS(nsrf->pt_type)
			*nsrf->s_size[1];

			rt_nurb_mesh_diff( srf->order[0],
			    old_points, new_points, srf->u.knots,
			    RT_NURB_EXTRACT_COORDS(srf->pt_type),
			    RT_NURB_EXTRACT_COORDS(nsrf->pt_type),
			    srf->s_size[1], srf->pt_type);
		}

		for (i = 1; i < srf->u.k_size - 1; i++)
			nsrf->u.knots[i - 1] = srf->u.knots[i];

		for (i = 0; i < srf->v.k_size; i++)
			nsrf->v.knots[i] = srf->v.knots[i];
	} else	 {
		nsrf = (struct face_g_snurb *) rt_nurb_new_snurb(
		    srf->order[0], srf->order[1] - 1,
		    srf->u.k_size, srf->v.k_size - 2,
		    srf->s_size[0] - 1, srf->s_size[1],
		    srf->pt_type, (struct resource *)NULL );

		for ( i = 0; i < srf->s_size[1]; i++) {
			fastf_t * old_points, *new_points;

			old_points = srf->ctl_points +
			    i * RT_NURB_EXTRACT_COORDS(srf->pt_type);

			new_points = nsrf->ctl_points +
			    i * RT_NURB_EXTRACT_COORDS(nsrf->pt_type);

			rt_nurb_mesh_diff( srf->order[1],
			    old_points, new_points, srf->v.knots,
			    RT_NURB_EXTRACT_COORDS(srf->pt_type) *
			    srf->s_size[1],
			    RT_NURB_EXTRACT_COORDS(nsrf->pt_type) *
			    nsrf->s_size[1],
			    srf->s_size[0], srf->pt_type);
		}

		for (i = 0; i < srf->u.k_size; i++)
			nsrf->u.knots[i] = srf->u.knots[i];

		for (i = 1; i < srf->v.k_size - 1; i++)
			nsrf->v.knots[i-1] = srf->v.knots[i];
	}
	return nsrf;
}

/* Do the same thing for a curve. */

struct edge_g_cnurb *
rt_nurb_c_diff(const struct edge_g_cnurb *crv)
{

	struct edge_g_cnurb *ncrv;
	fastf_t * opts, *npts;
	int	i;

	NMG_CK_CNURB(crv);

	ncrv = (struct edge_g_cnurb *) rt_nurb_new_cnurb( crv->order - 1,
	    crv->k.k_size - 2, crv->c_size - 1,
	    crv->pt_type);

	opts = (fastf_t * ) crv->ctl_points;
	npts = (fastf_t * ) ncrv->ctl_points;

	rt_nurb_mesh_diff( crv->order, opts, npts, crv->k.knots,
	    RT_NURB_EXTRACT_COORDS( crv->pt_type),
	    RT_NURB_EXTRACT_COORDS( ncrv->pt_type),
	    crv->c_size, crv->pt_type );

	for ( i = 1; i < crv->k.k_size - 1; i++)
		ncrv->k.knots[ i - 1] = crv->k.knots[i];

	return ncrv;

}

void
rt_nurb_mesh_diff(int order, const fastf_t *o_pts, fastf_t *n_pts, const fastf_t *knots, int o_stride, int n_stride, int o_size, int pt_type)
{
	int	i, k;
	int	coords;
	fastf_t denom;

	coords = RT_NURB_EXTRACT_COORDS(pt_type);

	for ( i = 1; i < o_size; i++) {
		denom = knots[ i + order - 1] - knots[i];
		for (k = 0; k < coords; k++) {
			if (denom == 0.0)
				n_pts[k] = 0.0;
			else
				n_pts[k] = (order - 1) *
				    (o_pts[k+o_stride] - o_pts[k]) /
				    denom;
		}
		n_pts += n_stride;
		o_pts += o_stride;
	}
}


/*
 * Local Variables:
 * mode: C
 * tab-width: 8
 * c-basic-offset: 4
 * indent-tabs-mode: t
 * End:
 * ex: shiftwidth=4 tabstop=8
 */
@


14.13
log
@Sweeping license updates.  Documentation is fully relicensed to the BSD Documentation License (a minor variant of the FreeBSD Documentation License and BSD License).  All GPL code (mostly application code) is converted to the LGPL and now also specifically declares version 2.1, revoking the blank check to the FSF.  The intent of these sweeping changes are to simplify the licensing terms and increase overall flexibility of use, both externally (to users for their purposes) and internally (to allow application code to be migrated to libraries without creating GPL libraries).  As a collective work, BRL-CAD is now LGPL.
@
text
@a38 1

@


14.12
log
@ugh, what tedium.  put some effort towards cleaning up the doxygen labels and making the headers more consistent.  also exclusively using @@ for doxygen instead of \ to try to keep things more consistent.
@
text
@d9 1
a9 2
 * as published by the Free Software Foundation; either version 2 of
 * the License, or (at your option) any later version.
d14 1
a14 1
 * Library General Public License for more details.
@


14.11
log
@update copyright to 2007
@
text
@a20 1

d22 1
a22 1
/*@@{*/
d24 1
d35 1
a35 1
/*@@}*/
@


14.10
log
@Doxygen updates
@
text
@d4 1
a4 1
 * Copyright (c) 1986-2006 United States Government as represented by
@


14.9
log
@update copyright to 2006
@
text
@d22 1
a22 1
/** \addtogroup nurb */
@


14.8
log
@trailing ws
@
text
@d4 1
a4 1
 * Copyright (C) 1986-2005 United States Government as represented by
@


14.7
log
@Doxygen changes
@
text
@d28 1
a28 1
 * 
d56 1
a56 1
 * vector is a subset of the original. (subtract a knot from each of 
d74 1
a74 1
		rt_nurb_new_snurb( srf->order[0] - 1, srf->order[1], 
d76 1
a76 1
		    srf->s_size[0], srf->s_size[1] - 1, 
d82 1
a82 1
			old_points = srf->ctl_points + 
d86 1
a86 1
			new_points = nsrf->ctl_points + 
d90 1
a90 1
			rt_nurb_mesh_diff( srf->order[0], 
d103 2
a104 2
		nsrf = (struct face_g_snurb *) rt_nurb_new_snurb( 
		    srf->order[0], srf->order[1] - 1, 
d106 1
a106 1
		    srf->s_size[0] - 1, srf->s_size[1], 
d112 1
a112 1
			old_points = srf->ctl_points + 
d115 1
a115 1
			new_points = nsrf->ctl_points + 
d118 1
a118 1
			rt_nurb_mesh_diff( srf->order[1], 
d120 1
a120 1
			    RT_NURB_EXTRACT_COORDS(srf->pt_type) * 
d122 1
a122 1
			    RT_NURB_EXTRACT_COORDS(nsrf->pt_type) * 
d148 2
a149 2
	ncrv = (struct edge_g_cnurb *) rt_nurb_new_cnurb( crv->order - 1, 
	    crv->k.k_size - 2, crv->c_size - 1, 
d155 1
a155 1
	rt_nurb_mesh_diff( crv->order, opts, npts, crv->k.knots, 
d182 2
a183 2
				n_pts[k] = (order - 1) * 
				    (o_pts[k+o_stride] - o_pts[k]) / 
@


14.7.4.1
log
@merge changes from HEAD aka rel-7-6-4 to the rel-7-6-branch just in case someone peeks a gander or tries to continue/build the branch
@
text
@d28 1
a28 1
 *
d56 1
a56 1
 * vector is a subset of the original. (subtract a knot from each of
d74 1
a74 1
		rt_nurb_new_snurb( srf->order[0] - 1, srf->order[1],
d76 1
a76 1
		    srf->s_size[0], srf->s_size[1] - 1,
d82 1
a82 1
			old_points = srf->ctl_points +
d86 1
a86 1
			new_points = nsrf->ctl_points +
d90 1
a90 1
			rt_nurb_mesh_diff( srf->order[0],
d103 2
a104 2
		nsrf = (struct face_g_snurb *) rt_nurb_new_snurb(
		    srf->order[0], srf->order[1] - 1,
d106 1
a106 1
		    srf->s_size[0] - 1, srf->s_size[1],
d112 1
a112 1
			old_points = srf->ctl_points +
d115 1
a115 1
			new_points = nsrf->ctl_points +
d118 1
a118 1
			rt_nurb_mesh_diff( srf->order[1],
d120 1
a120 1
			    RT_NURB_EXTRACT_COORDS(srf->pt_type) *
d122 1
a122 1
			    RT_NURB_EXTRACT_COORDS(nsrf->pt_type) *
d148 2
a149 2
	ncrv = (struct edge_g_cnurb *) rt_nurb_new_cnurb( crv->order - 1,
	    crv->k.k_size - 2, crv->c_size - 1,
d155 1
a155 1
	rt_nurb_mesh_diff( crv->order, opts, npts, crv->k.knots,
d182 2
a183 2
				n_pts[k] = (order - 1) *
				    (o_pts[k+o_stride] - o_pts[k]) /
@


14.6
log
@update copyright to 2005
@
text
@d21 3
a24 1
 *  Function -
d35 1
@


14.5
log
@remove the old copyright notice section
@
text
@d4 1
a4 1
 * Copyright (c) 1986-2004 United States Government as represented by
@


14.4
log
@they should have received a copy of the LGPL with LGPL'd files
@
text
@a31 3
 *  Copyright Notice -
 *	This software is Copyright (C) 1986-2004 by the United States Army.
 *	All rights reserved.
@


14.3
log
@s/GNU Library General/GNU Lesser General/g
@
text
@d17 2
a18 2
 * You should have received a copy of the GNU General Public License
 * along with this file; see the file named COPYING for more
@


14.2
log
@assign copyright and LGPL
@
text
@d8 1
a8 1
 * modify it under the terms of the GNU Library General Public License
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d1 2
a2 1
/*	N U R B _ D I F F . C
d4 18
@


1.2
log
@replace the wrapped config.h block with common.h
@
text
@d172 10
@


1.1
log
@Vast reorganization begins.  Sources moved from top-level directories into src/.
@
text
@d18 1
a18 3
#ifdef HAVE_CONFIG_H
# include "config.h"
#endif
@

