head	1.5;
access;
symbols;
locks; strict;
comment	@ * @;


1.5
date	2005.07.10.03.58.19;	author twingy;	state dead;
branches;
next	1.4;

1.4
date	2005.07.10.03.48.10;	author twingy;	state Exp;
branches;
next	1.3;

1.3
date	2005.07.09.02.44.45;	author twingy;	state Exp;
branches;
next	1.2;

1.2
date	2005.06.17.21.40.53;	author erikgreenwald;	state Exp;
branches;
next	1.1;

1.1
date	2005.06.17.15.09.25;	author lbutler;	state Exp;
branches;
next	;


desc
@@


1.5
log
@IGVT->ISST 90%
@
text
@/*
 * $Id: main.c,v 1.4 2005/07/10 03:48:10 twingy Exp $
 */

#ifdef HAVE_CONFIG_H
# include "brlcad_config.h"
#endif

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <signal.h>
#include <unistd.h>
#include "ivat.h"
#include "slave.h"
#include "tienet.h"


#ifdef HAVE_GETOPT_H
# include <getopt.h>
#endif

#ifdef HAVE_GETOPT_LONG
static struct option longopts[] =
{
	{ "help",	no_argument,		NULL, 'h' },
	{ "port",	required_argument,	NULL, 'p' },
	{ "threads",	required_argument,	NULL, 't' },
	{ "version",	no_argument,		NULL, 'v' },
};
#endif
static char shortopts[] = "Xdhp:t:v";


static void finish(int sig) {
  printf("Collected signal %d, aborting!\n", sig);
  exit(EXIT_FAILURE);
}


static void help() {
  printf("%s\n", IVAT_VER_DETAIL);
  printf("%s", "usage: ivat_slave [options]\n\
  -v\t\tdisplay version\n\
  -h\t\tdisplay help\n\
  -p\t\tport number\n\
  -t ...\tnumber of threads to launch for processing\n");
}


int main(int argc, char **argv) {
  int		port = 0, c = 0, threads = 0;
  char		host[64], temp[64];


  /* Default Port */
  signal(SIGINT, finish);

  /* Initialize strings */
  host[0] = 0;
  port = 0;


  /* Parse command line options */

  while((c = 
#ifdef HAVE_GETOPT_LONG
	getopt_long(argc, argv, shortopts, longopts, NULL)
#else
	getopt(argc, argv, shortopts)
#endif
	)!= -1)
  {
	  switch(c) {
            case 'h':
              help();
              return EXIT_SUCCESS;

            case 'p':
              port = atoi(optarg);
              break;

            case 't':
              strncpy(temp, optarg, 4);
              threads = atoi(temp);
              if(threads < 0) threads = 0;
              if(threads > 32) threads = 32;
              break;

           case 'v':
             printf("%s\n", IVAT_VER_DETAIL);
             return EXIT_SUCCESS;

           default:
             help();
             return EXIT_FAILURE;
	  }
  }
  argc -= optind;
  argv += optind;

  if(argc)
    strncpy(host, argv[0], 64);

  if(!host[0]) {
    if(!port)
      port = TN_SLAVE_PORT;
    printf("running as daemon.\n");
  } else {
    if(!port)
      port = TN_MASTER_PORT;
  }

  ivat_slave(port, host, threads);

  return EXIT_SUCCESS;
}
@


1.4
log
@75% done IGVT -> IVAT conversion.
@
text
@d2 1
a2 1
 * $Id: main.c,v 1.3 2005/07/09 02:44:45 twingy Exp $
@


1.3
log
@made the arguments for slave and observer more convenient, debugging python
adrt.blah bug.
@
text
@d2 1
a2 1
 * $Id: main.c,v 1.2 2005/06/17 21:40:53 erikgreenwald Exp $
d14 1
a14 1
#include "igvt.h"
d42 2
a43 2
  printf("%s\n", IGVT_VER_DETAIL);
  printf("%s", "usage: igvt_slave [options]\n\
d91 1
a91 1
             printf("%s\n", IGVT_VER_DETAIL);
d114 1
a114 1
  igvt_slave(port, host, threads);
@


1.2
log
@use brlcad_config.h instead of config.h
@
text
@d2 1
a2 1
 * $Id: main.c,v 1.1 2005/06/17 15:09:25 lbutler Exp $
d27 1
a27 1
	{ "port",	required_argument,	NULL, 'P' },
a29 1
  	{ "host",	required_argument,	NULL, 'H' }
d32 1
a32 1
static char shortopts[] = "XdhP:t:vH:";
d46 1
a46 2
  -P\t\tport number\n\
  -H ...\tconnect to master and shutdown when complete\n\
d61 1
a61 1
  port = TN_SLAVE_PORT;
d75 22
a96 22
		  case 'P':
			  port = atoi(optarg);
			  break;
		  case 't':
			  strncpy(temp, optarg, 4);
			  threads = atoi(temp);
			  if(threads < 0) threads = 0;
			  if(threads > 32) threads = 32;
			  break;
		  case 'H':
			  port = TN_MASTER_PORT;
			  strncpy(host, optarg, 64);
			  break;
		  case 'h':
			  help();
			  return EXIT_SUCCESS;
		  case 'v':
			  printf("%s\n", IGVT_VER_DETAIL);
			  return EXIT_SUCCESS;
		default:
			  help();
			  return EXIT_FAILURE;
d102 12
@


1.1
log
@Welcome ADRT
@
text
@d2 1
a2 1
 * $Id: main.c,v 1.4 2005/06/15 22:03:12 justin Exp $
d6 1
a6 1
# include "config.h"
@

