head	1.5;
access;
symbols;
locks; strict;
comment	@ * @;


1.5
date	2005.07.10.03.58.18;	author twingy;	state dead;
branches;
next	1.4;

1.4
date	2005.07.10.03.48.09;	author twingy;	state Exp;
branches;
next	1.3;

1.3
date	2005.06.17.21.40.52;	author erikgreenwald;	state Exp;
branches;
next	1.2;

1.2
date	2005.06.17.19.10.46;	author erikgreenwald;	state Exp;
branches;
next	1.1;

1.1
date	2005.06.17.15.09.24;	author lbutler;	state Exp;
branches;
next	;


desc
@@


1.5
log
@IGVT->ISST 90%
@
text
@#include "dispatcher.h"
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sys/time.h>
#include "adrt_common.h"
#include "brlcad_config.h"
#include "ivat.h"
#include "tienet.h"

#include <unistd.h>

#ifdef HAVE_SYS_SYSINFO_H
#include <sys/sysinfo.h>
#elif defined(HAVE_SYS_SYSCTL_H)
#include <sys/sysctl.h>
#endif


int	ivat_dispatcher_progress_delta;
int	ivat_dispatcher_progress;
int	ivat_dispatcher_interval;
int	ivat_dispatcher_lastsave;


void	ivat_dispatcher_init(void);
void	ivat_dispatcher_free(void);
void	ivat_dispatcher_generate(common_db_t *db, void *data, int data_len);
void	ivat_dispatcher_result(void *res_buf, int res_len);


void ivat_dispatcher_init() {
}


void ivat_dispatcher_free() {
}


void ivat_dispatcher_generate(common_db_t *db, void *data, int data_len) {
  int i, n;
  common_work_t work;
  void *mesg;

  mesg = malloc(sizeof(common_work_t) + data_len);
  tienet_master_begin();

  work.size_x = db->env.tile_w;
  work.size_y = db->env.tile_h;
  work.format = COMMON_BIT_DEPTH_24;

  memcpy(&((char *)mesg)[sizeof(common_work_t)], data, data_len);
  for(i = 0; i < db->env.img_vh; i += db->env.tile_w) {
    for(n = 0; n < db->env.img_vw; n += db->env.tile_h) {
      work.orig_x = n;
      work.orig_y = i;
      memcpy(&((char *)mesg)[0], &work, sizeof(common_work_t));
      tienet_master_push(mesg, sizeof(common_work_t)+data_len);
    }
  }

  tienet_master_end();
  free(mesg);
}
@


1.4
log
@75% done IGVT -> IVAT conversion.
@
text
@@


1.3
log
@use brlcad_config.h instead of config.h
@
text
@d8 1
a8 1
#include "igvt.h"
d20 4
a23 4
int	igvt_dispatcher_progress_delta;
int	igvt_dispatcher_progress;
int	igvt_dispatcher_interval;
int	igvt_dispatcher_lastsave;
d26 4
a29 4
void	igvt_dispatcher_init(void);
void	igvt_dispatcher_free(void);
void	igvt_dispatcher_generate(common_db_t *db, void *data, int data_len);
void	igvt_dispatcher_result(void *res_buf, int res_len);
d32 1
a32 1
void igvt_dispatcher_init() {
d36 1
a36 1
void igvt_dispatcher_free() {
d40 1
a40 1
void igvt_dispatcher_generate(common_db_t *db, void *data, int data_len) {
@


1.2
log
@hoisting build system and making it play nice with brlcad
@
text
@d7 1
a7 1
#include "config.h"
@


1.1
log
@Welcome ADRT
@
text
@d6 1
a6 1
#include "common.h"
@

