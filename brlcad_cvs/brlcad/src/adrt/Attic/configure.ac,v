head	1.11;
access;
symbols
	rel-7-10-4:1.9
	STABLE:1.9.0.2
	rel-7-10-2:1.9
	rel-7-10-0:1.9
	rel-7-8-4:1.5
	rel-7-8-2:1.5
	rel-7-8-0:1.5
	trimnurbs-branch:1.5.0.2
	help:1.5
	temp_tag:1.5
	bobWinPort-20051223-freeze:1.3
	postmerge-20051223-bobWinPort:1.5
	premerge-20051223-bobWinPort:1.5
	rel-7-6-6:1.5
	rel-7-6-4:1.5
	rel-7-6-2:1.3
	rel-7-6-branch:1.3.0.6
	rel-7-6-0:1.3
	rel-7-4-2:1.3
	rel-7-4-branch:1.3.0.4
	bobWinPort:1.3.0.2
	rel-7-4-0:1.3;
locks; strict;
comment	@# @;


1.11
date	2007.12.06.18.28.16;	author erikgreenwald;	state dead;
branches;
next	1.10;

1.10
date	2007.09.14.20.06.49;	author brlcad;	state Exp;
branches;
next	1.9;

1.9
date	2007.02.20.03.31.52;	author brlcad;	state Exp;
branches;
next	1.8;

1.8
date	2007.02.08.06.49.17;	author brlcad;	state Exp;
branches;
next	1.7;

1.7
date	2007.02.08.06.43.13;	author brlcad;	state Exp;
branches;
next	1.6;

1.6
date	2007.01.27.01.41.30;	author brlcad;	state Exp;
branches;
next	1.5;

1.5
date	2005.10.23.04.44.27;	author brlcad;	state Exp;
branches;
next	1.4;

1.4
date	2005.09.09.09.44.08;	author brlcad;	state Exp;
branches;
next	1.3;

1.3
date	2005.07.12.05.00.54;	author brlcad;	state Exp;
branches
	1.3.6.1;
next	1.2;

1.2
date	2005.07.10.05.35.12;	author twingy;	state Exp;
branches;
next	1.1;

1.1
date	2005.06.17.15.09.23;	author lbutler;	state Exp;
branches;
next	;

1.3.6.1
date	2005.11.13.13.46.11;	author brlcad;	state Exp;
branches;
next	;


desc
@@


1.11
log
@unnecessary files
@
text
@#                    C O N F I G U R E . A C
# BRL-CAD / ADRT
#
# Copyright (c) 2007 United States Government as represented by
# the U.S. Army Research Laboratory.
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public License
# version 2.1 as published by the Free Software Foundation.
#
# This library is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this file; see the file named COPYING for more
# information.
#
###
# $Id: configure.ac,v 1.10 2007/09/14 20:06:49 brlcad Exp $

AC_INIT
AC_CANONICAL_SYSTEM
AC_CONFIG_SRCDIR([rise/master/main.c])
AM_CONFIG_HEADER(config.h)
AM_INIT_AUTOMAKE(rise, 0.1)

AC_PROG_CC
AC_PROG_INSTALL
AC_PROG_LIBTOOL

AC_LONG_64_BITS

dnl autosearch /usr/local
AC_MSG_CHECKING([for /usr/local])
if test -d /usr/local/include ; then
	AC_MSG_RESULT([found, adding /usr/local to search paths])
	CPPFLAGS="$CPPFLAGS -I/usr/local/include"
	if test -d /usr/local/lib ; then
		LDFLAGS="$LDFLAGS -L/usr/local/lib"
	fi
else
	AC_MSG_RESULT([not found])
fi

dnl autosearch fink paths
AC_MSG_CHECKING([for fink in /sw])
if test -d /sw/include ; then
	AC_MSG_RESULT([found, adding /sw to search paths])
	CPPFLAGS="$CPPFLAGS -I/sw/include"
	if test -d /sw/lib ; then
		LDFLAGS="$LDFLAGS -L/sw/lib"
	fi
else
	AC_MSG_RESULT([not found])
fi

# mandatory headers
AC_CHECK_HEADERS([\
	arpa/inet.h\
	math.h\
	netdb.h\
	netinet/in.h\
	pthread.h\
	signal.h\
	stdio.h\
	string.h\
	sys/select.h\
	sys/socket.h\
	time.h\
	unistd.h\
	],,
	AC_MSG_ERROR([Missing a necessary header.]))

# desired headers
AC_CHECK_HEADERS([\
		  getopt.h\
		  sys/sysctl.h\
		  sys/sysinfo.h\
		  ])


AC_MSG_CHECKING(whether to generate documentation with doxygen)
use_doxygen=no
AC_ARG_ENABLE(doxygen, AC_HELP_STRING(--enable-doxygen,
		[enable documentation generation with doxygen (default=no)]),
	[if test "xenable_doxygen" != "xno" ; then
		use_doxygen=yes
	fi]
)
AC_MSG_RESULT($use_doxygen)
found_doxygen=no
if test "x$use_doxygen" = "xyes" ; then
   AC_PATH_PROG(DOXYGEN, doxygen, , $PATH)
   echo "------------------- $DOXYGEN"
   if test "x$DOXYGEN" = "x" ; then
      found_doxygen=no
   else
      found_doxygen=yes
   fi
fi
echo "Found doxygen: $found_doxygen"
AM_CONDITIONAL(HAVE_DOXYGEN, [test "x$found_doxygen" != "xno"])


AC_MSG_CHECKING(xeon linux tuned optimization)
want_optim_xeon_linux=no
AC_ARG_ENABLE(optim-xeon-linux,
	AC_HELP_STRING(--enable-optim-xeon-linux, [Build with Intel P4-Xeon linux optimizations [default=no]]),
	[
		if test "x$enableval" = "xyes"
		then
			want_optim_xeon_linux=yes
		fi
	]
)
AC_MSG_RESULT($want_optim_xeon_linux)
if test "x$want_optim_xeon_linux" = "xyes"
then
	export CFLAGS="-O3 -Wall -Wmissing-prototypes -pedantic -std=c99 -msse -mfpmath=sse -ffast-math -fomit-frame-pointer -pipe"
	AC_DEFINE(TIE_SSE, 1, intel SSE simd shtuff)
fi


AC_MSG_CHECKING(xeon freebsd tuned optimization)
want_optim_xeon_freebsd=no
AC_ARG_ENABLE(optim-xeon-freebsd,
	AC_HELP_STRING(--enable-optim-xeon-freebsd, [Build with Intel P4-Xeon freebsd optimizations [default=no]]),
	[
		if test "x$enableval" = "xyes"
		then
			want_optim_xeon_freebsd=yes
		fi
	]
)
AC_MSG_RESULT($want_optim_xeon_freebsd)
if test "x$want_optim_xeon_freebsd" = "xyes"
then
	export CFLAGS="-O3 -Wall -Wmissing-prototypes -pedantic -std=c99 -ffast-math -fomit-frame-pointer -pipe"
fi


AC_MSG_CHECKING(ppc tuned optimization)
want_optim_ppc=no
AC_ARG_ENABLE(optim-ppc,
	AC_HELP_STRING(--enable-optim-ppc, [Build with PPC optimizations [default=no]]),
	[
		if test "x$enableval" = "xyes"
		then
			want_optim_ppc=yes
		fi
	]
)
AC_MSG_RESULT($want_optim_ppc)
if test "x$want_optim_ppc" = "xyes"
then
	export CFLAGS="-O3 -Wall -Wmissing-prototypes -pedantic -std=c99 -ffast-math -fomit-frame-pointer -pipe -faltivec"
fi


AC_MSG_CHECKING(prescott)
want_optim_prescott=no
AC_ARG_ENABLE(optim-prescott,
	AC_HELP_STRING(--enable-optim-prescott, [Build with P4 Prescott optimizations [default=no]]),
	[
		if test "x$enableval" = "xyes"
		then
			want_optim_prescott=yes
		fi
	]
)
AC_MSG_RESULT($want_optim_prescott)
if test "x$want_optim_prescott" = "xyes"
then
	export CFLAGS="-O3 -Wall -Wmissing-prototypes -pedantic -std=c99 -ffast-math -fomit-frame-pointer -pipe -mtune=prescott"
fi


AC_PATH_PROG(SDL_CONFIG_PROG, sdl-config)
if test "x$SDL_CONFIG_PROG" != "x" ; then
	AM_PATH_SDL(1.2.0,,AC_MSG_ERROR([Cannot find SDL.]))
fi
AC_SUBST(SDL_CFLAGS)
AC_SUBST(SDL_LIBS)

AC_CHECK_FUNCS([drand48 getopt_long])

#AC_CHECK_LIB(m, sqrt, , AC_ERROR(no sqrt???))
AC_CHECK_LIB(z, compress, , AC_ERROR(libz is required.))


# Compile in BRL-CAD support if specified by user
with_brlcadpfx=no
AC_ARG_WITH(brlcad, AC_HELP_STRING(--with-brlcad=path,
		[Specify location of BRL-CAD Installation]),
	[
		BRLCAD_CFLAGS="-I$withval/include/brlcad"
		BRLCAD_LDFLAGS="-L$withval/lib -lbu -ltcl8.4 -lrt"
		AC_DEFINE(HAVE_BRLCAD,1,Checking for BRL-CAD Installation)
		with_brlcadpfx=yes
	]
)
AC_SUBST(BRLCAD_CFLAGS)
AC_SUBST(BRLCAD_LDFLAGS)
AM_CONDITIONAL(HAVE_BRLCAD, [test "x$with_brlcadpfx" != "xno"])

AC_CONFIG_FILES([Makefile libtie/Makefile libtienet/Makefile libcommon/Makefile librender/Makefile libtexture/Makefile libutil/Makefile rise/Makefile rise/master/Makefile rise/slave/Makefile rise/observer/Makefile])
AC_OUTPUT

echo
echo "CFLAGS: $CFLAGS"

# Local Variables:
# tab-width: 8
# mode: autoconf
# indent-tabs-mode: t
# End:
# ex: shiftwidth=4 tabstop=8
@


1.10
log
@The c89 headers are all fair game since it's been a requirement since the move to ANSI c89 compliance.  So.. remove the HAVE_STDLIB_H checks and just use the header.  The headers <complex.h>, <fenv.h>, <inttypes.h>, <stdbool.h>, <stdint.h>, and <tgmath.h> were added with C99 and still need to be checked.  There are several other c89 headers that we could just use, though, that are still being checked.
@
text
@d21 1
a21 1
# $Id: configure.ac,v 1.9 2007/02/20 03:31:52 brlcad Exp $
@


1.9
log
@less Lesser
@
text
@d21 1
a21 1
# $Id: configure.ac,v 1.8 2007/02/08 06:49:17 brlcad Exp $
a67 1
	stdlib.h\
@


1.8
log
@give adrt some distinctiveness in the header
@
text
@d14 1
a14 1
# Lesser Lesser General Public License for more details.
d21 1
a21 1
# $Id: configure.ac,v 1.7 2007/02/08 06:43:13 brlcad Exp $
@


1.7
log
@add a header and footer
@
text
@d2 1
a2 1
# BRL-CAD/ADRT
d21 1
a21 1
# $Id: configure.ac,v 1.6 2007/01/27 01:41:30 brlcad Exp $
@


1.6
log
@ws. lots and lots of ws.  see sh/ws.sh for details (cases 'abcdeg').
@
text
@d1 21
a21 1
# $Id: configure.ac,v 1.5 2005/10/23 04:44:27 brlcad Exp $
d214 7
@


1.5
log
@trailing ws
@
text
@d1 1
a1 1
# $Id: configure.ac,v 1.4 2005/09/09 09:44:08 brlcad Exp $
a64 3



d177 3
a179 3
                [Specify location of BRL-CAD Installation]),
        [
                BRLCAD_CFLAGS="-I$withval/include/brlcad"
d181 3
a183 3
                AC_DEFINE(HAVE_BRLCAD,1,Checking for BRL-CAD Installation)
                with_brlcadpfx=yes
        ]
@


1.4
log
@BRL-CAD not BRLCAD, consistency
@
text
@d1 1
a1 1
# $Id: configure.ac,v 1.3 2005/07/12 05:00:54 brlcad Exp $
d105 1
a105 1
	export CFLAGS="-O3 -Wall -Wmissing-prototypes -pedantic -std=c99 -msse -mfpmath=sse -ffast-math -fomit-frame-pointer -pipe"  
d124 1
a124 1
	export CFLAGS="-O3 -Wall -Wmissing-prototypes -pedantic -std=c99 -ffast-math -fomit-frame-pointer -pipe"  
d142 1
a142 1
	export CFLAGS="-O3 -Wall -Wmissing-prototypes -pedantic -std=c99 -ffast-math -fomit-frame-pointer -pipe -faltivec"  
@


1.3
log
@and with a flick of wrist and wiggle of nose, itink ivat isgone... at least for now, likely to be resurrected before next iteration from the ashes in a slightly different incarnation.
@
text
@d1 1
a1 1
# $Id: configure.ac,v 1.2 2005/07/10 05:35:12 twingy Exp $
d177 1
a177 1
# Compile in BRLCAD support if specified by user
d180 1
a180 1
                [Specify location of BRLCAD Installation]),
d184 1
a184 1
                AC_DEFINE(HAVE_BRLCAD,1,Checking for BRLCAD Installation)
@


1.3.6.1
log
@merge changes from HEAD aka rel-7-6-4 to the rel-7-6-branch just in case someone peeks a gander or tries to continue/build the branch
@
text
@d1 1
a1 1
# $Id$
d105 1
a105 1
	export CFLAGS="-O3 -Wall -Wmissing-prototypes -pedantic -std=c99 -msse -mfpmath=sse -ffast-math -fomit-frame-pointer -pipe"
d124 1
a124 1
	export CFLAGS="-O3 -Wall -Wmissing-prototypes -pedantic -std=c99 -ffast-math -fomit-frame-pointer -pipe"
d142 1
a142 1
	export CFLAGS="-O3 -Wall -Wmissing-prototypes -pedantic -std=c99 -ffast-math -fomit-frame-pointer -pipe -faltivec"
d177 1
a177 1
# Compile in BRL-CAD support if specified by user
d180 1
a180 1
                [Specify location of BRL-CAD Installation]),
d184 1
a184 1
                AC_DEFINE(HAVE_BRLCAD,1,Checking for BRL-CAD Installation)
@


1.2
log
@updated
@
text
@d1 1
a1 1
# $Id: configure.ac,v 1.1 2005/06/17 15:09:23 lbutler Exp $
d192 1
a192 1
AC_CONFIG_FILES([Makefile libtie/Makefile libtienet/Makefile libcommon/Makefile librender/Makefile libtexture/Makefile libutil/Makefile rise/Makefile rise/master/Makefile rise/slave/Makefile rise/observer/Makefile ivat/Makefile ivat/master/Makefile ivat/slave/Makefile ivat/observer/Makefile])
@


1.1
log
@Welcome ADRT
@
text
@d1 1
a1 1
# $Id: configure.ac,v 1.49 2005/05/16 14:17:55 justin Exp $
d192 1
a192 1
AC_CONFIG_FILES([Makefile libtie/Makefile libtienet/Makefile libcommon/Makefile librender/Makefile libtexture/Makefile libutil/Makefile rise/Makefile rise/master/Makefile rise/slave/Makefile rise/observer/Makefile igvt/Makefile igvt/master/Makefile igvt/slave/Makefile igvt/observer/Makefile])
@

