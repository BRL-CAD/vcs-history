head	1.2;
access;
symbols
	rel-7-10-4:1.1
	STABLE:1.1.0.2;
locks; strict;
comment	@ * @;


1.2
date	2007.12.03.22.24.31;	author erikgreenwald;	state Exp;
branches;
next	1.1;

1.1
date	2007.08.30.19.04.57;	author brlcad;	state Exp;
branches;
next	;


desc
@@


1.2
log
@build execution paths for both single and double precision floats in the same lib
@
text
@/*
 *  tie_kdtree.h
 *
 *  RCSid:          $Id: tie_kdtree.h,v 1.1 2007/08/30 19:04:57 brlcad Exp $
*/

#ifndef _TIE_KDTREE_H
#define _TIE_KDTREE_H

#include "tie_define.h"
#include "tie_struct.h"

#ifdef __cplusplus
extern "C" {
#endif


TIE_FUNC(void tie_kdtree_free, tie_t *tie);
TIE_FUNC(uint32_t tie_kdtree_cache_free, tie_t *tie, void **cache);
TIE_FUNC(void tie_kdtree_cache_load, tie_t *tie, void *cache, uint32_t size);
TIE_FUNC(void tie_kdtree_prep, tie_t *tie);
TIE_VAL(extern tfloat TIE_PREC);

/* compatability macros */
#define tie_kdtree_free TIE_VAL(tie_kdtree_free)
#define tie_kdtree_cache_free TIE_VAL(tie_kdtree_cache_free)
#define tie_kdtree_cache_load TIE_VAL(tie_kdtree_cache_load)
#define tie_kdtree_prep TIE_VAL(tie_kdtree_prep)
#define TIE_PREC TIE_VAL(TIE_PREC)

#ifdef __cplusplus
}
#endif

#endif
@


1.1
log
@libtie update from Justin.  these changes are the updates after integration of libtie with MUVES-S2.  it includes a few minor api changes as well as a variety of bug fixes and other cleanup.
@
text
@d4 1
a4 1
 *  RCSid:          $Id: tie_kdtree.h,v 1.2 2007/05/09 13:57:38 kmurray Exp $
d18 12
a29 6
void tie_kdtree_free(tie_t *tie);
uint32_t tie_kdtree_cache_free(tie_t *tie, void **cache);
void tie_kdtree_cache_load(tie_t *tie, void *cache, uint32_t size);
void tie_kdtree_prep(tie_t *tie);
extern tfloat TIE_PREC;

@

