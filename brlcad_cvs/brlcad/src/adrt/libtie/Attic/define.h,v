head	1.34;
access;
symbols
	rel-7-10-2:1.33
	rel-7-10-0:1.33
	rel-7-8-4:1.23
	rel-7-8-2:1.23
	rel-7-8-0:1.23
	trimnurbs-branch:1.23.0.2
	help:1.23
	temp_tag:1.22
	bobWinPort-20051223-freeze:1.10
	postmerge-20051223-bobWinPort:1.22
	premerge-20051223-bobWinPort:1.22
	rel-7-6-6:1.22
	rel-7-6-4:1.22
	rel-7-6-2:1.21
	rel-7-6-branch:1.21.0.2
	rel-7-6-0:1.21
	rel-7-4-2:1.8.2.1
	rel-7-4-branch:1.8.0.2
	bobWinPort:1.10.0.2
	rel-7-4-0:1.8;
locks; strict;
comment	@ * @;


1.34
date	2007.08.30.19.04.57;	author brlcad;	state dead;
branches;
next	1.33;

1.33
date	2007.02.23.19.32.12;	author brlcad;	state Exp;
branches;
next	1.32;

1.32
date	2007.02.23.15.39.19;	author erikgreenwald;	state Exp;
branches;
next	1.31;

1.31
date	2007.02.08.06.49.18;	author brlcad;	state Exp;
branches;
next	1.30;

1.30
date	2007.02.02.19.46.34;	author erikgreenwald;	state Exp;
branches;
next	1.29;

1.29
date	2007.01.27.01.41.30;	author brlcad;	state Exp;
branches;
next	1.28;

1.28
date	2007.01.23.01.13.22;	author brlcad;	state Exp;
branches;
next	1.27;

1.27
date	2007.01.21.04.45.40;	author brlcad;	state Exp;
branches;
next	1.26;

1.26
date	2007.01.21.00.50.10;	author brlcad;	state Exp;
branches;
next	1.25;

1.25
date	2007.01.20.14.36.41;	author brlcad;	state Exp;
branches;
next	1.24;

1.24
date	2007.01.18.22.17.57;	author erikgreenwald;	state Exp;
branches;
next	1.23;

1.23
date	2006.01.18.06.46.11;	author brlcad;	state Exp;
branches;
next	1.22;

1.22
date	2005.10.23.04.44.28;	author brlcad;	state Exp;
branches;
next	1.21;

1.21
date	2005.09.08.05.11.20;	author twingy;	state Exp;
branches
	1.21.2.1;
next	1.20;

1.20
date	2005.09.06.01.03.23;	author twingy;	state Exp;
branches;
next	1.19;

1.19
date	2005.08.30.20.08.23;	author twingy;	state Exp;
branches;
next	1.18;

1.18
date	2005.08.29.19.25.55;	author twingy;	state Exp;
branches;
next	1.17;

1.17
date	2005.08.29.07.31.04;	author twingy;	state Exp;
branches;
next	1.16;

1.16
date	2005.08.29.06.37.16;	author twingy;	state Exp;
branches;
next	1.15;

1.15
date	2005.08.27.06.17.49;	author twingy;	state Exp;
branches;
next	1.14;

1.14
date	2005.08.26.22.16.24;	author twingy;	state Exp;
branches;
next	1.13;

1.13
date	2005.08.26.14.57.47;	author twingy;	state Exp;
branches;
next	1.12;

1.12
date	2005.08.25.02.44.15;	author twingy;	state Exp;
branches;
next	1.11;

1.11
date	2005.08.23.17.59.52;	author twingy;	state Exp;
branches;
next	1.10;

1.10
date	2005.08.10.20.32.58;	author twingy;	state Exp;
branches;
next	1.9;

1.9
date	2005.08.10.05.32.08;	author twingy;	state Exp;
branches;
next	1.8;

1.8
date	2005.07.08.20.00.48;	author twingy;	state Exp;
branches
	1.8.2.1;
next	1.7;

1.7
date	2005.07.02.22.14.32;	author twingy;	state Exp;
branches;
next	1.6;

1.6
date	2005.07.02.19.54.56;	author twingy;	state Exp;
branches;
next	1.5;

1.5
date	2005.06.24.06.28.01;	author twingy;	state Exp;
branches;
next	1.4;

1.4
date	2005.06.18.21.58.58;	author twingy;	state Exp;
branches;
next	1.3;

1.3
date	2005.06.18.00.49.06;	author twingy;	state Exp;
branches;
next	1.2;

1.2
date	2005.06.17.21.40.59;	author erikgreenwald;	state Exp;
branches;
next	1.1;

1.1
date	2005.06.17.15.09.27;	author lbutler;	state Exp;
branches;
next	;

1.8.2.1
date	2005.08.16.21.03.46;	author brlcad;	state Exp;
branches;
next	;

1.21.2.1
date	2005.11.13.13.46.12;	author brlcad;	state Exp;
branches;
next	;


desc
@@


1.34
log
@libtie update from Justin.  these changes are the updates after integration of libtie with MUVES-S2.  it includes a few minor api changes as well as a variety of bug fixes and other cleanup.
@
text
@/*                     D E F I N E . H
 * BRL-CAD / ADRT
 *
 * Copyright (c) 2002-2007 United States Government as represented by
 * the U.S. Army Research Laboratory.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * version 2.1 as published by the Free Software Foundation.
 *
 * This library is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this file; see the file named COPYING for more
 * information.
 */
/** @@addtogroup libtie */
/** @@{ */
/** @@file define.h
 *
 *  Comments -
 *      Triangle Intersection Engine Defines
 *
 *  Author -
 *      Justin L. Shumaker
 *
 *  Source -
 *      The U. S. Army Research Laboratory
 *      Aberdeen Proving Ground, Maryland  21005-5068  USA
 *
 * $Id: define.h,v 1.33 2007/02/23 19:32:12 brlcad Exp $
 */

#ifndef	_TIE_DEFINE_H
#define	_TIE_DEFINE_H

#include "common.h"
#include <math.h>

#define TIE_SINGLE_PREC		1		/* Use Single Precision Math */
#define	TIE_TAB1		"\1\0\0\2\2\1"	/* Triangle Index Table */
#define	TIE_KDTREE_NODE_MAX	4		/* Maximum number of triangles that can reside in a given node until it should be split */
#define	TIE_KDTREE_DEPTH_K1	1.6		/* K1 Depth Constant Coefficient */
#define	TIE_KDTREE_DEPTH_K2	1		/* K2 Contant */

#define MAX_SLICES 100
#define MIN_SLICES 35
#define MIN_DENSITY 0.01
#define MIN_SPAN    0.15
#define SCALE_COEF  1.80


/* Type to use for floating precision */
#if TIE_SINGLE_PREC
# define TFLOAT float
#else
# define TFLOAT double
#endif


/**
 *
 */
#define	MATH_MIN3(_a, _b, _c, _d) { \
	_a = _b < _c ? _b < _d ? _b : _d : _c < _d ? _c : _d; }

/**
 *
 */
#define MATH_MAX3(_a, _b, _c, _d) { \
	_a = _b > _c ? _b > _d ? _b : _d : _c > _d ? _c : _d; }

/**
 *
 */
#define	MATH_VEC_SET(_a, _b, _c, _d) { \
	_a.v[0] = _b; \
	_a.v[1] = _c; \
	_a.v[2] = _d; }

/**
 *
 */
#define MATH_VEC_MIN(_a, _b) { \
	_a.v[0] = _a.v[0] < _b.v[0] ? _a.v[0] : _b.v[0]; \
	_a.v[1] = _a.v[1] < _b.v[1] ? _a.v[1] : _b.v[1]; \
	_a.v[2] = _a.v[2] < _b.v[2] ? _a.v[2] : _b.v[2]; }

/**
 *
 */
#define MATH_VEC_MAX(_a, _b) { \
	_a.v[0] = _a.v[0] > _b.v[0] ? _a.v[0] : _b.v[0]; \
	_a.v[1] = _a.v[1] > _b.v[1] ? _a.v[1] : _b.v[1]; \
	_a.v[2] = _a.v[2] > _b.v[2] ? _a.v[2] : _b.v[2]; }

/**
 *
 */
#define MATH_VEC_CROSS(_a, _b, _c) {\
	_a.v[0] = _b.v[1]*_c.v[2] - _b.v[2]*_c.v[1]; \
	_a.v[1] = _b.v[2]*_c.v[0] - _b.v[0]*_c.v[2]; \
	_a.v[2] = _b.v[0]*_c.v[1] - _b.v[1]*_c.v[0]; }

/**
 *
 */
#define	MATH_VEC_UNITIZE(_a) { \
	TFLOAT _b = 1/sqrt(_a.v[0]*_a.v[0] + _a.v[1]*_a.v[1] + _a.v[2]*_a.v[2]); \
	_a.v[0] *= _b; _a.v[1] *= _b; _a.v[2] *= _b; }

/**
 *
 */
#define MATH_VEC_SQ(_a, _b) { \
	_a.v[0] = _b.v[0] * _b.v[0]; \
	_a.v[1] = _b.v[1] * _b.v[1]; \
	_a.v[2] = _b.v[2] * _b.v[2]; }

/**
 *
 */
#define MATH_VEC_DOT(_a, _b, _c) { \
	_a = _b.v[0]*_c.v[0] + _b.v[1]*_c.v[1] + _b.v[2]*_c.v[2]; }

/**
 *
 */
#define	MATH_VEC_ADD(_a, _b, _c) { \
	_a.v[0] = _b.v[0] + _c.v[0]; \
	_a.v[1] = _b.v[1] + _c.v[1]; \
	_a.v[2] = _b.v[2] + _c.v[2]; }

/**
 *
 */
#define MATH_VEC_SUB(_a, _b, _c) { \
	_a.v[0] = _b.v[0] - _c.v[0]; \
	_a.v[1] = _b.v[1] - _c.v[1]; \
	_a.v[2] = _b.v[2] - _c.v[2]; }

/**
 *
 */
#define	MATH_VEC_MUL(_a, _b, _c) { \
	_a.v[0] = _b.v[0] * _c.v[0]; \
	_a.v[1] = _b.v[1] * _c.v[1]; \
	_a.v[2] = _b.v[2] * _c.v[2]; }

/**
 *
 */
#define MATH_VEC_MUL_SCALAR(_a, _b, _c) { \
	_a.v[0] = _b.v[0] * _c; \
	_a.v[1] = _b.v[1] * _c; \
	_a.v[2] = _b.v[2] * _c; }

/**
 *
 */
#define	MATH_VEC_DIV(_a, _b, _c) { \
	_a.v[0] = _b.v[0] / _c.v[0]; \
	_a.v[1] = _b.v[1] / _c.v[1]; \
	_a.v[2] = _b.v[2] / _c.v[2]; }

/**
 *
 */
#define MATH_BBOX(_a, _b, _c, _d, _e) { \
	MATH_MIN3(_a.v[0], _c.v[0], _d.v[0], _e.v[0]); \
	MATH_MIN3(_a.v[1], _c.v[1], _d.v[1], _e.v[1]); \
	MATH_MIN3(_a.v[2], _c.v[2], _d.v[2], _e.v[2]); \
	MATH_MAX3(_b.v[0], _c.v[0], _d.v[0], _e.v[0]); \
	MATH_MAX3(_b.v[1], _c.v[1], _d.v[1], _e.v[1]); \
	MATH_MAX3(_b.v[2], _c.v[2], _d.v[2], _e.v[2]); }

/* ======================== X-tests ======================== */
/**
 *
 */
#define AXISTEST_X01(a, b, fa, fb) \
	p.v[0] = a*v0.v[1] - b*v0.v[2]; \
	p.v[2] = a*v2.v[1] - b*v2.v[2]; \
	if (p.v[0] < p.v[2]) { min = p.v[0]; max = p.v[2]; } else { min = p.v[2]; max = p.v[0]; } \
	rad = fa * half_size -> v[1] + fb * half_size -> v[2]; \
	if (min > rad || max < -rad) return 0; \

/**
 *
 */
#define AXISTEST_X2(a, b, fa, fb) \
	p.v[0] = a*v0.v[1] - b*v0.v[2]; \
	p.v[1] = a*v1.v[1] - b*v1.v[2]; \
	if (p.v[0] < p.v[1]) { min = p.v[0]; max = p.v[1]; } else { min = p.v[1]; max = p.v[0]; } \
	rad = fa * half_size -> v[1] + fb * half_size -> v[2]; \
	if (min > rad || max < -rad) return 0;

/* ======================== Y-tests ======================== */
/**
 *
 */
#define AXISTEST_Y02(a, b, fa, fb) \
	p.v[0] = -a*v0.v[0] + b*v0.v[2]; \
	p.v[2] = -a*v2.v[0] + b*v2.v[2]; \
	if (p.v[0] < p.v[2]) { min = p.v[0]; max = p.v[2]; } else { min = p.v[2]; max = p.v[0]; } \
	rad = fa * half_size -> v[0] + fb * half_size -> v[2]; \
	if (min > rad || max < -rad) return 0;

/**
 *
 */
#define AXISTEST_Y1(a, b, fa, fb) \
	p.v[0] = -a*v0.v[0] + b*v0.v[2]; \
	p.v[1] = -a*v1.v[0] + b*v1.v[2]; \
	if (p.v[0] < p.v[1]) { min = p.v[0]; max = p.v[1]; } else { min = p.v[1]; max = p.v[0]; } \
	rad = fa * half_size -> v[0] + fb * half_size -> v[2]; \
	if (min > rad || max < -rad) return 0;

/* ======================== Z-tests ======================== */
/**
 *
 */
#define AXISTEST_Z12(a, b, fa, fb) \
	p.v[1] = a*v1.v[0] - b*v1.v[1]; \
	p.v[2] = a*v2.v[0] - b*v2.v[1]; \
	if (p.v[2] < p.v[1]) { min = p.v[2]; max = p.v[1]; } else { min = p.v[1]; max = p.v[2]; } \
	rad = fa * half_size -> v[0] + fb * half_size -> v[1]; \
	if (min > rad || max < -rad) return 0;

/**
 *
 */
#define AXISTEST_Z0(a, b, fa, fb) \
	p.v[0] = a*v0.v[0] - b*v0.v[1]; \
	p.v[1] = a*v1.v[0] - b*v1.v[1]; \
	if (p.v[0] < p.v[1]) { min = p.v[0]; max = p.v[1]; } else { min = p.v[1]; max = p.v[0]; } \
	rad = fa * half_size -> v[0] + fb * half_size -> v[1]; \
	if (min > rad || max < -rad) return 0;

#endif

/** @@} */

/*
 * Local Variables:
 * mode: C
 * tab-width: 8
 * c-basic-offset: 4
 * indent-tabs-mode: t
 * End:
 * ex: shiftwidth=4 tabstop=8
 */
@


1.33
log
@common.h should always be included before any system headers
@
text
@d34 1
a34 1
 * $Id: define.h,v 1.32 2007/02/23 15:39:19 erikgreenwald Exp $
@


1.32
log
@use common.h to wrap brlcad_config.h for external apps
@
text
@d34 1
a34 1
 * $Id: define.h,v 1.31 2007/02/08 06:49:18 brlcad Exp $
d40 1
a41 1
#include "common.h"
@


1.31
log
@give adrt some distinctiveness in the header
@
text
@d34 1
a34 1
 * $Id: define.h,v 1.30 2007/02/02 19:46:34 erikgreenwald Exp $
d41 1
a41 1
#include "brlcad_config.h"
@


1.30
log
@finish changing all #defined symbols to uppercase...
@
text
@d2 1
a2 1
 * BRL-CAD
d34 1
a34 1
 * $Id: define.h,v 1.29 2007/01/27 01:41:30 brlcad Exp $
@


1.29
log
@ws. lots and lots of ws.  see sh/ws.sh for details (cases 'abcdeg').
@
text
@d34 1
a34 1
 * $Id: define.h,v 1.28 2007/01/23 01:13:22 brlcad Exp $
d58 1
a58 1
#define tfloat float
d60 1
a60 1
#define tfloat double
d112 1
a112 1
	tfloat _b = 1/sqrt(_a.v[0]*_a.v[0] + _a.v[1]*_a.v[1] + _a.v[2]*_a.v[2]); \
@


1.28
log
@Sweeping license updates.  Documentation is fully relicensed to the BSD Documentation License (a minor variant of the FreeBSD Documentation License and BSD License).  All GPL code (mostly application code) is converted to the LGPL and now also specifically declares version 2.1, revoking the blank check to the FSF.  The intent of these sweeping changes are to simplify the licensing terms and increase overall flexibility of use, both externally (to users for their purposes) and internally (to allow application code to be migrated to libraries without creating GPL libraries).  As a collective work, BRL-CAD is now LGPL.
@
text
@d34 1
a34 1
 * $Id: define.h,v 1.27 2007/01/21 04:45:40 brlcad Exp $
d187 1
a187 1
        if (p.v[0] < p.v[2]) { min = p.v[0]; max = p.v[2]; } else { min = p.v[2]; max = p.v[0]; } \
d197 1
a197 1
        if (p.v[0] < p.v[1]) { min = p.v[0]; max = p.v[1]; } else { min = p.v[1]; max = p.v[0]; } \
d208 1
a208 1
        if (p.v[0] < p.v[2]) { min = p.v[0]; max = p.v[2]; } else { min = p.v[2]; max = p.v[0]; } \
d218 1
a218 1
        if (p.v[0] < p.v[1]) { min = p.v[0]; max = p.v[1]; } else { min = p.v[1]; max = p.v[0]; } \
d229 1
a229 1
        if (p.v[2] < p.v[1]) { min = p.v[2]; max = p.v[1]; } else { min = p.v[1]; max = p.v[2]; } \
d239 1
a239 1
        if (p.v[0] < p.v[1]) { min = p.v[0]; max = p.v[1]; } else { min = p.v[1]; max = p.v[0]; } \
@


1.27
log
@ugh, what tedium.  put some effort towards cleaning up the doxygen labels and making the headers more consistent.  also exclusively using @@ for doxygen instead of \ to try to keep things more consistent.
@
text
@d9 1
a9 2
 * as published by the Free Software Foundation; either version 2 of
 * the License, or (at your option) any later version.
d14 1
a14 1
 * Library General Public License for more details.
d34 1
a34 1
 * $Id: define.h,v 1.26 2007/01/21 00:50:10 brlcad Exp $
@


1.26
log
@standard header and footer cleanup
@
text
@d21 2
d35 1
a35 1
 * $Id: define.h,v 1.25 2007/01/20 14:36:41 brlcad Exp $
a36 1
/** @@addtogroup libtie */ /** @@{ */
@


1.25
log
@update copyright to 2007
@
text
@a1 3
 *
 * @@file define.h
 *
d20 2
a21 2
 *
 *                     D E F I N E. H
d33 1
a33 1
 * $Id: define.h,v 1.24 2007/01/18 22:17:57 erikgreenwald Exp $
d246 10
@


1.24
log
@uppercase all #define symbols
@
text
@d7 1
a7 1
 * Copyright (c) 2002-2006 United States Government as represented by
d36 1
a36 1
 * $Id: define.h,v 1.23 2006/01/18 06:46:11 brlcad Exp $
@


1.23
log
@update copyright to 2006
@
text
@d36 1
a36 1
 * $Id: define.h,v 1.22 2005/10/23 04:44:28 brlcad Exp $
d70 1
a70 1
#define	math_min3(_a, _b, _c, _d) { \
d76 1
a76 1
#define math_max3(_a, _b, _c, _d) { \
d82 1
a82 1
#define	math_vec_set(_a, _b, _c, _d) { \
d90 1
a90 1
#define math_vec_min(_a, _b) { \
d98 1
a98 1
#define math_vec_max(_a, _b) { \
d106 1
a106 1
#define math_vec_cross(_a, _b, _c) {\
d114 1
a114 1
#define	math_vec_unitize(_a) { \
d121 1
a121 1
#define math_vec_sq(_a, _b) { \
d129 1
a129 1
#define math_vec_dot(_a, _b, _c) { \
d135 1
a135 1
#define	math_vec_add(_a, _b, _c) { \
d143 1
a143 1
#define math_vec_sub(_a, _b, _c) { \
d151 1
a151 1
#define	math_vec_mul(_a, _b, _c) { \
d159 1
a159 1
#define math_vec_mul_scalar(_a, _b, _c) { \
d167 1
a167 1
#define	math_vec_div(_a, _b, _c) { \
d175 7
a181 7
#define math_bbox(_a, _b, _c, _d, _e) { \
	math_min3(_a.v[0], _c.v[0], _d.v[0], _e.v[0]); \
	math_min3(_a.v[1], _c.v[1], _d.v[1], _e.v[1]); \
	math_min3(_a.v[2], _c.v[2], _d.v[2], _e.v[2]); \
	math_max3(_b.v[0], _c.v[0], _d.v[0], _e.v[0]); \
	math_max3(_b.v[1], _c.v[1], _d.v[1], _e.v[1]); \
	math_max3(_b.v[2], _c.v[2], _d.v[2], _e.v[2]); }
@


1.22
log
@trailing ws
@
text
@d7 1
a7 1
 * Copyright (C) 2002-2005 United States Government as represented by
d36 1
a36 1
 * $Id: define.h,v 1.21 2005/09/08 05:11:20 twingy Exp $
@


1.21
log
@fixed a stack pop bug in the kd-tree cache loader.  engine is 1.1% faster.
@
text
@d36 1
a36 1
 * $Id: define.h,v 1.20 2005/09/06 01:03:23 twingy Exp $
d67 1
a67 1
/** 
d73 1
a73 1
/** 
d79 1
a79 1
/** 
d87 1
a87 1
/** 
d95 1
a95 1
/** 
d103 1
a103 1
/** 
d111 1
a111 1
/** 
d118 1
a118 1
/** 
d126 1
a126 1
/** 
d132 1
a132 1
/** 
d140 1
a140 1
/** 
d148 1
a148 1
/** 
d156 1
a156 1
/** 
d164 1
a164 1
/** 
d172 1
a172 1
/** 
d184 1
a184 1
/** 
d194 1
a194 1
/** 
d205 1
a205 1
/** 
d215 1
a215 1
/** 
d226 1
a226 1
/** 
d236 1
a236 1
/** 
@


1.21.2.1
log
@merge changes from HEAD aka rel-7-6-4 to the rel-7-6-branch just in case someone peeks a gander or tries to continue/build the branch
@
text
@d36 1
a36 1
 * $Id$
d67 1
a67 1
/**
d73 1
a73 1
/**
d79 1
a79 1
/**
d87 1
a87 1
/**
d95 1
a95 1
/**
d103 1
a103 1
/**
d111 1
a111 1
/**
d118 1
a118 1
/**
d126 1
a126 1
/**
d132 1
a132 1
/**
d140 1
a140 1
/**
d148 1
a148 1
/**
d156 1
a156 1
/**
d164 1
a164 1
/**
d172 1
a172 1
/**
d184 1
a184 1
/**
d194 1
a194 1
/**
d205 1
a205 1
/**
d215 1
a215 1
/**
d226 1
a226 1
/**
d236 1
a236 1
/**
@


1.20
log
@Aggressive prep is about 3.3x faster now.  Fixed a few Makefile.am's.
@
text
@d36 1
a36 1
 * $Id: define.h,v 1.19 2005/08/30 20:08:23 twingy Exp $
a65 7
#ifdef LONG_64_BITS
#define	TIE_PTR_CAST	long int
#else
#define	TIE_PTR_CAST	int
#endif


@


1.19
log
@about to try some stuff.
@
text
@d36 1
a36 1
 * $Id: define.h,v 1.18 2005/08/29 19:25:55 twingy Exp $
d49 1
a49 1
#define	TIE_KDTREE_DEPTH_K1	1.5		/* K1 Depth Constant Coefficient */
d53 1
a53 1
#define MIN_SLICES 25
@


1.18
log
@kd-tree caching is now tuned to the point where full start-up time takes less than
1/4 the time as it did with the fast mid-split algorithm.  This number should approach
1/8 as the various parts of the packing/unpacking and caching algorithms are tuned
even further.
@
text
@d36 1
a36 1
 * $Id: define.h,v 1.17 2005/08/29 07:31:04 twingy Exp $
d49 1
a49 1
#define	TIE_KDTREE_DEPTH_K1	1.2		/* K1 Depth Constant Coefficient */
@


1.17
log
@defaults at biggest bang for the buck right now.
@
text
@d36 1
a36 1
 * $Id: define.h,v 1.16 2005/08/29 06:37:16 twingy Exp $
d49 1
a49 1
#define	TIE_KDTREE_DEPTH_K1	1.4		/* K1 Depth Constant Coefficient */
@


1.16
log
@Integrated kd-tree caching.
It's generated with adrt_bench by supplying the -c argument.
kdtree_cache_file,kdtree.cache goes into project.env file to make it work.
@
text
@d36 1
a36 1
 * $Id: define.h,v 1.15 2005/08/27 06:17:49 twingy Exp $
d49 2
a50 2
#define	TIE_KDTREE_DEPTH_K1	1.5		/* K1 Depth Constant Coefficient */
#define	TIE_KDTREE_DEPTH_K2	2		/* K2 Contant */
@


1.15
log
@Adding finishing touches to algorithm.  Will be adding some controls to
tie_init to allow developer to control both agressiveness of kd-tree building
algorithm and memory consumption as a function of # of triangles.
@
text
@d36 1
a36 1
 * $Id: define.h,v 1.14 2005/08/26 22:16:24 twingy Exp $
d50 1
a50 1
#define	TIE_KDTREE_DEPTH_K2	4		/* K2 Contant */
@


1.14
log
@working on final changes
@
text
@d36 1
a36 1
 * $Id: define.h,v 1.13 2005/08/26 14:57:47 twingy Exp $
d50 1
a50 1
#define	TIE_KDTREE_DEPTH_K2	2		/* K2 Contant */
@


1.13
log
@New kd-tree building algorithm (yet to be named) is now suitable for general purpose
use as an improvement (avg 25% - 100% faster) over the old algorithm and uses about
half the memory consumption as before.  One more criteria is yet to be added, more
improvements to come.  Algorithm is 10x slower than mid-split so kd-tree caching
is on the way.
@
text
@d36 1
a36 1
 * $Id: define.h,v 1.12 2005/08/25 02:44:15 twingy Exp $
d49 1
a49 1
#define	TIE_KDTREE_DEPTH_K1	1.4		/* K1 Depth Constant Coefficient */
d53 1
a53 1
#define MIN_SLICES 11
@


1.12
log
@experimenting with kd-tree's
@
text
@d36 1
a36 1
 * $Id: define.h,v 1.11 2005/08/23 17:59:52 twingy Exp $
d52 7
@


1.11
log
@removed min surface area, bad heuristics to use
@
text
@d36 1
a36 1
 * $Id: define.h,v 1.10 2005/08/10 20:32:58 twingy Exp $
d49 1
a49 1
#define	TIE_KDTREE_DEPTH_K1	1.2		/* K1 Depth Constant Coefficient */
@


1.10
log
@added surface area termination criteria
@
text
@d36 1
a36 1
 * $Id: define.h,v 1.9 2005/08/10 05:32:08 twingy Exp $
a50 1
#define	TIE_KDTREE_MIN_AREA	0.000005	/* Terminating Criteria, Ratio of smallest allowed area to scene area */
@


1.9
log
@dynamic kd-tree depth calculation
@
text
@d36 1
a36 1
 * $Id: define.h,v 1.8 2005/07/08 20:00:48 twingy Exp $
d47 2
a48 1
#define	TIE_KDTREE_NODE_MAX	3		/* Maximum number of triangles that can reside in a given node until it should be split */
d51 1
a51 1
#define	TIE_TAB1		"\1\0\0\2\2\1"	/* Triangle Index Table */
@


1.8
log
@bug fix, adding more component net stuff.
@
text
@d36 1
a36 1
 * $Id: define.h,v 1.7 2005/07/02 22:14:32 twingy Exp $
d47 3
a49 2
#define	TIE_BSP_NODE_MAX	4		/* Maximum number of triangles that can reside in a given node until it should be split */
#define	TIE_BSP_DEPTH_MAX	25		/* Maximum depth of BSP */
@


1.8.2.1
log
@merge in changes through Aug10 for 7.4.2 release
@
text
@d36 1
a36 1
 * $Id: define.h,v 1.10 2005/08/10 20:32:58 twingy Exp $
d47 2
a49 4
#define	TIE_KDTREE_NODE_MAX	4		/* Maximum number of triangles that can reside in a given node until it should be split */
#define	TIE_KDTREE_DEPTH_K1	1.2		/* K1 Depth Constant Coefficient */
#define	TIE_KDTREE_DEPTH_K2	2		/* K2 Contant */
#define	TIE_KDTREE_MIN_AREA	0.000005	/* Terminating Criteria, Ratio of smallest allowed area to scene area */
@


1.7
log
@re-optimized memory allocations in the mesh unpack function, all optimizations
that existed before the migration are back in now.
@
text
@d36 1
a36 1
 * $Id: define.h,v 1.6 2005/07/02 19:54:56 twingy Exp $
d48 1
a48 1
#define	TIE_BSP_DEPTH_MAX	24		/* Maximum depth of BSP */
@


1.6
log
@fixed memory leak in camera utility.
@
text
@d36 1
a36 1
 * $Id: define.h,v 1.5 2005/06/24 06:28:01 twingy Exp $
d53 1
a53 1
#define	tfloat	float
d55 1
a55 1
#define	tfloat	double
@


1.5
log
@Additional render data is now passed along in render method baggage in master. Observer reports fps on
screen now.  Add math_vec_set to libtie.  Master fires shotline by pressing keypad period, and keypad 0
places camera back at the shotline origin.
@
text
@d36 1
a36 1
 * $Id: define.h,v 1.4 2005/06/18 21:58:58 twingy Exp $
d48 1
a48 1
#define	TIE_BSP_DEPTH_MAX	28		/* Maximum depth of BSP */
@


1.4
log
@Added licensing info to libtexture files.
@
text
@d36 1
a36 1
 * $Id: define.h,v 1.3 2005/06/18 00:49:06 twingy Exp $
d64 2
d81 8
@


1.3
log
@Added licensing info to libtie files.
@
text
@d2 3
d23 1
a23 2
 */
/** @@file define.h
d26 2
a27 1
 *  Triangle Intersection Engine Defines
d36 1
a36 1
 * $Id: define.h,v 1.1 2005/06/17 15:09:27 lbutler Exp $
@


1.2
log
@use brlcad_config.h instead of config.h
@
text
@d1 36
a36 1
/** @@addtogroup libtie */ /** @@{ */ /** @@file define.h */
@


1.1
log
@Welcome ADRT
@
text
@d6 1
a6 1
#include "config.h"
@

