head	14.13;
access;
symbols
	rel-7-10-4:14.11
	STABLE:14.11.0.2
	rel-7-10-2:14.11
	rel-7-10-0:14.10
	rel-7-8-4:14.8
	rel-7-8-2:14.8
	rel-7-8-0:14.8
	trimnurbs-branch:14.8.0.2
	help:14.8
	temp_tag:14.7
	bobWinPort-20051223-freeze:14.4
	postmerge-20051223-bobWinPort:14.7
	premerge-20051223-bobWinPort:14.7
	rel-7-6-6:14.7
	rel-7-6-4:14.7
	rel-7-6-2:14.4
	rel-7-6-branch:14.4.0.6
	rel-7-6-0:14.4
	rel-7-4-2:14.4
	rel-7-4-branch:14.4.0.4
	bobWinPort:14.4.0.2
	rel-7-4-0:14.4
	rel-7-2-6:14.3
	rel-7-2-4:14.3
	rel-7-2-2:14.3
	rel-7-2-0:14.3
	rel-7-0-4:14.2
	rel-7-0-2:14.2
	rel-7-0-1:14.2
	opensource-post:14.2
	opensource-pre:1.4
	rel-7-0-branch:1.4.0.2
	rel-7-0:1.4;
locks; strict;
comment	@ * @;


14.13
date	2007.11.21.20.49.13;	author erikgreenwald;	state Exp;
branches;
next	14.12;

14.12
date	2007.11.21.18.55.37;	author erikgreenwald;	state Exp;
branches;
next	14.11;

14.11
date	2007.07.26.01.14.00;	author brlcad;	state Exp;
branches;
next	14.10;

14.10
date	2007.01.23.01.13.55;	author brlcad;	state Exp;
branches;
next	14.9;

14.9
date	2007.01.20.14.37.06;	author brlcad;	state Exp;
branches;
next	14.8;

14.8
date	2006.01.18.06.46.27;	author brlcad;	state Exp;
branches;
next	14.7;

14.7
date	2005.10.23.04.44.39;	author brlcad;	state Exp;
branches;
next	14.6;

14.6
date	2005.09.22.00.21.51;	author brlcad;	state Exp;
branches;
next	14.5;

14.5
date	2005.09.21.19.05.37;	author brlcad;	state Exp;
branches;
next	14.4;

14.4
date	2005.06.30.00.08.37;	author erikgreenwald;	state Exp;
branches
	14.4.6.1;
next	14.3;

14.3
date	2005.01.30.20.31.33;	author brlcad;	state Exp;
branches;
next	14.2;

14.2
date	2004.12.21.03.45.40;	author butler;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.32;	author morrison;	state Exp;
branches;
next	1.4;

1.4
date	2004.08.02.23.01.53;	author morrison;	state Exp;
branches;
next	1.3;

1.3
date	2004.06.09.18.21.39;	author erikg;	state Exp;
branches;
next	1.2;

1.2
date	2004.06.08.22.04.44;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.20.15.21.46;	author morrison;	state Exp;
branches;
next	;

14.4.6.1
date	2005.11.13.13.46.20;	author brlcad;	state Exp;
branches;
next	;


desc
@@


14.13
log
@pass bu_exit a NULL instead of an empty string
@
text
@/*                       M A C - P I X . C
 * BRL-CAD
 *
 * Copyright (c) 1986-2007 United States Government as represented by
 * the U.S. Army Research Laboratory.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * version 2.1 as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this file; see the file named COPYING for more
 * information.
 */
/** @@file mac-pix.c
 *
 *  Read MacPaint document and output pix(5) or bw(5) raster image
 *
 *  The Macintosh bitmap file has a 512 byte header which is
 *  unimportant for this application, followed by a run-length-encoded
 *  image.
 *
 *  The image is stored as a sequence of bits, proceeding from the
 *  upper right corner down to the lower right corner, and then
 *  advancing left one column.  This unusual format
 *  somewhat complicates matters here.
 *
 *  Within each byte, bits are extracted MSB to LSB;  these bits go down
 *  the page.
 *
 *  Because two files are being processed, the "file_*" things refer
 *  to the input file, and the "scr_*" things refer to the output file.
 *
 *  Author -
 *	Michael John Muuss
 *
 *  Acknowledgement -
 *	getbits() drawn from paintimp.c by
 *	Dave Johnson, Brown University Computer Science
 *
 */
#ifndef lint
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/util/mac-pix.c,v 14.12 2007/11/21 18:55:37 erikgreenwald Exp $ (BRL)";
#endif

#include "common.h"

#ifdef HAVE_UNISTD_H
# include <unistd.h>
#endif

#include <stdio.h>
#include <stdlib.h>

#include "machine.h"
#include "bu.h"


#define	MAC_HEIGHT	576	/* input height (y), in bits */
#define	MAC_WIDTH	720	/* input width (x), in bits */

struct macpaint_hdr {
	long	version;		/* 4 bytes */
	char	patterns[38*8];		/* 304 bytes */
	char	spare[204];
} hdr;

unsigned char pix[MAC_HEIGHT*MAC_WIDTH];

unsigned char color[3] = { 0xFF, 0xFF, 0xFF };
unsigned char black[3*2048];

int	file_height = MAC_HEIGHT;	/* generally constant */
int	file_width = MAC_WIDTH;
int	file_xoff;
int	file_yoff;
int	scr_width = 1024;		/* "screen" tracks input file if zero */
int	scr_height = 1024;
int	scr_xoff;
int	scr_yoff;

int	bwflag;
char	*file_name;
FILE	*infp;

static char usage[] = "\
Usage: mac-pix [-c -l -b]\n\
	[-s squareMacsize] [-w Mac_width] [-n Mac_height]\n\
	[-x Mac_xoff] [-y Mac_yoff] [-X outp_xoff] [-Y outp_yoff]\n\
	[-S squareoutpsize] [-W outp_width] [-N outp_height]\n\
	[-C r/g/b] [file.mac]\n";

int
get_args(int argc, register char **argv)
{
	register int c;

	while ( (c = bu_getopt( argc, argv, "clbs:w:n:x:y:X:Y:S:W:N:C:" )) != EOF )  {
		switch( c )  {
		case 'c':
			/* Center in output */
			scr_xoff = (scr_width-file_width)/2;
			scr_yoff = (scr_height-file_height)/2;
			break;
		case 'b':
			bwflag = 1;
			break;
		case 'l':
			/* "low"-res output -- track file size */
			scr_height = scr_width = 0;
			break;
		case 's':
			/* square file size */
			file_height = file_width = atoi(bu_optarg);
			break;
		case 'w':
			file_width = atoi(bu_optarg);
			break;
		case 'n':
			file_height = atoi(bu_optarg);
			break;
		case 'x':
			file_xoff = atoi(bu_optarg);
			break;
		case 'X':
			scr_xoff += atoi(bu_optarg);
			break;
		case 'Y':
			scr_yoff += atoi(bu_optarg);
			break;
		case 'S':
			scr_height = scr_width = atoi(bu_optarg);
			break;
		case 'W':
			scr_width = atoi(bu_optarg);
			break;
		case 'N':
			scr_height = atoi(bu_optarg);
			break;
		case 'y':
			file_yoff = atoi(bu_optarg);
			break;
		case 'C':
			{
				register char *cp = bu_optarg;
				register unsigned char *conp
					= (unsigned char *)color;

				/* premature null => atoi gives zeros */
				for( c=0; c < 3; c++ )  {
					*conp++ = atoi(cp);
					while( *cp && *cp++ != '/' ) ;
				}
			}
			break;

		default:		/* '?' */
			return(0);
		}

		/* enforce limits */
		if( file_width > MAC_WIDTH )
			file_width = MAC_WIDTH;
		if( file_height > MAC_HEIGHT )
			file_height = MAC_HEIGHT;
		if( file_xoff < 0 || file_xoff >= MAC_WIDTH )
			file_xoff = 0;
		if( file_yoff < 0 || file_yoff >= MAC_HEIGHT )
			file_yoff = 0;
	}

	if( bu_optind >= argc )  {
		if( isatty(fileno(stdin)) )
			return(0);
		file_name = "-";
		infp = stdin;
	} else {
		file_name = argv[bu_optind];
		if( (infp = fopen(file_name, "r")) == NULL )  {
			(void)fprintf( stderr,
				"mac-pix: cannot open \"%s\" for reading\n",
				file_name );
			return(0);
		}
	}

	if ( argc > ++bu_optind )
		(void)fprintf( stderr, "mac-pix: excess argument(s) ignored\n" );

	return(1);		/* OK */
}

int
getbits(register FILE *fp)
{
	static int count, rep, chr;
	register int c;

	if (rep) {
		rep--;
		return chr;
	}
	if (count) {
		count--;
		return getc(fp);
	}
	c = getc(fp);
	if (c & 0x80) {			/* repeated character count */
		rep = 0x100 - c;	/* byte length 2's comp + 1 */
					/* 	allow for this call */
		chr = getc(fp);		/* character to repeat */
		return chr;
	}
	else {
		count = c;		/* already counted this char */
		return getc(fp);
	}
}

int
main(int argc, char **argv)
{
	register int c;
	register int x, y;
	int x1, x2, x3;		/* x zone widths */
	int y1, y2, y3;		/* y zone widths */
	int first_x;		/* x: first pixel to be output in pix[] */
	int first_y;		/* y: first pixel to be output in pix[] */

	if ( !get_args( argc, argv ) || isatty(fileno(stdout)) )  {
		(void)fputs(usage, stderr);
		bu_exit ( 1, NULL );
	}

	/* If screen size was not set, track the file size */
	if( scr_width == 0 )
		scr_width = file_width;
	if( scr_height == 0 )
		scr_height = file_height;

	fread( (char *)&hdr, sizeof(hdr), 1, infp );

	/* x and y are in terms of 1st quadrant coordinates */
	/* Very first bit input is in upper right of screen */
	x = file_width-1;
	y = file_height-1;

	while ((c = getbits(infp)) != EOF) {
		register int mask;
		register unsigned char *cp;

		cp = &pix[(file_width*y)+x];

		for( mask = 0x80; mask; mask >>= 1 )  {
			if( c & mask )
				*cp = 0xFF;
			else
				*cp = 0;
			cp -= file_width;
		}

		y -= 8;
		if (y < 0) {
			y = file_height-1;
			if ( --x < 0)
				break;
		}
	}
	fclose(infp);

	/*
	 *  There are potentially 9 regions in the output file, only one
	 *  will contain actual image.  x1 is the width of the left border
	 *  for each scanline, x2 is the width of the image area,
	 *  with the first pixel being first_x, and x3 being the width
	 *  of the right border.
	 *  Computations in y are similar.
	 */
	first_y = file_yoff;		/* always >= 0 */
	y1 = scr_yoff;
	if( y1 < 0 )  {
		y1 = 0;
		first_y += -scr_yoff;
	}
	y2 = file_height - first_y;
	if( y1 + y2 > scr_height )
		y2 = scr_height - y1;
	if( first_y >= file_height )
		y2 = 0;
	y3 = scr_height - y1 - y2;

	first_x = file_xoff;
	x1 = scr_xoff;
	if( x1 < 0 )  {
		x1 = 0;
		first_x += -scr_xoff;
	}
	x2 = file_width - first_x;
	if( x1 + x2 > scr_width )
		x2 = scr_width - x1;
	if( first_x >= file_width )
		x2 = 0;
	x3 = scr_width - x1 - x2;

	if( bwflag )  {
		for( y = 0; y < y1; y++ )
			fwrite( black, scr_width, 1, stdout );
		for( y = 0; y < y2; y++ )  {
			fwrite( black, x1, 1, stdout );
			fwrite( &pix[(file_width*(y+first_y))+first_x],
				x2, 1, stdout );
			fwrite( black, x3, 1, stdout );
		}
		for( y = 0; y < y3; y++ )
			fwrite( black, scr_width, 1, stdout );
	} else {
		for( y = 0; y < y1; y++ )
			fwrite( black, scr_width, 3, stdout );
		for( y = 0; y < y2; y++ )  {
			register unsigned char *cp;

			fwrite( black, x1, 3, stdout );
			cp = &pix[(file_width*(y+first_y))+first_x];
			for( x = 0; x < x2; x++ )  {
				if( *cp++ )
					fwrite( color, 3, 1, stdout );
				else
					fwrite( black, 3, 1, stdout );
			}
			fwrite( black, x3, 3, stdout );
		}
		for( y = 0; y < y3; y++ )
			fwrite( black, scr_width, 3, stdout );
	}
	bu_exit (0, NULL);
}


/*
 * Local Variables:
 * mode: C
 * tab-width: 8
 * c-basic-offset: 4
 * indent-tabs-mode: t
 * End:
 * ex: shiftwidth=4 tabstop=8
 */
@


14.12
log
@exit->bu_exit where applicable
@
text
@d48 1
a48 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/util/mac-pix.c,v 14.11 2007/07/26 01:14:00 brlcad Exp $ (BRL)";
d237 1
a237 1
		bu_exit ( 1, "" );
d340 1
a340 1
	bu_exit (0, "");
@


14.11
log
@remove ephemeral data like phone numbers and addresses, including the misleading 'source' statements on code that is continually evolving and receiving contributions from many many sources
@
text
@d48 1
a48 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/util/mac-pix.c,v 14.10 2007/01/23 01:13:55 brlcad Exp $ (BRL)";
d237 1
a237 1
		exit( 1 );
d340 1
a340 1
	exit(0);
@


14.10
log
@Sweeping license updates.  Documentation is fully relicensed to the BSD Documentation License (a minor variant of the FreeBSD Documentation License and BSD License).  All GPL code (mostly application code) is converted to the LGPL and now also specifically declares version 2.1, revoking the blank check to the FSF.  The intent of these sweeping changes are to simplify the licensing terms and increase overall flexibility of use, both externally (to users for their purposes) and internally (to allow application code to be migrated to libraries without creating GPL libraries).  As a collective work, BRL-CAD is now LGPL.
@
text
@a45 4
 *  Source -
 *	SECAD/VLD Computing Consortium, Bldg 394
 *	The U. S. Army Ballistic Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5066
d48 1
a48 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/util/mac-pix.c,v 14.9 2007/01/20 14:37:06 brlcad Exp $ (BRL)";
@


14.9
log
@update copyright to 2007
@
text
@d8 2
a9 3
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation; either version 2 of the
 * License, or (at your option) any later version.
d14 1
a14 1
 * General Public License for more details.
d16 2
a17 2
 * You should have received a copy of the GNU General Public License
 * along with this file; see the file named COPYING for more
d52 1
a52 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/util/mac-pix.c,v 14.8 2006/01/18 06:46:27 brlcad Exp $ (BRL)";
@


14.8
log
@update copyright to 2006
@
text
@d4 1
a4 1
 * Copyright (c) 1986-2006 United States Government as represented by
d53 1
a53 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/util/mac-pix.c,v 14.7 2005/10/23 04:44:39 brlcad Exp $ (BRL)";
@


14.7
log
@trailing ws
@
text
@d4 1
a4 1
 * Copyright (C) 1986-2005 United States Government as represented by
d53 1
a53 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/util/mac-pix.c,v 14.6 2005/09/22 00:21:51 brlcad Exp $ (BRL)";
@


14.6
log
@add bu.h for bu_getopt stuff
@
text
@d31 1
a31 1
 *  advancing left one column.  This unusual format 
d39 1
a39 1
 *  
d46 1
a46 1
 *  
d53 1
a53 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/util/mac-pix.c,v 14.5 2005/09/21 19:05:37 brlcad Exp $ (BRL)";
@


14.5
log
@needs bu.h for bu_getopt
@
text
@d53 1
a53 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/util/mac-pix.c,v 14.4 2005/06/30 00:08:37 erikgreenwald Exp $ (BRL)";
a60 1
                                                                                                                                                                            
d66 2
@


14.4
log
@added missing includes
@
text
@d53 1
a53 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/util/mac-pix.c,v 14.3 2005/01/30 20:31:33 brlcad Exp $ (BRL)";
d107 1
a107 1
	while ( (c = getopt( argc, argv, "clbs:w:n:x:y:X:Y:S:W:N:C:" )) != EOF )  {
d123 1
a123 1
			file_height = file_width = atoi(optarg);
d126 1
a126 1
			file_width = atoi(optarg);
d129 1
a129 1
			file_height = atoi(optarg);
d132 1
a132 1
			file_xoff = atoi(optarg);
d135 1
a135 1
			scr_xoff += atoi(optarg);
d138 1
a138 1
			scr_yoff += atoi(optarg);
d141 1
a141 1
			scr_height = scr_width = atoi(optarg);
d144 1
a144 1
			scr_width = atoi(optarg);
d147 1
a147 1
			scr_height = atoi(optarg);
d150 1
a150 1
			file_yoff = atoi(optarg);
d154 1
a154 1
				register char *cp = optarg;
d181 1
a181 1
	if( optind >= argc )  {
d187 1
a187 1
		file_name = argv[optind];
d196 1
a196 1
	if ( argc > ++optind )
@


14.4.6.1
log
@merge changes from HEAD aka rel-7-6-4 to the rel-7-6-branch just in case someone peeks a gander or tries to continue/build the branch
@
text
@d31 1
a31 1
 *  advancing left one column.  This unusual format
d39 1
a39 1
 *
d46 1
a46 1
 *
d53 1
a53 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
d61 1
a66 2
#include "bu.h"

d107 1
a107 1
	while ( (c = bu_getopt( argc, argv, "clbs:w:n:x:y:X:Y:S:W:N:C:" )) != EOF )  {
d123 1
a123 1
			file_height = file_width = atoi(bu_optarg);
d126 1
a126 1
			file_width = atoi(bu_optarg);
d129 1
a129 1
			file_height = atoi(bu_optarg);
d132 1
a132 1
			file_xoff = atoi(bu_optarg);
d135 1
a135 1
			scr_xoff += atoi(bu_optarg);
d138 1
a138 1
			scr_yoff += atoi(bu_optarg);
d141 1
a141 1
			scr_height = scr_width = atoi(bu_optarg);
d144 1
a144 1
			scr_width = atoi(bu_optarg);
d147 1
a147 1
			scr_height = atoi(bu_optarg);
d150 1
a150 1
			file_yoff = atoi(bu_optarg);
d154 1
a154 1
				register char *cp = bu_optarg;
d181 1
a181 1
	if( bu_optind >= argc )  {
d187 1
a187 1
		file_name = argv[bu_optind];
d196 1
a196 1
	if ( argc > ++bu_optind )
@


14.3
log
@update copyright to 2005
@
text
@d53 1
a53 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/util/mac-pix.c,v 14.2 2004/12/21 03:45:40 butler Exp $ (BRL)";
d64 1
@


14.2
log
@GPL license changes
@
text
@d4 1
a4 1
 * Copyright (c) 1986-2004 United States Government as represented by
d53 1
a53 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/util/mac-pix.c,v 14.1 2004/11/16 19:42:32 morrison Exp $ (BRL)";
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d1 21
a21 2
/*
 *			M A C - P I X . C
a50 4
 *  
 *  Copyright Notice -
 *	This software is Copyright (C) 1986-2004 by the United States Army.
 *	All rights reserved.
d53 1
a53 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/util/mac-pix.c,v 1.4 2004/08/02 23:01:53 morrison Exp $ (BRL)";
@


1.4
log
@replace the wrapped config.h block with common.h
@
text
@d38 1
a38 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/util/mac-pix.c,v 1.3 2004/06/09 18:21:39 erikg Exp $ (BRL)";
d331 10
@


1.3
log
@include unistd.h for getopt stuff
@
text
@d38 1
a38 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/util/mac-pix.c,v 1.2 2004/06/08 22:04:44 morrison Exp $ (BRL)";
d41 1
a41 3
#ifdef HAVE_CONFIG_H
# include "config.h"
#endif
@


1.2
log
@obliterate externs.h
@
text
@d38 1
a38 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
d44 5
@


1.1
log
@Vast reorganization begins.  Sources moved from top-level directories into src/.
@
text
@d38 1
a38 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/util/mac-pix.c,v 11.9 2004/05/10 15:30:50 erikg Exp $ (BRL)";
a44 2


a47 1
#include "externs.h"			/* For getopt */
@

