head	14.8;
access;
symbols
	rel-7-10-4:14.8
	STABLE:14.8.0.2
	rel-7-10-2:14.8
	rel-7-10-0:14.8
	rel-7-8-4:14.6
	rel-7-8-2:14.6
	rel-7-8-0:14.6
	trimnurbs-branch:14.6.0.2
	help:14.6
	temp_tag:14.5
	bobWinPort-20051223-freeze:14.4
	postmerge-20051223-bobWinPort:14.5
	premerge-20051223-bobWinPort:14.5
	rel-7-6-6:14.5
	rel-7-6-4:14.5
	rel-7-6-2:14.4
	rel-7-6-branch:14.4.0.6
	rel-7-6-0:14.4
	rel-7-4-2:14.4
	rel-7-4-branch:14.4.0.4
	bobWinPort:14.4.0.2
	rel-7-4-0:14.4
	rel-7-2-6:14.3
	rel-7-2-4:14.3
	rel-7-2-2:14.3
	rel-7-2-0:14.3
	rel-7-0-4:14.2
	rel-7-0-2:14.2
	rel-7-0-1:14.2
	opensource-post:14.2
	opensource-pre:1.5
	rel-7-0-branch:1.5.0.2
	rel-7-0:1.5;
locks; strict;
comment	@ * @;


14.8
date	2007.01.23.01.13.52;	author brlcad;	state Exp;
branches;
next	14.7;

14.7
date	2007.01.20.14.37.05;	author brlcad;	state Exp;
branches;
next	14.6;

14.6
date	2006.01.18.06.46.27;	author brlcad;	state Exp;
branches;
next	14.5;

14.5
date	2005.10.23.04.44.39;	author brlcad;	state Exp;
branches;
next	14.4;

14.4
date	2005.06.30.00.08.36;	author erikgreenwald;	state Exp;
branches
	14.4.6.1;
next	14.3;

14.3
date	2005.01.30.20.31.32;	author brlcad;	state Exp;
branches;
next	14.2;

14.2
date	2004.12.21.03.45.40;	author butler;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.32;	author morrison;	state Exp;
branches;
next	1.5;

1.5
date	2004.09.09.04.53.00;	author kermit;	state Exp;
branches;
next	1.4;

1.4
date	2004.08.02.23.01.53;	author morrison;	state Exp;
branches;
next	1.3;

1.3
date	2004.06.09.20.10.55;	author erikg;	state Exp;
branches;
next	1.2;

1.2
date	2004.06.08.22.04.42;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.20.15.21.40;	author morrison;	state Exp;
branches;
next	;

14.4.6.1
date	2005.11.13.13.46.20;	author brlcad;	state Exp;
branches;
next	;


desc
@@


14.8
log
@Sweeping license updates.  Documentation is fully relicensed to the BSD Documentation License (a minor variant of the FreeBSD Documentation License and BSD License).  All GPL code (mostly application code) is converted to the LGPL and now also specifically declares version 2.1, revoking the blank check to the FSF.  The intent of these sweeping changes are to simplify the licensing terms and increase overall flexibility of use, both externally (to users for their purposes) and internally (to allow application code to be migrated to libraries without creating GPL libraries).  As a collective work, BRL-CAD is now LGPL.
@
text
@/*                     A L I A S - P I X . C
 * BRL-CAD
 *
 * Copyright (c) 2004-2007 United States Government as represented by
 * the U.S. Army Research Laboratory.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * version 2.1 as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this file; see the file named COPYING for more
 * information.
 */
/** @@file alias-pix.c
 *	Convert ALIAS(tm) PIX format image files to BRL PIX fomat files.
 *
 *	Author:
 *	Lee A. Butler
 *
 */
#include "common.h"

#include <stdlib.h>
#include <stdio.h>
#include <ctype.h>

#ifdef HAVE_UNISTD_H
# include <unistd.h>
#endif

#include "machine.h"


char *progname = "(noname)";
void usage(void)
{
	(void) fprintf(stderr, "Usage: %s [ -v ] < ALIASpixfile >BRLpixfile\n", progname);
	exit(1);
}

struct aliashead {
	short	x, y;		/* dimensions of this image in X and Y */
	short	xoff, yoff;	/* offsets of pixels */
	short	bitplanes;	/* the number of bits per pixel */
} hdr;

#define BUFCNT 256
struct pixel {
	unsigned char len, b, g, r;
} buf[BUFCNT];

int verbose = 0;

char *image;

int
main(int ac, char **av)
{
	int pixcnt, i;
	char *p;

	progname = *av;

	if (ac > 2 || isatty(fileno(stdin))) usage();

	if (ac > 1) {
		p = av[1];
		if (*p == '-' && *(p+1) == 'v') verbose = 1;
		else usage();
	}


	/* read header in architecture-independent fashion */
	hdr.x = (getchar() & 0x0ff) << 8;
	hdr.x += (getchar() & 0x0ff);

	hdr.y = (getchar() & 0x0ff) << 8;
	hdr.y += (getchar() & 0x0ff);

	hdr.xoff = (getchar() & 0x0ff) << 8;
	hdr.xoff += (getchar() & 0x0ff);

	hdr.yoff = (getchar() & 0x0ff) << 8;
	hdr.yoff += (getchar() & 0x0ff);

	hdr.bitplanes = (getchar() & 0x0ff) << 8;
	hdr.bitplanes += (getchar() & 0x0ff);

	if (hdr.bitplanes != 24) {
		(void) fprintf(stderr, "Weird image file:\n");
		(void) fprintf(stderr,
			"X: %d Y: %d xoff: %d yoff: %d bits/pixel: %d\n",
			hdr.x, hdr.y, hdr.xoff, hdr.yoff, hdr.bitplanes);
		exit(-1);
	}

	if (verbose) {
		(void) fprintf(stderr,
			"X: %d Y: %d xoff: %d yoff: %d bits/pixel: %d\n",
			hdr.x, hdr.y, hdr.xoff, hdr.yoff, hdr.bitplanes);
	}


	if ( (image=(char *)malloc(hdr.x*hdr.y*3)) == (char *)NULL) {
		(void) fprintf(stderr, "%s: insufficient memory for %d * %d image\n",
			progname, hdr.x, hdr.y);
		exit(-1);
	}

	/* read and "unpack" the image */
	p = image;
	while ((pixcnt=fread(buf, sizeof(struct pixel), BUFCNT, stdin)) > 0) {
		for (i=0 ; i < pixcnt ; ++i)
			do {
				*p++ = buf[i].r;
				*p++ = buf[i].g;
				*p++ = buf[i].b;
			} while (--buf[i].len > 0);
	}

	/* write out the image scanlines, correcting for different origin */

	for(i=hdr.y-1 ; i >= 0 ; --i)
		if (fwrite(&image[i*hdr.x*3], hdr.x*3, 1, stdout) != 1) {
			(void) fprintf(stderr, "%s: Error writing image\n", *av);
			exit(-1);
		}


	free(image);
	return(0);
}

/*
 * Local Variables:
 * mode: C
 * tab-width: 8
 * c-basic-offset: 4
 * indent-tabs-mode: t
 * End:
 * ex: shiftwidth=4 tabstop=8
 */
@


14.7
log
@update copyright to 2007
@
text
@d8 2
a9 3
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation; either version 2 of the
 * License, or (at your option) any later version.
d14 1
a14 1
 * General Public License for more details.
d16 2
a17 2
 * You should have received a copy of the GNU General Public License
 * along with this file; see the file named COPYING for more
@


14.6
log
@update copyright to 2006
@
text
@d4 1
a4 1
 * Copyright (c) 2004-2006 United States Government as represented by
@


14.5
log
@trailing ws
@
text
@d4 1
a4 1
 * Copyright (C) 2004-2005 United States Government as represented by
@


14.4
log
@added missing includes
@
text
@d95 1
a95 1
	
d99 1
a99 1
			"X: %d Y: %d xoff: %d yoff: %d bits/pixel: %d\n", 
d106 1
a106 1
			"X: %d Y: %d xoff: %d yoff: %d bits/pixel: %d\n", 
d129 1
a129 1
	
@


14.4.6.1
log
@merge changes from HEAD aka rel-7-6-4 to the rel-7-6-branch just in case someone peeks a gander or tries to continue/build the branch
@
text
@d95 1
a95 1

d99 1
a99 1
			"X: %d Y: %d xoff: %d yoff: %d bits/pixel: %d\n",
d106 1
a106 1
			"X: %d Y: %d xoff: %d yoff: %d bits/pixel: %d\n",
d129 1
a129 1

@


14.3
log
@update copyright to 2005
@
text
@d34 4
@


14.2
log
@GPL license changes
@
text
@d4 2
a5 2
 * Copyright (c) 2004 United States Government as represented by the
 * U.S. Army Research Laboratory.
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d1 2
a2 1
/*			A L I A S - P I X
d4 18
@


1.5
log
@Added <stdlib.h> to fix implicit cast (for IA64 architecture).
@
text
@d117 10
@


1.4
log
@replace the wrapped config.h block with common.h
@
text
@d11 1
d14 1
d16 1
@


1.3
log
@fixing warnings
@
text
@d9 1
a9 3
#ifdef HAVE_CONFIG_H
# include "config.h"
#endif
@


1.2
log
@obliterate externs.h
@
text
@d87 1
a87 1
	if ( (image=malloc(hdr.x*hdr.y*3)) == (char *)NULL) {
@


1.1
log
@Vast reorganization begins.  Sources moved from top-level directories into src/.
@
text
@a12 2


a15 1
#include "externs.h"
@

