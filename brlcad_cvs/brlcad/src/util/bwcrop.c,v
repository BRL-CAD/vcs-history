head	14.10;
access;
symbols
	rel-7-10-4:14.9
	STABLE:14.9.0.2
	rel-7-10-2:14.9
	rel-7-10-0:14.8
	rel-7-8-4:14.5
	rel-7-8-2:14.5
	rel-7-8-0:14.5
	trimnurbs-branch:14.5.0.2
	help:14.5
	temp_tag:14.4
	bobWinPort-20051223-freeze:14.3
	postmerge-20051223-bobWinPort:14.4
	premerge-20051223-bobWinPort:14.4
	rel-7-6-6:14.4
	rel-7-6-4:14.4
	rel-7-6-2:14.3
	rel-7-6-branch:14.3.0.6
	rel-7-6-0:14.3
	rel-7-4-2:14.3
	rel-7-4-branch:14.3.0.4
	bobWinPort:14.3.0.2
	rel-7-4-0:14.3
	rel-7-2-6:14.3
	rel-7-2-4:14.3
	rel-7-2-2:14.3
	rel-7-2-0:14.3
	rel-7-0-4:14.2
	rel-7-0-2:14.2
	rel-7-0-1:14.2
	opensource-post:14.2
	opensource-pre:1.4
	rel-7-0-branch:1.4.0.2
	rel-7-0:1.4;
locks; strict;
comment	@ * @;


14.10
date	2007.12.02.22.34.25;	author brlcad;	state Exp;
branches;
next	14.9;

14.9
date	2007.07.26.01.13.59;	author brlcad;	state Exp;
branches;
next	14.8;

14.8
date	2007.01.27.01.41.53;	author brlcad;	state Exp;
branches;
next	14.7;

14.7
date	2007.01.23.01.13.52;	author brlcad;	state Exp;
branches;
next	14.6;

14.6
date	2007.01.20.14.37.05;	author brlcad;	state Exp;
branches;
next	14.5;

14.5
date	2006.01.18.06.46.27;	author brlcad;	state Exp;
branches;
next	14.4;

14.4
date	2005.10.23.04.44.39;	author brlcad;	state Exp;
branches;
next	14.3;

14.3
date	2005.01.30.20.31.32;	author brlcad;	state Exp;
branches
	14.3.6.1;
next	14.2;

14.2
date	2004.12.21.03.45.40;	author butler;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.32;	author morrison;	state Exp;
branches;
next	1.4;

1.4
date	2004.09.09.04.53.00;	author kermit;	state Exp;
branches;
next	1.3;

1.3
date	2004.08.02.23.01.53;	author morrison;	state Exp;
branches;
next	1.2;

1.2
date	2004.06.08.22.04.43;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.20.15.21.42;	author morrison;	state Exp;
branches;
next	;

14.3.6.1
date	2005.11.13.13.46.20;	author brlcad;	state Exp;
branches;
next	;


desc
@@


14.10
log
@woo hoo, finally got through most of the flawfinder level 4 issues related to string buffer limits (leaving issues that can probably/mostly be ignored).  these changes mostly invovlved using the n-variants of the various string processing functions so that the buffers being written to are properly clamped.
@
text
@/*                        B W C R O P . C
 * BRL-CAD
 *
 * Copyright (c) 1986-2007 United States Government as represented by
 * the U.S. Army Research Laboratory.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * version 2.1 as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this file; see the file named COPYING for more
 * information.
 */
/** @@file bwcrop.c
 *
 * Crop Black and White files.
 *
 * Given four "corner points" in the input file, we produce an
 * output file of the requested size consisting of the nearest
 * pixels.  No filtering/interpolating is done.
 *
 * This can handle arbitrarily large files.
 * We keep a buffer of scan lines centered around the last
 * point that fell outside of the buffer.
 * Note: this buffer code is shared with bwscale.c
 *
 *  Author -
 *	Phillip Dykstra
 *	16 June 1986
 *
 */
#ifndef lint
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/util/bwcrop.c,v 14.9 2007/07/26 01:13:59 brlcad Exp $ (BRL)";
#endif

#include "common.h"

#include <stdlib.h>
#include <stdio.h>

#include "machine.h"


#define	MAXBUFBYTES	1024*1024	/* max bytes to malloc in buffer space */

unsigned char	*buffer;
int	scanlen;			/* length of infile scanlines */
int	buflines;			/* Number of lines held in buffer */
int	buf_start = -1000;		/* First line in buffer */

float	xnum, ynum;			/* Number of pixels in new file */
float	ulx,uly,urx,ury,lrx,lry,llx,lly;	/* Corners of original file */

#define	round(x) ((int)(x+0.5))

void	init_buffer(int scanlen), fill_buffer(int y);

FILE	*ifp, *ofp;

static const char usage[] = "\
Usage: bwcrop in.bw out.bw (I prompt!)\n\
   or  bwcrop in.bw out.bw inwidth outwidth outheight\n\
	ulx uly urx ury lrx lry llx lly\n";

int
main(int argc, char **argv)
{
	float	row, col, x1, y1, x2, y2, x, y;
	int	yindex;
	char	value;

	if (argc < 3) {
		bu_exit(1, "%s", usage );
	}
	if ((ifp = fopen(argv[1], "r")) == NULL) {
		fprintf( stderr, "bwcrop: can't open %s\n", argv[1] );
		exit( 2 );
	}
	if ((ofp = fopen(argv[2], "w")) == NULL) {
		fprintf( stderr, "bwcrop: can't open %s\n", argv[1] );
		exit( 3 );
	}

	if( argc == 14 ) {
		scanlen = atoi( argv[3] );
		xnum = atoi( argv[4] );
		ynum = atoi( argv[5] );
		ulx = atoi( argv[6] );
		uly = atoi( argv[7] );
		urx = atoi( argv[8] );
		ury = atoi( argv[9] );
		lrx = atoi( argv[10] );
		lry = atoi( argv[11] );
		llx = atoi( argv[12] );
		lly = atoi( argv[13] );
	} else {
		/* Get info */
		printf("Scanline length in input file: ");
		scanf( "%d", &scanlen );
		if( scanlen <= 0 ) {
			fprintf(stderr,"bwcrop: scanlen = %d, don't be ridiculous\n", scanlen );
			exit( 4 );
		}
		printf("Line Length and Number of scan lines (in new file)?: ");
		scanf( "%f%f", &xnum, &ynum );
		printf("Upper left corner in input file (x,y)?: ");
		scanf( "%f%f", &ulx, &uly );
		printf("Upper right corner (x,y)?: ");
		scanf( "%f%f", &urx, &ury );
		printf("Lower right (x,y)?: ");
		scanf( "%f%f", &lrx, &lry );
		printf("Lower left (x,y)?: ");
		scanf( "%f%f", &llx, &lly );
	}

	/* See how many lines we can buffer */
	init_buffer( scanlen );

	/* Check for silly buffer syndrome */
	if( abs((int)(ury - uly)) > buflines/2 || abs((int)(lry - lly)) > buflines/2 ) {
		fprintf( stderr, "bwcrop: Warning: You are skewing enough in the y direction\n" );
		fprintf( stderr, "bwcrop: relative to my buffer size that I will exhibit silly\n" );
		fprintf( stderr, "bwcrop: buffer syndrome (two replacements per scanline).\n" );
		fprintf( stderr, "bwcrop: Recompile me or use a smarter algorithm.\n" );
	}

	/* Move all points */
	for (row = 0; row < ynum; row++) {
		/* calculate left point of row */
		x1 = ((ulx-llx)/(ynum-1)) * row + llx;
		y1 = ((uly-lly)/(ynum-1)) * row + lly;
		/* calculate right point of row */
		x2 = ((urx-lrx)/(ynum-1)) * row + lrx;
		y2 = ((ury-lry)/(ynum-1)) * row + lry;

		for (col = 0; col < xnum; col++) {
			/* calculate point along row */
			x = ((x2-x1)/(xnum-1)) * col + x1;
			y = ((y2-y1)/(xnum-1)) * col + y1;

			/* Make sure we are in the buffer */
			yindex = round(y) - buf_start;
			if( yindex < 0 || yindex >= buflines ) {
				fill_buffer( round(y) );
				yindex = round(y) - buf_start;
			}

			value = buffer[ yindex * scanlen + round(x) ];
			fwrite(&value, sizeof(value), 1, ofp);
		}
	}
	return (0);
}

/*
 * Determine max number of lines to buffer.
 *  and malloc space for it.
 *  XXX - CHECK FILE SIZE
 */
void
init_buffer(int scanlen)
{
	int	max;

	/* See how many we could buffer */
	max = MAXBUFBYTES / scanlen;

	/*
	 * Do a max of 512.  We really should see how big
	 * the input file is to decide if we should buffer
	 * less than our max.
	 */
	if( max > 512 ) max = 512;

	buflines = max;
	buffer = (unsigned char *)malloc( buflines * scanlen );
}

/*
 * Load the buffer with scan lines centered around
 * the given y coordinate.
 */
void
fill_buffer(int y)
{
	buf_start = y - buflines/2;
	if( buf_start < 0 ) buf_start = 0;

	fseek( ifp, buf_start * scanlen, 0 );
	fread( buffer, scanlen, buflines, ifp );
}

/*
 * Local Variables:
 * mode: C
 * tab-width: 8
 * c-basic-offset: 4
 * indent-tabs-mode: t
 * End:
 * ex: shiftwidth=4 tabstop=8
 */
@


14.9
log
@remove ephemeral data like phone numbers and addresses, including the misleading 'source' statements on code that is continually evolving and receiving contributions from many many sources
@
text
@d39 1
a39 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/util/bwcrop.c,v 14.8 2007/01/27 01:41:53 brlcad Exp $ (BRL)";
d66 1
a66 1
static char usage[] = "\
d79 1
a79 2
		fprintf( stderr, usage );
		exit( 1 );
@


14.8
log
@ws. lots and lots of ws.  see sh/ws.sh for details (cases 'abcdeg').
@
text
@a36 4
 *  Source -
 *	SECAD/VLD Computing Consortium, Bldg 394
 *	The U. S. Army Ballistic Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5066
d39 1
a39 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/util/bwcrop.c,v 14.7 2007/01/23 01:13:52 brlcad Exp $ (BRL)";
@


14.7
log
@Sweeping license updates.  Documentation is fully relicensed to the BSD Documentation License (a minor variant of the FreeBSD Documentation License and BSD License).  All GPL code (mostly application code) is converted to the LGPL and now also specifically declares version 2.1, revoking the blank check to the FSF.  The intent of these sweeping changes are to simplify the licensing terms and increase overall flexibility of use, both externally (to users for their purposes) and internally (to allow application code to be migrated to libraries without creating GPL libraries).  As a collective work, BRL-CAD is now LGPL.
@
text
@d43 1
a43 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/util/bwcrop.c,v 14.6 2007/01/20 14:37:05 brlcad Exp $ (BRL)";
d73 1
a73 1
        ulx uly urx ury lrx lry llx lly\n";
@


14.6
log
@update copyright to 2007
@
text
@d8 2
a9 3
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation; either version 2 of the
 * License, or (at your option) any later version.
d14 1
a14 1
 * General Public License for more details.
d16 2
a17 2
 * You should have received a copy of the GNU General Public License
 * along with this file; see the file named COPYING for more
d43 1
a43 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/util/bwcrop.c,v 14.5 2006/01/18 06:46:27 brlcad Exp $ (BRL)";
@


14.5
log
@update copyright to 2006
@
text
@d4 1
a4 1
 * Copyright (c) 1986-2006 United States Government as represented by
d44 1
a44 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/util/bwcrop.c,v 14.4 2005/10/23 04:44:39 brlcad Exp $ (BRL)";
@


14.4
log
@trailing ws
@
text
@d4 1
a4 1
 * Copyright (C) 1986-2005 United States Government as represented by
d44 1
a44 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/util/bwcrop.c,v 14.3 2005/01/30 20:31:32 brlcad Exp $ (BRL)";
@


14.3
log
@update copyright to 2005
@
text
@d37 1
a37 1
 *  
d44 1
a44 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/util/bwcrop.c,v 14.2 2004/12/21 03:45:40 butler Exp $ (BRL)";
@


14.3.6.1
log
@merge changes from HEAD aka rel-7-6-4 to the rel-7-6-branch just in case someone peeks a gander or tries to continue/build the branch
@
text
@d37 1
a37 1
 *
d44 1
a44 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
@


14.2
log
@GPL license changes
@
text
@d4 1
a4 1
 * Copyright (c) 1986-2004 United States Government as represented by
d44 1
a44 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/util/bwcrop.c,v 14.1 2004/11/16 19:42:32 morrison Exp $ (BRL)";
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d1 21
a21 2
/*
 *		B W C R O P . C
a41 4
 *  
 *  Copyright Notice -
 *	This software is Copyright (C) 1986-2004 by the United States Army.
 *	All rights reserved.
d44 1
a44 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/util/bwcrop.c,v 1.4 2004/09/09 04:53:00 kermit Exp $ (BRL)";
@


1.4
log
@Added <stdlib.h> to fix implicit cast (for IA64 architecture).
@
text
@d29 1
a29 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/util/bwcrop.c,v 1.3 2004/08/02 23:01:53 morrison Exp $ (BRL)";
d189 10
@


1.3
log
@replace the wrapped config.h block with common.h
@
text
@d29 1
a29 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/util/bwcrop.c,v 1.2 2004/06/08 22:04:43 morrison Exp $ (BRL)";
d34 1
d38 1
@


1.2
log
@obliterate externs.h
@
text
@d29 1
a29 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
d32 1
a32 3
#ifdef HAVE_CONFIG_H
# include "config.h"
#endif
@


1.1
log
@Vast reorganization begins.  Sources moved from top-level directories into src/.
@
text
@d29 1
a29 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/util/bwcrop.c,v 11.9 2004/05/10 15:30:50 erikg Exp $ (BRL)";
a35 2


a38 1
#include "externs.h"		/* For malloc */
@

