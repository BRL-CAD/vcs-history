head	14.15;
access;
symbols
	rel-7-10-4:14.11
	STABLE:14.11.0.2
	rel-7-10-2:14.11
	rel-7-10-0:14.11
	rel-7-8-4:14.8
	rel-7-8-2:14.8
	rel-7-8-0:14.8
	trimnurbs-branch:14.8.0.2
	help:14.8
	temp_tag:14.7
	bobWinPort-20051223-freeze:14.4
	postmerge-20051223-bobWinPort:14.7
	premerge-20051223-bobWinPort:14.7
	rel-7-6-6:14.7
	rel-7-6-4:14.7
	rel-7-6-2:14.4
	rel-7-6-branch:14.4.0.6
	rel-7-6-0:14.4
	rel-7-4-2:14.4
	rel-7-4-branch:14.4.0.4
	bobWinPort:14.4.0.2
	rel-7-4-0:14.4
	rel-7-2-6:14.3
	rel-7-2-4:14.3
	rel-7-2-2:14.3
	rel-7-2-0:14.3
	rel-7-0-4:14.2
	rel-7-0-2:14.2
	rel-7-0-1:14.2
	opensource-post:14.2
	opensource-pre:1.5
	rel-7-0-branch:1.5.0.2
	rel-7-0:1.5;
locks; strict;
comment	@ * @;


14.15
date	2007.12.02.22.34.25;	author brlcad;	state Exp;
branches;
next	14.14;

14.14
date	2007.11.21.20.49.14;	author erikgreenwald;	state Exp;
branches;
next	14.13;

14.13
date	2007.11.21.18.55.37;	author erikgreenwald;	state Exp;
branches;
next	14.12;

14.12
date	2007.09.15.16.23.23;	author brlcad;	state Exp;
branches;
next	14.11;

14.11
date	2007.02.20.08.19.51;	author brlcad;	state Exp;
branches;
next	14.10;

14.10
date	2007.01.23.01.13.57;	author brlcad;	state Exp;
branches;
next	14.9;

14.9
date	2007.01.20.14.37.07;	author brlcad;	state Exp;
branches;
next	14.8;

14.8
date	2006.01.18.06.46.28;	author brlcad;	state Exp;
branches;
next	14.7;

14.7
date	2005.10.23.04.44.39;	author brlcad;	state Exp;
branches;
next	14.6;

14.6
date	2005.09.22.00.21.51;	author brlcad;	state Exp;
branches;
next	14.5;

14.5
date	2005.09.21.19.05.37;	author brlcad;	state Exp;
branches;
next	14.4;

14.4
date	2005.06.30.00.08.37;	author erikgreenwald;	state Exp;
branches
	14.4.6.1;
next	14.3;

14.3
date	2005.01.30.20.31.34;	author brlcad;	state Exp;
branches;
next	14.2;

14.2
date	2004.12.21.03.45.41;	author butler;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.32;	author morrison;	state Exp;
branches;
next	1.5;

1.5
date	2004.08.02.23.01.53;	author morrison;	state Exp;
branches;
next	1.4;

1.4
date	2004.06.09.20.10.55;	author erikg;	state Exp;
branches;
next	1.3;

1.3
date	2004.06.09.18.21.39;	author erikg;	state Exp;
branches;
next	1.2;

1.2
date	2004.06.08.22.04.46;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.20.15.21.58;	author morrison;	state Exp;
branches;
next	;

14.4.6.1
date	2005.11.13.13.46.21;	author brlcad;	state Exp;
branches;
next	;


desc
@@


14.15
log
@woo hoo, finally got through most of the flawfinder level 4 issues related to string buffer limits (leaving issues that can probably/mostly be ignored).  these changes mostly invovlved using the n-variants of the various string processing functions so that the buffers being written to are properly clamped.
@
text
@/*                         Q U E R Y . C
 * BRL-CAD
 *
 * Copyright (c) 2004-2007 United States Government as represented by
 * the U.S. Army Research Laboratory.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * version 2.1 as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this file; see the file named COPYING for more
 * information.
 */
/** @@file query.c
 *
 * By default, query reads a line from standard input and echoes it
 * to standard output.
 *
 *  entry:
 *	-t	seconds to wait for user response.
 *	-r	default response
 *	-v	toggle verbose option (Default "r" in "t" seconds)
 *	-l	loop rather than respond.
 *
 *  Exit:
 *	<stdout>	The line read
 *		or	y
 *		or	response
 *
 *  Calls:
 *	get_args
 *
 *  Method:
 *	straight-forward.
 *
 *  Author:
 *	Christopher T. Johnson - 90/08/28
 */
#ifndef lint
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/util/query.c,v 14.14 2007/11/21 20:49:14 erikgreenwald Exp $ (BRL)";
#endif

#include "common.h"

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <signal.h>
#include <errno.h>

#ifdef HAVE_UNISTD_H
#  include <unistd.h>
#endif

#include "machine.h"
#include "bu.h"


char	Yes_Response[] = "y";
int	Verbose=0;
char	*Response= Yes_Response;
int	Timeout=0;
int	Loop=0;
int	Done = 0;

static const char usage[] = "\
Usage: %s [-v] [-t seconds] [-r response ] [-l]\n";

int
get_args(int argc, register char **argv)
{
	register int c;

	while ( (c = bu_getopt( argc, argv, "t:r:vl" )) != EOF )  {
		switch( c )  {
		case 't':
			Timeout = atoi(bu_optarg);
			break;
		case 'r':
			Response = bu_optarg;
			break;
		case 'v':
			Verbose = 1 - Verbose;
			break;
		case 'l':
			Loop = 1;
			break;
		default:		/* '?' */
			return(0);
		}
	}
	if (Timeout < 0) Timeout = 0;
	if ( (Loop & Timeout) <= 0) Timeout=5;

	if (Loop) Verbose = 0;

	return(1);
}

void handler(int);

int
main(int argc, char **argv)
{
	char line[80];
	char *eol;
	char *flag;

	if ( !get_args( argc, argv ) )  {
		bu_exit(1, usage, argv[0]);
	}

	(void) signal(SIGALRM, handler);
	Done = 0;

	for(;;) {
		(void) signal(SIGALRM, handler);
		if (Verbose) {
			if (Timeout) {
				(void) fprintf(stderr,
				    "(Default: %s in %d sec)", Response,
				    Timeout);
			} else {
				(void) fprintf(stderr,
				    "(Default: %s)", Response);
			}
		}

		if (Loop) {
			(void) fprintf(stderr,
			    "(Default: %s, loop in %d sec)", Response, Timeout);
		}
		if (Timeout) alarm(Timeout);

		flag = bu_fgets(line, 80, stdin);
		if (Done) {
			if (Loop) {
				(void) fputs("\n\007", stderr);
				Done = 0;
			} else {
				(void) fputs(Response, stdout);
				(void) putchar('\n');
				break;
			}
		} else if (flag == NULL) {
			(void) fputs(Response, stdout);
			break;
		} else { /* good response */
			eol = strlen(line) + line;
			if (*(eol-1) == '\n') {
				--eol;
				*eol = '\0';
			}
			if (eol == line) {
				(void) fputs(Response, stdout);
			} else {
				(void) fputs(line, stdout);
			}
			(void)putchar('\n');
			break;
		}
	}
	bu_exit (0, NULL);
}
void
handler(int sig)
{
	Done = 1;
}

/*
 * Local Variables:
 * mode: C
 * tab-width: 8
 * c-basic-offset: 4
 * indent-tabs-mode: t
 * End:
 * ex: shiftwidth=4 tabstop=8
 */
@


14.14
log
@pass bu_exit a NULL instead of an empty string
@
text
@d46 1
a46 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/util/query.c,v 14.13 2007/11/21 18:55:37 erikgreenwald Exp $ (BRL)";
d72 1
a72 1
static char usage[] = "\
d116 1
a116 2
		(void) fprintf(stderr,usage,argv[0]);
		bu_exit ( 1, NULL );
@


14.13
log
@exit->bu_exit where applicable
@
text
@d46 1
a46 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/util/query.c,v 14.12 2007/09/15 16:23:23 brlcad Exp $ (BRL)";
d117 1
a117 1
		bu_exit ( 1, "" );
d170 1
a170 1
	bu_exit (0, "");
@


14.12
log
@more c89 embracing.  c89 provides string.h for all of the various str*() and mem*() functions, so remove the check for its presence.  there is still likely to be work required for strict c89 conformance for the various bsd strings.h functions that may be in use.
@
text
@d46 1
a46 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/util/query.c,v 14.11 2007/02/20 08:19:51 brlcad Exp $ (BRL)";
d117 1
a117 1
		exit( 1 );
d170 1
a170 1
	exit(0);
@


14.11
log
@update all usages of fgets() to instead use john's swanktastic bu_fgets() that behaves as one would generally want regardless of the line ending type of the compilation platform or of the input files.  bu_fgets() responds to input files that use CR (usually old mac), LF (usually unix, new mac), or CR/LF (usually windows) for the line ending so now these file do too effectivley squashing buggish/bad behavior.
@
text
@d46 1
a46 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/util/query.c,v 14.10 2007/01/23 01:13:57 brlcad Exp $ (BRL)";
a50 5
#ifdef HAVE_UNISTD_H
# include <unistd.h>
#endif


a52 1
#ifdef HAVE_STRING_H
a53 3
#else
#include <strings.h>
#endif
d57 4
@


14.10
log
@Sweeping license updates.  Documentation is fully relicensed to the BSD Documentation License (a minor variant of the FreeBSD Documentation License and BSD License).  All GPL code (mostly application code) is converted to the LGPL and now also specifically declares version 2.1, revoking the blank check to the FSF.  The intent of these sweeping changes are to simplify the licensing terms and increase overall flexibility of use, both externally (to users for their purposes) and internally (to allow application code to be migrated to libraries without creating GPL libraries).  As a collective work, BRL-CAD is now LGPL.
@
text
@d46 1
a46 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/util/query.c,v 14.9 2007/01/20 14:37:07 brlcad Exp $ (BRL)";
d147 1
a147 1
		flag = fgets(line, 80, stdin);
@


14.9
log
@update copyright to 2007
@
text
@d8 2
a9 3
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation; either version 2 of the
 * License, or (at your option) any later version.
d14 1
a14 1
 * General Public License for more details.
d16 2
a17 2
 * You should have received a copy of the GNU General Public License
 * along with this file; see the file named COPYING for more
d46 1
a46 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/util/query.c,v 14.8 2006/01/18 06:46:28 brlcad Exp $ (BRL)";
@


14.8
log
@update copyright to 2006
@
text
@d4 1
a4 1
 * Copyright (c) 2004-2006 United States Government as represented by
d47 1
a47 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/util/query.c,v 14.7 2005/10/23 04:44:39 brlcad Exp $ (BRL)";
@


14.7
log
@trailing ws
@
text
@d4 1
a4 1
 * Copyright (C) 2004-2005 United States Government as represented by
d47 1
a47 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/util/query.c,v 14.6 2005/09/22 00:21:51 brlcad Exp $ (BRL)";
@


14.6
log
@add bu.h for bu_getopt stuff
@
text
@d47 1
a47 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/util/query.c,v 14.5 2005/09/21 19:05:37 brlcad Exp $ (BRL)";
d55 1
a55 1
                                                                                                                                                                            
d133 1
a133 1
				(void) fprintf(stderr, 
d141 1
a141 1
		
@


14.5
log
@needs bu.h for bu_getopt
@
text
@d47 1
a47 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/util/query.c,v 14.4 2005/06/30 00:08:37 erikgreenwald Exp $ (BRL)";
d68 2
@


14.4
log
@added missing includes
@
text
@d47 1
a47 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/util/query.c,v 14.3 2005/01/30 20:31:34 brlcad Exp $ (BRL)";
d84 1
a84 1
	while ( (c = getopt( argc, argv, "t:r:vl" )) != EOF )  {
d87 1
a87 1
			Timeout = atoi(optarg);
d90 1
a90 1
			Response = optarg;
@


14.4.6.1
log
@merge changes from HEAD aka rel-7-6-4 to the rel-7-6-branch just in case someone peeks a gander or tries to continue/build the branch
@
text
@d47 1
a47 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
d55 1
a55 1

a67 2
#include "bu.h"

d84 1
a84 1
	while ( (c = bu_getopt( argc, argv, "t:r:vl" )) != EOF )  {
d87 1
a87 1
			Timeout = atoi(bu_optarg);
d90 1
a90 1
			Response = bu_optarg;
d131 1
a131 1
				(void) fprintf(stderr,
d139 1
a139 1

@


14.3
log
@update copyright to 2005
@
text
@d47 1
a47 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/util/query.c,v 14.2 2004/12/21 03:45:41 butler Exp $ (BRL)";
d58 1
@


14.2
log
@GPL license changes
@
text
@d4 2
a5 2
 * Copyright (c) 2004 United States Government as represented by the
 * U.S. Army Research Laboratory.
d47 1
a47 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/util/query.c,v 14.1 2004/11/16 19:42:32 morrison Exp $ (BRL)";
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d1 21
a21 2
/*
 *			Q U E R Y . C
d47 1
a47 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/util/query.c,v 1.5 2004/08/02 23:01:53 morrison Exp $ (BRL)";
@


1.5
log
@replace the wrapped config.h block with common.h
@
text
@d28 1
a28 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/util/query.c,v 1.4 2004/06/09 20:10:55 erikg Exp $ (BRL)";
d161 10
@


1.4
log
@fixing warnings
@
text
@d28 1
a28 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/util/query.c,v 1.3 2004/06/09 18:21:39 erikg Exp $ (BRL)";
d31 1
a31 3
#ifdef HAVE_CONFIG_H
# include "config.h"
#endif
@


1.3
log
@include unistd.h for getopt stuff
@
text
@d28 1
a28 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/util/query.c,v 1.2 2004/06/08 22:04:46 morrison Exp $ (BRL)";
d91 2
a92 1
void handler(void);
d159 1
a159 1
handler(void)
@


1.2
log
@obliterate externs.h
@
text
@d28 1
a28 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
d34 5
@


1.1
log
@Vast reorganization begins.  Sources moved from top-level directories into src/.
@
text
@d28 1
a28 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/util/query.c,v 11.8 2004/05/10 15:30:51 erikg Exp $ (BRL)";
a34 2


a44 1
#include "externs.h"		/* For getopt */
@

