head	14.17;
access;
symbols
	rel-7-10-4:14.14
	STABLE:14.14.0.2
	rel-7-10-2:14.14
	rel-7-10-0:14.14
	rel-7-8-4:14.11
	rel-7-8-2:14.10
	rel-7-8-0:14.10
	trimnurbs-branch:14.10.0.2
	help:14.10
	temp_tag:14.7
	bobWinPort-20051223-freeze:14.4
	postmerge-20051223-bobWinPort:14.7
	premerge-20051223-bobWinPort:14.7
	rel-7-6-6:14.7
	rel-7-6-4:14.7
	rel-7-6-2:14.5
	rel-7-6-branch:14.5.0.2
	rel-7-6-0:14.5
	rel-7-4-2:14.4
	rel-7-4-branch:14.4.0.4
	bobWinPort:14.4.0.2
	rel-7-4-0:14.4
	rel-7-2-6:14.3
	rel-7-2-4:14.3
	rel-7-2-2:14.3
	rel-7-2-0:14.3
	rel-7-0-4:14.2
	rel-7-0-2:14.2
	rel-7-0-1:14.2
	opensource-post:14.2
	opensource-pre:1.4
	rel-7-0-branch:1.4.0.2
	rel-7-0:1.4;
locks; strict;
comment	@ * @;


14.17
date	2007.11.21.20.49.14;	author erikgreenwald;	state Exp;
branches;
next	14.16;

14.16
date	2007.11.21.18.55.37;	author erikgreenwald;	state Exp;
branches;
next	14.15;

14.15
date	2007.10.22.21.06.49;	author brlcad;	state Exp;
branches;
next	14.14;

14.14
date	2007.01.27.01.41.54;	author brlcad;	state Exp;
branches;
next	14.13;

14.13
date	2007.01.23.01.13.56;	author brlcad;	state Exp;
branches;
next	14.12;

14.12
date	2007.01.20.14.37.06;	author brlcad;	state Exp;
branches;
next	14.11;

14.11
date	2006.08.01.15.02.58;	author brlcad;	state Exp;
branches;
next	14.10;

14.10
date	2006.01.29.00.51.54;	author brlcad;	state Exp;
branches;
next	14.9;

14.9
date	2006.01.28.22.46.19;	author brlcad;	state Exp;
branches;
next	14.8;

14.8
date	2006.01.18.06.46.27;	author brlcad;	state Exp;
branches;
next	14.7;

14.7
date	2005.10.23.04.44.39;	author brlcad;	state Exp;
branches;
next	14.6;

14.6
date	2005.09.21.19.05.37;	author brlcad;	state Exp;
branches;
next	14.5;

14.5
date	2005.08.21.14.29.55;	author brlcad;	state Exp;
branches
	14.5.2.1;
next	14.4;

14.4
date	2005.06.30.00.08.37;	author erikgreenwald;	state Exp;
branches;
next	14.3;

14.3
date	2005.01.30.20.31.33;	author brlcad;	state Exp;
branches;
next	14.2;

14.2
date	2004.12.21.03.45.41;	author butler;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.32;	author morrison;	state Exp;
branches;
next	1.4;

1.4
date	2004.08.02.23.01.53;	author morrison;	state Exp;
branches;
next	1.3;

1.3
date	2004.06.09.18.21.39;	author erikg;	state Exp;
branches;
next	1.2;

1.2
date	2004.06.08.22.04.45;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.20.15.21.52;	author morrison;	state Exp;
branches;
next	;

14.5.2.1
date	2005.11.13.13.46.20;	author brlcad;	state Exp;
branches;
next	;


desc
@@


14.17
log
@pass bu_exit a NULL instead of an empty string
@
text
@/*                      P I X H A L V E . C
 * BRL-CAD
 *
 * Copyright (c) 1995-2007 United States Government as represented by
 * the U.S. Army Research Laboratory.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * version 2.1 as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this file; see the file named COPYING for more
 * information.
 */
/** @@file pixhalve.c
 *
 *  Reduce the resolution of a .pix file by one half in each direction,
 *  using a 5x5 pyramid filter.
 *
 *  As this tool is used primarily for preparing images for NTSC television,
 *  convert RGB to YUV, then apply different filter kernels;  use 3x3 for Y,
 *  5x5 for U and V.
 *
 *  Author -
 *	Michael John Muuss
 *
 *  Source -
 *	The U. S. Army Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5068  USA
 */
#ifndef lint
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/util/pixhalve.c,v 14.16 2007/11/21 18:55:37 erikgreenwald Exp $ (ARL)";
#endif

#include "common.h"

#include <stdio.h>
#include <stdlib.h>
#ifdef HAVE_UNISTD_H
#  include <unistd.h>
#endif

#include "machine.h"
#include "bu.h"
#include "vmath.h"
#include "bn.h"


static char	*file_name;
static FILE	*infp;

static int	fileinput = 0;		/* file or pipe on input? */
static int	autosize = 0;		/* !0 to autosize input */

static long int	file_width = 512L;	/* default input width */

static char usage[] = "\
Usage: pixhalve [-h] [-a]\n\
	[-s squaresize] [-w file_width] [-n file_height] [file.pix]\n";

void separate(register int *rop, register int *gop, register int *bop, register unsigned char *cp, long int num);
void combine(register unsigned char *cp, register int *rip, register int *gip, register int *bip, long int num);
void ripple(int **array, int num);
void filter3(int *op, int **lines, int num);
void filter5(int *op, int **lines, int num);

int
get_args(int argc, register char **argv)
{
	register int c;

	while ( (c = bu_getopt( argc, argv, "ahs:w:n:" )) != EOF )  {
		switch( c )  {
		case 'a':
			autosize = 1;
			break;
		case 'h':
			/* high-res */
			file_width = 1024L;
			autosize = 0;
			break;
		case 's':
			/* square file size */
			file_width = atol(bu_optarg);
			autosize = 0;
			break;
		case 'w':
			file_width = atol(bu_optarg);
			autosize = 0;
			break;
		case 'n':
			autosize = 0;
			break;

		default:		/* '?' */
			return(0);
		}
	}

	if( bu_optind >= argc )  {
		if( isatty(fileno(stdin)) )
			return(0);
		file_name = "-";
		infp = stdin;
	} else {
		file_name = argv[bu_optind];
		if( (infp = fopen(file_name, "r")) == NULL )  {
			perror(file_name);
			(void)fprintf( stderr,
				"pixhalve: cannot open \"%s\" for reading\n",
				file_name );
			return(0);
		}
		fileinput++;
	}

	if ( argc > ++bu_optind )
		(void)fprintf( stderr, "pixhalve: excess argument(s) ignored\n" );

	return(1);		/* OK */
}

int	*rlines[5];
int	*glines[5];
int	*blines[5];

/*
 *			M A I N
 */
int
main(int argc, char **argv)
{
	unsigned char	*inbuf;
	unsigned char	*outbuf;
	int	*rout, *gout, *bout;
	long int	out_width;
	long int	i;
	int	eof_seen;

	if ( !get_args( argc, argv ) )  {
		(void)fputs(usage, stderr);
		bu_exit ( 1, NULL );
	}

	/* autosize input? */
	if( fileinput && autosize ) {
		unsigned long int	w, h;
		if( fb_common_file_size(&w, &h, file_name, 3) ) {
			file_width = (long)w;
		} else {
			fprintf(stderr, "pixhalve: unable to autosize\n");
		}
	}
	out_width = file_width/2;

	/* Allocate 1-scanline input & output buffers */
	inbuf = malloc( 3*file_width+8 );
	outbuf = malloc( 3*(out_width+2)+8 );

	/* Allocate 5 integer arrays for each color */
	/* each width+2 elements wide */
	for( i=0; i<5; i++ )  {
		rlines[i] = (int *)bu_calloc( (file_width+4)+1, sizeof(long), "rlines" );
		glines[i] = (int *)bu_calloc( (file_width+4)+1, sizeof(long), "glines" );
		blines[i] = (int *)bu_calloc( (file_width+4)+1, sizeof(long), "blines" );
	}

	/* Allocate an integer array for each color, for output */
	rout = (int *)bu_malloc( out_width * sizeof(long) + 8, "rout" );
	gout = (int *)bu_malloc( out_width * sizeof(long) + 8, "gout" );
	bout = (int *)bu_malloc( out_width * sizeof(long) + 8, "bout" );

	/*
	 *  Prime the pumps with 5 lines of image.
	 *  Repeat the bottom most line three times to generate a "fill"
	 *  line on the bottom.  This will have to be matched on the top.
	 */
	if( fread( inbuf, 3, file_width, infp ) != file_width )  {
		perror(file_name);
		fprintf(stderr, "pixhalve:  fread error\n");
		bu_exit (1, NULL);
	}
	separate( &rlines[0][2], &glines[0][2], &blines[0][2], inbuf, file_width );
	separate( &rlines[1][2], &glines[1][2], &blines[1][2], inbuf, file_width );
	separate( &rlines[2][2], &glines[2][2], &blines[2][2], inbuf, file_width );
	for( i=3; i<5; i++ )  {
		if( fread( inbuf, 3, file_width, infp ) != file_width )  {
			perror(file_name);
			fprintf(stderr, "pixhalve:  fread error\n");
			bu_exit (1, NULL);
		}
		separate( &rlines[i][2], &glines[i][2], &blines[i][2],
			inbuf, file_width );
	}

	eof_seen = 0;
	for(;;)  {
		filter3( rout, rlines, out_width );
		filter5( gout, glines, out_width );
		filter5( bout, blines, out_width );
		combine( outbuf, rout, gout, bout, out_width );
		if( fwrite( (void*)outbuf, 3, out_width, stdout ) != out_width )  {
			perror("stdout");
			bu_exit (2, NULL);
		}

		/* Ripple down two scanlines, and acquire two more */
		if( fread( inbuf, 3, file_width, infp ) != file_width )  {
			if( eof_seen >= 2 )  break;
			/* EOF, repeat last line 2x for final output line */
			eof_seen++;
			/* Fall through */
		}
		ripple( rlines, 5 );
		ripple( glines, 5 );
		ripple( blines, 5 );
		separate( &rlines[4][2], &glines[4][2], &blines[4][2],
			inbuf, file_width );

		if( fread( inbuf, 3, file_width, infp ) != file_width )  {
			if( eof_seen >= 2 )  break;
			/* EOF, repeat last line 2x for final output line */
			eof_seen++;
			/* Fall through */
		}
		ripple( rlines, 5 );
		ripple( glines, 5 );
		ripple( blines, 5 );
		separate( &rlines[4][2], &glines[4][2], &blines[4][2],
			inbuf, file_width );
	}

	bu_free(rlines, "rlines");
	bu_free(glines, "glines");
	bu_free(blines, "blines");
	bu_free(rout, "rout");
	bu_free(gout, "gout");
	bu_free(bout, "bout");
}

/*
 *			S E P A R A T E
 *
 *  Unpack RGB byte tripples into three separate arrays of integers.
 *  The first and last pixels are replicated twice, to handle border effects.
 *
 *  Updated version:  the outputs are Y U V values, not R G B.
 */
void
separate(register int *rop, register int *gop, register int *bop, register unsigned char *cp, long int num)
					/* Y */
					/* U */
					/* V */


{
	register long int 	i;
	register int	r, g, b;

	r = cp[0];
	g = cp[1];
	b = cp[2];

#define YCONV(_r, _g, _b)	(_r * 0.299 + _g * 0.587 + _b * 0.144 + 0.9)
#define UCONV(_r, _g, _b)	(_r * -0.1686 + _g * -0.3311 + _b * 0.4997 + 0.9)
#define VCONV(_r, _g, _b)	(_r * 0.4998 + _g * -0.4185 + _b * -0.0813 + 0.9)

	rop[-1] = rop[-2] = YCONV(r,g,b);
	gop[-1] = gop[-2] = UCONV(r,g,b);
	bop[-1] = bop[-2] = VCONV(r,g,b);

	for( i = num-1; i >= 0; i-- )  {
		r = cp[0];
		g = cp[1];
		b = cp[2];
		cp += 3;
		*rop++ = YCONV(r,g,b);
		*gop++ = UCONV(r,g,b);
		*bop++ = VCONV(r,g,b);
	}

	r = cp[-3];
	g = cp[-2];
	b = cp[-1];

	*rop++ = YCONV(r,g,b);
	*gop++ = UCONV(r,g,b);
	*bop++ = VCONV(r,g,b);

	*rop++ = YCONV(r,g,b);
	*gop++ = UCONV(r,g,b);
	*bop++ = VCONV(r,g,b);
}

/*
 *			C O M B I N E
 *
 *  Combine three separate arrays of integers into a buffer of
 *  RGB byte tripples
 */
void
combine(register unsigned char *cp, register int *rip, register int *gip, register int *bip, long int num)
{
	register long int 	i;

#define RCONV(_y, _u, _v)	(_y + 1.4026 * _v)
#define GCONV(_y, _u, _v)	(_y - 0.3444 * _u - 0.7144 * _v)
#define BCONV(_y, _u, _v)	(_y + 1.7730 * _u)

#define CLIP(_v)	( ((_v) <= 0) ? 0 : (((_v) >= 255) ? 255 : (_v)) )

	for( i = num-1; i >= 0; i-- )  {
		register int	y, u, v;
		register int	r, g, b;

		y = *rip++;
		u = *gip++;
		v = *bip++;

		r = RCONV(y,u,v);
		g = GCONV(y,u,v);
		b = BCONV(y,u,v);

		*cp++ = CLIP(r);
		*cp++ = CLIP(g);
		*cp++ = CLIP(b);
	}
}

/*
 *			R I P P L E
 *
 *  Ripple all the scanlines down by one.
 *
 *  Barrel shift all the pointers down, with [0] going back to the top.
 */
void
ripple(int **array, int num)
{
	register int	i;
	int		*temp;

	temp = array[0];
	for( i=0; i < num-1; i++ )
		array[i] = array[i+1];
	array[num-1] = temp;
}

/*
 *			F I L T E R 5
 *
 *  Apply a 5x5 image pyramid to the input scanline, taking every other
 *  input position to make an output.
 *
 *  Code is arranged so as to vectorize, on machines that can.
 */
void
filter5(int *op, int **lines, int num)
{
	register int	i;
	register int	*a, *b, *c, *d, *e;

	a = lines[0];
	b = lines[1];
	c = lines[2];
	d = lines[3];
	e = lines[4];

#ifdef VECTORIZE
	/* This version vectorizes */
	for( i=0; i < num; i++ )  {
		j = i*2;
		op[i] = (
			  a[j+0] + 2*a[j+1] + 4*a[j+2] + 2*a[j+3] +   a[j+4] +
			2*b[j+0] + 4*b[j+1] + 8*b[j+2] + 4*b[j+3] + 2*b[j+4] +
			4*c[j+0] + 8*c[j+1] +16*c[j+2] + 8*c[j+3] + 4*c[j+4] +
			2*d[j+0] + 4*d[j+1] + 8*d[j+2] + 4*d[j+3] + 2*d[j+4] +
			  e[j+0] + 2*e[j+1] + 4*e[j+2] + 2*e[j+3] +   e[j+4]
			) / 100;
	}
#else
	/* This version is better for non-vectorizing machines */
	for( i=0; i < num; i++ )  {
		op[i] = (
			  a[0] + 2*a[1] + 4*a[2] + 2*a[3] +   a[4] +
			2*b[0] + 4*b[1] + 8*b[2] + 4*b[3] + 2*b[4] +
			4*c[0] + 8*c[1] +16*c[2] + 8*c[3] + 4*c[4] +
			2*d[0] + 4*d[1] + 8*d[2] + 4*d[3] + 2*d[4] +
			  e[0] + 2*e[1] + 4*e[2] + 2*e[3] +   e[4]
			) / 100;
		a += 2;
		b += 2;
		c += 2;
		d += 2;
		e += 2;
	}
#endif
}


/*
 *			F I L T E R 3
 *
 *  Apply a 3x3 image pyramid to the input scanline, taking every other
 *  input position to make an output.
 *
 *  The filter coefficients are positioned so as to align the center
 *  of the filter with the same center used in filter5().
 */
void
filter3(int *op, int **lines, int num)
{
	register int	i;
	register int	*b, *c, *d;

	b = lines[1];
	c = lines[2];
	d = lines[3];

#ifdef VECTORIZE
	/* This version vectorizes */
	for( i=0; i < num; i++ )  {
		j = i*2;
		op[i] = (
			  b[j+1] + 2*b[j+2] +   b[j+3] +
			2*c[j+1] + 4*c[j+2] + 2*c[j+3] +
			  d[j+1] + 2*d[j+2] +   d[j+3]
			) / 16;
	}
#else
	/* This version is better for non-vectorizing machines */
	for( i=0; i < num; i++ )  {
		op[i] = (
			  b[1] + 2*b[2] +   b[3] +
			2*c[1] + 4*c[2] + 2*c[3] +
			  d[1] + 2*d[2] +   d[3]
			) / 16;
		b += 2;
		c += 2;
		d += 2;
	}
#endif
}

/*
 * Local Variables:
 * mode: C
 * tab-width: 8
 * c-basic-offset: 4
 * indent-tabs-mode: t
 * End:
 * ex: shiftwidth=4 tabstop=8
 */
@


14.16
log
@exit->bu_exit where applicable
@
text
@d37 1
a37 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/util/pixhalve.c,v 14.15 2007/10/22 21:06:49 brlcad Exp $ (ARL)";
d147 1
a147 1
		bu_exit ( 1, "" );
d186 1
a186 1
		bu_exit (1, "");
d195 1
a195 1
			bu_exit (1, "");
d209 1
a209 1
			bu_exit (2, "");
@


14.15
log
@removed the non-ansi/stc compliant noalias.h and noalias-prag.h headers that were used with the cray (and alliant) to make pragma decls before loops.  made obsolete long ago with the move to ansi compliance.
@
text
@d37 1
a37 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/util/pixhalve.c,v 14.14 2007/01/27 01:41:54 brlcad Exp $ (ARL)";
d147 1
a147 1
		exit( 1 );
d186 1
a186 1
		exit(1);
d195 1
a195 1
			exit(1);
d209 1
a209 1
			exit(2);
@


14.14
log
@ws. lots and lots of ws.  see sh/ws.sh for details (cases 'abcdeg').
@
text
@d37 1
a37 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/util/pixhalve.c,v 14.13 2007/01/23 01:13:56 brlcad Exp $ (ARL)";
a375 1
#	include "noalias.h"
a426 1
#	include "noalias.h"
@


14.13
log
@Sweeping license updates.  Documentation is fully relicensed to the BSD Documentation License (a minor variant of the FreeBSD Documentation License and BSD License).  All GPL code (mostly application code) is converted to the LGPL and now also specifically declares version 2.1, revoking the blank check to the FSF.  The intent of these sweeping changes are to simplify the licensing terms and increase overall flexibility of use, both externally (to users for their purposes) and internally (to allow application code to be migrated to libraries without creating GPL libraries).  As a collective work, BRL-CAD is now LGPL.
@
text
@d37 1
a37 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/util/pixhalve.c,v 14.12 2007/01/20 14:37:06 brlcad Exp $ (ARL)";
d256 3
a258 3
            	     			/* Y */
            	     			/* U */
            	     			/* V */
@


14.12
log
@update copyright to 2007
@
text
@d8 2
a9 3
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation; either version 2 of the
 * License, or (at your option) any later version.
d14 1
a14 1
 * General Public License for more details.
d16 2
a17 2
 * You should have received a copy of the GNU General Public License
 * along with this file; see the file named COPYING for more
d37 1
a37 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/util/pixhalve.c,v 14.11 2006/08/01 15:02:58 brlcad Exp $ (ARL)";
@


14.11
log
@refactor the three asize.c implementations (libbn, libfb, & canon) into just one.  libbn had the most comprehensive and updated version, but the logic belongs in libfb.  so, the bn_common autosizing functions are now consolidated to libfb, refactoring accordingly.
@
text
@d4 1
a4 1
 * Copyright (c) 1995-2006 United States Government as represented by
d38 1
a38 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/util/pixhalve.c,v 14.10 2006/01/29 00:51:54 brlcad Exp $ (ARL)";
@


14.10
log
@more libbu memory management and header cleanup
@
text
@d38 1
a38 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/util/pixhalve.c,v 14.9 2006/01/28 22:46:19 brlcad Exp $ (ARL)";
d154 1
a154 1
		if( bn_common_file_size(&w, &h, file_name, 3) ) {
@


14.9
log
@header cleanup, include stdlib.h for atol(). fixes some 64-bitness
@
text
@d38 1
a38 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/util/pixhalve.c,v 14.8 2006/01/18 06:46:27 brlcad Exp $ (ARL)";
d169 3
a171 3
		rlines[i] = (int *)calloc( (file_width+4)+1, sizeof(long) );
		glines[i] = (int *)calloc( (file_width+4)+1, sizeof(long) );
		blines[i] = (int *)calloc( (file_width+4)+1, sizeof(long) );
d175 3
a177 3
	rout = (int *)malloc( out_width * sizeof(long) + 8 );
	gout = (int *)malloc( out_width * sizeof(long) + 8 );
	bout = (int *)malloc( out_width * sizeof(long) + 8 );
d238 7
a244 1
	exit(0);
@


14.8
log
@update copyright to 2006
@
text
@d38 1
a38 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/util/pixhalve.c,v 14.7 2005/10/23 04:44:39 brlcad Exp $ (ARL)";
d43 2
a47 2
#include <stdio.h>
#include <stdlib.h>
@


14.7
log
@trailing ws
@
text
@d4 1
a4 1
 * Copyright (C) 1995-2005 United States Government as represented by
d38 1
a38 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/util/pixhalve.c,v 14.6 2005/09/21 19:05:37 brlcad Exp $ (ARL)";
@


14.6
log
@needs bu.h for bu_getopt
@
text
@d32 1
a32 1
 *  
d38 1
a38 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/util/pixhalve.c,v 14.5 2005/08/21 14:29:55 brlcad Exp $ (ARL)";
d254 2
a255 2
                      	    
   		    
@


14.5
log
@convert image dimensions to long ints to support larger image sizes.  quell other various const warnings too.
@
text
@d38 1
a38 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/util/pixhalve.c,v 14.4 2005/06/30 00:08:37 erikgreenwald Exp $ (ARL)";
d78 1
a78 1
	while ( (c = getopt( argc, argv, "ahs:w:n:" )) != EOF )  {
d90 1
a90 1
			file_width = atol(optarg);
d94 1
a94 1
			file_width = atol(optarg);
d106 1
a106 1
	if( optind >= argc )  {
d112 1
a112 1
		file_name = argv[optind];
d123 1
a123 1
	if ( argc > ++optind )
@


14.5.2.1
log
@merge changes from HEAD aka rel-7-6-4 to the rel-7-6-branch just in case someone peeks a gander or tries to continue/build the branch
@
text
@d32 1
a32 1
 *
d38 1
a38 1
static const char RCSid[] = "@@(#)$Header$ (ARL)";
d78 1
a78 1
	while ( (c = bu_getopt( argc, argv, "ahs:w:n:" )) != EOF )  {
d90 1
a90 1
			file_width = atol(bu_optarg);
d94 1
a94 1
			file_width = atol(bu_optarg);
d106 1
a106 1
	if( bu_optind >= argc )  {
d112 1
a112 1
		file_name = argv[bu_optind];
d123 1
a123 1
	if ( argc > ++bu_optind )
d254 2
a255 2


@


14.4
log
@added missing includes
@
text
@d38 1
a38 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/util/pixhalve.c,v 14.3 2005/01/30 20:31:33 brlcad Exp $ (ARL)";
d44 1
a44 1
# include <unistd.h>
a45 2
                                                                                                                                                                            

d50 4
a53 3
#include <bu.h>
#include <vmath.h>
#include <bn.h>
d61 1
a61 1
static int	file_width = 512;	/* default input width */
d67 2
a68 2
void separate(register int *rop, register int *gop, register int *bop, register unsigned char *cp, int num);
void combine(register unsigned char *cp, register int *rip, register int *gip, register int *bip, int num);
d85 1
a85 1
			file_width = 1024;
d90 1
a90 1
			file_width = atoi(optarg);
d94 1
a94 1
			file_width = atoi(optarg);
d139 2
a140 2
	char	*inbuf;
	char	*outbuf;
d142 2
a143 2
	int	out_width;
	int	i;
d153 1
a153 1
		int	w, h;
d155 1
a155 1
			file_width = w;
d208 1
a208 1
		if( fwrite( outbuf, 3, out_width, stdout ) != out_width )  {
d250 1
a250 1
separate(register int *rop, register int *gop, register int *bop, register unsigned char *cp, int num)
d257 1
a257 1
	register int 	i;
d302 1
a302 1
combine(register unsigned char *cp, register int *rip, register int *gip, register int *bip, int num)
d304 1
a304 1
	register int 	i;
@


14.3
log
@update copyright to 2005
@
text
@d38 1
a38 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/util/pixhalve.c,v 14.2 2004/12/21 03:45:41 butler Exp $ (ARL)";
d49 1
@


14.2
log
@GPL license changes
@
text
@d4 1
a4 1
 * Copyright (c) 1995-2004 United States Government as represented by
d38 1
a38 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/util/pixhalve.c,v 14.1 2004/11/16 19:42:32 morrison Exp $ (ARL)";
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d1 21
a21 2
/*
 *			P I X H A L V E . C
a35 9
 *  
 *  Distribution Notice -
 *	Re-distribution of this software is restricted, as described in
 *	your "Statement of Terms and Conditions for the Release of
 *	The BRL-CAD Package" agreement.
 *
 *  Copyright Notice -
 *	This software is Copyright (C) 1995-2004 by the United States Army
 *	in all countries except the USA.  All rights reserved.
d38 1
a38 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/util/pixhalve.c,v 1.4 2004/08/02 23:01:53 morrison Exp $ (ARL)";
@


1.4
log
@replace the wrapped config.h block with common.h
@
text
@d28 1
a28 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/util/pixhalve.c,v 1.3 2004/06/09 18:21:39 erikg Exp $ (ARL)";
d436 10
@


1.3
log
@include unistd.h for getopt stuff
@
text
@d28 1
a28 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/util/pixhalve.c,v 1.2 2004/06/08 22:04:45 morrison Exp $ (ARL)";
d31 1
a31 3
#ifdef HAVE_CONFIG_H
# include "config.h"
#endif
@


1.2
log
@obliterate externs.h
@
text
@d28 1
a28 1
static const char RCSid[] = "@@(#)$Header$ (ARL)";
d34 5
@


1.1
log
@Vast reorganization begins.  Sources moved from top-level directories into src/.
@
text
@d28 1
a28 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/util/pixhalve.c,v 11.14 2004/05/10 15:30:51 erikg Exp $ (ARL)";
a34 2


a40 1
#include "externs.h"		/* For getopt, etc */
@

