head	14.14;
access;
symbols
	rel-7-10-4:14.12
	STABLE:14.12.0.2
	rel-7-10-2:14.12
	rel-7-10-0:14.11
	rel-7-8-4:14.8
	rel-7-8-2:14.8
	rel-7-8-0:14.8
	trimnurbs-branch:14.8.0.2
	help:14.8
	temp_tag:14.6
	bobWinPort-20051223-freeze:14.3
	postmerge-20051223-bobWinPort:14.6
	premerge-20051223-bobWinPort:14.6
	rel-7-6-6:14.6
	rel-7-6-4:14.6
	rel-7-6-2:14.3
	rel-7-6-branch:14.3.0.6
	rel-7-6-0:14.3
	rel-7-4-2:14.3
	rel-7-4-branch:14.3.0.4
	bobWinPort:14.3.0.2
	rel-7-4-0:14.3
	rel-7-2-6:14.3
	rel-7-2-4:14.3
	rel-7-2-2:14.3
	rel-7-2-0:14.3
	rel-7-0-4:14.2
	rel-7-0-2:14.2
	rel-7-0-1:14.2
	opensource-post:14.2
	opensource-pre:1.5
	rel-7-0-branch:1.5.0.2
	rel-7-0:1.5;
locks; strict;
comment	@ * @;


14.14
date	2007.11.21.20.49.11;	author erikgreenwald;	state Exp;
branches;
next	14.13;

14.13
date	2007.11.21.18.55.37;	author erikgreenwald;	state Exp;
branches;
next	14.12;

14.12
date	2007.07.26.01.13.59;	author brlcad;	state Exp;
branches;
next	14.11;

14.11
date	2007.01.27.01.41.53;	author brlcad;	state Exp;
branches;
next	14.10;

14.10
date	2007.01.23.01.13.52;	author brlcad;	state Exp;
branches;
next	14.9;

14.9
date	2007.01.20.14.37.05;	author brlcad;	state Exp;
branches;
next	14.8;

14.8
date	2006.01.28.00.36.30;	author brlcad;	state Exp;
branches;
next	14.7;

14.7
date	2006.01.18.06.46.27;	author brlcad;	state Exp;
branches;
next	14.6;

14.6
date	2005.10.23.04.44.39;	author brlcad;	state Exp;
branches;
next	14.5;

14.5
date	2005.09.22.00.21.51;	author brlcad;	state Exp;
branches;
next	14.4;

14.4
date	2005.09.21.19.05.37;	author brlcad;	state Exp;
branches;
next	14.3;

14.3
date	2005.01.30.20.31.32;	author brlcad;	state Exp;
branches
	14.3.6.1;
next	14.2;

14.2
date	2004.12.21.03.45.40;	author butler;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.32;	author morrison;	state Exp;
branches;
next	1.5;

1.5
date	2004.10.14.23.34.04;	author butler;	state Exp;
branches;
next	1.4;

1.4
date	2004.08.02.23.01.53;	author morrison;	state Exp;
branches;
next	1.3;

1.3
date	2004.06.09.18.21.39;	author erikg;	state Exp;
branches;
next	1.2;

1.2
date	2004.06.08.22.04.42;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.20.15.21.41;	author morrison;	state Exp;
branches;
next	;

14.3.6.1
date	2005.11.13.13.46.20;	author brlcad;	state Exp;
branches;
next	;


desc
@@


14.14
log
@pass bu_exit a NULL instead of an empty string
@
text
@/*                         B W - P S . C
 * BRL-CAD
 *
 * Copyright (c) 1986-2007 United States Government as represented by
 * the U.S. Army Research Laboratory.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * version 2.1 as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this file; see the file named COPYING for more
 * information.
 */
/** @@file bw-ps.c
 *
 *  Convert a black and white (bw) file to an 8-bit PostScript image.
 *
 *  Author -
 *	Phillip Dykstra
 *
 */
#ifndef lint
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/util/bw-ps.c,v 14.13 2007/11/21 18:55:37 erikgreenwald Exp $ (BRL)";
#endif

#include "common.h"

#include <stdlib.h> /* for atof() */
#include <stdio.h>
#include <math.h>
#ifdef HAVE_UNISTD_H
#  include <unistd.h>
#endif
#include <time.h>	/* for ctime() */

#include "machine.h"
#include "bu.h"

#define	DEFAULT_SIZE	6.75		/* default output size in inches */
#define	MAX_BYTES	(64*128)	/* max bytes per image chunk */

static int	encapsulated = 0;	/* encapsulated postscript */
static int	center = 0;		/* center output on 8.5 x 11 page */
static int	landscape = 0;		/* landscape mode */

static int	width = 512;		/* input size in pixels */
static int	height = 512;
static double	outwidth;		/* output image size in inches */
static double	outheight;
static int	xpoints;		/* output image size in points */
static int	ypoints;
static int	pagewidth = 612;	/* page size in points - 8.5 inches */
static int	pageheight = 792;	/* 11 inches */

static char	*file_name;
static FILE	*infp;

void prolog(FILE *fp, char *name, int width, int height);
void postlog(FILE *fp);

static char usage[] = "\
Usage: bw-ps [-e] [-c] [-L] [-h]\n\
	[-s input_squaresize] [-w input_width] [-n input_height]\n\
	[-S inches_square] [-W inches_width] [-N inches_height] [file.bw]\n";

int
get_args(int argc, register char **argv)
{
	register int c;

	while ( (c = bu_getopt( argc, argv, "ehcLs:w:n:S:W:N:" )) != EOF )  {
		switch( c )  {
		case 'e':
			/* Encapsulated PostScript */
			encapsulated++;
			break;
		case 'h':
			/* high-res */
			height = width = 1024;
			break;
		case 'c':
			center = 1;
			break;
		case 'L':
			landscape = 1;
			break;
		case 's':
			/* square file size */
			height = width = atoi(bu_optarg);
			break;
		case 'w':
			width = atoi(bu_optarg);
			break;
		case 'n':
			height = atoi(bu_optarg);
			break;
		case 'S':
			/* square file size */
			outheight = outwidth = atof(bu_optarg);
			break;
		case 'W':
			outwidth = atof(bu_optarg);
			break;
		case 'N':
			outheight = atof(bu_optarg);
			break;

		default:		/* '?' */
			return(0);
		}
	}

	if( bu_optind >= argc )  {
		if( isatty(fileno(stdin)) )
			return(0);
		file_name = "[stdin]";
		infp = stdin;
	} else {
		file_name = argv[bu_optind];
		if( (infp = fopen(file_name, "r")) == NULL )  {
			(void)fprintf( stderr,
				"bw-ps: cannot open \"%s\" for reading\n",
				file_name );
			return(0);
		}
		/*fileinput++;*/
	}

	if ( argc > ++bu_optind )
		(void)fprintf( stderr, "bw-ps: excess argument(s) ignored\n" );

	return(1);		/* OK */
}

int
main(int argc, char **argv)
{
	FILE	*ofp = stdout;
	int	num = 0;
	int	scans_per_patch, bytes_per_patch;
	int	y;

	outwidth = outheight = DEFAULT_SIZE;

	if ( !get_args( argc, argv ) )  {
		(void)fputs(usage, stderr);
		bu_exit ( 1, NULL );
	}

	if( encapsulated ) {
		xpoints = width;
		ypoints = height;
	} else {
		xpoints = outwidth * 72 + 0.5;
		ypoints = outheight * 72 + 0.5;
	}
	prolog(ofp, file_name, xpoints, ypoints);

	scans_per_patch = MAX_BYTES / width;
	if( scans_per_patch > height )
		scans_per_patch = height;
	bytes_per_patch = scans_per_patch * width;

	for( y = 0; y < height; y += scans_per_patch ) {
		/* start a patch */
		fprintf(ofp, "save\n");
		fprintf(ofp, "%d %d 8 [%d 0 0 %d 0 %d] {<\n ",
			width, scans_per_patch,		/* patch size */
			width, height,			/* total size = 1.0 */
			-y );				/* patch y origin */

		/* data */
		num = 0;
		while( num < bytes_per_patch ) {
			fprintf( ofp, "%02x", getc(infp) );
			if( (++num % 32) == 0 )
				fprintf( ofp, "\n " );
		}

		/* close this patch */
		fprintf(ofp, ">} image\n");
		fprintf(ofp, "restore\n");
	}

	postlog( ofp );
	return 0;
}

void
prolog(FILE *fp, char *name, int width, int height)


				/* in points */
{
	time_t	ltime;

	ltime = time(0);

	if( encapsulated ) {
		fputs( "%!PS-Adobe-2.0 EPSF-1.2\n", fp );
		fprintf(fp, "%%%%Title: %s\n", name );
		fputs( "%%Creator: BRL-CAD bw-ps\n", fp );
		fprintf(fp, "%%%%CreationDate: %s", ctime(&ltime) );
		fputs( "%%Pages: 0\n", fp );
	} else {
		fputs( "%!PS-Adobe-1.0\n", fp );
		fputs( "%begin(plot)\n", fp );
		fprintf(fp, "%%%%Title: %s\n", name );
		fputs( "%%Creator: BRL-CAD bw-ps\n", fp );
		fprintf(fp, "%%%%CreationDate: %s", ctime(&ltime) );
	}
	fprintf(fp, "%%%%BoundingBox: 0 0 %d %d\n", width, height );
	fputs( "%%EndComments\n\n", fp );

	if( !encapsulated && landscape ) {
		int	tmp;
		tmp = pagewidth;
		pagewidth = pageheight;
		pageheight = tmp;
		fprintf( fp, "90 rotate\n" );
		fprintf( fp, "0 -%d translate\n", pageheight );
	}
	if( !encapsulated && center ) {
		int	xtrans, ytrans;
		xtrans = (pagewidth - width)/2.0;
		ytrans = (pageheight - height)/2.0;
		fprintf( fp, "%d %d translate\n", xtrans, ytrans );
	}
	fprintf( fp, "%d %d scale\n\n", width, height );
}

void
postlog(FILE *fp)
{
	if( !encapsulated )
		fputs( "%end(plot)\n", fp );

	fputs( "\nshowpage\n", fp );
}

/*
 * Local Variables:
 * mode: C
 * tab-width: 8
 * c-basic-offset: 4
 * indent-tabs-mode: t
 * End:
 * ex: shiftwidth=4 tabstop=8
 */
@


14.13
log
@exit->bu_exit where applicable
@
text
@d29 1
a29 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/util/bw-ps.c,v 14.12 2007/07/26 01:13:59 brlcad Exp $ (BRL)";
d153 1
a153 1
		bu_exit ( 1, "" );
@


14.12
log
@remove ephemeral data like phone numbers and addresses, including the misleading 'source' statements on code that is continually evolving and receiving contributions from many many sources
@
text
@d29 1
a29 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/util/bw-ps.c,v 14.11 2007/01/27 01:41:53 brlcad Exp $ (BRL)";
d153 1
a153 1
		exit( 1 );
@


14.11
log
@ws. lots and lots of ws.  see sh/ws.sh for details (cases 'abcdeg').
@
text
@a26 4
 *  Source -
 *	SECAD/VLD Computing Consortium, Bldg 394
 *	The U. S. Army Ballistic Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5066
d29 1
a29 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/util/bw-ps.c,v 14.10 2007/01/23 01:13:52 brlcad Exp $ (BRL)";
@


14.10
log
@Sweeping license updates.  Documentation is fully relicensed to the BSD Documentation License (a minor variant of the FreeBSD Documentation License and BSD License).  All GPL code (mostly application code) is converted to the LGPL and now also specifically declares version 2.1, revoking the blank check to the FSF.  The intent of these sweeping changes are to simplify the licensing terms and increase overall flexibility of use, both externally (to users for their purposes) and internally (to allow application code to be migrated to libraries without creating GPL libraries).  As a collective work, BRL-CAD is now LGPL.
@
text
@d33 1
a33 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/util/bw-ps.c,v 14.9 2007/01/20 14:37:05 brlcad Exp $ (BRL)";
d73 2
a74 2
        [-s input_squaresize] [-w input_width] [-n input_height]\n\
        [-S inches_square] [-W inches_width] [-N inches_height] [file.bw]\n";
d203 1
a203 1
   	              		/* in points */
@


14.9
log
@update copyright to 2007
@
text
@d8 2
a9 3
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation; either version 2 of the
 * License, or (at your option) any later version.
d14 1
a14 1
 * General Public License for more details.
d16 2
a17 2
 * You should have received a copy of the GNU General Public License
 * along with this file; see the file named COPYING for more
d33 1
a33 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/util/bw-ps.c,v 14.8 2006/01/28 00:36:30 brlcad Exp $ (BRL)";
@


14.8
log
@header cleanup, atof() requires stdlib.h on altix/posix, fix 64-bitness
@
text
@d4 1
a4 1
 * Copyright (c) 1986-2006 United States Government as represented by
d34 1
a34 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/util/bw-ps.c,v 14.7 2006/01/18 06:46:27 brlcad Exp $ (BRL)";
@


14.7
log
@update copyright to 2006
@
text
@d34 1
a34 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/util/bw-ps.c,v 14.6 2005/10/23 04:44:39 brlcad Exp $ (BRL)";
d39 3
d43 1
a43 1
# include <unistd.h>
a44 7

#include <stdio.h>
#include <math.h>	/* for atof() */
#ifdef HAVE_STDLIB_H
#include <stdlib.h> /* for atof() */
#endif

@


14.6
log
@trailing ws
@
text
@d4 1
a4 1
 * Copyright (C) 1986-2005 United States Government as represented by
d34 1
a34 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/util/bw-ps.c,v 14.5 2005/09/22 00:21:51 brlcad Exp $ (BRL)";
@


14.5
log
@add bu.h for bu_getopt stuff
@
text
@d27 1
a27 1
 *  
d34 1
a34 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/util/bw-ps.c,v 14.4 2005/09/21 19:05:37 brlcad Exp $ (BRL)";
d42 1
a42 1
                                                                                                                                                                            
d206 2
a207 2
    	    
    	      
@


14.4
log
@needs bu.h for bu_getopt
@
text
@d34 1
a34 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/util/bw-ps.c,v 14.3 2005/01/30 20:31:32 brlcad Exp $ (BRL)";
d52 1
@


14.3
log
@update copyright to 2005
@
text
@d34 1
a34 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/util/bw-ps.c,v 14.2 2004/12/21 03:45:40 butler Exp $ (BRL)";
d85 1
a85 1
	while ( (c = getopt( argc, argv, "ehcLs:w:n:S:W:N:" )) != EOF )  {
d103 1
a103 1
			height = width = atoi(optarg);
d106 1
a106 1
			width = atoi(optarg);
d109 1
a109 1
			height = atoi(optarg);
d113 1
a113 1
			outheight = outwidth = atof(optarg);
d116 1
a116 1
			outwidth = atof(optarg);
d119 1
a119 1
			outheight = atof(optarg);
d127 1
a127 1
	if( optind >= argc )  {
d133 1
a133 1
		file_name = argv[optind];
d143 1
a143 1
	if ( argc > ++optind )
@


14.3.6.1
log
@merge changes from HEAD aka rel-7-6-4 to the rel-7-6-branch just in case someone peeks a gander or tries to continue/build the branch
@
text
@d27 1
a27 1
 *
d34 1
a34 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
d42 1
a42 1

a51 1
#include "bu.h"
d85 1
a85 1
	while ( (c = bu_getopt( argc, argv, "ehcLs:w:n:S:W:N:" )) != EOF )  {
d103 1
a103 1
			height = width = atoi(bu_optarg);
d106 1
a106 1
			width = atoi(bu_optarg);
d109 1
a109 1
			height = atoi(bu_optarg);
d113 1
a113 1
			outheight = outwidth = atof(bu_optarg);
d116 1
a116 1
			outwidth = atof(bu_optarg);
d119 1
a119 1
			outheight = atof(bu_optarg);
d127 1
a127 1
	if( bu_optind >= argc )  {
d133 1
a133 1
		file_name = argv[bu_optind];
d143 1
a143 1
	if ( argc > ++bu_optind )
d205 2
a206 2


@


14.2
log
@GPL license changes
@
text
@d4 1
a4 1
 * Copyright (c) 1986-2004 United States Government as represented by
d34 1
a34 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/util/bw-ps.c,v 14.1 2004/11/16 19:42:32 morrison Exp $ (BRL)";
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d1 21
a21 2
/*
 *			B W - P S . C
a31 4
 *  
 *  Copyright Notice -
 *	This software is Copyright (C) 1986-2004 by the United States Army.
 *	All rights reserved.
d34 1
a34 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/util/bw-ps.c,v 1.5 2004/10/14 23:34:04 butler Exp $ (BRL)";
@


1.5
log
@various utilities needed stdlib.h to get a declaration of atof() so I added it
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/util/bw-ps.c,v 1.4 2004/08/02 23:01:53 morrison Exp $ (BRL)";
d239 10
@


1.4
log
@replace the wrapped config.h block with common.h
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/util/bw-ps.c,v 1.3 2004/06/09 18:21:39 erikg Exp $ (BRL)";
d30 4
@


1.3
log
@include unistd.h for getopt stuff
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/util/bw-ps.c,v 1.2 2004/06/08 22:04:42 morrison Exp $ (BRL)";
d22 1
a22 3
#ifdef HAVE_CONFIG_H
# include "config.h"
#endif
@


1.2
log
@obliterate externs.h
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
d26 4
@


1.1
log
@Vast reorganization begins.  Sources moved from top-level directories into src/.
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/util/bw-ps.c,v 11.10 2004/05/10 15:30:50 erikg Exp $ (BRL)";
a25 2


a30 1
#include "externs.h"	/* For getopt */
@

