head	14.14;
access;
symbols
	rel-7-10-4:14.11
	STABLE:14.11.0.2
	rel-7-10-2:14.11
	rel-7-10-0:14.10
	rel-7-8-4:14.7
	rel-7-8-2:14.7
	rel-7-8-0:14.7
	trimnurbs-branch:14.7.0.2
	help:14.7
	temp_tag:14.6
	bobWinPort-20051223-freeze:14.3
	postmerge-20051223-bobWinPort:14.6
	premerge-20051223-bobWinPort:14.6
	rel-7-6-6:14.6
	rel-7-6-4:14.6
	rel-7-6-2:14.3
	rel-7-6-branch:14.3.0.6
	rel-7-6-0:14.3
	rel-7-4-2:14.3
	rel-7-4-branch:14.3.0.4
	bobWinPort:14.3.0.2
	rel-7-4-0:14.3
	rel-7-2-6:14.3
	rel-7-2-4:14.3
	rel-7-2-2:14.3
	rel-7-2-0:14.3
	rel-7-0-4:14.2
	rel-7-0-2:14.2
	rel-7-0-1:14.2
	opensource-post:14.2
	opensource-pre:1.6
	rel-7-0-branch:1.6.0.2
	rel-7-0:1.6;
locks; strict;
comment	@ * @;


14.14
date	2007.11.21.20.49.14;	author erikgreenwald;	state Exp;
branches;
next	14.13;

14.13
date	2007.11.21.18.55.37;	author erikgreenwald;	state Exp;
branches;
next	14.12;

14.12
date	2007.09.15.16.23.23;	author brlcad;	state Exp;
branches;
next	14.11;

14.11
date	2007.07.26.01.14.00;	author brlcad;	state Exp;
branches;
next	14.10;

14.10
date	2007.01.27.01.41.54;	author brlcad;	state Exp;
branches;
next	14.9;

14.9
date	2007.01.23.01.13.56;	author brlcad;	state Exp;
branches;
next	14.8;

14.8
date	2007.01.20.14.37.06;	author brlcad;	state Exp;
branches;
next	14.7;

14.7
date	2006.01.18.06.46.28;	author brlcad;	state Exp;
branches;
next	14.6;

14.6
date	2005.10.23.04.44.39;	author brlcad;	state Exp;
branches;
next	14.5;

14.5
date	2005.09.22.00.21.51;	author brlcad;	state Exp;
branches;
next	14.4;

14.4
date	2005.09.21.19.05.37;	author brlcad;	state Exp;
branches;
next	14.3;

14.3
date	2005.01.30.20.31.33;	author brlcad;	state Exp;
branches
	14.3.6.1;
next	14.2;

14.2
date	2004.12.21.03.45.41;	author butler;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.32;	author morrison;	state Exp;
branches;
next	1.6;

1.6
date	2004.09.09.04.53.00;	author kermit;	state Exp;
branches;
next	1.5;

1.5
date	2004.08.02.23.01.53;	author morrison;	state Exp;
branches;
next	1.4;

1.4
date	2004.06.09.20.10.55;	author erikg;	state Exp;
branches;
next	1.3;

1.3
date	2004.06.09.18.21.39;	author erikg;	state Exp;
branches;
next	1.2;

1.2
date	2004.06.08.22.04.45;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.20.15.21.53;	author morrison;	state Exp;
branches;
next	;

14.3.6.1
date	2005.11.13.13.46.20;	author brlcad;	state Exp;
branches;
next	;


desc
@@


14.14
log
@pass bu_exit a NULL instead of an empty string
@
text
@/*                      P I X M E R G E . C
 * BRL-CAD
 *
 * Copyright (c) 1986-2007 United States Government as represented by
 * the U.S. Army Research Laboratory.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * version 2.1 as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this file; see the file named COPYING for more
 * information.
 */
/** @@file pixmerge.c
 *
 *  Given two streams of data, typically pix(5) or bw(5) images,
 *  generate an output stream of the same size, where the value of
 *  the output is determined by a formula involving the first
 *  (foreground) stream and a constant, or the value of the second
 *  (background) stream.
 *
 *  This routine operates on a pixel-by-pixel basis, and thus
 *  is independent of the resolution of the image.
 *
 *  Author -
 *	Michael John Muuss
 *
 */
#ifndef lint
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/util/pixmerge.c,v 14.13 2007/11/21 18:55:37 erikgreenwald Exp $ (BRL)";
#endif

#include "common.h"

#include <stdlib.h>
#include <stdio.h>
#include <string.h>

#ifdef HAVE_UNISTD_H
#  include <unistd.h>
#endif

#include "machine.h"
#include "bu.h"


static char	*f1_name;
static char	*f2_name;
static FILE	*f1;
static FILE	*f2;

#define LT	1
#define EQ	2
#define GT	4
#define NE	8
static int	wanted;			/* LT|EQ|GT conditions to pick fb */

static int	seen_const;
static int	seen_formula;

static int	width = 3;
static unsigned char	pconst[32];

#define CHUNK	1024
static char	*b1;			/* fg input buffer */
static char	*b2;			/* bg input buffer */
static char	*b3;			/* output buffer */

static long	fg_cnt;
static long	bg_cnt;

static char usage[] = "\
Usage: pixmerge [-g -l -e -n] [-w bytes_wide] [-C r/g/b]\n\
	foreground.pix background.pix > out.pix\n";

int
get_args(int argc, register char **argv)
{
	register int c;

	while ( (c = bu_getopt( argc, argv, "glenw:C:c:" )) != EOF )  {
		switch( c )  {
		case 'g':
			wanted |= GT;
			seen_formula = 1;
			break;
		case 'l':
			wanted |= LT;
			seen_formula = 1;
			break;
		case 'e':
			wanted |= EQ;
			seen_formula = 1;
			break;
		case 'n':
			wanted |= NE;
			seen_formula = 1;
			break;
		case 'w':
			c = atoi(bu_optarg);
			if( c > 1 && c < sizeof(pconst) )
				width = c;
			break;
		case 'C':
		case 'c':	/* backword compatability */
			{
				register char *cp = bu_optarg;
				register unsigned char *conp = pconst;

				/* premature null => atoi gives zeros */
				for( c=0; c < width; c++ )  {
					*conp++ = atoi(cp);
					while( *cp && *cp++ != '/' ) ;
				}
			}
			seen_const = 1;
			break;

		default:		/* '?' */
			return(0);
		}
	}

	if( bu_optind+2 > argc )
		return(0);

	f1_name = argv[bu_optind++];
	if( strcmp( f1_name, "-" ) == 0 )
		f1 = stdin;
	else if( (f1 = fopen(f1_name, "r")) == NULL )  {
		perror(f1_name);
		(void)fprintf( stderr,
			"pixmerge: cannot open \"%s\" for reading\n",
			f1_name );
		return(0);
	}

	f2_name = argv[bu_optind++];
	if( strcmp( f2_name, "-" ) == 0 )
		f2 = stdin;
	else if( (f2 = fopen(f2_name, "r")) == NULL )  {
		perror(f2_name);
		(void)fprintf( stderr,
			"pixmerge: cannot open \"%s\" for reading\n",
			f2_name );
		return(0);
	}

	if ( argc > bu_optind )
		(void)fprintf( stderr, "pixmerge: excess argument(s) ignored\n" );

	return(1);		/* OK */
}

int
main(int argc, char **argv)
{

	if ( !get_args( argc, argv ) || isatty(fileno(stdout)) )  {
		(void)fputs(usage, stderr);
		bu_exit ( 1, NULL );
	}

	if( !seen_formula )  {
		wanted = GT;
		seen_const = 1;		/* Default is const of 0/0/0 */
	}
	fprintf(stderr, "pixmerge: Selecting foreground when fg ");
	if( wanted & LT )  putc( '<', stderr );
	if( wanted & EQ )  putc( '=', stderr );
	if( wanted & GT )  putc( '>', stderr );
	if( wanted & NE )  fprintf( stderr, "!=" );
	if( seen_const )  {
		register int i;

		putc( ' ', stderr );
		for( i = 0; i < width; i++ )  {
			fprintf( stderr, "%d", pconst[i] );
			if( i < width-1 )
				putc( '/', stderr );
		}
		putc( '\n', stderr );
	} else {
		fprintf( stderr, " bg\n" );
	}

	if( (b1 = (char *)malloc( width*CHUNK )) == (char *)0 ||
	    (b2 = (char *)malloc( width*CHUNK )) == (char *)0 ||
	    (b3 = (char *)malloc( width*CHUNK )) == (char *)0 ) {
		fprintf(stderr, "pixmerge:  malloc failure\n");
		bu_exit (3, NULL);
	}

	while(1)  {
		unsigned char	*cb1, *cb2;	/* current input buf ptrs */
		register unsigned char	*cb3; 	/* current output buf ptr */
		unsigned char	*ebuf;		/* end ptr in b1 */
		int r1, r2, len;

		r1 = fread( b1, width, CHUNK, f1 );
		r2 = fread( b2, width, CHUNK, f2 );
		len = r1;
		if( r2 < len )
			len = r2;
		if( len <= 0 )
			break;

		cb1 = (unsigned char *)b1;
		cb2 = (unsigned char *)b2;
		cb3 = (unsigned char *)b3;
		ebuf = cb1 + width*len;
		for( ; cb1 < ebuf; cb1 += width, cb2 += width )  {
			/*
			 * Stated condition must hold for all input bytes
			 * to select the foreground for output
			 */
			register unsigned char	*ap, *bp;
			register unsigned char	*ep;		/* end ptr */

			ap = cb1;
			if( seen_const )
				bp = pconst;
			else
				bp = cb2;
			if( wanted & NE )  {
				for( ep = cb1+width; ap < ep; ap++,bp++ )  {
					if( *ap != *bp )
						goto success;
				}
				goto fail;
			} else {
				for( ep = cb1+width; ap < ep; ap++,bp++ )  {
					if( *ap > *bp )  {
						if( !(GT & wanted) ) goto fail;
					} else if( *ap == *bp )  {
						if( !(EQ & wanted) ) goto fail;
					} else  {
						if( !(LT & wanted) ) goto fail;
					}
				}
			}
success:
			{
				register int i;
				ap = cb1;
				for( i=0; i<width; i++ )
					*cb3++ = *ap++;
			}
			fg_cnt++;
			continue;
fail:
			{
				register int i;
				bp = cb2;
				for( i=0; i<width; i++ )
					*cb3++ = *bp++;
			}
			bg_cnt++;
		}
		fwrite( b3, width, len, stdout );
	}
	fprintf( stderr, "pixmerge: %ld foreground, %ld background\n",
		fg_cnt, bg_cnt );
	bu_exit (0, NULL);
}

/*
 * Local Variables:
 * mode: C
 * tab-width: 8
 * c-basic-offset: 4
 * indent-tabs-mode: t
 * End:
 * ex: shiftwidth=4 tabstop=8
 */
@


14.13
log
@exit->bu_exit where applicable
@
text
@d36 1
a36 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/util/pixmerge.c,v 14.12 2007/09/15 16:23:23 brlcad Exp $ (BRL)";
d167 1
a167 1
		bu_exit ( 1, "" );
d197 1
a197 1
		bu_exit (3, "");
d270 1
a270 1
	bu_exit (0, "");
@


14.12
log
@more c89 embracing.  c89 provides string.h for all of the various str*() and mem*() functions, so remove the check for its presence.  there is still likely to be work required for strict c89 conformance for the various bsd strings.h functions that may be in use.
@
text
@d36 1
a36 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/util/pixmerge.c,v 14.11 2007/07/26 01:14:00 brlcad Exp $ (BRL)";
d167 1
a167 1
		exit( 1 );
d197 1
a197 1
		exit(3);
d270 1
a270 1
	exit(0);
@


14.11
log
@remove ephemeral data like phone numbers and addresses, including the misleading 'source' statements on code that is continually evolving and receiving contributions from many many sources
@
text
@d36 1
a36 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/util/pixmerge.c,v 14.10 2007/01/27 01:41:54 brlcad Exp $ (BRL)";
a40 4
#ifdef HAVE_UNISTD_H
# include <unistd.h>
#endif

a42 1
#ifdef HAVE_STRING_H
d44 3
a46 2
#else
#include <strings.h>
@


14.10
log
@ws. lots and lots of ws.  see sh/ws.sh for details (cases 'abcdeg').
@
text
@a33 4
 *  Source -
 *	SECAD/VLD Computing Consortium, Bldg 394
 *	The U. S. Army Ballistic Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5066
d36 1
a36 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/util/pixmerge.c,v 14.9 2007/01/23 01:13:56 brlcad Exp $ (BRL)";
@


14.9
log
@Sweeping license updates.  Documentation is fully relicensed to the BSD Documentation License (a minor variant of the FreeBSD Documentation License and BSD License).  All GPL code (mostly application code) is converted to the LGPL and now also specifically declares version 2.1, revoking the blank check to the FSF.  The intent of these sweeping changes are to simplify the licensing terms and increase overall flexibility of use, both externally (to users for their purposes) and internally (to allow application code to be migrated to libraries without creating GPL libraries).  As a collective work, BRL-CAD is now LGPL.
@
text
@d40 1
a40 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/util/pixmerge.c,v 14.8 2007/01/20 14:37:06 brlcad Exp $ (BRL)";
d204 2
a205 2
	    	fprintf(stderr, "pixmerge:  malloc failure\n");
	    	exit(3);
@


14.8
log
@update copyright to 2007
@
text
@d8 2
a9 3
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation; either version 2 of the
 * License, or (at your option) any later version.
d14 1
a14 1
 * General Public License for more details.
d16 2
a17 2
 * You should have received a copy of the GNU General Public License
 * along with this file; see the file named COPYING for more
d40 1
a40 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/util/pixmerge.c,v 14.7 2006/01/18 06:46:28 brlcad Exp $ (BRL)";
@


14.7
log
@update copyright to 2006
@
text
@d4 1
a4 1
 * Copyright (c) 1986-2006 United States Government as represented by
d41 1
a41 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/util/pixmerge.c,v 14.6 2005/10/23 04:44:39 brlcad Exp $ (BRL)";
@


14.6
log
@trailing ws
@
text
@d4 1
a4 1
 * Copyright (C) 1986-2005 United States Government as represented by
d41 1
a41 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/util/pixmerge.c,v 14.5 2005/09/22 00:21:51 brlcad Exp $ (BRL)";
@


14.5
log
@add bu.h for bu_getopt stuff
@
text
@d22 1
a22 1
 *  
d31 1
a31 1
 *  
d34 1
a34 1
 *  
d41 1
a41 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/util/pixmerge.c,v 14.4 2005/09/21 19:05:37 brlcad Exp $ (BRL)";
@


14.4
log
@needs bu.h for bu_getopt
@
text
@d41 1
a41 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/util/pixmerge.c,v 14.3 2005/01/30 20:31:33 brlcad Exp $ (BRL)";
d59 1
@


14.3
log
@update copyright to 2005
@
text
@d41 1
a41 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/util/pixmerge.c,v 14.2 2004/12/21 03:45:41 butler Exp $ (BRL)";
d95 1
a95 1
	while ( (c = getopt( argc, argv, "glenw:C:c:" )) != EOF )  {
d114 1
a114 1
			c = atoi(optarg);
d121 1
a121 1
				register char *cp = optarg;
d138 1
a138 1
	if( optind+2 > argc )
d141 1
a141 1
	f1_name = argv[optind++];
d152 1
a152 1
	f2_name = argv[optind++];
d163 1
a163 1
	if ( argc > optind )
@


14.3.6.1
log
@merge changes from HEAD aka rel-7-6-4 to the rel-7-6-branch just in case someone peeks a gander or tries to continue/build the branch
@
text
@d22 1
a22 1
 *
d31 1
a31 1
 *
d34 1
a34 1
 *
d41 1
a41 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
a58 1
#include "bu.h"
d95 1
a95 1
	while ( (c = bu_getopt( argc, argv, "glenw:C:c:" )) != EOF )  {
d114 1
a114 1
			c = atoi(bu_optarg);
d121 1
a121 1
				register char *cp = bu_optarg;
d138 1
a138 1
	if( bu_optind+2 > argc )
d141 1
a141 1
	f1_name = argv[bu_optind++];
d152 1
a152 1
	f2_name = argv[bu_optind++];
d163 1
a163 1
	if ( argc > bu_optind )
@


14.2
log
@GPL license changes
@
text
@d4 1
a4 1
 * Copyright (c) 1986-2004 United States Government as represented by
d41 1
a41 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/util/pixmerge.c,v 14.1 2004/11/16 19:42:32 morrison Exp $ (BRL)";
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d1 21
a21 2
/*
 *  			P I X M E R G E . C
a38 4
 *  
 *  Copyright Notice -
 *	This software is Copyright (C) 1986-2004 by the United States Army.
 *	All rights reserved.
d41 1
a41 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/util/pixmerge.c,v 1.6 2004/09/09 04:53:00 kermit Exp $ (BRL)";
@


1.6
log
@Added <stdlib.h> to fix implicit cast (for IA64 architecture).
@
text
@d26 1
a26 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/util/pixmerge.c,v 1.5 2004/08/02 23:01:53 morrison Exp $ (BRL)";
d265 10
@


1.5
log
@replace the wrapped config.h block with common.h
@
text
@d26 1
a26 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/util/pixmerge.c,v 1.4 2004/06/09 20:10:55 erikg Exp $ (BRL)";
a33 1
                                                                                                                                                                            
d35 1
d44 1
@


1.4
log
@fixing warnings
@
text
@d26 1
a26 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/util/pixmerge.c,v 1.3 2004/06/09 18:21:39 erikg Exp $ (BRL)";
d29 1
a29 3
#ifdef HAVE_CONFIG_H
# include "config.h"
#endif
@


1.3
log
@include unistd.h for getopt stuff
@
text
@d26 1
a26 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/util/pixmerge.c,v 1.2 2004/06/08 22:04:45 morrison Exp $ (BRL)";
d187 3
a189 3
	if( (b1 = malloc( width*CHUNK )) == (char *)0 ||
	    (b2 = malloc( width*CHUNK )) == (char *)0 ||
	    (b3 = malloc( width*CHUNK )) == (char *)0 ) {
@


1.2
log
@obliterate externs.h
@
text
@d26 1
a26 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
d32 5
@


1.1
log
@Vast reorganization begins.  Sources moved from top-level directories into src/.
@
text
@d26 1
a26 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/util/pixmerge.c,v 11.10 2004/05/10 15:30:51 erikg Exp $ (BRL)";
a32 2


a40 1
#include "externs.h"			/* For malloc and getopt */
@

