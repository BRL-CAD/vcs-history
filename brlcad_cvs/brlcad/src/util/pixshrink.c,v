head	14.17;
access;
symbols
	rel-7-10-4:14.14
	STABLE:14.14.0.2
	rel-7-10-2:14.14
	rel-7-10-0:14.13
	rel-7-8-4:14.9
	rel-7-8-2:14.9
	rel-7-8-0:14.9
	trimnurbs-branch:14.9.0.2
	help:14.9
	temp_tag:14.8
	bobWinPort-20051223-freeze:14.5
	postmerge-20051223-bobWinPort:14.8
	premerge-20051223-bobWinPort:14.8
	rel-7-6-6:14.8
	rel-7-6-4:14.8
	rel-7-6-2:14.5
	rel-7-6-branch:14.5.0.6
	rel-7-6-0:14.5
	rel-7-4-2:14.5
	rel-7-4-branch:14.5.0.4
	bobWinPort:14.5.0.2
	rel-7-4-0:14.5
	rel-7-2-6:14.5
	rel-7-2-4:14.5
	rel-7-2-2:14.5
	rel-7-2-0:14.5
	rel-7-0-4:14.4
	rel-7-0-2:14.4
	rel-7-0-1:14.4
	opensource-post:14.4
	opensource-pre:1.5
	rel-7-0-branch:1.5.0.2
	rel-7-0:1.5;
locks; strict;
comment	@ * @;


14.17
date	2007.11.21.20.49.14;	author erikgreenwald;	state Exp;
branches;
next	14.16;

14.16
date	2007.11.21.18.55.37;	author erikgreenwald;	state Exp;
branches;
next	14.15;

14.15
date	2007.09.15.16.23.23;	author brlcad;	state Exp;
branches;
next	14.14;

14.14
date	2007.07.26.01.14.00;	author brlcad;	state Exp;
branches;
next	14.13;

14.13
date	2007.02.02.08.48.30;	author brlcad;	state Exp;
branches;
next	14.12;

14.12
date	2007.01.27.01.41.54;	author brlcad;	state Exp;
branches;
next	14.11;

14.11
date	2007.01.23.01.13.56;	author brlcad;	state Exp;
branches;
next	14.10;

14.10
date	2007.01.20.14.37.07;	author brlcad;	state Exp;
branches;
next	14.9;

14.9
date	2006.01.18.06.46.28;	author brlcad;	state Exp;
branches;
next	14.8;

14.8
date	2005.10.23.04.44.39;	author brlcad;	state Exp;
branches;
next	14.7;

14.7
date	2005.09.22.00.21.51;	author brlcad;	state Exp;
branches;
next	14.6;

14.6
date	2005.09.21.19.05.37;	author brlcad;	state Exp;
branches;
next	14.5;

14.5
date	2005.01.30.20.31.33;	author brlcad;	state Exp;
branches
	14.5.6.1;
next	14.4;

14.4
date	2004.12.21.07.32.32;	author morrison;	state Exp;
branches;
next	14.3;

14.3
date	2004.12.21.07.25.31;	author morrison;	state Exp;
branches;
next	14.2;

14.2
date	2004.12.21.03.45.41;	author butler;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.32;	author morrison;	state Exp;
branches;
next	1.5;

1.5
date	2004.09.09.04.53.00;	author kermit;	state Exp;
branches;
next	1.4;

1.4
date	2004.08.02.23.01.53;	author morrison;	state Exp;
branches;
next	1.3;

1.3
date	2004.06.09.18.21.39;	author erikg;	state Exp;
branches;
next	1.2;

1.2
date	2004.06.08.22.04.46;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.20.15.21.54;	author morrison;	state Exp;
branches;
next	;

14.5.6.1
date	2005.11.13.13.46.21;	author brlcad;	state Exp;
branches;
next	;


desc
@@


14.17
log
@pass bu_exit a NULL instead of an empty string
@
text
@/*                     P I X S H R I N K . C
 * BRL-CAD
 *
 * Copyright (c) 2004-2007 United States Government as represented by
 * the U.S. Army Research Laboratory.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * version 2.1 as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this file; see the file named COPYING for more
 * information.
 */
/** @@file pixshrink.c
 *
 *	scale down a picture by a uniform factor.
 *
 *	Options
 *	h	help
 *
 *  Author -
 *	Lee A. Butler
 *
 */
#ifndef lint
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/util/pixshrink.c,v 14.16 2007/11/21 18:55:37 erikgreenwald Exp $ (BRL)";
#endif

#include "common.h"

#include <stdlib.h>
#include <stdio.h>
#include <string.h>

#ifdef HAVE_UNISTD_H
#  include <unistd.h>
#endif

#include "machine.h"
#include "bu.h"


#define UCHAR unsigned char

/* declarations to support use of bu_getopt() system call */
char *options = "uhs:w:n:f:";

char *progname = "(noname)";
char *filename = "(stdin)";

void shrink_image(int scanlen, int Width, int Height, unsigned char *buffer, int Factor), usample_image(int scanlen, int Width, int Height, unsigned char *buffer, int Factor);

/*	R E A D _ I M A G E
 *
 *	read image into memory
 */
UCHAR *read_image(int scanlen, int Width, int Height, unsigned char *buffer)
{
	int total_bytes, in_bytes;
	int	count = 0;

	if (!buffer &&
	    (buffer=(UCHAR *)malloc(scanlen * Height)) == (UCHAR *)NULL) {
		(void)fprintf(stderr, "%s: cannot allocate input buffer\n",
			progname);
		bu_exit (-1, NULL);
	}

	total_bytes = Width * Height * 3;
	in_bytes = 0;
	while (in_bytes < total_bytes &&
	    (count=read(0, (char *)&buffer[in_bytes], (unsigned)(total_bytes-in_bytes))) >= 0)
		in_bytes += count;

	if (count < 0) {
		perror(filename);
		bu_exit (-1, NULL);
	}

	return(buffer);
}

/*	W R I T E _ I M A G E
 */
void write_image(int Width, int Height, unsigned char *buffer)
{
	int	count = 0;
	int	out_bytes, total_bytes;

	total_bytes = Width * Height * 3;
	out_bytes = 0;

	while (out_bytes < total_bytes &&
	    (count=write(1, (char *)&buffer[out_bytes], total_bytes-out_bytes)) >= 0)
		out_bytes += count;

	if (count < 0) {
		perror("stdout");
		bu_exit (-1, NULL);
	}
}

/*	S H R I N K _ I M A G E
 */
void
shrink_image(int scanlen, int Width, int Height, unsigned char *buffer, int Factor)
{
	UCHAR *pixelp, *finalpixel;
	unsigned int p[3];
	int facsq, x, y, px, py;

	facsq = Factor * Factor;
	finalpixel = buffer;

	for (y=0 ; y < Height ; y += Factor)
		for (x=0 ; x < Width ; x += Factor) {

			/* average factor by factor pixels */

			for (py = 0 ; py < 3 ; ++py)
				p[py] = 0;

			for (py = 0 ; py < Factor ; py++) {

				/* get first pixel in scanline */
				pixelp = &buffer[y*scanlen+x*3];

				/* add pixels from scanline to average */
				for (px = 0 ; px < Factor ; px++) {
					p[0] += *pixelp++;
					p[1] += *pixelp++;
					p[2] += *pixelp++;
				}
			}

			/* store resultant pixel back in buffer */
			for (py = 0 ; py < 3 ; ++py)
				*finalpixel++ = p[py] / facsq;
		}
}

/*
 *	Undersample image pixels
 */
void
usample_image(int scanlen, int Width, int Height, unsigned char *buffer, int Factor)
{
	register int t, x, y;

	UCHAR *p;

	p = buffer;

	for (y=0 ; y < Height ; y += Factor)
		for (x=0 ; x < Width ; x += Factor, p += 3) {
			t = x*3 + y*scanlen;
			p[0] = buffer[t];
			p[1] = buffer[t+1];
			p[2] = buffer[t+2];
		}
}


int width = 512;
int height = 512;
int scanlen;
int factor = 2;

#define METH_BOXCAR 1
#define METH_UNDERSAMPLE 2
int method = METH_BOXCAR;

/*
 *	U S A G E --- tell user how to invoke this program, then exit
 */
void usage(void)
{
	(void) fprintf(stderr,
"Usage: %s [-u] [-h] [-w width] [-n scanlines] [-s squaresize]\n\
[-f shrink_factor] [pixfile] > pixfile\n", progname);
	bu_exit (1, NULL);
}


/*
 *	P A R S E _ A R G S --- Parse through command line flags
 */
void parse_args(int ac, char **av)
{
	int  c;

	if (!(progname = strrchr(*av, '/')))
		progname = *av;

	/* Turn off bu_getopt's error messages */
	bu_opterr = 0;

	/* get all the option flags from the command line */
	while ((c=bu_getopt(ac,av,options)) != EOF)
		switch (c) {
		case 'f'	: if ((c = atoi(bu_optarg)) > 1)
					factor = c;
				  break;
		case 'h'	: width = height = 1024; break;
		case 'n'	: if ((c=atoi(bu_optarg)) > 0)
					height = c;
				  break;
		case 'w'	: if ((c=atoi(bu_optarg)) > 0)
					width = c;
				  break;
		case 's'	: if ((c=atoi(bu_optarg)) > 0)
					height = width = c;
				  break;
		case 'u'	: method = METH_UNDERSAMPLE; break;
		case '?'	:
		default		: usage(); break;
		}

	if (bu_optind >= ac) {
		if (isatty(fileno(stdout)) )
			usage();
	}
	if (bu_optind < ac) {
		if (freopen(av[bu_optind], "r", stdin) == (FILE *)NULL) {
			perror(av[bu_optind]);
			bu_exit (-1, NULL);
		} else
			filename = av[bu_optind];
	}
	if (bu_optind+1 < ac)
		(void)fprintf(stderr, "%s: Excess arguments ignored\n", progname);

}


/*
 *	M A I N
 *
 *	Call parse_args to handle command line arguments first, then
 *	process input.
 */
int main(int ac, char **av)
{
	UCHAR *buffer = (UCHAR *)NULL;

	(void)parse_args(ac, av);
	if (isatty(fileno(stdin))) usage();

	/* process stdin */
	scanlen = width * 3;
	buffer = read_image(scanlen, width, height, buffer);

	switch (method) {
	case METH_BOXCAR : shrink_image(scanlen, width, height, buffer, factor); break;
	case METH_UNDERSAMPLE : usample_image(scanlen, width, height, buffer, factor);
				break;
	default: return(-1);
	}

	write_image(width/factor, height/factor, buffer);
	return(0);
}


/*
 * Local Variables:
 * mode: C
 * tab-width: 8
 * c-basic-offset: 4
 * indent-tabs-mode: t
 * End:
 * ex: shiftwidth=4 tabstop=8
 */
@


14.16
log
@exit->bu_exit where applicable
@
text
@d32 1
a32 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/util/pixshrink.c,v 14.15 2007/09/15 16:23:23 brlcad Exp $ (BRL)";
d72 1
a72 1
		bu_exit (-1, "");
d83 1
a83 1
		bu_exit (-1, "");
d105 1
a105 1
		bu_exit (-1, "");
d187 1
a187 1
	bu_exit (1, "");
d232 1
a232 1
			bu_exit (-1, "");
@


14.15
log
@more c89 embracing.  c89 provides string.h for all of the various str*() and mem*() functions, so remove the check for its presence.  there is still likely to be work required for strict c89 conformance for the various bsd strings.h functions that may be in use.
@
text
@d32 1
a32 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/util/pixshrink.c,v 14.14 2007/07/26 01:14:00 brlcad Exp $ (BRL)";
d72 1
a72 1
		exit(-1);
d83 1
a83 1
		exit(-1);
d105 1
a105 1
		exit(-1);
d187 1
a187 1
	exit(1);
d232 1
a232 1
			exit(-1);
@


14.14
log
@remove ephemeral data like phone numbers and addresses, including the misleading 'source' statements on code that is continually evolving and receiving contributions from many many sources
@
text
@d32 1
a32 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/util/pixshrink.c,v 14.13 2007/02/02 08:48:30 brlcad Exp $ (BRL)";
a36 4
#ifdef HAVE_UNISTD_H
# include <unistd.h>
#endif

a38 1
#ifdef HAVE_STRING_H
d40 3
a42 2
#else
#include <strings.h>
@


14.13
log
@convert all of the lingering getopt calls to bu_getopt (as well as the related getopt globals optind, opterr, optarg) -- libbu's getopt has the benefit of being re-entrant and is portable to environments where getopt() may not be available.
@
text
@a29 4
 *  Source -
 *	SECAD/VLD Computing Consortium, Bldg 394
 *	The U. S. Army Ballistic Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5066
d32 1
a32 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/util/pixshrink.c,v 14.12 2007/01/27 01:41:54 brlcad Exp $ (BRL)";
@


14.12
log
@ws. lots and lots of ws.  see sh/ws.sh for details (cases 'abcdeg').
@
text
@d36 1
a36 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/util/pixshrink.c,v 14.11 2007/01/23 01:13:56 brlcad Exp $ (BRL)";
d210 1
a210 1
	opterr = 0;
@


14.11
log
@Sweeping license updates.  Documentation is fully relicensed to the BSD Documentation License (a minor variant of the FreeBSD Documentation License and BSD License).  All GPL code (mostly application code) is converted to the LGPL and now also specifically declares version 2.1, revoking the blank check to the FSF.  The intent of these sweeping changes are to simplify the licensing terms and increase overall flexibility of use, both externally (to users for their purposes) and internally (to allow application code to be migrated to libraries without creating GPL libraries).  As a collective work, BRL-CAD is now LGPL.
@
text
@d36 1
a36 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/util/pixshrink.c,v 14.10 2007/01/20 14:37:07 brlcad Exp $ (BRL)";
a249 2


a278 1

@


14.10
log
@update copyright to 2007
@
text
@d8 2
a9 3
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation; either version 2 of the
 * License, or (at your option) any later version.
d14 1
a14 1
 * General Public License for more details.
d16 2
a17 2
 * You should have received a copy of the GNU General Public License
 * along with this file; see the file named COPYING for more
d36 1
a36 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/util/pixshrink.c,v 14.9 2006/01/18 06:46:28 brlcad Exp $ (BRL)";
@


14.9
log
@update copyright to 2006
@
text
@d4 1
a4 1
 * Copyright (c) 2004-2006 United States Government as represented by
d37 1
a37 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/util/pixshrink.c,v 14.8 2005/10/23 04:44:39 brlcad Exp $ (BRL)";
@


14.8
log
@trailing ws
@
text
@d4 1
a4 1
 * Copyright (C) 2004-2005 United States Government as represented by
d37 1
a37 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/util/pixshrink.c,v 14.7 2005/09/22 00:21:51 brlcad Exp $ (BRL)";
@


14.7
log
@add bu.h for bu_getopt stuff
@
text
@d30 1
a30 1
 *  
d37 1
a37 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/util/pixshrink.c,v 14.6 2005/09/21 19:05:37 brlcad Exp $ (BRL)";
d79 1
a79 1
		(void)fprintf(stderr, "%s: cannot allocate input buffer\n", 
d86 1
a86 1
	while (in_bytes < total_bytes && 
d104 1
a104 1
	
d150 1
a150 1
			
d209 1
a209 1
	
d229 1
a229 1
		case 'u'	: method = METH_UNDERSAMPLE; break; 
@


14.6
log
@needs bu.h for bu_getopt
@
text
@d37 1
a37 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/util/pixshrink.c,v 14.5 2005/01/30 20:31:33 brlcad Exp $ (BRL)";
d55 1
@


14.5
log
@update copyright to 2005
@
text
@d37 1
a37 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/util/pixshrink.c,v 14.4 2004/12/21 07:32:32 morrison Exp $ (BRL)";
d59 1
a59 1
/* declarations to support use of getopt() system call */
d209 1
a209 1
	/* Turn off getopt's error messages */
d213 1
a213 1
	while ((c=getopt(ac,av,options)) != EOF)
d215 1
a215 1
		case 'f'	: if ((c = atoi(optarg)) > 1)
d219 1
a219 1
		case 'n'	: if ((c=atoi(optarg)) > 0)
d222 1
a222 1
		case 'w'	: if ((c=atoi(optarg)) > 0)
d225 1
a225 1
		case 's'	: if ((c=atoi(optarg)) > 0)
d233 1
a233 1
	if (optind >= ac) {
d237 3
a239 3
	if (optind < ac) {
		if (freopen(av[optind], "r", stdin) == (FILE *)NULL) {
			perror(av[optind]);
d242 1
a242 1
			filename = av[optind];
d244 1
a244 1
	if (optind+1 < ac)
@


14.5.6.1
log
@merge changes from HEAD aka rel-7-6-4 to the rel-7-6-branch just in case someone peeks a gander or tries to continue/build the branch
@
text
@d30 1
a30 1
 *
d37 1
a37 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
a54 1
#include "bu.h"
d59 1
a59 1
/* declarations to support use of bu_getopt() system call */
d78 1
a78 1
		(void)fprintf(stderr, "%s: cannot allocate input buffer\n",
d85 1
a85 1
	while (in_bytes < total_bytes &&
d103 1
a103 1

d149 1
a149 1

d208 2
a209 2

	/* Turn off bu_getopt's error messages */
d213 1
a213 1
	while ((c=bu_getopt(ac,av,options)) != EOF)
d215 1
a215 1
		case 'f'	: if ((c = atoi(bu_optarg)) > 1)
d219 1
a219 1
		case 'n'	: if ((c=atoi(bu_optarg)) > 0)
d222 1
a222 1
		case 'w'	: if ((c=atoi(bu_optarg)) > 0)
d225 1
a225 1
		case 's'	: if ((c=atoi(bu_optarg)) > 0)
d228 1
a228 1
		case 'u'	: method = METH_UNDERSAMPLE; break;
d233 1
a233 1
	if (bu_optind >= ac) {
d237 3
a239 3
	if (bu_optind < ac) {
		if (freopen(av[bu_optind], "r", stdin) == (FILE *)NULL) {
			perror(av[bu_optind]);
d242 1
a242 1
			filename = av[bu_optind];
d244 1
a244 1
	if (bu_optind+1 < ac)
@


14.4
log
@tidy up a lil bit
@
text
@d4 2
a5 2
 * Copyright (c) 2004 United States Government as represented by the
 * U.S. Army Research Laboratory.
d37 1
a37 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/util/pixshrink.c,v 14.3 2004/12/21 07:25:31 morrison Exp $ (BRL)";
@


14.3
log
@tidy up a lil bit
@
text
@d37 1
a37 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/util/pixshrink.c,v 14.2 2004/12/21 03:45:41 butler Exp $ (BRL)";
a117 2
 *
 *	
@


14.2
log
@GPL license changes
@
text
@d37 1
a37 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/util/pixshrink.c,v 14.1 2004/11/16 19:42:32 morrison Exp $ (BRL)";
a97 2
 *
 *
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d1 21
a21 2
/*
 *			P I X S H R I N K . C
a34 3
 *  
 *  Distribution Status -
 *	Public Domain, Distribution Unlimitied.
d37 1
a37 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/util/pixshrink.c,v 1.5 2004/09/09 04:53:00 kermit Exp $ (BRL)";
@


1.5
log
@Added <stdlib.h> to fix implicit cast (for IA64 architecture).
@
text
@d21 1
a21 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/util/pixshrink.c,v 1.4 2004/08/02 23:01:53 morrison Exp $ (BRL)";
d269 10
@


1.4
log
@replace the wrapped config.h block with common.h
@
text
@d21 1
a21 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/util/pixshrink.c,v 1.3 2004/06/09 18:21:39 erikg Exp $ (BRL)";
a28 1
                                                                                                                                                                            
d30 1
d39 1
@


1.3
log
@include unistd.h for getopt stuff
@
text
@d21 1
a21 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/util/pixshrink.c,v 1.2 2004/06/08 22:04:46 morrison Exp $ (BRL)";
d24 1
a24 3
#ifdef HAVE_CONFIG_H
# include "config.h"
#endif
@


1.2
log
@obliterate externs.h
@
text
@d21 1
a21 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
d27 5
@


1.1
log
@Vast reorganization begins.  Sources moved from top-level directories into src/.
@
text
@d21 1
a21 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/util/pixshrink.c,v 11.8 2004/05/10 15:30:51 erikg Exp $ (BRL)";
a27 2


a35 1
#include "externs.h"
@

