head	14.12;
access;
symbols
	rel-7-10-4:14.10
	STABLE:14.10.0.2
	rel-7-10-2:14.10
	rel-7-10-0:14.9
	rel-7-8-4:14.7
	rel-7-8-2:14.7
	rel-7-8-0:14.7
	trimnurbs-branch:14.6.0.2
	help:14.6
	temp_tag:14.5
	bobWinPort-20051223-freeze:14.3
	postmerge-20051223-bobWinPort:14.5
	premerge-20051223-bobWinPort:14.5
	rel-7-6-6:14.5
	rel-7-6-4:14.5
	rel-7-6-2:14.3
	rel-7-6-branch:14.3.0.6
	rel-7-6-0:14.3
	rel-7-4-2:14.3
	rel-7-4-branch:14.3.0.4
	bobWinPort:14.3.0.2
	rel-7-4-0:14.3
	rel-7-2-6:14.3
	rel-7-2-4:14.3
	rel-7-2-2:14.3
	rel-7-2-0:14.3
	rel-7-0-4:14.2
	rel-7-0-2:14.2
	rel-7-0-1:14.2
	opensource-post:14.2
	opensource-pre:1.2
	rel-7-0-branch:1.2.0.2
	rel-7-0:1.2;
locks; strict;
comment	@ * @;


14.12
date	2007.12.16.18.53.51;	author brlcad;	state Exp;
branches;
next	14.11;

14.11
date	2007.09.15.16.23.23;	author brlcad;	state Exp;
branches;
next	14.10;

14.10
date	2007.07.26.01.14.00;	author brlcad;	state Exp;
branches;
next	14.9;

14.9
date	2007.01.23.01.13.55;	author brlcad;	state Exp;
branches;
next	14.8;

14.8
date	2007.01.20.14.37.06;	author brlcad;	state Exp;
branches;
next	14.7;

14.7
date	2006.04.06.20.38.03;	author brlcad;	state Exp;
branches;
next	14.6;

14.6
date	2006.01.18.06.46.27;	author brlcad;	state Exp;
branches
	14.6.2.1;
next	14.5;

14.5
date	2005.10.23.04.44.39;	author brlcad;	state Exp;
branches;
next	14.4;

14.4
date	2005.09.21.19.05.37;	author brlcad;	state Exp;
branches;
next	14.3;

14.3
date	2005.01.30.20.31.33;	author brlcad;	state Exp;
branches
	14.3.6.1;
next	14.2;

14.2
date	2004.12.21.03.45.41;	author butler;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.32;	author morrison;	state Exp;
branches;
next	1.2;

1.2
date	2004.08.02.23.01.53;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.20.15.21.46;	author morrison;	state Exp;
branches;
next	;

14.3.6.1
date	2005.11.13.13.46.20;	author brlcad;	state Exp;
branches;
next	;

14.6.2.1
date	2006.04.07.19.34.24;	author jlowenz;	state Exp;
branches;
next	;


desc
@@


14.12
log
@convert usages of bcopy to memcpy throughout.  although none of them should be buffers that overlap per machine.h history, all calls were individually checked regardless. new code should not use bzero/bcopy any more.
@
text
@/*                      O R L E - P I X . C
 * BRL-CAD
 *
 * Copyright (c) 1986-2007 United States Government as represented by
 * the U.S. Army Research Laboratory.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * version 2.1 as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this file; see the file named COPYING for more
 * information.
 */
/** @@file orle-pix.c
 *			R L E - P I X . C
 *
 *  Author -
 *	Gary S. Moss
 *
 */
#ifndef lint
static const char RCSid[] = "@@(#)$Id: orle-pix.c,v 14.11 2007/09/15 16:23:23 brlcad Exp $ (BRL)";
#endif

#include "common.h"

#include <stdio.h>
#include <unistd.h>
#include <string.h>

#include "machine.h"
#include "fb.h"		/* For Pixel typedef */
#include "orle.h"
#include "bu.h"

static char	*usage[] =
	{
"Usage: rle-pix [-dv] [-b (rgbBG)] [file.rle]",
"",
"If no rle file is specifed, rle-pix will read its standard input.",
"Pix(5B) format is written to the standard output.",
0
	};

static FILE	*fp;
static RGBpixel	bgpixel;
static int	bgflag = 0;
static int	pars_Argv(int argc, register char **argv);
static int	xpos, ypos;
static int	xlen = -1, ylen = -1;
static void	prnt_Cmap(ColorMap *cmap);
static void	prnt_Usage(void);
static int	non_linear_cmap = 0;

/*	m a i n ( )							*/
int
main(int argc, char **argv)
{
	register int	scan_ln;
	register int	fb_size = 512;
	static RGBpixel	scanbuf[1025];
	static RGBpixel	bg_scan[1025];
	static ColorMap	cmap;
	int		get_flags;
	int		scan_bytes;

	fp = stdin;
	if( ! pars_Argv( argc, argv ) || isatty(fileno(stdout)) )  {
		prnt_Usage();
		return	1;
	}
	if( rle_rhdr( fp, &get_flags, bgflag ? NULL : bgpixel ) == -1 )
		return	1;

	rle_rlen( &xlen, &ylen );
	rle_rpos( &xpos, &ypos );

	/* Automatic selection of high res. device.			*/
	if( xpos + xlen > 512 || ypos + ylen > 512 )
		fb_size = 1024;
	if( xpos + xlen > fb_size )
		xlen = fb_size - xpos;
	if( ypos + ylen > fb_size )
		ylen = fb_size - ypos;
	rle_wlen( xlen, ylen, 0 );

	scan_bytes = fb_size * sizeof(RGBpixel);

	if( rle_verbose )
		(void) fprintf( stderr,
		"Background is %d %d %d\n",
		bgpixel[RED], bgpixel[GRN], bgpixel[BLU]
		    );

	/* If color map provided, use it, else go with standard map. */
	if( ! (get_flags & NO_COLORMAP) )  {
		if( rle_verbose )
			(void) fprintf( stderr,
			"Reading color map from file\n"
			    );
		if( rle_rmap( fp, &cmap ) == -1 )
			return	1;
		if( rle_verbose )
			prnt_Cmap( &cmap );
		if( fb_is_linear_cmap( &cmap ) )
			non_linear_cmap = 0;
		else
			non_linear_cmap = 1;
	}  else  {
		/* Standard linear colormap */
		non_linear_cmap = 0;
	}
	if( rle_verbose )  (void)fprintf(stderr, "Using %s colormap\n",
		non_linear_cmap ? "stored" : "linear" );

	/* Fill buffer with background.	*/
	if( (get_flags & NO_BOX_SAVE) )  {
		register int	i;
		register RGBpixel	*to;

		to = bg_scan;
		for( i = 0; i < fb_size; i++,to++ )  {
			COPYRGB( *to, bgpixel );
		}
	}

	{
		for( scan_ln = fb_size-1; scan_ln >= 0; scan_ln-- )  {
			static int	touched = 1;
			register int	pix;
			if( touched && (get_flags & NO_BOX_SAVE) )  {
				memcpy((char *)scanbuf, (char *)bg_scan, scan_bytes);
			}
			if( (touched = rle_decode_ln( fp, scanbuf )) == -1 )
				return	1;
			if( non_linear_cmap )  {
				for( pix = 0; pix < fb_size; pix++ )  {
					(void) putchar( cmap.cm_red[scanbuf[pix][RED]]>>8 );
					(void) putchar( cmap.cm_green[scanbuf[pix][GRN]]>>8 );
					(void) putchar( cmap.cm_blue[scanbuf[pix][BLU]]>>8 );
				}
			} else {
				/* .pix files are streams of RGBpixels */
				write( 1, scanbuf, fb_size*sizeof(RGBpixel) );
			}
		} /* end for */
	} /* end block */
	return	0;
}

/*	p a r s _ A r g v ( )						*/
static int
pars_Argv(int argc, register char **argv)
{	register int	c;
		extern int	bu_optind;
		extern char	*bu_optarg;
	/* Parse options.						*/
	while( (c = bu_getopt( argc, argv, "b:dv" )) != EOF )
		{
		switch( c )
			{
		case 'b' : /* User-specified background.		*/
			bgflag = bu_optarg[0];
			switch( bgflag )
				{
			case 'r':
				bgpixel[RED] = 255;
				break;
			case 'g':
				bgpixel[GRN] = 255;
				break;
			case 'b':
				bgpixel[BLU] = 255;
				break;
			case 'w':
				bgpixel[RED] =
				bgpixel[GRN] =
				bgpixel[BLU] = 255;
				break;
			case 'B':		/* Black */
				break;
			case 'G':		/* 18% grey, for alignments */
				bgpixel[RED] =
				bgpixel[GRN] =
				bgpixel[BLU] = 255.0 * 0.18;
				break;
			default:
				(void) fprintf( stderr,
						"Background '%c' unknown\n",
						bgflag
						);
				bgflag = 0;
				break;
				} /* End switch */
			break;
		case 'd' :
			rle_debug = 1;
			break;
		case 'v' :
			rle_verbose = 1;
			break;
		case '?' :
			return	0;
			} /* end switch */
		} /* end while */

	if( argv[bu_optind] != NULL )
		if( (fp = fopen( argv[bu_optind], "r" )) == NULL )
			{
			(void) fprintf( stderr,
					"Can't open %s for reading!\n",
					argv[bu_optind]
					);
			return	0;
			}
	if( argc > ++bu_optind )
		{
		(void) fprintf( stderr, "Too many arguments!\n" );
		return	0;
		}
	return	1;
	}

/*	p r n t _ U s a g e ( )
	Print usage message.
 */
static void
prnt_Usage(void)
{	register char	**p = usage;
	while( *p )
		(void) fprintf( stderr, "%s\n", *p++ );
	return;
	}

static void
prnt_Cmap(ColorMap *cmap)
{	register unsigned short	*cp;
		register int	i;
	(void) fprintf( stderr, "\t\t\t_________ Color map __________\n" );
	(void) fprintf( stderr, "Red segment :\n" );
	for( i = 0, cp = cmap->cm_red; i < 16; ++i, cp += 16 )
		{
		(void) fprintf( stderr,
	"%4x %4x %4x %4x %4x %4x %4x %4x %4x %4x %4x %4x %4x %4x %4x %4x\n",
	/* 1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16 */
				cp[0],
				cp[1],
				cp[2],
				cp[3],
				cp[4],
				cp[5],
				cp[6],
				cp[7],
				cp[8],
				cp[9],
				cp[10],
				cp[11],
				cp[12],
				cp[13],
				cp[14],
				cp[15]
				);
		}
	(void) fprintf( stderr, "Green segment :\n" );
	for( i = 0, cp = cmap->cm_green; i < 16; ++i, cp += 16 )
		{
		(void) fprintf( stderr,
	"%4x %4x %4x %4x %4x %4x %4x %4x %4x %4x %4x %4x %4x %4x %4x %4x\n",
	/* 1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16 */
				cp[0],
				cp[1],
				cp[2],
				cp[3],
				cp[4],
				cp[5],
				cp[6],
				cp[7],
				cp[8],
				cp[9],
				cp[10],
				cp[11],
				cp[12],
				cp[13],
				cp[14],
				cp[15]
				);
		}
	(void) fprintf( stderr, "Blue segment :\n" );
	for( i = 0, cp = cmap->cm_blue; i < 16; ++i, cp += 16 )
		{
		(void) fprintf( stderr,
	"%4x %4x %4x %4x %4x %4x %4x %4x %4x %4x %4x %4x %4x %4x %4x %4x\n",
	/* 1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16 */
				cp[0],
				cp[1],
				cp[2],
				cp[3],
				cp[4],
				cp[5],
				cp[6],
				cp[7],
				cp[8],
				cp[9],
				cp[10],
				cp[11],
				cp[12],
				cp[13],
				cp[14],
				cp[15]
				);
		}
	return;
	}

/*
 * Local Variables:
 * mode: C
 * tab-width: 8
 * c-basic-offset: 4
 * indent-tabs-mode: t
 * End:
 * ex: shiftwidth=4 tabstop=8
 */
@


14.11
log
@more c89 embracing.  c89 provides string.h for all of the various str*() and mem*() functions, so remove the check for its presence.  there is still likely to be work required for strict c89 conformance for the various bsd strings.h functions that may be in use.
@
text
@d28 1
a28 1
static const char RCSid[] = "@@(#)$Id: orle-pix.c,v 14.10 2007/07/26 01:14:00 brlcad Exp $ (BRL)";
d138 1
a138 1
				bcopy( (char *)bg_scan, (char *)scanbuf, scan_bytes );
@


14.10
log
@remove ephemeral data like phone numbers and addresses, including the misleading 'source' statements on code that is continually evolving and receiving contributions from many many sources
@
text
@d28 1
a28 1
static const char RCSid[] = "@@(#)$Id: orle-pix.c,v 14.9 2007/01/23 01:13:55 brlcad Exp $ (BRL)";
d35 1
a35 5
#ifdef HAVE_STRING_H
#  include <string.h>
#else
#  include <strings.h>
#endif
@


14.9
log
@Sweeping license updates.  Documentation is fully relicensed to the BSD Documentation License (a minor variant of the FreeBSD Documentation License and BSD License).  All GPL code (mostly application code) is converted to the LGPL and now also specifically declares version 2.1, revoking the blank check to the FSF.  The intent of these sweeping changes are to simplify the licensing terms and increase overall flexibility of use, both externally (to users for their purposes) and internally (to allow application code to be migrated to libraries without creating GPL libraries).  As a collective work, BRL-CAD is now LGPL.
@
text
@a25 4
 *  Source -
 *	SECAD/VLD Computing Consortium, Bldg 394
 *	The U. S. Army Ballistic Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5066
d28 1
a28 1
static const char RCSid[] = "@@(#)$Id: orle-pix.c,v 14.8 2007/01/20 14:37:06 brlcad Exp $ (BRL)";
@


14.8
log
@update copyright to 2007
@
text
@d8 2
a9 3
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation; either version 2 of the
 * License, or (at your option) any later version.
d14 1
a14 1
 * General Public License for more details.
d16 2
a17 2
 * You should have received a copy of the GNU General Public License
 * along with this file; see the file named COPYING for more
d32 1
a32 1
static const char RCSid[] = "@@(#)$Id: orle-pix.c,v 14.7 2006/04/06 20:38:03 brlcad Exp $ (BRL)";
@


14.7
log
@quell/fix issues raised by the Intel compiler on Altix
@
text
@d4 1
a4 1
 * Copyright (c) 1986-2006 United States Government as represented by
d33 1
a33 1
static const char RCSid[] = "@@(#)$Id: orle-pix.c,v 14.6 2006/01/18 06:46:27 brlcad Exp $ (BRL)";
@


14.6
log
@update copyright to 2006
@
text
@d33 1
a33 1
static const char RCSid[] = "@@(#)$Id: orle-pix.c,v 14.5 2005/10/23 04:44:39 brlcad Exp $ (BRL)";
a37 2


d41 1
a41 1
#include <string.h>
d43 1
a43 1
#include <strings.h>
d45 1
d49 1
@


14.6.2.1
log
@update from HEAD
@
text
@d33 1
a33 1
static const char RCSid[] = "@@(#)$Id: orle-pix.c,v 14.6 2006/01/18 06:46:27 brlcad Exp $ (BRL)";
d38 2
d43 1
a43 1
#  include <string.h>
d45 1
a45 1
#  include <strings.h>
a46 1

a49 1
#include "bu.h"
@


14.5
log
@trailing ws
@
text
@d4 1
a4 1
 * Copyright (C) 1986-2005 United States Government as represented by
d33 1
a33 1
static const char RCSid[] = "@@(#)$Id: orle-pix.c,v 14.4 2005/09/21 19:05:37 brlcad Exp $ (BRL)";
@


14.4
log
@needs bu.h for bu_getopt
@
text
@d26 1
a26 1
 *  
d33 1
a33 1
static const char RCSid[] = "@@(#)$Id: orle-pix.c,v 14.3 2005/01/30 20:31:33 brlcad Exp $ (BRL)";
d73 1
a73 1
{	
d142 2
a143 2
	{	
		for( scan_ln = fb_size-1; scan_ln >= 0; scan_ln-- )  {	
d282 1
a282 1
		(void) fprintf( stderr, 
@


14.3
log
@update copyright to 2005
@
text
@d33 1
a33 1
static const char RCSid[] = "@@(#)$Id: orle-pix.c,v 14.2 2004/12/21 03:45:41 butler Exp $ (BRL)";
d170 2
a171 2
		extern int	optind;
		extern char	*optarg;
d173 1
a173 1
	while( (c = getopt( argc, argv, "b:dv" )) != EOF )
d178 1
a178 1
			bgflag = optarg[0];
d222 2
a223 2
	if( argv[optind] != NULL )
		if( (fp = fopen( argv[optind], "r" )) == NULL )
d227 1
a227 1
					argv[optind]
d231 1
a231 1
	if( argc > ++optind )
@


14.3.6.1
log
@merge changes from HEAD aka rel-7-6-4 to the rel-7-6-branch just in case someone peeks a gander or tries to continue/build the branch
@
text
@d26 1
a26 1
 *
d33 1
a33 1
static const char RCSid[] = "@@(#)$Id$ (BRL)";
d73 1
a73 1
{
d142 2
a143 2
	{
		for( scan_ln = fb_size-1; scan_ln >= 0; scan_ln-- )  {
d170 2
a171 2
		extern int	bu_optind;
		extern char	*bu_optarg;
d173 1
a173 1
	while( (c = bu_getopt( argc, argv, "b:dv" )) != EOF )
d178 1
a178 1
			bgflag = bu_optarg[0];
d222 2
a223 2
	if( argv[bu_optind] != NULL )
		if( (fp = fopen( argv[bu_optind], "r" )) == NULL )
d227 1
a227 1
					argv[bu_optind]
d231 1
a231 1
	if( argc > ++bu_optind )
d282 1
a282 1
		(void) fprintf( stderr,
@


14.2
log
@GPL license changes
@
text
@d4 1
a4 1
 * Copyright (c) 1986-2004 United States Government as represented by
d33 1
a33 1
static const char RCSid[] = "@@(#)$Id: orle-pix.c,v 14.1 2004/11/16 19:42:32 morrison Exp $ (BRL)";
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d1 21
a21 1
/*
a30 4
 *  
 *  Copyright Notice -
 *	This software is Copyright (C) 1986-2004 by the United States Army.
 *	All rights reserved.
d33 1
a33 1
static const char RCSid[] = "@@(#)$Id: orle-pix.c,v 1.2 2004/08/02 23:01:53 morrison Exp $ (BRL)";
@


1.2
log
@replace the wrapped config.h block with common.h
@
text
@d17 1
a17 1
static const char RCSid[] = "@@(#)$Id: orle-pix.c,v 1.1 2004/05/20 15:21:46 morrison Exp $ (BRL)";
d313 10
@


1.1
log
@Vast reorganization begins.  Sources moved from top-level directories into src/.
@
text
@d17 1
a17 1
static const char RCSid[] = "@@(#)$Id: orle-pix.c,v 11.11 2004/05/10 15:30:50 erikg Exp $ (BRL)";
d20 1
a20 3
#ifdef HAVE_CONFIG_H
# include "config.h"
#endif
@

