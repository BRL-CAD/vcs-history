head	14.15;
access;
symbols
	rel-7-10-4:14.13
	STABLE:14.13.0.2
	rel-7-10-2:14.13
	rel-7-10-0:14.12
	rel-7-8-4:14.9
	rel-7-8-2:14.8
	rel-7-8-0:14.8
	trimnurbs-branch:14.7.0.2
	help:14.7
	temp_tag:14.6
	bobWinPort-20051223-freeze:14.4
	postmerge-20051223-bobWinPort:14.6
	premerge-20051223-bobWinPort:14.6
	rel-7-6-6:14.6
	rel-7-6-4:14.6
	rel-7-6-2:14.4
	rel-7-6-branch:14.4.0.6
	rel-7-6-0:14.4
	rel-7-4-2:14.4
	rel-7-4-branch:14.4.0.4
	bobWinPort:14.4.0.2
	rel-7-4-0:14.4
	rel-7-2-6:14.3
	rel-7-2-4:14.3
	rel-7-2-2:14.3
	rel-7-2-0:14.3
	rel-7-0-4:14.2
	rel-7-0-2:14.2
	rel-7-0-1:14.2
	opensource-post:14.2
	opensource-pre:1.3
	rel-7-0-branch:1.3.0.2
	rel-7-0:1.3;
locks; strict;
comment	@ * @;


14.15
date	2007.11.21.20.49.11;	author erikgreenwald;	state Exp;
branches;
next	14.14;

14.14
date	2007.11.21.18.55.37;	author erikgreenwald;	state Exp;
branches;
next	14.13;

14.13
date	2007.07.26.01.13.59;	author brlcad;	state Exp;
branches;
next	14.12;

14.12
date	2007.01.27.01.41.53;	author brlcad;	state Exp;
branches;
next	14.11;

14.11
date	2007.01.23.01.13.52;	author brlcad;	state Exp;
branches;
next	14.10;

14.10
date	2007.01.20.14.37.05;	author brlcad;	state Exp;
branches;
next	14.9;

14.9
date	2006.07.09.19.17.17;	author brlcad;	state Exp;
branches;
next	14.8;

14.8
date	2006.04.06.20.38.03;	author brlcad;	state Exp;
branches;
next	14.7;

14.7
date	2006.01.18.06.46.27;	author brlcad;	state Exp;
branches
	14.7.2.1;
next	14.6;

14.6
date	2005.10.23.04.44.39;	author brlcad;	state Exp;
branches;
next	14.5;

14.5
date	2005.09.21.19.05.37;	author brlcad;	state Exp;
branches;
next	14.4;

14.4
date	2005.06.30.00.08.36;	author erikgreenwald;	state Exp;
branches
	14.4.6.1;
next	14.3;

14.3
date	2005.01.30.20.31.32;	author brlcad;	state Exp;
branches;
next	14.2;

14.2
date	2004.12.21.03.45.40;	author butler;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.32;	author morrison;	state Exp;
branches;
next	1.3;

1.3
date	2004.08.02.23.01.53;	author morrison;	state Exp;
branches;
next	1.2;

1.2
date	2004.06.08.22.04.42;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.20.15.21.40;	author morrison;	state Exp;
branches;
next	;

14.4.6.1
date	2005.11.13.13.46.20;	author brlcad;	state Exp;
branches;
next	;

14.7.2.1
date	2006.04.07.19.34.24;	author jlowenz;	state Exp;
branches;
next	;


desc
@@


14.15
log
@pass bu_exit a NULL instead of an empty string
@
text
@/*                          A Z E L . C
 * BRL-CAD
 *
 * Copyright (c) 2004-2007 United States Government as represented by
 * the U.S. Army Research Laboratory.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * version 2.1 as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this file; see the file named COPYING for more
 * information.
 */
/** @@file azel.c
 *
 *	     This program reads data for points in Euclidean 3-space
 *	and prints out the same data, having transformed the coordinates
 *	of the points according to an azimuth-elevation rotation.
 *
 *	     Each point in the input must be of the form:
 *
 *			a  b  c  field_1  field_2  ...  field_n.
 *
 *	The default behavior of the program is to interpret (a, b, c) as
 *	the point (x, y, z) in unrotated coordinates and to output
 *
 *			d  h  v  field_1  field_2  ...  field_n.
 *
 *	where (d, h, v) are the "viewer's coordinates."
 *
 *	     The -p option causes the program to output the projection
 *	of the point onto a plane normal to the line of sight:
 *
 *			 h  v  field_1  field_2  ...  field_n.
 *
 *	     The -i option causes the program to invert the rotation.
 *	(a, b, c) is interpreted as the point (d, h, v) in the viewer's
 *	coordinates, and the point is output in derotated form:
 *
 *			x  y  z  field_1  field_2  ...  field_n.
 *  Author -
 *	Paul J. Tanenbaum
 *
 */
#ifndef lint
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/util/azel.c,v 14.14 2007/11/21 18:55:37 erikgreenwald Exp $ (BRL)";
#endif

#include "common.h"

#include <stdio.h>
#include <stdlib.h>
#include <ctype.h>
#include <math.h>

#ifdef HAVE_UNISTD_H
# include <unistd.h>
#endif

#include "machine.h"
#include "bu.h"


#define		DEG2RAD		0.01745329	/* Convert degrees to radians */
#define		OPT_STRING	"a:c:e:ipr?"	/* For bu_getopt(3) */
#define		fpeek(f)	ungetc(fgetc(f), f)

void	PrintUsage(void);
void	GetCoord(FILE *Whence, double *Coord, char Label, int LineNm, char *FileName);

int
main (int argc, char **argv)
{
    char            *inFname = "stdin"; /* Name of input source */
    char            *outFname = "stdout";  /* Name of output destination */
    char            *Label;             /* Names of input coordinates */
    char            Tail[4096] = {0};   /* Rest of input line beyond coords */
    extern char     *bu_optarg;         /* argument from bu_getopt(3C) */
    FILE            *inPtr = stdin;     /* Pointer to input */
    FILE            *outPtr = stdout;   /* Pointer to output */
    double          Azim = 0.0;         /* Azimuth angle (in degrees) */
    double          Elev = 0.0;         /* Elevation angle (in degrees) */
    double          CelSiz = 1.0;       /* Size of cells (dimensionless) */
    double          Cazim;              /* Cosine of the azimuth angle */
    double          Celev;              /* Cosine of the elevation angle */
    double          Sazim;              /* Sine of the azimuth angle */
    double          Selev;              /* Sine of the elevation angle */
    double          U1;                 /* Input coords of current point */
    double          V1;                 /*   "      "    "    "      "   */
    double          W1;                 /*   "      "    "    "      "   */
    double          U2;			/* Output coords of current point */
    double          V2;                 /*   "      "    "    "      "   */
    double          W2;                 /*   "      "    "    "      "   */
    double          UU;                 /* Weight of U1 in computing U2 */
    double          UV;                 /*    "    " U1  "     "     V2 */
    double          UW;                 /*    "    " U1  "     "     W2 */
    double          VU;                 /* Weight of V1 in computing U2 */
    double          VV;                 /*    "    " V1  "     "     V2 */
    double          VW;                 /*    "    " V1  "     "     W2 */
    double          WU;                 /* Weight of W1 in computing U2 */
    double          WV;                 /*    "    " W1  "     "     V2 */
    double          WW;                 /*    "    " W1  "     "     W2 */
    int             Invert = 0;		/* Undo az-el rotation? */
    int             PlanarProj = 0;	/* Project points onto plane? */
    int             Round = 0;		/* Round the output coords? */
    int             LineNm = 0;         /* How far through input? */
    int             Ch;                 /* Input character */
    int             i;                  /* Dummy variable for loop indexing */
    extern int      bu_optind;             /* index from bu_getopt(3C) */

    /* Handle command-line options */
    while ((Ch = bu_getopt(argc, argv, OPT_STRING)) != EOF)
	switch (Ch)
	{
	    case 'a':
		if (sscanf(bu_optarg, "%lf", &Azim) != 1)
		{
		    (void) fprintf(stderr,
			"Bad azimuth specification: '%s'\n", bu_optarg);
		    PrintUsage();
		    bu_exit (1, NULL);
		}
		break;
	    case 'c':
		if (sscanf(bu_optarg, "%lf", &CelSiz) != 1)
		{
		    (void) fprintf(stderr,
			"Bad cell-size specification: '%s'\n", bu_optarg);
		    PrintUsage();
		    bu_exit (1, NULL);
		}
		break;
	    case 'e':
		if (sscanf(bu_optarg, "%lf", &Elev) != 1)
		{
		    (void) fprintf(stderr,
			"Bad elevation specification: '%s'\n", bu_optarg);
		    PrintUsage();
		    bu_exit (1, NULL);
		}
		break;
	    case 'i':
		Invert = 1;
		break;
	    case 'p':
		PlanarProj = 1;
		break;
	    case 'r':
		Round = 1;
		break;
	    default:
		fprintf(stderr, "Bad option '-%c'\n", Ch);
	    case '?':
		PrintUsage();
		exit (Ch != '?');
	}

    if (PlanarProj && Invert)
    {
	fputs("Incompatible options: -i and -p\n", stderr);
	PrintUsage();
	bu_exit (1, NULL);
    }

    /* Determine source and destination */
    if (argc - bu_optind > 0)
    {
	inFname = argv[bu_optind];
	if ((inPtr = fopen(inFname, "r")) == NULL)
	{
	    fprintf(stderr, "azel:  Cannot open file '%s'\n", inFname);
	    bu_exit (1, NULL);
	}
	if (argc - bu_optind > 1)
	{
	    outFname = argv[bu_optind + 1];
	    if ((outPtr = fopen(outFname, "w")) == NULL)
	    {
		fprintf(stderr, "azel:  Cannot create file '%s'\n", outFname);
		bu_exit (1, NULL);
	    }
	}
	if (argc - bu_optind > 2)
	{
	    PrintUsage();
	    bu_exit (1, NULL);
	}
    }

    /* Compute transformation coefficients */
    Cazim = cos(Azim * DEG2RAD);
    Celev = cos(Elev * DEG2RAD);
    Sazim = sin(Azim * DEG2RAD);
    Selev = sin(Elev * DEG2RAD);
    if (Invert)
    {
	UU = Celev * Cazim;
	VU = -Sazim;
	WU = -(Selev * Cazim);
	UV = Celev * Sazim;
	VV = Cazim;
	WV = -(Selev * Sazim);
	UW = Selev;
	VW = 0.0;
	WW = Celev;
    }
    else
    {
	UU = Celev * Cazim;
	VU = Celev * Sazim;
	WU = Selev;
	UV = -Sazim;
	VV = Cazim;
	WV = 0.0;
	UW = -(Selev * Cazim);
	VW = -(Selev * Sazim);
	WW = Celev;
    }

/* * * * * Filter Data * * * * */
    Label = Invert ? "DHV" : "XYZ";

    while ((Ch = fpeek(inPtr)) != EOF)
    {
/* Read U1, V1, and W1 of next point in input frame of reference */
	GetCoord(inPtr, &U1, *Label, LineNm + 1, inFname);
	GetCoord(inPtr, &V1, *(Label + 1), LineNm + 1, inFname);
	GetCoord(inPtr, &W1, *(Label + 2), LineNm + 1, inFname);

/* Compute U2, V2, and W2 for this point */
	U2 = (U1 * UU + V1 * VU + W1 * WU) / CelSiz;
	V2 = (U1 * UV + V1 * VV + W1 * WV) / CelSiz;
	W2 = (U1 * UW + V1 * VW + W1 * WW) / CelSiz;

	if (Round)
	{
	    U2 = floor(U2 + .5);
	    V2 = floor(V2 + .5);
	    W2 = floor(W2 + .5);
	}

/* Read in the rest of the line for subsequent dumping out */
	for (i = 0; (Ch = fgetc(inPtr)) != '\n'; i++)
	    if (Ch == EOF)
	    {
		Tail[i] = '\n';
		break;
	    }
	    else
		Tail[i] = Ch;
	Tail[i] = '\0';

/* Write out the filtered version of this line */
	if (! PlanarProj)
	    fprintf(outPtr, "%g\t", U2);
	fprintf(outPtr, "%g\t%g\t%s\n", V2, W2, Tail);
	LineNm++;
    }
    bu_exit (0, NULL);
}
/* ======================================================================== */
void
PrintUsage (void)
{
    fputs("Usage:  'azel [-a azim] [-e elev] [-c celsiz] [-{ip}r] [infile [outfile]]'\n", stderr);
}
/* ======================================================================== */
void
GetCoord (FILE *Whence, double *Coord, char Label, int LineNm, char *FileName)

			/* File from which to read */
			/* Where to store coordinate */
			/* Name of coordinate */
			/* How far in input? */
			/* What input stream? */

{
    int     Ch;

/* Skip leading white space */
    while (((Ch = fgetc(Whence)) == ' ') || (Ch == '\t'))
	;

    if (ungetc(Ch, Whence) == EOF)
    {
	fprintf(stderr, "azel:  Premature end-of-file, file %s\n",
		FileName);
	bu_exit (1, NULL);
    }
    if (Ch == '\n')
    {
	fprintf(stderr, "azel:  Premature end-of-line on line %d, file %s\n",
		LineNm, FileName);
	bu_exit (1, NULL);
    }

    if (fscanf(Whence, "%lf", Coord) != 1)
    {
	fprintf(stderr, "azel:  Bad %c-coordinate at line %d, file %s\n",
		Label, LineNm, FileName);
	bu_exit (1, NULL);
    }
}

/*
 * Local Variables:
 * mode: C
 * tab-width: 8
 * c-basic-offset: 4
 * indent-tabs-mode: t
 * End:
 * ex: shiftwidth=4 tabstop=8
 */
@


14.14
log
@exit->bu_exit where applicable
@
text
@d52 1
a52 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/util/azel.c,v 14.13 2007/07/26 01:13:59 brlcad Exp $ (BRL)";
d127 1
a127 1
		    bu_exit (1, "");
d136 1
a136 1
		    bu_exit (1, "");
d145 1
a145 1
		    bu_exit (1, "");
d168 1
a168 1
	bu_exit (1, "");
d178 1
a178 1
	    bu_exit (1, "");
d186 1
a186 1
		bu_exit (1, "");
d192 1
a192 1
	    bu_exit (1, "");
d265 1
a265 1
    bu_exit (0, "");
d294 1
a294 1
	bu_exit (1, "");
d300 1
a300 1
	bu_exit (1, "");
d307 1
a307 1
	bu_exit (1, "");
@


14.13
log
@remove ephemeral data like phone numbers and addresses, including the misleading 'source' statements on code that is continually evolving and receiving contributions from many many sources
@
text
@d52 1
a52 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/util/azel.c,v 14.12 2007/01/27 01:41:53 brlcad Exp $ (BRL)";
d127 1
a127 1
		    exit(1);
d136 1
a136 1
		    exit(1);
d145 1
a145 1
		    exit(1);
d168 1
a168 1
	exit (1);
d178 1
a178 1
	    exit(1);
d186 1
a186 1
		exit(1);
d192 1
a192 1
	    exit (1);
d265 1
a265 1
    exit (0);
d294 1
a294 1
	exit(1);
d300 1
a300 1
	exit(1);
d307 1
a307 1
	exit(1);
@


14.12
log
@ws. lots and lots of ws.  see sh/ws.sh for details (cases 'abcdeg').
@
text
@a49 3
 *  Source -
 *	The U. S. Army Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5066  USA
d52 1
a52 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/util/azel.c,v 14.11 2007/01/23 01:13:52 brlcad Exp $ (BRL)";
@


14.11
log
@Sweeping license updates.  Documentation is fully relicensed to the BSD Documentation License (a minor variant of the FreeBSD Documentation License and BSD License).  All GPL code (mostly application code) is converted to the LGPL and now also specifically declares version 2.1, revoking the blank check to the FSF.  The intent of these sweeping changes are to simplify the licensing terms and increase overall flexibility of use, both externally (to users for their purposes) and internally (to allow application code to be migrated to libraries without creating GPL libraries).  As a collective work, BRL-CAD is now LGPL.
@
text
@d55 1
a55 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/util/azel.c,v 14.10 2007/01/20 14:37:05 brlcad Exp $ (BRL)";
d235 3
a237 3
        GetCoord(inPtr, &U1, *Label, LineNm + 1, inFname);
        GetCoord(inPtr, &V1, *(Label + 1), LineNm + 1, inFname);
        GetCoord(inPtr, &W1, *(Label + 2), LineNm + 1, inFname);
d252 9
a260 9
        for (i = 0; (Ch = fgetc(inPtr)) != '\n'; i++)
            if (Ch == EOF)
            {
                Tail[i] = '\n';
                break;
            }
            else
                Tail[i] = Ch;
        Tail[i] = '\0';
d265 2
a266 2
        fprintf(outPtr, "%g\t%g\t%s\n", V2, W2, Tail);
        LineNm++;
d280 5
a284 5
                        /* File from which to read */
                        /* Where to store coordinate */
                        /* Name of coordinate */
                        /* How far in input? */
                        /* What input stream? */
d291 1
a291 1
        ;
d295 3
a297 3
        fprintf(stderr, "azel:  Premature end-of-file, file %s\n",
                FileName);
        exit(1);
d301 3
a303 3
        fprintf(stderr, "azel:  Premature end-of-line on line %d, file %s\n",
                LineNm, FileName);
        exit(1);
d308 3
a310 3
        fprintf(stderr, "azel:  Bad %c-coordinate at line %d, file %s\n",
                Label, LineNm, FileName);
        exit(1);
@


14.10
log
@update copyright to 2007
@
text
@d8 2
a9 3
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation; either version 2 of the
 * License, or (at your option) any later version.
d14 1
a14 1
 * General Public License for more details.
d16 2
a17 2
 * You should have received a copy of the GNU General Public License
 * along with this file; see the file named COPYING for more
d55 1
a55 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/util/azel.c,v 14.9 2006/07/09 19:17:17 brlcad Exp $ (BRL)";
@


14.9
log
@increase and initialize some buffer sizes to something larger in order to minimize hitting buffer limits while processing.
@
text
@d4 1
a4 1
 * Copyright (c) 2004-2006 United States Government as represented by
d56 1
a56 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/util/azel.c,v 14.8 2006/04/06 20:38:03 brlcad Exp $ (BRL)";
@


14.8
log
@quell/fix issues raised by the Intel compiler on Altix
@
text
@d56 1
a56 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/util/azel.c,v 14.7 2006/01/18 06:46:27 brlcad Exp $ (BRL)";
d87 2
a88 2
    char            Tail[1024];         /* Rest of input line beyond coords */
    extern char     *bu_optarg;            /* argument from bu_getopt(3C) */
@


14.7
log
@update copyright to 2006
@
text
@d56 1
a56 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/util/azel.c,v 14.6 2005/10/23 04:44:39 brlcad Exp $ (BRL)";
d71 2
@


14.7.2.1
log
@update from HEAD
@
text
@d56 1
a56 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/util/azel.c,v 14.7 2006/01/18 06:46:27 brlcad Exp $ (BRL)";
a70 2
#include "bu.h"

@


14.6
log
@trailing ws
@
text
@d4 1
a4 1
 * Copyright (C) 2004-2005 United States Government as represented by
d56 1
a56 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/util/azel.c,v 14.5 2005/09/21 19:05:37 brlcad Exp $ (BRL)";
@


14.5
log
@needs bu.h for bu_getopt
@
text
@d50 1
a50 1
 *  
d56 1
a56 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/util/azel.c,v 14.4 2005/06/30 00:08:36 erikgreenwald Exp $ (BRL)";
d118 1
a118 1
    
d304 1
a304 1
    
@


14.4
log
@added missing includes
@
text
@d56 1
a56 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/util/azel.c,v 14.3 2005/01/30 20:31:32 brlcad Exp $ (BRL)";
d73 1
a73 1
#define		OPT_STRING	"a:c:e:ipr?"	/* For getopt(3) */
d86 1
a86 1
    extern char     *optarg;            /* argument from getopt(3C) */
d117 1
a117 1
    extern int      optind;             /* index from getopt(3C) */
d120 1
a120 1
    while ((Ch = getopt(argc, argv, OPT_STRING)) != EOF)
d124 1
a124 1
		if (sscanf(optarg, "%lf", &Azim) != 1)
d127 1
a127 1
			"Bad azimuth specification: '%s'\n", optarg);
d133 1
a133 1
		if (sscanf(optarg, "%lf", &CelSiz) != 1)
d136 1
a136 1
			"Bad cell-size specification: '%s'\n", optarg);
d142 1
a142 1
		if (sscanf(optarg, "%lf", &Elev) != 1)
d145 1
a145 1
			"Bad elevation specification: '%s'\n", optarg);
d174 1
a174 1
    if (argc - optind > 0)
d176 1
a176 1
	inFname = argv[optind];
d182 1
a182 1
	if (argc - optind > 1)
d184 1
a184 1
	    outFname = argv[optind + 1];
d191 1
a191 1
	if (argc - optind > 2)
@


14.4.6.1
log
@merge changes from HEAD aka rel-7-6-4 to the rel-7-6-branch just in case someone peeks a gander or tries to continue/build the branch
@
text
@d50 1
a50 1
 *
d56 1
a56 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
d73 1
a73 1
#define		OPT_STRING	"a:c:e:ipr?"	/* For bu_getopt(3) */
d86 1
a86 1
    extern char     *bu_optarg;            /* argument from bu_getopt(3C) */
d117 2
a118 2
    extern int      bu_optind;             /* index from bu_getopt(3C) */

d120 1
a120 1
    while ((Ch = bu_getopt(argc, argv, OPT_STRING)) != EOF)
d124 1
a124 1
		if (sscanf(bu_optarg, "%lf", &Azim) != 1)
d127 1
a127 1
			"Bad azimuth specification: '%s'\n", bu_optarg);
d133 1
a133 1
		if (sscanf(bu_optarg, "%lf", &CelSiz) != 1)
d136 1
a136 1
			"Bad cell-size specification: '%s'\n", bu_optarg);
d142 1
a142 1
		if (sscanf(bu_optarg, "%lf", &Elev) != 1)
d145 1
a145 1
			"Bad elevation specification: '%s'\n", bu_optarg);
d174 1
a174 1
    if (argc - bu_optind > 0)
d176 1
a176 1
	inFname = argv[bu_optind];
d182 1
a182 1
	if (argc - bu_optind > 1)
d184 1
a184 1
	    outFname = argv[bu_optind + 1];
d191 1
a191 1
	if (argc - bu_optind > 2)
d304 1
a304 1

@


14.3
log
@update copyright to 2005
@
text
@d56 1
a56 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/util/azel.c,v 14.2 2004/12/21 03:45:40 butler Exp $ (BRL)";
d62 1
d66 4
@


14.2
log
@GPL license changes
@
text
@d4 2
a5 2
 * Copyright (c) 2004 United States Government as represented by the
 * U.S. Army Research Laboratory.
d56 1
a56 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/util/azel.c,v 14.1 2004/11/16 19:42:32 morrison Exp $ (BRL)";
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d1 21
a21 2
/*
 *				A Z E L . C
a53 3
 *  
 *  Distribution Status -
 *	Public Domain, Distribution Unlimitied.
d56 1
a56 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/util/azel.c,v 1.3 2004/08/02 23:01:53 morrison Exp $ (BRL)";
@


1.3
log
@replace the wrapped config.h block with common.h
@
text
@d40 1
a40 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/util/azel.c,v 1.2 2004/06/08 22:04:42 morrison Exp $ (BRL)";
d291 10
@


1.2
log
@obliterate externs.h
@
text
@d40 1
a40 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
d43 1
a43 3
#ifdef HAVE_CONFIG_H
# include "config.h"
#endif
@


1.1
log
@Vast reorganization begins.  Sources moved from top-level directories into src/.
@
text
@d40 1
a40 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/util/azel.c,v 11.9 2004/05/10 15:30:50 erikg Exp $ (BRL)";
a46 2


a51 1
#include "externs.h"
@

