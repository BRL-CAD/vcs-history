head	14.12;
access;
symbols
	rel-7-10-4:14.9
	STABLE:14.9.0.2
	rel-7-10-2:14.9
	rel-7-10-0:14.9
	rel-7-8-4:14.7
	rel-7-8-2:14.7
	rel-7-8-0:14.7
	trimnurbs-branch:14.7.0.2
	help:14.7
	temp_tag:14.5
	bobWinPort-20051223-freeze:14.3
	postmerge-20051223-bobWinPort:14.5
	premerge-20051223-bobWinPort:14.5
	rel-7-6-6:14.5
	rel-7-6-4:14.5
	rel-7-6-2:14.3
	rel-7-6-branch:14.3.0.6
	rel-7-6-0:14.3
	rel-7-4-2:14.3
	rel-7-4-branch:14.3.0.4
	bobWinPort:14.3.0.2
	rel-7-4-0:14.3
	rel-7-2-6:14.3
	rel-7-2-4:14.3
	rel-7-2-2:14.3
	rel-7-2-0:14.3
	rel-7-0-4:14.2
	rel-7-0-2:14.2
	rel-7-0-1:14.2
	opensource-post:14.2
	opensource-pre:1.4
	rel-7-0-branch:1.4.0.2
	rel-7-0:1.4;
locks; strict;
comment	@ * @;


14.12
date	2007.11.21.20.49.13;	author erikgreenwald;	state Exp;
branches;
next	14.11;

14.11
date	2007.11.21.20.38.24;	author erikgreenwald;	state Exp;
branches;
next	14.10;

14.10
date	2007.11.21.18.55.37;	author erikgreenwald;	state Exp;
branches;
next	14.9;

14.9
date	2007.01.23.01.13.56;	author brlcad;	state Exp;
branches;
next	14.8;

14.8
date	2007.01.20.14.37.06;	author brlcad;	state Exp;
branches;
next	14.7;

14.7
date	2006.02.27.10.08.41;	author brlcad;	state Exp;
branches;
next	14.6;

14.6
date	2006.01.18.06.46.27;	author brlcad;	state Exp;
branches;
next	14.5;

14.5
date	2005.10.23.04.44.39;	author brlcad;	state Exp;
branches;
next	14.4;

14.4
date	2005.09.21.19.05.37;	author brlcad;	state Exp;
branches;
next	14.3;

14.3
date	2005.01.30.20.31.33;	author brlcad;	state Exp;
branches
	14.3.6.1;
next	14.2;

14.2
date	2004.12.21.03.45.41;	author butler;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.32;	author morrison;	state Exp;
branches;
next	1.4;

1.4
date	2004.08.02.23.01.53;	author morrison;	state Exp;
branches;
next	1.3;

1.3
date	2004.06.09.18.21.39;	author erikg;	state Exp;
branches;
next	1.2;

1.2
date	2004.06.08.22.04.45;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.20.15.21.50;	author morrison;	state Exp;
branches;
next	;

14.3.6.1
date	2005.11.13.13.46.20;	author brlcad;	state Exp;
branches;
next	;


desc
@@


14.12
log
@pass bu_exit a NULL instead of an empty string
@
text
@/*                      P I X C L U M P . C
 * BRL-CAD
 *
 * Copyright (c) 1997-2007 United States Government as represented by
 * the U.S. Army Research Laboratory.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * version 2.1 as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this file; see the file named COPYING for more
 * information.
 */
/** @@file pixclump.c
 *
 *	Quantize the color values in a PIX(5) stream to
 *	a set of specified values
 *
 *  Author -
 *	Paul J. Tanenbaum
 *
 *  Source -
 *	The U. S. Army Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5068
 */
#ifndef lint
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/util/pixclump.c,v 14.11 2007/11/21 20:38:24 erikgreenwald Exp $ (BRL)";
#endif

#include "common.h"

#ifdef HAVE_UNISTD_H
#  include <unistd.h>
#endif
#include <stdlib.h>
#include <stdio.h>
#include <math.h>

#include "machine.h"
#include "bu.h"
#include "vmath.h"


#define	RED			0
#define	GRN			1
#define	BLU			2

/*
 *	Global variables
 */
unsigned char	(*color_tbl)[3];	/* Table of quantized colors */
int		color_tbl_size;		/* Capacity of table */
int		next_color;		/* Number of colors now in table */
static int	debug = 0;
#define	PC_DEBUG_TABLE		0x01
#define	PC_DEBUG_MATCH		0x02
#define	PC_DEBUG_OUTPUT		0x04

static char usage[] = "\
Usage: 'pixclump [-c R/G/B] [-f color_file] [-x debug_flags]\n\
		 [infile.pix [outfile.pix]]'\n";
#define OPT_STRING	"c:f:x:?"

static void print_usage (void)
{
    (void) bu_log("%s", usage);
}

static void print_debug_usage (void)
{
    static char	*flag_denotation[] =
		{
		    "",
		    "color table",
		    "finding best pixel match",
		    "writing the pixels out",
		    0
		};
    int		i;

    bu_log("Debug bits and their meanings...\n");
    for (i = 1; (flag_denotation[i]) != 0; ++i)
	bu_log("0x%04x	%s\n", 1 << (i-1), flag_denotation[i]);
}

static void add_to_table (unsigned char *rgb)
{
    /*
     *	Ensure that the color table can accomodate the new entry
     */
    if (next_color == color_tbl_size)
    {
	color_tbl_size *= 2;
	color_tbl = (unsigned char (*)[3])
	    bu_realloc((genptr_t) color_tbl,
			color_tbl_size * 3 * sizeof(unsigned char),
			"color table");
    }
    VMOVE(color_tbl[next_color], rgb);
    ++next_color;
}

static void fill_table (char *f_name)
{
    char		*bp;
    FILE		*fp;
    int			line_nm;
    unsigned char	rgb[3];
    struct bu_vls	v;

    if ((fp = fopen(f_name, "r")) == NULL)
	bu_exit (1, "Cannot open color file '%s'\n", bu_optarg);

    bu_vls_init(&v);
    for (line_nm = 1; bu_vls_gets(&v, fp) != -1;
	++line_nm, bu_vls_trunc(&v, 0))
    {
	for (bp = bu_vls_addr(&v); (*bp == ' ') || (*bp == '\t'); ++bp)
	    ;
	if ((*bp == '#') || (*bp == '\0'))
	    continue;
	if (! bu_str_to_rgb(bp, rgb))
	    bu_exit (1, "Illegal color: '%s' on line %d of file '%s'\n", bp, line_nm, f_name);
	add_to_table(rgb);
    }
}

static void print_table (void)
{
    int	i;

    printf("-----------\nColor Table\n-----------\n");
    for (i = 0; i < next_color; ++i)
	printf("%3d %3d %3d\n",
	    color_tbl[i][RED], color_tbl[i][GRN], color_tbl[i][BLU]);
    printf("-----------\n");
}

/*
 *		C O L O R _ D I F F ( )
 *
 *	Returns the square of the Euclidean distance in RGB space
 *	between a specified pixel (R/G/B triple) and a specified
 *	entry in the color table.
 */
static int color_diff (unsigned char *pix, int i)
{
    unsigned char	*cte;	/* The specified entry in the color table */

    cte = color_tbl[i];

    return (
	(pix[RED] - cte[RED]) * (pix[RED] - cte[RED]) +
	(pix[GRN] - cte[GRN]) * (pix[GRN] - cte[GRN]) +
	(pix[BLU] - cte[BLU]) * (pix[BLU] - cte[BLU])
    );
}

int
main (int argc, char **argv)
{
    char		*cf_name = 0;	/* name of color file */
    char		*inf_name;	/* name of input stream */
    char		*outf_name = NULL;	/*  "   "  output   "   */
    unsigned char	pixbuf[3];	/* the current input pixel */
    FILE		*infp = NULL;	/* input stream */
    FILE		*outfp = NULL;	/* output   "   */
    int			ch;		/* current char in command line */
    int			i;		/* dummy loop indices */
    unsigned char	rgb[3];		/* Specified color */
    int			best_color;	/* index of best match to pixbuf */
    int			best_diff;	/* error in best match */
    int			this_diff;	/* pixel-color_tbl difference */

    extern int	bu_optind;			/* index from bu_getopt(3C) */
    extern char	*bu_optarg;		/* argument from bu_getopt(3C) */

    /*
     *	Initialize the color table
     */
    color_tbl_size = 8;
    color_tbl = (unsigned char (*)[3])
	bu_malloc(color_tbl_size * 3 * sizeof(unsigned char), "color table");
    next_color = 0;

    /*
     *	Process the command line
     */
    while ((ch = bu_getopt(argc, argv, OPT_STRING)) != EOF)
	switch (ch)
	{
	    case 'c':
		if (! bu_str_to_rgb(bu_optarg, rgb))
		{
		    bu_log("Illegal color: '%s'\n", bu_optarg);
		    print_usage();
		    bu_exit (1, NULL);
		}
		add_to_table(rgb);
		cf_name = 0;
		break;
	    case 'f':
		cf_name = bu_optarg;
		next_color = 0;
		break;
	    case 'x':
		if (sscanf(bu_optarg, "%x", (unsigned int *) &debug) != 1)
		{
		    bu_log("Invalid debug-flag value: '%s'\n", bu_optarg);
		    print_usage();
		    print_debug_usage();
		    bu_exit (1, NULL);
		}
		break;
	    case '?':
	    default:
		print_usage();
		exit (ch != '?');
	}
    switch (argc - bu_optind)
    {
	case 0:
	    inf_name = "stdin";
	    infp = stdin;
	    /* Break intentionally missing */
	case 1:
	    outf_name = "stdout";
	    outfp = stdout;
	    /* Break intentionally missing */
	case 2:
	    break;
	default:
	    print_usage();
	    bu_exit (1, NULL);
    }

    /*
     *	Open input and output files, as necessary
     */
    if (infp == NULL)
    {
	inf_name = argv[bu_optind];
	if ((infp = fopen(inf_name, "r")) == NULL)
	    bu_exit (1, "Cannot open input file '%s'\n", inf_name);
	if (outfp == NULL)
	{
	    outf_name = argv[++bu_optind];
	    if ((outfp = fopen(outf_name, "w")) == NULL)
		bu_exit (1, "Cannot open output file '%s'\n", outf_name);
	}
    }

    /*
     *	Ensure that infp is kosher,
     */
    if (infp == stdin)
    {
	if (isatty(fileno(stdin)))
	{
	    bu_log("FATAL: pixclump reads only from file or pipe\n");
	    print_usage();
	    bu_exit (1, NULL);
	}
    }

    /*
     *	Ensure that the color table is nonempty
     */
    if (cf_name != 0)
	fill_table(cf_name);
    if (next_color == 0)
    {
	bu_log("pixclump: No colors specified\n");
	print_usage();
	bu_exit (1, NULL);
    }
    if (debug & PC_DEBUG_TABLE)
	print_table();

    while (fread((void *) pixbuf, 3 * sizeof(unsigned char), 1, infp) == 1)
    {
	best_color = 0;
	best_diff = color_diff(pixbuf, 0);
	for (i = 1; i < next_color; ++i)
	{
	    if ((this_diff = color_diff(pixbuf, i)) < best_diff)
	    {
		best_color = i;
		best_diff = this_diff;
	    }
	    if (debug & PC_DEBUG_MATCH)
		bu_log("p=%3d/%3d/%3d, t=%d %3d/%3d/%3d,  b=%d, %3d/%3d/%3d\n",
		    pixbuf[RED], pixbuf[GRN], pixbuf[BLU],
		    i,
		    color_tbl[i][RED],
		    color_tbl[i][GRN],
		    color_tbl[i][BLU],
		    best_color,
		    color_tbl[best_color][RED],
		    color_tbl[best_color][GRN],
		    color_tbl[best_color][BLU]);
	}
	if (fwrite((genptr_t) color_tbl[best_color],
		    3 * sizeof(unsigned char), 1, outfp) != 1)
	    bu_exit (1, "pixclump:  Error writing pixel to file '%s'\n", outf_name);
    }
    return 0;
}

/*
 * Local Variables:
 * mode: C
 * tab-width: 8
 * c-basic-offset: 4
 * indent-tabs-mode: t
 * End:
 * ex: shiftwidth=4 tabstop=8
 */
@


14.11
log
@collapse bu_log();bu_exit(#,""); as much as possible
@
text
@d33 1
a33 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/util/pixclump.c,v 14.10 2007/11/21 18:55:37 erikgreenwald Exp $ (BRL)";
d203 1
a203 1
		    bu_exit (1, "");
d218 1
a218 1
		    bu_exit (1, "");
d240 1
a240 1
	    bu_exit (1, "");
d268 1
a268 1
	    bu_exit (1, "");
d281 1
a281 1
	bu_exit (1, "");
@


14.10
log
@exit->bu_exit where applicable
@
text
@d33 1
a33 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/util/pixclump.c,v 14.9 2007/01/23 01:13:56 brlcad Exp $ (BRL)";
d118 1
a118 4
    {
	bu_log ("Cannot open color file '%s'\n", bu_optarg);
	bu_exit (1, "");
    }
d129 1
a129 5
	{
	    bu_log("Illegal color: '%s' on line %d of file '%s'\n",
		bp, line_nm, f_name);
	    bu_exit (1, "");
	}
d250 1
a250 4
	{
	    bu_log ("Cannot open input file '%s'\n", inf_name);
	    bu_exit (1, "");
	}
d255 1
a255 4
	    {
		bu_log ("Cannot open output file '%s'\n", outf_name);
		bu_exit (1, "");
	    }
d311 1
a311 4
	{
	    bu_log("pixclump:  Error writing pixel to file '%s'\n", outf_name);
	    bu_exit (1, "");
	}
@


14.9
log
@Sweeping license updates.  Documentation is fully relicensed to the BSD Documentation License (a minor variant of the FreeBSD Documentation License and BSD License).  All GPL code (mostly application code) is converted to the LGPL and now also specifically declares version 2.1, revoking the blank check to the FSF.  The intent of these sweeping changes are to simplify the licensing terms and increase overall flexibility of use, both externally (to users for their purposes) and internally (to allow application code to be migrated to libraries without creating GPL libraries).  As a collective work, BRL-CAD is now LGPL.
@
text
@d33 1
a33 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/util/pixclump.c,v 14.8 2007/01/20 14:37:06 brlcad Exp $ (BRL)";
d120 1
a120 1
	exit (1);
d135 1
a135 1
	    exit (1);
d210 1
a210 1
		    exit (1);
d225 1
a225 1
		    exit (1);
d247 1
a247 1
	    exit (1);
d259 1
a259 1
	    exit (1);
d267 1
a267 1
		exit (1);
d281 1
a281 1
	    exit (1);
d294 1
a294 1
	exit (1);
d326 1
a326 1
	    exit (1);
@


14.8
log
@update copyright to 2007
@
text
@d8 2
a9 3
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation; either version 2 of the
 * License, or (at your option) any later version.
d14 1
a14 1
 * General Public License for more details.
d16 2
a17 2
 * You should have received a copy of the GNU General Public License
 * along with this file; see the file named COPYING for more
d33 1
a33 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/util/pixclump.c,v 14.7 2006/02/27 10:08:41 brlcad Exp $ (BRL)";
@


14.7
log
@stdlib.h and exit()
@
text
@d4 1
a4 1
 * Copyright (c) 1997-2006 United States Government as represented by
d34 1
a34 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/util/pixclump.c,v 14.6 2006/01/18 06:46:27 brlcad Exp $ (BRL)";
@


14.6
log
@update copyright to 2006
@
text
@d34 1
a34 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/util/pixclump.c,v 14.5 2005/10/23 04:44:39 brlcad Exp $ (BRL)";
d40 1
a40 1
# include <unistd.h>
d42 1
a42 2


d45 1
d50 1
@


14.5
log
@trailing ws
@
text
@d4 1
a4 1
 * Copyright (C) 1997-2005 United States Government as represented by
d34 1
a34 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/util/pixclump.c,v 14.4 2005/09/21 19:05:37 brlcad Exp $ (BRL)";
@


14.4
log
@needs bu.h for bu_getopt
@
text
@d28 1
a28 1
 *  
d34 1
a34 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/util/pixclump.c,v 14.3 2005/01/30 20:31:33 brlcad Exp $ (BRL)";
d42 1
a42 1
                                                                                                                                                                            
@


14.3
log
@update copyright to 2005
@
text
@d34 1
a34 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/util/pixclump.c,v 14.2 2004/12/21 03:45:41 butler Exp $ (BRL)";
d119 1
a119 1
	bu_log ("Cannot open color file '%s'\n", optarg);
d188 2
a189 2
    extern int	optind;			/* index from getopt(3C) */
    extern char	*optarg;		/* argument from getopt(3C) */
d202 1
a202 1
    while ((ch = getopt(argc, argv, OPT_STRING)) != EOF)
d206 1
a206 1
		if (! bu_str_to_rgb(optarg, rgb))
d208 1
a208 1
		    bu_log("Illegal color: '%s'\n", optarg);
d216 1
a216 1
		cf_name = optarg;
d220 1
a220 1
		if (sscanf(optarg, "%x", (unsigned int *) &debug) != 1)
d222 1
a222 1
		    bu_log("Invalid debug-flag value: '%s'\n", optarg);
d233 1
a233 1
    switch (argc - optind)
d255 1
a255 1
	inf_name = argv[optind];
d263 1
a263 1
	    outf_name = argv[++optind];
@


14.3.6.1
log
@merge changes from HEAD aka rel-7-6-4 to the rel-7-6-branch just in case someone peeks a gander or tries to continue/build the branch
@
text
@d28 1
a28 1
 *
d34 1
a34 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
d42 1
a42 1

d119 1
a119 1
	bu_log ("Cannot open color file '%s'\n", bu_optarg);
d188 2
a189 2
    extern int	bu_optind;			/* index from bu_getopt(3C) */
    extern char	*bu_optarg;		/* argument from bu_getopt(3C) */
d202 1
a202 1
    while ((ch = bu_getopt(argc, argv, OPT_STRING)) != EOF)
d206 1
a206 1
		if (! bu_str_to_rgb(bu_optarg, rgb))
d208 1
a208 1
		    bu_log("Illegal color: '%s'\n", bu_optarg);
d216 1
a216 1
		cf_name = bu_optarg;
d220 1
a220 1
		if (sscanf(bu_optarg, "%x", (unsigned int *) &debug) != 1)
d222 1
a222 1
		    bu_log("Invalid debug-flag value: '%s'\n", bu_optarg);
d233 1
a233 1
    switch (argc - bu_optind)
d255 1
a255 1
	inf_name = argv[bu_optind];
d263 1
a263 1
	    outf_name = argv[++bu_optind];
@


14.2
log
@GPL license changes
@
text
@d4 1
a4 1
 * Copyright (c) 1997-2004 United States Government as represented by
d34 1
a34 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/util/pixclump.c,v 14.1 2004/11/16 19:42:32 morrison Exp $ (BRL)";
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d1 21
a21 2
/*
 *			P I X C L U M P . C
a31 4
 *  
 *  Copyright Notice -
 *	This software is Copyright (C) 1997-2004 by the United States Army.
 *	All rights reserved.
d34 1
a34 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/util/pixclump.c,v 1.4 2004/08/02 23:01:53 morrison Exp $ (BRL)";
@


1.4
log
@replace the wrapped config.h block with common.h
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/util/pixclump.c,v 1.3 2004/06/09 18:21:39 erikg Exp $ (BRL)";
d316 10
@


1.3
log
@include unistd.h for getopt stuff
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/util/pixclump.c,v 1.2 2004/06/08 22:04:45 morrison Exp $ (BRL)";
d22 1
a22 3
#ifdef HAVE_CONFIG_H
# include "config.h"
#endif
@


1.2
log
@obliterate externs.h
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
d25 5
@


1.1
log
@Vast reorganization begins.  Sources moved from top-level directories into src/.
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/util/pixclump.c,v 1.11 2004/05/10 15:30:50 erikg Exp $ (BRL)";
a25 1

a28 1
#include "externs.h"		/* For getopt(), etc. */
@

