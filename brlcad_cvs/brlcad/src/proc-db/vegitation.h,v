head	14.9;
access;
symbols
	rel-7-10-4:14.9
	STABLE:14.9.0.2
	stable-branch:14.3
	rel-7-10-2:14.9
	rel-7-10-0:14.9
	rel-7-8-4:14.7
	rel-7-8-2:14.7
	rel-7-8-0:14.7
	trimnurbs-branch:14.7.0.2
	help:14.7
	temp_tag:14.5
	bobWinPort-20051223-freeze:14.4
	postmerge-20051223-bobWinPort:14.5
	premerge-20051223-bobWinPort:14.5
	rel-7-6-6:14.5
	rel-7-6-4:14.5
	rel-7-6-2:14.4
	rel-7-6-branch:14.4.0.6
	rel-7-6-0:14.4
	rel-7-4-2:14.4
	rel-7-4-branch:14.4.0.4
	bobWinPort:14.4.0.2
	rel-7-4-0:14.4
	rel-7-2-6:14.4
	rel-7-2-4:14.4
	rel-7-2-2:14.3
	rel-7-2-0:14.3
	rel-7-0-4:14.2
	rel-7-0-2:14.2
	rel-7-0-1:14.2
	opensource-post:14.2
	opensource-pre:1.1
	rel-7-0-branch:1.1.0.2
	rel-7-0:1.1;
locks; strict;
comment	@ * @;


14.9
date	2007.01.23.01.13.45;	author brlcad;	state Exp;
branches;
next	14.8;

14.8
date	2007.01.20.14.36.59;	author brlcad;	state Exp;
branches;
next	14.7;

14.7
date	2006.01.28.00.36.29;	author brlcad;	state Exp;
branches;
next	14.6;

14.6
date	2006.01.18.06.46.23;	author brlcad;	state Exp;
branches;
next	14.5;

14.5
date	2005.10.23.04.44.37;	author brlcad;	state Exp;
branches;
next	14.4;

14.4
date	2005.05.03.05.18.34;	author brlcad;	state Exp;
branches
	14.4.6.1;
next	14.3;

14.3
date	2005.01.30.20.31.09;	author brlcad;	state Exp;
branches;
next	14.2;

14.2
date	2004.12.21.03.46.09;	author butler;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.30;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.20.15.20.41;	author morrison;	state Exp;
branches;
next	;

14.4.6.1
date	2005.11.13.13.46.19;	author brlcad;	state Exp;
branches;
next	;


desc
@@


14.9
log
@Sweeping license updates.  Documentation is fully relicensed to the BSD Documentation License (a minor variant of the FreeBSD Documentation License and BSD License).  All GPL code (mostly application code) is converted to the LGPL and now also specifically declares version 2.1, revoking the blank check to the FSF.  The intent of these sweeping changes are to simplify the licensing terms and increase overall flexibility of use, both externally (to users for their purposes) and internally (to allow application code to be migrated to libraries without creating GPL libraries).  As a collective work, BRL-CAD is now LGPL.
@
text
@/*                    V E G I T A T I O N . H
 * BRL-CAD
 *
 * Copyright (c) 1998-2007 United States Government as represented by
 * the U.S. Army Research Laboratory.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * version 2.1 as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this file; see the file named COPYING for more
 * information.
 */
/** @@file vegitation.h
 *
 *      This is the header file to the program that generages geometry
 *      that resembles or approximates a plant.  More specifically,
 *      the generator is geared towards generating trees and shrubbery.
 *      The plants are generated based on specification of growth
 *      parameters such as growth and branching rates.
 *
 *  Author -
 *      Christopher Sean Morrison
 *
 *  Source -
 *      The U. S. Army Research Laboratory
 *      Aberdeen Proving Ground, Maryland  21005-5068  USA
 */
#ifndef __VEGITATION_H__
#define __VEGITATION_H__

#include "common.h"

#include <stdlib.h>
#include <stdio.h>
#include <limits.h>
#include <math.h>
#include <time.h>

#include "machine.h"
#include "bu.h"
#include "vmath.h"
#include "bn.h"
#include "raytrace.h"
#include "wdb.h"

#define ZERO_TOLERANCE 0.000005

typedef struct growthSegment {
  unsigned long id;
  point_t position;
  vect_t direction;
  double length;
  double startRadius;
  double endRadius;
  unsigned int age;
} growthSegment_t;
#define INIT_GROWTHSEGMENT_T(_i) { (_i)->id=0; VSETALL((_i)->position, 0.0); VSETALL((_i)->direction, 0.0); (_i)->length = 0.0; (_i)->startRadius = 0.0; (_i)->endRadius = 0.0; (_i)->age = 0; }


/* not really a list (it is a container), but close enough */
typedef struct segmentList {
  unsigned int capacity;
  unsigned int count;
  growthSegment_t **segment;
} segmentList_t;
#define INIT_GROWTHSEGMENTLIST_T(_i) { (_i)->capacity = 0; (_i)->count = 0; (_i)->segment=NULL; }


typedef struct structure {
  int subStructureCapacity;
  int subStructureCount;
  struct structure **subStructure;
  unsigned int age;
  int segmentCapacity;
  int segmentCount;
  growthSegment_t **segment;
} structure_t;
#define INIT_STRUCTURE_T(_i) { (_i)->subStructureCapacity = 0; (_i)->subStructureCount = 0; (_i)->subStructure=NULL; (_i)->age=0; (_i)->segmentCapacity=0; (_i)->segmentCount=0; (_i)->segment=NULL; }


#define TRUE 1
#define FALSE 0

typedef unsigned char bool;

typedef struct growthPoint {
  bool alive;
  unsigned int growthEnergy;
  int growthEnergyDelta; /* amount growth energy changes per age */
  double length;
  double radius;
  double lengthDecay;
  double radiusDecay;
  point_t position;
  vect_t direction;
  unsigned int age;
  structure_t *structure; /* which structure are we growing on */
} growthPoint_t;
#define INIT_GROWTHPOINT_T(_i) { (_i)->alive=TRUE; (_i)->growthEnergy=0; (_i)->growthEnergyDelta=0; (_i)->length=0.0; (_i)->radius=0.0; (_i)->lengthDecay=0.0; (_i)->radiusDecay=0.0; VSETALL((_i)->position, 0.0); VSETALL((_i)->direction, 0.0); (_i)->age=0; (_i)->structure = NULL; }

/* XXX not really a list -- it is a container object for a list */
typedef struct growthPointList {
  unsigned int capacity;
  unsigned int count;
  growthPoint_t **point;
} growthPointList_t;
#define INIT_GROWTHPOINTLIST_T(_i) { (_i)->capacity = 0; (_i)->count = 0; (_i)->point=NULL; }


typedef struct characteristic {
  double totalHeight; /* ideal height */
  double totalRadius; /* ideal bounding radius */

  double minLength;
  double minRadius;
  double lengthMinVariation;
  double lengthMaxVariation;
  double radiusMinVariation;
  double radiusMaxVariation;

  vect_t dirMinVariation; /* new segments are at least this delta from the growth direction */
  vect_t dirMaxVariation; /* new segments are no greater than this delta from the growth direction */

  double branchingRate;  /* probability that a segment will branch per timestep */
  double branchAtEndpointRate; /* probability to branch on a segment end point */
  unsigned int minBranchingAge; /* segments younger than this cannot branch */
  unsigned int maxBranchingAge; /* segments older than this cannot branch */

  unsigned int regrowthAttempts; /* how many times to keep trying to grow when blocked */
  unsigned int growthEnergy; /* how much it groes per timestep (and potentially branches) */

  vect_t branchMinVariation;
  vect_t branchMaxVariation;

  double dyingRate;  /* rate at which a segment will fall off */
  unsigned int dyingAge; /* segments older than this may fall off (they are dead) */

  double lengthDecayRate; /* rate at which the length decays */
  double radiusDecayRate; /* rate at which the radius decays */


} characteristic_t;
#define INIT_CHARACTERISTIC_T(_i) { (_i)->totalHeight = (_i)->totalRadius = (_i)->minLength = (_i)->minRadius = (_i)->lengthMinVariation = (_i)->lengthMaxVariation = (_i)->radiusMinVariation = (_i)->radiusMaxVariation = 0.0; VSETALL((_i)->dirMinVariation, 0.0); VSETALL((_i)->dirMaxVariation, 0.0); (_i)->branchingRate = (_i)->branchAtEndpointRate = 0.0, (_i)->minBranchingAge = (_i)->maxBranchingAge = (_i)->regrowthAttempts = (_i)->growthEnergy = 0; VSETALL((_i)->branchMinVariation, 0.0); VSETALL((_i)->dirMaxVariation, 0.0); (_i)->dyingRate = 0.0, (_i)->dyingAge = 0; (_i)->lengthDecayRate = (_i)->radiusDecayRate = 0.0; }


typedef struct plant {
  /* static plant properties */
  point_t position;
  double radius; /* inital base trunk radius */
  vect_t direction; /* general initial growth direction */

  /* variable plant properties */
  characteristic_t *characteristic;
  unsigned int age;

  /* dynamic plant structure */
  structure_t *structure;
  growthPointList_t *growth;

  unsigned long segmentCount;
} plant_t;
#define INIT_PLANT_T(_i) { VSETALL((_i)->position, 0.0); (_i)->radius=0.0; VSET((_i)->direction, 0.0, 0.0, 1.0); (_i)->characteristic = NULL; (_i)->age=0; (_i)->structure = NULL; (_i)->growth = NULL; (_i)->segmentCount = 0; }


#define MAX_STRING_LENGTH 128

typedef struct outputCounter {
  unsigned int primitives;
  unsigned int combinations;
  struct wmember combination;
  char name[MAX_STRING_LENGTH];
  struct wmember region;
  char plantName[MAX_STRING_LENGTH];
} outputCounter_t;
#define INIT_OUTPUTCOUNTER_T(_i) { (_i)->primitives=0; (_i)->combinations=0; BU_LIST_INIT(&((_i)->combination).l); sprintf((_i)->name, "XXX"); BU_LIST_INIT(&((_i)->region).l); snprintf((_i)->plantName, MAX_STRING_LENGTH, "plant.r"); }


#endif /* __VEGITATION_H__ */

/*
 * Local Variables:
 * mode: C
 * tab-width: 8
 * c-basic-offset: 4
 * indent-tabs-mode: t
 * End:
 * ex: shiftwidth=4 tabstop=8
 */
@


14.8
log
@update copyright to 2007
@
text
@d8 2
a9 3
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation; either version 2 of the
 * License, or (at your option) any later version.
d14 1
a14 1
 * General Public License for more details.
d16 2
a17 2
 * You should have received a copy of the GNU General Public License
 * along with this file; see the file named COPYING for more
@


14.7
log
@header cleanup, atof() requires stdlib.h on altix/posix, fix 64-bitness
@
text
@d4 1
a4 1
 * Copyright (c) 1998-2006 United States Government as represented by
@


14.6
log
@update copyright to 2006
@
text
@d41 1
@


14.5
log
@trailing ws
@
text
@d4 1
a4 1
 * Copyright (C) 1998-2005 United States Government as represented by
@


14.4
log
@more config.h references converted to brlcad_config.h (or common.h where appropriate) that apparently slipped under the radar
@
text
@d24 1
a24 1
 *      that resembles or approximates a plant.  More specifically, 
d31 1
a31 1
 *  
d64 1
a64 1
#define INIT_GROWTHSEGMENT_T(_i) { (_i)->id=0; VSETALL((_i)->position, 0.0); VSETALL((_i)->direction, 0.0); (_i)->length = 0.0; (_i)->startRadius = 0.0; (_i)->endRadius = 0.0; (_i)->age = 0; }  
d123 4
a126 4
  double lengthMinVariation; 
  double lengthMaxVariation; 
  double radiusMinVariation; 
  double radiusMaxVariation; 
d130 1
a130 1
  
d138 1
a138 1
  
d147 1
a147 1
  
d160 1
a160 1
  characteristic_t *characteristic; 
d175 1
a175 1
  unsigned int primitives; 
@


14.4.6.1
log
@merge changes from HEAD aka rel-7-6-4 to the rel-7-6-branch just in case someone peeks a gander or tries to continue/build the branch
@
text
@d24 1
a24 1
 *      that resembles or approximates a plant.  More specifically,
d31 1
a31 1
 *
d64 1
a64 1
#define INIT_GROWTHSEGMENT_T(_i) { (_i)->id=0; VSETALL((_i)->position, 0.0); VSETALL((_i)->direction, 0.0); (_i)->length = 0.0; (_i)->startRadius = 0.0; (_i)->endRadius = 0.0; (_i)->age = 0; }
d123 4
a126 4
  double lengthMinVariation;
  double lengthMaxVariation;
  double radiusMinVariation;
  double radiusMaxVariation;
d130 1
a130 1

d138 1
a138 1

d147 1
a147 1

d160 1
a160 1
  characteristic_t *characteristic;
d175 1
a175 1
  unsigned int primitives;
@


14.3
log
@update copyright to 2005
@
text
@d39 1
a39 3
#ifdef HAVE_CONFIG_H
# include "config.h"
#endif
@


14.2
log
@GPL license changes
@
text
@d4 1
a4 1
 * Copyright (c) 1998-2004 United States Government as represented by
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d1 21
a21 2
/*
 *                 V E G I T A T I O N . H
a34 9
 *  
 *  Distribution Notice -
 *      Re-distribution of this software is restricted, as described in
 *      your "Statement of Terms and Conditions for the Release of
 *      The BRL-CAD Package" agreement.
 *
 *  Copyright Notice -
 *      This software is Copyright (C) 1998-2004 by the United States Army
 *      in all countries except the USA.  All rights reserved.
@


1.1
log
@Vast reorganization begins.  Sources moved from top-level directories into src/.
@
text
@d178 10
@

