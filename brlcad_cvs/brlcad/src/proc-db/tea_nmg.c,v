head	14.12;
access;
symbols
	rel-7-10-4:14.12
	STABLE:14.12.0.2
	stable-branch:14.3
	rel-7-10-2:14.12
	rel-7-10-0:14.11
	rel-7-8-4:14.7
	rel-7-8-2:14.7
	rel-7-8-0:14.7
	trimnurbs-branch:14.6.0.2
	help:14.6
	temp_tag:14.5
	bobWinPort-20051223-freeze:14.3
	postmerge-20051223-bobWinPort:14.5
	premerge-20051223-bobWinPort:14.5
	rel-7-6-6:14.5
	rel-7-6-4:14.5
	rel-7-6-2:14.3
	rel-7-6-branch:14.3.0.6
	rel-7-6-0:14.3
	rel-7-4-2:14.3
	rel-7-4-branch:14.3.0.4
	bobWinPort:14.3.0.2
	rel-7-4-0:14.3
	rel-7-2-6:14.3
	rel-7-2-4:14.3
	rel-7-2-2:14.3
	rel-7-2-0:14.3
	rel-7-0-4:14.2
	rel-7-0-2:14.2
	rel-7-0-1:14.2
	opensource-post:14.2
	opensource-pre:1.3
	rel-7-0-branch:1.3.0.2
	rel-7-0:1.3;
locks; strict;
comment	@ * @;


14.12
date	2007.05.18.04.13.50;	author brlcad;	state Exp;
branches;
next	14.11;

14.11
date	2007.02.02.08.48.30;	author brlcad;	state Exp;
branches;
next	14.10;

14.10
date	2007.01.27.01.41.45;	author brlcad;	state Exp;
branches;
next	14.9;

14.9
date	2007.01.23.01.13.44;	author brlcad;	state Exp;
branches;
next	14.8;

14.8
date	2007.01.20.14.36.59;	author brlcad;	state Exp;
branches;
next	14.7;

14.7
date	2006.04.05.19.54.28;	author brlcad;	state Exp;
branches;
next	14.6;

14.6
date	2006.01.18.06.46.23;	author brlcad;	state Exp;
branches
	14.6.2.1;
next	14.5;

14.5
date	2005.10.23.04.44.37;	author brlcad;	state Exp;
branches;
next	14.4;

14.4
date	2005.09.09.09.44.09;	author brlcad;	state Exp;
branches;
next	14.3;

14.3
date	2005.01.30.20.31.09;	author brlcad;	state Exp;
branches
	14.3.6.1;
next	14.2;

14.2
date	2004.12.21.03.46.09;	author butler;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.30;	author morrison;	state Exp;
branches;
next	1.3;

1.3
date	2004.08.02.23.01.52;	author morrison;	state Exp;
branches;
next	1.2;

1.2
date	2004.06.08.22.04.33;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.20.15.20.41;	author morrison;	state Exp;
branches;
next	;

14.3.6.1
date	2005.11.13.13.46.19;	author brlcad;	state Exp;
branches;
next	;

14.6.2.1
date	2006.04.07.19.34.20;	author jlowenz;	state Exp;
branches;
next	;


desc
@@


14.12
log
@rt_bomb() has been deprecated since before 7.0, but even our sources weren't properly updated to reflect this change.  update all of our sources to use bu_bomb() now.
@
text
@/*                       T E A _ N M G . C
 * BRL-CAD
 *
 * Copyright (c) 2004-2007 United States Government as represented by
 * the U.S. Army Research Laboratory.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * version 2.1 as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this file; see the file named COPYING for more
 * information.
 */
/** @@file tea_nmg.c
 *
 * Convert the Utah Teapot description from the IEEE CG&A database to the
 * BRL-CAD t-NURBS NMG format. (Note that this has the closed bottom)
 *
 *  Authors -
 *	John R. Anderson
 *	Paul R. Stay
 *
 *  Source -
 *	The U. S. Army Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5068  USA
 */
#ifndef lint
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/proc-db/tea_nmg.c,v 14.11 2007/02/02 08:48:30 brlcad Exp $ (ARL)";
#endif

/* Header files which are used for this example */

#include "common.h"

#include <stdlib.h>
#include <stdio.h>		/* Direct the output to stdout */

#include "machine.h"		/* BRL-CAD specific machine data types */
#include "vmath.h"		/* BRL-CAD Vector macros */
#include "nmg.h"
#include "nurb.h"		/* BRL-CAD Spline data structures */
#include "raytrace.h"
#include "wdb.h"
#include "../librt/debug.h"	/* RT_G_DEBUG flag settings */

#include "./tea.h"		/* IEEE Data Structures */
#include "./ducks.h"		/* Teapot Vertex data */
#include "./patches.h"		/* Teapot Patch data */

extern dt ducks[DUCK_COUNT];		/* Vertex data of teapot */
extern pt patches[PATCH_COUNT];		/* Patch data of teapot */

char *Usage = "This program ordinarily generates a database on stdout.\n\
	Your terminal probably wouldn't like it.";

static struct shell *s;
static struct model *m;
static struct bn_tol tol;

void dump_patch(int (*patch)[4]);

struct rt_wdb *outfp;

int
main(int argc, char **argv) 			/* really has no arguments */

{
	struct nmgregion *r;
	char * id_name = "BRL-CAD t-NURBS NMG Example";
	char * tea_name = "UtahTeapot";
	char * uplot_name = "teapot.pl";
	struct bu_list vhead;
	FILE *fp;
	int i;

	tol.magic = BN_TOL_MAGIC;
	tol.dist = 0.005;
	tol.dist_sq = tol.dist * tol.dist;
	tol.perp = 1e-6;
	tol.para = 1 - tol.perp;

	BU_LIST_INIT( &rt_g.rtg_vlfree );

	outfp = wdb_fopen( "tea_nmg.g" );

	rt_g.debug |= DEBUG_ALLRAYS;	/* Cause core dumps on bu_bomb(), but no extra messages */

	while ((i=bu_getopt(argc, argv, "d")) != EOF) {
		switch (i) {
		case 'd' : rt_g.debug |= DEBUG_MEM | DEBUG_MEM_FULL; break;
		default	:
			(void)fprintf(stderr,
				"Usage: %s [-d] > database.g\n", *argv);
			return(-1);
		}
	}

	mk_id( outfp, id_name);

	m = nmg_mm();
	NMG_CK_MODEL( m );
	r = nmg_mrsv( m );
	NMG_CK_REGION( r );
	s = BU_LIST_FIRST( shell , &r->s_hd );
	NMG_CK_SHELL( s );

	/* Step through each patch and create a NMG TNURB face
	 * representing the patch then dump them out.
	 */

	for( i = 0; i < PATCH_COUNT; i++)
	{
		dump_patch( patches[i] );
	}

	/* Connect up the coincident vertexuses and edges */
	(void)nmg_model_fuse( m , &tol );

	/* write NMG to output file */
	(void)mk_nmg( outfp , tea_name , m );
	wdb_close(outfp);

	/* Make a vlist drawing of the model */
	BU_LIST_INIT( &vhead );
	nmg_m_to_vlist( &vhead , m , 0 );

	/* Make a UNIX plot file from this vlist */
	if( (fp=fopen( uplot_name , "w" )) == NULL )
	{
		bu_log( "Cannot open plot file: %s\n" , uplot_name );
		perror( "teapot_nmg" );
	}
	else
		rt_vlist_to_uplot( fp , &vhead );

	return(0);
}

/* IEEE patch number of the Bi-Cubic Bezier patch and convert it
 * to a B-Spline surface (Bezier surfaces are a subset of B-spline surfaces
 * and output it to a BRL-CAD binary format.
 */
void
dump_patch(int (*patch)[4])
{
	struct vertex *verts[4];
	struct faceuse *fu;
	struct loopuse *lu;
	struct edgeuse *eu;
	int i,j, pt_type;
	fastf_t *mesh=NULL;
	fastf_t *ukv=NULL;
	fastf_t *vkv=NULL;

	/* U and V parametric Direction Spline parameters
	 * Cubic = order 4,
	 * knot size is Control point + order = 8
	 * control point size is 4
	 * point size is 3
	 */

	for( i=0 ; i<4 ; i++ )
		verts[i] = (struct vertex *)NULL;

	fu = nmg_cface( s , verts , 4 );
	NMG_CK_FACEUSE( fu );

	for( i=0 ; i<4 ; i++ )
	{
		struct vertexuse *vu;
		vect_t uvw;
		point_t pnt;
		int k,j;

		switch( i )
		{
			default:
			case 0:
				VSET( uvw , 0.0 , 0.0 , 0.0 );
				k = 0;
				j = 0;
				break;
			case 1:
				VSET( uvw , 1.0 , 0.0 , 0.0 );
				k = 0;
				j = 3;
				break;
			case 2:
				VSET( uvw , 1.0 , 1.0 , 0.0 );
				k = 3;
				j = 3;
				break;
			case 3:
				VSET( uvw , 0.0 , 1.0 , 0.0 );
				k = 3;
				j = 0;
				break;
		}

		VSET( pnt ,
			ducks[patch[k][j]-1].x * 1000 ,
			ducks[patch[k][j]-1].y * 1000 ,
			ducks[patch[k][j]-1].z * 1000 );
		nmg_vertex_gv( verts[i] , pnt );

		for( BU_LIST_FOR( vu , vertexuse , &verts[i]->vu_hd ) )
			nmg_vertexuse_a_cnurb( vu , uvw );
	}

	pt_type = RT_NURB_MAKE_PT_TYPE(3, RT_NURB_PT_XYZ, 0); /* see nurb.h for details */

	nmg_face_g_snurb( fu , 4 , 4 , 8 , 8 , ukv , vkv , 4 , 4 , pt_type , mesh );

	NMG_CK_FACE( fu->f_p );
	NMG_CK_FACE_G_SNURB( fu->f_p->g.snurb_p );
	mesh = fu->f_p->g.snurb_p->ctl_points;

	/* Copy the control points */

	for( i = 0; i< 4; i++)
	for( j = 0; j < 4; j++)
	{
		*mesh = ducks[patch[i][j]-1].x * 1000;
		*(mesh+1) = ducks[patch[i][j]-1].y * 1000;
		*(mesh+2) = ducks[patch[i][j]-1].z * 1000;
		mesh += 3;
	}

	/* Both u and v knot vectors are [ 0 0 0 0 1 1 1 1] */
	ukv = fu->f_p->g.snurb_p->u.knots;
	vkv = fu->f_p->g.snurb_p->v.knots;
	/* set the knot vectors */
	for( i=0 ; i<4 ; i++ )
	{
		*(ukv+i) = 0.0;
		*(vkv+i) = 0.0;
	}
	for( i=0 ; i<4 ; i++ )
	{
		*(ukv+4+i) = 1.0;
		*(vkv+4+i) = 1.0;
	}

	/* set eu geometry */
	pt_type = RT_NURB_MAKE_PT_TYPE(2, RT_NURB_PT_UV,0); /* see nurb.h for details */
	lu = BU_LIST_FIRST( loopuse , &fu->lu_hd );
	NMG_CK_LOOPUSE( lu );
	for( BU_LIST_FOR( eu , edgeuse , &lu->down_hd ) )
	{
#if 0
		nmg_edge_g_cnurb( eu , 2 , 0 , (fastf_t *)NULL , 2 ,
			pt_type , (fastf_t *)NULL );
#else
		nmg_edge_g_cnurb_plinear( eu );
#endif
	}
	nmg_face_bb( fu->f_p , &tol );
}

/*
 * Local Variables:
 * mode: C
 * tab-width: 8
 * c-basic-offset: 4
 * indent-tabs-mode: t
 * End:
 * ex: shiftwidth=4 tabstop=8
 */
@


14.11
log
@convert all of the lingering getopt calls to bu_getopt (as well as the related getopt globals optind, opterr, optarg) -- libbu's getopt has the benefit of being re-entrant and is portable to environments where getopt() may not be available.
@
text
@d34 1
a34 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/proc-db/tea_nmg.c,v 14.10 2007/01/27 01:41:45 brlcad Exp $ (ARL)";
d92 1
a92 1
	rt_g.debug |= DEBUG_ALLRAYS;	/* Cause core dumps on rt_bomb(), but no extra messages */
@


14.10
log
@ws. lots and lots of ws.  see sh/ws.sh for details (cases 'abcdeg').
@
text
@d34 1
a34 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/proc-db/tea_nmg.c,v 14.9 2007/01/23 01:13:44 brlcad Exp $ (ARL)";
d94 1
a94 1
	while ((i=getopt(argc, argv, "d")) != EOF) {
@


14.9
log
@Sweeping license updates.  Documentation is fully relicensed to the BSD Documentation License (a minor variant of the FreeBSD Documentation License and BSD License).  All GPL code (mostly application code) is converted to the LGPL and now also specifically declares version 2.1, revoking the blank check to the FSF.  The intent of these sweeping changes are to simplify the licensing terms and increase overall flexibility of use, both externally (to users for their purposes) and internally (to allow application code to be migrated to libraries without creating GPL libraries).  As a collective work, BRL-CAD is now LGPL.
@
text
@d34 1
a34 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/proc-db/tea_nmg.c,v 14.8 2007/01/20 14:36:59 brlcad Exp $ (ARL)";
d82 5
a86 5
        tol.magic = BN_TOL_MAGIC;
        tol.dist = 0.005;
        tol.dist_sq = tol.dist * tol.dist;
        tol.perp = 1e-6;
        tol.para = 1 - tol.perp;
@


14.8
log
@update copyright to 2007
@
text
@d8 2
a9 3
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation; either version 2 of the
 * License, or (at your option) any later version.
d14 1
a14 1
 * General Public License for more details.
d16 2
a17 2
 * You should have received a copy of the GNU General Public License
 * along with this file; see the file named COPYING for more
d34 1
a34 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/proc-db/tea_nmg.c,v 14.7 2006/04/05 19:54:28 brlcad Exp $ (ARL)";
@


14.7
log
@more header/warning cleanup from Intel compiler warnings on Altix
@
text
@d4 1
a4 1
 * Copyright (c) 2004-2006 United States Government as represented by
d35 1
a35 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/proc-db/tea_nmg.c,v 14.6 2006/01/18 06:46:23 brlcad Exp $ (ARL)";
@


14.6
log
@update copyright to 2006
@
text
@d35 1
a35 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/proc-db/tea_nmg.c,v 14.5 2005/10/23 04:44:37 brlcad Exp $ (ARL)";
d42 2
a44 2

#include <stdio.h>		/* Direct the output to stdout */
@


14.6.2.1
log
@update from HEAD
@
text
@d35 1
a35 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/proc-db/tea_nmg.c,v 14.6 2006/01/18 06:46:23 brlcad Exp $ (ARL)";
d42 2
a43 1
#include <stdlib.h>
a44 1

@


14.5
log
@trailing ws
@
text
@d4 1
a4 1
 * Copyright (C) 2004-2005 United States Government as represented by
d35 1
a35 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/proc-db/tea_nmg.c,v 14.4 2005/09/09 09:44:09 brlcad Exp $ (ARL)";
@


14.4
log
@BRL-CAD not BRLCAD, consistency
@
text
@d29 1
a29 1
 *  
d35 1
a35 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/proc-db/tea_nmg.c,v 14.3 2005/01/30 20:31:09 brlcad Exp $ (ARL)";
d73 1
a73 1
                       
d163 1
a163 1
	 * Cubic = order 4, 
@


14.3
log
@update copyright to 2005
@
text
@d35 1
a35 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/proc-db/tea_nmg.c,v 14.2 2004/12/21 03:46:09 butler Exp $ (ARL)";
d45 2
a46 2
#include "machine.h"		/* BRLCAD specific machine data types */
#include "vmath.h"		/* BRLCAD Vector macros */
d48 1
a48 1
#include "nurb.h"		/* BRLCAD Spline data structures */
d148 1
a148 1
 * and output it to a BRLCAD binary format.
@


14.3.6.1
log
@merge changes from HEAD aka rel-7-6-4 to the rel-7-6-branch just in case someone peeks a gander or tries to continue/build the branch
@
text
@d29 1
a29 1
 *
d35 1
a35 1
static const char RCSid[] = "@@(#)$Header$ (ARL)";
d45 2
a46 2
#include "machine.h"		/* BRL-CAD specific machine data types */
#include "vmath.h"		/* BRL-CAD Vector macros */
d48 1
a48 1
#include "nurb.h"		/* BRL-CAD Spline data structures */
d73 1
a73 1

d148 1
a148 1
 * and output it to a BRL-CAD binary format.
d163 1
a163 1
	 * Cubic = order 4,
@


14.2
log
@GPL license changes
@
text
@d4 2
a5 2
 * Copyright (c) 2004 United States Government as represented by the
 * U.S. Army Research Laboratory.
d35 1
a35 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/proc-db/tea_nmg.c,v 14.1 2004/11/16 19:42:30 morrison Exp $ (ARL)";
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d1 21
a21 1
/*		T E A . C
a32 3
 *  
 *  Distribution Status -
 *	Public Domain, Distribution Unlimited.
d35 1
a35 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/proc-db/tea_nmg.c,v 1.3 2004/08/02 23:01:52 morrison Exp $ (ARL)";
@


1.3
log
@replace the wrapped config.h block with common.h
@
text
@d18 1
a18 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/proc-db/tea_nmg.c,v 1.2 2004/06/08 22:04:33 morrison Exp $ (ARL)";
d249 10
@


1.2
log
@obliterate externs.h
@
text
@d18 1
a18 1
static const char RCSid[] = "@@(#)$Header$ (ARL)";
d23 1
a23 3
#ifdef HAVE_CONFIG_H
# include "config.h"
#endif
@


1.1
log
@Vast reorganization begins.  Sources moved from top-level directories into src/.
@
text
@d18 1
a18 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/proc-db/tea_nmg.c,v 11.12 2004/05/10 15:30:49 erikg Exp $ (ARL)";
a30 1
#include "externs.h"
@

