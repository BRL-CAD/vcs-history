head	14.7;
access;
symbols
	rel-7-10-4:14.7
	STABLE:14.7.0.2
	stable-branch:14.3
	rel-7-10-2:14.7
	rel-7-10-0:14.7
	rel-7-8-4:14.4
	rel-7-8-2:14.4
	rel-7-8-0:14.4
	trimnurbs-branch:14.4.0.2
	help:14.4
	temp_tag:14.3
	bobWinPort-20051223-freeze:14.3
	postmerge-20051223-bobWinPort:14.3
	premerge-20051223-bobWinPort:14.3
	rel-7-6-6:14.3
	rel-7-6-4:14.3
	rel-7-6-2:14.3
	rel-7-6-branch:14.3.0.6
	rel-7-6-0:14.3
	rel-7-4-2:14.3
	rel-7-4-branch:14.3.0.4
	bobWinPort:14.3.0.2
	rel-7-4-0:14.3
	rel-7-2-6:14.3
	rel-7-2-4:14.3
	rel-7-2-2:14.3
	rel-7-2-0:14.3
	rel-7-0-4:14.2
	rel-7-0-2:14.2
	rel-7-0-1:14.2
	opensource-post:14.2
	opensource-pre:1.3
	rel-7-0-branch:1.3.0.2
	rel-7-0:1.3;
locks; strict;
comment	@ * @;


14.7
date	2007.01.27.01.41.45;	author brlcad;	state Exp;
branches;
next	14.6;

14.6
date	2007.01.23.01.13.44;	author brlcad;	state Exp;
branches;
next	14.5;

14.5
date	2007.01.20.14.36.58;	author brlcad;	state Exp;
branches;
next	14.4;

14.4
date	2006.01.18.06.46.23;	author brlcad;	state Exp;
branches;
next	14.3;

14.3
date	2005.01.30.20.31.08;	author brlcad;	state Exp;
branches;
next	14.2;

14.2
date	2004.12.21.03.46.08;	author butler;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.30;	author morrison;	state Exp;
branches;
next	1.3;

1.3
date	2004.08.02.23.01.52;	author morrison;	state Exp;
branches;
next	1.2;

1.2
date	2004.06.08.22.04.32;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.20.15.20.39;	author morrison;	state Exp;
branches;
next	;


desc
@@


14.7
log
@ws. lots and lots of ws.  see sh/ws.sh for details (cases 'abcdeg').
@
text
@/*                       B O T T E S T . C
 * BRL-CAD
 *
 * Copyright (c) 1999-2007 United States Government as represented by
 * the U.S. Army Research Laboratory.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * version 2.1 as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this file; see the file named COPYING for more
 * information.
 */
/** @@file bottest.c
 *
 *  Program to generate test BOT solids
 *
 *  Author -
 *	John Anderson
 *
 *  Source -
 *	The U. S. Army Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5068  USA
 */
#ifndef lint
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/proc-db/bottest.c,v 14.6 2007/01/23 01:13:44 brlcad Exp $ (BRL)";
#endif

#include "common.h"


#include <stdio.h>
#include <math.h>
#include "machine.h"
#include "bu.h"
#include "vmath.h"
#include "raytrace.h"
#include "wdb.h"
#include "rtgeom.h"

struct rt_wdb *outfp;

int
main(int argc, char **argv)
{
	fastf_t vertices[36];
	int faces[15];
	struct bu_bitv *face_mode;
	fastf_t thickness[4];

	outfp = wdb_fopen( "bot-test.g" );
	mk_id( outfp, "BOT test" );

	VSET( vertices, 0.0, 0.0, 0.0 )
	VSET( &vertices[3], 0.0, 100.0, 0.0 )
	VSET( &vertices[6], 0.0, 100.0, 50.0 )
	VSET( &vertices[9], 200.0, 0.0, 0.0 )

	/* face #1 */
	faces[0] = 0;
	faces[1] = 1;
	faces[2] = 2;

	/* face #2 */
	faces[3] = 0;
	faces[4] = 2;
	faces[5] = 3;

	/* face #3 */
	faces[6] = 0;
	faces[7] = 1;
	faces[8] = 3;

	/* face #4 */
	faces[9] = 1;
	faces[10] = 2;
	faces[11] = 3;

	mk_bot( outfp, "bot_u_surf", RT_BOT_SURFACE, RT_BOT_UNORIENTED, 0, 4, 4, vertices, faces, (fastf_t *)NULL, (struct bu_bitv *)NULL );

	/* face #1 */
	faces[0] = 0;
	faces[1] = 2;
	faces[2] = 1;

	/* face #2 */
	faces[3] = 0;
	faces[4] = 3;
	faces[5] = 2;

	/* face #3 */
	faces[6] = 0;
	faces[7] = 1;
	faces[8] = 3;

	/* face #4 */
	faces[9] = 1;
	faces[10] = 2;
	faces[11] = 3;

	mk_bot( outfp, "bot_ccw_surf", RT_BOT_SURFACE, RT_BOT_CCW, 0, 4, 4, vertices, faces, (fastf_t *)NULL, (struct bu_bitv *)NULL );


	/* face #1 */
	faces[0] = 1;
	faces[1] = 2;
	faces[2] = 0;

	/* face #2 */
	faces[3] = 2;
	faces[4] = 3;
	faces[5] = 0;

	/* face #3 */
	faces[6] = 3;
	faces[7] = 1;
	faces[8] = 0;

	/* face #4 */
	faces[9] = 3;
	faces[10] = 2;
	faces[11] = 1;

	mk_bot( outfp, "bot_cw_surf", RT_BOT_SURFACE, RT_BOT_CW, 0, 4, 4, vertices, faces, (fastf_t *)NULL, (struct bu_bitv *)NULL );


	/* face #1 */
	faces[0] = 0;
	faces[1] = 1;
	faces[2] = 2;

	/* face #2 */
	faces[3] = 0;
	faces[4] = 2;
	faces[5] = 3;

	/* face #3 */
	faces[6] = 0;
	faces[7] = 1;
	faces[8] = 3;

	/* face #4 */
	faces[9] = 1;
	faces[10] = 2;
	faces[11] = 3;

	mk_bot( outfp, "bot_u_solid", RT_BOT_SOLID, RT_BOT_UNORIENTED, 0, 4, 4, vertices, faces, (fastf_t *)NULL, (struct bu_bitv *)NULL );

	/* face #1 */
	faces[0] = 0;
	faces[1] = 2;
	faces[2] = 1;

	/* face #2 */
	faces[3] = 0;
	faces[4] = 3;
	faces[5] = 2;

	/* face #3 */
	faces[6] = 0;
	faces[7] = 1;
	faces[8] = 3;

	/* face #4 */
	faces[9] = 1;
	faces[10] = 2;
	faces[11] = 3;

	mk_bot( outfp, "bot_ccw_solid", RT_BOT_SOLID, RT_BOT_CCW, 0, 4, 4, vertices, faces, (fastf_t *)NULL, (struct bu_bitv *)NULL );


	/* face #1 */
	faces[0] = 1;
	faces[1] = 2;
	faces[2] = 0;

	/* face #2 */
	faces[3] = 2;
	faces[4] = 3;
	faces[5] = 0;

	/* face #3 */
	faces[6] = 3;
	faces[7] = 1;
	faces[8] = 0;

	/* face #4 */
	faces[9] = 3;
	faces[10] = 2;
	faces[11] = 1;

	mk_bot( outfp, "bot_cw_solid", RT_BOT_SOLID, RT_BOT_CW, 0, 4, 4, vertices, faces, (fastf_t *)NULL, (struct bu_bitv *)NULL );

	face_mode = bu_bitv_new( 4 );
	bu_bitv_clear( face_mode );
	BU_BITSET( face_mode, 1);

	thickness[0] = 2.1;
	thickness[1] = 2.2;
	thickness[2] = 2.3;
	thickness[3] = 2.4;

	/* face #1 */
	faces[0] = 0;
	faces[1] = 1;
	faces[2] = 2;

	/* face #2 */
	faces[3] = 0;
	faces[4] = 2;
	faces[5] = 3;

	/* face #3 */
	faces[6] = 0;
	faces[7] = 1;
	faces[8] = 3;

	/* face #4 */
	faces[9] = 1;
	faces[10] = 2;
	faces[11] = 3;

	mk_bot( outfp, "bot_u_plate", RT_BOT_PLATE, RT_BOT_UNORIENTED, 0, 4, 4, vertices, faces, thickness, face_mode );

	/* face #1 */
	faces[0] = 0;
	faces[1] = 2;
	faces[2] = 1;

	/* face #2 */
	faces[3] = 0;
	faces[4] = 3;
	faces[5] = 2;

	/* face #3 */
	faces[6] = 0;
	faces[7] = 1;
	faces[8] = 3;

	/* face #4 */
	faces[9] = 1;
	faces[10] = 2;
	faces[11] = 3;

	mk_bot( outfp, "bot_ccw_plate", RT_BOT_PLATE, RT_BOT_CCW, 0, 4, 4, vertices, faces, thickness, face_mode );


	/* face #1 */
	faces[0] = 1;
	faces[1] = 2;
	faces[2] = 0;

	/* face #2 */
	faces[3] = 2;
	faces[4] = 3;
	faces[5] = 0;

	/* face #3 */
	faces[6] = 3;
	faces[7] = 1;
	faces[8] = 0;

	/* face #4 */
	faces[9] = 3;
	faces[10] = 2;
	faces[11] = 1;

	mk_bot( outfp, "bot_cw_plate", RT_BOT_PLATE, RT_BOT_CW, 0, 4, 4, vertices, faces, thickness, face_mode );

	/* Make a bot with duplicate vertices to test the "fuse" and "condense" code */
	VSET( vertices, 0.0, 0.0, 0.0 )
	VSET( &vertices[3], 0.0, 100.0, 0.0 )
	VSET( &vertices[6], 0.0, 100.0, 50.0 )
	VMOVE( &vertices[9], &vertices[0] )
	VMOVE( &vertices[12], &vertices[6] )
	VSET( &vertices[15], 200.0, 0.0, 0.0 )
	VMOVE( &vertices[18], &vertices[0] )
	VMOVE( &vertices[21], &vertices[3] )
	VMOVE( &vertices[24], &vertices[15] )
	VMOVE( &vertices[27], &vertices[3] )
	VMOVE( &vertices[30], &vertices[6] )
	VMOVE( &vertices[33], &vertices[15] )

	/* face #1 */
	faces[0] = 0;
	faces[1] = 1;
	faces[2] = 2;

	/* face #2 */
	faces[3] = 3;
	faces[4] = 4;
	faces[5] = 5;

	/* face #3 */
	faces[6] = 6;
	faces[7] = 7;
	faces[8] = 8;

	/* face #4 */

	faces[9] = 9;
	faces[10] = 10;
	faces[11] = 11;

	mk_bot( outfp, "bot_solid_dup_vs", RT_BOT_SOLID, RT_BOT_UNORIENTED, 0, 12, 4, vertices, faces, (fastf_t *)NULL, (struct bu_bitv *)NULL );

	faces[12] = 9;
	faces[13] = 10;
	faces[14] = 11;

	mk_bot( outfp, "bot_solid_dup_fs", RT_BOT_SOLID, RT_BOT_UNORIENTED, 0, 12, 5, vertices, faces, (fastf_t *)NULL, (struct bu_bitv *)NULL );

	bu_free( (char *)face_mode, "bottest: face_mode" );
	return 0;
}

/*
 * Local Variables:
 * mode: C
 * tab-width: 8
 * c-basic-offset: 4
 * indent-tabs-mode: t
 * End:
 * ex: shiftwidth=4 tabstop=8
 */
@


14.6
log
@Sweeping license updates.  Documentation is fully relicensed to the BSD Documentation License (a minor variant of the FreeBSD Documentation License and BSD License).  All GPL code (mostly application code) is converted to the LGPL and now also specifically declares version 2.1, revoking the blank check to the FSF.  The intent of these sweeping changes are to simplify the licensing terms and increase overall flexibility of use, both externally (to users for their purposes) and internally (to allow application code to be migrated to libraries without creating GPL libraries).  As a collective work, BRL-CAD is now LGPL.
@
text
@d32 1
a32 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/proc-db/bottest.c,v 14.5 2007/01/20 14:36:58 brlcad Exp $ (BRL)";
a37 1

@


14.5
log
@update copyright to 2007
@
text
@d8 2
a9 3
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation; either version 2 of the
 * License, or (at your option) any later version.
d14 1
a14 1
 * General Public License for more details.
d16 2
a17 2
 * You should have received a copy of the GNU General Public License
 * along with this file; see the file named COPYING for more
d32 1
a32 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/proc-db/bottest.c,v 14.4 2006/01/18 06:46:23 brlcad Exp $ (BRL)";
@


14.4
log
@update copyright to 2006
@
text
@d4 1
a4 1
 * Copyright (c) 1999-2006 United States Government as represented by
d33 1
a33 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/proc-db/bottest.c,v 14.3 2005/01/30 20:31:08 brlcad Exp $ (BRL)";
@


14.3
log
@update copyright to 2005
@
text
@d4 1
a4 1
 * Copyright (C) 1999-2005 United States Government as represented by
d33 1
a33 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/proc-db/bottest.c,v 14.2 2004/12/21 03:46:08 butler Exp $ (BRL)";
@


14.2
log
@GPL license changes
@
text
@d4 1
a4 1
 * Copyright (c) 1999-2004 United States Government as represented by
d33 1
a33 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/proc-db/bottest.c,v 14.1 2004/11/16 19:42:30 morrison Exp $ (BRL)";
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d1 21
a21 2
/*
 *			B O T T E S T . C
a30 9
 *  
 *  Distribution Notice -
 *	Re-distribution of this software is restricted, as described in
 *	your "Statement of Terms and Conditions for the Release of
 *	The BRL-CAD Package" agreement.
 *
 *  Copyright Notice -
 *	This software is Copyright (C) 1999-2004 by the United States Army
 *	in all countries except the USA.  All rights reserved.
d33 1
a33 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/proc-db/bottest.c,v 1.3 2004/08/02 23:01:52 morrison Exp $ (BRL)";
@


1.3
log
@replace the wrapped config.h block with common.h
@
text
@d23 1
a23 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/proc-db/bottest.c,v 1.2 2004/06/08 22:04:32 morrison Exp $ (BRL)";
d314 10
@


1.2
log
@obliterate externs.h
@
text
@d23 1
a23 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
d26 1
a26 3
#ifdef HAVE_CONFIG_H
# include "config.h"
#endif
@


1.1
log
@Vast reorganization begins.  Sources moved from top-level directories into src/.
@
text
@d23 1
a23 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/proc-db/bottest.c,v 1.11 2004/05/10 15:30:49 erikg Exp $ (BRL)";
a34 1
#include "externs.h"
@

