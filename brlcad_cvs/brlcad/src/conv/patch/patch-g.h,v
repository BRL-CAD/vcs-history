head	1.6;
access;
symbols
	rel-7-10-4:1.5
	STABLE:1.5.0.2
	rel-7-10-2:1.5
	rel-7-10-0:1.5
	rel-7-8-4:1.2
	rel-7-8-2:1.2
	rel-7-8-0:1.2
	trimnurbs-branch:1.2.0.2
	help:1.2
	temp_tag:1.1
	postmerge-20051223-bobWinPort:1.1
	premerge-20051223-bobWinPort:1.1
	rel-7-6-6:1.1
	rel-7-6-branch:1.1.0.2
	rel-7-6-4:1.1;
locks; strict;
comment	@ * @;


1.6
date	2007.10.14.22.15.55;	author brlcad;	state Exp;
branches;
next	1.5;

1.5
date	2007.01.27.01.41.33;	author brlcad;	state Exp;
branches;
next	1.4;

1.4
date	2007.01.23.01.13.26;	author brlcad;	state Exp;
branches;
next	1.3;

1.3
date	2007.01.20.14.36.48;	author brlcad;	state Exp;
branches;
next	1.2;

1.2
date	2006.01.18.06.46.14;	author brlcad;	state Exp;
branches;
next	1.1;

1.1
date	2005.10.27.03.36.04;	author brlcad;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2005.10.27.03.36.04;	author brlcad;	state dead;
branches;
next	1.1.2.2;

1.1.2.2
date	2005.11.13.17.45.01;	author brlcad;	state Exp;
branches;
next	;


desc
@@


1.6
log
@more level 4 flawfinder issues.  mostly string length clampages.
@
text
@/*                       P A T C H - G . H
 * BRL-CAD
 *
 * Copyright (c) 2004-2007 United States Government as represented by
 * the U.S. Army Research Laboratory.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * version 2.1 as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this file; see the file named COPYING for more
 * information.
 */
/** @@file patch-g.h
 *
 */

struct input {

	fastf_t x, y, z;
	fastf_t	rsurf_thick;
	int	surf_type;
	int	surf_thick;
	int	spacecode;
	int	cc;
	int  	ept[10];
	int	mirror;
	int	vc;

	int	prevsurf_type;
	char	surf_mode;

} in[10000];

struct patch_verts {
	struct vertex *vp;
	point_t coord;
};

struct patch_faces
{
	struct faceuse *fu;
	fastf_t thick;
};

struct patches{

	fastf_t x,y,z;
	int flag;
	fastf_t radius;
	int mirror;
	fastf_t thick;

};

#define NAMESIZE 16
struct names{

	char	ug[NAMESIZE];
	char	lg[NAMESIZE];
	int	eqlos,
		matcode;

} nm[9999];

struct subtract_list{

	int			outsolid,
				insolid,
				inmirror;
	struct subtract_list	*next;
};

point_t		pt[4];
fastf_t		vertice[5][3];
fastf_t		first[5][3];
fastf_t		normal[5][3];
point_t		ce[4];
point_t		centroid,Centroid;	/* object, description centroids */
unsigned char	rgb[3];
int debug = 0;
float mmtin = 25.4;
double conv_mm2in;
fastf_t third = 0.333333333;

/* char  name[NAMESIZE+1];	*/
char  cname[NAMESIZE+1];
char  tname[NAMESIZE+1];
char  surf[2];
char thick[3];
char  space[2];

int numobj = 0;
int nflg = 1;
int aflg = 1;		/* use phantom armor */
int num_unions = 5;	/* number of unions per region */
char *title = "Untitled MGED database";	/* database title */
char *top_level = "all"; /* top-level node name in the database */
int rev_norms = 0;	/* reverse normals for plate mode triangles */
int polysolid = 0;	/* convert triangle-facetted objects to polysolids */
int arb6 = 0;		/* flag: convert plate-mode objects to arb6s */

mat_t	m;
char *patchfile;
char *labelfile=NULL;
char *matfile;

#define MAX_THICKNESSES		500	/* Maximum number of different thicknesses
					   for a single plate mode solid */
fastf_t thicks[MAX_THICKNESSES];	/* array of unique plate thicknesses */
int nthicks;				/* number of unique plate thicknesses
					   for a single plate mode solid */

struct patches list[15000];
fastf_t x[1500],y[1500],z[1500];
int mirror[1500];
fastf_t radius[1500];
fastf_t thk[1500];

struct wmember head;			/* solids for current region */
struct wmember heada;			/* for component,regions on one side */
struct wmember headb;			/* for component,mirror regions */
struct wmember headc;			/* second level grouping ? */
struct wmember headd;			/* current thousand series group */
struct wmember heade;			/* group containing everything */
struct wmember headf;			/* check solids group */

/*
 * Local Variables:
 * mode: C
 * tab-width: 8
 * c-basic-offset: 4
 * indent-tabs-mode: t
 * End:
 * ex: shiftwidth=4 tabstop=8
 */
@


1.5
log
@ws. lots and lots of ws.  see sh/ws.sh for details (cases 'abcdeg').
@
text
@d62 1
d65 2
a66 2
	char	ug[16];
	char	lg[16];
d92 3
a94 3
/* char  name[17];	*/
char  cname[17];
char  tname[17];
@


1.4
log
@Sweeping license updates.  Documentation is fully relicensed to the BSD Documentation License (a minor variant of the FreeBSD Documentation License and BSD License).  All GPL code (mostly application code) is converted to the LGPL and now also specifically declares version 2.1, revoking the blank check to the FSF.  The intent of these sweeping changes are to simplify the licensing terms and increase overall flexibility of use, both externally (to users for their purposes) and internally (to allow application code to be migrated to libraries without creating GPL libraries).  As a collective work, BRL-CAD is now LGPL.
@
text
@d42 2
a43 2
        struct vertex *vp;
        point_t coord;
d48 2
a49 2
        struct faceuse *fu;
        fastf_t thick;
@


1.3
log
@update copyright to 2007
@
text
@d8 2
a9 3
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation; either version 2 of the
 * License, or (at your option) any later version.
d14 1
a14 1
 * General Public License for more details.
d16 2
a17 2
 * You should have received a copy of the GNU General Public License
 * along with this file; see the file named COPYING for more
@


1.2
log
@update copyright to 2006
@
text
@d4 1
a4 1
 * Copyright (c) 2004-2006 United States Government as represented by
@


1.1
log
@moved all the geometry converter directories from src/. to src/conv/.
@
text
@d4 1
a4 1
 * Copyright (C) 2004-2005 United States Government as represented by
@


1.1.2.1
log
@file patch-g.h was added on branch rel-7-6-branch on 2005-11-13 17:45:01 +0000
@
text
@d1 142
@


1.1.2.2
log
@more merging changes from HEAD aka rel-7-6-4 to the rel-7-6-branch, adding the items that were moved and resolving rcs keyword conflicts
@
text
@a0 142
/*                       P A T C H - G . H
 * BRL-CAD
 *
 * Copyright (C) 2004-2005 United States Government as represented by
 * the U.S. Army Research Laboratory.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation; either version 2 of the
 * License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this file; see the file named COPYING for more
 * information.
 */
/** @@file patch-g.h
 *
 */

struct input {

	fastf_t x, y, z;
	fastf_t	rsurf_thick;
	int	surf_type;
	int	surf_thick;
	int	spacecode;
	int	cc;
	int  	ept[10];
	int	mirror;
	int	vc;

	int	prevsurf_type;
	char	surf_mode;

} in[10000];

struct patch_verts {
        struct vertex *vp;
        point_t coord;
};

struct patch_faces
{
        struct faceuse *fu;
        fastf_t thick;
};

struct patches{

	fastf_t x,y,z;
	int flag;
	fastf_t radius;
	int mirror;
	fastf_t thick;

};

struct names{

	char	ug[16];
	char	lg[16];
	int	eqlos,
		matcode;

} nm[9999];

struct subtract_list{

	int			outsolid,
				insolid,
				inmirror;
	struct subtract_list	*next;
};

point_t		pt[4];
fastf_t		vertice[5][3];
fastf_t		first[5][3];
fastf_t		normal[5][3];
point_t		ce[4];
point_t		centroid,Centroid;	/* object, description centroids */
unsigned char	rgb[3];
int debug = 0;
float mmtin = 25.4;
double conv_mm2in;
fastf_t third = 0.333333333;

/* char  name[17];	*/
char  cname[17];
char  tname[17];
char  surf[2];
char thick[3];
char  space[2];

int numobj = 0;
int nflg = 1;
int aflg = 1;		/* use phantom armor */
int num_unions = 5;	/* number of unions per region */
char *title = "Untitled MGED database";	/* database title */
char *top_level = "all"; /* top-level node name in the database */
int rev_norms = 0;	/* reverse normals for plate mode triangles */
int polysolid = 0;	/* convert triangle-facetted objects to polysolids */
int arb6 = 0;		/* flag: convert plate-mode objects to arb6s */

mat_t	m;
char *patchfile;
char *labelfile=NULL;
char *matfile;

#define MAX_THICKNESSES		500	/* Maximum number of different thicknesses
					   for a single plate mode solid */
fastf_t thicks[MAX_THICKNESSES];	/* array of unique plate thicknesses */
int nthicks;				/* number of unique plate thicknesses
					   for a single plate mode solid */

struct patches list[15000];
fastf_t x[1500],y[1500],z[1500];
int mirror[1500];
fastf_t radius[1500];
fastf_t thk[1500];

struct wmember head;			/* solids for current region */
struct wmember heada;			/* for component,regions on one side */
struct wmember headb;			/* for component,mirror regions */
struct wmember headc;			/* second level grouping ? */
struct wmember headd;			/* current thousand series group */
struct wmember heade;			/* group containing everything */
struct wmember headf;			/* check solids group */

/*
 * Local Variables:
 * mode: C
 * tab-width: 8
 * c-basic-offset: 4
 * indent-tabs-mode: t
 * End:
 * ex: shiftwidth=4 tabstop=8
 */
@


