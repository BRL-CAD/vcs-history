head	14.14;
access;
symbols
	rel-7-10-4:14.12
	STABLE:14.12.0.2
	stable-branch:14.5
	rel-7-10-2:14.12
	rel-7-10-0:14.12
	rel-7-8-4:14.8
	rel-7-8-2:14.8
	rel-7-8-0:14.8
	trimnurbs-branch:14.8.0.2
	help:14.8
	temp_tag:14.6
	bobWinPort-20051223-freeze:14.5
	postmerge-20051223-bobWinPort:14.6
	premerge-20051223-bobWinPort:14.6
	rel-7-6-6:14.6
	rel-7-6-4:14.6
	rel-7-6-2:14.5
	rel-7-6-branch:14.5.0.6
	rel-7-6-0:14.5
	rel-7-4-2:14.5
	rel-7-4-branch:14.5.0.4
	bobWinPort:14.5.0.2
	rel-7-4-0:14.5
	rel-7-2-6:14.5
	rel-7-2-4:14.5
	rel-7-2-2:14.5
	rel-7-2-0:14.4
	rel-7-0-4:14.3
	rel-7-0-2:14.3
	rel-7-0-1:14.3
	opensource-post:14.3
	opensource-pre:1.4
	rel-7-0-branch:1.4.0.2
	rel-7-0:1.4;
locks; strict;
comment	@ * @;


14.14
date	2007.12.02.22.34.24;	author brlcad;	state Exp;
branches;
next	14.13;

14.13
date	2007.11.21.15.56.42;	author erikgreenwald;	state Exp;
branches;
next	14.12;

14.12
date	2007.02.02.08.48.30;	author brlcad;	state Exp;
branches;
next	14.11;

14.11
date	2007.01.23.01.13.46;	author brlcad;	state Exp;
branches;
next	14.10;

14.10
date	2007.01.21.07.46.43;	author brlcad;	state Exp;
branches;
next	14.9;

14.9
date	2007.01.20.14.37.00;	author brlcad;	state Exp;
branches;
next	14.8;

14.8
date	2006.02.27.10.08.41;	author brlcad;	state Exp;
branches;
next	14.7;

14.7
date	2006.01.18.06.46.24;	author brlcad;	state Exp;
branches;
next	14.6;

14.6
date	2005.10.23.04.44.38;	author brlcad;	state Exp;
branches;
next	14.5;

14.5
date	2005.03.30.07.24.17;	author brlcad;	state Exp;
branches
	14.5.6.1;
next	14.4;

14.4
date	2005.01.30.20.31.11;	author brlcad;	state Exp;
branches;
next	14.3;

14.3
date	2004.12.21.07.18.59;	author morrison;	state Exp;
branches;
next	14.2;

14.2
date	2004.12.21.02.43.37;	author morrison;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.31;	author morrison;	state Exp;
branches;
next	1.4;

1.4
date	2004.09.08.14.43.41;	author morrison;	state Exp;
branches;
next	1.3;

1.3
date	2004.08.25.16.21.17;	author erikg;	state Exp;
branches;
next	1.2;

1.2
date	2004.06.08.22.04.35;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.20.15.20.49;	author morrison;	state Exp;
branches;
next	;

14.5.6.1
date	2005.11.13.13.46.19;	author brlcad;	state Exp;
branches;
next	;


desc
@@


14.14
log
@woo hoo, finally got through most of the flawfinder level 4 issues related to string buffer limits (leaving issues that can probably/mostly be ignored).  these changes mostly invovlved using the n-variants of the various string processing functions so that the buffers being written to are properly clamped.
@
text
@/*                      S S A M P - B W . C
 * BRL-CAD
 *
 * Copyright (c) 2004-2007 United States Government as represented by
 * the U.S. Army Research Laboratory.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * version 2.1 as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this file; see the file named COPYING for more
 * information.
 */
/** @@file ssamp-bw.c
 *
 *  Program to convert spectral sample data into a single-channel
 *  monocrome image.
 *
 *  Author -
 *	Michael John Muuss
 *
 *  Source -
 *	The U. S. Army Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5068  USA
 *
 */
#ifndef lint
static char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/rttherm/ssamp-bw.c,v 14.13 2007/11/21 15:56:42 erikgreenwald Exp $ (ARL)";
#endif

#include "common.h"

#include <stdlib.h>
#include <stdio.h>
#include <math.h>

#ifdef HAVE_UNISTD_H
#  include "unistd.h"
#endif

#include "machine.h"
#include "bu.h"
#include "vmath.h"
#include "bn.h"
#include "raytrace.h"
#include "spectrum.h"


int	verbose = 0;

int	width = 64;
int	height = 64;
int	nwave = 2;

char	*datafile_basename = "mtherm";
char	spectrum_name[100];

extern struct bn_table		*spectrum;	/* spectrum table from liboptical */

struct bn_tabdata	*data;		/* a big array */

struct bn_tabdata	*filt;		/* filter kernel */

fastf_t			*pixels;	/* single values */

fastf_t		forced_minval = -1;
fastf_t		forced_maxval = -1;

fastf_t		computed_minval;
fastf_t		computed_maxval;

fastf_t		lower_wavelen = -1;
fastf_t		upper_wavelen = -1;

static char usage[] = "\
Usage: ssamp-bw [-s squarefilesize] [-w file_width] [-n file_height]\n\
		[-l lower_wavelen] [-u upper_wavelen] [-v]\n\
		[-m minval] [-M maxval]\n\
		file.ssamp\n";


/*
 *			G E T _ A R G S
 */
int
get_args(int argc, register char **argv)
{
	register int c;

	while ( (c = bu_getopt( argc, argv, "vs:w:n:l:u:m:M:" )) != EOF )  {
		switch( c )  {
		case 'v':
			verbose++;
			break;
		case 's':
			/* square file size */
			height = width = atoi(bu_optarg);
			break;
		case 'w':
			width = atoi(bu_optarg);
			break;
		case 'n':
			height = atoi(bu_optarg);
			break;
		case 'l':
			lower_wavelen = atof(bu_optarg);
			break;
		case 'u':
			upper_wavelen = atof(bu_optarg);
			break;
		case 'm':
			forced_minval = atof(bu_optarg);
			break;
		case 'M':
			forced_maxval = atof(bu_optarg);
			break;

		default:		/* '?' */
			return(0);
		}
	}

	if( bu_optind >= argc )  return 0;
	return 1;	/* OK */
}

/*
 *			F I N D _ M I N M A X
 */
void
find_minmax(void)
{
	register fastf_t	max, min;
	register int		i;

	max = -INFINITY;
	min =  INFINITY;

	for( i = width * height - 1; i >= 0; i-- )  {
		register fastf_t	v;

		if( (v = pixels[i]) > max )  max = v;
		if( v < min )  min = v;
	}
	computed_maxval = max;
	computed_minval = min;
}

/*
 *			M A I N
 */
int
main(int argc, char **argv)
{
	int	i;
	fastf_t	scale;

	if ( !get_args( argc, argv ) )  {
		(void)fputs(usage, stderr);
		return 1;
	}

	if(verbose)	bu_debug = BU_DEBUG_COREDUMP;

	datafile_basename = argv[bu_optind];

	/* Read spectrum definition */
	snprintf( spectrum_name, 100, "%s.spect", datafile_basename );
	spectrum = (struct bn_table *)bn_table_read( spectrum_name );
	if( spectrum == NULL )  {
		bu_exit(EXIT_FAILURE, "ssamp-bw: Unable to read spectrum\n");
	}
	BN_CK_TABLE(spectrum);
	if(verbose) bu_log("%s defines %d spectral samples\n", datafile_basename, spectrum->nx);
	nwave = spectrum->nx;	/* shared with Tcl */

	/* Allocate and read 2-D spectral samples array */
	data = bn_tabdata_binary_read( datafile_basename, width*height, spectrum );
	if( !data )  bu_exit(EXIT_FAILURE, "bn_tabdata_binary_read() of datafile_basename failed\n");

	if( lower_wavelen <= 0 )  lower_wavelen = spectrum->x[0];
	if( upper_wavelen <= 0 )  upper_wavelen = spectrum->x[spectrum->nx];

	/* Build filter to obtain portion of spectrum user wants */
	filt = bn_tabdata_mk_linear_filter( spectrum, lower_wavelen, upper_wavelen );
	if( !filt )  bu_exit(EXIT_FAILURE, "bn_tabdata_mk_linear_filter() failed\n");
	if( verbose )  {
		bn_pr_table( "spectrum", spectrum );
		bn_pr_tabdata( "filter", filt );
	}

	/* Convert each of the spectral sample curves into scalor values */
	pixels = bu_malloc( sizeof(fastf_t) * width * height, "fastf_t pixels" );

	for( i = width*height-1; i >= 0; i-- )  {
		struct bn_tabdata	*sp;
		/* Filter spectral data into a single power level */
		sp = (struct bn_tabdata *)
			(((char *)data)+i*BN_SIZEOF_TABDATA(spectrum));
		BN_CK_TABDATA(sp);
		/* Assumes interpretation #1 of the input data (see bn.h) */
		pixels[i] = bn_tabdata_mul_area1( filt, sp );
	}

	/* Obtain min and max values of that power level */
	find_minmax();
	bu_log("computed min = %g, max=%g\n", computed_minval, computed_maxval );

	if( forced_minval < 0 )  forced_minval = computed_minval;
	if( forced_maxval < 0 )  forced_maxval = computed_maxval;
	bu_log("rescale  min = %g, max=%g\n", forced_minval, forced_maxval );
	BU_ASSERT( forced_minval < forced_maxval );

	if( isatty(fileno(stdout)) )  {
		bu_log("ssamp-bw: Attempting to send binary output to the terminal, aborting\n");
		return 1;
	}

	/* Convert to 0..255 range and output */
	scale = 255 / (forced_maxval - forced_minval);
	for( i = 0; i < width*height; i++ )  {
		register int	val;
		val = (int)( (pixels[i] - forced_minval) * scale );
		if( val > 255 )  val = 255;
		else if( val < 0 ) val = 0;
		putc( val, stdout );
	}
	return 0;
}

/*
 * Local Variables:
 * mode: C
 * tab-width: 8
 * c-basic-offset: 4
 * indent-tabs-mode: t
 * End:
 * ex: shiftwidth=4 tabstop=8
 */
@


14.13
log
@change bu_bomb to bu_exit when the sky isn't really falling
@
text
@d34 1
a34 1
static char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/rttherm/ssamp-bw.c,v 14.12 2007/02/02 08:48:30 brlcad Exp $ (ARL)";
d174 1
a174 1
	sprintf( spectrum_name, "%s.spect", datafile_basename );
@


14.12
log
@convert all of the lingering getopt calls to bu_getopt (as well as the related getopt globals optind, opterr, optarg) -- libbu's getopt has the benefit of being re-entrant and is portable to environments where getopt() may not be available.
@
text
@d34 1
a34 1
static char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/rttherm/ssamp-bw.c,v 14.11 2007/01/23 01:13:46 brlcad Exp $ (ARL)";
d177 1
a177 1
		bu_bomb("ssamp-bw: Unable to read spectrum\n");
d185 1
a185 1
	if( !data )  bu_bomb("bn_tabdata_binary_read() of datafile_basename failed\n");
d192 1
a192 1
	if( !filt )  bu_bomb("bn_tabdata_mk_linear_filter() failed\n");
@


14.11
log
@Sweeping license updates.  Documentation is fully relicensed to the BSD Documentation License (a minor variant of the FreeBSD Documentation License and BSD License).  All GPL code (mostly application code) is converted to the LGPL and now also specifically declares version 2.1, revoking the blank check to the FSF.  The intent of these sweeping changes are to simplify the licensing terms and increase overall flexibility of use, both externally (to users for their purposes) and internally (to allow application code to be migrated to libraries without creating GPL libraries).  As a collective work, BRL-CAD is now LGPL.
@
text
@d34 1
a34 1
static char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/rttherm/ssamp-bw.c,v 14.10 2007/01/21 07:46:43 brlcad Exp $ (ARL)";
d96 1
a96 1
	while ( (c = getopt( argc, argv, "vs:w:n:l:u:m:M:" )) != EOF )  {
d103 1
a103 1
			height = width = atoi(optarg);
d106 1
a106 1
			width = atoi(optarg);
d109 1
a109 1
			height = atoi(optarg);
d112 1
a112 1
			lower_wavelen = atof(optarg);
d115 1
a115 1
			upper_wavelen = atof(optarg);
d118 1
a118 1
			forced_minval = atof(optarg);
d121 1
a121 1
			forced_maxval = atof(optarg);
d129 1
a129 1
	if( optind >= argc )  return 0;
d171 1
a171 1
	datafile_basename = argv[optind];
@


14.10
log
@add missing headers, bsd license
@
text
@d8 2
a9 2
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation.
d14 1
a14 1
 * General Public License for more details.
d16 2
a17 2
 * You should have received a copy of the GNU General Public License
 * along with this file; see the file named COPYING for more
d34 1
a34 1
static char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/rttherm/ssamp-bw.c,v 14.9 2007/01/20 14:37:00 brlcad Exp $ (ARL)";
@


14.9
log
@update copyright to 2007
@
text
@d9 1
a9 2
 * published by the Free Software Foundation; either version 2 of the
 * License, or (at your option) any later version.
d34 1
a34 1
static char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/rttherm/ssamp-bw.c,v 14.8 2006/02/27 10:08:41 brlcad Exp $ (ARL)";
@


14.8
log
@stdlib.h and exit()
@
text
@d4 1
a4 1
 * Copyright (c) 2004-2006 United States Government as represented by
d35 1
a35 1
static char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/rttherm/ssamp-bw.c,v 14.7 2006/01/18 06:46:24 brlcad Exp $ (ARL)";
@


14.7
log
@update copyright to 2006
@
text
@d35 1
a35 1
static char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/rttherm/ssamp-bw.c,v 14.6 2005/10/23 04:44:38 brlcad Exp $ (ARL)";
d40 1
d45 1
a45 1
# include "unistd.h"
d55 1
d167 1
a167 1
		exit( 1 );
@


14.6
log
@trailing ws
@
text
@d4 1
a4 1
 * Copyright (C) 2004-2005 United States Government as represented by
d35 1
a35 1
static char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/rttherm/ssamp-bw.c,v 14.5 2005/03/30 07:24:17 brlcad Exp $ (ARL)";
@


14.5
log
@quell a basename duplicate symbol warning
@
text
@d28 1
a28 1
 *  
d32 1
a32 1
 *  
d35 1
a35 1
static char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/rttherm/ssamp-bw.c,v 14.4 2005/01/30 20:31:11 brlcad Exp $ (ARL)";
@


14.5.6.1
log
@merge changes from HEAD aka rel-7-6-4 to the rel-7-6-branch just in case someone peeks a gander or tries to continue/build the branch
@
text
@d28 1
a28 1
 *
d32 1
a32 1
 *
d35 1
a35 1
static char RCSid[] = "@@(#)$Header$ (ARL)";
@


14.4
log
@update copyright to 2005
@
text
@d35 1
a35 1
static char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/rttherm/ssamp-bw.c,v 14.3 2004/12/21 07:18:59 morrison Exp $ (ARL)";
d60 1
a60 1
char	*basename = "mtherm";
d63 1
a63 1
struct bn_table		*spectrum;
d170 1
a170 1
	basename = argv[optind];
d173 1
a173 1
	sprintf( spectrum_name, "%s.spect", basename );
d179 1
a179 1
	if(verbose) bu_log("%s defines %d spectral samples\n", basename, spectrum->nx);
d183 2
a184 2
	data = bn_tabdata_binary_read( basename, width*height, spectrum );
	if( !data )  bu_bomb("bn_tabdata_binary_read() of basename failed\n");
@


14.3
log
@the significantly modified pd files are incorporated as new works and assigned copyright, so remove the old statement.
@
text
@d4 2
a5 2
 * Copyright (c) 2004 United States Government as represented by the
 * U.S. Army Research Laboratory.
d35 1
a35 1
static char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/rttherm/ssamp-bw.c,v 14.2 2004/12/21 02:43:37 morrison Exp $ (ARL)";
@


14.2
log
@assign copyright and GPL
@
text
@a32 2
 *  Distribution Status -
 *	Public Domain, Distribution Unlimited.
d35 1
a35 1
static char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/rttherm/ssamp-bw.c,v 14.1 2004/11/16 19:42:31 morrison Exp $ (ARL)";
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d1 21
a21 2
/*
 *			S S A M P - B W . C
d37 1
a37 1
static char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/rttherm/ssamp-bw.c,v 1.4 2004/09/08 14:43:41 morrison Exp $ (ARL)";
@


1.4
log
@use the common.h header instead of the ifdef HAVE_CONFIG_H block
@
text
@d18 1
a18 1
static char RCSid[] = "@@(#)$Header: /n/xoff/cvs/brlcad/src/rttherm/ssamp-bw.c,v 1.3 2004/08/25 16:21:17 erikg Exp $ (ARL)";
d218 10
@


1.3
log
@need unistd for getopt
@
text
@d17 2
a18 3

#ifdef HAVE_CONFIG_H
# include "config.h"
d21 1
a21 3
#ifndef lint
static char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/rttherm/ssamp-bw.c,v 1.2 2004/06/08 22:04:35 morrison Exp $ (ARL)";
#endif
@


1.2
log
@obliterate externs.h
@
text
@d17 5
d23 1
a23 1
static char RCSid[] = "@@(#)$Header$ (ARL)";
d28 4
@


1.1
log
@Vast reorganization begins.  Sources moved from top-level directories into src/.
@
text
@d18 1
a18 1
static char RCSid[] = "@@(#)$Header: /cvs/brlcad/rttherm/ssamp-bw.c,v 11.5 2004/04/05 05:45:59 morrison Exp $ (ARL)";
a24 1
#include "externs.h"
@

