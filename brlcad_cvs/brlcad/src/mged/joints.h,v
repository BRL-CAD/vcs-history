head	14.7;
access;
symbols
	rel-7-10-4:14.7
	STABLE:14.7.0.2
	stable-branch:14.3
	rel-7-10-2:14.7
	rel-7-10-0:14.7
	rel-7-8-4:14.5
	rel-7-8-2:14.5
	rel-7-8-0:14.5
	trimnurbs-branch:14.5.0.2
	help:14.5
	temp_tag:14.4
	bobWinPort-20051223-freeze:14.3
	postmerge-20051223-bobWinPort:14.4
	premerge-20051223-bobWinPort:14.4
	rel-7-6-6:14.4
	rel-7-6-4:14.4
	rel-7-6-2:14.3
	rel-7-6-branch:14.3.0.6
	rel-7-6-0:14.3
	rel-7-4-2:14.3
	rel-7-4-branch:14.3.0.4
	bobWinPort:14.3.0.2
	rel-7-4-0:14.3
	rel-7-2-6:14.3
	rel-7-2-4:14.3
	rel-7-2-2:14.3
	rel-7-2-0:14.3
	rel-7-0-4:14.2
	rel-7-0-2:14.2
	rel-7-0-1:14.2
	opensource-post:14.2
	opensource-pre:1.1
	rel-7-0-branch:1.1.0.2
	rel-7-0:1.1;
locks; strict;
comment	@ * @;


14.7
date	2007.01.23.01.13.42;	author brlcad;	state Exp;
branches;
next	14.6;

14.6
date	2007.01.20.14.36.57;	author brlcad;	state Exp;
branches;
next	14.5;

14.5
date	2006.01.18.06.46.19;	author brlcad;	state Exp;
branches;
next	14.4;

14.4
date	2005.10.23.04.44.37;	author brlcad;	state Exp;
branches;
next	14.3;

14.3
date	2005.01.30.20.31.06;	author brlcad;	state Exp;
branches
	14.3.6.1;
next	14.2;

14.2
date	2004.12.21.04.17.27;	author butler;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.17;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.20.15.20.25;	author morrison;	state Exp;
branches;
next	;

14.3.6.1
date	2005.11.13.13.46.17;	author brlcad;	state Exp;
branches;
next	;


desc
@@


14.7
log
@Sweeping license updates.  Documentation is fully relicensed to the BSD Documentation License (a minor variant of the FreeBSD Documentation License and BSD License).  All GPL code (mostly application code) is converted to the LGPL and now also specifically declares version 2.1, revoking the blank check to the FSF.  The intent of these sweeping changes are to simplify the licensing terms and increase overall flexibility of use, both externally (to users for their purposes) and internally (to allow application code to be migrated to libraries without creating GPL libraries).  As a collective work, BRL-CAD is now LGPL.
@
text
@/*                        J O I N T S . H
 * BRL-CAD
 *
 * Copyright (c) 2004-2007 United States Government as represented by
 * the U.S. Army Research Laboratory.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * version 2.1 as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this file; see the file named COPYING for more
 * information.
 */
/** @@file joints.h
 * Joint and constrant information.
 *
 * RCSid "$Header: /cvsroot/brlcad/brlcad/src/mged/joints.h,v 14.6 2007/01/20 14:36:57 brlcad Exp $"
 */
/*
 * A joint has to contain all the information to describe how two
 * segments move in relationship to each other.
 *
 * The two segments are defined by the arc given.  The upper arc
 * is the fixed part, the lower part is the "moving" part.  The arc
 * can be completely rooted or a partial description.
 *
 * In the simplest case, a joint moves in only one direction (1 degree of
 * freedom)  For rotations, this can be described completely as a
 * quaternion.  For a slider, this can be described completely as a unit
 * vector.
 *
 * For two degrees of freedom, Two quaternions describe rotation one then
 * rotation two.  (Math: The two quaternions can be added "?" to make
 * a new quaternion that represents the movement around both axis)  For
 * sliders, two unit vectors and a starting point define the plane used.
 *
 * For three degrees of freedom, three quaternions or three unit vectors.
 *
 * The reason we use the three unit vectors rather than the more usual
 * normal and closest point, is that we can then use a simple parametric
 * statement of how to move.  It would be best that the two vectors be
 * at right angles to each other, but that is not required.
 *
 * This use of unit vectors allows for non-axis aligned movements, it allows
 * for non-square and non-cube movement.
 *
 * Each degree of freedom contains both an upper and lower bound as well
 * as the current value of the joint.  If upper < lower then this degree
 * of freedom is not used.
 */

/* NB: The quaternions should (MUST?) have zero twist! */
struct arc {
	struct bu_list	l;
	int		type;
	char		**arc;
	int		arc_last;
	char		**original;
	int		org_last;
};

#define ARC_UNSET	0x0
#define	ARC_PATH	0x1
#define ARC_ARC		0x2
#define ARC_LIST	0x4
#define ARC_BOTH	0x8

struct	rotation {
	quat_t	quat;		/* direction of rotation */
	double	lower;		/* min value in degrees */
	double	upper;		/* max value in degrees */
	double	current;	/* what the joint is currently at in degrees */
	double	accepted;	/* what was the last accepted value of joint */
};

struct direct {
	vect_t	unitvec;
	double	lower;
	double	upper;
	double	current;
	double	last;
	double	accepted;
	int	changed;
};
struct joint {
	struct bu_list	l;
	int		uses;
	char		*name;
	struct arc	path;
	vect_t		location;

	struct rotation	rots[3];
	struct direct	dirs[3];

	struct animate	*anim;
};
#define	MAGIC_JOINT_STRUCT	0x4a4f4900	/* 1246710016 */
struct jointH {
	struct bu_list	l;
	struct joint	*p;
	int		arc_loc;
	int		flag;
};
#define MAGIC_JOINT_HANDLE	0x44330048	/* 1144193096 */
/*	Constraints
 *
 * Standard double linked list stuff.
 * name of the constraint (not required)
 * Set of is a linked list of joint HANDLES!
 */
struct hold_point {
	int	type;			/* SOLID ID + fixed */
	/* everything should reduce to a point at run time. */
	vect_t	point;
	int	vertex_number;

	struct arc arc;		/* Path to object */
	struct db_full_path path;	/* after processing */
	int	flag;
};
#define ID_FIXED	-1

#define	HOLD_PT_GOOD 0x1

struct j_set_desc {
	char	*joint;
	struct arc	path;
	struct arc	exclude;
};
struct hold {
	struct bu_list	l;
	char		*name;
	/* set of joints is defined by joint to grip list of joints */
	struct j_set_desc	j_set;
	char		*joint;
	struct bu_list	j_head;
	struct hold_point	effector;
	struct hold_point	objective;
	double		weight;
	int		priority;
	int		flag;
	double		eval;
};
#define	HOLD_FLAG_TRIED	0x1
/*
 * Objective can be one of:
 *	POINT, LINE, LINE_SEGMENT, PLANE, FACE
 *The objective can be defined in terms of:
 *	GRIPs, JOINTs or FIXED POINTs
 */
#define	MAGIC_HOLD_STRUCT	0x684f4c63	/* 1750027363 */

/*
 * Local Variables:
 * mode: C
 * tab-width: 8
 * c-basic-offset: 4
 * indent-tabs-mode: t
 * End:
 * ex: shiftwidth=4 tabstop=8
 */
@


14.6
log
@update copyright to 2007
@
text
@d8 2
a9 3
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation; either version 2 of the
 * License, or (at your option) any later version.
d14 1
a14 1
 * General Public License for more details.
d16 2
a17 2
 * You should have received a copy of the GNU General Public License
 * along with this file; see the file named COPYING for more
d23 1
a23 1
 * RCSid "$Header: /cvsroot/brlcad/brlcad/src/mged/joints.h,v 14.5 2006/01/18 06:46:19 brlcad Exp $"
@


14.5
log
@update copyright to 2006
@
text
@d4 1
a4 1
 * Copyright (c) 2004-2006 United States Government as represented by
d24 1
a24 1
 * RCSid "$Header: /cvsroot/brlcad/brlcad/src/mged/joints.h,v 14.4 2005/10/23 04:44:37 brlcad Exp $"
@


14.4
log
@trailing ws
@
text
@d4 1
a4 1
 * Copyright (C) 2004-2005 United States Government as represented by
d24 1
a24 1
 * RCSid "$Header: /cvsroot/brlcad/brlcad/src/mged/joints.h,v 14.3 2005/01/30 20:31:06 brlcad Exp $"
@


14.3
log
@update copyright to 2005
@
text
@d24 1
a24 1
 * RCSid "$Header: /cvsroot/brlcad/brlcad/src/mged/joints.h,v 14.2 2004/12/21 04:17:27 butler Exp $"
d35 1
a35 1
 * freedom)  For rotations, this can be described completely as a 
@


14.3.6.1
log
@merge changes from HEAD aka rel-7-6-4 to the rel-7-6-branch just in case someone peeks a gander or tries to continue/build the branch
@
text
@d24 1
a24 1
 * RCSid "$Header$"
d35 1
a35 1
 * freedom)  For rotations, this can be described completely as a
@


14.2
log
@GPL License changes
@
text
@d4 2
a5 2
 * Copyright (c) 2004 United States Government as represented by the
 * U.S. Army Research Laboratory.
d24 1
a24 1
 * RCSid "$Header: /cvs/brlcad/src/mged/joints.h,v 14.1 2004/11/16 19:42:17 morrison Exp $"
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d1 2
a2 1
/*		J O I N T S . H
d4 18
d24 1
a24 1
 * RCSid "$Header: /cvs/brlcad/src/mged/joints.h,v 1.1 2004/05/20 15:20:25 morrison Exp $"
@


1.1
log
@Vast reorganization begins.  Sources moved from top-level directories into src/.
@
text
@d5 1
a5 1
 * RCSid "$Header: /cvs/brlcad/mged/joints.h,v 11.2 1996/09/03 20:02:37 bparker Exp $"
d140 10
@

