head	14.8;
access;
symbols
	rel-7-10-4:14.8
	STABLE:14.8.0.2
	stable-branch:14.3
	rel-7-10-2:14.8
	rel-7-10-0:14.7
	rel-7-8-4:14.4
	rel-7-8-2:14.4
	rel-7-8-0:14.4
	trimnurbs-branch:14.4.0.2
	help:14.4
	temp_tag:14.3
	bobWinPort-20051223-freeze:14.3
	postmerge-20051223-bobWinPort:14.3
	premerge-20051223-bobWinPort:14.3
	rel-7-6-6:14.3
	rel-7-6-4:14.3
	rel-7-6-2:14.3
	rel-7-6-branch:14.3.0.6
	rel-7-6-0:14.3
	rel-7-4-2:14.3
	rel-7-4-branch:14.3.0.4
	bobWinPort:14.3.0.2
	rel-7-4-0:14.3
	rel-7-2-6:14.3
	rel-7-2-4:14.3
	rel-7-2-2:14.3
	rel-7-2-0:14.3
	rel-7-0-4:14.2
	rel-7-0-2:14.2
	rel-7-0-1:14.2
	opensource-post:14.2
	opensource-pre:1.3
	rel-7-0-branch:1.3.0.2
	rel-7-0:1.3;
locks; strict;
comment	@ * @;


14.8
date	2007.05.14.21.04.32;	author brlcad;	state Exp;
branches;
next	14.7;

14.7
date	2007.01.27.01.41.43;	author brlcad;	state Exp;
branches;
next	14.6;

14.6
date	2007.01.23.01.13.41;	author brlcad;	state Exp;
branches;
next	14.5;

14.5
date	2007.01.20.14.36.57;	author brlcad;	state Exp;
branches;
next	14.4;

14.4
date	2006.01.18.06.46.19;	author brlcad;	state Exp;
branches;
next	14.3;

14.3
date	2005.01.30.20.31.05;	author brlcad;	state Exp;
branches;
next	14.2;

14.2
date	2004.12.21.04.17.26;	author butler;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.17;	author morrison;	state Exp;
branches;
next	1.3;

1.3
date	2004.08.02.23.01.51;	author morrison;	state Exp;
branches;
next	1.2;

1.2
date	2004.06.08.22.04.26;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.20.15.20.20;	author morrison;	state Exp;
branches;
next	;


desc
@@


14.8
log
@gah, pick up where someone left off over half a decade ago.  finish updating all of the compat4 symbols throughout the code to their new names.  finally. it's done.  make the deprecated headers obsolete -- make compat4.h obsolete too so we can be sure that all of the changes are now picked up by the compiler as errors.  this change will likely impact muves if they've similarly not updated to the new names too, so the headers are kept with a #warning for now (though will likely disappear down the road entirely).
@
text
@/*                          A X E S . C
 * BRL-CAD
 *
 * Copyright (c) 1998-2007 United States Government as represented by
 * the U.S. Army Research Laboratory.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * version 2.1 as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this file; see the file named COPYING for more
 * information.
 */
/** @@file axes.c
 *
 * Functions -
 *	draw_axes	Common axes drawing routine that draws axes at the
 *				specifed point and orientation.
 *	draw_e_axes	Draw the edit axes.
 *	draw_m_axes	Draw the model axes.
 *	draw_v_axes	Draw the view axes.
 *
 * Author -
 *	Robert G. Parker
 *
 * Source -
 *	SLAD CAD Team
 *	The U. S. Army Research Laboratory
 *	berdeen Proving Ground, Maryland  21005
 */

#include "common.h"

#include <stdio.h>
#include <math.h>

#include "machine.h"
#include "bu.h"
#include "vmath.h"
#include "bn.h"
#include "raytrace.h"

#include "./ged.h"
#include "./mged_dm.h"


extern point_t es_keypoint;
extern point_t e_axes_pos;
extern point_t curr_e_axes_pos;

static void ax_set_dirty_flag();

struct _axes_state default_axes_state = {
/* ax_rc */			1,
/* ax_model_draw */    	        0,
/* ax_model_size */		500,
/* ax_model_linewidth */	1,
/* ax_model_pos */		{ 0.0, 0.0, 0.0 },
/* ax_view_draw */    	        0,
/* ax_view_size */		500,
/* ax_view_linewidth */		1,
/* ax_view_pos */		{ 0, 0 },
/* ax_edit_draw */		0,
/* ax_edit_size1 */		500,
/* ax_edit_size2 */		500,
/* ax_edit_linewidth1 */	1,
/* ax_edit_linewidth2 */	1
};

#define AX_O(_m)	bu_offsetof(struct _axes_state, _m)
#define AX_OA(_m)	bu_offsetofarray(struct _axes_state, _m)
struct bu_structparse axes_vparse[] = {
	{"%d",  1, "model_draw",	AX_O(ax_model_draw),		ax_set_dirty_flag },
	{"%d",  1, "model_size",	AX_O(ax_model_size),		ax_set_dirty_flag },
	{"%d",  1, "model_linewidth",	AX_O(ax_model_linewidth),	ax_set_dirty_flag },
	{"%f",	3, "model_pos",		AX_OA(ax_model_pos),		ax_set_dirty_flag },
	{"%d",  1, "view_draw",		AX_O(ax_view_draw),		ax_set_dirty_flag },
	{"%d",  1, "view_size",		AX_O(ax_view_size),		ax_set_dirty_flag },
	{"%d",  1, "view_linewidth",	AX_O(ax_view_linewidth),	ax_set_dirty_flag },
	{"%d",  2, "view_pos",		AX_OA(ax_view_pos),		ax_set_dirty_flag },
	{"%d",  1, "edit_draw",		AX_O(ax_edit_draw),		ax_set_dirty_flag },
	{"%d",  1, "edit_size1",	AX_O(ax_edit_size1),		ax_set_dirty_flag },
	{"%d",  1, "edit_size2",	AX_O(ax_edit_size2),		ax_set_dirty_flag },
	{"%d",  1, "edit_linewidth1",	AX_O(ax_edit_linewidth1),	ax_set_dirty_flag },
	{"%d",  1, "edit_linewidth2",	AX_O(ax_edit_linewidth2),	ax_set_dirty_flag },
	{"",	0, (char *)0,		0,				BU_STRUCTPARSE_FUNC_NULL }
};

static void
ax_set_dirty_flag()
{
  struct dm_list *dmlp;

  FOR_ALL_DISPLAYS(dmlp, &head_dm_list.l)
    if(dmlp->dml_axes_state == axes_state)
      dmlp->dml_dirty = 1;
}

void
draw_e_axes()
{
	point_t v_ap1;                 /* axes position in view coordinates */
	point_t v_ap2;                 /* axes position in view coordinates */
	mat_t rot_mat;

	if (state == ST_S_EDIT) {
		MAT4X3PNT(v_ap1, view_state->vs_vop->vo_model2view, e_axes_pos);
		MAT4X3PNT(v_ap2, view_state->vs_vop->vo_model2view, curr_e_axes_pos);
	} else if(state == ST_O_EDIT) {
		point_t m_ap2;

		MAT4X3PNT(v_ap1, view_state->vs_vop->vo_model2view, es_keypoint);
		MAT4X3PNT(m_ap2, modelchanges, es_keypoint);
		MAT4X3PNT(v_ap2, view_state->vs_vop->vo_model2view, m_ap2);
	} else
		return;

	dmo_drawAxes_cmd(dmp,
			 view_state->vs_vop->vo_size,
			 view_state->vs_vop->vo_rotation,
			 v_ap1,
			 axes_state->ax_edit_size1 * INV_GED,
			 color_scheme->cs_edit_axes1,
			 color_scheme->cs_edit_axes_label1,
			 axes_state->ax_edit_linewidth1,
			 0, /* positive direction only */
			 0, /* three colors (i.e. X-red, Y-green, Z-blue) */
			 0, /* no ticks */
			 0, /* tick len */
			 0, /* major tick len */
			 0, /* tick interval */
			 0, /* ticks per major */
			 NULL, /* tick color */
			 NULL, /* major tick color */
			 0 /* tick threshold */);

	bn_mat_mul(rot_mat, view_state->vs_vop->vo_rotation, acc_rot_sol);
	dmo_drawAxes_cmd(dmp,
			 view_state->vs_vop->vo_size,
			 rot_mat,
			 v_ap2,
			 axes_state->ax_edit_size2 * INV_GED,
			 color_scheme->cs_edit_axes2,
			 color_scheme->cs_edit_axes_label2,
			 axes_state->ax_edit_linewidth2,
			 0, /* positive direction only */
			 0, /* three colors (i.e. X-red, Y-green, Z-blue) */
			 0, /* no ticks */
			 0, /* tick len */
			 0, /* major tick len */
			 0, /* tick interval */
			 0, /* ticks per major */
			 NULL, /* tick color */
			 NULL, /* major tick color */
			 0 /* tick threshold */);
}

void
draw_m_axes()
{
	point_t m_ap;			/* axes position in model coordinates, mm */
	point_t v_ap;			/* axes position in view coordinates */

	VSCALE(m_ap, axes_state->ax_model_pos, local2base);
	MAT4X3PNT(v_ap, view_state->vs_vop->vo_model2view, m_ap);
	dmo_drawAxes_cmd(dmp,
			 view_state->vs_vop->vo_size,
			 view_state->vs_vop->vo_rotation,
			 v_ap,
			 axes_state->ax_model_size * INV_GED,
			 color_scheme->cs_model_axes,
			 color_scheme->cs_model_axes_label,
			 axes_state->ax_model_linewidth,
			 0, /* positive direction only */
			 0, /* three colors (i.e. X-red, Y-green, Z-blue) */
			 0, /* no ticks */
			 0, /* tick len */
			 0, /* major tick len */
			 0, /* tick interval */
			 0, /* ticks per major */
			 NULL, /* tick color */
			 NULL, /* major tick color */
			 0 /* tick threshold */);
}

void
draw_v_axes()
{
  point_t v_ap;			/* axes position in view coordinates */

  VSET(v_ap,
       axes_state->ax_view_pos[X] * INV_GED,
       axes_state->ax_view_pos[Y] * INV_GED / dmp->dm_aspect,
       0.0);

  dmo_drawAxes_cmd(dmp,
		   view_state->vs_vop->vo_size,
		   view_state->vs_vop->vo_rotation,
		   v_ap,
		   axes_state->ax_view_size * INV_GED,
		   color_scheme->cs_view_axes,
		   color_scheme->cs_view_axes_label,
		   axes_state->ax_view_linewidth,
		   0, /* positive direction only */
		   0, /* three colors (i.e. X-red, Y-green, Z-blue) */
		   0, /* no ticks */
		   0, /* tick len */
		   0, /* major tick len */
		   0, /* tick interval */
		   0, /* ticks per major */
		   NULL, /* tick color */
		   NULL, /* major tick color */
		   0 /* tick threshold */);
}

/*
 * Local Variables:
 * mode: C
 * tab-width: 8
 * c-basic-offset: 4
 * indent-tabs-mode: t
 * End:
 * ex: shiftwidth=4 tabstop=8
 */
@


14.7
log
@ws. lots and lots of ws.  see sh/ws.sh for details (cases 'abcdeg').
@
text
@a39 1

d42 1
d48 1
d52 1
d76 2
a77 2
#define AX_O(_m)	offsetof(struct _axes_state, _m)
#define AX_OA(_m)	offsetofarray(struct _axes_state, _m)
@


14.6
log
@Sweeping license updates.  Documentation is fully relicensed to the BSD Documentation License (a minor variant of the FreeBSD Documentation License and BSD License).  All GPL code (mostly application code) is converted to the LGPL and now also specifically declares version 2.1, revoking the blank check to the FSF.  The intent of these sweeping changes are to simplify the licensing terms and increase overall flexibility of use, both externally (to users for their purposes) and internally (to allow application code to be migrated to libraries without creating GPL libraries).  As a collective work, BRL-CAD is now LGPL.
@
text
@a40 1

@


14.5
log
@update copyright to 2007
@
text
@d8 2
a9 3
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation; either version 2 of the
 * License, or (at your option) any later version.
d14 1
a14 1
 * General Public License for more details.
d16 2
a17 2
 * You should have received a copy of the GNU General Public License
 * along with this file; see the file named COPYING for more
@


14.4
log
@update copyright to 2006
@
text
@d4 1
a4 1
 * Copyright (c) 1998-2006 United States Government as represented by
@


14.3
log
@update copyright to 2005
@
text
@d4 1
a4 1
 * Copyright (C) 1998-2005 United States Government as represented by
@


14.2
log
@GPL License changes
@
text
@d4 1
a4 1
 * Copyright (c) 1998-2004 United States Government as represented by
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d1 21
a21 2
/*
 *			A X E S . C
a36 4
 *
 * Copyright Notice -
 *      This software is Copyright (C) 1998 by the United States Army.
 *      All rights reserved.
@


1.3
log
@replace the wrapped config.h block with common.h
@
text
@d206 10
@


1.2
log
@obliterate externs.h
@
text
@d24 1
a24 3
#ifdef HAVE_CONFIG_H
# include "config.h"
#endif
@


1.1
log
@Vast reorganization begins.  Sources moved from top-level directories into src/.
@
text
@a36 1
#include "externs.h"
@

