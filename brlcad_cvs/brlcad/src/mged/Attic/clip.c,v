head	14.6;
access;
symbols
	stable-branch:14.3
	bobWinPort-20051223-freeze:14.3.2.1
	postmerge-20051223-bobWinPort:14.4
	premerge-20051223-bobWinPort:14.3
	rel-7-6-6:14.3
	rel-7-6-4:14.3
	rel-7-6-2:14.3
	rel-7-6-branch:14.3.0.6
	rel-7-6-0:14.3
	rel-7-4-2:14.3
	rel-7-4-branch:14.3.0.4
	bobWinPort:14.3.0.2
	rel-7-4-0:14.3
	rel-7-2-6:14.3
	rel-7-2-4:14.3
	rel-7-2-2:14.3
	rel-7-2-0:14.3
	rel-7-0-4:14.2
	rel-7-0-2:14.2
	rel-7-0-1:14.2
	opensource-post:14.2
	opensource-pre:1.3
	rel-7-0-branch:1.3.0.2
	rel-7-0:1.3;
locks; strict;
comment	@ * @;


14.6
date	2006.01.23.06.32.04;	author brlcad;	state dead;
branches;
next	14.5;

14.5
date	2006.01.18.06.46.19;	author brlcad;	state Exp;
branches;
next	14.4;

14.4
date	2005.12.23.21.26.31;	author bob1961;	state Exp;
branches;
next	14.3;

14.3
date	2005.01.30.20.31.05;	author brlcad;	state Exp;
branches
	14.3.2.1;
next	14.2;

14.2
date	2004.12.21.04.17.27;	author butler;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.17;	author morrison;	state Exp;
branches;
next	1.3;

1.3
date	2004.10.04.14.49.22;	author morrison;	state Exp;
branches;
next	1.2;

1.2
date	2004.08.02.23.01.51;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.20.15.20.21;	author morrison;	state Exp;
branches;
next	;

14.3.2.1
date	2005.09.08.16.09.50;	author bob1961;	state Exp;
branches;
next	;


desc
@@


14.6
log
@clip.c removed, being used from libdm like it should be
@
text
@/*                          C L I P . C
 * BRL-CAD
 *
 * Copyright (c) 1985-2006 United States Government as represented by
 * the U.S. Army Research Laboratory.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation; either version 2 of the
 * License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this file; see the file named COPYING for more
 * information.
 */
/** @@file clip.c
 *
 *  Functions -
 *	clip	clip a 2-D integer line seg against the size of the display
 *	vclip	clip a 3-D floating line segment against a bounding RPP.
 *
 *  Authors -
 *	clip() was written by Doug Kingston, 14 October 81
 *	Based on the clipping routine in "Principles of Computer
 *	Graphics" by Newman and Sproull, 1973, McGraw/Hill.
 *
 *	vclip() was adapted from RT by Mike Muuss, 17 January 1985.
 *
 *  Source -
 *	SECAD/VLD Computing Consortium, Bldg 394
 *	The U. S. Army Ballistic Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005
 */
#ifndef lint
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/mged/clip.c,v 14.5 2006/01/18 06:46:19 brlcad Exp $ (BRL)";
#endif

#include "common.h"

#include <stdio.h>
#include "machine.h"
#include "vmath.h"
#include "bu.h"
#include "tcl.h"

#include "mged_dm.h"


static int	code();

int
clip (fastf_t *xp1, fastf_t *yp1, fastf_t *xp2, fastf_t *yp2)
{
	char code1, code2;

	code1 = code (*xp1, *yp1);
	code2 = code (*xp2, *yp2);

	while (code1 || code2) {
		if (code1 & code2)
			return (-1);	/* No part is visible */

		/* SWAP codes, X's, and Y's */
		if (code1 == 0) {
			char ctemp;
			fastf_t temp;

			ctemp = code1;
			code1 = code2;
			code2 = ctemp;

			temp = *xp1;
			*xp1 = *xp2;
			*xp2 = temp;

			temp = *yp1;
			*yp1 = *yp2;
			*yp2 = temp;
		}

		if (code1 & 01)  {	/* Push toward left edge */
			*yp1 = *yp1 + (*yp2-*yp1)*(GED_MIN-*xp1)/(*xp2-*xp1);
			*xp1 = GED_MIN;
		}
		else if (code1 & 02)  {	/* Push toward right edge */
			*yp1 = *yp1 + (*yp2-*yp1)*(GED_MAX-*xp1)/(*xp2-*xp1);
			*xp1 = GED_MAX;
		}
		else if (code1 & 04)  {	/* Push toward bottom edge */
			*xp1 = *xp1 + (*xp2-*xp1)*(GED_MIN-*yp1)/(*yp2-*yp1);
			*yp1 = GED_MIN;
		}
		else if (code1 & 010)  {	/* Push toward top edge */
			*xp1 = *xp1 + (*xp2-*xp1)*(GED_MAX-*yp1)/(*yp2-*yp1);
			*yp1 = GED_MAX;
		}

		code1 = code (*xp1, *yp1);
	}

	return (0);
}

static int
code (fastf_t x, fastf_t y)
{
	int cval;

	cval = 0;
	if (x < GED_MIN)
		cval |= 01;
	else if (x > GED_MAX)
		cval |= 02;

	if (y < GED_MIN)
		cval |= 04;
	else if (y > GED_MAX)
		cval |= 010;

	return (cval);
}

#define EPSILON		0.0001
#define INFINITY	100000000.0

/*
 *			V C L I P
 *
 *  Clip a ray against a rectangular parallelpiped (RPP)
 *  that has faces parallel to the coordinate planes (a clipping RPP).
 *  The RPP is defined by a minimum point and a maximum point.
 *
 *  Returns -
 *	 0  if ray does not hit RPP,
 *	!0  if ray hits RPP.
 *
 *  Implicit Return -
 *	if !0 was returned, "a" and "b" have been clipped to the RPP.
 */
int vclip( vect_t a, vect_t b, register fastf_t *min, register fastf_t *max )
{
	static vect_t diff;
	static double sv;
	static double st;
	static double mindist, maxdist;
	register fastf_t *pt = &a[0];
	register fastf_t *dir = &diff[0];
	register int i;

	mindist = -INFINITY;
	maxdist = INFINITY;
	VSUB2( diff, b, a );

	for( i=0; i < 3; i++, pt++, dir++, max++, min++ )  {
		if( *dir < -EPSILON )  {
			if( (sv = (*min - *pt) / *dir) < 0.0 )
				return(0);	/* MISS */
			if(maxdist > sv)
				maxdist = sv;
			if( mindist < (st = (*max - *pt) / *dir) )
				mindist = st;
		}  else if( *dir > EPSILON )  {
			if( (st = (*max - *pt) / *dir) < 0.0 )
				return(0);	/* MISS */
			if(maxdist > st)
				maxdist = st;
			if( mindist < ((sv = (*min - *pt) / *dir)) )
				mindist = sv;
		}  else  {
			/*
			 *  If direction component along this axis is NEAR 0,
			 *  (ie, this ray is aligned with this axis),
			 *  merely check against the boundaries.
			 */
			if( (*min > *pt) || (*max < *pt) )
				return(0);	/* MISS */;
		}
	}
	if( mindist >= maxdist )
		return(0);	/* MISS */

	if( mindist > 1 || maxdist < 0 )
		return(0);	/* MISS */

	if( mindist <= 0 && maxdist >= 1 )
		return(1);	/* HIT, no clipping needed */

	/* Don't grow one end of a contained segment */
	if( mindist < 0 )
		mindist = 0;
	if( maxdist > 1 )
		maxdist = 1;

	/* Compute actual intercept points */
	VJOIN1( b, a, maxdist, diff );		/* b must go first */
	VJOIN1( a, a, mindist, diff );
	return(1);		/* HIT */
}

/*
 * Local Variables:
 * mode: C
 * tab-width: 8
 * c-basic-offset: 4
 * indent-tabs-mode: t
 * End:
 * ex: shiftwidth=4 tabstop=8
 */
@


14.5
log
@update copyright to 2006
@
text
@d40 1
a40 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/mged/clip.c,v 14.4 2005/12/23 21:26:31 bob1961 Exp $ (BRL)";
@


14.4
log
@Merge of bobWinPort
@
text
@d4 1
a4 1
 * Copyright (C) 1985-2005 United States Government as represented by
d40 1
a40 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/mged/clip.c,v 14.3 2005/01/30 20:31:05 brlcad Exp $ (BRL)";
@


14.3
log
@update copyright to 2005
@
text
@d40 1
a40 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/mged/clip.c,v 14.2 2004/12/21 04:17:27 butler Exp $ (BRL)";
d57 1
a57 1
clip (vect_t xp1, vect_t yp1, vect_t xp2, vect_t yp2)
@


14.3.2.1
log
@Mods for windows port
@
text
@d40 1
a40 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/mged/clip.c,v 14.3 2005/01/30 20:31:05 brlcad Exp $ (BRL)";
d57 1
a57 1
clip (fastf_t *xp1, fastf_t *yp1, fastf_t *xp2, fastf_t *yp2)
@


14.2
log
@GPL License changes
@
text
@d4 1
a4 1
 * Copyright (c) 1985-2004 United States Government as represented by
d40 1
a40 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/mged/clip.c,v 14.1 2004/11/16 19:42:17 morrison Exp $ (BRL)";
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d1 21
a21 2
/*
 *			C L I P . C
a37 4
 *  
 *  Copyright Notice -
 *	This software is Copyright (C) 1985-2004 by the United States Army.
 *	All rights reserved.
d40 1
a40 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/mged/clip.c,v 1.3 2004/10/04 14:49:22 morrison Exp $ (BRL)";
@


1.3
log
@ws
@
text
@d25 1
a25 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/mged/clip.c,v 1.2 2004/08/02 23:01:51 morrison Exp $ (BRL)";
d189 10
@


1.2
log
@replace the wrapped config.h block with common.h
@
text
@d25 1
a25 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/mged/clip.c,v 1.1 2004/05/20 15:20:21 morrison Exp $ (BRL)";
a29 2


d38 1
d42 1
a42 2
clip (xp1, yp1, xp2, yp2)
vect_t	xp1, yp1, xp2, yp2;
d95 1
a95 2
code (x, y)
fastf_t x, y;
@


1.1
log
@Vast reorganization begins.  Sources moved from top-level directories into src/.
@
text
@d25 1
a25 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/mged/clip.c,v 11.6 2004/05/10 15:30:48 erikg Exp $ (BRL)";
d28 1
a28 3
#ifdef HAVE_CONFIG_H
# include "config.h"
#endif
@

