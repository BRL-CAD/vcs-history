head	1.11;
access;
symbols
	rel-7-10-4:1.10
	STABLE:1.10.0.2
	rel-7-10-2:1.9
	rel-7-10-0:1.9
	rel-7-8-4:1.7
	rel-7-8-2:1.7
	rel-7-8-0:1.7
	trimnurbs-branch:1.7.0.4
	help:1.7
	temp_tag:1.7
	postmerge-20051223-bobWinPort:1.7
	premerge-20051223-bobWinPort:1.7
	rel-7-6-6:1.7
	rel-7-6-branch:1.7.0.2
	rel-7-6-4:1.7;
locks; strict;
comment	@# @;


1.11
date	2007.10.03.19.36.22;	author brlcad;	state Exp;
branches;
next	1.10;

1.10
date	2007.09.07.19.54.19;	author erikgreenwald;	state Exp;
branches;
next	1.9;

1.9
date	2007.04.03.02.47.07;	author brlcad;	state Exp;
branches;
next	1.8;

1.8
date	2007.02.03.10.34.14;	author brlcad;	state Exp;
branches;
next	1.7;

1.7
date	2005.11.03.22.35.25;	author brlcad;	state Exp;
branches
	1.7.2.1;
next	1.6;

1.6
date	2005.11.03.22.02.57;	author brlcad;	state Exp;
branches;
next	1.5;

1.5
date	2005.11.01.19.46.46;	author brlcad;	state Exp;
branches;
next	1.4;

1.4
date	2005.10.31.16.48.39;	author brlcad;	state Exp;
branches;
next	1.3;

1.3
date	2005.10.29.23.03.41;	author brlcad;	state Exp;
branches;
next	1.2;

1.2
date	2005.10.29.21.36.08;	author brlcad;	state Exp;
branches;
next	1.1;

1.1
date	2005.10.29.21.30.24;	author brlcad;	state Exp;
branches;
next	;

1.7.2.1
date	2005.11.03.22.35.25;	author brlcad;	state dead;
branches;
next	1.7.2.2;

1.7.2.2
date	2005.11.13.17.45.01;	author brlcad;	state Exp;
branches;
next	;


desc
@@


1.11
log
@remove the MAINTAINERCLEAN rules, they're never really used regardless of the debate over whether the Makefile.in files belong there or not
@
text
@noinst_LTLIBRARIES = libpoints.la

AM_CPPFLAGS = ${TCL_CPPFLAGS}

libpoints_la_LDFLAGS =
libpoints_la_LIBADD = ${BU}
libpoints_la_SOURCES = \
	count.c \
	points_parse.y \
	points_scan.l \
	process.c \
	main.c

noinst_HEADERS = \
	count.h \
	points_parse.h \
	process.h

points_parse.h: points_parse.y
main.lo: points_parse.h
process.lo: points_parse.h

BUILT_SOURCES = \
	points_parse.c \
	points_parse.h \
	points_scan.c

DISTCLEANFILES = $(BUILT_SOURCES)

include $(top_srcdir)/misc/Makefile.defs

FAST_OBJECTS = \
	$(libpoints_la_OBJECTS)
@


1.10
log
@add link dependancy information to shared libraries and reduce redundancy
@
text
@a28 1
MAINTAINERCLEANFILES = Makefile.in
@


1.9
log
@restructure library linkages so that brl-cad libraries no longer list their dependencies as a LIBADD.  dependencies are moved into configure.ac and provided via _LIBS variables so that they are specified at link time.  this supports hybrid static library compilation as well as other more varied mixture configurations.  use the new _LIBS variables throughout.  probably want to re-combine them later into a single symbol name per library but this will suffice for now.
@
text
@d6 1
a6 1
libpoints_la_LIBADD = ${BU} ${BU_LIBS}
@


1.8
log
@*yawn* remove one of the big two remaining public header sets from our include/ directory.  remove tcl headers from include/ and utilize the TCL_CPPFLAGS so compilation pulls headers from within src/other/libtcl instead.  since bu.h and raytrace.h include tcl foo, this implicates a change across almost the entire build to add the new CPPFLAGS.
@
text
@d6 1
a6 1
libpoints_la_LIBADD = ${BU}
@


1.7
log
@cylic dependency apparently -- try the .y
@
text
@d3 2
@


1.7.2.1
log
@file Makefile.am was added on branch rel-7-6-branch on 2005-11-13 17:45:01 +0000
@
text
@d1 32
@


1.7.2.2
log
@more merging changes from HEAD aka rel-7-6-4 to the rel-7-6-branch, adding the items that were moved and resolving rcs keyword conflicts
@
text
@a0 32
noinst_LTLIBRARIES = libpoints.la

libpoints_la_LDFLAGS =
libpoints_la_LIBADD = ${BU}
libpoints_la_SOURCES = \
	count.c \
	points_parse.y \
	points_scan.l \
	process.c \
	main.c

noinst_HEADERS = \
	count.h \
	points_parse.h \
	process.h

points_parse.h: points_parse.y
main.lo: points_parse.h
process.lo: points_parse.h

BUILT_SOURCES = \
	points_parse.c \
	points_parse.h \
	points_scan.c

DISTCLEANFILES = $(BUILT_SOURCES)
MAINTAINERCLEANFILES = Makefile.in

include $(top_srcdir)/misc/Makefile.defs

FAST_OBJECTS = \
	$(libpoints_la_OBJECTS)
@


1.6
log
@the headers are missing, help make distcheck work
@
text
@d17 1
a17 1
points_parse.h: points_parse.lo
@


1.5
log
@the header file depends on a libtool object
@
text
@d12 5
@


1.4
log
@encourage main and process to compile after points_parse.h is generated.  put main after anyways just to be safe
@
text
@d12 1
@


1.3
log
@designate the BUILT_SOURCES so that they are generated first
@
text
@a6 1
	main.c \
d9 5
a13 1
	process.c
@


1.2
log
@wrong fast objects list, no sense just making it static -- libtool will figure it out
@
text
@d12 6
@


1.1
log
@initial Makefile.am for building a utility library to be used by mged for reading point files
@
text
@d3 1
a3 1
libpoints_la_LDFLAGS = -static
d17 1
a17 4
	$(cad_boundp_OBJECTS) \
	$(cad_parea_OBJECTS) \
	$(mged_OBJECTS) \
	$(bin_PROGRAMS)
@

