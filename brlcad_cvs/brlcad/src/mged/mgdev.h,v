head	14.6;
access;
symbols
	rel-7-10-4:14.6
	STABLE:14.6.0.2
	stable-branch:14.3
	rel-7-10-2:14.6
	rel-7-10-0:14.6
	rel-7-8-4:14.4
	rel-7-8-2:14.4
	rel-7-8-0:14.4
	trimnurbs-branch:14.4.0.2
	help:14.4
	temp_tag:14.3
	bobWinPort-20051223-freeze:14.3
	postmerge-20051223-bobWinPort:14.3
	premerge-20051223-bobWinPort:14.3
	rel-7-6-6:14.3
	rel-7-6-4:14.3
	rel-7-6-2:14.3
	rel-7-6-branch:14.3.0.6
	rel-7-6-0:14.3
	rel-7-4-2:14.3
	rel-7-4-branch:14.3.0.4
	bobWinPort:14.3.0.2
	rel-7-4-0:14.3
	rel-7-2-6:14.3
	rel-7-2-4:14.3
	rel-7-2-2:14.3
	rel-7-2-0:14.3
	rel-7-0-4:14.2
	rel-7-0-2:14.2
	rel-7-0-1:14.2
	opensource-post:14.2
	opensource-pre:1.1
	rel-7-0-branch:1.1.0.2
	rel-7-0:1.1;
locks; strict;
comment	@ * @;


14.6
date	2007.01.23.01.13.42;	author brlcad;	state Exp;
branches;
next	14.5;

14.5
date	2007.01.20.14.36.57;	author brlcad;	state Exp;
branches;
next	14.4;

14.4
date	2006.01.18.06.46.19;	author brlcad;	state Exp;
branches;
next	14.3;

14.3
date	2005.01.30.20.31.06;	author brlcad;	state Exp;
branches;
next	14.2;

14.2
date	2004.12.21.04.17.27;	author butler;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.17;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.20.15.20.25;	author morrison;	state Exp;
branches;
next	;


desc
@@


14.6
log
@Sweeping license updates.  Documentation is fully relicensed to the BSD Documentation License (a minor variant of the FreeBSD Documentation License and BSD License).  All GPL code (mostly application code) is converted to the LGPL and now also specifically declares version 2.1, revoking the blank check to the FSF.  The intent of these sweeping changes are to simplify the licensing terms and increase overall flexibility of use, both externally (to users for their purposes) and internally (to allow application code to be migrated to libraries without creating GPL libraries).  As a collective work, BRL-CAD is now LGPL.
@
text
@/*                         M G D E V . H
 * BRL-CAD
 *
 * Copyright (c) 2004-2007 United States Government as represented by
 * the U.S. Army Research Laboratory.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * version 2.1 as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this file; see the file named COPYING for more
 * information.
 */
/** @@file mgdev.h
 *
 * This file contains definitions for building displaylists for the Megatek,
 * and will ordinarily be included in all user programs which use the Megatek.
 *
 * The Megatek provides a 12-bit, 4096 x 4096 address space.
 * Megatek addresses are mapped from byte addresses
 * by shifting LEFT two bits (multiplying by 4) since the Megatek
 * words are 32 bits long (4 bytes).  For example, the color-lookup
 * table addresses start at FEC0.  To access this with lseek(),
 * it looks like:
 *  	err = lseek( rfd, ((long) 0xFEC0)<<2, 0 );
 *
 * Authors -
 *	Charles Michael Kennedy
 *	Michael John Muuss
 *
 *	Ballistic Research Laboratory
 *	U. S. Army
 *	November, 1983
 *
 *		REVISION HISTORY:
 */

/*
 * Special Addresses in MEGATEK display list
 */
#define MDL_CONTROL	0x0000FFF1L	/* Graphics Engine control register */
#define MDL_COLORMAP	0x0000FEC0L	/* Color Lookup Table register */
#define MDL_LIST_START	0x00000001L	/* display list START address */
#define MDL_FORG_START	0x00000003L	/* foreground START address */
#define MDL_FSCD	0x000000C0L	/* first FSCD control block */
#define MDL_ASEGTAB	0x00000200L	/* actual displaylist (01000) */

/*
 * Miscellaneous defines
 */
#define MEG_WORD(x,y)		(((long)(x)<<16)|((long)(y)&0xFFFFL))
#define MAKE(x,y,z,color)	MEG_WORD( 0177000,0010000|((z)&0xFFF)), MEG_WORD( 0100000|((x)&0xFFF),(color<<12)|(y&0xFFF) )

/*
 * MEGATEK Instructions
 */
#define MGI_NO_XLATE	MEG_WORD( 0xFE80, 0x0000)	/* Reset translation */
#define MGI_RET	MEG_WORD( 0xFE40, 0x0000 )	/* Return from subroutine */
#define MGI_END	MEG_WORD( 0xFE00, 0x4000 )	/* End of display list */
#define MGI_NOP	MEG_WORD( 0xFE00, 0x0000 )	/* No-Op */
/*#define MGI_ENABLE	MEG_WORD( 0xFE80, 0x0024 )	/* enable display 1 */
#define MGI_ENABLE	MEG_WORD( 0xFE80, 0x0044 )	/* enable display 1+2 */

#define MGI_SETORIGIN(x,y)	MEG_WORD( 0xD000|(x&0xFFF), 0x7000|(y&0xFFF) )
#define MGI_SETCOLOR(c)		MEG_WORD( 0xFE10|(c&0x000F), 0x0000 )
#define MGI_SETDASH(p)		MEG_WORD( 0xE008, (p&0xFFFF) )

#define MGI_PA(x,y)		MEG_WORD( 0xC000|(x&0xFFF), 0x8000|(y&0xFFF) )
#define MGI_PA_BLINK(x,y)	MEG_WORD( 0xD000|(x&0xFFF), 0x8000|(y&0xFFF) )

/* Absolute vector instructions, set color and blink */
#define MGI_A_MOVE(x,y)		MEG_WORD( 0xC000|(x&0xFFF), 0x4000|(y&0xFFF) )
#define MGI_A_DRAW(x,y,c)	MEG_WORD( 0x0000|(x&0xFFF), (c<<12)|(y&0xFFF) )
#define MGI_A_DASH(x,y,c)	MEG_WORD( 0x2000|(x&0xFFF), (c<<12)|(y&0xFFF) )

/* Absolute vector instruction, existing color and blink */
#define MGI_DRAW(x,y)		MEG_WORD( 0xC000|(x&0xFFF), 0xC000|(y&0xFFF) )

#define MGI_Z_DRAW(z)	MEG_WORD( 0xFE00, 0xD000 | (z&0xFFF) ) /* PREV+DRAW */
#define MGI_Z_MOVE(z)	MEG_WORD( 0xFE00, 0x5000 | (z&0xFFF) ) /* PREV+BLANK*/
#define MGI_Z_NEXT(z)	MEG_WORD( 0xFE00, 0x9000 | (z&0xFFF) ) /* NEXT+DRAW */

#define MGI_JMP(w_addr)	MEG_WORD( 0xFC00, w_addr )	/* absolute jump */
#define MGI_JMS(w_addr)	MEG_WORD( 0xFC80, w_addr )	/* subroutine call */

/*
 * Character display
 * NOTE that 2 characters go into the right halfword of the instruction.
 * The character list is terminated by a NULL byte.
 */
#define MGCH(size,color)	(short)(0xF600 | size | color)
#define MGCH_S0		0x00		/* 341x227 */
#define MGCH_S1		0x10		/* 170x113 */
#define MGCH_S2		0x20		/* 113x 75 */
#define MGCH_S3		0x30		/*  85x 56 */
#define MGCH_S4		0x40		/*  68x 45 */
#define MGCH_S5		0x50		/*  56x 37 */
#define MGCH_S6		0x60		/*  48x 32 */
#define MGCH_S7		0x70		/*  42x 28 */

/*
 * MEGATEK partial instructions (instructions are 32 bits long)
 */
#define DASH	0xF0F0		/* blink pattern for change attribute instr. */
#define DCHA	0xFB44		/* front half of change attributes instr. */

/*
 * Megatek Peripheral Bus Addresses
 */
#define MGP_FSCD	0x18		/* Function Switch & Control Dials */
#define MGP_IPCU	0x34		/* Intel. Peripheral Control Unit */
#define MGP_PICK	0x10		/* Pick Module */
#define MGP_PRINT	0x08		/* Rasterizor Print Function */
#define MGP_PLOT	0x09		/*   "  Plot */
#define MGP_SPEC	0x0A		/*   "  Special Function */
#define MGP_COPY	0x0B		/*   "  Screen Copy Function */

/*
 * Local Variables:
 * mode: C
 * tab-width: 8
 * c-basic-offset: 4
 * indent-tabs-mode: t
 * End:
 * ex: shiftwidth=4 tabstop=8
 */
@


14.5
log
@update copyright to 2007
@
text
@d8 2
a9 3
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation; either version 2 of the
 * License, or (at your option) any later version.
d14 1
a14 1
 * General Public License for more details.
d16 2
a17 2
 * You should have received a copy of the GNU General Public License
 * along with this file; see the file named COPYING for more
@


14.4
log
@update copyright to 2006
@
text
@d4 1
a4 1
 * Copyright (c) 2004-2006 United States Government as represented by
@


14.3
log
@update copyright to 2005
@
text
@d4 1
a4 1
 * Copyright (C) 2004-2005 United States Government as represented by
@


14.2
log
@GPL License changes
@
text
@d4 2
a5 2
 * Copyright (c) 2004 United States Government as represented by the
 * U.S. Army Research Laboratory.
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d1 21
a21 2
/*
 *			M G D E V . H
@


1.1
log
@Vast reorganization begins.  Sources moved from top-level directories into src/.
@
text
@d105 10
@

