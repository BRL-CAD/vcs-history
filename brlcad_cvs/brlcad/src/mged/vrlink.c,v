head	14.18;
access;
symbols
	rel-7-10-4:14.16.2.1
	STABLE:14.16.0.2
	stable-branch:14.3
	rel-7-10-2:14.16
	rel-7-10-0:14.10
	rel-7-8-4:14.8
	rel-7-8-2:14.6
	rel-7-8-0:14.6
	trimnurbs-branch:14.5.0.2
	help:14.5
	temp_tag:14.4
	bobWinPort-20051223-freeze:14.3
	postmerge-20051223-bobWinPort:14.4
	premerge-20051223-bobWinPort:14.4
	rel-7-6-6:14.4
	rel-7-6-4:14.4
	rel-7-6-2:14.3
	rel-7-6-branch:14.3.0.6
	rel-7-6-0:14.3
	rel-7-4-2:14.3
	rel-7-4-branch:14.3.0.4
	bobWinPort:14.3.0.2
	rel-7-4-0:14.3
	rel-7-2-6:14.3
	rel-7-2-4:14.3
	rel-7-2-2:14.3
	rel-7-2-0:14.3
	rel-7-0-4:14.2
	rel-7-0-2:14.2
	rel-7-0-1:14.2
	opensource-post:14.2
	opensource-pre:1.5
	rel-7-0-branch:1.5.0.2
	rel-7-0:1.5;
locks; strict;
comment	@ * @;


14.18
date	2007.10.22.19.38.34;	author erikgreenwald;	state Exp;
branches;
next	14.17;

14.17
date	2007.09.15.16.23.18;	author brlcad;	state Exp;
branches;
next	14.16;

14.16
date	2007.07.26.01.13.58;	author brlcad;	state Exp;
branches
	14.16.2.1;
next	14.15;

14.15
date	2007.07.10.14.25.54;	author brlcad;	state Exp;
branches;
next	14.14;

14.14
date	2007.07.10.03.20.49;	author brlcad;	state Exp;
branches;
next	14.13;

14.13
date	2007.07.10.03.12.49;	author brlcad;	state Exp;
branches;
next	14.12;

14.12
date	2007.06.18.04.48.12;	author johnranderson;	state Exp;
branches;
next	14.11;

14.11
date	2007.06.16.21.17.25;	author johnranderson;	state Exp;
branches;
next	14.10;

14.10
date	2007.01.23.01.13.43;	author brlcad;	state Exp;
branches;
next	14.9;

14.9
date	2007.01.20.14.36.58;	author brlcad;	state Exp;
branches;
next	14.8;

14.8
date	2006.08.28.00.55.25;	author brlcad;	state Exp;
branches;
next	14.7;

14.7
date	2006.08.08.06.15.45;	author brlcad;	state Exp;
branches;
next	14.6;

14.6
date	2006.04.06.20.50.03;	author brlcad;	state Exp;
branches;
next	14.5;

14.5
date	2006.01.18.06.46.19;	author brlcad;	state Exp;
branches
	14.5.2.1;
next	14.4;

14.4
date	2005.10.23.04.44.37;	author brlcad;	state Exp;
branches;
next	14.3;

14.3
date	2005.01.30.20.31.06;	author brlcad;	state Exp;
branches
	14.3.6.1;
next	14.2;

14.2
date	2004.12.21.04.17.27;	author butler;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.17;	author morrison;	state Exp;
branches;
next	1.5;

1.5
date	2004.09.16.08.05.48;	author morrison;	state Exp;
branches;
next	1.4;

1.4
date	2004.09.03.23.30.58;	author morrison;	state Exp;
branches;
next	1.3;

1.3
date	2004.08.02.23.01.51;	author morrison;	state Exp;
branches;
next	1.2;

1.2
date	2004.06.08.22.04.30;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.20.15.20.30;	author morrison;	state Exp;
branches;
next	;

14.3.6.1
date	2005.11.13.13.46.18;	author brlcad;	state Exp;
branches;
next	;

14.5.2.1
date	2006.04.07.19.30.28;	author jlowenz;	state Exp;
branches;
next	;

14.16.2.1
date	2007.09.28.14.04.35;	author brlcad;	state Exp;
branches;
next	;


desc
@@


14.18
log
@move to using the new bu_vls_strcmp macro
@
text
@/*                        V R L I N K . C
 * BRL-CAD
 *
 * Copyright (c) 1992-2007 United States Government as represented by
 * the U.S. Army Research Laboratory.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * version 2.1 as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this file; see the file named COPYING for more
 * information.
 */
/** @@file vrlink.c
 *
 *  Author -
 *	Michael John Muuss
 *
 */
#ifndef lint
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/mged/vrlink.c,v 14.17 2007/09/15 16:23:18 brlcad Exp $ (BRL)";
#endif

#include "common.h"

#include <stdlib.h>
#include <stdio.h>
#include <math.h>
#include <string.h>

#include "tcl.h"

#include "machine.h"
#include "vmath.h"
#include "bu.h"
#include "raytrace.h"
#include "pkg.h"
#include "./ged.h"
#include "./mged_dm.h"

extern int		(*cmdline_hook)();	/* cmd.c */

#if 0
extern point_t		eye_pos_scr;		/* dozoom.c */
#endif

static struct pkg_conn	*vrmgr;			/* PKG connection to VR mgr */
static char		*vr_host = "None";	/* host running VR mgr */
static char		*tcp_port = "5555";	/* "gedd", remote mged */

#define VRMSG_ROLE	1	/* from MGED: Identify role of machine */
#define VRMSG_CMD	2	/* to MGED: Command to process */
#define VRMSG_EVENT	3	/* from MGED: device event */
#define VRMSG_POV	4	/* from MGED: point of view info */
#define VRMSG_VLIST	5	/* transfer binary vlist block */
#define VRMSG_CMD_REPLY	6	/* from MGED: reply to VRMSG_CMD */

void	ph_cmd(register struct pkg_conn *pc, char *buf);
void	ph_vlist(register struct pkg_conn *pc, char *buf);
static struct pkg_switch pkgswitch[] = {
	{ VRMSG_CMD,		ph_cmd,		"Command" },
	{ VRMSG_VLIST,		ph_vlist,	"Import vlist" },
	{ 0,			0,		(char *)0 }
};

#if 0
/*
 *			P K G _ S E N D _ V L S
 */
int
pkg_send_vls( type, vp, pc )
int		type;
struct bu_vls	*vp;
struct pkg_conn	*pc;
{
	BU_CK_VLS(vp);
	if(!pc)  {
		bu_log("pkg_send_vls:  NULL pointer\n");
		return -1;
	}
	return pkg_send( type, bu_vls_addr(vp), bu_vls_strlen(vp)+1, pc );
}
#endif

/*
 *  Called from cmdline() for now.
 *  Returns -
 *	!0	Print prompt for user.  Should always be this.
 *	 0	Don't print a prompt
 */
int
vr_event_hook(struct bu_vls *vp)
{
	BU_CK_VLS(vp);

	if( vrmgr == PKC_NULL )  {
		cmdline_hook = 0;	/* Relinquish this hook */
		return 1;
	}

	if( pkg_send_vls( VRMSG_EVENT, vp, vrmgr ) < 0 )  {
		bu_log("event: pkg_send VRMSG_EVENT failed, disconnecting\n");
		pkg_close(vrmgr);
		vrmgr = PKC_NULL;
		cmdline_hook = 0;	/* Relinquish this hook */
	}
	return 1;
}

/*
 *  Called from the Tk event handler
 */
void
vr_input_hook(void)
{
	int	val;

	val = pkg_suckin(vrmgr);
	if( val < 0 ) {
		bu_log("pkg_suckin() error\n");
	} else if( val == 0 )  {
		bu_log("vrmgr sent us an EOF\n");
	}
	if( val <= 0 )  {
		Tcl_DeleteFileHandler(vrmgr->pkc_fd);
		pkg_close(vrmgr);
		vrmgr = PKC_NULL;
		return;
	}
	if( pkg_process( vrmgr ) < 0 )
		bu_log("vrmgr:  pkg_process error encountered\n");
}

/*
 *  Called from ged.c refresh().
 */
void
vr_viewpoint_hook(void)
{
	struct bu_vls	str;
	static struct bu_vls	old_str;
	quat_t		orient;

	if( vrmgr == PKC_NULL )  {
		cmdline_hook = 0;	/* Relinquish this hook */
		return;
	}

	bu_vls_init_if_uninit(&old_str);
	bu_vls_init(&str);

	quat_mat2quat(orient, view_state->vs_vop->vo_rotation);

	/* Need to send current viewpoint to VR mgr */
	/* XXX more will be needed */
	/* Eye point, quaturnion for orientation */
	bu_vls_printf(&str, "pov {%e %e %e}   {%e %e %e %e}   %e   {%e %e %e}  %e\n",
		      -view_state->vs_vop->vo_center[MDX],
		      -view_state->vs_vop->vo_center[MDY],
		      -view_state->vs_vop->vo_center[MDZ],
		      V4ARGS(orient),
		      view_state->vs_vop->vo_scale,
		      V3ARGS(view_state->vs_vop->vo_eye_pos),
		      view_state->vs_vop->vo_perspective);

	if( bu_vls_strcmp( &old_str, &str ) == 0 )  {
		bu_vls_free( &str );
		return;
	}

	if( pkg_send_vls( VRMSG_POV, &str, vrmgr ) < 0 )  {
		bu_log("viewpoint: pkg_send VRMSG_POV failed, disconnecting\n");
		pkg_close(vrmgr);
		vrmgr = PKC_NULL;
		viewpoint_hook = 0;	/* Relinquish this hook */
	}
	bu_vls_trunc( &old_str, 0 );
	bu_vls_vlscat( &old_str, &str );
	bu_vls_free( &str );
}


/*
 *			F _ V R M G R
 *
 *  Establish a network link to the VR manager, using libpkg.
 *
 *  Syntax:  vrmgr host role
 */
int
f_vrmgr(ClientData clientData, Tcl_Interp *interp, int argc, char **argv)
{
	struct bu_vls	str;
	char		*role;

	if(argc < 3){
	  struct bu_vls vls;

	  bu_vls_init(&vls);
	  bu_vls_printf(&vls, "help vrmgr");
	  Tcl_Eval(interp, bu_vls_addr(&vls));
	  bu_vls_free(&vls);
	  return TCL_ERROR;
	}

	bu_vls_init(&str);

	if( vrmgr != PKC_NULL )  {
	  Tcl_AppendResult(interp, "Closing link to VRmgr ",
			   vr_host, "\n", (char *)NULL);
		pkg_close( vrmgr );
		vrmgr = PKC_NULL;
		vr_host = "none";
	}

	vr_host = bu_strdup(argv[1]);
	role = argv[2];

	if( strcmp( role, "master" ) == 0 )  {
	} else if( strcmp( role, "slave" ) == 0 )  {
	} else if( strcmp( role, "overview" ) == 0 )  {
	} else {
	   Tcl_AppendResult(interp, "role '", role, "' unknown, must be master/slave/overview\n",
			    (char *)NULL);
	   return TCL_ERROR;
	}

	vrmgr = pkg_open( vr_host, tcp_port, "tcp", "", "",
		pkgswitch, NULL );
	if( vrmgr == PKC_ERROR )  {
	  Tcl_AppendResult(interp, "mged/f_vrmgr: unable to contact ", vr_host,
			   ", port ", tcp_port, "\n", (char *)NULL);
	  vrmgr = PKC_NULL;
	  return TCL_ERROR;
	}

	bu_vls_from_argv( &str, argc-2, (const char **)argv+2 );

	/* Send initial message declaring our role */
	if( pkg_send_vls( VRMSG_ROLE, &str, vrmgr ) < 0 )  {
	  Tcl_AppendResult(interp, "pkg_send VRMSG_ROLE failed, disconnecting\n", (char *)NULL);
	  pkg_close(vrmgr);
	  vrmgr = NULL;
	  return TCL_ERROR;
	}

	/* Establish appropriate hooks */
	if( strcmp( role, "master" ) == 0 )  {
		viewpoint_hook = vr_viewpoint_hook;
	} else if( strcmp( role, "slave" ) == 0 )  {
		cmdline_hook = vr_event_hook;
	} else if( strcmp( role, "overview" ) == 0 )  {
		/* No hooks required, just listen */
	}
	Tcl_CreateFileHandler(vrmgr->pkc_fd, TCL_READABLE,
			     (Tcl_FileProc (*))vr_input_hook, (ClientData)NULL);
	bu_vls_free( &str );

	return TCL_OK;
}

/*
 *			P H _ C M D
 *
 *  Package handler for incomming commands.  Do whatever he says,
 *  and send a reply back.
 */
void
ph_cmd(register struct pkg_conn *pc, char *buf)
{
	int		status;
	const char	*result;
#define CMD_BUFSIZE 1024
	char buffer[CMD_BUFSIZE] = {0};

	status = Tcl_Eval(interp, buf);
	result = Tcl_GetStringResult(interp);

	snprintf(buffer, CMD_BUFSIZE, "%s", result);

	if( pkg_2send( VRMSG_CMD_REPLY,
		(status == TCL_OK) ? "Y" : "N", 1,
		buffer, CMD_BUFSIZE, pc ) < 0 )  {
		bu_log("ph_cmd: pkg_2send reply to vrmgr failed, disconnecting\n");
		pkg_close(vrmgr);
		vrmgr = PKC_NULL;
		cmdline_hook = 0;	/* Relinquish this hook */
	}
	if(buf) (void)free(buf);
}

/*
 *			P H _ V L I S T
 *
 *  Package handler for incomming vlist.
 *  Install whatever phantom solids he wants.
 */
void
ph_vlist(register struct pkg_conn *pc, char *buf)
{
	struct bu_list	vhead;
	struct bu_vls	name;

	bu_vls_init(&name);

	BU_LIST_INIT( &vhead );

	rt_vlist_import( &vhead, &name, (unsigned char *)buf );

	invent_solid( bu_vls_addr(&name), &vhead, 0x0000FF00L, 0 );

	bu_vls_free( &name );
	if(buf) (void)free(buf);
}

/*
 * Local Variables:
 * mode: C
 * tab-width: 8
 * c-basic-offset: 4
 * indent-tabs-mode: t
 * End:
 * ex: shiftwidth=4 tabstop=8
 */
@


14.17
log
@more c89 embracing.  c89 provides string.h for all of the various str*() and mem*() functions, so remove the check for its presence.  there is still likely to be work required for strict c89 conformance for the various bsd strings.h functions that may be in use.
@
text
@d27 1
a27 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/mged/vrlink.c,v 14.16 2007/07/26 01:13:58 brlcad Exp $ (BRL)";
d172 1
a172 1
	if( strcmp( bu_vls_addr(&old_str), bu_vls_addr(&str) ) == 0 )  {
@


14.16
log
@remove ephemeral data like phone numbers and addresses, including the misleading 'source' statements on code that is continually evolving and receiving contributions from many many sources
@
text
@d27 1
a27 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/mged/vrlink.c,v 14.15 2007/07/10 14:25:54 brlcad Exp $ (BRL)";
d35 1
a38 6
#ifdef HAVE_STRING_H
#include <string.h>
#else
#include <strings.h>
#endif

@


14.16.2.1
log
@more merging from HEAD.  bring in build system tweakage updates that should fix some library symbol problems from croping up post-release.
@
text
@d27 1
a27 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/mged/vrlink.c,v 14.17 2007/09/15 16:23:18 brlcad Exp $ (BRL)";
a34 1
#include <string.h>
d38 6
@


14.15
log
@rt_bufsize is in a header we don't use, so just define something
@
text
@a24 4
 *  Source -
 *	SECAD/VLD Computing Consortium
 *	The U. S. Army Ballistic Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5066
d27 1
a27 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/mged/vrlink.c,v 14.14 2007/07/10 03:20:49 brlcad Exp $ (BRL)";
@


14.14
log
@use bufsize instead
@
text
@d31 1
a31 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/mged/vrlink.c,v 14.12 2007/06/18 04:48:12 johnranderson Exp $ (BRL)";
d288 2
a289 1
	char buffer[RT_BUFSIZE] = {0};
d294 1
a294 1
	snprintf(buffer, RT_BUFSIZE, "%s", result);
d298 1
a298 1
		buffer, RT_BUFSIZE, pc ) < 0 )  {
@


14.13
log
@quell libpkg compilation warning, the buffer may be modified to add the pkg header so it shouldn't be const
@
text
@d288 1
a288 1
	char buffer[512] = {0};
d293 1
a293 1
	snprintf(buffer, 512, "%s", result);
d297 1
a297 1
		buffer, 512, pc ) < 0 )  {
@


14.12
log
@Eliminated more instances of direct access of interp->result (not allowed
since tcl 8.0)
@
text
@d31 1
a31 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/mged/vrlink.c,v 14.11 2007/06/16 21:17:25 johnranderson Exp $ (BRL)";
d288 1
d293 2
d297 1
a297 1
		result, strlen(result)+1, pc ) < 0 )  {
@


14.11
log
@Eliminated direct access of interp->result (Not reliable since tcl 8.0).
See the comment in tcl.h.
This also fixes the "units" command.
@
text
@d31 1
a31 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/mged/vrlink.c,v 14.10 2007/01/23 01:13:43 brlcad Exp $ (BRL)";
d287 1
a287 1
	char		*result;
@


14.10
log
@Sweeping license updates.  Documentation is fully relicensed to the BSD Documentation License (a minor variant of the FreeBSD Documentation License and BSD License).  All GPL code (mostly application code) is converted to the LGPL and now also specifically declares version 2.1, revoking the blank check to the FSF.  The intent of these sweeping changes are to simplify the licensing terms and increase overall flexibility of use, both externally (to users for their purposes) and internally (to allow application code to be migrated to libraries without creating GPL libraries).  As a collective work, BRL-CAD is now LGPL.
@
text
@d31 1
a31 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/mged/vrlink.c,v 14.9 2007/01/20 14:36:58 brlcad Exp $ (BRL)";
d287 1
d290 1
d294 1
a294 1
		interp->result, strlen(interp->result)+1, pc ) < 0 )  {
@


14.9
log
@update copyright to 2007
@
text
@d8 2
a9 3
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation; either version 2 of the
 * License, or (at your option) any later version.
d14 1
a14 1
 * General Public License for more details.
d16 2
a17 2
 * You should have received a copy of the GNU General Public License
 * along with this file; see the file named COPYING for more
d31 1
a31 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/mged/vrlink.c,v 14.8 2006/08/28 00:55:25 brlcad Exp $ (BRL)";
@


14.8
log
@quell libpkg warnings now that there are more comprehensive declarations.
@
text
@d4 1
a4 1
 * Copyright (c) 1992-2006 United States Government as represented by
d32 1
a32 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/mged/vrlink.c,v 14.7 2006/08/08 06:15:45 brlcad Exp $ (BRL)";
@


14.7
log
@enable the 'pov' command, getting rid of the peculiar undocumented TCP_FILES define.  move cmd_pov over to chgview.c like the comment suggests. (note that the command guts are over in librt)
@
text
@d32 1
a32 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/mged/vrlink.c,v 14.6 2006/04/06 20:50:03 brlcad Exp $ (BRL)";
d75 1
a75 1
void	ph_vlist(register struct pkg_conn *pc, unsigned char *buf);
d309 1
a309 1
ph_vlist(register struct pkg_conn *pc, unsigned char *buf)
d318 1
a318 1
	rt_vlist_import( &vhead, &name, buf );
@


14.6
log
@quell/fix issues raised by the Intel compiler on Altix
@
text
@d32 1
a32 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/mged/vrlink.c,v 14.5 2006/01/18 06:46:19 brlcad Exp $ (BRL)";
a197 20
/*
 *			F _ P O V
 *
 *  Process the "pov" command generated above.
 *  XXX this should move to chgview.c when finished.
 */
int
cmd_pov(ClientData	clientData,
	Tcl_Interp	*interp,
	int		argc,
	char		*argv[])
{
	int	ret;

	if ((ret = vo_pov_cmd(view_state->vs_vop, interp, argc, argv)) != TCL_OK)
		return ret;

	mged_variables->mv_perspective = view_state->vs_vop->vo_perspective;
	return TCL_OK;
}
@


14.5
log
@update copyright to 2006
@
text
@d32 1
a32 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/mged/vrlink.c,v 14.4 2005/10/23 04:44:37 brlcad Exp $ (BRL)";
d37 1
a37 2


@


14.5.2.1
log
@update from HEAD
@
text
@d32 1
a32 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/mged/vrlink.c,v 14.5 2006/01/18 06:46:19 brlcad Exp $ (BRL)";
d37 2
a38 1
#include <stdlib.h>
@


14.4
log
@trailing ws
@
text
@d4 1
a4 1
 * Copyright (C) 1992-2005 United States Government as represented by
d32 1
a32 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/mged/vrlink.c,v 14.3 2005/01/30 20:31:06 brlcad Exp $ (BRL)";
@


14.3
log
@update copyright to 2005
@
text
@d25 1
a25 1
 *  
d32 1
a32 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/mged/vrlink.c,v 14.2 2004/12/21 04:17:27 butler Exp $ (BRL)";
d174 1
a174 1
	bu_vls_printf(&str, "pov {%e %e %e}   {%e %e %e %e}   %e   {%e %e %e}  %e\n", 
@


14.3.6.1
log
@merge changes from HEAD aka rel-7-6-4 to the rel-7-6-branch just in case someone peeks a gander or tries to continue/build the branch
@
text
@d25 1
a25 1
 *
d32 1
a32 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
d174 1
a174 1
	bu_vls_printf(&str, "pov {%e %e %e}   {%e %e %e %e}   %e   {%e %e %e}  %e\n",
@


14.2
log
@GPL License changes
@
text
@d4 1
a4 1
 * Copyright (c) 1992-2004 United States Government as represented by
d32 1
a32 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/mged/vrlink.c,v 14.1 2004/11/16 19:42:17 morrison Exp $ (BRL)";
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d1 21
a21 2
/*
 *			V R L I N K . C
a29 4
 *  
 *  Copyright Notice -
 *	This software is Copyright (C) 1992-2004 by the United States Army.
 *	All rights reserved.
d32 1
a32 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/mged/vrlink.c,v 1.5 2004/09/16 08:05:48 morrison Exp $ (BRL)";
@


1.5
log
@quell yet more warnings..
@
text
@d17 1
a17 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/mged/vrlink.c,v 1.4 2004/09/03 23:30:58 morrison Exp $ (BRL)";
d331 10
@


1.4
log
@USE_STRING_H is no more.. it's HAVE_STRING_H
@
text
@d17 1
a17 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/mged/vrlink.c,v 1.3 2004/08/02 23:01:51 morrison Exp $ (BRL)";
d259 1
a259 1
	bu_vls_from_argv( &str, argc-2, argv+2 );
@


1.3
log
@replace the wrapped config.h block with common.h
@
text
@d17 1
a17 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/mged/vrlink.c,v 1.2 2004/06/08 22:04:30 morrison Exp $ (BRL)";
d29 1
a29 1
#ifdef USE_STRING_H
@


1.2
log
@obliterate externs.h
@
text
@d17 1
a17 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
d20 1
a20 3
#ifdef HAVE_CONFIG_H
# include "config.h"
#endif
@


1.1
log
@Vast reorganization begins.  Sources moved from top-level directories into src/.
@
text
@d17 1
a17 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/mged/vrlink.c,v 11.29 2004/05/10 15:30:48 erikg Exp $ (BRL)";
a37 1
#include "externs.h"
@

