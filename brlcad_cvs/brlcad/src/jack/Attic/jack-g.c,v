head	14.8;
access;
symbols
	stable-branch:14.4
	bobWinPort-20051223-freeze:14.4
	rel-7-6-2:14.4
	rel-7-6-branch:14.4.0.6
	rel-7-6-0:14.4
	rel-7-4-2:14.4
	rel-7-4-branch:14.4.0.4
	bobWinPort:14.4.0.2
	rel-7-4-0:14.4
	rel-7-2-6:14.4
	rel-7-2-4:14.4
	rel-7-2-2:14.4
	rel-7-2-0:14.4
	rel-7-0-4:14.3
	rel-7-0-2:14.3
	rel-7-0-1:14.3
	opensource-post:14.3
	opensource-pre:1.6
	rel-7-0-branch:1.6.0.2
	rel-7-0:1.6;
locks; strict;
comment	@ * @;


14.8
date	2005.10.27.03.36.04;	author brlcad;	state dead;
branches;
next	14.7;

14.7
date	2005.10.23.04.44.31;	author brlcad;	state Exp;
branches;
next	14.6;

14.6
date	2005.09.19.21.11.15;	author brlcad;	state Exp;
branches;
next	14.5;

14.5
date	2005.09.09.05.50.29;	author brlcad;	state Exp;
branches;
next	14.4;

14.4
date	2005.01.30.20.30.42;	author brlcad;	state Exp;
branches
	14.4.6.1;
next	14.3;

14.3
date	2004.12.21.07.18.57;	author morrison;	state Exp;
branches;
next	14.2;

14.2
date	2004.12.21.01.10.02;	author morrison;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.13;	author morrison;	state Exp;
branches;
next	1.6;

1.6
date	2004.09.16.03.41.04;	author morrison;	state Exp;
branches;
next	1.5;

1.5
date	2004.09.03.23.30.57;	author morrison;	state Exp;
branches;
next	1.4;

1.4
date	2004.08.02.23.01.48;	author morrison;	state Exp;
branches;
next	1.3;

1.3
date	2004.06.09.17.59.04;	author erikg;	state Exp;
branches;
next	1.2;

1.2
date	2004.06.08.22.04.17;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.20.15.19.22;	author morrison;	state Exp;
branches;
next	;

14.4.6.1
date	2005.11.13.13.46.14;	author brlcad;	state dead;
branches;
next	;


desc
@@


14.8
log
@moved all the geometry converter directories from src/. to src/conv/.
@
text
@/*                        J A C K - G . C
 * BRL-CAD
 *
 * Copyright (C) 2004-2005 United States Government as represented by
 * the U.S. Army Research Laboratory.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation; either version 2 of the
 * License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this file; see the file named COPYING for more
 * information.
 */
/** @@file jack-g.c
 *
 *  Program to convert JACK Psurf file into a BRL-CAD NMG object.
 *
 *  Author -
 *	Michael John Markowski
 *
 *  Source -
 *	The U. S. Army Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5066
 *
 */
#ifndef lint
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/jack/jack-g.c,v 14.7 2005/10/23 04:44:31 brlcad Exp $ (BRL)";
#endif

#include "common.h"

#ifdef HAVE_UNISTD_H
#  include <unistd.h>
#endif

#include <stdio.h>
#include <math.h>
#ifdef HAVE_STRING_H
#  include <string.h>
#else
#  include <strings.h>
#endif

#include "machine.h"
#include "bu.h"
#include "vmath.h"
#include "bn.h"
#include "nmg.h"
#include "raytrace.h"
#include "rtgeom.h"
#include "wdb.h"

#include "../librt/debug.h"


#define		MAX_NUM_PTS	15360

struct vlist {
	fastf_t		pt[3*MAX_NUM_PTS];
	struct vertex	*vt[MAX_NUM_PTS];
};

static struct rt_tol	tol;

static char	usage[] = "Usage: %s [-r region] [-g group] [jack_db] [brlcad_db]\n";

BU_EXTERN( fastf_t nmg_loop_plane_area, (const struct loopuse *lu, plane_t pl ) );

int	psurf_to_nmg(struct model *m, FILE *fp, char *jfile);
int	create_brlcad_db(struct rt_wdb *fpout, struct model *m, char *reg_name, char *grp_name);
void	jack_to_brlcad(FILE *fpin, struct rt_wdb *fpout, char *reg_name, char *grp_name, char *jfile, char *bfile);


int
main(int argc, char **argv)
{
	char		*base, *bfile, *grp_name, *jfile, *reg_name;
	FILE		*fpin;
	struct rt_wdb	*fpout;
	int		doti;
	register int	c;

	grp_name = reg_name = NULL;

	/* Get command line arguments. */
	while ((c = getopt(argc, argv, "g:r:")) != EOF) {
		switch (c) {
		case 'g':
			grp_name = optarg;
			/* BRL-CAD group to add psurf to. */
			break;
		case 'r':
			/* BRL-CAD region name for psurf. */
			reg_name = optarg;
			break;
		default:
			fprintf(stderr, usage, argv[0]);
			exit(1);
			break;
		}
	}

	/* Get Jack psurf input file name. */
	if (optind >= argc) {
		jfile = "-";
		fpin = stdin;
	} else {
		jfile = argv[optind];
		if ((fpin = fopen(jfile, "r")) == NULL) {
			fprintf(stderr,
				"%s: cannot open %s for reading\n",
				argv[0], jfile);
			exit(1);
		}
	}

	/* Get BRL-CAD output data base name. */
	optind++;
	if (optind >= argc) {
		bfile = "-";
		fprintf(stderr, usage, argv[0]);
		exit(1);
	} else {
		bfile = argv[optind];
		if ((fpout = wdb_fopen(bfile)) == NULL) {
			fprintf(stderr,
				"%s: cannot open %s for writing\n",
				argv[0], bfile);
			exit(1);
		}
	}

	/* Output BRL-CAD database header.  No problem if more than one. */
	mk_id(fpout, jfile);

	/* Make default region name if none given. */
	if (!reg_name) {
		/* Ignore leading path info. */
		base = strrchr(argv[1], '/');
		if (!base)
			base = argv[1];
		else
			base++;
		reg_name = malloc(sizeof(base)+1);
		strcpy(reg_name, base);
		/* Ignore .pss extension if it's there. */
		doti = strlen(reg_name) - 4;
		if (doti > 0 && !strcmp(".pss", reg_name+doti))
			reg_name[doti] = '\0';
	}

	jack_to_brlcad(fpin, fpout, reg_name, grp_name, jfile, bfile);
	fclose(fpin);
	wdb_close(fpout);
	return 0;
}

/*
 *	J A C K _ T O _ B R L C A D
 *
 *	Convert a UPenn Jack data base into a BRL-CAD data base.
 */
void
jack_to_brlcad(FILE *fpin, struct rt_wdb *fpout, char *reg_name, char *grp_name, char *jfile, char *bfile)
{
	struct model	*m;

	m = nmg_mm();			/* Make nmg model. */
	psurf_to_nmg(m, fpin, jfile);	/* Convert psurf model to nmg. */
	create_brlcad_db(fpout, m, reg_name, grp_name);	/* Put in db. */
	nmg_km(m);			/* Destroy the nmg model. */
}

/*
 *	R E A D _ P S U R F _ V E R T I C E S
 *
 *	Read in vertices from a psurf file and store them in an
 *	array of nmg vertex structures.
 *
 *	Fix this!  Only allows set max of points and assumes
 *	no errors during reading...
 */
int
read_psurf_vertices(FILE *fp, struct vlist *vert)
    		    	/* Psurf file pointer. */
            	      	/* Array of read in vertices. */
{
	fastf_t	x, y, z;
	int	i;
	int	bomb=0;

	/* Read vertices. */
	for (i = 0; fscanf(fp, "%lf %lf %lf", &x, &y, &z) == 3; i++) {
		if( i >= MAX_NUM_PTS )
			bomb = 1;
		else
		{
			vert->pt[3*i+0] = x * 10.;	/* Convert cm to mm. */
			vert->pt[3*i+1] = y * 10.;
			vert->pt[3*i+2] = z * 10.;
			vert->vt[i] = (struct vertex *)0;
		}
		fscanf(fp, "%*[^\n]");
	}
	fscanf(fp, ";;");

	if( bomb )
	{
		rt_log( "Dataset contains %d data points, code is dimensioned for %d\n", i, MAX_NUM_PTS );
		rt_bomb( "jack-g\n" );
	}

	return(i);
}

/*
 *	R E A D _ P S U R F _ F A C E
 *
 *	Read in the vertexes describing a face of a psurf.
 */
int
read_psurf_face(FILE *fp, int *lst)
{
	int	i, n;

	for (i = 0; fscanf(fp, "%d", &n) == 1; i++)
		lst[i] = n;
	fscanf(fp, "%*[^\n]");
	return(i);
}

/*
 *	P S U R F _ T O _ N M G
 *
 */
int
psurf_to_nmg(struct model *m, FILE *fp, char *jfile)
            	   	/* Input/output, nmg model. */
    		    	/* Input, pointer to psurf data file. */
    		       	/* Name of Jack data base file. */
{
	int		face, fail, i, lst[MAX_NUM_PTS], nf, nv;
	struct faceuse	*outfaceuses[MAX_NUM_PTS];
	struct nmgregion *r;
	struct shell	*s;
	struct vertex	*vertlist[MAX_NUM_PTS];
	struct vlist	vert;

	/* Copied from proc-db/nmgmodel.c */
	tol.magic = RT_TOL_MAGIC;
	tol.dist = 0.01;
	tol.dist_sq = tol.dist * tol.dist;
	tol.perp = 0.001;
	tol.para = 0.999;

	face = 0;
	r = nmg_mrsv(m);	/* Make region, empty shell, vertex. */
	s = RT_LIST_FIRST(shell, &r->s_hd);

	while ( (nv = read_psurf_vertices(fp, &vert)) != 0 ) {
		while ( (nf = read_psurf_face(fp, lst)) != 0 ) {

			/* Make face out of vertices in lst (ccw ordered). */
			for (i = 0; i < nf; i++)
				vertlist[i] = vert.vt[lst[i]-1];
			outfaceuses[face] = nmg_cface(s, vertlist, nf);
			face++;

			/* Save (possibly) newly created vertex structs. */
			for (i = 0; i < nf; i++)
				vert.vt[lst[i]-1] = vertlist[i];
		}
		fscanf(fp, ";;");

		/* Associate the vertex geometry, ccw. */
		for (i = 0; i < nv; i++)
			if (vert.vt[i])
				nmg_vertex_gv(vert.vt[i], &vert.pt[3*i]);
			else
				fprintf(stderr, "%s, vertex %d is unused\n",
					jfile, i+1);
	}

	nmg_model_vertex_fuse( m, &tol );

	/* Associate the face geometry. */
	for (i = 0, fail = 0; i < face; i++)
	{
		struct loopuse *lu;
		plane_t pl;

		lu = RT_LIST_FIRST( loopuse , &outfaceuses[i]->lu_hd );
		if( nmg_loop_plane_area( lu , pl ) < 0.0 )
		{
			fail = 1;
			nmg_kfu( outfaceuses[i] );
		}
		else
			nmg_face_g( outfaceuses[i] , pl );
	}
	if (fail)
		return(-1);

	if( face )
	{
		nmg_kill_zero_length_edgeuses( m );

		/* Compute "geometry" for region and shell */
		nmg_region_a(r, &tol);

		nmg_model_break_e_on_v( m, &tol );
		nmg_kill_zero_length_edgeuses( m );

		/* Glue edges of outward pointing face uses together. */
		nmg_model_edge_fuse( m, &tol );
	}

	return(0);
}

/*
 *	C R E A T E _ B R L C A D _ D B
 *
 *	Write the nmg to a BRL-CAD style data base.
 */
int
create_brlcad_db(struct rt_wdb *fpout, struct model *m, char *reg_name, char *grp_name)
{
	char	*rname, *sname;
	struct shell *s;
	struct nmgregion *r;

	rname = malloc(sizeof(reg_name) + 3);	/* Region name. */
	sname = malloc(sizeof(reg_name) + 3);	/* Solid name. */

	sprintf(sname, "s.%s", reg_name);
	nmg_kill_zero_length_edgeuses( m );
	nmg_rebound( m, &tol );
	r = BU_LIST_FIRST( nmgregion, &m->r_hd);
	s = BU_LIST_FIRST( shell, &r->s_hd );
	mk_bot_from_nmg(fpout, sname,  s);		/* Make BOT object. */
	sprintf(rname, "r.%s", reg_name);
	mk_comb1(fpout, rname, sname, 1);	/* Put object in a region. */
	if (grp_name) {
		mk_comb1(fpout, grp_name, rname, 1);	/* Region in group. */
	}
	return 0;
}

/*
 * Local Variables:
 * mode: C
 * tab-width: 8
 * c-basic-offset: 4
 * indent-tabs-mode: t
 * End:
 * ex: shiftwidth=4 tabstop=8
 */
@


14.7
log
@trailing ws
@
text
@d34 1
a34 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/jack/jack-g.c,v 14.6 2005/09/19 21:11:15 brlcad Exp $ (BRL)";
@


14.6
log
@s/RT_EXTERN/BU_EXTERN/
@
text
@d27 1
a27 1
 *  
d31 1
a31 1
 *  
d34 1
a34 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/jack/jack-g.c,v 14.5 2005/09/09 05:50:29 brlcad Exp $ (BRL)";
@


14.5
log
@use BRL-CAD instead of brl-cad if only to be at least internally consistent and serve good example
@
text
@d34 1
a34 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/jack/jack-g.c,v 14.4 2005/01/30 20:30:42 brlcad Exp $ (BRL)";
d74 1
a74 1
RT_EXTERN( fastf_t nmg_loop_plane_area, (const struct loopuse *lu, plane_t pl ) );
@


14.4
log
@update copyright to 2005
@
text
@d34 1
a34 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/jack/jack-g.c,v 14.3 2004/12/21 07:18:57 morrison Exp $ (BRL)";
d331 1
a331 1
 *	Write the nmg to a brl-cad style data base.
@


14.4.6.1
log
@merge changes from HEAD aka rel-7-6-4 to the rel-7-6-branch just in case someone peeks a gander or tries to continue/build the branch
@
text
@d34 1
a34 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/jack/Attic/jack-g.c,v 14.4 2005/01/30 20:30:42 brlcad Exp $ (BRL)";
@


14.3
log
@the significantly modified pd files are incorporated as new works and assigned copyright, so remove the old statement.
@
text
@d4 2
a5 2
 * Copyright (c) 2004 United States Government as represented by the
 * U.S. Army Research Laboratory.
d34 1
a34 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/jack/jack-g.c,v 14.2 2004/12/21 01:10:02 morrison Exp $ (BRL)";
@


14.2
log
@assign copyright and GPL license
@
text
@a31 2
 *  Distribution Status -
 *	Public Domain, Distribution Unlimitied.
d34 1
a34 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/jack/jack-g.c,v 14.1 2004/11/16 19:42:13 morrison Exp $ (BRL)";
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d1 21
a21 2
/*
 *			J A C K - G . C
d36 1
a36 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/jack/jack-g.c,v 1.6 2004/09/16 03:41:04 morrison Exp $ (BRL)";
@


1.6
log
@stdio file pointers are no longer used by libwdb, use struct rt_wdb pointers
@
text
@d17 1
a17 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/jack/jack-g.c,v 1.5 2004/09/03 23:30:57 morrison Exp $ (BRL)";
d339 10
@


1.5
log
@USE_STRING_H is no more.. it's HAVE_STRING_H
@
text
@d17 1
a17 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/jack/jack-g.c,v 1.4 2004/08/02 23:01:48 morrison Exp $ (BRL)";
d23 1
a23 1
# include <unistd.h>
d25 1
a25 1
                                                                                                                                                                            
d29 1
a29 1
#include <string.h>
d31 1
a31 1
#include <strings.h>
d33 1
d42 1
d45 1
d61 2
a62 1
void	jack_to_brlcad(FILE *fpin, FILE *fpout, char *reg_name, char *grp_name, char *jfile, char *bfile);
d154 1
a154 1
jack_to_brlcad(FILE *fpin, FILE *fpout, char *reg_name, char *grp_name, char *jfile, char *bfile)
@


1.4
log
@replace the wrapped config.h block with common.h
@
text
@d17 1
a17 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/jack/jack-g.c,v 1.3 2004/06/09 17:59:04 erikg Exp $ (BRL)";
d28 1
a28 1
#ifdef USE_STRING_H
@


1.3
log
@include unistd.h for getopt stuff
@
text
@d17 1
a17 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/jack/jack-g.c,v 1.2 2004/06/08 22:04:17 morrison Exp $ (BRL)";
d20 1
a20 3
#ifdef HAVE_CONFIG_H
# include "config.h"
#endif
@


1.2
log
@obliterate externs.h
@
text
@d17 1
a17 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
d24 4
a27 2


@


1.1
log
@Vast reorganization begins.  Sources moved from top-level directories into src/.
@
text
@d17 1
a17 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/jack/jack-g.c,v 11.11 2004/05/10 15:30:43 erikg Exp $ (BRL)";
a33 1
#include "externs.h"
@

