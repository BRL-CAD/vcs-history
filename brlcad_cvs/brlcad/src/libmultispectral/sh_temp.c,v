head	14.15;
access;
symbols
	rel-7-10-4:14.15
	STABLE:14.15.0.2
	stable-branch:14.9
	rel-7-10-2:14.15
	rel-7-10-0:14.15
	rel-7-8-4:14.12
	rel-7-8-2:14.12
	rel-7-8-0:14.12
	trimnurbs-branch:14.12.0.2
	help:14.12
	temp_tag:14.10
	bobWinPort-20051223-freeze:14.9
	postmerge-20051223-bobWinPort:14.10
	premerge-20051223-bobWinPort:14.10
	rel-7-6-6:14.10
	rel-7-6-4:14.10
	rel-7-6-2:14.9
	rel-7-6-branch:14.9.0.6
	rel-7-6-0:14.9
	rel-7-4-2:14.9
	rel-7-4-branch:14.9.0.4
	bobWinPort:14.9.0.2
	rel-7-4-0:14.9
	rel-7-2-6:14.9
	rel-7-2-4:14.9
	rel-7-2-2:14.9
	rel-7-2-0:14.8
	rel-7-0-4:14.7
	rel-7-0-2:14.7
	rel-7-0-1:14.7
	opensource-post:14.7
	opensource-pre:1.2
	rel-7-0-branch:1.2.0.2
	rel-7-0:1.2;
locks; strict;
comment	@ * @;


14.15
date	2007.01.27.01.41.37;	author brlcad;	state Exp;
branches;
next	14.14;

14.14
date	2007.01.23.01.13.35;	author brlcad;	state Exp;
branches;
next	14.13;

14.13
date	2007.01.20.14.36.53;	author brlcad;	state Exp;
branches;
next	14.12;

14.12
date	2006.01.23.04.45.19;	author brlcad;	state Exp;
branches;
next	14.11;

14.11
date	2006.01.18.06.46.16;	author brlcad;	state Exp;
branches;
next	14.10;

14.10
date	2005.10.23.04.44.34;	author brlcad;	state Exp;
branches;
next	14.9;

14.9
date	2005.03.28.06.31.27;	author bob1961;	state Exp;
branches
	14.9.6.1;
next	14.8;

14.8
date	2005.01.30.20.30.54;	author brlcad;	state Exp;
branches;
next	14.7;

14.7
date	2004.12.21.07.32.30;	author morrison;	state Exp;
branches;
next	14.6;

14.6
date	2004.12.21.06.58.42;	author morrison;	state Exp;
branches;
next	14.5;

14.5
date	2004.12.21.06.44.32;	author morrison;	state Exp;
branches;
next	14.4;

14.4
date	2004.12.21.06.18.44;	author morrison;	state Exp;
branches;
next	14.3;

14.3
date	2004.12.21.05.45.23;	author morrison;	state Exp;
branches;
next	14.2;

14.2
date	2004.12.21.02.30.03;	author morrison;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.15;	author morrison;	state Exp;
branches;
next	1.2;

1.2
date	2004.08.02.23.01.49;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.20.15.19.48;	author morrison;	state Exp;
branches;
next	;

14.9.6.1
date	2005.11.13.13.46.15;	author brlcad;	state Exp;
branches;
next	;


desc
@@


14.15
log
@ws. lots and lots of ws.  see sh/ws.sh for details (cases 'abcdeg').
@
text
@/*                       S H _ T E M P . C
 * BRL-CAD
 *
 * Copyright (c) 1999-2007 United States Government as represented by
 * the U.S. Army Research Laboratory.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * version 2.1 as published by the Free Software Foundation.
 *
 * This library is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this file; see the file named COPYING for more
 * information.
 */
/** @@file sh_temp.c
 *
 *  Temperature map lookup.
 *  Based upon liboptical/sh_text.c
 *
 *  Author -
 *	Michael John Muuss
 *
 *  Source -
 *	The U. S. Army Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5068  USA
 */
#ifndef lint
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libmultispectral/sh_temp.c,v 14.14 2007/01/23 01:13:35 brlcad Exp $ (ARL)";
#endif

#include "common.h"

#include <stddef.h>
#include <stdio.h>
#include <ctype.h>

#include "machine.h"
#include "vmath.h"
#include "raytrace.h"
#include "rtprivate.h"

extern struct region	env_region;		/* import from view.c */

HIDDEN int	temp_setup(register struct region *rp, struct bu_vls *matparm, char **dpp, const struct mfuncs *mfp, struct rt_i *rtip), temp_render(struct application *ap, struct partition *pp, struct shadework *swp, char *dp);
HIDDEN void	temp_print(register struct region *rp), temp_free(char *cp);
HIDDEN void	temp_transp_hook();

extern int mlib_zero(), mlib_one();
extern void	mlib_void();

struct mfuncs temp_mfuncs[] = {
	{MF_MAGIC,	"temp",		0,		MFI_UV,		0,
	temp_setup,	temp_render,	temp_print,	temp_free },

	{0,		(char *)0,	0,		0,		0,
	0,		0,		0,		0 }
};

#define TXT_NAME_LEN 128
struct temp_specific {
	char	t_file[TXT_NAME_LEN];	/* Filename */
	int	t_w;		/* Width of texture in pixels */
	int	t_n;		/* Number of scanlines */
	struct bu_mapped_file	*mp;
};
#define TX_NULL	((struct temp_specific *)0)
#define TX_O(m)	bu_offsetof(struct temp_specific, m)

struct bu_structparse temp_parse[] = {
	{"%s",	TXT_NAME_LEN, "file", bu_offsetofarray(struct temp_specific, t_file),		BU_STRUCTPARSE_FUNC_NULL },
	{"%d",	1, "w",		TX_O(t_w),		BU_STRUCTPARSE_FUNC_NULL },
	{"%d",	1, "n",		TX_O(t_n),		BU_STRUCTPARSE_FUNC_NULL },
	{"%d",	1, "l",		TX_O(t_n),		BU_STRUCTPARSE_FUNC_NULL }, /*compat*/
	{"",	0, (char *)0,	0,			BU_STRUCTPARSE_FUNC_NULL }
};

/*
 *  			T X T _ R E N D E R
 *
 *  Given a u,v coordinate within the texture ( 0 <= u,v <= 1.0 ),
 *  return a pointer to the relevant pixel.
 *
 *  Note that .pix files are stored left-to-right, bottom-to-top,
 *  which works out very naturally for the indexing scheme.
 */
HIDDEN int
temp_render(struct application *ap, struct partition *pp, struct shadework *swp, char *dp)
{
	register struct temp_specific *tp =
		(struct temp_specific *)dp;
	fastf_t xmin, xmax, ymin, ymax;
	int dx, dy;
	register fastf_t temp = 0;

	if( rdebug & RDEBUG_SHADE )
		bu_log( "in temp_render(): du=%g, dv=%g\n", swp->sw_uv.uv_du, swp->sw_uv.uv_dv );
	/*
	 * If no texture file present, or if
	 * texture isn't and can't be read, give debug colors
	 * Set temp in degK to be the sum of the X&Y screen coordinates.
	 */
	if( tp->t_file[0] == '\0' || !tp->mp )  {
		swp->sw_temperature = ap->a_x + ap->a_y;
		if( swp->sw_reflect > 0 || swp->sw_transmit > 0 )
			(void)rr_render( ap, pp, swp );
		return(1);
	}

	/* u is left->right index, v is line number bottom->top */
	/* Don't filter more than 1/8 of the texture for 1 pixel! */
	if( swp->sw_uv.uv_du > 0.125 )  swp->sw_uv.uv_du = 0.125;
	if( swp->sw_uv.uv_dv > 0.125 )  swp->sw_uv.uv_dv = 0.125;

	if( swp->sw_uv.uv_du < 0 || swp->sw_uv.uv_dv < 0 )  {
		bu_log("temp_render uv=%g,%g, du dv=%g %g seg=%s\n",
			swp->sw_uv.uv_u, swp->sw_uv.uv_v, swp->sw_uv.uv_du, swp->sw_uv.uv_dv,
			pp->pt_inseg->seg_stp->st_name );
		swp->sw_uv.uv_du = swp->sw_uv.uv_dv = 0;
	}

	xmin = swp->sw_uv.uv_u - swp->sw_uv.uv_du;
	xmax = swp->sw_uv.uv_u + swp->sw_uv.uv_du;
	ymin = swp->sw_uv.uv_v - swp->sw_uv.uv_dv;
	ymax = swp->sw_uv.uv_v + swp->sw_uv.uv_dv;
	if( xmin < 0 )  xmin = 0;
	if( ymin < 0 )  ymin = 0;
	if( xmax > 1 )  xmax = 1;
	if( ymax > 1 )  ymax = 1;

	if( rdebug & RDEBUG_SHADE )
		bu_log( "footprint in texture space is (%g %g) <-> (%g %g)\n",
			xmin * (tp->t_w-1), ymin * (tp->t_n-1),
			xmax * (tp->t_w-1), ymax * (tp->t_n-1) );

	dx = (int)(xmax * (tp->t_w-1)) - (int)(xmin * (tp->t_w-1));
	dy = (int)(ymax * (tp->t_n-1)) - (int)(ymin * (tp->t_n-1));

	if( rdebug & RDEBUG_SHADE )
		bu_log( "\tdx = %d, dy = %d\n", dx, dy );
	if( dx == 0 && dy == 0 )
	{
		/* No averaging necessary */

		register unsigned char *cp;
		double ttemp;

		cp = ((unsigned char *)(tp->mp->buf)) +
			(int)(ymin * (tp->t_n-1)) * tp->t_w * 8 +
			(int)(xmin * (tp->t_w-1)) * 8;
		ntohd( (unsigned char *)&ttemp, cp, 1 );
		temp += ttemp;
	}
	else
	{
		/* Calculate weighted average of cells in footprint */

		fastf_t tot_area=0.0;
		fastf_t cell_area;
		int start_line, stop_line, line;
		int start_col, stop_col, col;
		fastf_t xstart, xstop, ystart, ystop;

		xstart = xmin * (tp->t_w-1);
		xstop = xmax * (tp->t_w-1);
		ystart = ymin * (tp->t_n-1);
		ystop = ymax * (tp->t_n-1);

		start_line = ystart;
		stop_line = ystop;
		start_col = xstart;
		stop_col = xstop;

		if( rdebug & RDEBUG_SHADE )
		{
			bu_log( "\thit in texture space = (%g %g)\n", swp->sw_uv.uv_u * (tp->t_w-1), swp->sw_uv.uv_v * (tp->t_n-1) );
			bu_log( "\t averaging from  (%g %g) to (%g %g)\n", xstart, ystart, xstop, ystop );
			bu_log( "\tcontributions to average:\n" );
		}

		for( line = start_line ; line <= stop_line ; line++ )
		{
			register unsigned char *cp;
			fastf_t line_factor;
			fastf_t line_upper, line_lower;

			line_upper = line + 1.0;
			if( line_upper > ystop )
				line_upper = ystop;
			line_lower = line;
			if( line_lower < ystart )
				line_lower = ystart;
			line_factor = line_upper - line_lower;
			cp = ((unsigned char *)(tp->mp->buf)) +
				line * tp->t_w * 8 + (int)(xstart) * 8;

			for( col = start_col ; col <= stop_col ; col++ )
			{
				fastf_t col_upper, col_lower;
				double ttemp;

				col_upper = col + 1.0;
				if( col_upper > xstop )
					col_upper = xstop;
				col_lower = col;
				if( col_lower < xstart )
					col_lower = xstart;
				cell_area = line_factor * (col_upper - col_lower);
				tot_area += cell_area;

				ntohd( (unsigned char *)&ttemp, cp, 1 );

				if( rdebug & RDEBUG_SHADE )
					bu_log( "\t %g weight=%g (from col=%d line=%d)\n",
						ttemp,
						cell_area, col, line );

				temp += ttemp * cell_area;
			}
		}
		temp /= tot_area;
	}

	if( rdebug & RDEBUG_SHADE )
		bu_log( " average temp: %g\n", temp );

	swp->sw_temperature = temp;

	if( swp->sw_reflect > 0 || swp->sw_transmit > 0 )
		(void)rr_render( ap, pp, swp );
	return(1);
}

/*
 *			T X T _ S E T U P
 */
HIDDEN int
temp_setup(register struct region *rp, struct bu_vls *matparm, char **dpp, const struct mfuncs *mfp, struct rt_i *rtip)


				/* New since 4.4 release */
{
	register struct temp_specific *tp;
	int		pixelbytes = 8;

	BU_CK_VLS( matparm );
	BU_GETSTRUCT( tp, temp_specific );
	*dpp = (char *)tp;

	tp->t_file[0] = '\0';
	tp->t_w = tp->t_n = -1;
	if( bu_struct_parse( matparm, temp_parse, (char *)tp ) < 0 )  {
		bu_free( (char *)tp, "temp_specific" );
		return(-1);
	}
	if( tp->t_w < 0 )  tp->t_w = 512;
	if( tp->t_n < 0 )  tp->t_n = tp->t_w;

	if( tp->t_file[0] == '\0' )  return -1;	/* FAIL, no file */
	if( !(tp->mp = bu_open_mapped_file( tp->t_file, NULL )) )
		return -1;				/* FAIL */

	/* Ensure file is large enough */
	if( tp->mp->buflen < tp->t_w * tp->t_n * pixelbytes )  {
		bu_log("\ntemp_setup() ERROR %s %s needs %d bytes, '%s' only has %d\n",
			rp->reg_name,
			mfp->mf_name,
			tp->t_w * tp->t_n * pixelbytes,
			tp->mp->name,
			tp->mp->buflen );
		return -1;				/* FAIL */
	}

	return 1;				/* OK */
}

/*
 *			T X T _ P R I N T
 */
HIDDEN void
temp_print(register struct region *rp)
{
	bu_struct_print(rp->reg_name, temp_parse, (char *)rp->reg_udata);
}

/*
 *			T X T _ F R E E
 */
HIDDEN void
temp_free(char *cp)
{
	struct temp_specific *tp =
		(struct temp_specific *)cp;

	if( tp->mp )  bu_close_mapped_file( tp->mp );
	bu_free( cp, "temp_specific" );
}

/*
 * Local Variables:
 * mode: C
 * tab-width: 8
 * c-basic-offset: 4
 * indent-tabs-mode: t
 * End:
 * ex: shiftwidth=4 tabstop=8
 */
@


14.14
log
@Sweeping license updates.  Documentation is fully relicensed to the BSD Documentation License (a minor variant of the FreeBSD Documentation License and BSD License).  All GPL code (mostly application code) is converted to the LGPL and now also specifically declares version 2.1, revoking the blank check to the FSF.  The intent of these sweeping changes are to simplify the licensing terms and increase overall flexibility of use, both externally (to users for their purposes) and internally (to allow application code to be migrated to libraries without creating GPL libraries).  As a collective work, BRL-CAD is now LGPL.
@
text
@d33 1
a33 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libmultispectral/sh_temp.c,v 14.13 2007/01/20 14:36:53 brlcad Exp $ (ARL)";
d245 1
a245 3


                                /* New since 4.4 release */
@


14.13
log
@update copyright to 2007
@
text
@d9 1
a9 2
 * as published by the Free Software Foundation; either version 2 of
 * the License, or (at your option) any later version.
d14 1
a14 1
 * Library General Public License for more details.
d33 1
a33 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libmultispectral/sh_temp.c,v 14.12 2006/01/23 04:45:19 brlcad Exp $ (ARL)";
@


14.12
log
@include stddef.h for bu_offsetof
@
text
@d4 1
a4 1
 * Copyright (c) 1999-2006 United States Government as represented by
d34 1
a34 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libmultispectral/sh_temp.c,v 14.11 2006/01/18 06:46:16 brlcad Exp $ (ARL)";
@


14.11
log
@update copyright to 2006
@
text
@d34 1
a34 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libmultispectral/sh_temp.c,v 14.10 2005/10/23 04:44:34 brlcad Exp $ (ARL)";
d39 1
a39 2


d42 1
d73 1
a73 1
#define TX_O(m)	offsetof(struct temp_specific, m)
@


14.10
log
@trailing ws
@
text
@d4 1
a4 1
 * Copyright (C) 1999-2005 United States Government as represented by
d34 1
a34 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libmultispectral/sh_temp.c,v 14.9 2005/03/28 06:31:27 bob1961 Exp $ (ARL)";
@


14.9
log
@Add code to allow liboptical to be a Windows DLL
@
text
@d22 1
a22 1
 *  
d34 1
a34 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libmultispectral/sh_temp.c,v 14.8 2005/01/30 20:30:54 brlcad Exp $ (ARL)";
d85 1
a85 1
 *  
d140 1
a140 1
			
d228 1
a228 1
	
d244 4
a247 4
                      	    
             		         
    			      
                   	     
@


14.9.6.1
log
@merge changes from HEAD aka rel-7-6-4 to the rel-7-6-branch just in case someone peeks a gander or tries to continue/build the branch
@
text
@d22 1
a22 1
 *
d34 1
a34 1
static const char RCSid[] = "@@(#)$Header$ (ARL)";
d85 1
a85 1
 *
d140 1
a140 1

d228 1
a228 1

d244 4
a247 4




@


14.8
log
@update copyright to 2005
@
text
@d34 1
a34 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libmultispectral/sh_temp.c,v 14.7 2004/12/21 07:32:30 morrison Exp $ (ARL)";
a45 2
#include "shadefuncs.h"
#include "shadework.h"
@


14.7
log
@tidy up a lil bit
@
text
@d4 1
a4 1
 * Copyright (c) 1999-2004 United States Government as represented by
d34 1
a34 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/libmultispectral/sh_temp.c,v 14.6 2004/12/21 06:58:42 morrison Exp $ (ARL)";
@


14.6
log
@remove the old copyright notice section as it's been supplanted (and copyright is now claimable in the us via assignmgent)
@
text
@a31 2
 *  
 *
d34 1
a34 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/libmultispectral/sh_temp.c,v 14.5 2004/12/21 06:44:32 morrison Exp $ (ARL)";
@


14.5
log
@remove the old distribution notice section
@
text
@a33 3
 *  Copyright Notice -
 *	This software is Copyright (C) 1999-2004 by the United States Army
 *	in all countries except the USA.  All rights reserved.
d36 1
a36 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/libmultispectral/sh_temp.c,v 14.4 2004/12/21 06:18:44 morrison Exp $ (ARL)";
@


14.4
log
@they should have received a copy of the LGPL with LGPL'd files
@
text
@a32 4
 *  Distribution Notice -
 *	Re-distribution of this software is restricted, as described in
 *	your "Statement of Terms and Conditions for the Release of
 *	The BRL-CAD Package" license agreement.
d39 1
a39 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/libmultispectral/sh_temp.c,v 14.3 2004/12/21 05:45:23 morrison Exp $ (ARL)";
@


14.3
log
@s/GNU Library General/GNU Lesser General/g
@
text
@d17 2
a18 2
 * You should have received a copy of the GNU General Public License
 * along with this file; see the file named COPYING for more
d43 1
a43 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/libmultispectral/sh_temp.c,v 14.2 2004/12/21 02:30:03 morrison Exp $ (ARL)";
@


14.2
log
@assign copyright and LGPL
@
text
@d8 1
a8 1
 * modify it under the terms of the GNU Library General Public License
d43 1
a43 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/libmultispectral/sh_temp.c,v 14.1 2004/11/16 19:42:15 morrison Exp $ (ARL)";
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d1 21
a21 2
/*
 *  			S H _ T E M P . C
d43 1
a43 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/libmultispectral/sh_temp.c,v 1.2 2004/08/02 23:01:49 morrison Exp $ (ARL)";
@


1.2
log
@replace the wrapped config.h block with common.h
@
text
@d24 1
a24 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/libmultispectral/sh_temp.c,v 1.1 2004/05/20 15:19:48 morrison Exp $ (ARL)";
d297 10
@


1.1
log
@Vast reorganization begins.  Sources moved from top-level directories into src/.
@
text
@d24 1
a24 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/libmultispectral/sh_temp.c,v 1.13 2004/05/10 15:30:45 erikg Exp $ (ARL)";
d27 1
a27 3
#ifdef HAVE_CONFIG_H
# include "config.h"
#endif
@

