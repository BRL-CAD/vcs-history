head	14.11;
access;
symbols
	rel-7-10-4:14.10
	STABLE:14.10.0.2
	stable-branch:14.3
	rel-7-10-2:14.10
	rel-7-10-0:14.9
	rel-7-8-4:14.7
	rel-7-8-2:14.7
	rel-7-8-0:14.7
	trimnurbs-branch:14.6.0.2
	help:14.6
	temp_tag:14.4
	bobWinPort-20051223-freeze:14.3
	postmerge-20051223-bobWinPort:14.4
	premerge-20051223-bobWinPort:14.4
	rel-7-6-6:14.4
	rel-7-6-4:14.4
	rel-7-6-2:14.3
	rel-7-6-branch:14.3.0.6
	rel-7-6-0:14.3
	rel-7-4-2:14.3
	rel-7-4-branch:14.3.0.4
	bobWinPort:14.3.0.2
	rel-7-4-0:14.3
	rel-7-2-6:14.3
	rel-7-2-4:14.3
	rel-7-2-2:14.3
	rel-7-2-0:14.3
	rel-7-0-4:14.2
	rel-7-0-2:14.2
	rel-7-0-1:14.2
	opensource-post:14.2
	opensource-pre:1.3
	rel-7-0-branch:1.3.0.2
	rel-7-0:1.3;
locks; strict;
comment	@ * @;


14.11
date	2007.11.21.15.56.42;	author erikgreenwald;	state Exp;
branches;
next	14.10;

14.10
date	2007.05.18.04.13.51;	author brlcad;	state Exp;
branches;
next	14.9;

14.9
date	2007.01.23.01.13.47;	author brlcad;	state Exp;
branches;
next	14.8;

14.8
date	2007.01.20.14.37.00;	author brlcad;	state Exp;
branches;
next	14.7;

14.7
date	2006.04.05.18.19.55;	author brlcad;	state Exp;
branches;
next	14.6;

14.6
date	2006.01.28.00.36.29;	author brlcad;	state Exp;
branches
	14.6.2.1;
next	14.5;

14.5
date	2006.01.18.06.46.24;	author brlcad;	state Exp;
branches;
next	14.4;

14.4
date	2005.10.23.04.44.38;	author brlcad;	state Exp;
branches;
next	14.3;

14.3
date	2005.01.30.20.31.12;	author brlcad;	state Exp;
branches
	14.3.6.1;
next	14.2;

14.2
date	2004.12.21.03.53.50;	author butler;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.31;	author morrison;	state Exp;
branches;
next	1.3;

1.3
date	2004.08.02.23.01.52;	author morrison;	state Exp;
branches;
next	1.2;

1.2
date	2004.06.08.22.04.37;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.20.15.20.54;	author morrison;	state Exp;
branches;
next	;

14.3.6.1
date	2005.11.13.13.46.19;	author brlcad;	state Exp;
branches;
next	;

14.6.2.1
date	2006.04.07.19.34.23;	author jlowenz;	state Exp;
branches;
next	;


desc
@@


14.11
log
@change bu_bomb to bu_exit when the sky isn't really falling
@
text
@/*                    S C R I P T - T A B . C
 * BRL-CAD
 *
 * Copyright (c) 2004-2007 United States Government as represented by
 * the U.S. Army Research Laboratory.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * version 2.1 as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this file; see the file named COPYING for more
 * information.
 */
/** @@file script-tab.c
 *
 *  Given an RT-style viewpoint animation script,
 *  extract out the essential viewing parameters,
 *  in a form suitable for input back to tabinterp.
 *
 *  This allows scripts generated by one set of tools to be
 *  easily interpolated to higher or lower temporal resolution.
 *
 *  Author -
 *	Michael John Muuss
 *
 *  Source -
 *	The U. S. Army Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5068  USA
 */
#ifndef lint
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/tab/script-tab.c,v 14.10 2007/05/18 04:13:51 brlcad Exp $ (ARL)";
#endif

#include "common.h"

#include <stdlib.h>
#include <stdio.h>
#include <ctype.h>
#include <math.h>
#ifdef HAVE_UNIX_IO
#  include <sys/types.h>
#  include <sys/stat.h>
#endif
#ifdef HAVE_UNISTD_H
#  include <unistd.h>
#endif

#include "machine.h"
#include "vmath.h"
#include "raytrace.h"


point_t	eye_model;		/* model-space location of eye */
mat_t	Viewrotscale;
fastf_t	viewsize;
int	curframe;		/* current frame number */

/*
 *			C M _ S T A R T
 *
 *  Process "start" command in new format input stream
 */
int
cm_start( argc, argv )
int	argc;
char	**argv;
{
	curframe = atoi(argv[1]);
	return 0;
}

int
cm_vsize( argc, argv )
int	argc;
char	**argv;
{
	viewsize = atof( argv[1] );
	return(0);
}

int
cm_eyept( argc, argv )
int	argc;
char	**argv;
{
	register int i;

	for( i=0; i<3; i++ )
		eye_model[i] = atof( argv[i+1] );
	return(0);
}

int
cm_lookat_pt( argc, argv )
int	argc;
char	**argv;
{
	point_t	pt;
	vect_t	dir;
	int	yflip = 0;

	if( argc < 4 )
		return(-1);
	pt[X] = atof(argv[1]);
	pt[Y] = atof(argv[2]);
	pt[Z] = atof(argv[3]);
	if( argc > 4 )
		yflip = atoi(argv[4]);

	/*
	 *  eye_pt must have been specified before here (for now)
	 */
	VSUB2( dir, pt, eye_model );
	VUNITIZE( dir );
	bn_mat_lookat( Viewrotscale, dir, yflip );
	return(0);
}

int
cm_vrot( argc, argv )
int	argc;
char	**argv;
{
	register int i;

	for( i=0; i<16; i++ )
		Viewrotscale[i] = atof( argv[i+1] );
	return(0);
}

int
cm_orientation( argc, argv )
int	argc;
char	**argv;
{
	register int	i;
	quat_t		quat;

	for( i=0; i<4; i++ )
		quat[i] = atof( argv[i+1] );
	quat_quat2mat( Viewrotscale, quat );
	return(0);
}

/*
 *			C M _ E N D
 *
 *  The output occurs here.
 *
 *  framenumber, viewsize, eye x y z, orientation x y z w
 */
int
cm_end( argc, argv )
int	argc;
char	**argv;
{
	quat_t	orient;

	/* If no matrix or az/el specified yet, use params from cmd line */
	if( Viewrotscale[15] <= 0.0 )
		bu_exit(EXIT_FAILURE, "cm_end:  matrix not specified\n");

	quat_mat2quat( orient, Viewrotscale );

	/* Output information about this frame */
	printf("%d %.15e %.15e %.15e %.15e %.15e %.15e %.15e %.15e\n",
		curframe,
		viewsize,
		V3ARGS(eye_model),
		V4ARGS(orient) );

	return(0);
}

int
cm_tree( argc, argv )
int		argc;
const char	**argv;
{
	/* No-op */
	return(0);
}

int
cm_multiview( argc, argv )
int	argc;
char	**argv;
{
	bu_exit(EXIT_FAILURE, "cm_multiview: not supported\n");
	return( 0 );	/* for the compilers */
}

/*
 *			C M _ A N I M
 *
 *  Experimental animation code
 *
 *  Usage:  anim <path> <type> args
 */
int
cm_anim( argc, argv )
int	argc;
char	**argv;
{
	/* No-op */
	return(0);
}

/*
 *			C M _ C L E A N
 *
 *  Clean out results of last rt_prep(), and start anew.
 */
int
cm_clean( argc, argv )
int	argc;
char	**argv;
{
	/* No-op */
	return(0);
}

/*
 *			C M _ S E T
 *
 *  Allow variable values to be set or examined.
 */
int
cm_set( argc, argv )
int	argc;
char	**argv;
{
	/* No-op */
	return(0);
}

/*
 *			C M _ A E
 */
int
cm_ae( argc, argv )
int	argc;
char	**argv;
{
	bu_exit(EXIT_FAILURE, "cm_ae: Unable to compute model min/max RPP\n");
	return(0);
}

/*
 *			C M _ O P T
 */
int
cm_opt( argc, argv )
int	argc;
char	**argv;
{
	/* No-op */
	return(0);
}

/*
 *  Command table for RT control script language
 *  Copied verbatim from ../rt/do.c
 */

struct command_tab rt_cmdtab[] = {
	{"start", "frame number", "start a new frame",
		cm_start,	2, 2},
	{"viewsize", "size in mm", "set view size",
		cm_vsize,	2, 2},
	{"eye_pt", "xyz of eye", "set eye point",
		cm_eyept,	4, 4},
	{"lookat_pt", "x y z [yflip]", "set eye look direction, in X-Y plane",
		cm_lookat_pt,	4, 5},
	{"viewrot", "4x4 matrix", "set view direction from matrix",
		cm_vrot,	17,17},
	{"orientation", "quaturnion", "set view direction from quaturnion",
		cm_orientation,	5, 5},
	{"end", 	"", "end of frame setup, begin raytrace",
		cm_end,		1, 1},
	{"multiview", "", "produce stock set of views",
		cm_multiview,	1, 1},
	{"anim", 	"path type args", "specify articulation animation",
		cm_anim,	4, 999},
	{"tree", 	"treetop(s)", "specify alternate list of tree tops",
		cm_tree,	1, 999},
	{"clean", "", "clean articulation from previous frame",
		cm_clean,	1, 1},
	{"set", 	"", "show or set parameters",
		cm_set,		1, 999},
	{"ae", "azim elev", "specify view as azim and elev, in degrees",
		cm_ae,		3, 3},
	{"opt", "-flags", "set flags, like on command line",
		cm_opt,		2, 999},
	{(char *)0, (char *)0, (char *)0,
		0,		0, 0}	/* END */
};

/*
 *			M A I N
 */
int
main( argc, argv )
int	argc;
char	**argv;
{
	register char	*buf;
	register int	ret;

	if( argc != 1 || isatty(fileno(stdin)) )  {
		fprintf(stderr,"Usage: script-tab < script > table\n");
		return 1;
	}

	/*
	 * New way - command driven.
	 * Process sequence of input commands.
	 * All the work happens in the functions
	 * called by rt_do_cmd().
	 */
	while( (buf = rt_read_cmd( stdin )) != (char *)0 )  {
#if		0
		fprintf(stderr,"cmd: %s\n", buf );
#endif
		ret = rt_do_cmd( NULL, buf, rt_cmdtab );
		if( ret < 0 )  {
			bu_log("Command failure on '%s'\n", buf);
			bu_free( buf, "cmd buf" );
			break;
		}
		bu_free( buf, "cmd buf" );
	}
	return 0;
}

/*
 * Local Variables:
 * mode: C
 * tab-width: 8
 * c-basic-offset: 4
 * indent-tabs-mode: t
 * End:
 * ex: shiftwidth=4 tabstop=8
 */
@


14.10
log
@rt_bomb() has been deprecated since before 7.0, but even our sources weren't properly updated to reflect this change.  update all of our sources to use bu_bomb() now.
@
text
@d37 1
a37 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/tab/script-tab.c,v 14.9 2007/01/23 01:13:47 brlcad Exp $ (ARL)";
d167 1
a167 1
		bu_bomb("cm_end:  matrix not specified\n");
d195 1
a195 1
	bu_bomb("cm_multiview: not supported\n");
d251 1
a251 1
	bu_bomb("cm_ae: Unable to compute model min/max RPP\n");
@


14.9
log
@Sweeping license updates.  Documentation is fully relicensed to the BSD Documentation License (a minor variant of the FreeBSD Documentation License and BSD License).  All GPL code (mostly application code) is converted to the LGPL and now also specifically declares version 2.1, revoking the blank check to the FSF.  The intent of these sweeping changes are to simplify the licensing terms and increase overall flexibility of use, both externally (to users for their purposes) and internally (to allow application code to be migrated to libraries without creating GPL libraries).  As a collective work, BRL-CAD is now LGPL.
@
text
@d37 1
a37 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/tab/script-tab.c,v 14.8 2007/01/20 14:37:00 brlcad Exp $ (ARL)";
d167 1
a167 1
		rt_bomb("cm_end:  matrix not specified\n");
d195 1
a195 1
	rt_bomb("cm_multiview: not supported\n");
d251 1
a251 1
	rt_bomb("cm_ae: Unable to compute model min/max RPP\n");
@


14.8
log
@update copyright to 2007
@
text
@d8 2
a9 3
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation; either version 2 of the
 * License, or (at your option) any later version.
d14 1
a14 1
 * General Public License for more details.
d16 2
a17 2
 * You should have received a copy of the GNU General Public License
 * along with this file; see the file named COPYING for more
d37 1
a37 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/tab/script-tab.c,v 14.7 2006/04/05 18:19:55 brlcad Exp $ (ARL)";
@


14.7
log
@more header/warning cleanup from Intel compiler warnings on Altix
@
text
@d4 1
a4 1
 * Copyright (c) 2004-2006 United States Government as represented by
d38 1
a38 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/tab/script-tab.c,v 14.6 2006/01/28 00:36:29 brlcad Exp $ (ARL)";
@


14.6
log
@header cleanup, atof() requires stdlib.h on altix/posix, fix 64-bitness
@
text
@d38 1
a38 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/tab/script-tab.c,v 14.5 2006/01/18 06:46:24 brlcad Exp $ (ARL)";
d51 3
@


14.6.2.1
log
@update from HEAD
@
text
@d38 1
a38 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/tab/script-tab.c,v 14.6 2006/01/28 00:36:29 brlcad Exp $ (ARL)";
a50 3
#ifdef HAVE_UNISTD_H
#  include <unistd.h>
#endif
@


14.5
log
@update copyright to 2006
@
text
@d38 1
a38 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/tab/script-tab.c,v 14.4 2005/10/23 04:44:38 brlcad Exp $ (ARL)";
d43 1
a43 2


d48 2
a49 2
# include <sys/types.h>
# include <sys/stat.h>
d56 1
@


14.4
log
@trailing ws
@
text
@d4 1
a4 1
 * Copyright (C) 2004-2005 United States Government as represented by
d38 1
a38 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/tab/script-tab.c,v 14.3 2005/01/30 20:31:12 brlcad Exp $ (ARL)";
@


14.3
log
@update copyright to 2005
@
text
@d32 1
a32 1
 *  
d38 1
a38 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/tab/script-tab.c,v 14.2 2004/12/21 03:53:50 butler Exp $ (ARL)";
d241 1
a241 1
/* 
@


14.3.6.1
log
@merge changes from HEAD aka rel-7-6-4 to the rel-7-6-branch just in case someone peeks a gander or tries to continue/build the branch
@
text
@d32 1
a32 1
 *
d38 1
a38 1
static const char RCSid[] = "@@(#)$Header$ (ARL)";
d241 1
a241 1
/*
@


14.2
log
@GPL license changes
@
text
@d4 2
a5 2
 * Copyright (c) 2004 United States Government as represented by the
 * U.S. Army Research Laboratory.
d38 1
a38 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/tab/script-tab.c,v 14.1 2004/11/16 19:42:31 morrison Exp $ (ARL)";
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d1 21
a21 2
/*
 *			S C R I P T - T A B . C
a35 3
 *  
 *  Distribution Status -
 *	Public Domain, Distribution Unlimited.
d38 1
a38 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/tab/script-tab.c,v 1.3 2004/08/02 23:01:52 morrison Exp $ (ARL)";
@


1.3
log
@replace the wrapped config.h block with common.h
@
text
@d22 1
a22 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/tab/script-tab.c,v 1.2 2004/06/08 22:04:37 morrison Exp $ (ARL)";
d323 10
@


1.2
log
@obliterate externs.h
@
text
@d22 1
a22 1
static const char RCSid[] = "@@(#)$Header$ (ARL)";
d25 1
a25 3
#ifdef HAVE_CONFIG_H
# include "config.h"
#endif
@


1.1
log
@Vast reorganization begins.  Sources moved from top-level directories into src/.
@
text
@d22 1
a22 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/tab/script-tab.c,v 1.7 2004/05/10 15:30:50 erikg Exp $ (ARL)";
a41 1
#include "externs.h"
@

