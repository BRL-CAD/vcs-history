head	14.14;
access;
symbols
	rel-7-10-4:14.13
	STABLE:14.13.0.2
	stable-branch:14.5
	rel-7-10-2:14.13
	rel-7-10-0:14.12
	rel-7-8-4:14.10
	rel-7-8-2:14.9
	rel-7-8-0:14.9
	trimnurbs-branch:14.9.0.2
	help:14.9
	temp_tag:14.8
	bobWinPort-20051223-freeze:14.7
	postmerge-20051223-bobWinPort:14.8
	premerge-20051223-bobWinPort:14.8
	rel-7-6-6:14.8
	rel-7-6-4:14.8
	rel-7-6-2:14.7
	rel-7-6-branch:14.7.0.6
	rel-7-6-0:14.7
	rel-7-4-2:14.7
	rel-7-4-branch:14.7.0.4
	bobWinPort:14.7.0.2
	rel-7-4-0:14.7
	rel-7-2-6:14.7
	rel-7-2-4:14.7
	rel-7-2-2:14.5
	rel-7-2-0:14.5
	rel-7-0-4:14.4
	rel-7-0-2:14.4
	rel-7-0-1:14.4
	opensource-post:14.4
	opensource-pre:1.5
	rel-7-0-branch:1.5.0.2
	rel-7-0:1.5;
locks; strict;
comment	@ * @;


14.14
date	2007.09.15.16.23.10;	author brlcad;	state Exp;
branches;
next	14.13;

14.13
date	2007.07.26.01.13.56;	author brlcad;	state Exp;
branches;
next	14.12;

14.12
date	2007.01.23.01.13.34;	author brlcad;	state Exp;
branches;
next	14.11;

14.11
date	2007.01.20.14.36.51;	author brlcad;	state Exp;
branches;
next	14.10;

14.10
date	2006.07.10.19.06.22;	author brlcad;	state Exp;
branches;
next	14.9;

14.9
date	2006.01.18.06.46.16;	author brlcad;	state Exp;
branches;
next	14.8;

14.8
date	2005.10.31.06.13.28;	author brlcad;	state Exp;
branches;
next	14.7;

14.7
date	2005.04.25.23.07.27;	author brlcad;	state Exp;
branches
	14.7.6.1;
next	14.6;

14.6
date	2005.04.19.14.15.37;	author brlcad;	state Exp;
branches;
next	14.5;

14.5
date	2005.01.30.20.30.47;	author brlcad;	state Exp;
branches;
next	14.4;

14.4
date	2004.12.21.06.18.43;	author morrison;	state Exp;
branches;
next	14.3;

14.3
date	2004.12.21.05.45.22;	author morrison;	state Exp;
branches;
next	14.2;

14.2
date	2004.12.21.01.53.26;	author morrison;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.14;	author morrison;	state Exp;
branches;
next	1.5;

1.5
date	2004.09.17.20.42.15;	author morrison;	state Exp;
branches;
next	1.4;

1.4
date	2004.09.03.23.30.57;	author morrison;	state Exp;
branches;
next	1.3;

1.3
date	2004.08.02.23.01.48;	author morrison;	state Exp;
branches;
next	1.2;

1.2
date	2004.06.09.19.47.35;	author erikg;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.20.15.19.36;	author morrison;	state Exp;
branches;
next	;

14.7.6.1
date	2005.11.13.13.46.15;	author brlcad;	state Exp;
branches;
next	;


desc
@@


14.14
log
@more c89 embracing.  c89 provides string.h for all of the various str*() and mem*() functions, so remove the check for its presence.  there is still likely to be work required for strict c89 conformance for the various bsd strings.h functions that may be in use.
@
text
@/*                        C U R S O R . C
 * BRL-CAD
 *
 * Copyright (c) 2004-2007 United States Government as represented by
 * the U.S. Army Research Laboratory.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * version 2.1 as published by the Free Software Foundation.
 *
 * This library is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this file; see the file named COPYING for more
 * information.
 */
/** @@file cursor.c
 *
 * Author:		Gary S. Moss
 */
#ifndef lint
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libcursor/cursor.c,v 14.13 2007/07/26 01:13:56 brlcad Exp $ (BRL)";
#endif

#include "common.h"

#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#ifdef HAVE_TERMLIB_H
#  include <termlib.h>
#else
#  if HAVE_NCURSES_H
#    include <ncurses.h>
#  else
#    ifdef HAVE_CURSES_H
#      include <curses.h>
#    else
#      ifdef HAVE_TERMCAP_H
#        include <termcap.h>
#      else
#        ifdef HAVE_TERMINFO_H
#          include <terminfo.h>
#        else
#          ifdef HAVE_TINFO_H
#            include <tinfo.h>
#          endif
#        endif
#      endif
#    endif
#  endif
#  if HAVE_TERM_H
#    include <term.h>
#  endif
#endif

#include <sys/ioctl.h>
#define _winsize winsize	/* For compat with _ioctl.h. */

#define TBUFSIZ		1024
#define MAX_TERM_LEN	80


static FILE	*out_fp;		/* Output stream.	*/
static char	termCapBuf[TBUFSIZ];  	/* Termcap entry.	*/
static char	tstrings[TBUFSIZ];    	/* Individual TCS.	*/
static char	*tstr_addr = tstrings;	/* Used by tgetstr().	*/
#ifdef TIOCGWINSZ
static int	fd_stdout = 1;
#endif

static void	LoadTP(void), LoadTCS(void);


/* This is a global buffer for the name of the terminal.	*/
char		termName[MAX_TERM_LEN] = "UNKNOWN";

/* from termcap/termlib library */
extern char	*BC, /* Backspace.				*/
		*UP; /* Cursor up one line.			*/

/* Individual terminal control strings (TCS).			*/
char		*CS, /* Change scrolling region.		*/
		*SO, /* Begin standout mode.			*/
		*SE, /* End standout mode.			*/
		*CE, /* Clear to end of line.			*/
		*CL, /* Clear display and home cursor.		*/
		*HO, /* Home cursor.				*/
		*CM, /* Screen-relative cursor motion.		*/
		*TI, /* Initialize terminal.			*/
		*DL, /* Delete line.				*/
		*SR, /* Scroll text down.			*/
		*SF; /* Scroll text up.				*/

/* Individual terminal parameters.				*/
int		LI, /* Number of lines on screen.		*/
		CO; /* Number of columns on screen.		*/

/* This function must be called first to read the termcap database and
	to specify the output stream.
 */
int		InitTermCap(FILE *fp);

/* This function must be accessible to the termcap library, but will
	not necessarily be needed by the application.
 */
int		PutChr(int c);

/* These functions output terminal control strings to the file stream
	specified by the InitTermCap() call which must precede them.
	They return 0 if the capability is not described in the termcap
	database and 1 otherwise.  Of course if the database entry is
	wrong, the command will not do its job.
 */
int		ClrStandout(void), ClrEOL(void), ClrText(void),
		DeleteLn(void),
		HmCursor(void),
		MvCursor(int x, int y),
		ResetScrlReg(void),
		ScrollDn(void), ScrollUp(void),
		SetScrlReg(int top, int btm), SetStandout(void);


/*	I n i t T e r m C a p ( )
	Get terminal name from environent and leave in 'termName' for
	external reference.
	Read termcap entry into 'termCapBuf'.
	Get individual parameters and control strings.
	Initialize the terminal.
	Returns 1 for success, 0 for failure and prints
	appropriate diagnostic.
	Use 'fp' as output stream.
 */
int
InitTermCap(FILE *fp)
{	char	*term; /* Name of terminal from environment ($TERM).*/
	out_fp = fp;
#ifdef TIOCGWINSZ
	fd_stdout = fileno( out_fp );
#endif
	if( (term = getenv( "TERM" )) == NULL )
		{
		(void) fprintf( stderr, "TERM not set or exported!\n" );
		return	0;
		}
	else
		{
		(void) strncpy( termName, term, MAX_TERM_LEN-1 );
		}

	/* Get terminal entry.						*/
	switch( tgetent( termCapBuf, term ) )
		{
	case -1 :
		(void) fprintf( stderr, "Can't open termcap file!\n" );
		return	0;
	case  0 :
		(void) fprintf( stderr,
				"Terminal type not in termcap file!\n"
				);
		return	0;
		}

	/* Get individual terminal parameters and control strings.	*/
	LoadTP();
	LoadTCS();

	tputs( TI, 1, PutChr );	/* Initialize terminal.			*/
	return	1;		/* All is well.				*/
	}

/*	L o a d T P ( )
	Get the terminal parameters.
 */
static void
LoadTP(void)
{
#ifdef TIOCGWINSZ
	/* Get window size for DMD layers support.			*/
	struct _winsize		window;

	if(	ioctl( fd_stdout, TIOCGWINSZ, &window ) == 0
	    &&	window.ws_row != 0 && window.ws_col != 0
		)
		{
		LI = (int) window.ws_row;
		CO = (int) window.ws_col;
		}
	else
#endif
		{
		LI = tgetnum( "li" );
		CO = tgetnum( "co" );
		}
	return;
	}

/*	L o a d T C S ( )
	Get the terminal control strings.
 */
static void
LoadTCS(void)
{
	CS = tgetstr( "cs", &tstr_addr );
	SE = tgetstr( "se", &tstr_addr );
	SO = tgetstr( "so", &tstr_addr );
	CE = tgetstr( "ce", &tstr_addr );
	CL = tgetstr( "cl", &tstr_addr );
	HO = tgetstr( "ho", &tstr_addr );
	CM = tgetstr( "cm", &tstr_addr );
	BC = tgetstr( "bc", &tstr_addr );
	UP = tgetstr( "up", &tstr_addr );
	TI = tgetstr( "ti", &tstr_addr );
	DL = tgetstr( "dl", &tstr_addr );
	SR = tgetstr( "sr", &tstr_addr );
	SF = tgetstr( "sf", &tstr_addr );
	return;
	}

/*	H m C u r s o r ( )
	Home the cursor.
 */
int
HmCursor(void)
{
	if( HO != NULL )
		{
		tputs( HO, 1, PutChr );
		return	1;
		}
	else
		return	0;
	}

/*	S c r o l l U p ( )
	Forward scroll 1 line.
 */
int
ScrollUp(void)
{
	if( SF != NULL )
		{
		tputs( SF, 1, PutChr );
		return	1;
		}
	else
		return	0;
	}

/*	S c r o l l D n ( )
	Reverse scroll 1 line.
 */
int
ScrollDn(void)
{
	if( SR != NULL )
		{
		tputs( SR, 1, PutChr );
		return	1;
		}
	else
		return	0;
	}

/*	D e l e t e L n ( )
	Delete the current line.
 */
int
DeleteLn(void)
{
	if( DL != NULL )
		{
		tputs( DL, 1, PutChr );
		return	1;
		}
	else
		return	0;
	}

/*	M v C u r s o r ( )
	Move the cursor to screen coordinates x, y.
 */
int
MvCursor(int x, int y)
{
	--x; --y; /* Tgoto() adds 1 to each coordinate!?		*/
	if( CM != NULL )
		{
		tputs( tgoto( CM, x, y ), 1, PutChr );
		return	1;
		}
	else
		return	0;
	}

/*	C l r E O L ( )
	Clear from the cursor to end of line.
 */
int
ClrEOL(void)
{
	if( CE != NULL )
		{
		tputs( CE, 1, PutChr );
		return	1;
		}
	else
		return	0;
	}

/*	C l r T e x t ( )
	Clear screen and home cursor.
 */
int
ClrText(void)
{
	if( CL != NULL )
		{
		tputs( CL, LI, PutChr );
		return	1;
		}
	else
		return	0;
	}

/*	S e t S c r l R e g ( )
	Set the scrolling region to be from "top" to "btm".
 */
int
SetScrlReg(int top, int btm)
{
	if( CS != NULL )
		{
		tputs( tgoto( CS, btm-1, top-1 ), 1, PutChr );
		return	1;
		}
	else
		return	0;
	}

/*	R e s e t S c r l R e g ( )
	Reset the scrolling region to the entire screen.
 */
int
ResetScrlReg(void)
{
	if( CS != NULL )
		{
		tputs( tgoto( CS, LI-1, 0 ), 1, PutChr );
		return	1;
		}
	else
		return	0;
	}

/*	C l r S t a n d o u t ( )
	End standout mode.
 */
int
ClrStandout(void)
{
	if( SE != NULL )
		{
		tputs( SE, 1, PutChr );
		return	1;
		}
	else
		return	0;
	}

/*	S e t S t a n d o u t ( )
	Begin standout mode.
 */
int
SetStandout(void)
{
	if( SO != NULL )
		{
		tputs( SO, 1, PutChr );
		return	1;
		}
	else
		return	0;
	}

/*	P u t C h r ( )							*/
int
PutChr(int c)
{
	return	putc( c, out_fp );
	}

/*
 * Local Variables:
 * mode: C
 * tab-width: 8
 * c-basic-offset: 4
 * indent-tabs-mode: t
 * End:
 * ex: shiftwidth=4 tabstop=8
 */
@


14.13
log
@remove ephemeral data like phone numbers and addresses, including the misleading 'source' statements on code that is continually evolving and receiving contributions from many many sources
@
text
@d25 1
a25 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libcursor/cursor.c,v 14.12 2007/01/23 01:13:34 brlcad Exp $ (BRL)";
d32 1
a32 6

#ifdef HAVE_STRING_H
#  include <string.h>
#else
#  include <strings.h>
#endif
@


14.12
log
@Sweeping license updates.  Documentation is fully relicensed to the BSD Documentation License (a minor variant of the FreeBSD Documentation License and BSD License).  All GPL code (mostly application code) is converted to the LGPL and now also specifically declares version 2.1, revoking the blank check to the FSF.  The intent of these sweeping changes are to simplify the licensing terms and increase overall flexibility of use, both externally (to users for their purposes) and internally (to allow application code to be migrated to libraries without creating GPL libraries).  As a collective work, BRL-CAD is now LGPL.
@
text
@a22 3
 * 			U. S. Army Ballistic Research Laboratory
 *			Aberdeen Proving Ground
 *			Maryland 21005-5066
d25 1
a25 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libcursor/cursor.c,v 14.11 2007/01/20 14:36:51 brlcad Exp $ (BRL)";
@


14.11
log
@update copyright to 2007
@
text
@d9 1
a9 2
 * as published by the Free Software Foundation; either version 2 of
 * the License, or (at your option) any later version.
d14 1
a14 1
 * Library General Public License for more details.
d28 1
a28 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libcursor/cursor.c,v 14.10 2006/07/10 19:06:22 brlcad Exp $ (BRL)";
@


14.10
log
@refactor away the old BSD block defines among other simple cleanup
@
text
@d4 1
a4 1
 * Copyright (c) 2004-2006 United States Government as represented by
d29 1
a29 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libcursor/cursor.c,v 14.9 2006/01/18 06:46:16 brlcad Exp $ (BRL)";
@


14.9
log
@update copyright to 2006
@
text
@d29 1
a29 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libcursor/cursor.c,v 14.8 2005/10/31 06:13:28 brlcad Exp $ (BRL)";
a76 4
#if ! defined( BSD )
extern void	clr_Tabs(), save_Tty();
#endif

@


14.8
log
@no sense casting to a void*, puts takes an int(*)(int) function pointer so make PutChr match (quells aix warnings too)
@
text
@d4 1
a4 1
 * Copyright (C) 2004-2005 United States Government as represented by
d29 1
a29 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libcursor/cursor.c,v 14.7 2005/04/25 23:07:27 brlcad Exp $ (BRL)";
@


14.7
log
@use the same terminal library inclusion order that configure used otherwise cygwin pulls out his angry eyes
@
text
@d29 1
a29 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libcursor/cursor.c,v 14.6 2005/04/19 14:15:37 brlcad Exp $ (BRL)";
d124 1
a124 1
int		PutChr(char c);
d185 1
a185 1
	tputs( TI, 1, (void *)PutChr );	/* Initialize terminal.			*/
d245 1
a245 1
		tputs( HO, 1, (void *)PutChr );
d260 1
a260 1
		tputs( SF, 1, (void *)PutChr );
d275 1
a275 1
		tputs( SR, 1, (void *)PutChr );
d290 1
a290 1
		tputs( DL, 1, (void *)PutChr );
d306 1
a306 1
		tputs( tgoto( CM, x, y ), 1, (void *)PutChr );
d321 1
a321 1
		tputs( CE, 1, (void *)PutChr );
d336 1
a336 1
		tputs( CL, LI, (void *)PutChr );
d351 1
a351 1
		tputs( tgoto( CS, btm-1, top-1 ), 1, (void *)PutChr );
d366 1
a366 1
		tputs( tgoto( CS, LI-1, 0 ), 1, (void *)PutChr );
d381 1
a381 1
		tputs( SE, 1, (void *)PutChr );
d396 1
a396 1
		tputs( SO, 1, (void *)PutChr );
d405 1
a405 1
PutChr(char c)
@


14.7.6.1
log
@merge changes from HEAD aka rel-7-6-4 to the rel-7-6-branch just in case someone peeks a gander or tries to continue/build the branch
@
text
@d29 1
a29 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
d124 1
a124 1
int		PutChr(int c);
d185 1
a185 1
	tputs( TI, 1, PutChr );	/* Initialize terminal.			*/
d245 1
a245 1
		tputs( HO, 1, PutChr );
d260 1
a260 1
		tputs( SF, 1, PutChr );
d275 1
a275 1
		tputs( SR, 1, PutChr );
d290 1
a290 1
		tputs( DL, 1, PutChr );
d306 1
a306 1
		tputs( tgoto( CM, x, y ), 1, PutChr );
d321 1
a321 1
		tputs( CE, 1, PutChr );
d336 1
a336 1
		tputs( CL, LI, PutChr );
d351 1
a351 1
		tputs( tgoto( CS, btm-1, top-1 ), 1, PutChr );
d366 1
a366 1
		tputs( tgoto( CS, LI-1, 0 ), 1, PutChr );
d381 1
a381 1
		tputs( SE, 1, PutChr );
d396 1
a396 1
		tputs( SO, 1, PutChr );
d405 1
a405 1
PutChr(int c)
@


14.6
log
@avoid multiple symbols, some of them should be coming from termcap/termlib
@
text
@d23 4
a27 8

/*LINTLIBRARY*/
/*
	Author:		Gary S. Moss
			U. S. Army Ballistic Research Laboratory
			Aberdeen Proving Ground
			Maryland 21005-5066
*/
d29 1
a29 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libcursor/cursor.c,v 14.5 2005/01/30 20:30:47 brlcad Exp $ (BRL)";
a30 7
/*
	Originally extracted from SCCS archive:
		SCCS id:	@@(#) libcursor.c	1.13
		Last edit: 	2/4/87 at 12:42:12
		Retrieved: 	2/4/87 at 12:42:39
		SCCS archive:	/v/src/libcursor/s.libcursor.c
 */
d38 1
a38 1
#include <string.h>
d40 1
a40 1
#include <strings.h>
d43 2
a44 3

#ifdef HAVE_NCURSES_H
#  include <ncurses.h>
d46 18
a63 2
#  ifdef HAVE_CURSES_H
#    include <curses.h>
d65 2
a66 6
#endif
#ifdef HAVE_TERM_H
#  include <term.h>
#else
#  ifdef HAVE_TERMCAP_H
#    include <termcap.h>
@


14.5
log
@update copyright to 2005
@
text
@d33 1
a33 1
static const char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/libcursor/cursor.c,v 14.4 2004/12/21 06:18:43 morrison Exp $ (BRL)";
d95 4
d100 1
a100 3
char		*BC, /* Backspace.				*/
		*UP, /* Cursor up one line.			*/
		*CS, /* Change scrolling region.		*/
@


14.4
log
@they should have received a copy of the LGPL with LGPL'd files
@
text
@d4 2
a5 2
 * Copyright (c) 2004 United States Government as represented by the
 * U.S. Army Research Laboratory.
d33 1
a33 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/libcursor/cursor.c,v 14.3 2004/12/21 05:45:22 morrison Exp $ (BRL)";
@


14.3
log
@s/GNU Library General/GNU Lesser General/g
@
text
@d17 2
a18 2
 * You should have received a copy of the GNU General Public License
 * along with this file; see the file named COPYING for more
d33 1
a33 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/libcursor/cursor.c,v 14.2 2004/12/21 01:53:26 morrison Exp $ (BRL)";
@


14.2
log
@assign copyright and LGPL
@
text
@d8 1
a8 1
 * modify it under the terms of the GNU Library General Public License
d33 1
a33 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/libcursor/cursor.c,v 14.1 2004/11/16 19:42:14 morrison Exp $ (BRL)";
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d1 24
a30 1
			(301)278-6647 or AV-298-6647
d33 1
a33 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/libcursor/cursor.c,v 1.5 2004/09/17 20:42:15 morrison Exp $ (BRL)";
@


1.5
log
@include the curses headers better
@
text
@d10 1
a10 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/libcursor/cursor.c,v 1.4 2004/09/03 23:30:57 morrison Exp $ (BRL)";
d384 10
@


1.4
log
@USE_STRING_H is no more.. it's HAVE_STRING_H
@
text
@d10 1
a10 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/libcursor/cursor.c,v 1.3 2004/08/02 23:01:48 morrison Exp $ (BRL)";
d31 3
a33 2
#ifdef HAVE_TERMCAP_H
#  include <termcap.h>
d35 3
a37 2
extern char	*getenv(), *tgetstr(const char *, char **);
extern int	tgetent(void *, const char *);
d39 6
a44 3

#ifdef __ppc__
#  include <curses.h>
@


1.3
log
@replace the wrapped config.h block with common.h
@
text
@d10 1
a10 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/libcursor/cursor.c,v 1.2 2004/06/09 19:47:35 erikg Exp $ (BRL)";
d25 1
a25 1
#ifdef USE_STRING_H
@


1.2
log
@include stdlib.h for getenv
@
text
@d10 1
a10 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/libcursor/cursor.c,v 1.1 2004/05/20 15:19:36 morrison Exp $ (BRL)";
d20 1
a20 3
#ifdef HAVE_CONFIG_H
# include "config.h"
#endif
@


1.1
log
@Vast reorganization begins.  Sources moved from top-level directories into src/.
@
text
@d10 1
a10 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/libcursor/cursor.c,v 11.9 2004/05/10 15:30:44 erikg Exp $ (BRL)";
d25 1
@

