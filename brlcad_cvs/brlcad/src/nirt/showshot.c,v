head	14.19;
access;
symbols
	rel-7-10-4:14.13
	STABLE:14.13.0.2
	stable-branch:14.3
	rel-7-10-2:14.13
	rel-7-10-0:14.12
	rel-7-8-4:14.7
	rel-7-8-2:14.7
	rel-7-8-0:14.7
	trimnurbs-branch:14.6.0.2
	help:14.6
	temp_tag:14.5
	bobWinPort-20051223-freeze:14.4
	postmerge-20051223-bobWinPort:14.5
	premerge-20051223-bobWinPort:14.5
	rel-7-6-6:14.5
	rel-7-6-4:14.5
	rel-7-6-2:14.4
	rel-7-6-branch:14.4.0.6
	rel-7-6-0:14.4
	rel-7-4-2:14.4
	rel-7-4-branch:14.4.0.4
	bobWinPort:14.4.0.2
	rel-7-4-0:14.4
	rel-7-2-6:14.3
	rel-7-2-4:14.3
	rel-7-2-2:14.3
	rel-7-2-0:14.3
	rel-7-0-4:14.2
	rel-7-0-2:14.2
	rel-7-0-1:14.2
	opensource-post:14.2
	opensource-pre:1.1
	rel-7-0-branch:1.1.0.2
	rel-7-0:1.1;
locks; strict;
comment	@ * @;


14.19
date	2007.12.18.00.14.10;	author brlcad;	state Exp;
branches;
next	14.18;

14.18
date	2007.12.02.22.34.23;	author brlcad;	state Exp;
branches;
next	14.17;

14.17
date	2007.11.21.20.49.10;	author erikgreenwald;	state Exp;
branches;
next	14.16;

14.16
date	2007.11.21.19.49.12;	author erikgreenwald;	state Exp;
branches;
next	14.15;

14.15
date	2007.09.15.16.23.18;	author brlcad;	state Exp;
branches;
next	14.14;

14.14
date	2007.09.14.18.10.11;	author erikgreenwald;	state Exp;
branches;
next	14.13;

14.13
date	2007.05.12.22.26.57;	author brlcad;	state Exp;
branches;
next	14.12;

14.12
date	2007.02.20.09.30.11;	author brlcad;	state Exp;
branches;
next	14.11;

14.11
date	2007.02.20.08.19.50;	author brlcad;	state Exp;
branches;
next	14.10;

14.10
date	2007.02.02.08.48.29;	author brlcad;	state Exp;
branches;
next	14.9;

14.9
date	2007.01.23.01.13.44;	author brlcad;	state Exp;
branches;
next	14.8;

14.8
date	2007.01.20.14.36.58;	author brlcad;	state Exp;
branches;
next	14.7;

14.7
date	2006.04.05.19.19.44;	author brlcad;	state Exp;
branches;
next	14.6;

14.6
date	2006.01.18.06.46.23;	author brlcad;	state Exp;
branches
	14.6.2.1;
next	14.5;

14.5
date	2005.10.23.04.44.37;	author brlcad;	state Exp;
branches;
next	14.4;

14.4
date	2005.06.30.00.17.45;	author erikgreenwald;	state Exp;
branches
	14.4.6.1;
next	14.3;

14.3
date	2005.01.30.20.31.08;	author brlcad;	state Exp;
branches;
next	14.2;

14.2
date	2004.12.21.02.40.25;	author morrison;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.17;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.20.15.20.36;	author morrison;	state Exp;
branches;
next	;

14.4.6.1
date	2005.11.13.13.46.18;	author brlcad;	state Exp;
branches;
next	;

14.6.2.1
date	2006.04.07.19.34.04;	author jlowenz;	state Exp;
branches;
next	;


desc
@@


14.19
log
@clean up ws and style, clean up bu_exit and error reporting calls, clean up header
@
text
@/*                      S H O W S H O T . C
 * BRL-CAD
 *
 * Copyright (c) 2004-2007 United States Government as represented by
 * the U.S. Army Research Laboratory.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * version 2.1 as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this file; see the file named COPYING for more
 * information.
 */
/** @@file showshot.c
 *
 * Filter output from NIRT(1) to generate an MGED(1) object
 * representing a shotline through some geometry.
 *
 * Author:
 *   Paul Tanenbaum
 *
 * Date:
 *   4 December 1990
 *
 */

#include "common.h"

#include <stdio.h>
#include <stdlib.h>
#include <ctype.h>
#include <string.h>

#ifdef HAVE_UNISTD_H
#  include <unistd.h>
#endif

#include "machine.h"
#include "vmath.h"
#include "db.h"
#include "bu.h"


#define		BUF_LEN		128
#define		OPT_STRING	"n:r:?"
#define		RAY_COLOR	"255 255 0"
#define		print_usage()	bu_exit(1, "Usage: 'show-shot [-n name] [-r radius]'\n")

int
main (int argc, char **argv)
{
    char	buf[BUF_LEN];	/* Contents of current input line */
    char	*bp;		/* Pointer into buf */
    char	*nlp;		/* Location of newline in buf */
    char	rname[BUF_LEN];	/* Name of current region */
    char	rayname[BUF_LEN];	/* Name of ray */
    fastf_t	ray_radius = 1.0;	/* Thickness of the RCC */
    point_t	entryp;		/* Ray's entry into current region */
    point_t	exitp;		/* Ray's exit from current region */
    point_t	first_entryp;	/* Ray's entry into the entire geometry */
    int		i;		/* Index into rname */
    int		line_nm = 0;	/* Number of current line of input */
    int		opt;		/* Command-line option returned by bu_getopt */
    int		pid;		/* Process ID for unique group name */

    extern char *bu_optarg;
    extern int  bu_optind, bu_opterr;

    int         bu_getopt(int, char *const *, const char *);

    pid = bu_process_id();

    *rayname = '\0';
    /* Handle command-line options */
    while ((opt = bu_getopt(argc, argv, OPT_STRING)) != -1)
	switch (opt) {
	case 'n':
	    strncpy(rayname, bu_optarg, BUF_LEN-1);
	    break;
	case 'r':
	    if (sscanf(bu_optarg, "%F", &ray_radius) != 1) {
		bu_exit(1, "Illegal radius: '%s'\n", bu_optarg);
	    }
	    break;
	case '?':
	    print_usage();
	}
    
    /* Ensure proper command-line syntax */
    if (bu_optind != argc) {
	print_usage();
    }

    /* Construct the names of the objects to add to the database */
    if (*rayname == '\0')	/* Was one given on command line? */
	sprintf(rayname, "ray.%d", pid);

    if (strlen(rayname) > NAMESIZE - 3) {
	fprintf(stderr,
	    "Name '%s.s' for ray solid may not exceed %d characters\n",
	    rayname, NAMESIZE - 1);
	bu_exit(1, "Use the '-n name' option to specify a different name\n");
    }

    printf("in %s.s sph 0 0 0 1\n", rayname);
    printf("r %s.r u %s.s\n", rayname, rayname);
    printf("mater %s.r\n\n\n%s\n\n", rayname, RAY_COLOR);
    printf("g %s", rayname);

    /* Read the input */
    while (bu_fgets(buf, BUF_LEN, stdin) != NULL) {
	++line_nm;
	bp = buf;
	if ((nlp = index(bp, '\n')) != 0)
	    *nlp = '\0';

	/* Skip initial white space */
	while (isspace(*bp))
	    ++bp;

	/* Get region name */
	for (i = 0; ! isspace(*bp) && (*bp != '\0'); ++i, ++bp)
	    rname[i] = *bp;
	rname[i] = '\0';

	/* Read entry and exit coordinates for this partition */
	if (sscanf(bp, "%F%F%F%F%F%F",
		   &entryp[X], &entryp[Y], &entryp[Z],
		   &exitp[X], &exitp[Y], &exitp[Z]) != 6) {
	    bu_exit(1, "Illegal data on line %d: '%s'\n", line_nm, bp);
	}

	printf(" %s", rname);

	if (line_nm == 1) {
	    VMOVE(first_entryp, entryp);
	}
    }
    if (! feof(stdin)) {
	bu_exit(1, "Error from bu_fgets().  This shouldn't happen");
    }

    printf("\nkill %s.s\nin %s.s rcc\n\t%f %f %f\n\t%f %f %f\n\t%f\n",
	   rayname, rayname,
	   first_entryp[X], first_entryp[Y], first_entryp[Z],
	   exitp[X] - first_entryp[X],
	   exitp[Y] - first_entryp[Y],
	   exitp[Z] - first_entryp[Z],
	   ray_radius);
    printf("g %s %s.r\n", rayname, rayname);
    fprintf(stderr, "Group is '%s'\n", rayname);
}

/*
 * Local Variables:
 * mode: C
 * tab-width: 8
 * c-basic-offset: 4
 * indent-tabs-mode: t
 * End:
 * ex: shiftwidth=4 tabstop=8
 */
@


14.18
log
@woo hoo, finally got through most of the flawfinder level 4 issues related to string buffer limits (leaving issues that can probably/mostly be ignored).  these changes mostly invovlved using the n-variants of the various string processing functions so that the buffers being written to are properly clamped.
@
text
@d22 2
a23 2
 *	Filter output from NIRT(1) to generate an MGED(1) object
 *	representing a shotline through some geometry.
d25 2
a26 2
 *		Written by:	Paul Tanenbaum
 *		Date:		4 December 1990
d28 2
a29 1
 *		To compile:	cc -I/usr/include/brlcad source.c
a30 9
 *		R E V I S I O N   H I S T O R Y
 *
 *	    15 Jan 91	Eliminated the mandatory argument model.g
 *			from the command line.  The database name
 *			wasn't used anyway!
 *	    14 Feb 91	Added check to ensure that the names of
 *			the objects created won't exceed NAMESIZE,
 *			and added the '-n name' option.  Eliminated
 *			the '-d' debug option.
d53 1
a53 2
#define		print_usage()	(void) fputs("Usage: 'show-shot [-n name] [-r radius]'\n",\
					stderr)
d55 1
d82 11
a92 15
	switch (opt)
	{
	    case 'n':
		strncpy(rayname, bu_optarg, BUF_LEN-1);
		break;
	    case 'r':
		if (sscanf(bu_optarg, "%F", &ray_radius) != 1)
		{
		    (void) fprintf(stderr, "Illegal radius: '%s'\n", bu_optarg);
		    bu_exit (1, NULL);
		}
		break;
	    case '?':
		print_usage();
		bu_exit (1, NULL);
d94 1
a94 1

d96 1
a96 2
    if (bu_optind != argc)
    {
a97 1
	bu_exit (1, NULL);
d102 4
a105 4
	(void) sprintf(rayname, "ray.%d", pid);
    if (strlen(rayname) > NAMESIZE - 3)
    {
	(void) fprintf(stderr,
d108 1
a108 3
	(void) fputs("Use the '-n name' option to specify a different name\n",
	    stderr);
	bu_exit (1, NULL);
d110 5
a114 4
    (void) printf("in %s.s sph 0 0 0 1\n", rayname);
    (void) printf("r %s.r u %s.s\n", rayname, rayname);
    (void) printf("mater %s.r\n\n\n%s\n\n", rayname, RAY_COLOR);
    (void) printf("g %s", rayname);
d117 1
a117 2
    while (bu_fgets(buf, BUF_LEN, stdin) != NULL)
    {
d134 3
a136 7
		&entryp[X], &entryp[Y], &entryp[Z],
		&exitp[X], &exitp[Y], &exitp[Z])
	    != 6)
	{
	    (void) fprintf(stderr,
		"Illegal data on line %d: '%s'\n", line_nm, bp);
	    bu_exit (1, NULL);
d139 1
a139 1
	(void) printf(" %s", rname);
d141 1
a141 2
	if (line_nm == 1)
	{
d145 2
a146 4
    if (! feof(stdin))
    {
	(void) fputs("Error from bu_fgets().  This shouldn't happen", stderr);
	bu_exit (1, NULL);
d149 9
a157 9
    (void) printf("\nkill %s.s\nin %s.s rcc\n\t%f %f %f\n\t%f %f %f\n\t%f\n",
	rayname, rayname,
	first_entryp[X], first_entryp[Y], first_entryp[Z],
	exitp[X] - first_entryp[X],
	exitp[Y] - first_entryp[Y],
	exitp[Z] - first_entryp[Z],
	ray_radius);
    (void) printf("g %s %s.r\n", rayname, rayname);
    (void) fprintf(stderr, "Group is '%s'\n", rayname);
@


14.17
log
@pass bu_exit a NULL instead of an empty string
@
text
@d93 1
a93 1
		(void) strcpy(rayname, bu_optarg);
@


14.16
log
@exit->bu_exit where applicable
@
text
@d99 1
a99 1
		    bu_exit (1, "");
d104 1
a104 1
		bu_exit (1, "");
d111 1
a111 1
	bu_exit (1, "");
d124 1
a124 1
	bu_exit (1, "");
d156 1
a156 1
	    bu_exit (1, "");
d169 1
a169 1
	bu_exit (1, "");
@


14.15
log
@more c89 embracing.  c89 provides string.h for all of the various str*() and mem*() functions, so remove the check for its presence.  there is still likely to be work required for strict c89 conformance for the various bsd strings.h functions that may be in use.
@
text
@d99 1
a99 1
		    exit (1);
d104 1
a104 1
		exit (1);
d111 1
a111 1
	exit (1);
d124 1
a124 1
	exit (1);
d156 1
a156 1
	    exit (1);
d169 1
a169 1
	exit (1);
@


14.14
log
@need common.h for config.h defines
@
text
@a40 4
#ifndef lint
static const char RCSid[] = "$Header: /cvsroot/brlcad/brlcad/src/nirt/showshot.c,v 14.13 2007/05/12 22:26:57 brlcad Exp $";
#endif

d46 2
a47 5
#ifdef HAVE_STRING_H
#  include <string.h>
#else
#  include <strings.h>
#endif
d49 1
a49 1
# include <unistd.h>
@


14.13
log
@use new bu_process_id() function to get the pid now
@
text
@d42 1
a42 1
static const char RCSid[] = "$Header: /cvsroot/brlcad/brlcad/src/nirt/showshot.c,v 14.12 2007/02/20 09:30:11 brlcad Exp $";
d45 2
@


14.12
log
@need bu.h for bu_fgets()
@
text
@d42 1
a42 1
static const char RCSid[] = "$Header: /cvsroot/brlcad/brlcad/src/nirt/showshot.c,v 14.11 2007/02/20 08:19:50 brlcad Exp $";
d83 1
a83 1
    int		pid = getpid();	/* Process ID for unique group name */
d90 2
@


14.11
log
@update all usages of fgets() to instead use john's swanktastic bu_fgets() that behaves as one would generally want regardless of the line ending type of the compilation platform or of the input files.  bu_fgets() responds to input files that use CR (usually old mac), LF (usually unix, new mac), or CR/LF (usually windows) for the line ending so now these file do too effectivley squashing buggish/bad behavior.
@
text
@d42 1
a42 1
static const char RCSid[] = "$Header: /cvsroot/brlcad/brlcad/src/nirt/showshot.c,v 14.10 2007/02/02 08:48:29 brlcad Exp $";
d60 1
@


14.10
log
@convert all of the lingering getopt calls to bu_getopt (as well as the related getopt globals optind, opterr, optarg) -- libbu's getopt has the benefit of being re-entrant and is portable to environments where getopt() may not be available.
@
text
@d42 1
a42 1
static const char RCSid[] = "$Header: /cvsroot/brlcad/brlcad/src/nirt/showshot.c,v 14.9 2007/01/23 01:13:44 brlcad Exp $";
d134 1
a134 1
    while (fgets(buf, BUF_LEN, stdin) != NULL)
d170 1
a170 1
	(void) fputs("Error from fgets().  This shouldn't happen", stderr);
@


14.9
log
@Sweeping license updates.  Documentation is fully relicensed to the BSD Documentation License (a minor variant of the FreeBSD Documentation License and BSD License).  All GPL code (mostly application code) is converted to the LGPL and now also specifically declares version 2.1, revoking the blank check to the FSF.  The intent of these sweeping changes are to simplify the licensing terms and increase overall flexibility of use, both externally (to users for their purposes) and internally (to allow application code to be migrated to libraries without creating GPL libraries).  As a collective work, BRL-CAD is now LGPL.
@
text
@d42 1
a42 1
static const char RCSid[] = "$Header: /cvsroot/brlcad/brlcad/src/nirt/showshot.c,v 14.8 2007/01/20 14:36:58 brlcad Exp $";
d81 1
a81 1
    int		opt;		/* Command-line option returned by getopt() */
d84 2
a85 2
    extern char *optarg;
    extern int  optind, opterr;
d87 1
a87 1
    int         getopt(int, char *const *, const char *);
d91 1
a91 1
    while ((opt = getopt(argc, argv, OPT_STRING)) != -1)
d95 1
a95 1
		(void) strcpy(rayname, optarg);
d98 1
a98 1
		if (sscanf(optarg, "%F", &ray_radius) != 1)
d100 1
a100 1
		    (void) fprintf(stderr, "Illegal radius: '%s'\n", optarg);
d110 1
a110 1
    if (optind != argc)
@


14.8
log
@update copyright to 2007
@
text
@d8 2
a9 3
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation; either version 2 of the
 * License, or (at your option) any later version.
d14 1
a14 1
 * General Public License for more details.
d16 2
a17 2
 * You should have received a copy of the GNU General Public License
 * along with this file; see the file named COPYING for more
d42 1
a42 1
static const char RCSid[] = "$Header: /cvsroot/brlcad/brlcad/src/nirt/showshot.c,v 14.7 2006/04/05 19:19:44 brlcad Exp $";
@


14.7
log
@more header/warning cleanup from Intel compiler warnings on Altix
@
text
@d4 1
a4 1
 * Copyright (c) 2004-2006 United States Government as represented by
d43 1
a43 1
static const char RCSid[] = "$Header: /cvsroot/brlcad/brlcad/src/nirt/showshot.c,v 14.6 2006/01/18 06:46:23 brlcad Exp $";
@


14.6
log
@update copyright to 2006
@
text
@d43 1
a43 1
static const char RCSid[] = "$Header: /cvsroot/brlcad/brlcad/src/nirt/showshot.c,v 14.5 2005/10/23 04:44:37 brlcad Exp $";
a47 1
#include <strings.h>
d49 5
a53 4
#include <machine.h>
#include <vmath.h>
#include <db.h>

d58 5
@


14.6.2.1
log
@update from HEAD
@
text
@d43 1
a43 1
static const char RCSid[] = "$Header: /cvsroot/brlcad/brlcad/src/nirt/showshot.c,v 14.6 2006/01/18 06:46:23 brlcad Exp $";
d48 1
d50 4
a53 5
#ifdef HAVE_STRING_H
#  include <string.h>
#else
#  include <strings.h>
#endif
a57 5
#include "machine.h"
#include "vmath.h"
#include "db.h"


@


14.5
log
@trailing ws
@
text
@d4 1
a4 1
 * Copyright (C) 2004-2005 United States Government as represented by
d43 1
a43 1
static const char RCSid[] = "$Header: /cvsroot/brlcad/brlcad/src/nirt/showshot.c,v 14.4 2005/06/30 00:17:45 erikgreenwald Exp $";
@


14.4
log
@added missing includes
@
text
@d43 1
a43 1
static const char RCSid[] = "$Header: /cvsroot/brlcad/brlcad/src/nirt/showshot.c,v 14.3 2005/01/30 20:31:08 brlcad Exp $";
d104 1
a104 1
    
d140 1
a140 1
	
d145 1
a145 1
	
@


14.4.6.1
log
@merge changes from HEAD aka rel-7-6-4 to the rel-7-6-branch just in case someone peeks a gander or tries to continue/build the branch
@
text
@d43 1
a43 1
static const char RCSid[] = "$Header$";
d104 1
a104 1

d140 1
a140 1

d145 1
a145 1

@


14.3
log
@update copyright to 2005
@
text
@d43 1
a43 1
static const char RCSid[] = "$Header: /cvsroot/brlcad/brlcad/src/nirt/showshot.c,v 14.2 2004/12/21 02:40:25 morrison Exp $";
d47 1
d54 4
@


14.2
log
@assign copyright and GPL
@
text
@d4 2
a5 2
 * Copyright (c) 2004 United States Government as represented by the
 * U.S. Army Research Laboratory.
d43 1
a43 1
static const char RCSid[] = "$Header: /cvs/brlcad/src/nirt/showshot.c,v 14.1 2004/11/16 19:42:17 morrison Exp $";
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d1 21
a21 1
/*			S H O W - S H O T . C
d43 1
a43 1
static const char RCSid[] = "$Header: /cvs/brlcad/src/nirt/showshot.c,v 1.1 2004/05/20 15:20:36 morrison Exp $";
@


1.1
log
@Vast reorganization begins.  Sources moved from top-level directories into src/.
@
text
@d23 1
a23 1
static const char RCSid[] = "$Header: /cvs/brlcad/nirt/showshot.c,v 11.5 2004/04/05 07:39:41 morrison Exp $";
d155 10
@

