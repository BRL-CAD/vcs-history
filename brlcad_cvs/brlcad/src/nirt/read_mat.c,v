head	14.12;
access;
symbols
	rel-7-10-4:14.8
	STABLE:14.8.0.2
	stable-branch:14.3
	rel-7-10-2:14.8
	rel-7-10-0:14.8
	rel-7-8-4:14.6
	rel-7-8-2:14.6
	rel-7-8-0:14.6
	trimnurbs-branch:14.6.0.2
	help:14.6
	temp_tag:14.4
	bobWinPort-20051223-freeze:14.3
	postmerge-20051223-bobWinPort:14.4
	premerge-20051223-bobWinPort:14.4
	rel-7-6-6:14.4
	rel-7-6-4:14.4
	rel-7-6-2:14.3
	rel-7-6-branch:14.3.0.6
	rel-7-6-0:14.3
	rel-7-4-2:14.3
	rel-7-4-branch:14.3.0.4
	bobWinPort:14.3.0.2
	rel-7-4-0:14.3
	rel-7-2-6:14.3
	rel-7-2-4:14.3
	rel-7-2-2:14.3
	rel-7-2-0:14.3
	rel-7-0-4:14.2
	rel-7-0-2:14.2
	rel-7-0-1:14.2
	opensource-post:14.2
	opensource-pre:1.3
	rel-7-0-branch:1.3.0.2
	rel-7-0:1.3;
locks; strict;
comment	@ * @;


14.12
date	2007.12.18.00.14.25;	author brlcad;	state Exp;
branches;
next	14.11;

14.11
date	2007.11.21.20.49.10;	author erikgreenwald;	state Exp;
branches;
next	14.10;

14.10
date	2007.11.21.19.49.12;	author erikgreenwald;	state Exp;
branches;
next	14.9;

14.9
date	2007.09.15.16.23.18;	author brlcad;	state Exp;
branches;
next	14.8;

14.8
date	2007.01.23.01.13.44;	author brlcad;	state Exp;
branches;
next	14.7;

14.7
date	2007.01.20.14.36.58;	author brlcad;	state Exp;
branches;
next	14.6;

14.6
date	2006.02.27.10.08.40;	author brlcad;	state Exp;
branches;
next	14.5;

14.5
date	2006.01.18.06.46.23;	author brlcad;	state Exp;
branches;
next	14.4;

14.4
date	2005.10.23.04.44.37;	author brlcad;	state Exp;
branches;
next	14.3;

14.3
date	2005.01.30.20.31.08;	author brlcad;	state Exp;
branches
	14.3.6.1;
next	14.2;

14.2
date	2004.12.21.02.40.25;	author morrison;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.17;	author morrison;	state Exp;
branches;
next	1.3;

1.3
date	2004.09.03.23.30.59;	author morrison;	state Exp;
branches;
next	1.2;

1.2
date	2004.08.02.23.01.51;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.20.15.20.35;	author morrison;	state Exp;
branches;
next	;

14.3.6.1
date	2005.11.13.13.46.18;	author brlcad;	state Exp;
branches;
next	;


desc
@@


14.12
log
@ws and style consistency cleanup
@
text
@/*                      R E A D _ M A T . C
 * BRL-CAD
 *
 * Copyright (c) 2004-2007 United States Government as represented by
 * the U.S. Army Research Laboratory.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * version 2.1 as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this file; see the file named COPYING for more
 * information.
 */
/** @@file read_mat.c
 *
 * This program is Natalie's Interactive Ray-Tracer
 *
 * Author:
 *   Natalie L. Barker
 *
 * Date:
 *   Jan 90
 *
 */

#include "common.h"

#include <stdlib.h>
#include <stdio.h>
#include <ctype.h>
#include <string.h>
#include <math.h>

#include "machine.h"
#include "vmath.h"
#include "raytrace.h"

#include "./nirt.h"
#include "./usrfmt.h"


#define			RMAT_SAW_EYE	0x01
#define			RMAT_SAW_ORI	0x02
#define			RMAT_SAW_VR	0x02

extern outval			ValTab[];
extern int			nirt_debug;

/**
 * R E A D _ M A T
 */
void read_mat (void)
{
    char	*buf;
    int		status = 0x0;
    mat_t	m;
    point_t	p;
    quat_t	q;

    while ((buf = rt_read_cmd(stdin)) != (char *) 0) {
	if (strncmp(buf, "eye_pt", 6) == 0) {
	    if (sscanf(buf + 6, "%lf%lf%lf", &p[X], &p[Y], &p[Z]) != 3) {
		bu_exit(1, "nirt: read_mat(): Failed to read eye_pt\n");
	    }
	    target(X) = p[X];
	    target(Y) = p[Y];
	    target(Z) = p[Z];
	    status |= RMAT_SAW_EYE;
	} else if (strncmp(buf, "orientation", 11) == 0) {
	    if (sscanf(buf + 11,
		       "%lf%lf%lf%lf",
		       &q[0], &q[1], &q[2], &q[3]) != 4) {
		bu_exit(1, "nirt: read_mat(): Failed to read orientation\n");
	    }
	    quat_quat2mat(m,q);
	    if (nirt_debug & DEBUG_MAT)
		bn_mat_print("view matrix", m);
	    azimuth() = atan2(-m[0],m[1]) / deg2rad;
	    elevation() = atan2(m[10],m[6]) / deg2rad;
	    status |= RMAT_SAW_ORI;
	} else if (strncmp(buf, "viewrot", 7) == 0) {
	    if (sscanf(buf + 7,
		       "%lf%lf%lf%lf%lf%lf%lf%lf%lf%lf%lf%lf%lf%lf%lf%lf",
		       &m[0], &m[1], &m[2], &m[3],
		       &m[4], &m[5], &m[6], &m[7],
		       &m[8], &m[9], &m[10], &m[11],
		       &m[12], &m[13], &m[14], &m[15]) != 16) {
		bu_exit(1, "nirt: read_mat(): Failed to read viewrot\n");
	    }
	    if (nirt_debug & DEBUG_MAT)
		bn_mat_print("view matrix", m);
	    azimuth() = atan2(-m[0],m[1]) / deg2rad;
	    elevation() = atan2(m[10],m[6]) / deg2rad;
	    status |= RMAT_SAW_VR;
	}
    }

    if ((status & RMAT_SAW_EYE) == 0) {
	bu_exit(1, "nirt: read_mat(): Was given no eye_pt\n");
    }
    if ((status & (RMAT_SAW_ORI | RMAT_SAW_VR)) == 0) {
	bu_exit(1, "nirt: read_mat(): Was given no orientation or viewrot\n");
    }

    direct(X) = -m[8];
    direct(Y) = -m[9];
    direct(Z) = -m[10];

    dir2ae();

    targ2grid();
    shoot("", 0);
}

/*
 * Local Variables:
 * mode: C
 * tab-width: 8
 * c-basic-offset: 4
 * indent-tabs-mode: t
 * End:
 * ex: shiftwidth=4 tabstop=8
 */
@


14.11
log
@pass bu_exit a NULL instead of an empty string
@
text
@d22 8
a31 5
/*      READ_MAT.C      */
#ifndef lint
static const char RCSid[] = "$Header: /cvsroot/brlcad/brlcad/src/nirt/read_mat.c,v 14.10 2007/11/21 19:49:12 erikgreenwald Exp $";
#endif

d43 1
d55 2
a56 2
/*	               R E A D _ M A T ( )
 *
a57 1

d66 4
a69 8
    while ((buf = rt_read_cmd(stdin)) != (char *) 0)
	if (strncmp(buf, "eye_pt", 6) == 0)
	{
	    if (sscanf(buf + 6, "%lf%lf%lf", &p[X], &p[Y], &p[Z]) != 3)
	    {
		(void) fputs("nirt: read_mat(): Failed to read eye_pt\n",
		    stderr);
		bu_exit (1, NULL);
d75 1
a75 3
	}
	else if (strncmp(buf, "orientation", 11) == 0)
	{
d77 3
a79 6
		"%lf%lf%lf%lf",
		&q[0], &q[1], &q[2], &q[3]) != 4)
	    {
		(void) fputs("nirt: read_mat(): Failed to read orientation\n",
		    stderr);
		bu_exit (1, NULL);
d87 1
a87 3
	}
	else if (strncmp(buf, "viewrot", 7) == 0)
	{
d89 6
a94 9
		"%lf%lf%lf%lf%lf%lf%lf%lf%lf%lf%lf%lf%lf%lf%lf%lf",
		&m[0], &m[1], &m[2], &m[3],
		&m[4], &m[5], &m[6], &m[7],
		&m[8], &m[9], &m[10], &m[11],
		&m[12], &m[13], &m[14], &m[15]) != 16)
	    {
		(void) fputs("nirt: read_mat(): Failed to read viewrot\n",
		    stderr);
		bu_exit (1, NULL);
d102 1
d104 2
a105 4
    if ((status & RMAT_SAW_EYE) == 0)
    {
	(void) fputs("nirt: read_mat(): Was given no eye_pt\n", stderr);
	bu_exit (1, NULL);
d107 2
a108 5
    if ((status & (RMAT_SAW_ORI | RMAT_SAW_VR)) == 0)
    {
	(void) fputs("nirt: read_mat(): Was given no orientation or viewrot\n",
		stderr);
	bu_exit (1, NULL);
d110 1
d114 1
d116 1
a116 3
#if 0
    ae2dir();
#endif
@


14.10
log
@exit->bu_exit where applicable
@
text
@d26 1
a26 1
static const char RCSid[] = "$Header: /cvsroot/brlcad/brlcad/src/nirt/read_mat.c,v 14.9 2007/09/15 16:23:18 brlcad Exp $";
d70 1
a70 1
		bu_exit (1, "");
d85 1
a85 1
		bu_exit (1, "");
d105 1
a105 1
		bu_exit (1, "");
d117 1
a117 1
	bu_exit (1, "");
d123 1
a123 1
	bu_exit (1, "");
@


14.9
log
@more c89 embracing.  c89 provides string.h for all of the various str*() and mem*() functions, so remove the check for its presence.  there is still likely to be work required for strict c89 conformance for the various bsd strings.h functions that may be in use.
@
text
@d26 1
a26 1
static const char RCSid[] = "$Header: /cvsroot/brlcad/brlcad/src/nirt/read_mat.c,v 14.8 2007/01/23 01:13:44 brlcad Exp $";
d70 1
a70 1
		exit (1);
d85 1
a85 1
		exit (1);
d105 1
a105 1
		exit (1);
d117 1
a117 1
	exit (1);
d123 1
a123 1
	exit (1);
@


14.8
log
@Sweeping license updates.  Documentation is fully relicensed to the BSD Documentation License (a minor variant of the FreeBSD Documentation License and BSD License).  All GPL code (mostly application code) is converted to the LGPL and now also specifically declares version 2.1, revoking the blank check to the FSF.  The intent of these sweeping changes are to simplify the licensing terms and increase overall flexibility of use, both externally (to users for their purposes) and internally (to allow application code to be migrated to libraries without creating GPL libraries).  As a collective work, BRL-CAD is now LGPL.
@
text
@d26 1
a26 1
static const char RCSid[] = "$Header: /cvsroot/brlcad/brlcad/src/nirt/read_mat.c,v 14.7 2007/01/20 14:36:58 brlcad Exp $";
d34 1
a34 5
#if HAVE_STRING_H
#  include <string.h>
#else
#  include <strings.h>
#endif
@


14.7
log
@update copyright to 2007
@
text
@d8 2
a9 3
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation; either version 2 of the
 * License, or (at your option) any later version.
d14 1
a14 1
 * General Public License for more details.
d16 2
a17 2
 * You should have received a copy of the GNU General Public License
 * along with this file; see the file named COPYING for more
d26 1
a26 1
static const char RCSid[] = "$Header: /cvsroot/brlcad/brlcad/src/nirt/read_mat.c,v 14.6 2006/02/27 10:08:40 brlcad Exp $";
@


14.6
log
@stdlib.h and exit()
@
text
@d4 1
a4 1
 * Copyright (c) 2004-2006 United States Government as represented by
d27 1
a27 1
static const char RCSid[] = "$Header: /cvsroot/brlcad/brlcad/src/nirt/read_mat.c,v 14.5 2006/01/18 06:46:23 brlcad Exp $";
@


14.5
log
@update copyright to 2006
@
text
@d27 1
a27 1
static const char RCSid[] = "$Header: /cvsroot/brlcad/brlcad/src/nirt/read_mat.c,v 14.4 2005/10/23 04:44:37 brlcad Exp $";
a29 1
/*	INCLUDES	*/
d32 1
a32 2


d36 1
a36 1
# include <string.h>
d38 1
a38 1
# include <strings.h>
d48 1
@


14.4
log
@trailing ws
@
text
@d4 1
a4 1
 * Copyright (C) 2004-2005 United States Government as represented by
d27 1
a27 1
static const char RCSid[] = "$Header: /cvsroot/brlcad/brlcad/src/nirt/read_mat.c,v 14.3 2005/01/30 20:31:08 brlcad Exp $";
@


14.3
log
@update copyright to 2005
@
text
@d27 1
a27 1
static const char RCSid[] = "$Header: /cvsroot/brlcad/brlcad/src/nirt/read_mat.c,v 14.2 2004/12/21 02:40:25 morrison Exp $";
d30 1
a30 1
/*	INCLUDES	*/ 
@


14.3.6.1
log
@merge changes from HEAD aka rel-7-6-4 to the rel-7-6-branch just in case someone peeks a gander or tries to continue/build the branch
@
text
@d27 1
a27 1
static const char RCSid[] = "$Header$";
d30 1
a30 1
/*	INCLUDES	*/
@


14.2
log
@assign copyright and GPL
@
text
@d4 2
a5 2
 * Copyright (c) 2004 United States Government as represented by the
 * U.S. Army Research Laboratory.
d27 1
a27 1
static const char RCSid[] = "$Header: /cvs/brlcad/src/nirt/read_mat.c,v 14.1 2004/11/16 19:42:17 morrison Exp $";
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d1 24
d27 1
a27 1
static const char RCSid[] = "$Header: /cvs/brlcad/src/nirt/read_mat.c,v 1.3 2004/09/03 23:30:59 morrison Exp $";
@


1.3
log
@USE_STRING_H is no more.. it's HAVE_STRING_H
@
text
@d3 1
a3 1
static const char RCSid[] = "$Header: /cvs/brlcad/src/nirt/read_mat.c,v 1.2 2004/08/02 23:01:51 morrison Exp $";
d117 10
@


1.2
log
@replace the wrapped config.h block with common.h
@
text
@d3 1
a3 1
static const char RCSid[] = "$Header: /cvs/brlcad/src/nirt/read_mat.c,v 1.1 2004/05/20 15:20:35 morrison Exp $";
d13 1
a13 1
#if USE_STRING_H
@


1.1
log
@Vast reorganization begins.  Sources moved from top-level directories into src/.
@
text
@d3 1
a3 1
static const char RCSid[] = "$Header: /cvs/brlcad/nirt/read_mat.c,v 11.7 2004/05/10 15:30:49 erikg Exp $";
d7 1
a7 3
#ifdef HAVE_CONFIG_H
# include "config.h"
#endif
@

