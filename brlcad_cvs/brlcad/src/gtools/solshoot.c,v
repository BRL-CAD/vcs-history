head	14.17;
access;
symbols
	rel-7-10-4:14.14
	STABLE:14.14.0.2
	stable-branch:14.6
	rel-7-10-2:14.14
	rel-7-10-0:14.13
	rel-7-8-4:14.11
	rel-7-8-2:14.11
	rel-7-8-0:14.11
	trimnurbs-branch:14.10.0.2
	help:14.10
	temp_tag:14.8
	bobWinPort-20051223-freeze:14.6
	postmerge-20051223-bobWinPort:14.8
	premerge-20051223-bobWinPort:14.8
	rel-7-6-6:14.8
	rel-7-6-4:14.7
	rel-7-6-2:14.6
	rel-7-6-branch:14.6.0.6
	rel-7-6-0:14.6
	rel-7-4-2:14.6
	rel-7-4-branch:14.6.0.4
	bobWinPort:14.6.0.2
	rel-7-4-0:14.6
	rel-7-2-6:14.6
	rel-7-2-4:14.6
	rel-7-2-2:14.6
	rel-7-2-0:14.6
	rel-7-0-4:14.5
	rel-7-0-2:14.5
	rel-7-0-1:14.5
	opensource-post:14.5
	opensource-pre:1.1
	rel-7-0-branch:1.1.0.2
	rel-7-0:1.1;
locks; strict;
comment	@ * @;


14.17
date	2007.12.14.20.53.28;	author brlcad;	state Exp;
branches;
next	14.16;

14.16
date	2007.11.21.20.38.22;	author erikgreenwald;	state Exp;
branches;
next	14.15;

14.15
date	2007.11.21.19.28.06;	author erikgreenwald;	state Exp;
branches;
next	14.14;

14.14
date	2007.05.14.21.04.30;	author brlcad;	state Exp;
branches;
next	14.13;

14.13
date	2007.01.23.01.13.32;	author brlcad;	state Exp;
branches;
next	14.12;

14.12
date	2007.01.20.14.36.49;	author brlcad;	state Exp;
branches;
next	14.11;

14.11
date	2006.04.05.19.15.42;	author brlcad;	state Exp;
branches;
next	14.10;

14.10
date	2006.02.27.10.08.40;	author brlcad;	state Exp;
branches
	14.10.2.1;
next	14.9;

14.9
date	2006.01.18.06.46.15;	author brlcad;	state Exp;
branches;
next	14.8;

14.8
date	2005.12.02.21.10.45;	author brlcad;	state Exp;
branches;
next	14.7;

14.7
date	2005.10.23.04.44.30;	author brlcad;	state Exp;
branches;
next	14.6;

14.6
date	2005.01.30.20.30.38;	author brlcad;	state Exp;
branches
	14.6.6.1;
next	14.5;

14.5
date	2004.12.21.07.32.29;	author morrison;	state Exp;
branches;
next	14.4;

14.4
date	2004.12.21.06.58.42;	author morrison;	state Exp;
branches;
next	14.3;

14.3
date	2004.12.21.06.44.32;	author morrison;	state Exp;
branches;
next	14.2;

14.2
date	2004.12.20.20.21.31;	author morrison;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.13;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.20.15.19.09;	author morrison;	state Exp;
branches;
next	;

14.6.6.1
date	2005.11.13.13.46.14;	author brlcad;	state Exp;
branches;
next	;

14.10.2.1
date	2006.04.07.19.26.27;	author jlowenz;	state Exp;
branches;
next	;


desc
@@


14.17
log
@quell decl mismatch warnings
@
text
@/*                      S O L S H O O T . C
 * BRL-CAD
 *
 * Copyright (c) 1995-2007 United States Government as represented by
 * the U.S. Army Research Laboratory.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * version 2.1 as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this file; see the file named COPYING for more
 * information.
 */
/** @@file solshoot.c
 *
 *  Author -
 *	Paul J. Tanenbaum
 *
 *  Source -
 *	The U. S. Army Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5068  USA
 */
#ifndef lint
static char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/gtools/solshoot.c,v 14.16 2007/11/21 20:38:22 erikgreenwald Exp $ (ARL)";
#endif

#include <stdlib.h>
#include <stdio.h>
#include <math.h>
#include <string.h>

#include "machine.h"
#include "bu.h"
#include "vmath.h"
#include "raytrace.h"
#include "../librt/debug.h"


#define	TITLE_LEN		80
#define	ORDER_BY_NAME		 0
#define	ORDER_BY_DISTANCE	 1
#define	made_it()		bu_log("Made it to %s:%d\n",	\
					__FILE__, __LINE__);

/*
 *		S O L _ N A M E _ D I S T
 *
 *	Little pair for storing the name and distance of a solid
 */
struct sol_name_dist
{
    long	magic;
    char	*name;
    fastf_t	dist;
};
#define	SOL_NAME_DIST_MAGIC	0x736c6e64

/*
 *		S O L _  C O M P _ N A M E
 *
 *	The function to order solids alphabetically by name
 */
int sol_comp_name (void *v1, void *v2)
{
    struct sol_name_dist	*s1 = v1;
    struct sol_name_dist	*s2 = v2;

    BU_CKMAG(s1, SOL_NAME_DIST_MAGIC, "sol_name_dist structure");
    BU_CKMAG(s2, SOL_NAME_DIST_MAGIC, "sol_name_dist structure");

    return(strcmp(s1 -> name, s2 -> name));
}

/*
 *		S O L _  C O M P _ D I S T
 *
 *	The function to order solids by distance along the ray
 */
int sol_comp_dist (void *v1, void *v2)
{
    struct sol_name_dist	*s1 = v1;
    struct sol_name_dist	*s2 = v2;

    BU_CKMAG(s1, SOL_NAME_DIST_MAGIC, "sol_name_dist structure");
    BU_CKMAG(s2, SOL_NAME_DIST_MAGIC, "sol_name_dist structure");

    if (s1 -> dist > s2 -> dist)
	return (1);
    else if (s1 -> dist == s2 -> dist)
	return (0);
    else /* (s1 -> dist < s2 -> dist) */
	return (-1);
}

/*
 *			M K _ S O L I D
 */
struct sol_name_dist *mk_solid (char *name, fastf_t dist)
{
    struct sol_name_dist	*sp;

    sp = (struct sol_name_dist *)
	    bu_malloc(sizeof(struct sol_name_dist), "solid name-and_dist");
    sp -> magic = SOL_NAME_DIST_MAGIC;
    sp -> name = name;
    sp -> dist = dist;
    bu_log("Created solid (%s, %g)\n", sp -> name, sp -> dist);
    return (sp);
}

/*
 *			F R E E _ S O L I D
 */
void free_solid (char *vp)
{
    struct sol_name_dist	*sol = (struct sol_name_dist *) vp;

    BU_CKMAG(sol, SOL_NAME_DIST_MAGIC, "solid name-and-dist");

    bu_log("freeing solid (%s, %g)...\n", sol -> name, sol -> dist);
    bu_free((char *) sol, "solid name-and-dist");
}

/*
 *			P R I N T _ S O L I D
 */
void print_solid (void *vp, int depth)
{
    struct sol_name_dist	*sol = vp;

    BU_CKMAG(sol, SOL_NAME_DIST_MAGIC, "sol_name_dist structure");
    bu_log("solid %s at distance %g along ray\n", sol -> name, sol -> dist);
}

/*			R P T _ H I T
 *
 *	Hit handler for use by rt_shootray().
 *
 *	Does nothing.  Returns 1.
 */
static int rpt_hit (struct application *ap, struct partition *ph, struct seg *segs)
{
    struct partition		*pp;
    struct seg			*sh;
    struct seg			*sp;
    bu_rb_tree			*solids;
    struct sol_name_dist	*old_sol;
    struct sol_name_dist	*sol;
    static int			(*orders[])() =
				{
				    sol_comp_name,
				    sol_comp_dist
				};

    bu_log("I hit it!\n");
    /*
     *	Initialize the solid list
     */
    if ((solids = bu_rb_create("Solid list", 2, orders)) == BU_RB_TREE_NULL)
	bu_exit (1, "%s: %d: bu_rb_create() bombed\n", __FILE__, __LINE__);
    solids -> rbt_print = print_solid;
    bu_rb_uniq_on(solids, ORDER_BY_NAME);

    /*
     *	Get the list of segments along this ray
     *	and seek to its head
     */
    BU_CKMAG(ph, PT_HD_MAGIC, "partition head");
    pp = ph -> pt_forw;
    BU_CKMAG(pp, PT_MAGIC, "partition structure");
    for (sh = pp -> pt_inseg;
	    *((long *) sh) != BU_LIST_HEAD_MAGIC;
	    sh = (struct seg *) (sh -> l.forw))
	BU_CKMAG(sh, RT_SEG_MAGIC, "segment structure");

    /*
     *	March down the list of segments
     */
    for (sp = (struct seg *) (sh -> l.forw);
	    sp != sh;
	    sp = (struct seg *) sp -> l.forw)
    {
	BU_CKMAG(sp, RT_SEG_MAGIC, "seg structure");
	bu_log("I saw solid %s at distance %g\n",
	    sp -> seg_stp -> st_name,
	    sp -> seg_in.hit_dist);

	sol = mk_solid(sp -> seg_stp -> st_name, sp -> seg_in.hit_dist);
	if (bu_rb_insert(solids, (void *) sol) < 0)
	{
	    old_sol = (struct sol_name_dist *) bu_rb_curr(solids, ORDER_BY_NAME);
	    BU_CKMAG(old_sol, SOL_NAME_DIST_MAGIC, "sol_name_dist structure");
	    if (sol -> dist >= old_sol -> dist)
		free_solid((char *) sol);
	    else
	    {
		bu_rb_delete(solids, ORDER_BY_NAME);
		bu_rb_insert(solids, sol);
		free_solid((char *) old_sol);
	    }
	}
    }
    bu_log("\n- - - Solids along the ray - - -\n");
    bu_rb_walk(solids, ORDER_BY_DISTANCE, print_solid, INORDER);

    bu_prmem("Before bu_rb_free()...");
    bu_rb_diagnose_tree(solids, ORDER_BY_NAME, INORDER);
#if 0
    bu_rb_free(solids, RB_RETAIN_DATA);
#else
    bu_rb_free(solids, free_solid);
#endif
    bu_prmem("After bu_rb_free()...");

    return (1);
}


/* Null event handler for use by rt_shootray()'s miss callback. */
static int
no_miss_op (struct application *ap)
{
    return (1);
}


/* Null event handler for use by rt_shootray()'s overlap callback. */
static int
no_ov_op (struct application *ap, struct partition *pp, struct region *r1, struct region *r2, struct partition *hp)
{
    return (1);
}


int
main (int argc, char **argv)
{
    struct application	ap;
    char		db_title[TITLE_LEN+1];
    struct rt_i		*rtip;

    if (--argc < 2)
    {
	bu_log("Usage: 'solshoot model.g obj [obj...]'\n");
	return 1;
    }

    /* Read in the geometry model */
    bu_log("Database file:  '%s'\n", *++argv);
    bu_log("Building the directory... ");
    if ((rtip = rt_dirbuild(*argv , db_title, TITLE_LEN)) == RTI_NULL)
    {
	bu_log("Could not build directory for file '%s'\n", *argv);
	return 1;
    }
    rtip -> useair = 1;
    bu_log("\nPreprocessing the geometry... ");
    while (--argc > 0)
    {
	if (rt_gettree(rtip, *++argv) == -1)
	    return 1;
	bu_log("\nObject '%s' processed", *argv);
    }
    bu_log("\nPrepping the geometry... ");
    rt_prep(rtip);
    bu_log("\n");

    rt_g.debug = DEBUG_MEM_FULL;

    /* Initialize the application structure */
    RT_APPLICATION_INIT(&ap);
    ap.a_hit = rpt_hit;
    ap.a_miss = no_miss_op;
    ap.a_resource = RESOURCE_NULL;
    ap.a_overlap = no_ov_op;
    ap.a_onehit = 0;		/* Don't stop at first partition */
    ap.a_rt_i = rtip;
    ap.a_zero1 = 0;		/* Sanity checks for LIBRT(3) */
    ap.a_zero2 = 0;
    ap.a_purpose = "Determine which segments get reported";

#if 1
    VSET(ap.a_ray.r_pt, 7.0, 7.0, 0.0);
    VSET(ap.a_ray.r_dir, -0.7071067812, -0.7071067812, 0.0);
#else
    VSET(ap.a_ray.r_pt, 20.0, 0.0, 0.0);
    VSET(ap.a_ray.r_dir, -1.0, 0.0, 0.0);
#endif
    (void) rt_shootray(&ap);
}

/*
 * Local Variables:
 * mode: C
 * tab-width: 8
 * c-basic-offset: 4
 * indent-tabs-mode: t
 * End:
 * ex: shiftwidth=4 tabstop=8
 */
@


14.16
log
@collapse bu_log();bu_exit(#,""); as much as possible
@
text
@d30 1
a30 1
static char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/gtools/solshoot.c,v 14.15 2007/11/21 19:28:06 erikgreenwald Exp $ (ARL)";
d224 12
a235 7
/*			N O _ O P
 *
 *	Null event handler for use by rt_shootray().
 *
 *	Does nothing.  Returns 1.
 */
static int no_op (struct application *ap)
d240 2
d279 1
a279 1
    ap.a_miss = no_op;
d281 1
a281 1
    ap.a_overlap = no_op;
@


14.15
log
@exit->bu_exit where applicable
@
text
@d30 1
a30 1
static char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/gtools/solshoot.c,v 14.14 2007/05/14 21:04:30 brlcad Exp $ (ARL)";
d166 1
a166 4
    {
	bu_log("%s: %d: bu_rb_create() bombed\n", __FILE__, __LINE__);
	bu_exit (1, "");
    }
@


14.14
log
@gah, pick up where someone left off over half a decade ago.  finish updating all of the compat4 symbols throughout the code to their new names.  finally. it's done.  make the deprecated headers obsolete -- make compat4.h obsolete too so we can be sure that all of the changes are now picked up by the compiler as errors.  this change will likely impact muves if they've similarly not updated to the new names too, so the headers are kept with a #warning for now (though will likely disappear down the road entirely).
@
text
@d30 1
a30 1
static char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/gtools/solshoot.c,v 14.13 2007/01/23 01:13:32 brlcad Exp $ (ARL)";
d168 1
a168 1
	exit (1);
@


14.13
log
@Sweeping license updates.  Documentation is fully relicensed to the BSD Documentation License (a minor variant of the FreeBSD Documentation License and BSD License).  All GPL code (mostly application code) is converted to the LGPL and now also specifically declares version 2.1, revoking the blank check to the FSF.  The intent of these sweeping changes are to simplify the licensing terms and increase overall flexibility of use, both externally (to users for their purposes) and internally (to allow application code to be migrated to libraries without creating GPL libraries).  As a collective work, BRL-CAD is now LGPL.
@
text
@d30 1
a30 1
static char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/gtools/solshoot.c,v 14.12 2007/01/20 14:36:49 brlcad Exp $ (ARL)";
a40 2
#include "rtstring.h"
#include "rtlist.h"
d74 2
a75 2
    RT_CKMAG(s1, SOL_NAME_DIST_MAGIC, "sol_name_dist structure");
    RT_CKMAG(s2, SOL_NAME_DIST_MAGIC, "sol_name_dist structure");
d90 2
a91 2
    RT_CKMAG(s1, SOL_NAME_DIST_MAGIC, "sol_name_dist structure");
    RT_CKMAG(s2, SOL_NAME_DIST_MAGIC, "sol_name_dist structure");
d124 1
a124 1
    RT_CKMAG(sol, SOL_NAME_DIST_MAGIC, "solid name-and-dist");
d137 1
a137 1
    RT_CKMAG(sol, SOL_NAME_DIST_MAGIC, "sol_name_dist structure");
d165 1
a165 1
    if ((solids = bu_rb_create("Solid list", 2, orders)) == RB_TREE_NULL)
d177 1
a177 1
    RT_CKMAG(ph, PT_HD_MAGIC, "partition head");
d179 1
a179 1
    RT_CKMAG(pp, PT_MAGIC, "partition structure");
d181 1
a181 1
	    *((long *) sh) != RT_LIST_HEAD_MAGIC;
d183 1
a183 1
	RT_CKMAG(sh, RT_SEG_MAGIC, "segment structure");
d192 1
a192 1
	RT_CKMAG(sp, RT_SEG_MAGIC, "seg structure");
d201 1
a201 1
	    RT_CKMAG(old_sol, SOL_NAME_DIST_MAGIC, "sol_name_dist structure");
@


14.12
log
@update copyright to 2007
@
text
@d8 2
a9 3
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation; either version 2 of the
 * License, or (at your option) any later version.
d14 1
a14 1
 * General Public License for more details.
d16 2
a17 2
 * You should have received a copy of the GNU General Public License
 * along with this file; see the file named COPYING for more
d30 1
a30 1
static char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/gtools/solshoot.c,v 14.11 2006/04/05 19:15:42 brlcad Exp $ (ARL)";
@


14.11
log
@more header/warning cleanup from Intel compiler warnings on Altix
@
text
@d4 1
a4 1
 * Copyright (c) 1995-2006 United States Government as represented by
d31 1
a31 1
static char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/gtools/solshoot.c,v 14.10 2006/02/27 10:08:40 brlcad Exp $ (ARL)";
@


14.10
log
@stdlib.h and exit()
@
text
@d31 1
a31 1
static char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/gtools/solshoot.c,v 14.9 2006/01/18 06:46:15 brlcad Exp $ (ARL)";
d37 1
@


14.10.2.1
log
@update from HEAD
@
text
@d31 1
a31 1
static char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/gtools/solshoot.c,v 14.10 2006/02/27 10:08:40 brlcad Exp $ (ARL)";
a36 1
#include <string.h>
@


14.9
log
@update copyright to 2006
@
text
@d31 1
a31 1
static char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/gtools/solshoot.c,v 14.8 2005/12/02 21:10:45 brlcad Exp $ (ARL)";
d34 1
d37 1
d46 1
d249 1
a249 1
	exit (1);
d258 1
a258 1
	exit(1);
d265 1
a265 1
	    exit (1);
@


14.8
log
@use RT_APPLICATION_INIT
@
text
@d4 1
a4 1
 * Copyright (C) 1995-2005 United States Government as represented by
d31 1
a31 1
static char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/gtools/solshoot.c,v 14.7 2005/10/23 04:44:30 brlcad Exp $ (ARL)";
@


14.7
log
@trailing ws
@
text
@d31 1
a31 1
static char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/gtools/solshoot.c,v 14.6 2005/01/30 20:30:38 brlcad Exp $ (ARL)";
d272 1
@


14.6
log
@update copyright to 2005
@
text
@d25 1
a25 1
 *  
d31 1
a31 1
static char RCSid[] = "@@(#)$Header: /cvsroot/brlcad/brlcad/src/gtools/solshoot.c,v 14.5 2004/12/21 07:32:29 morrison Exp $ (ARL)";
d195 1
a195 1
	
@


14.6.6.1
log
@merge changes from HEAD aka rel-7-6-4 to the rel-7-6-branch just in case someone peeks a gander or tries to continue/build the branch
@
text
@d25 1
a25 1
 *
d31 1
a31 1
static char RCSid[] = "@@(#)$Header$ (ARL)";
d195 1
a195 1

@


14.5
log
@tidy up a lil bit
@
text
@d4 1
a4 1
 * Copyright (c) 1995-2004 United States Government as represented by
d31 1
a31 1
static char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/gtools/solshoot.c,v 14.4 2004/12/21 06:58:42 morrison Exp $ (ARL)";
@


14.4
log
@remove the old copyright notice section as it's been supplanted (and copyright is now claimable in the us via assignmgent)
@
text
@a28 2
 *  
 *
d31 1
a31 1
static char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/gtools/solshoot.c,v 14.3 2004/12/21 06:44:32 morrison Exp $ (ARL)";
@


14.3
log
@remove the old distribution notice section
@
text
@a30 3
 *  Copyright Notice -
 *	This software is Copyright (C) 1995-2004 by the United States Army
 *	in all countries except the USA.  All rights reserved.
d33 1
a33 1
static char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/gtools/solshoot.c,v 14.2 2004/12/20 20:21:31 morrison Exp $ (ARL)";
@


14.2
log
@assign copyright and GPL license
@
text
@a29 4
 *  Distribution Notice -
 *	Re-distribution of this software is restricted, as described in
 *	your "Statement of Terms and Conditions for the Release of
 *	The BRL-CAD Package" agreement.
d36 1
a36 1
static char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/gtools/solshoot.c,v 14.1 2004/11/16 19:42:13 morrison Exp $ (ARL)";
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d1 21
a21 2
/*
 *			S O L S H O O T . C
d40 1
a40 1
static char RCSid[] = "@@(#)$Header: /cvs/brlcad/src/gtools/solshoot.c,v 1.1 2004/05/20 15:19:09 morrison Exp $ (ARL)";
@


1.1
log
@Vast reorganization begins.  Sources moved from top-level directories into src/.
@
text
@d21 1
a21 1
static char RCSid[] = "@@(#)$Header: /cvs/brlcad/gtools/solshoot.c,v 1.5 2004/04/05 07:48:13 morrison Exp $ (ARL)";
d281 10
@

