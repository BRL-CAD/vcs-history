head	1.2;
access;
symbols
	ansi-20040405-merged:1.1.10.1
	postmerge-20040405-ansi:1.1
	premerge-20040404-ansi:1.1
	postmerge-autoconf:1.1
	autoconf-freeze:1.1
	premerge-autoconf:1.1
	postmerge-20040315-windows:1.1
	premerge-20040315-windows:1.1
	windows-20040315-freeze:1.1.8.1
	autoconf-20031203:1.1
	autoconf-20031202:1.1
	autoconf-branch:1.1.0.6
	phong-branch:1.1.0.4
	photonmap-branch:1.1.0.2
	windows-branch:1.1.0.8
	ansi-branch:1.1.0.10;
locks; strict;
comment	@# @;


1.2
date	2004.05.21.18.04.51;	author morrison;	state dead;
branches;
next	1.1;

1.1
date	2003.03.13.19.18.35;	author jra;	state Exp;
branches
	1.1.8.1
	1.1.10.1;
next	;

1.1.8.1
date	2004.03.12.09.59.19;	author morrison;	state Exp;
branches;
next	;

1.1.10.1
date	2004.03.17.21.20.04;	author morrison;	state Exp;
branches;
next	;


desc
@@


1.2
log
@moved from top-level to src/other/.
@
text
@# The file tests the tcl_platform variable
#
# This file contains a collection of tests for one or more of the Tcl
# built-in commands.  Sourcing this file into Tcl runs the tests and
# generates output for errors.  No output means no errors were found.
#
# Copyright (c) 1999 by Scriptics Corporation
#
# See the file "license.terms" for information on usage and redistribution
# of this file, and for a DISCLAIMER OF ALL WARRANTIES.
#
# RCS: @@(#) 

if {[lsearch [namespace children] ::tcltest] == -1} {
    package require tcltest
    namespace import -force ::tcltest::*
}

test platform-1.1 {TclpSetVariables: tcl_platform} {
    interp create i
    i eval {catch {unset tcl_platform(debug)}}
    i eval {catch {unset tcl_platform(threaded)}}
    set result [i eval {lsort [array names tcl_platform]}]
    interp delete i
    set result
} {byteOrder machine os osVersion platform user wordSize}

# Test assumes twos-complement arithmetic, which is true of virtually
# everything these days.  Note that this does *not* use wide(), and
# this is intentional since that could make Tcl's numbers wider than
# the machine-integer on some platforms...
test platform-2.1 {tcl_platform(wordSize) indicates size of native word} {
    set result [expr {1 << (8 * $tcl_platform(wordSize) - 1)}]
    # Result must be the largest bit in a machine word, which this checks
    # without assuming how wide the word really is
    list [expr {$result < 0}] [expr {$result ^ ($result - 1)}]
} {1 -1}

# cleanup
::tcltest::cleanupTests
return
@


1.1
log
@*** empty log message ***
@
text
@@


1.1.10.1
log
@sync branch with HEAD
@
text
@@


1.1.8.1
log
@merge from HEAD
@
text
@@

