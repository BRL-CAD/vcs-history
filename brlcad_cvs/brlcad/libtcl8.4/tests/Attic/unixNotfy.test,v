head	1.4;
access;
symbols
	ansi-20040405-merged:1.3.4.1
	postmerge-20040405-ansi:1.3
	premerge-20040404-ansi:1.3
	postmerge-autoconf:1.3
	autoconf-freeze:1.1.6.4
	premerge-autoconf:1.3
	postmerge-20040315-windows:1.3
	premerge-20040315-windows:1.3
	windows-20040315-freeze:1.3.2.1
	autoconf-20031203:1.1.6.1
	autoconf-20031202:1.1
	autoconf-branch:1.1.0.6
	phong-branch:1.1.0.4
	photonmap-branch:1.1.0.2
	windows-branch:1.3.0.2
	ansi-branch:1.3.0.4;
locks; strict;
comment	@# @;


1.4
date	2004.05.21.18.04.58;	author morrison;	state dead;
branches;
next	1.3;

1.3
date	2004.03.04.19.47.20;	author morrison;	state Exp;
branches
	1.3.2.1
	1.3.4.1;
next	1.2;

1.2
date	2003.11.07.14.54.46;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2003.03.13.19.18.39;	author jra;	state Exp;
branches
	1.1.6.1;
next	;

1.1.6.1
date	2003.12.03.16.24.50;	author erikg;	state Exp;
branches;
next	1.1.6.2;

1.1.6.2
date	2004.02.12.18.56.47;	author erikg;	state Exp;
branches;
next	1.1.6.3;

1.1.6.3
date	2004.03.15.12.10.37;	author erikg;	state Exp;
branches;
next	1.1.6.4;

1.1.6.4
date	2004.03.15.14.01.31;	author erikg;	state Exp;
branches;
next	;

1.3.2.1
date	2004.03.12.09.59.23;	author morrison;	state Exp;
branches;
next	;

1.3.4.1
date	2004.03.17.21.20.07;	author morrison;	state Exp;
branches;
next	;


desc
@@


1.4
log
@moved from top-level to src/other/.
@
text
@# This file contains tests for tclUnixNotfy.c.
#
# This file contains a collection of tests for one or more of the Tcl
# built-in commands.  Sourcing this file into Tcl runs the tests and
# generates output for errors.  No output means no errors were found.
#
# Copyright (c) 1997 by Sun Microsystems, Inc.
# Copyright (c) 1998-1999 by Scriptics Corporation.
#
# See the file "license.terms" for information on usage and redistribution
# of this file, and for a DISCLAIMER OF ALL WARRANTIES.
#
# RCS: @@(#) $Id: unixNotfy.test,v 1.3 2004/03/04 19:47:20 morrison Exp $

# The tests should not be run if you have a notifier which is unable to
# detect infinite vwaits, as the tests below will hang. The presence of
# the "testthread" command indicates that this is the case.

if {[lsearch [namespace children] ::tcltest] == -1} {
    package require tcltest 2
    namespace import -force ::tcltest::*
}

if {[info exists tk_version]} {
    puts "When run in a Tk shell, these tests run hang.  Skipping tests ..."
    ::tcltest::cleanupTests
    return
}

set ::tcltest::testConstraints(testthread) \
	[expr {[info commands testthread] != {}}]

# The next two tests will hang if threads are enabled because the notifier
# will not necessarily wait for ever in this case, so it does not generate
# an error.

test unixNotfy-1.1 {Tcl_DeleteFileHandler} \
    -constraints {unixOnly && !testthread} \
    -body {
	catch {vwait x}
	set f [open [makeFile "" foo] w]
	fileevent $f writable {set x 1}
	vwait x
	close $f
	list [catch {vwait x} msg] $msg
    } \
    -result {1 {can't wait for variable "x":  would wait forever}} \
    -cleanup { 
	catch { close $f }
	catch { removeFile foo }
    }

test unixNotfy-1.2 {Tcl_DeleteFileHandler} \
    -constraints {unixOnly && !testthread} \
    -body {
	catch {vwait x}
	set f1 [open [makeFile "" foo] w]
	set f2 [open [makeFile "" foo2] w]
	fileevent $f1 writable {set x 1}
	fileevent $f2 writable {set y 1}
	vwait x
	close $f1
	vwait y
	close $f2
	list [catch {vwait x} msg] $msg
    } \
    -result {1 {can't wait for variable "x":  would wait forever}} \
    -cleanup {
	catch { close $f1 }
	catch { close $f2 }
	catch { removeFile foo }
	catch { removeFile foo2 }
    }

test unixNotfy-2.1 {Tcl_DeleteFileHandler} \
    -constraints {unixOnly testthread} \
    -body {
	update
	set f [open [makeFile "" foo] w]
	fileevent $f writable {set x 1}
	vwait x
	close $f
	testthread create "after 500
    testthread send [testthread id] {set x ok}
    testthread exit"
	vwait x
	set x
    } \
    -result {ok} \
    -cleanup {
	catch { close $f }
	catch { removeFile foo }
    }

test unixNotfy-2.2 {Tcl_DeleteFileHandler} \
    -constraints {unixOnly testthread} \
    -body {
	update
	set f1 [open [makeFile "" foo] w]
	set f2 [open [makeFile "" foo2] w]
	fileevent $f1 writable {set x 1}
	fileevent $f2 writable {set y 1}
	vwait x
	close $f1
	vwait y
	close $f2
	testthread create "after 500
            testthread send [testthread id] {set x ok}
            testthread exit"
        vwait x
        set x
    } \
    -result {ok} \
    -cleanup { 
	catch { close $f1 }
	catch { close $f2 }
	catch { removeFile foo }
	catch { removeFile foo2 }
    }

# cleanup
::tcltest::cleanupTests
return
@


1.3
log
@Updated to tcl 8.4.6
@
text
@d13 1
a13 1
# RCS: @@(#) $Id: unixNotfy.test,v 1.11.2.2 2003/10/06 13:55:39 dgp Exp $
@


1.3.4.1
log
@sync branch with HEAD
@
text
@d13 1
a13 1
# RCS: @@(#) $Id$
@


1.3.2.1
log
@merge from HEAD
@
text
@d13 1
a13 1
# RCS: @@(#) $Id$
@


1.2
log
@updated tcl to 8.4.4
@
text
@d13 1
a13 1
# RCS: @@(#) $Id: unixNotfy.test,v 1.11 2003/02/01 21:07:28 kennykb Exp $
d20 1
a20 1
    package require tcltest
d76 1
a76 1
    -constraints {unixOnly && testthread} \
d96 1
a96 1
    -constraints {unixOnly && testthread} \
@


1.1
log
@*** empty log message ***
@
text
@@


1.1.6.1
log
@updates from HEAD, part 1
@
text
@d13 1
a13 1
# RCS: @@(#) $Id: unixNotfy.test,v 1.2 2003/11/07 14:54:46 morrison Exp $
@


1.1.6.2
log
@merge from HEAD
@
text
@@


1.1.6.3
log
@merge from head
@
text
@d13 1
a13 1
# RCS: @@(#) $Id: unixNotfy.test,v 1.3 2004/03/04 19:47:20 morrison Exp $
d20 1
a20 1
    package require tcltest 2
d76 1
a76 1
    -constraints {unixOnly testthread} \
d96 1
a96 1
    -constraints {unixOnly testthread} \
@


1.1.6.4
log
@merge from head...
@
text
@d13 1
a13 1
# RCS: @@(#) $Id: unixNotfy.test,v 1.1.6.3 2004/03/15 12:10:37 erikg Exp $
@


