head	14.4;
access;
symbols
	rel-7-10-4:14.4
	STABLE:14.4.0.4
	stable-branch:14.2
	rel-7-10-2:14.4
	rel-7-10-0:14.4
	rel-7-8-4:14.4
	rel-7-8-2:14.4
	rel-7-8-0:14.4
	trimnurbs-branch:14.4.0.2
	help:14.4
	temp_tag:14.4
	bobWinPort-20051223-freeze:14.3
	postmerge-20051223-bobWinPort:14.4
	premerge-20051223-bobWinPort:14.4
	rel-7-6-6:14.4
	rel-7-6-4:14.4
	rel-7-6-2:14.3
	rel-7-6-branch:14.3.0.6
	rel-7-6-0:14.3
	rel-7-4-2:14.3
	rel-7-4-branch:14.3.0.4
	bobWinPort:14.3.0.2
	rel-7-4-0:14.3
	rel-7-2-6:14.3
	rel-7-2-4:14.3
	rel-7-2-2:14.2
	rel-7-2-0:14.2
	rel-7-0-4:14.2
	rel-7-0-2:14.2
	rel-7-0-1:14.2
	opensource-post:14.2
	opensource-pre:1.1
	rel-7-0-branch:1.1.0.2
	rel-7-0:1.1;
locks; strict;
comment	@# @;


14.4
date	2005.10.23.04.44.26;	author brlcad;	state Exp;
branches;
next	14.3;

14.3
date	2005.05.02.01.59.34;	author brlcad;	state Exp;
branches
	14.3.6.1;
next	14.2;

14.2
date	2004.12.21.07.53.42;	author morrison;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.09;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.19.18.35.16;	author morrison;	state Exp;
branches;
next	;

14.3.6.1
date	2005.11.13.13.46.09;	author brlcad;	state Exp;
branches;
next	;


desc
@@


14.4
log
@trailing ws
@
text
@<html><head>
<title>BRL-CAD anim_cascade Man Page</title>
</head><body>
<h1>NAME</h1>
anim_cascade - evaluate movement of an object relative to a moving frame of
reference
<h1>SYNOPSIS</h1>
<b>anim_cascade [-s][-o(f|r|a)] [-(f|r|a)(c|y) # # #] &lt;</b>
<b>input.table &gt;</b>
<b>output.table</b>
<h1>DESCRIPTION</h1>
<i>Anim_cascade</i>
is designed to enable the user to control the movement of objects relative to
other objects. In the normal mode of operation, the user supplies
the position and orientation of a (possibly moving) frame of reference and
the position
and orientation of an object relative to the frame of reference,
and
<i>anim_cascade</i>
produces the absolute position and orientation of the object at each
point in time.
All orientations are specified as yaw, pitch, and roll.
The columns of the input table are:
<p>
time fx fy fz fyaw fpitch froll rx ry rz ryaw rpitch rroll
<p>
and the columns of the output table are:
<p>
time ax ay az ayaw apitch aroll
<p>
Here "f" refers to the frame of reference, "r" refers to the position
and orientation of the object relative to the frame, and "a"
refers to the absolute position and orientation of the object.

<h1>OPTIONS</h1>
<dl><dt>
<b>-or </b>

<dd>
Output the relative position and orientation.
If this option is specified,
<i>anim_cascade</i>
will expect the absolute position and orientation of the frame of
reference and the object as input,
and will produce the position and orientation or the object relative to
the frame as output. The
input columns should be:
<p>
time fx fy fz fyaw fpitch froll ax ay az ayaw apitch aroll
<p>
and the output columns will be:
<p>
time rx ry rz ryaw rpitch rroll
<p>
<dt>
<b>-of</b>

<dd>
Output the frame of reference.
If this option is specified,
<i>anim_cascade</i>
will expect the absolute and relative positions and orientations of the
object as input,
and will produce the corresponding frame of reference as output.
The input columns should be:
<p>
time ax ay az ayaw apitch aroll rx ry rz ryaw rpitch rroll
<p>
and the output columns will be:
<p>
time fx fy fz fyaw fpitch froll
<p>
<dt>
<b>-fc # # #</b>

<dd>
Specify a constant position for the frame of reference. The
columns fx, fy, and fz should be omitted from the input table, and the
command-line arguments will be used instead.
This has no effect if used
in conjunction with
<b>-of</b>
<dt>
<b>-fy # # #</b>

<dd>
Specify a constant orientation for the frame of reference. The
columns fyaw, fpitch, and froll should be omitted from the input table,
and the command-line arguments will be used instead.
This has no effect if used
in conjunction with
<b>-of</b>.
<dt>
<b>-rc # # #</b>

<dd>
Specify a constant position of the object relative to the frame
of reference. The
columns rx, ry, and rz should be omitted from the input table, and the
command-line arguments will be used instead.
This has no effect if used
in conjunction with
<b>-or</b>.
<dt>
<b>-ry # # #</b>

<dd>
Specify a constant orientation of the object relative to the
frame of reference. The
columns ryaw,  rpitch, and rroll should be omitted from the input table,
and the command-line arguments will be used instead.
This has no effect if used
in conjunction with
<b>-or</b>.
<dt>
<b>-ac # # #</b>

<dd>
Specify a constant absolute position for the object. The
columns ax, ay, and az should be omitted from the input table, and the
command-line arguments will be used instead.
This has no effect unless used
in conjunction with
<b>-or</b>
or
<b>-of</b>.
<dt>
<b>-ay # # #</b>

<dd>
Specify a constant absolute orientation for the object. The
columns ayaw, apitch, and aroll should be omitted from the input table,
and the
command-line arguments will be used instead.
This has no effect unless used
in conjunction with
<b>-or</b>
or
<b>-of</b>.
<dt>
<b>-s</b>

<dd>
Suppress time column. No time column is read or written.
<p>
Note: When all of the input columns are specified with command-line arguments,
then standard input is not read and
only one line of output is produced. The time value will be set to zero,
unless it is suppressed.

</dl>
<h1>EXAMPLES</h1>
1. Suppose that you want the virtual camera to pan in a circle around a
moving vehicle, always staying a fixed distance from the vehicle.
You should already have an animation table with the time, position,
and orientation of the vehicle in each frame. This will be the moving
frame of reference. Next, you should create an animation table which
describes how the camera should move relative to the vehicle; in other
words, how the camera would
need to move if the vehicle were  standing still
at the origin. The columns of the second animation table should be
appended to the columns of the first table
(using
<i>paste</i>,<i></i>
for example), to create the
input table.
<i>Anim_cascade </i>
will produce an absolute animation table for
the camera, suitable to use as input to
<a href="anim_script.html">anim_script</a>:
<p>
anim_cascade &lt; input.table | anim_script -v500 &gt; view.script
<p>
2. Suppose that you have an animation path for an object and you want to
know when it crosses a given oblique plane. You can use the
<b>-or </b>
option to
find out what the position of the object is relative to the frame of
reference of the plane. Suppose that the plane is defined by the
equation:
<p>
 x + z = 0
<p>
Imagine taking the usual x,y, and z  axes and pitching them by -45
degrees. The new z-axis would be perpendicular to the plane, and the
new x
and y axes would lie in the plane. Relative to this frame of
reference, the plane is simply given by the equation z=0.
<p>
To find out where the given animation path lies relative to this new
(fixed) frame
of reference, you could execute the following command:
<p>
anim_cascade -or -fc 0 0 0 -fy 0 -45 0 &lt; absolute.table &gt; relative.table
<p>
Whenever the z coordinate of the output table is positive, the object
lies above the plane; whenever the z-coordinate is negative, the
object lies below the plane.
<p>
3. Suppose that one object is situated at the point (1,2,3) with a yaw,
pitch, and roll of (45, 25, 10). Suppose further that you want to
position a camera so that the object is 10
units in front of the camera, facing to the camera's right. In other
words, you know the absolute position and orientation of the object.
You know how you want the object to look from the viewpoint (frame of
reference) of the camera. What you are trying to find is the frame of
reference which satisfies these  two constraints. The  appropriate
command is:
<p>
anim_cascade -s -of -ac 1 2 3 -ay 45 25 10 -rc 10 0 0 -ry -90 0 0
<p>
<h1>AUTHOR</h1>
Carl J. Nuzman
<h1>"BUG REPORTS"</h1>
Reports of bugs or problems should be submitted via electronic
mail to &lt;devs@@brlcad.org&gt;.
</body></html>
@


14.3
log
@replace the old cad e-mail with devs at brlcad dot org since the dot mil forward is no more.
@
text
@d15 2
a16 2
the position and orientation of a (possibly moving) frame of reference and 
the position 
d18 1
a18 1
and 
d40 2
a41 2
Output the relative position and orientation. 
If this option is specified, 
d44 1
a44 1
reference and the object as input, 
d60 1
a60 1
If this option is specified, 
d63 1
a63 1
object as input, 
d79 1
a79 1
command-line arguments will be used instead. 
d81 1
a81 1
in conjunction with 
d88 1
a88 1
columns fyaw, fpitch, and froll should be omitted from the input table, 
d91 1
a91 1
in conjunction with 
d98 1
a98 1
of reference. The 
d102 1
a102 1
in conjunction with 
d108 1
a108 1
Specify a constant orientation of the object relative to the 
d110 1
a110 1
columns ryaw,  rpitch, and rroll should be omitted from the input table, 
d113 1
a113 1
in conjunction with 
d119 1
a119 1
Specify a constant absolute position for the object. The 
d122 2
a123 2
This has no effect unless used 
in conjunction with 
d132 1
a132 1
columns ayaw, apitch, and aroll should be omitted from the input table, 
d135 2
a136 2
This has no effect unless used 
in conjunction with 
d138 1
a138 1
or 
d144 1
a144 1
Suppress time column. No time column is read or written. 
d153 1
a153 1
1. Suppose that you want the virtual camera to pan in a circle around a 
d163 1
a163 1
(using 
d166 1
a166 1
input table. 
d169 1
a169 1
the camera, suitable to use as input to 
d175 1
a175 1
know when it crosses a given oblique plane. You can use the 
d202 1
a202 1
position a camera so that the object is 10 
@


14.3.6.1
log
@merge changes from HEAD aka rel-7-6-4 to the rel-7-6-branch just in case someone peeks a gander or tries to continue/build the branch
@
text
@d15 2
a16 2
the position and orientation of a (possibly moving) frame of reference and
the position
d18 1
a18 1
and
d40 2
a41 2
Output the relative position and orientation.
If this option is specified,
d44 1
a44 1
reference and the object as input,
d60 1
a60 1
If this option is specified,
d63 1
a63 1
object as input,
d79 1
a79 1
command-line arguments will be used instead.
d81 1
a81 1
in conjunction with
d88 1
a88 1
columns fyaw, fpitch, and froll should be omitted from the input table,
d91 1
a91 1
in conjunction with
d98 1
a98 1
of reference. The
d102 1
a102 1
in conjunction with
d108 1
a108 1
Specify a constant orientation of the object relative to the
d110 1
a110 1
columns ryaw,  rpitch, and rroll should be omitted from the input table,
d113 1
a113 1
in conjunction with
d119 1
a119 1
Specify a constant absolute position for the object. The
d122 2
a123 2
This has no effect unless used
in conjunction with
d132 1
a132 1
columns ayaw, apitch, and aroll should be omitted from the input table,
d135 2
a136 2
This has no effect unless used
in conjunction with
d138 1
a138 1
or
d144 1
a144 1
Suppress time column. No time column is read or written.
d153 1
a153 1
1. Suppose that you want the virtual camera to pan in a circle around a
d163 1
a163 1
(using
d166 1
a166 1
input table.
d169 1
a169 1
the camera, suitable to use as input to
d175 1
a175 1
know when it crosses a given oblique plane. You can use the
d202 1
a202 1
position a camera so that the object is 10
@


14.2
log
@remove the quirky copyright section in the documentation talking about the application's copyright (which is incorrect now regardless) from the simple man2htmlish pages
@
text
@d216 1
a216 1
mail to &lt;CAD@@BRL.MIL&gt;.
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@a213 3
<h1>COPYRIGHT</h1>
	This software is Copyright (C) 1993-2004 by the United States Army
in all countries except the USA.  All rights reserved.
@


1.1
log
@moved from html/ to doc/html/
@
text
@@

