head	14.4;
access;
symbols
	rel-7-10-4:14.4
	STABLE:14.4.0.4
	stable-branch:14.2
	rel-7-10-2:14.4
	rel-7-10-0:14.4
	rel-7-8-4:14.4
	rel-7-8-2:14.4
	rel-7-8-0:14.4
	trimnurbs-branch:14.4.0.2
	help:14.4
	temp_tag:14.4
	bobWinPort-20051223-freeze:14.3
	postmerge-20051223-bobWinPort:14.4
	premerge-20051223-bobWinPort:14.4
	rel-7-6-6:14.4
	rel-7-6-4:14.4
	rel-7-6-2:14.3
	rel-7-6-branch:14.3.0.6
	rel-7-6-0:14.3
	rel-7-4-2:14.3
	rel-7-4-branch:14.3.0.4
	bobWinPort:14.3.0.2
	rel-7-4-0:14.3
	rel-7-2-6:14.3
	rel-7-2-4:14.3
	rel-7-2-2:14.2
	rel-7-2-0:14.2
	rel-7-0-4:14.2
	rel-7-0-2:14.2
	rel-7-0-1:14.2
	opensource-post:14.2
	opensource-pre:1.1
	rel-7-0-branch:1.1.0.2
	rel-7-0:1.1;
locks; strict;
comment	@# @;


14.4
date	2005.10.23.04.44.26;	author brlcad;	state Exp;
branches;
next	14.3;

14.3
date	2005.05.02.01.59.34;	author brlcad;	state Exp;
branches
	14.3.6.1;
next	14.2;

14.2
date	2004.12.21.07.53.42;	author morrison;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.09;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.19.18.35.17;	author morrison;	state Exp;
branches;
next	;

14.3.6.1
date	2005.11.13.13.46.09;	author brlcad;	state Exp;
branches;
next	;


desc
@@


14.4
log
@trailing ws
@
text
@<html><head>
<title>BRL-CAD anim_sort Man Page</title>
</head><body>
<h1>NAME</h1>
anim_sort - combine concatenated animation scripts into one script
<h1>SYNOPSIS</h1>
<b>anim_sort </b>
<b>[-ic] </b>
<b>&lt; mixed.script </b>
<b>&gt; ordered.script</b>
<h1>DESCRIPTION</h1>
Note:
<i>anim_sort </i>
has been superceded in BRL-CAD release 5.0 by
<i>scriptsort</i>,
which sorts scripts much faster.
<p>
<i>Anim_sort</i>
allows the user to combine several animation scripts
into a single script suitable for input to
<i>rt</i>.
A convenient way to
prepare a complicated animation script is to develop each part
separately and then use
<i>anim_sort </i>
to combine the various parts. For
example, suppose that
<b>view.script </b>
is an animation script controlling the
movement of the virtual camera and the lighting,
<b>mill.script </b>
rotates
the blades of a windmill, and
<b>quixote.script </b>
controlls the movement of a
knight. These scripts should first be concatenated together:
<p>
cat view.script mill.script quixote.script &gt; mixed.script
<p>
Calling
<i>anim_sort </i>
with
<b>mixed.script </b>
on standard input would
reorder the commands in
<b>mixed.script </b>
to make a viable script on standard
output.
<p>
Each of the input files to be concatenated is expected to be a
viable
<i>rt </i>
animation script, containing a series of frames of the
following form:
<p>
<pre>
start framenumber;
any number of semi-colon terminated commands for rt;
end;
any number of post-raytracing commands
</pre>
<p>
<i>Anim_sort</i>
reads the framenumber of the first start command, and uses
this to as the first frame number of the output file. The commands of
all frames in
<b>mixed.script </b>
with that framenumber are combined in the
ouput frame. The post-raytracing commands following all frames with that
framenumber are placed after the
<b>end; </b>
command of the output frame. This process is continued for each
successive integer,
until anim_sort reaches a framenumber which is not included in any of
the original scripts.
<p>
For example, if
<b>view.script </b>
contained frames numbered from 5 to
20,
<b>mill.script </b>
contained frames from 0 to 10, and
<b>quixote.script</b>
contained frames numbered from 15 to 25, the output script would start
at frame 5 (since
<b>view.script </b>
comes first in
<b>mixed.script</b>
) and end with
frame 25 (since frames 5 through 25 can be found somewhere in
<b>mixed.script</b>
). If the user wanted to include frames 0 through 4, which
are found only in
<b>mill.script</b>
, then
<b>mill.script </b>
should be concatenated
onto the beginning of
<b>mixed.script </b>
instead of the middle. In the
majority of animation situations, all of the input scripts would have
identical frame numbers anyway.
<p>
The first input script may also contain some lines preceeding
the first start command, which are copied to the beginning of the output
script. This is useful for commands such as 'viewsize', which are often
specified before the sequence of animations begins.
<p>
<h1>OPTIONS</h1>
<dl><dt>
<b>-i</b>

<dd>
Incremental mode. The frames of the output script are printed in a scrambled
order which incrementally increases the time resolution of the animation.
For example, the frames of an eight-frame script would be computed in the
order: 0 4 2 6 1 3 5 7.

<dt>
<b>-c</b>

<dd>
For most animation purposes, it is desirable to have a
<b>clean</b>
command immediately following the
<b>start </b>
command of each frame. The
default behavior of
<i>anim_sort </i>
is to include one
<b>clean </b>
command following the
<b>start </b>
command of each frame.
<b>clean </b>
commands from the input files are ignored. If the
<b>-c </b>
flag is activated, then no clean
commands are printed.
</dl>
<h1>SEE ALSO</h1>
rt(1), tabsub(1), anim_script(1)
<h1>AUTHOR</h1>
Carl J. Nuzman
<h1>"BUG REPORTS"</h1>
Reports of bugs or problems should be submitted via electronic
mail to &lt;devs@@brlcad.org&gt;.
</body></html>
@


14.3
log
@replace the old cad e-mail with devs at brlcad dot org since the dot mil forward is no more.
@
text
@d12 1
a12 1
Note: 
d14 1
a14 1
has been superceded in BRL-CAD release 5.0 by 
d20 1
a20 1
into a single script suitable for input to 
d24 1
a24 1
separately and then use 
d27 1
a27 1
example, suppose that 
d30 1
a30 1
movement of the virtual camera and the lighting, 
d33 1
a33 1
the blades of a windmill, and 
d40 1
a40 1
Calling 
d42 1
a42 1
with 
d45 1
a45 1
reorder the commands in 
d51 1
a51 1
viable 
d66 1
a66 1
all frames in 
d70 1
a70 1
framenumber are placed after the 
d72 1
a72 1
command of the output frame. This process is continued for each 
d75 1
a75 1
the original scripts. 	
d77 1
a77 1
For example, if 
d80 1
a80 1
20, 
d82 1
a82 1
contained frames from 0 to 10, and 
d85 1
a85 1
at frame 5 (since 
d87 1
a87 1
comes first in 
d93 1
a93 1
are found only in 
d95 1
a95 1
, then 
d98 1
a98 1
onto the beginning of 
d116 1
a116 1
For example, the frames of an eight-frame script would be computed in the 
d123 1
a123 1
For most animation purposes, it is desirable to have a 
d125 1
a125 1
command immediately following the 
d128 1
a128 1
default behavior of 
d130 1
a130 1
is to include one 
d132 1
a132 1
command following the 
d134 1
a134 1
command of each frame. 
d136 1
a136 1
commands from the input files are ignored. If the 
@


14.3.6.1
log
@merge changes from HEAD aka rel-7-6-4 to the rel-7-6-branch just in case someone peeks a gander or tries to continue/build the branch
@
text
@d12 1
a12 1
Note:
d14 1
a14 1
has been superceded in BRL-CAD release 5.0 by
d20 1
a20 1
into a single script suitable for input to
d24 1
a24 1
separately and then use
d27 1
a27 1
example, suppose that
d30 1
a30 1
movement of the virtual camera and the lighting,
d33 1
a33 1
the blades of a windmill, and
d40 1
a40 1
Calling
d42 1
a42 1
with
d45 1
a45 1
reorder the commands in
d51 1
a51 1
viable
d66 1
a66 1
all frames in
d70 1
a70 1
framenumber are placed after the
d72 1
a72 1
command of the output frame. This process is continued for each
d75 1
a75 1
the original scripts.
d77 1
a77 1
For example, if
d80 1
a80 1
20,
d82 1
a82 1
contained frames from 0 to 10, and
d85 1
a85 1
at frame 5 (since
d87 1
a87 1
comes first in
d93 1
a93 1
are found only in
d95 1
a95 1
, then
d98 1
a98 1
onto the beginning of
d116 1
a116 1
For example, the frames of an eight-frame script would be computed in the
d123 1
a123 1
For most animation purposes, it is desirable to have a
d125 1
a125 1
command immediately following the
d128 1
a128 1
default behavior of
d130 1
a130 1
is to include one
d132 1
a132 1
command following the
d134 1
a134 1
command of each frame.
d136 1
a136 1
commands from the input files are ignored. If the
@


14.2
log
@remove the quirky copyright section in the documentation talking about the application's copyright (which is incorrect now regardless) from the simple man2htmlish pages
@
text
@d147 1
a147 1
mail to &lt;CAD@@BRL.MIL&gt;.
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@a144 3
<h1>COPYRIGHT</h1>
	This software is Copyright (C) 1993-2004 by the United States Army
in all countries except the USA.  All rights reserved.
@


1.1
log
@moved from html/ to doc/html/
@
text
@@

