head	11.8;
access;
symbols
	ansi-20040405-merged:11.6
	postmerge-20040405-ansi:11.6
	premerge-20040404-ansi:11.6
	postmerge-autoconf:11.6
	autoconf-freeze:11.6
	premerge-autoconf:11.6
	ansi-20040316-freeze:11.6
	postmerge-20040315-windows:11.6
	premerge-20040315-windows:11.6
	windows-20040315-freeze:11.6
	autoconf-20031203:11.6
	autoconf-20031202:11.6
	autoconf-branch:11.6.0.14
	phong-branch:11.6.0.12
	photonmap-branch:11.6.0.10
	rel-6-1-DP:11.6
	windows-branch:11.6.0.8
	rel-6-0-2:11.6
	ansi-branch:11.6.0.6
	rel-6-0-1-branch:11.6.0.4
	hartley-6-0-post:11.6
	hartley-6-0-pre:11.6
	rel-6-0-1:11.6
	rel-6-0:11.6
	rel-5-4:11.6
	offsite-5-3-pre:11.6
	rel-5-3:11.6
	rel-5-2:11.6
	rel-5-1-branch:11.6.0.2
	rel-5-1:11.6
	rel-5-0:11.6
	rel-5-0-beta:11.6
	rel-4-5:11.6
	ctj-4-5-post:11.5
	ctj-4-5-pre:11.5
	rel-4-4:11.1
	rel-4-0:8.15
	rel-3-5:8.2
	rel-3-0:1.9;
locks; strict;


11.8
date	2004.05.19.16.40.07;	author morrison;	state dead;
branches;
next	11.7;

11.7
date	2004.05.18.19.32.27;	author morrison;	state Exp;
branches;
next	11.6;

11.6
date	97.09.22.05.15.28;	author butler;	state Exp;
branches;
next	11.5;

11.5
date	96.08.01.04.26.18;	author butler;	state Exp;
branches;
next	11.4;

11.4
date	95.07.18.07.28.07;	author butler;	state Exp;
branches;
next	11.3;

11.3
date	95.07.18.06.47.56;	author butler;	state Exp;
branches;
next	11.2;

11.2
date	95.01.05.08.05.48;	author mike;	state Exp;
branches;
next	11.1;

11.1
date	95.01.05.04.09.01;	author mike;	state Rel4_4;
branches;
next	8.20;

8.20
date	95.01.05.03.36.33;	author mike;	state Exp;
branches;
next	8.19;

8.19
date	95.01.05.02.05.20;	author mike;	state Exp;
branches;
next	8.18;

8.18
date	95.01.04.08.52.57;	author mike;	state Exp;
branches;
next	8.17;

8.17
date	95.01.04.07.31.08;	author mike;	state Exp;
branches;
next	8.16;

8.16
date	92.11.10.17.25.16;	author mike;	state Exp;
branches;
next	8.15;

8.15
date	91.10.12.06.24.37;	author mike;	state Exp;
branches;
next	8.14;

8.14
date	91.10.12.05.39.20;	author mike;	state Exp;
branches;
next	8.13;

8.13
date	91.10.12.05.28.51;	author mike;	state Exp;
branches;
next	8.12;

8.12
date	91.10.12.05.11.05;	author mike;	state Exp;
branches;
next	8.11;

8.11
date	91.10.12.04.00.50;	author mike;	state Exp;
branches;
next	8.10;

8.10
date	91.10.12.03.41.10;	author mike;	state Exp;
branches;
next	8.9;

8.9
date	91.10.12.03.30.20;	author mike;	state Exp;
branches;
next	8.8;

8.8
date	91.10.12.02.59.16;	author mike;	state Exp;
branches;
next	8.7;

8.7
date	91.10.11.13.02.33;	author butler;	state Exp;
branches;
next	8.6;

8.6
date	91.10.11.12.30.36;	author butler;	state Exp;
branches;
next	8.5;

8.5
date	91.09.13.21.04.17;	author butler;	state Exp;
branches;
next	8.4;

8.4
date	89.05.30.15.22.29;	author stay;	state Exp;
branches;
next	8.3;

8.3
date	89.05.30.12.00.36;	author stay;	state Exp;
branches;
next	8.2;

8.2
date	89.05.07.22.25.01;	author mike;	state Exp;
branches;
next	8.1;

8.1
date	88.10.06.07.09.14;	author mike;	state Rel3_0;
branches;
next	1.9;

1.9
date	88.10.05.00.10.49;	author mike;	state Exp;
branches;
next	1.8;

1.8
date	88.10.04.08.26.23;	author mike;	state Exp;
branches;
next	1.7;

1.7
date	88.10.01.06.29.25;	author mike;	state Exp;
branches;
next	1.6;

1.6
date	88.09.27.17.00.49;	author stay;	state Exp;
branches;
next	1.5;

1.5
date	88.09.08.02.34.42;	author kermit;	state Exp;
branches;
next	1.4;

1.4
date	88.09.06.08.46.43;	author kermit;	state Exp;
branches;
next	1.3;

1.3
date	88.09.05.04.57.15;	author kermit;	state Exp;
branches;
next	1.2;

1.2
date	88.09.05.01.06.26;	author mike;	state Exp;
branches;
next	1.1;

1.1
date	88.07.18.15.41.45;	author mike;	state Exp;
branches;
next	;


desc
@A document describing the RT Figure of Merit
@


11.8
log
@renamed .doc files to .tr since they are [tng]roff files
@
text
@.\" $Header: /cvs/brlcad/doc/benchmark.doc,v 11.7 2004/05/18 19:32:27 morrison Exp $
.\" groff -t -ms -X benchmark.doc
.\" groff -t -ms benchmark.doc | print-postscript
.\"
.\"  sort '-t       ' +7nr -8
.de BR
\fB\\$1\fR\\$2
..
.TL
The BRL-CAD Benchmark Suite
.AU
Michael John Muuss
.AU
Charles M. Kennedy
.AU
Lee A. Butler
.AI
The U.S. Army Research Laboratory
.PP
This document describes the BRL-CAD Benchmark Suite Methodology, and
the Ray-Tracing Figure of Merit (RTFM) used to judge the computational
performance of different computer systems.
.PP
The core of the test is the \fBrt\fR ray-tracing program.  The results
for each processor are determined by running a benchmark test of the
RT ray-tracing program on each of the sample databases provided.  The
\fBrt\fR program requires a binary database for input ("db/xxx.g"),
and produces a binary image as output ("bench/xxx.pix"), along with a
log file ("bench/xxx.log").  Each run will produce a 512x512x24 bit
color shaded image in a "bench/xxx.pix" file, and a run log in
"bench/xxx.log".  Reference copies of the images are provided as
"pix/xxx.pix" and "pix/xxx.log".  The sample databases provided are
processed in order of increasing difficulty, and each produces a
colorful image.  In each picture there are two light sources; the
primary source is located near the center of the model (the white
ball), and the secondary light source is located at the "eye"
position.
.NH 1
The Benchmark Models
.LP
moss.g -- This is a simple model, containing a yellow torus, a green
ellipsoid, a bluish cube, a pink truncated (distorted) cone, all
sitting on a blue plate.  Note the shadowing, and "specular splash".
.sp
world.g -- The same model as moss.g, but with various rendering
features enabled.  The model is enclosed in a hollow cloud sphere.
The plate is a mirror, the egg is crystal, the box has a debugging
texture map applied.
.sp
star.g -- A familiar sight to Star Trek fans; a low-detail exterior of
the ship "Enterprise".  The hull is white, with some other structures
in other colors.  The small red object in the foreground is the
shuttlecraft Galileo, to scale.
.sp
bldg391.g -- An exploded view of a two-story imaginary computer site,
including various walls, red stairways, green disk drives, etc.  The
lower floor is a mirror, the upper floor is glass.
.sp
m35.g -- A truck.
.sp
sphflake.g -- A sphereflake.
.NH 1
MACHINE INDEPENDENCE
.PP
To make the benchmark distribution machine independent, the databases
are provided in an ASCII format in the "db" directory, and
ascii-to-binary converters are provided in the "conv" directory.  The
setup command "\fBcake benchmark\fR" (see the document \fIInstalling
the BRL-CAD Package\fR) will automatically compile and run the
converters.
.PP
If you are running this benchmark on a non-UNIX machine that has
difficulty writing binary streams, change the "-o file.pix" flag to
"-O file.a_pix" and RT will write an ASCII form directly.  For more
discussion, consult the doc/pix.5 and conv/asc2pix.1 manual pages.
.PP
The reference images are distributed in binary BRL-CAD
.BR pix (5)
format.  Earlier releases distributed the reference images in the
portable ASCII form, and then converted them to the binary form.  This
consumed a significant amount of extra storage on UNIX machines, so
this practice was discontinued.  It is assumed that anyone attempting
to benchmark a system that can not read pure binary files will at
least have access to a UNIX system.  That UNIX system can be used to
convert the reference images to the portable ASCII form with the
.BR pix2asc (1)
tool, and then those images may be sent to the machine under test.
.PP
Information about modifying the benchmark to run on a particular
system may be found in the document \fIInstalling the BRL-CAD
Package\fR.  For a detailed explanation of various hardware specific
modifications necessary to take advantage of parallel processing, see
the document \fIWorkstations, Networking, Distributed Graphics, and
Parallel Processing\fR.  Implementations for several different types
of hardware in use at ARL are included.
.PP
If you encounter difficulty with running the benchmark, you might wish
to build the full BRL-CAD package, to take advantage of the image
tools in determining the nature of the problem.  For example, one
system suffered from a compiler bug that made TGC solids vanish, while
another system had difficulties with the light visibility
calculations.
.NH 1
OBTAINING CORRECT RESULTS
.PP
The benchmark timings are not considered valid unless the correct
results are given.  Make sure that the answers match the reference
files to within plus-or-minus one in each color (see pixdiff(1)).
Slight variations in the calculated pixels are generally attributable
to variations in floating point precision.  You may wish to compare
the execution times and log file remarks from your tests (in the
"bench/xxx.log" files) with the VAX-11/780 (with hardware FPA) times
which are given in the "pix/xxx.log" files.  The log file for sphflake
has yet to be run on the same system, causing weighted results.  It's
still useful and informative, however, for deriving performance
statistics.  The reference images are also located in the "pix/"
directory.
.PP
For example, if you are running the benchmark on a Cray XMP, the
world.pix and bldg391.pix images will have a single byte in the blue
channel off by 1, out in the cloud background.  This is not to be
considered an error.
.NH 1
BENCHMARK IMAGE DISPLAY
.PP
If you have a suitable framebuffer, you may wish to display the images
generated by the benchmark, and compare them to the reference images.
This section assumes that you have successfully compiled the full set
of BRL-CAD software, not just the benchmark portion.  Programs for
dealing with images are in the "util" directory.  To display a
\fBpix\fR(5) file on a framebuffer, set environment variable FB_FILE
(see \fBbrlcad\fR(1) for details), and run \fBpix-fb\fR.  Note that by
leaving FB_FILE unset, your default display will be used.
.sp
.nf
.ft B
	cd bench
	pix-fb moss.pix
.ft R
.fi
.sp
If the images computed on your machine do not match the reference
images, the program "util/pixdiff" will compute a pix file that will
highlight the differences for you, and report a summary of bytes
equal, off-by-1, and off-by-many, e.g.,
.sp
.ft B
	pixdiff moss.pix ../pix/moss.pix \(or pix-fb
.ft R
.fi
.sp
For a display of the relative magnitude of the differences at each
pixel, use "util/bwdiff" instead, e.g.,
.sp
.nf
.ft B
	bwdiff moss.pix ../pix/moss.pix \(or pix-fb
.ft R
or
.ft B
	bwdiff moss.pix ../pix/moss.pix \(or \\
	bwmod -s 128 -m 4 -a 128 \(or pix-fb
.ft R
.fi
.sp
and for statistics on the differences, use
.sp
.ft B
	bwdiff moss.pix ../pix/moss.pix \(or pixstat
.ft R
.ne 8i
.NH 1
THE COMPETITION
.PP
The full benchmark takes about 9 CPU hours on a VAX-11/780, so you
should scale your expectations accordingly.
.PP
Here is a sampling of some systems that have been tested, with as much
information about the configuration as could be obtained.  Some
systems have a great many options for small things that can affect
performance, such as memory interleaving.
.LP
.TS
center box;
l l.
System Name	Configuration
_	_
axposf	DEC Alpha 4000/710, 256M, OSF/1 V3.0 \(dg
ex-art	Pentium-P90, 16MB, 256K cache, BSD/OS 2.0, 
hawks	486DX/33, 24MB, 256K cache, BSD/OS 2.0
orac	486/100, 20MB, No cache, BSD/OS 2.0 (laptop)
pk	Cray C90, C916/161024, UNICOS 8.0.2.4
vapor	SGI, 18* 75 MHz R8000 IP21, 1024G RAM 8-way, Irix 6.0
vblt	66 MHz 486DX2/66, 16M RAM, Linux 1.1.73
vgr	DEC VAX-11/780 w/FPA, 64M RAM, 4.3 BSD
vision	Sun-3/280 w/68881 FPA, 16M RAM, SunOS 4.1.1
voyage	SGI, 4* 25 MHz R3000 IP7, 56M RAM, Irix 4.0.1
whiz	SGI Ingido**2, 100 MHz IP22, 96M RAM, Irix 5.2
waffle	SGI, 4* 25 MHz R3000 IP7, 64M RAM, Irix 4.0.5 (heavy network use)
warp	Sun SPARCstation 5, 32M RAM, SunOS 4.1.4
wax	SGI, 24* 150 MHz R4400 IP19, 1024G RAM 4-way, Irix 5.2
wilson	SGI, 8* 100 MHz R4400 IP19, 1024G RAM 8-way, Irix 5.2
wilted	Sun-4/25 ELC, 16M RAM, SunOS 4.1.1
wimp	33 MHz 386DX/33 w/387, 256k cache, 16M RAM, BSDI 2.0beta2
wimpy	Sun SS10BSX-GX, 2* 50 MHz SuperSPARC, 64M RAM, SunOS 5.4
wizard	SGI Ingido**2, 150 MHz IP22, 96M RAM, Irix 5.3
.TE
\(dg The Alpha was heavily loaded while the benchmark was being run.
DEC requires us to show the load average at the time:
.br
03:28  up 18 days, 10:59,  7 users,  load average: 2.00, 2.00, 2.08
.NH 1
BENCHMARK RESULTS
.PP
In the tradition of Dongarra, the Rays/sec figure is considered the
"RT Figure of Merit" (RTFM).  Note that the RTFM can only be compared
between different runs on the \fIsame\fR database; it is not
meaningful to compare RTFM numbers between different databases. The
Rays/sec number for a multi-processor machine is for "aggregate CPU
cluster seconds", rather than rays/total CPU seconds (which remains
fairly constant on good parallel machines). 
.PP
The statistics are recorded in an easily understood format, with all
results for a particular configuration listed on a single line.  The
numbers reported are the rays/sec (RTFM) figure.  Entries denoted with
a dagger ("\(dg") produced incorrect results.  Entries denoted with a
dash ("-") were not available and should be considered differently
than those entries with a dagger.  Generally the results are not
available because time constraints prevented running the complete set
of databases.
.fi
.br
.ne 8i
.NH 1
RELEASE 4.4 STATISTICS (4-Jan-1995)
.PP
There is very little difference in RTFM numbers between Release 4.0
and Release 4.4, so they can be usefully compared.  In some cases the
4.4 performance is slower due to the use of shared libraries.  For
example "vision" dropped from 1.33 to 1.22 due to the shared
libraries.  For most users reducing the disk consumption from 300
MBytes to 30 MBytes makes this a reasonable tradeoff.  However, for
the best performance, use non-shared libraries.
.LP
.TS H
expand box;
l | n n n n n | n | l.
H/W	Moss	World	Star	Bldg	M35	Mean	S/W Notes
_
.TH
vapor	810.91	1091.39	1012.63	1027.25	1092.85	1007	-P18 static
vapor	773.8	1038.7	979.49	970.91	1036.62	959.9	-P17
vapor	732.85	1021.69	968.93	922.62	1024.15	934.04	-P18 (SW lock)
wax	769.38	940.83	953.36	924.7	1050.14	927.68	-P24
vapor	730.17	994.97	934.43	917.1	987.83	912.9	-P16
wax	725.26	957.68	927.61	932.67	992.75	907.19	-P24
wax	756.95	915.96	940.43	903.45	966.09	896.57	-P23
vapor	686.8	939.63	897.72	884.39	927.16	867.14	-P15
wax	691.18	853.75	887.17	859.32	933.41	844.96	-P21
wax	724.73	683.08	890.87	900.82	939.31	827.76	-P22
vapor	645.32	881.18	843.23	801.41	859.26	806.08	-P14
wax	637.28	757.74	820.21	871.37	877.6	792.84	-P20
vapor	608.12	835.84	795.36	759.95	806.32	761.11	-P13
_
wax	606.98	784.3	754.46	799.95	794.52	748.04	-P19
wax	590.16	758.23	794.06	794.52	757.79	738.95	-P18
wax	579.29	722.35	787.55	720.26	754.65	712.82	-P17
vapor	571.14	783.72	740.47	697.24	746.72	707.85	-P12
wax	553.72	697.1	744.21	663.61	723.03	676.33	-P16
vapor	534.85	716.58	685.87	656.25	685.77	655.86	-P11
wax	519.01	655.57	690.95	651.9	663.92	636.27	-P15
wax	475.88	637.33	665.38	608.31	653.99	608.17	-P14
vapor	499.46	663.26	633.48	614.58	624.34	607.02	-P10
wax	449.16	591.54	616.21	590.59	614.25	572.35	-P13
vapor	463.3	598.34	575.07	555.62	560.89	550.64	-P9
wax	424.71	556.8	595.02	521.63	538.78	527.38	-P12
vapor	424.89	534.5	509.85	497.63	503.99	494.17	-P8
wax	391.66	490.63	545.28	488.57	508.96	485.02	-P11
wax	315.45	472.03	525.47	442.37	461.44	443.35	-P10
vapor	381.1	467.67	440.13	425.57	442.04	431.3	-P7
wax	309.35	426.37	386.11	417.85	434.96	394.92	-P9
vapor	336.55	392.2	390.72	373.92	380.03	374.68	-P6
_
wax	307.6	361.32	396.07	380.17	380.74	365.18	-P8
wax	245.87	332.33	362.5	338.62	331.39	322.14	-P7
vapor	288.45	327.78	328.76	314.54	320.16	315.93	-P5
wax	254.82	255.29	299.93	302.08	256.54	273.73	-P6
wilson	223.01	265.17	287.8	262.19	269.62	261.55	-P8
vapor	240.6	269.93	266.46	253.99	259.05	258	-P4
wax	215.96	231.65	221.78	248.63	221.45	227.89	-P5
wax	177.94	185.27	213.74	201.64	197.27	195.17	-P4
vapor	187.58	198.84	202.28	191.94	194.74	195.07	-P3
wax	120.4	138.01	162.12	159.36	141.33	144.24	-P3
vapor	130.61	140.04	134.88	129.38	129.78	132.93	-P2
wax	100.83	102.09	111.12	87.26	98.62	99.98	-P2
wimpy	99.10	95.78	92.15	97.51	96.65	96.23	-P2
wimpy	82.14	93.60	92.17	103.59	82.22	90.74	-P2
_
axposf	81.05	82.27	86.72	84.36	79.28	82.73	-P1
vapor	79.68	77.7	73.89	71.38	70.06	74.54	-P1 static
vapor	69.34	70.14	67.52	65.55	66.69	67.84	-P1 shared
wizard	63.8	55.86	68.97	73.21	61.56	64.68
wax	62.28	58.58	65.24	67.39	59.31	62.56	-P1
wax	59.08	56.06	61.45	64.4	56.11	59.42	-P1
voyage	52.78	55.44	58.19	58.03	52.41	55.37	-P4
pk	64.89	55.71	48.01	49.50	53.43	54.30	-P1
waffle	38.56	47.63	62.36	59.62	51.20	51.87	-P4
wimpy	50.17	48.82	50.46	55.12	49.27	50.76	-P1
wimpy	47.80	43.23	51.37	54.10	46.23	48.54	-P1
weber	46.53	43.45	50.88	50.33	46.03	47.44	-P1
wilson	41.16	39.54	45.98	42.93	34.82	40.88	-P1
whiz	36.25	31.08	37.21	39.62	36.98	36.22
warp	19.88	21.33	23.71	24.19	22.60	22.34
ex-art	16.89	18.54	22.98	26.97	25.57	22.19
orac	7.57	8.23	10.72	12.43	11.30	10.05	
wilted	9.58	9.53	10.66	10.53	9.87	10.03
hawks	3.64	4.17	5.71	6.90	6.23	5.33	
vblt	4.85	4.89	5.29	5.24	4.90	5.03	
wimp	1.16	1.34	1.82	2.25	2.06	1.72	
vision	1.07	1.23	1.23	1.31	1.26	1.22	-P1
vgr	1.0	1.0	1.0	1.0	1.0	1.0
.TE
.br
.ne 8i
.NH 1
THE OLD COMPETITION
.PP
These are the definitions for systems measured in previous tests.
.LP
.TS
center box;
l l.
System Name	Configuration
_	_
alliant	Alliant FX/8 (8 CEs, 9 IPs, 64 Mbytes), Concentrix 3.0
amber	HP 9000/720, 32 MB memory
amsaa-seer	Gould PN 9080, w/MACCs, UTX 2.0, 4x4Mb mem boards
ardec-3	Pyramid 90Mx, Dual-CPU, OSx 2.5, 16 Mbytes
bob	Cray-2, SN 2009, 4.3ns clock
cor3	Pyramid MIS-12T/3, OSx 192
patton	Cray X-MP/48, SN213, UNICOS 5.0, 8.5ns clock
uy1	Cray Y-MP8/2128, UNICOS 5.1.11
shpcrc2	IBM RS/6000, AIX 3.1
slc1	Macintosh II, 68020, 68881, AUX 1.1, GCC 1.39
spark	Gould PN 9050, no MACC, UTX 2.0, 2x4Mb mem boards
sws2	Convex C120, 16 Mbytes, Convex Unix 6.2.32.2
vector	Alliant FX/80 (8 ACEs, 6 IPs, 32 Mbytes), Concentrix
venom	Alliant FX/8 (8 CEs, 6 IPs, 32 Mbytes), Concentrix
vgr	VAX 780, FPA, 4.3 BSD
virus	Sun-3/50, 15 Mhz clock, 12 Mhz 68881, Sun UNIX 3.2
vista	SGI 3030, w/FP chip, UNIX release 3.5
vmb	Gould PN 9080, no MACCs, UTX 2.0, 12x1Mb mem boards
vhs	Silicon Graphics 4D/60T, 12.5 Mhz clock 16 MB memory
ovoyage	Silicon Graphics 4D/120, 16.7 Mhz clock 16 MB memory 
taylor	Silicon Graphics 4D/220, 25 Mhz clock 16 MB memory
crim	Silicon Graphics 4DCRIMS 50Mhz clock 128 MB memory
wiltse	Silicon Graphics 4D R4000 50Mhz clock
c1east	T{
Convex C1 XP (2 IOPs, 4 Multibus, 64 Mbytes),
S/W 6.0.1.12
T}
elxsi-gnu	Elxsi 6420, BSD 4.2 16 MB
elxsi-gnuy	Elxsi 6420, Sys Vr2, 16MB
elxsi-m1	Elxsi 6410, BSD 4.2 16 MB
hep	Denelcor HEP, 4 PEMs
indigo	SGI Iris 3030, FPA, GL2-W3.5
mseries	T{
MIPS Mseries, Release 0.6, UMIPS 2.1, 16 MB of R2350 RAM.
R2000 CPU rev 5.0, R2010 FP rev 2.0
T}
multiflow	Multiflow Trace 7/200 (PRELIMINARY)
nova	T{
Sun SPARCserver 490, 32 Mb, 33 MHz clock, 33 MHz TI 8847 FPU, SunOS 4.1.1B
T}
rh2	Tektronix, Motorola 88000
snm2	Cray 1-M, SN2, UNICOS 2.0
sws1	Convex C1, ConvexOS 9.1 48MB memory
tek4132	Tektronix 4132, 32082 fpp, UTek 2.3
utah-gr	VAX 785, FPA, 4.3 BSD
utah-cs	VAX 8600, FPA, 4.3 BSD
veto	Sun 4/260 32MB memory Sun UNIX 4.0.3
violet	VaxStationII GPX, Ultrix 1.2
vision	Sun-3/280, 16 MB memory
vortac	Sun-3/160, 16.67 Mhz clock, 12 Mhz 68881, Sun 3.2
walrus	Silicon Graphics 4D/280 25 Mhz clock 64 MB memory Irix 3.3.1
whiz	Silicon Graphics 4D/240 25 Mhz clock 56 MB memory Irix 3.3.1
whisper	Sun SPARCStation 1+
wilted	Sun SPARCstation ELC , Diskless, 12MB memory Sun UNIX 4.1.1
worm	Silicon Graphics 4D/280 25 Mhz clock 64 MB memory Irix 3.3.1
.TE
.br
.ne 8i
.NH 1
OLD BENCHMARK RESULTS
.PP
These are the results of previous benchmarks.
.NH 1
RELEASE 1.20 STATISTICS (12-Feb-1987)
.LP
.TS H
expand box;
l l | n n n n | n | l.
A/*	H/W	Moss	World	Star	Bldg	Mean	S/W Notes
_
.TH
Rays	tek4132	80.5	44.0	33.9	31.4	?	UTek 2.3
*vgr	tek4132	0.72	0.69	0.62	0.62	?
_
Rays	violet	107.7	57.3	44.7	44.1	?	Ultrix 1.2
*vgr	violet	0.96	0.90	0.81	0.87	?
_
Rays	violet	119.0	63.0	50.0	46.3	?	Ultrix 1.2,
*vgr	violet	1.06	0.99	0.91	0.91	?	w/fast_sqrt
_
Rays	vgr	112.1	63.6	55.0	50.7	?	BSD 4.3
*vgr	vgr	1.0	1.0	1.0	1.0	1.0
_
Rays	indigo	115.9	85.3	\(dg	101.8	?	GL2-W3.5
*vgr	indigo	1.03	1.34	\(dg	2.01	?
_
Rays	vista	116.4	86.0	\(dg	102.3	?	SGI UNIX 3.5
*vgr	vista	1.04	1.35	\(dg	2.02	?
_
Rays	virus	127.3	69.9	57.0	52.4	?	Sun UNIX 3.2
*vgr	virus	1.14	1.10	1.04	1.03	?
_
Rays	vortac	148.2	81.0	65.8	60.7	?	Sun UNIX 3.2
*vgr	vortac	1.32	1.27	1.20	1.20	?
_
Rays	utah-gr	191.8	105.8	89.9	86.5	?	4.3 BSD
*vgr	utah-gr	1.71	1.66	1.64	1.71	?
_
Rays	ardec-3	-	68.4	57.2	-	?	OSx 2.5
*vgr	ardec-3	-	1.08	1.04	-	?
_
Rays	elxsim1	380.5	232.2	204.8	189.3	?	BSD 4.2
*vgr	elxsim1	3.39	3.65	3.72	3.73	?
_
Rays	spark	413.4	232.0	213.8	211.9	?	UTX 2.0
*vgr	spark	3.69	3.65	3.89	4.18	?
_
Rays	vmb	413.9	233.4	210.6	212.6	?	UTX 2.0
*vgr	vmb	3.69	3.67	3.83	4.19	?
_
Rays	c1east	454.8	252.4	205.6	192.3	?	Convex UNIX 6.0.1.12,
*vgr	c1east	4.06	3.97	3.74	3.80	?	vanilla cc
_
Rays	seer	460.7	263.2	246.8	241.0	?	UTX 2.0
*vgr	seer	4.11	4.14	4.49	4.75	?
_
Rays	venom	492.9	228.0	180.0	157.1	?	Concentrix 2.0
*vgr	venom	4.40	3.58	3.27	3.10	?
_
Rays	elxgnu	520.6	315.4	264.4	242.0	?	BSD 4.2
*vgr	elxgnu	4.64	4.96	4.81	4.77	?
_
Rays	utah-cs	521.1	292.1	237.4	216.2	?	BSD 4.3
*vgr	utah-cs	4.64	4.59	4.32	4.27	?
_
Rays	c1east	521.6	285.3	230.5	215.1	?	Convex UNIX 6.0.1.12,
*vgr	c1east	4.66	4.49	4.20	4.24	?	vc -O1 (scalar)
_
Rays	c1east	527.7	287.4	228.7	210.0	?	Convex UNIX 6.0.1.12,
*vgr	c1east	4.71	4.52	4.16	4.14	?	vc -O2 (vector)
_
Rays	elxgnuy	644.7	349.3	264.6	242.1	?	System Vr2
*vgr	elxgnuy	5.75	5.49	4.81	4.77	?
_
Rays	mflow	845.2	439.5	313.1	338.9	?	(preliminary)
*vgr	mflow	7.54	6.91	5.69	6.68	?
_
Rays	venom	904.9	424.6	349.3	312.6	?	Concentrix 2.0,
*vgr	venom	8.07	6.68	6.35	6.17	?	2 CEs, no vectors
_
Rays	venom	1375.5	650.0	523.4	459.9	?	Concentrix 2.0,
*vgr	venom	12.27	10.22	9.52	9.07	?	3 CEs, no vectors
_
Rays	venom	1813.5	845.5	686.0	600.7	?	Concentrix 2.0,
*vgr	venom	16.17	13.29	12.47	11.85	?	4 CEs, no vectors
_
Rays	venom	2364.1	1104.4	870.2	775.9	?	Concentrix 2.0,
*vgr	venom	21.08	17.36	15.82	15.3	?	5 CEs, no vectors
_
Rays	snm2	2492.9	-	-	-	?	Unicos 2.0,
*vgr	snm2	22.24	-	-	-	?	no vectors, no optim
_
Rays	hep	2502.0	-	-	-	?	1 PEM, npsw=10
*vgr	hep	22.32	-	-	-	?
_
Rays	venom	2811.4	1319.0	1051.6	918.0	?	Concentrix 2.0,
*vgr	venom	25.08	20.74	19.12	18.1	?	6 CEs, no vectors
_
Rays	venom	3248.8	1533.0	1232.3	1065.9	?	Concentrix 2.0,
*vgr	venom	28.98	24.10	22.41	21.02	?	7 CEs, no vectors
_
Rays	patton	3453.3	1514.3	1271.2	1027.3	?	COS V115BF2
*vgr	patton	30.81	23.81	23.11	20.26	?	1 CPU, no vectors
_
Rays	venom	3677.3	1724.2	1375.4	1208.4	?	Concentrix 2.0,
*vgr	venom	32.80	27.11	25.01	23.83	?	8 CEs, no vectors
_
Rays	alliant	3972.9	1840.0	1457.2	1266.4	?	Concentrix 3.0,
*vgr	alliant	35.44	28.93	26.49	24.98	?	8 CEs, no vectors
_
Rays	hep	4055.9	-	-	-	?	1 PEM, npsw=40
*vgr	hep	36.18	-	-	-	?
_
Rays	patton	6856.6	-	2522.2	-	?	COS V115BF2
*vgr	patton	61.16	-	45.86	-	?	2 CPUs, no vectors
_
Rays	patton	10205.1	-	3749.9	-	?	COS V115BF2
*vgr	patton	91.04	-	68.18	-	?	3 CPUs, no vectors
_
Rays	patton	13320.2	-	4955.6	-	?	COS V115BF2
*vgr	patton	118.82	-	90.10	-	?	4 CPUs, no vectors
.TE
.NH 1
RELEASE 2.3 STATISTICS (2-Nov-1987)
.LP
.TS H
expand box;
l l | n n n n | n | l.
A/*	H/W	Moss	World	Star	Bldg	Mean	S/W Notes
_
.TH
Rays	vgr	118.8	64.9	36.5	34.2	?	BSD 4.3
*vgr	vgr	1.0	1.0	1.0	1.0	1.0
_
Rays	vmb	375.4	218.6	186.4	196.2	?	UTX 2.0
*vgr	vmb	3.16	3.37	5.11	5.74	?
_
Rays	venom	468.2	221.7	166.1	144.9	?	Concentrix 3.0,
*vgr	venom	3.94	3.42	4.55	4.24	?	1 CE, no vectors
_
Rays	sws2	471.9	258.4	202.5	186.4	?	Convex Unix 6.2.32.2
*vgr	sws2	3.97	3.98	5.55	5.45	?	vanilla cc -O
_
Rays	vector	656.6	301.6	221.1	195.0	?	Concentrix 3.0,
*vgr	vector	5.53	4.65	6.06	5.70	?	1 ACE, no vectors
_
Rays	venom	827.3	424.0	327.1	287.9	?	Concentrix 3.0,
*vgr	venom	6.96	6.53	8.96	8.42	?	2 CEs, no vectors
_
Rays	vhs	958.3	545.6	447.0	414.1	?	-O2 optimization
*vgr	vhs	8.07	9.41	12.25	12.11	?
_
Rays	mseries	988.3	603.5	515.6	491.6	?
*vgr	mseries	8.32	9.29	14.13	14.37	?
_
Rays	vector	1280.9	596.8	436.7	389.2	?	Concentrix 3.0,
*vgr	vector	10.78	9.19	11.96	11.38	?	2 ACEs, no vectors
_
Rays	venom	1288.7	630.6	486.4	428.0	?	Concentrix 3.0,
*vgr	venom	10.85	9.72	13.33	12.51	?	3 CEs, no vectors
_
Rays	venom	1732.9	853.2	645.4	560.1	?	Concentrix 3.0,
*vgr	venom	14.59	13.15	17.68	16.38	?	4 CEs, no vectors
_
Rays	bob	1856.7	801.9	574.1	500.3	?	1 CPU, UNICOS 3.0,
*vgr	bob	15.63	12.36	15.73	15.62	?	CC -O
_
Rays	vector	1952.1	881.7	647.6	578.8	?	Concentrix 3.0,
*vgr	vector	16.43	13.58	17.74	16.92	?	3 ACEs, no vectors
_
Rays	venom	2158.4	1031.3	797.3	703.1	?	Concentrix 3.0,
*vgr	venom	18.17	15.89	21.84	20.56	?	5 CEs, no vectors
_
Rays	bob	2346.1	1127.4	751.0	677.2	?	1 CPU UNICOS 4.0
*vgr	bob	19.75	17.37	20.57	19.80	?	CC -O
_
Rays	bob	2423.5	1045.7	719.3	609.4	?	1 CPU, UNICOS 3.0,
*vgr	bob	20.40	16.11	19.71	17.82	?	VCC -O
_
Rays	vector	2546.2	1170.0	867.2	758.7	?	Concentrix 3.0,
*vgr	vector	21.43	18.03	23.76	22.18	?	4 ACEs, no vectors
_
Rays	venom	2633.7	1232.7	943.4	839.5	?	Concentrix 3.0,
*vgr	venom	22.17	18.99	25.85	24.55	?	6 CEs, no vectors
_
Rays	venom	2769.4	1393.3	1098.1	971.6	?	Concentrix 3.0,
*vgr	venom	23.31	21.47	30.08	28.41	?	7 CEs, no vectors
_
Rays	vector	3131.2	1453.8	1065.8	945.4	?	Concentrix 3.0,
*vgr	vector	26.36	22.40	29.20	27.64	?	5 ACEs, no vectors
_
Rays	venom	3368.7	1605.3	1231.3	1095.11	?	Concentrix 3.0,
*vgr	venom	28.36	24.73	33.73	32.02	?	8 CEs, no vectors
_
Rays	patton	3456.5	1691.8	1169.0	1043.6	?	1 CPU, UNICOS 2.1
*vgr	patton	29.10	26.07	32.03	30.51	?	no vectors
_
Rays	vector	3686.4	1688.6	1259.1	1129.0	?	Concentrix 3.0,
*vgr	vector	31.03	26.02	34.49	33.01	?	6 ACEs, no vectors
_
Rays	vector	4140.3	1953.0	1463.3	1299.7	?	Concentrix 3.0,
*vgr	vector	34.85	30.09	40.09	38.00	?	7 ACEs, no vectors
_
Rays	bob	4641.7	2243.4	1498.2	1358.1	?	2 CPUs, UNICOS 4.0
*vgr	bob	39.07	34.57	41.05	39.71	?	CC -O
_
Rays	vector	4712.2	2226.3	1649.0	1469.7	?	Concentrix 3.0,
*vgr	vector	39.66	34.30	45.18	42.97	?	8 ACEs, no vectors
_
Rays	bob	6884.9	3422.4	2267.7	2034.3	?	3 CPUs, UNICOS 4.0
*vgr	bob	57.95	52.73	62.13	59.48	?	CC -O
_
Rays	bob	9477.1	4484.7	2947.0	2832.9	?	4 CPUs, UNICOS 4.0
*vgr	bob	79.77	69.10	80.76	82.83	?	CC -O
.TE
.NH 1
RELEASE 3.0 STATISTICS (10-Oct-1988)
.LP
.TS H
expand box;
l l | n n n n | n | l.
A/*	H/W	Moss	World	Star	Bldg	Mean	S/W Notes
_
.TH
Abs	vgr	138.85	67.15	54.48	49.11	77.39	BSD 4.3
*vgr	vgr	1.00	1.00	1.00	1.00	1.00	w/FPA
_
Abs	sdm	163.56	76.98	59.79	52.51	88.21	SunOS 3.4
*vgr	sdm	1.17	1.14	1.09	1.06	1.11	w/68881
_
Abs	ardec-3	417.95	212.43	177.01	160.73	242.03	9820, OSx 4.1
*vgr	ardec-3	3.01	3.16	3.24	3.27	3.17	-P 1
_
Abs	spark	443.84	216.92	190.42	192.82	261.00	UTX 2.0
*vgr	spark	3.19	3.23	3.49	3.92	3.37	no MACC
_
Abs	vmb	482.28	226.33	191.52	193.04	273.29	UTX 2.0
*vgr	vmb	3.47	3.37	3.51	3.93	3.57	no MACC
_
Abs	sws2	546.23	255.45	183.10	163.85	287.15	Convex 6.2.32.2
*vgr	sws2	3.93	3.80	3.36	3.33	3.60	/bin/cc
_
Abs	sun4	767.7	373.7	315.5	284.5	435.6	Unix 3.5
*vgr	sun4	5.52	5.56	5.79	5.79	5.62	-O2 optim
_
Abs	video	940.33	469.30	399.21	367.64	544.12	UNIX 2.0
*vgr	video	6.77	6.98	7.32	7.48	7.13	-O2
_
Abs	vhs	954.81	471.90	409.78	392.55	557.26	IRix 3.1 
*vgr	vhs	6.87	7.02	7.52	7.99	7.45	Parallel, -P1
_
Abs	bob	2602.68	1078.25	712.39	642.42	1258.93	UNICOS 4.0, /bin/cc
*vgr	bob	21.22	18.17	15.39	13.98	17.19	-P 1
_
Abs	vector	3811.68	1469.80	1060.50	921.21	1815.79	Alliant 3.0
*vgr	vector	27.45	21.88	19.46	18.75	21.88	-P 5
_
Abs	vector	4515.09	1751.94	1266.49	1090.85	2156.09	Alliant 3.0
*vgr	vector	32.51	26.08	23.24	22.21	26.01	-P 6
_
Abs	patton	4550.67	1920.15	1298.61	1153.02	2230.61	UNICOS 3.0, /bin/cc
*vgr	patton	37.10	32.36	28.05	25.09	30.65	-P 1
_
Abs	vector	5130.74	2004.49	1438.97	1261.36	2458.89	Alliant 3.0
*vgr	vector	36.95	29.85	26.41	25.68	29.72	-P 7
_
Abs	bob	5186.24	2132.17	1409.10	1273.72	2500.30	UNICOS 4.0, /bin/cc
*vgr	bob	42.28	35.93	30.44	27.71	34.09	-P 2
_
Abs	vector	5813.76	2260.61	1638.31	1422.82	2783.87	Alliant 3.0
*vgr	vector	41.87	33.66	30.07	28.97	33.64	-P 8
_
Abs	amber	5901.29	2702.65	2096.35	1893.41	3148.42
*vgr	amber	42.50	40.24	38.47	38.55	39.94	-P 1
_
Abs	bob	7934.12	3392.98	2119.11	1929.74	3843.98	UNICOS 4.0, /bin/cc
*vgr	bob	64.69	57.18	45.78	41.99	52.41	-P 3
_
Abs	patton	8898.79	3782.55	2559.48	2292.13	4383.23	UNICOS 3.0, /bin/cc
*vgr	patton	72.56	63.75	55.30	49.88	60.37	-P 2
_
Abs	bob	10734.52	4436.61	2883.53	2617.47	5168.03	UNICOS 4.0, /bin/cc
*vgr	bob	87.52	74.77	62.30	56.96	70.38	-P 4
_
Abs	patton	13078.79	5631.95	3832.88	3416.90	6490.13	UNICOS 3.0, /bin/cc
*vgr	patton	106.64	94.92	82.81	74.36	89.68	-P 3
_
Abs	patton	17157.78	7437.55	5073.58	4531.25	8550.04	UNICOS 3.0, /bin/cc
*vgr	patton	139.90	125.35	109.62	98.61	118.37	-P 4
.TE
.bp
.NH 1
RELEASE 3.7 STATISTICS (19-June-1989)
.LP
.TS H
expand box;
l l | n n n n n | n | l.
A/*	H/W	Moss	World	Star	Bldg	M35	Mean	CPU
_
.TH
Abs	vgr	128.64	54.47	45.17	40.35	49.02	63.53	1
*vgr	vgr	1.00	1.00	1.00	1.00	1.00	1.00	
_
Abs	rh2	1704.56	791.31	599.81	549.74	589.01	846.88	1
*vgr	rh2	13.25	14.52	13.27	13.62	12.01	13.33
_
Abs	spark	435.69	208.59	176.76	177.69	174.67	234.68	1
*vgr	spark	3.53	3.61	4.17	4.29	3.40	3.80	
_
Abs	vhs	973.11	475.00	384.62	351.12	343.44	505.45	1
*vgr	vhs	7.56	8.72	8.51	8.70	7.00	8.09	
_
Abs	whisper	1118.35	561.81	473.52	439.76	509.26	620.54	1
*vgr	whisper	8.69	10.31	10.48	10.89	10.38	10.15	
_
Abs	nova	2024.80	976.01	790.17	732.35	?	1130.83	1
*vgr	nova	15.74	17.92	17.49	18.15	?	17.32
_
Abs	ovoyage	1969.57	1001.21	862.77	809.61	786.11	1085.85	2
*vgr	ovoyage	15.31	18.38	19.10	20.06	16.03	17.77	
_
Abs	taylor	2446.98	1076.24	912.03	837.56	799.58	1214.47	1
*vgr	taylor	19.02	19.75	20.19	20.75	16.31	19.20	
_
Abs	worm	2671.46	1218.49	966.76	859.61	932.18	1329.70	1
*vgr	worm	20.76	22.36	21.40	21.30	19.01	20.96
_
Abs	viper	3255.73	1368.96	1102.71	1039.37	1008.15	1554.98	8
*vgr	viper	25.30	25.13	24.41	25.75	20.56	24.23  
_
Abs	vector	3956.86	1625.23	1234.03	1137.36	1121.41	1814.97	8
*vgr	vector	30.75	29.83	27.31	28.18	22.87	27.78
_
Abs	taylor	4730.05	2225.56	1742.09	1590.57	1551.78	2368.01	2
*vgr	taylor	36.76	40.85	38.56	39.41	31.65	37.44	
_
Abs	worm	5017.85	2309.86	1894.92	1708.27	1791.11	2544.40	2
*vgr	worm	39.00	42.40	41.95	42.33	36.53	40.44
_
Abs	worm	7082.79	3359.99	2740.50	2502.03	2594.37	3655.93	3
*vgr	worm	55.05	61.68	60.67	62.00	52.92	58.46
_
Abs	worm	8664.78	4162.53	3323.46	3115.36	3378.75	4528.97	4
*vgr	worm	67.35	76.41	73.57	77.20	68.92	72.69
_
Abs	worm	10072.1	5016.57	4032.60	3855.90	4043.11	5404.06	5
*vgr	worm	78.29	92.09	89.27	95.56	82.47	87.53
_
Abs	worm	11678.4	5752.20	4758.80	4493.16	4700.52	6276.60	6
*vgr	worm	90.78	105.60	105.35	111.35	95.88	101.79
_
Abs	worm	12282.3	6021.31	5394.36	4908.98	5141.71	6749.72	7
*vgr	worm	95.47	110.54	119.42	121.65	104.89	110.39
_
Abs	worm	12158.3	5913.50	5784.67	5327.66	5505.71	6937.96	8
*vgr	worm	94.51	108.56	128.06	132.03	112.31	115.09
_
Abs	patton	16028.8	7289.7	4827.9	4392.5	20829.2	53368.1	4
*vgr	patton	124.6	133.83	106.88	108.85	106.23	116.07
.TE
.bp
.NH 1
RELEASE 4.0 STATISTICS
.LP
.TS H
expand box;
l l | n n n n n | n | l.
A/*	H/W	Moss	World	Star	Bldg	M35	Mean	CPU
_
.TH
Abs	vgr	137.82	67.23	56.39	53.91	69.25	76.92	1
*vgr	vgr	1.00	1.00	1.00	1.00	1.00	1.00
_
Abs	slc1	153.63	80.95	62.94	60.48	?	71.60	1
*vgr	slc1	1.12	1.20	1.12	1.13	?	.91
_
Abs	vision	165.85	89.78	76.44	75.78	96.18	100.80	1
*vgr	vision	1.21	1.33	1.36	1.42	1.36	1.33
_
Abs	vmb	381.92	195.11	178.78	186.62	214.31	231.34	1
*vgr	vmb	2.78	2.90	3.18	3.49	3.03	3.07
_
Abs	sws1	636.26	288.76	212.99	210.18	271.02	323.84	1
*vgr	sws1	4.64	4.30	3.79	3.93	3.83	4.09
_
Abs	veto	827.25	436.38	361.89	348.99	422.19	479.34	1
*vgr	veto	6.03	6.50	6.45	6.54	5.97	6.29
_
Abs	vhs	1040.44	500.52	436.90	415.15	496.30	577.86	1
*vgr	vhs	7.59	7.46	7.79	7.78	7.02	7.52
_
Abs	cor3	1203.14	553.22	445.45	398.79	534.18	626.95	1
*vgr	cor3	8.78	8.24	7.94	7.47	7.55	7.99
_
Abs	wilted	1556.66	800.18	722.95	708.21	858.90	929.38	1
*vgr	wilted	11.36	11.93	12.89	13.27	12.15	12.32
_
Abs	shpcrc2	2274.36	1041.79	915.99	854.30	1110.23	1239.33	1
*vgr	shpcrc2	16.59	15.53	16.33	16.01	15.70	16.03
_
Abs	walrus	2291.38	1094.04	960.07	892.67	1066.31	1260.89	1
*vgr	walrus	16.72	16.31	17.12	16.72	15.08	16.39
_
Abs	walrus	4010.55	2019.34	1767.75	1685.19	2029.78	2302.52	2
*vgr	walrus	29.27	30.11	31.52	31.58	28.71	30.23
_
Abs	patton	5235.87	2108.02	1509.85	1507.81	2132.01	2498.71	1
*vgr	patton	38.21	31.43	26.92	28.25	30.15	30.99
_
Abs	crim	4679.97	2246.04	2143.07	1936.85	2224.65	2646.11	1
*vgr	crim	34.15	33.49	38.22	36.29	31.47	34.72
_
Abs	uy1	6220.79	2474.97	1742.33	1748.73	2464.90	2930.34	1
*vgr	uy1	45.40	36.90	31.07	32.77	34.86	36.20
_
Abs	wiltse	5785.83	2737.06	2473.66	2310.58	2699.06	3201.23	1
*vgr	wiltse	42.22	40.81	44.11	43.30	38.18	41.72	-mips1
_
Abs	walrus	5743.85	2938.73	2513.24	2446.85	2858.84	3300.30	3
*vgr	walrus	41.92	43.82	44.82	45.85	40.44	43.37
_
Abs	wiltse	7093.51	3458.89	2887.77	2730.62	3199.08	3873.97	1
*vgr	wiltse	51.77	51.57	51.50	51.17	45.25	50.25	-mips2
_
Abs	walrus	7131.48	3613.02	3262.01	3048.77	3594.35	4129.92	4
*vgr	walrus	52.05	53.87	58.17	57.13	50.84	54.41
_
Abs	whiz	7159.01	3655.65	3355.85	3132.36	3655.02	4191.57	4
*vgr	whiz	52.25	54.51	59.85	58.70	51.70	55.40
_
Abs	walrus	7698.43	4119.06	3889.37	3690.27	4244.30	4728.28	5
*vgr	walrus	56.18	61.42	69.36	69.15	60.04	63.23
_
Abs	walrus	8718.08	4625.56	4469.49	4295.53	4765.40	5374.81	6
*vgr	walrus	63.63	68.97	79.71	80.50	67.41	72.04
_
Abs	walrus	8937.71	4882.66	4911.99	4601.09	5335.14	5733.71	7
*vgr	walrus	65.23	72.81	87.60	86.22	75.47	77.46
_
Abs	walrus	9300.31	5136.17	5243.14	5112.23	5318.45	6022.06	8
*vgr	walrus	67.88	76.59	93.51	95.80	75.23	81.80
_
.TE
.bp
.NH	1
ADDITIONAL STATISTICS
.PP
It would be greatly appreciated if you would e-mail any statistics
that you gather to the BRL-CAD developers, including: the ``summary''
file produced by the benchmark script, which BRL-CAD release was used,
the manufacturer of the machine, hardware model name/number, software
version numbers (OS and compiler), presence or absence of floating
point hardware, processor cache sizes, bus and memory speeds, and the
local host name (preferably an Internet or UUCP host name) of the
specific machine used.
@


11.7
log
@M-q paragraph formatting, update text for two decades of changes.
@
text
@d1 1
a1 1
.\" $Header: /cvs/brlcad/doc/benchmark.doc,v 11.6 1997/09/22 05:15:28 butler Exp $
@


11.6
log
@added ex-art bench numbers
@
text
@d1 1
a1 1
.\" $Header: /m/cad/doc/RCS/benchmark.doc,v 11.5 1996/08/01 04:26:18 butler Exp $
d10 1
a10 1
The BRL-CAD Release 4.4 Benchmark Test
d20 18
a37 19
This document describes the BRL-CAD Benchmark Test Methodology,
and the Ray-Tracing Figure of Merit (RTFM) used to judge the
computational performance of different computer systems.
.PP
The core of the test is the \fBrt\fR ray-tracing program.
The results for each processor are determined by
running a benchmark test of the RT ray-tracing program on each of the sample
databases provided.
The \fBrt\fR program requires a binary database for input ("db/xxx.g"), and
produces a binary image as output ("bench/xxx.pix"), along with a log
file ("bench/xxx.log").
Each run will produce a 512x512x24 bit color
shaded image in a "bench/xxx.pix" file, and a run log in "bench/xxx.log".
Reference copies of the images are provided as "pix/xxx.pix" and
"pix/xxx.log".  The sample databases provided are processed in
order of increasing difficulty, and each produces a colorful image.  In
each picture there are two light sources; the primary source is located
near the center of the model (the white ball), and the secondary light
source is located at the "eye" position.
d41 3
a43 3
moss.g  --  This is a simple model, containing a yellow torus,
a green ellipsoid, a bluish cube, a pink truncated (distorted) cone,
all sitting on a blue plate.  Note the shadowing, and "specular splash".
d50 2
a51 2
star.g  --  A familiar sight to Star Trek fans;  a low-detail exterior
of the ship "Enterprise".  The hull is white, with some other structures
d55 7
a61 3
bldg391.g  --  An exploded view of a two-story imaginary computer site,
including various walls, red stairways, green disk drives, etc.
The lower floor is a mirror, the upper floor is glass.
d65 11
a75 14
To make the benchmark
distribution machine independent,
the databases are provided
in an ASCII format in the "db" directory, and
ascii-to-binary converters are provided in the "conv" directory.
The setup command "\fBcake benchmark\fR"
(see the document \fIInstalling the BRL-CAD Package\fR)
will automatically compile and run the converters.
.PP
If you are running this
benchmark on a non-UNIX machine that has difficulty writing binary
streams, change the "-o file.pix" flag to "-O file.a_pix" and RT
will write an ASCII form directly.  For more discussion, consult
the doc/pix.5 and conv/asc2pix.1 manual pages.
d79 7
a85 10
format.
Earlier releases distributed the reference images in the portable
ASCII form, and then converted them to the binary form.
This consumed a significant amount of extra storage on UNIX machines,
so this practice was discontinued.
It is assumed that anyone attempting to benchmark a system that
can not read pure binary files will at least have access to a
UNIX system.
That UNIX system can be used to convert the reference images to
the portable ASCII form with the
d89 14
a102 16
Information about modifying the benchmark to run on a particular system
may be found in the document \fIInstalling the BRL-CAD Package\fR.
For a detailed explanation of various hardware specific modifications
necessary to take advantage of parallel processing, see the document
\fIWorkstations, Networking, Distributed Graphics, and
Parallel Processing\fR.
Implementations for several different types of hardware in use at ARL
are included.
.PP
If you encounter difficulty
with running the benchmark,
you might wish to build the full BRL-CAD package, to
take advantage of the image tools in determining the nature of the problem.
For example, one system suffered from a compiler bug that made
TGC solids vanish, while another system had difficulties with
the light visibility calculations.
d106 3
a108 4
The benchmark timings are not considered valid unless
the correct results are given.
Make sure that the answers match the reference files
to within plus-or-minus one in each color (see pixdiff(1)).
d110 12
a121 12
to variations in floating point precision.
You may wish to
compare the execution times and log file remarks
from your tests (in the "bench/xxx.log" files) with the
VAX-11/780 (with hardware FPA) times which are given in the
"pix/xxx.log" files.
The reference images are also located in the "pix/" directory.
.PP
For example,
if you are running the benchmark on a Cray XMP,
the world.pix and bldg391.pix images will have a single byte in the
blue channel off by 1, out in the cloud background.  This is not to be
d126 8
a133 12
If you have a suitable framebuffer,
you may wish to
display the images generated by the benchmark, and compare them
to the reference images.
This section assumes that you have successfully compiled the
full set of BRL-CAD software, not just the benchmark portion.
Programs for dealing with images are in the "util" directory.
To display a \fBpix\fR(5)
file on a framebuffer, set environment variable FB_FILE
(see \fBbrlcad\fR(1)
for details), and run \fBpix-fb\fR.  Note that by leaving
FB_FILE unset, your default display will be used.
d142 4
a145 4
If the images computed on your machine do not match the reference images,
the program "util/pixdiff" will compute a pix file that will highlight
the differences for you, and report a summary of bytes equal, off-by-1,
and off-by-many, e.g.,
d152 2
a153 2
For a display of the relative magnitude of the differences at
each pixel, use "util/bwdiff" instead, e.g.,
d175 2
a176 2
The full benchmark takes about 9 CPU hours on a VAX-11/780,
so you should scale your expectations accordingly.
d178 4
a181 4
Here is the list of systems that have been tested so far,
with as much information about the configuration as could be obtained.
Some systems have a great many options for small things that can
affect performance, such as memory interleaving.
d217 14
a230 17
between different runs on the \fIsame\fR database;  it is not meaningful
to compare RTFM numbers between different databases. The Rays/sec number
for a multi-processor machine is for "aggregate CPU cluster seconds",
rather than rays/total CPU seconds (which remains fairly constant on
good parallel machines). Worthy finalists to date are listed below.
Entries are omitted for tests in which correct results were not
obtained.
.PP
The statistics are recorded in
an easily understood format, with all results for
a particular configuration listed on a single line.
The numbers reported are the rays/sec (RTFM) figure.
Entries denoted with a dagger ("\(dg") produced incorrect results.
Entries denoted with a dash ("-") were not available and should be
considered differently than those entries with a dagger.
Generally the results are not available because time constraints
prevented running the complete set of databases.
d237 7
a243 7
There is very little difference in RTFM numbers between Release 4.0 and
Release 4.4, so they can be usefully compared.
In some cases the 4.4 performance is slower due to the use of shared
libraries.  For example "vision" dropped from 1.33 to 1.22 due to
the shared libraries.  For most users reducing the disk consumption
from 300 MBytes to 30 MBytes makes this a reasonable tradeoff.
However, for the best performance, use non-shared libraries.
d842 7
a848 9
It would be greatly appreciated if you could FAX or E-mail to ARL any
statistics that you gather, including:
the ``summary'' file produced by the benchmark script,
which BRL-CAD release
was used, the manufacturer of the machine,
hardware model name/number,
software version numbers (OS and compiler),
presence or absence of floating point hardware,
and the local host name (preferably InterNet or UUCP host name) of the
@


11.5
log
@added data for HAWKS
@
text
@d1 1
a1 1
.\" $Header: /m/cad/doc/RCS/benchmark.doc,v 11.4 1995/07/18 07:28:07 butler Exp butler $
d327 1
a327 1
ex-art	14.40	16.63	22.12	25.38	23.83	20.47
@


11.4
log
@added orac stats
@
text
@d1 1
a1 1
.\" $Header: /n/wolf/m/cad/doc/RCS/benchmark.doc,v 11.3 1995/07/18 06:47:56 butler Exp butler $
d200 1
d327 1
a327 1
ex-art	14.40	16.63	22.12	25.38	23.83	20.47	
d330 1
@


11.3
log
@added data for Pentium-90 "ex-art"
@
text
@d1 1
a1 1
.\" $Header: /n/wolf/m/cad/doc/RCS/benchmark.doc,v 11.2 1995/01/05 08:05:48 mike Exp butler $
d199 2
a200 1
ex-art	Pentium-P90, 16MB, BSD/OS 2.0
d327 1
@


11.2
log
@Vision is a 3/280
@
text
@d1 1
a1 1
.\" $Header: /m/cad/doc/RCS/benchmark.doc,v 11.1 95/01/05 04:09:01 mike Rel4_4 Locker: mike $
d199 1
d325 1
@


11.1
log
@Release_4_4
@
text
@d1 1
a1 1
.\" $Header: /m/cad/doc/RCS/benchmark.doc,v 8.20 95/01/05 03:36:33 mike Exp $
d203 1
a203 1
vision	Sun-3/160 w/68881 FPA, 16M RAM, SunOS 4.1.1
@


8.20
log
@Removed PK, because it's multi-cpu numbers are suspect.
@
text
@d1 1
a1 1
.\" $Header: /m/cad/doc/RCS/benchmark.doc,v 8.19 95/01/05 02:05:20 mike Exp Locker: mike $
@


8.19
log
@Additional benchmark results.
@
text
@d1 1
a1 1
.\" $Header: /m/cad/doc/RCS/benchmark.doc,v 8.18 95/01/04 08:52:57 mike Exp Locker: mike $
a261 1
pk	934.65	780.72	691.76	689.61	1716.90	962.72	-P16
a274 1
pk	913.69	764.21	682.97	686.97	741.01	757.77	-P8
@


8.18
log
@Updated
@
text
@d1 1
a1 1
.\" $Header: /m/cad/doc/RCS/benchmark.doc,v 8.17 95/01/04 07:31:08 mike Exp Locker: mike $
d4 2
d98 1
a98 1
Implementations for several different types of hardware in use at BRL
d181 1
d201 7
a207 2
vgr	DEC VAX-11/780, FPA, 4.3 BSD
vj	SGI Ingido**2, 100 MHz IP22, 96M RAM, Irix 5.2
d210 2
d242 2
d249 5
d255 1
a255 1
.TS
d257 2
a258 2
l l | n n n n n | n | l.
A/*	H/W	Moss	World	Star	Bldg	M35	Mean	S/W Notes
d260 15
a274 2
Abs	pk	128056.46	52355.48	38787.38	36797.60	121368.30	75473.04
*vgr	pk	934.65	780.72	691.76	689.61	1716.90	962.72	-P16
d276 19
a294 2
Abs	vapor	100408.15	68514.86	54328.03	49231.49	72397.64	68976.03	(S/W locks)
*vgr	vapor	732.85	1021.69	968.93	922.62	1024.15	934.04	-P18
d296 14
a309 2
Abs	wax	99368.72	64222.13	52011.23	49767.33	70178.03	67109.48
*vgr	wax	725.26	957.68	927.61	932.67	992.75	907.19	-P24
d311 20
a330 29
Abs	pk	125185.43	51247.95	38294.13	36657.21	52382.70	60753.48
*vgr	pk	913.69	764.21	682.97	686.97	741.01	757.77	-P8
_
Abs	wilson	30554.70	17782.60	16137.37	13990.98	19059.79	19505.08	Irix 5.2
*vgr	wilson	223.01	265.17	287.8	262.19	269.62	261.55	-P8
_
Abs	wimpy	11254.66	6277.37	5168.14	5527.90	5812.74	6808.16
*vgr	wimpy	82.14	93.60	92.17	103.59	82.22	90.74	-P2
_
Abs	axposf	11105.83	5517.03	4862.82	4501.46	5604.39	6318.30
*vgr	axposf	81.05	82.27	86.72	84.36	79.28	82.73	-P1
_
Abs	vapor	9501.09	4703.98	3786.13	3497.90	4714.63	5240.74
*vgr	vapor	69.34	70.14	67.52	65.55	66.69	67.84	-P1
_
Abs	wax	8533.66	3928.70	3658.15	3596.25	4193.07	4781.96
*vgr	wax	62.28	58.58	65.24	67.39	59.31	62.56	-P1
_
Abs	pk	8891.78	3736.08	2692.20	2641.33	3777.48	4347.77
*vgr	pk	64.89	55.71	48.01	49.50	53.43	54.30	-P1
_
Abs	wimpy	6550.35	2899.18	2880.83	2886.95	3268.20	3697.10
*vgr	wimpy	47.80	43.23	51.37	54.10	46.23	48.54	-P1
_
Abs	weber	6375.24	2914.15	2853.04	2686.09	3253.90	3616.48
*vgr	weber	46.53	43.45	50.88	50.33	46.03	47.44	-P1
_
Abs	wilson	5640.40	2652.05	2578.19	2290.79	2461.91	3124.66
*vgr	wilson	41.16	39.54	45.98	42.93	34.82	40.88	-P1
d332 2
d400 2
d851 1
a851 1
It would be greatly appreciated if you would return to BRL any
@


8.17
log
@Revised for Release 4.4.
@
text
@d1 6
a6 2
.\" $Header: /m/cad/doc/RCS/benchmark.doc,v 8.16 92/11/10 17:25:16 mike Exp Locker: mike $
.\" tbl benchmark.doc | troff -t -ms | catimp -P imt1
d16 1
a16 1
The Ballistic Research Laboratory
d238 1
a238 1
.TS H
d240 2
a241 2
l l | n n n n | n | l.
A/*	H/W	Moss	World	Star	Bldg	Mean	S/W Notes
d759 2
a760 2
Abs     crim    4679.97 2246.04 2143.07 1936.85 2224.65 2646.11 1
*vgr    crim    34.15   33.49   38.22   36.29   31.47   34.72
d765 2
a766 2
Abs     wiltse  5785.83 2737.06 2473.66 2310.58 2699.06 3201.23 1
*vgr    wiltse  42.22   40.81   44.11   43.30   38.18   41.72   -mips1
d771 2
a772 2
Abs     wiltse  7093.51 3458.89 2887.77 2730.62 3199.08 3873.97 1
*vgr    wiltse  51.77   51.57   51.50   51.17   45.25   50.25	-mips2
d800 1
a800 1
which BRL CAD release
@


8.16
log
@Added new SGIs
@
text
@d1 1
a1 1
.\" $Header: /m/cad/doc/RCS/benchmark.doc,v 8.15 91/10/12 06:24:37 mike Exp $
d4 1
a4 1
The BRL-CAD Benchmark Test
d191 97
d345 1
a345 1
BENCHMARK RESULTS
d347 1
a347 20
In the tradition of Dongarra, the Rays/sec figure is considered the
"RT Figure of Merit" (RTFM).  Note that the RTFM can only be compared
between different runs on the \fIsame\fR database;  it is not meaningful
to compare RTFM numbers between different databases. The Rays/sec number
for a multi-processor machine is for "aggregate CPU cluster seconds",
rather than rays/total CPU seconds (which remains fairly constant on
good parallel machines). Worthy finalists to date are listed below.
Entries are omitted for tests in which correct results were not
obtained.
.PP
The statistics are recorded in
an easily understood format, with all results for
a particular configuration listed on a single line.
The numbers reported are the rays/sec (RTFM) figure.
Entries denoted with a dagger ("\(dg") produced incorrect results.
Entries denoted with a dash ("-") were not available and should be
considered differently than those entries with a dagger.
Generally the results are not available because time constraints
prevented running the complete set of databases.
.fi
@


8.15
log
@Added YMP
@
text
@d1 1
a1 1
.\" $Header: /m/cad/doc/RCS/benchmark.doc,v 8.14 91/10/12 05:39:20 mike Exp $
d212 2
d677 3
d683 3
d688 3
@


8.14
log
@Added Pyramid
@
text
@d1 1
a1 1
.\" $Header: /m/cad/doc/RCS/benchmark.doc,v 8.13 91/10/12 05:28:51 mike Exp Locker: mike $
d198 1
d674 3
@


8.13
log
@Added IBM
@
text
@d1 1
a1 1
.\" $Header: /m/cad/doc/RCS/benchmark.doc,v 8.12 91/10/12 05:11:05 mike Exp Locker: mike $
d196 1
d655 3
@


8.12
log
@The bogus "3.3" stuff has been taken out, and more 3.7 and 4.0
results added
@
text
@d1 1
a1 1
.\" $Header: /m/cad/doc/RCS/benchmark.doc,v 8.11 91/10/12 04:00:50 mike Exp Locker: mike $
d197 1
d657 3
@


8.11
log
@5 more sets
@
text
@d1 1
a1 1
.\" $Header: /m/cad/doc/RCS/benchmark.doc,v 8.10 91/10/12 03:41:10 mike Exp Locker: mike $
a239 1
wolf	Silicon Graphics 4D/280 25 Mhz clock 128 MB memory
a554 37
RELEASE 3.3 STATISTICS
.LP
.TS H
expand box;
l l | n n n n n | n | l.
A/*	H/W	Moss	World	Star	Bldg	M35	Mean	P
_
.TH
Abs	vgr	121.89	54.47	45.17	40.35	49.02	62.18	1
*vgr	vgr	1.00	1.00	1.00	1.00	1.00	1.00	
_
Abs	spark	435.69	208.59	176.76	177.69	174.67	234.68	1
*vgr	spark	3.53	3.61	4.17	4.29	3.40	3.80	
_
Abs	vhs	973.11	475.00	384.62	351.12	343.44	505.45	1
*vgr	vhs	7.56	8.72	8.51	8.70	7.00	8.09	
_
Abs	ovoyage	1969.57	1001.21	862.77	809.61	786.11	1085.85	2
*vgr	ovoyage	15.31	18.38	19.10	20.06	16.03	17.77	
_
Abs	taylor	2446.98	1076.24	912.03	837.56	799.58	1214.47	1
*vgr	taylor	19.02	19.75	20.19	20.75	16.31	19.20	
_
Abs	viper	3255.73	1368.96	1102.71	1039.37	1008.15	1554.98	8
*vgr	viper	25.30	25.13	24.41	25.75	20.56	24.23  
_
Abs	vector	3956.86	1625.23	1234.03	1137.36	1121.41	1814.97	8
*vgr	vector	30.75	29.83	27.31	28.18	22.87	27.78
_
Abs	taylor	4730.05	2225.56	1742.09	1590.57	1551.78	2368.01	2
*vgr	taylor	36.76	40.85	38.56	39.41	31.65	37.44	
_
Abs	patton	16028.8	7289.7	4827.9	4392.5	20829.2	53368.1	4
*vgr	patton	124.6	133.83	106.88	108.85	106.23	116.07
.TE
.bp
.NH 1
d560 1
a560 1
A/*	H/W	Moss	World	Star	Bldg	M35	Mean	P
d587 2
a588 2
Abs	wolf	2330.45	1178.19	926.05	865.57	877.05	1235.46	1
*vgr	wolf	18.11	21.63	20.50	21.45	17.89	19.91
d599 3
d630 1
a630 1
A/*	H/W	Moss	World	Star	Bldg	M35	Mean	P
d657 6
d666 7
a672 1
Abs	whiz	7159.01	3655.65	3355.85	3132.36	3655.02	4191.57 4
@


8.10
log
@More statistics
@
text
@d1 1
a1 1
.\" $Header: /m/cad/doc/RCS/benchmark.doc,v 8.9 91/10/12 03:30:20 mike Exp Locker: mike $
d637 6
d697 9
@


8.9
log
@Sorted 4.0 table by speed
@
text
@d1 2
a2 2
.\" $Header: /m/cad/doc/RCS/benchmark.doc,v 8.8 91/10/12 02:59:16 mike Exp Locker: mike $
.\" tbl benchmark.doc | troff -t -ms | ...
d178 3
d223 3
a225 1
nova	Sun SPARCserver 490, 32 Mb, 33 MHz clock, 33 MHz TI 8847 FPU, SunOS 4.1.1B
d637 6
d692 2
a693 2
Abs	walrus	8783.56	4908.54	5031.68	5069.78	5572.58	5873.22 8
*vgr	walrus	64.10	73.19	89.73	95.01	78.83	80.17
d701 3
a703 1
statistics that you gather, including:	which BRL CAD release
d706 1
a706 1
OS/compiler software version numbers,
d708 1
a708 1
and the local name (preferably InterNet or UUCP) of the
@


8.8
log
@Added some Release 3.7 statistics
@
text
@d1 1
a1 1
.\" $Header: /m/cad/doc/RCS/benchmark.doc,v 8.7 91/10/11 13:02:33 butler Exp Locker: mike $
d194 1
d235 2
d620 3
d632 6
d654 2
a655 2
Abs	walrus	8783.56	4908.54	5031.68	5069.78	5572.58	5873.22 8
*vgr	walrus	64.10	73.19	89.73	95.01	78.83	80.17
d657 2
a658 2
Abs	whiz	7159.01	3655.65	3355.85	3132.36	3655.02	4191.57 4
*vgr	whiz	52.25	54.51	59.85	58.70	51.70	55.40
a659 3
Abs	vhs	1040.44	500.52	436.90	415.15	496.30	577.86	1
*vgr	vhs	7.59	7.46	7.79	7.78	7.02	7.52
_
d663 2
a664 2
Abs	patton	5235.87	2108.02	1509.85	1507.81	2132.01	2498.71	1
*vgr	patton	38.21	31.43	26.92	28.25	30.15	30.99
d666 2
a667 2
Abs	vision	165.85	89.78	76.44	75.78	96.18	100.80	1
*vgr	vision	1.21	1.33	1.36	1.42	1.36	1.33
d669 3
d675 2
a676 2
Abs	veto	827.25	436.38	361.89	348.99	422.19	479.34	1
*vgr	veto	6.03	6.50	6.45	6.54	5.97	6.29
d678 5
a682 2
Abs	sws1	636.26	288.76	212.99	210.18	271.02	323.84
*vgr	sws1	4.64	4.30	3.79	3.93	3.83	4.09
@


8.7
log
@more stats
@
text
@d1 1
a1 1
.\" $Header: /m/cad/doc/RCS/benchmark.doc,v 8.6 91/10/11 12:30:36 butler Exp Locker: butler $
d189 1
d192 13
a204 13
bob.brl.mil	Cray-2, SN 2009, 4.3ns clock
brl-patton	Cray X-MP/48, SN213, UNICOS 5.0, 8.5ns clock
brl-spark	Gould PN 9050, no MACC, UTX 2.0, 2x4Mb mem boards
brl-sws2	Convex C120, 16 Mbytes, Convex Unix 6.2.32.2
brl-vector	Alliant FX/80 (8 ACEs, 6 IPs, 32 Mbytes), Concentrix
brl-venom	Alliant FX/8 (8 CEs, 6 IPs, 32 Mbytes), Concentrix
brl-vgr	VAX 780, FPA, 4.3 BSD
brl-virus	Sun-3/50, 15 Mhz clock, 12 Mhz 68881, Sun UNIX 3.2
brl-vista	SGI 3030, w/FP chip, UNIX release 3.5
brl-vmb	Gould PN 9080, no MACCs, UTX 2.0, 12x1Mb mem boards
brl-vhs	Silicon Graphics 4D/60T, 12.5 Mhz clock 16 MB memory
brl-voyage	Silicon Graphics 4D/120, 16.7 Mhz clock 16 MB memory 
brl-taylor	Silicon Graphics 4D/220, 25 Mhz clock 16 MB memory
d219 2
d232 1
d528 3
d565 48
a612 2
Abs	voyage	1969.57	1001.21	862.77	809.61	786.11	1085.85	2
*vgr	voyage	15.31	18.38	19.10	20.06	16.03	17.77	
@


8.6
log
@added 4.0 stats
@
text
@d1 1
a1 1
.\" $Header: /n/wolf/m/cad/doc/RCS/benchmark.doc,v 8.5 91/09/13 21:04:17 butler Exp $
d219 1
a219 1
sws1	Convex C1, ConvexOS 9.1
@


8.5
log
@fixed formatting of Rel 3.3 statistics data
@
text
@d1 1
a1 1
.\" $Header: benchmark.doc,v 8.4 89/05/30 15:22:29 stay Locked $
d9 2
d192 1
a192 1
brl-patton	Cray X-MP/48, SN213, COS V115BF2, 8.5ns clock
d201 1
a201 1
brl-vhs	Silicon Graphics 4D/60T, 12.5 Mhz clock 8MB memory
d219 1
d223 1
d225 1
d227 3
d576 1
d578 41
d622 1
a622 1
statistics that you gather, including:  which BRL CAD release
@


8.4
log
@more results and defined a new table for release 3.5 and 
later releases since a new benchmark was added.
@
text
@d1 1
a1 1
.\" $Header: benchmark.doc,v 8.3 89/05/30 12:00:36 stay Locked $
d556 2
a557 2
Abs     viper   3255.73 1368.96 1102.71 1039.37 1008.15 1554.98 8
*vgr    viper   25.30   25.13   24.41   25.75   20.56   24.23  
d559 2
a560 2
Abs     vector  3956.86 1625.23 1234.03 1137.36 1121.41 1814.97	8
*vgr    vector  30.75   29.83   27.31   28.18   22.87   27.78
@


8.3
log
@Added 4D/220 and 4D/120 stats
@
text
@d1 1
a1 1
.\" $Header: benchmark.doc,v 8.2 89/05/07 22:25:01 stay Locked $
d531 1
d537 2
a538 2
l l | n n n n | n | l.
A/*	H/W	Moss	World	Star	Bldg	M35	Mean	S/W Notes
d541 2
a542 2
Abs	vgr	121.89	54.47	45.17	40.35	49.02	62.18	BSD 4.3
*vgr	vgr	1.00	1.00	1.00	1.00	1.00	1.00	w/FPA
d544 2
a545 2
Abs	spark	435.69	208.59	176.76	177.69	174.67	234.68	UTX 2.0
*vgr	spark	3.53	3.61	4.17	4.29	3.40	3.80	no MACC
d547 2
a548 2
Abs	voyage	1969.57	1001.21	862.77	809.61	786.11	1085.85	Irix 3.1
*vgr	voyage	15.31	18.38	19.10	20.06	16.03	17.77	-P2
d550 2
a551 2
Abs	taylor	2446.98	1076.24	912.03	837.56	799.58	1214.47	Irix 3.1
*vgr	taylor	19.02	19.75	20.19	20.75	16.31	19.20	-P 1
d553 14
a566 2
Abs	taylor	4730.05	2225.56	1742.09	1590.57	1551.78	2368.01	Irix 3.1
*vgr	taylor	36.76	40.85	38.56	39.41	31.65	37.44	-P 2
@


8.2
log
@Added beginnings of table for Release 3.3
@
text
@d1 1
a1 1
.\" $Header: benchmark.doc,v 8.1 88/10/06 07:09:14 mike Locked $
d200 2
d545 9
@


8.1
log
@really Release 3.0
@
text
@d1 1
a1 1
.\" $Header: benchmark.doc,v 1.9 88/10/05 00:10:49 mike Locked $
d458 1
a458 8
RELEASE 3.0 STATISTICS
.PP
Actual statistics for Release 3.0 were not available at the time
of this printing, because the manuals are sent to the printers
a month before the software is finalized.  Some preliminary results
have been included as available.  The Release 3.0 software tape
will have an updated version of this document with the results of
several machines of interest.
d528 15
@


1.9
log
@More results
@
text
@d1 1
a1 1
.\" $Header: benchmark.doc,v 1.8 88/10/04 08:26:23 mike Locked $
d485 6
d494 3
a498 3
_
Abs	video	1058.48	555.75	447.21	407.66	617.27	UNIX 2.0
*vgr	video	7.62	8.27	8.20	8.30	8.09	-O2
@


1.8
log
@More Rel3 info
@
text
@d1 1
a1 1
.\" $Header: benchmark.doc,v 1.7 88/10/01 06:29:25 mike Exp $
d483 1
a483 1
*vgr	spark	3.61	3.65	4.11	4.19	3.89	no MACC
d486 1
a486 1
*vgr	sun4	6.26	6.3	6.81	6.19	6.38	-O2 optim
d497 2
a498 2
Abs	bob	5186.24	2132.17	1409.10	1273.72	2500.30	UNICOS 4.0, /bin/cc
*vgr	bob	42.28	35.93	30.44	27.71	34.09	-P 2
d500 2
a501 2
Abs	vector	5802.92	2261.92	1640.83	1419.19	2781.21	Alliant 3.0
*vgr	vector	47.31	38.12	35.45	30.88	37.94	-P 8
d505 9
@


1.7
log
@Added XMP figures
@
text
@d1 1
a1 1
.\" $Header: benchmark.doc,v 1.6 88/09/27 17:00:49 mike Locked $
d473 2
a474 2
Abs	vgr	122.64	59.33	46.28	45.95	68.55	BSD 4.3
*vgr	vgr	1.0	1.0	1.0	1.0	1.0
d476 9
d488 2
a489 2
Abs     vhs     954.81  471.90  409.78  392.55  557.26  IRix 3.1 
*vgr    vhs     7.78    7.95    8.85    8.54    8.28    Parallel, -P1
d491 9
d506 3
d511 3
@


1.6
log
@added vhs and sun4 stats
@
text
@d1 1
a1 1
.\" $Header: benchmark.doc,v 1.5 88/09/08 02:34:42 stay Locked $
d473 1
a473 1
Abs	vgr	?	?	?	?	?	BSD 4.3 [PRELIM]
a475 3
Abs	vmb	409.5	201.9	181.0	179.0	?	UTX 2.0 [PRELIM]
*vgr	vmb	?	?	?	?	?
_
d477 1
a477 1
*vgr	sun4	6.26	6.3	6.81	6.19	6.38	-O2 optimization
d480 1
a480 1
*vgr    vhs     7.78    7.95    8.85    8.54    8.28    Parallel code -P1
d483 13
a495 1
*vgr	vector	47.31	38.12	35.45	30.88	37.94	8 Processors
@


1.5
log
@Added Convex C120 results.
@
text
@d1 1
a1 1
.\" $Header: benchmark.doc,v 1.4 88/09/06 08:46:43 kermit Locked $
d479 8
a486 2
Abs	vector	5289.9	2255.5	1696.1	1489.2	?	3.0 [PRELIM]
*vgr	vector	?	?	?	?	?	8 ACEs, no vectors
@


1.4
log
@Added several more machines worth of information for 2.3 plus
preliminary numbers for 3.0 and some other revisions.
@
text
@d1 1
a1 1
.\" $Header: benchmark.doc,v 1.3 88/09/05 04:57:15 kermit Locked $
d192 1
d381 3
@


1.3
log
@Converted to new, 2-line table format, which is much
easier to extract information from.
@
text
@d1 1
a1 1
.\" $Header: benchmark.doc,v 1.2 88/09/05 01:06:26 kermit Locked $
d61 1
a61 1
will automaticly compile and run the converters.
d73 1
a73 1
ASCII form, and the converted them to the binary form.
d78 2
a79 1
UNIX system that can be used to convert the reference images to
d82 1
a82 1
tool, and then send those images to the machine under test.
d84 9
d192 2
a193 1
brl-vector	Alliant FX/8 (8 CEs, 6 IPs, 32 Mbytes), Concentrix 2.0
d232 1
a232 1
.LP
d237 5
d297 2
a298 2
Rays	vector	492.9	228.0	180.0	157.1	?	Concentrix 2.0
*vgr	vector	4.40	3.58	3.27	3.10	?
d318 2
a319 2
Rays	vector	904.9	424.6	349.3	312.6	?	Concentrix 2.0,
*vgr	vector	8.07	6.68	6.35	6.17	?	2 CEs, no vectors
d321 2
a322 2
Rays	vector	1375.5	650.0	523.4	459.9	?	Concentrix 2.0,
*vgr	vector	12.27	10.22	9.52	9.07	?	3 CEs, no vectors
d324 2
a325 2
Rays	vector	1813.5	845.5	686.0	600.7	?	Concentrix 2.0,
*vgr	vector	16.17	13.29	12.47	11.85	?	4 CEs, no vectors
d327 2
a328 2
Rays	vector	2364.1	1104.4	870.2	775.9	?	Concentrix 2.0,
*vgr	vector	21.08	17.36	15.82	15.3	?	5 CEs, no vectors
d336 2
a337 2
Rays	vector	2811.4	1319.0	1051.6	918.0	?	Concentrix 2.0,
*vgr	vector	25.08	20.74	19.12	18.1	?	6 CEs, no vectors
d339 2
a340 2
Rays	vector	3248.8	1533.0	1232.3	1065.9	?	Concentrix 2.0,
*vgr	vector	28.98	24.10	22.41	21.02	?	7 CEs, no vectors
d345 2
a346 2
Rays	vector	3677.3	1724.2	1375.4	1208.4	?	Concentrix 2.0,
*vgr	vector	32.80	27.11	25.01	23.83	?	8 CEs, no vectors
d378 9
d393 9
d405 9
d417 15
d434 18
d458 4
a461 1
a month before the software is finalized.
d469 1
a469 1
Abs	vgr	118.8	64.9	36.5	34.2	?	BSD 4.3 [PRELIM]
d471 6
@


1.2
log
@The beginnings of a new format
@
text
@d1 1
a1 1
.\" $Header: benchmark.doc,v 1.1 88/09/02 03:11:58 mike Locked $
d7 4
d19 5
a23 1
databases provided.  Each run will produce a 512x512x24 bit color
d31 3
a33 1
.sp
a50 4
.PP
The RT benchmark requires a binary database for input ("db/xxx.g"), and
produces a binary image as output ("bench/xxx.pix"), along with a log
file ("bench/xxx.log").
d97 2
d105 6
d112 1
a112 1
BENCHMARK RESULTS
d114 12
a125 9
In the tradition of Dongarra, the Rays/sec figure is considered the
"RT Figure of Merit" (RTFM).  Note that the RTFM can only be compared
between different runs on the \fIsame\fR database;  it is not meaningful
to compare RTFM numbers between different databases. The Rays/sec number
for a multi-processor machine is for "aggregate CPU cluster seconds",
rather than rays/total CPU seconds (which remains fairly constant on
good parallel machines). Worthy finalists to date are listed below.
Entries are omitted for tests in which correct results were not
obtained.
d127 44
d181 1
a181 2
brl-spark	Gould PN 9050, no MACC, UTX 1.2, 2x4Mb mem boards
brl-vat	VAX 750, FPA, 4.2 BSD
a201 4
nrl-xmp	Cray X-MP/12, COS V115, 9.5ns clock
nrtc-785	VAX 785, FPA, VMS+Eunice_4.1
nrtc-dryer	Ridge 330, ROS
nrtc-gremlin	ISI 68020, no FP hardware, 4.2 BSD
d205 1
a205 1
utah-ug	VAX 8600, FPA, 4.3 BSD
d209 17
d227 7
a233 9
.sp
.TS
center box;
c s c s
c c c l
n n n l.
FILE:  "bench/moss.log"	Release 2.3
=
Pix/sec	Ray/sec	*780	Machine & OS
d235 3
a237 17
  83.2	  118.8	  1.00	brl-vgr
 262.8	  375.4	  3.16	brl-vmb, UTX 2.0
 670.9	  958.3	  8.07	brl-vhs, -O2 optimization
 692.0	  988.3	  8.32	mseries
1418.7	 1856.7	 15.63	bob.brl.mil, 1 CPU, UNICOS 3.0, CC -O
1851.7	 2423.5	 20.40	bob.brl.mil, 1 CPU, UNICOS 3.0, VCC -O
2420.2	 3456.5	 29.10	brl-patton, 1 CPU, no vectors, UNICOS 2.1
.TE
.sp
.TS
center box;
c s c s
c c c l
n n n l.
FILE:  "bench/moss.log"	Release 1.20
=
Pix/sec	Ray/sec	*780	Machine & OS
d239 2
a240 52
  12.3	   17.6	  0.16	nrtc-gremlin
  56.4	   80.5	  0.72	tek4132
  57.2	   81.6	  0.73	brl-vat
  75.4	  107.7	  0.96	violet
  78.5	  112.1	  1.00	brl-vgr
  81.2	  115.9	  1.03	indigo
  81.5	  116.4	  1.04	brl-vista
  83.3	  119.0	  1.06	violet w/fast_sqrt
  86.7	  123.8	  1.10	nrtc-785
  89.2	  127.3	  1.14	brl-virus
 103.8	  148.2	  1.32	vortac
 134.3	  191.8	  1.71	utah-gr
 158.6	  226.5	  2.02	nrtc-dryer
 266.7	  380.5	  3.39	elxsi-m1
 269.4	  384.7	  3.43	brl-spark, UTX 1.2
 289.5	  413.4	  3.69	brl-spark, UTX 2.0
 289.9	  413.9	  3.69	brl-vmb, UTX 2.0
 318.5	  454.8	  4.06	c1east, Convex Unix 6.0.1.12, vanilla cc
 332.6	  460.7	  4.11	amsaa-seer, UTX 2.0
 345.2	  492.9	  4.40	brl-vector, 1 CE, no vectors (1.00X)
 364.5	  520.6	  4.64	elxsi-gnu BSD 4.2
 364.9	  521.1	  4.64	utah-ug
 365.3	  521.6	  4.66	c1east, Convex Unix 6.0.1.12, vc -O1 (scalar)
 365.9	  527.7	  4.71	c1east, Convex Unix 6.0.1.12, vc -O2 (vector)
 451.5	  644.7	  5.75	elxsi-gnuy SysV
 591.9	  845.2	  7.54	multiflow (preliminary)
 679.8	  904.9	  8.07	brl-vector, 2 CEs, no vectors (1.84X)
1018.2	 1375.5	 12.27	brl-vector, 3 CEs, no vectors (2.79X)
1309.5	 1813.5	 16.17	brl-vector, 4 CEs, no vectors (3.68X)
1396.6	 1994.3	 17.79	nrl-xmp, no vectors, no optim
1722.5	 2364.1	 21.08	brl-vector, 5 CEs, no vectors (4.80X)
1745.0	 2492.9	 22.24	snm2, no vectors, no optim
1752.1	 2502.0	 22.32	hep, 1 PEM, npsw=10
2040.8	 2811.4	 25.08	brl-vector, 6 CEs, no vectors (5.7X)
2330.7	 3248.8	 28.98	brl-vector, 7 CEs, no vectors (6.5X)
2418.3	 3453.3	 30.81	brl-patton, 1 CPU, no vectors, no optim (1.00X)
2632.2	 3677.3	 32.80	brl-vector, 8 CEs, no vecotrs (7.46X)
2786.0	 3972.9	 35.44	alliant, 8 CEs, no vectors
2840.3	 4055.9	 36.18	hep, 1 PEM, npsw=40
4802.1	 6856.5	 61.16	brl-patton, 2 CPUs, no vectors, no optim (1.99X)
7148.1	10205.1	 91.04	brl-patton, 3 CPUs, no vectors, no optim (2.96X)
9331.8	13320.2	118.82	brl-patton, 4 CPUs, no vectors, no optim (3.86X)
.TE
.sp
.TS
center box;
c s c s
c c c l
n n n l.
FILE:  "bench/world.log"	Release 2.3
=
Pix/sec	Ray/sec	*780	Machine & OS
d242 2
a243 17
  36.0	   64.9	  1.00	brl-vgr
 121.3	  218.6	  3.37	brl-vmb, UTX 2.0
 302.6	  545.6	  9.41	brl-vhs, -O2 optimization
 334.8	  603.5	  9.29	mseries
 479.3	  801.9	 12.36	bob.brl.mil, 1 CPU, UNICOS 3.0, CC -O
 625.0	 1045.7	 16.11	bob.brl.mil, 1 CPU, UNICOS 3.0, VCC -O
 938.4	 1691.8	 26.07	brl-patton, 1 CPU, no vectors, UNICOS 2.1
.TE
.sp
.TS
center box;
c s c s
c c c l
n n n l.
FILE:  "bench/world.log"	Release 1.20
=
Pix/sec	Ray/sec	*780	Machine & OS
d245 2
a246 42
  24.4	   44.0	 0.69	tek4132
  32.3	   57.3	 0.90	violet
  35.5	   63.0	 0.99	violet, w/fast_sqrt
  35.9	   63.6	 1.00	brl-vgr
  38.5	   68.4	 1.08	ardec-3
  39.4	   69.9	 1.10	brl-virus
  45.6	   81.0	 1.27	vortac
  48.1	   85.3	 1.34	indigo
  48.4	   86.0	 1.35	brl-vista
  59.6	  105.8	 1.66	utah-gr
 128.5	  228.0	 3.58	brl-vector, 1 CE, no vectors
 130.7	  232.0	 3.65	brl-spark, UTX 2.0
 131.1	  232.2	 3.65	elxsi-m1
 131.5	  233.4	 3.67	brl-vmb, UTX 2.0
 142.2	  252.4	 3.97	c1east, Convex Unix 6.0.1.12, vanilla cc
 148.3	  263.2	 4.14	amsaa-seer, UTX 2.0
 160.8	  285.3	 4.49	c1east, Convex Unix 6.0.1.12, vc -O1 (scalar)
 161.9	  287.4	 4.52	c1east, Convex Unix 6.0.1.12, vc -O2 (vector)
 164.6	  292.1	 4.59	utah-cs
 177.7	  315.4	 4.96	elxsi-gnu BSD 4.2
 196.8	  349.3	 5.49	elxsi-gnuy SysV
 247.6	  439.5	 6.91	multiflow (preliminary)
 257.3	  424.6	 6.68	brl-vector, 2 CEs, no vectors
 379.1	  650.0	10.22	brl-vector, 3 CEs, no vectors
 491.3	  845.5	13.29	brl-vector, 4 CEs, no vectors
 642.16	 1104.4	17.36	brl-vector, 5 CEs, no vectors
 762.38	 1319.0	20.74	brl-vector, 6 CEs, no vectors
 853.3	 1514.3	23.81	brl-patton, 1 CPU, no vectors
 880.42	 1533.0	24.10	brl-vector, 7 CEs, no vectors
 987.62	 1724.2	27.11	brl-vector, 8 CEs, no vectors
 1039.2	 1840.0	28.93	alliant, 8 CEs, no vectors
.TE
.fi
.sp
.TS
center box;
c s c s
c c c l
n n n l.
FILE:  "bench/star.log"	Release 2.3
=
Pix/sec	Ray/sec	*780	Machine & OS
d248 2
a249 17
  30.5	   36.5	 1.00	brl-vgr
 156.0	  186.4	 5.11	brl-vmb, UTX 2.0
 374.0	  447.0	12.25	brl-vhs, -O2 optimization
 431.5	  515.6	14.13	mseries
 482.2	  574.1	15.73	bob.brl.mil, 1 CPU, UNICOS 3.0, CC -O
 604.2	  719.3	19.71	bob.brl.mil, 1 CPU, UNICOS 3.0, VCC -O
 978.2	 1169.0	32.03	brl-patton, 1 CPU, no vectors, UNICOS 2.1
.TE
.sp
.TS
center box;
c s c s
c c c l
n n n l.
FILE:  "bench/star.log"	Release 1.20
=
Pix/sec	Ray/sec	*780	Machine & OS
d251 2
a252 42
  28.4	   33.9	 0.62	tek4132
  37.4	   44.7	 0.81	violet
  41.9	   50.0	 0.91	violet, w/fast_sqrt
  46.0	   55.0	 1.00	brl-vgr
  47.7	   57.0	 1.04	brl-virus
  47.8	   57.2	 1.04	ardec-3
  55.1	   65.8	 1.20	vortac
  75.2	   89.9	 1.64	utah-gr
 150.6	  180.0	 3.27	brl-vector, 1 CE, no vectors (1.00X)
 171.4	  204.8	 3.72	elxsi-m1
 172.0	  205.6	 3.74	c1east, Convex Unix 6.0.1.12, vanilla cc
 176.2	  210.6	 3.83	brl-vmb, UTX 2.0
 178.8	  213.8	 3.89	brl-spark, UTX 2.0
 191.4	  228.7	 4.16	c1east, Convex Unix 6.0.1.12, vc -O2 (vector)
 192.9	  230.5	 4.20	c1east, Convex Unix 6.0.1.12, vc -O1 (scalar)
 198.7	  237.4	 4.32	utah-cs
 206.5	  246.8	 4.49	amsaa-seer, UTX 2.0
 221.3	  264.4	 4.81	elxsi-gnu BSD 4.2
 221.4	  264.6	 4.81	elxsi-gnuy SysV
 262.0	  313.1	 5.69	multiflow (preliminary)
 294.1	  349.3	 6.35	brl-vector, 2 CE, no vectors (1.94X)
 443.4	  523.4	 9.52	brl-vector, 3 CE, no vectors (2.91X)
 577.9	  686.0	12.47	brl-vector, 4 CEs, no vectors (3.81X)
 733.3	  870.2	15.82	brl-vector, 5 CEs, no vectors (4.83X)
 883.1	 1051.6	19.12	brl-vector, 6 CEs, no vectors (5.84X)
1035.2	 1232.3	22.41	brl-vector, 7 CEs, no vectors (6.85X)
1063.7	 1271.2	23.11	brl-patton, 1 CPU, no vectors (1.00X)
1153.8	 1375.4	25.01	brl-vector, 8 CEs, no vectors (7.64X)
1219.9	 1457.2	26.49	alliant, 8 CEs, no vectors
2110.6	 2522.2	45.86	brl-patton, 2 CPUs, no vectors (1.98X)
3138.2	 3749.9	68.18	brl-patton, 3 CPUs, no vectors (2.95X)
4147.1	 4955.6	90.10	brl-patton, 4 CPUs, no vectors (3.90X)
.TE
.sp
.TS
center box;
c s c s
c c c l
n n n l.
FILE:  "bench/bldg391.log"	Release 2.3
=
Pix/sec	Ray/sec	*780	Machine & OS
d254 92
a345 7
  23.0	   34.2	 1.00	brl-vgr
 132.0	  196.2	 5.74	brl-vgr, UTX 2.0
 278.6	  414.1	12.11	brl-vhs, -O2 optimization
 330.7	  491.6	14.37	mseries
 383.7	  500.3	15.62	bob.brl.mil, 1 CPU, UNICOS 3.0, CC -O
 467.4	  609.4	17.82	bob.brl.mil, 1 CPU, UNICOS 3.0, VCC -O
 702.1	 1043.6	30.51	brl-patton, 1 CPU, no vectors, UNICOS 2.1
d347 7
a353 9
.sp
.TS
center box;
c s c s
c c c l
n n n l.
FILE:  "bench/bldg391.log"	Release 1.20
=
Pix/sec	Ray/sec	*780	Machine & OS
d355 21
a375 30
  21.1	   31.4	 0.62	tek4132
  29.7	   44.1	 0.87	violet
  31.1	   46.3	 0.91	violet, w/fast_sqrt
  34.1	   50.7	 1.00	brl-vgr
  35.2	   52.4	 1.03	brl-virus
  40.9	   60.7	 1.20	vortac
  58.2	   86.5	 1.71	utah-gr
  68.5	  101.8	 2.01	indigo
  68.8	  102.3	 2.02	brl-vista
 105.7	  157.1	 3.10	brl-vector, 1 CE, no vectors (1.00X)
 127.4	  189.3	 3.73	elxsi-m1
 129.4	  192.3	 3.80	c1east, Convex Unix 6.0.1.12, vanilla cc
 141.3	  210.0	 4.14	c1east, Convex Unix 6.0.1.12, vc -O2 (vector)
 142.6	  211.9	 4.18	brl-spark, UTX 2.0
 143.0	  212.6	 4.19	brl-vmb, UTX 2.0
 144.7	  215.1	 4.24	c1east, Convex Unix 6.0.1.12, vc -O1 (scalar)
 145.5	  216.2	 4.27	utah-cs
 162.2	  241.0	 4.75	amsaa-seer, UTX 2.0
 162.8	  242.0	 4.77	elxsi-gnu BSD 4.2
 162.9	  242.1	 4.77	elxsi-gnu SysV
 210.6	  312.6	 6.17	brl-vector, 2 CEs, no vectors (1.98X)
 227.7	  338.9	 6.68	multiflow (preliminary)
 310.9	  459.9	 9.07	brl-vector, 3 CEs, no vectors (2.93X)
 405.2	  600.7	11.85	brl-vector, 4 CEs, no vectors (3.82X)
 523.5	  775.9	15.3	brl-vector, 5 CEs, no vectors (4.93X)
 620.0	  918.0	18.1	brl-vector, 6 CEs, no vectors (5.84X)
 691.2	 1027.3	20.26	brl-patton, 1 CPU, no vectors
 719.0	 1065.9	21	brl-vector, 7 CEs, no vectors (6.78X)
 814.6	 1208.4	23.83	brl-vector, 8 CEs, no vectors (7.69X)
 852.4	 1266.4	24.98	alliant, 8 CEs, no vectors
d380 5
a384 5
For Release 3.0, the statistics are being recorded in
a more easily understood format, with all results for
a particular configuration listed on a single line.
The numbers reported are the rays/sec (RTFM) figure.
.TS
d386 1
a386 1
l l | n n n n | n l.
d389 1
@


1.1
log
@Initial revision
@
text
@d1 2
d41 1
a41 1
.sp
d44 6
a49 2
file ("bench/xxx.log").  To make the benchmark
 distribution machine independent,
d52 5
a56 1
ascii-to-binary converters are provided.
d62 38
a99 2
.IP "BENCHMARK RESULTS"
.sp
d128 4
a131 1
c1east	Convex C1 XP (2 IOPs, 4 Multibus, 4-way disk striping, 64 Mbytes), Convex Unix 6.0.1.12
d137 4
d167 1
d238 1
d299 1
d360 1
d406 18
a423 2
.fi
.sp 2
d427 4
a430 2
hardware and software version numbers, presence or absence of floating
point hardware, and the name (preferably InterNet or UUCP) of the
@
