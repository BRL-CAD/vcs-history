head	11.2;
access;
symbols
	rel-4-5:11.1
	ctj-4-5-post:11.1
	ctj-4-5-pre:11.1
	rel-4-4:11.1;
locks; strict;


11.2
date	99.04.29.20.50.11;	author mike;	state dead;
branches;
next	11.1;

11.1
date	95.01.05.04.09.32;	author mike;	state Rel4_4;
branches;
next	;


desc
@info
@


11.2
log
@Per conversation with Lee, old file format specification documents
which can be better found on the Web have been removed from the
distribution.
@
text
@
Received: From brl-vgr.arpa.ARPA by BRL via smtp;  29 Apr 85 12:20 EDT
Date:     Mon, 29 Apr 85 11:10:12 EST
From:     Paul Stay (VLD/VMB) <stay@@BRL.ARPA>
To:       moss@@BRL.ARPA
Subject:  [Spencer W Thomas:  RLE files (no! not again!)]

Well here is the change.
grumble grumble grumble


----- Forwarded message # 1:

Received: From brl-aos.arpa.ARPA by BRL via smtp;  26 Apr 85 16:40 EST
Received: from utah-gateway by BRL-AOS.ARPA id a013801; 26 Apr 85 16:27 EST
Received: from utah-gr.ARPA by utah-cs.ARPA (4.42/4.40.2)
	id AA05780; Fri, 26 Apr 85 14:26:50 MST
Received: by utah-gr.ARPA (4.42/4.40.2)
	id AA01497; Fri, 26 Apr 85 14:26:41 MST
Message-Id: <8504262126.AA01497@@utah-gr.ARPA>
Date: 26 Apr 85 14:03 MST
From: Spencer W Thomas <thomas%utah-gr@@utah-cs.ARPA>
To: bboard%utah-gr@@utah-cs.ARPA, alpha1%utah-gr@@utah-cs.ARPA
Subject: RLE files (no! not again!)

I promise this is the last time for a long time.  The description of
the RLE file format has changed slightly, and the interface to the RLE
subroutines has changed substantially.  The changes are summarized
below:

RLE file format:
	We messed up the original definition slightly (or I interpreted
what we said wrong).  While providing for N channels of color
information to be saved, the header format only provided for 3 channels
of background color.  This has been fixed, at the cost of rendering old
format B&W RLE files incompatible  (An old B&W file will have 3
channels of background saved, while a new B&W file has only 1.)  This
can be fixed by 'adb'ing the file and changing the word at address 16
to have the value 2, a harmless "SetColor 0" instruction.  If the color
map was saved, too, the fix is more difficult, since bytes 16 and 17
need to be removed from the file.

	Two more flags have been added: H_NO_BACKGROUND (0x2) and
H_ALPHA (0x4).  If H_NO_BACKGROUND is set, no background color is saved
in the file (corresponds to -S flag on svfb), and byte 15 is just
filler.  If H_ALPHA is set, an "alpha" or "coverage" channel is also
saved (see, e.g., "Compositing of Digital Images", Porter & Duff,
SIGGRAPH '84).  The alpha channel has color number -1, and its
background color is always assumed to be 0.

	The format still leaves open (begs the question of)
representation of pixel values with more than 8 bits.  Since we have
not saved any such images, we don't have to worry about backward
compatibility, at least.

Subroutine interface:
	There are no (user visible) global variables left.  All global
information needed by the subroutines has been packed into a sv_globals
structure that is passed around as needed (this changed all the calling
sequences).  A global variable called sv_globals is provided with
conveniently initialized members.

	The interface to the sv_putrow function has also changed
drastically.  To accommodate an arbitrary number of color channels, an
array of pointers to the scan buffers is passed, instead of passing the
(3) scan buffers explicitly.

	Hopefully, at this point, the stuff is stable enough that it
won't need to be touched until we want to go to >8 bit pixels.

=S

----- End of forwarded messages

@


11.1
log
@Release_4_4
@
text
@@
