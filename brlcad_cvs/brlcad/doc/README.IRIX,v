head	14.8;
access;
symbols
	rel-7-10-4:14.7
	STABLE:14.7.0.2
	stable-branch:14.1
	rel-7-10-2:14.7
	rel-7-10-0:14.7
	rel-7-8-4:14.5
	rel-7-8-2:14.5
	rel-7-8-0:14.3
	trimnurbs-branch:14.2.0.2
	help:14.2
	temp_tag:14.2
	bobWinPort-20051223-freeze:14.1
	postmerge-20051223-bobWinPort:14.2
	premerge-20051223-bobWinPort:14.2
	rel-7-6-6:14.2
	rel-7-6-4:14.2
	rel-7-6-2:14.1
	rel-7-6-branch:14.1.0.6
	rel-7-6-0:14.1
	rel-7-4-2:14.1
	rel-7-4-branch:14.1.0.4
	bobWinPort:14.1.0.2
	rel-7-4-0:14.1
	rel-7-2-6:14.1
	rel-7-2-4:14.1;
locks; strict;
comment	@# @;


14.8
date	2007.11.28.04.00.46;	author brlcad;	state Exp;
branches;
next	14.7;

14.7
date	2007.01.31.21.40.17;	author brlcad;	state Exp;
branches;
next	14.6;

14.6
date	2006.12.19.20.41.05;	author brlcad;	state Exp;
branches;
next	14.5;

14.5
date	2006.06.06.18.51.11;	author brlcad;	state Exp;
branches;
next	14.4;

14.4
date	2006.06.03.01.29.57;	author brlcad;	state Exp;
branches;
next	14.3;

14.3
date	2006.04.05.17.17.39;	author brlcad;	state Exp;
branches;
next	14.2;

14.2
date	2005.10.23.04.44.25;	author brlcad;	state Exp;
branches
	14.2.2.1;
next	14.1;

14.1
date	2005.04.12.23.29.55;	author brlcad;	state Exp;
branches
	14.1.6.1;
next	;

14.1.6.1
date	2005.11.13.13.46.08;	author brlcad;	state Exp;
branches;
next	;

14.2.2.1
date	2006.04.07.19.24.53;	author jlowenz;	state Exp;
branches;
next	;


desc
@@


14.8
log
@beef up the IRIX readme with addition details encountered with the problem I ran into with (yet another stupid) libtool linkage problems/bugs.  more specifically, libtool was leaving out three librt object files that were in the librt_nil.la convenience library.  turns out they were getting prelinked into a '.al' pre-link archive with just the .l nm symbol instead of .lo causing subsequent linkage failures due to the symbols that get left out.
@
text
@BRL-CAD on IRIX README
======================

Building on IRIX is one of the most tricky platforms to support
without installing up-to-date compilation tools.  That said, the build
has and should work just fine with either the MIPSPro or GCC
compilers.  The best performance is usually achieved with the MIPSPro
compiler, whereas GCC will compile faster with less fuss.  For
convenience, here are some example compilation scenarios:

For IRIX 32-bit unoptimized /usr/brlcad build:
	export SGI_ABI=-n32
	./configure CC=cc

For IRIX 64-bit unoptimized /usr/brlcad build:
	export SGI_ABI=-64
	./configure CC=cc CFLAGS=-64 LDFLAGS=-64 --enable-64bit-build

For IRIX 32-bit optimized production release build:
	export SGI_ABI=-n32
	./configure CC=cc --enable-optimized --enable-everything --prefix=/usr/brlcad/rel-MAJOR.MINOR.PATCH/mips32

For IRIX 64-bit optimized production release build:
	export SGI_ABI=-64
	./configure CC=cc CFLAGS=-64 LDFLAGS=-64 --enable-64bit-build --enable-optimized --enable-everything --prefix=/usr/brlcad/rel-MAJOR.MINOR.PATCH/mips64


Potential problems you may encounter
------------------------------------

Symptom: MIPSPro linker reports symbol(s) missing

Description: There's a known bug in the MIPSpro linker involving
rpaths that are too long (namely longer than 255 characters) so care
should be taken to not compile in directories that are too deep.  The
way this bug is usually seen is that the build will fail during
compilation where unresolved symbols are reported during linking,
symbols that are correctly included in the libraries being linked.

Workaround: It is usually sufficient to retry the compile from a
shorter path. (e.g., /tmp instead of /some/deep/path/to/brlcad)

---

Symptom: GCC crashes during compilation with internal errors

Description:  Certain versions of the gcc compiler are known to crash
with internal error messages, for example on src/mged/animedit.c, when
using --enable-optimized (i.e. -O3).

Workaround: Compile in whatever directory is failing with -O0 instead:
	cd src/mged
	make CFLAGS="-O0"
	cd ../..
	make

---

Symptom: Linker reports symbol(s) missing

Description: Depending on how libraries are set up for compilation,
libtool convenience libraries may result in unresolved symbols during
compilation.  The specific problem is that the .al libtool archive
convenience library (not to be confused with usual .la libtool
archives) that is listed as a LIBADD inclusion results in having
symbols embedded with a .l tag instead of .lo or .o, causing the
libtool script to erroneously leave those .l files (that should have
been .lo libtool object files) and their associated symbols out of the
compilation.  (e.g. nmg_rt_isect.l, nurb_reverse.l, and wdb_comb_std.l)

Workaround: Either rerun autogen.sh so that the libtool wrapper script
is rebuilt (being sure to have the latest libtool, automake, and
autoconf installed), edit the Makefile.am files so that the
convenience library objects files are directly listed on the LIBADD,
or compile static (--disable-shared).


@


14.7
log
@consistency on BRL-CAD name use, s/BRLCAD/BRL-CAD/
@
text
@d4 6
a9 22
Note that by setting the compiler flags, configure seems to skip the
check for maximum shell command line length.  Be careful not to place
the source in a directory too deep.  The libtool script wrapper which
runs bwish builds a command line that is too long for the shell to
handle.  So for example, placing the source in:

	/home/username/CAD/mips64_brlcad-7.2.0

is known to cause a build failure.  On the other hand, the following:

	/home/username/CAD/m6_72

resulted in a successful build.

Certain versions of the gcc compiler are known to crash with internal
error messages, for example on src/mged/animedit.c, when using
--enable-optimized (i.e. -O3).  The simple workaround for the problem
is to compile whatever directory is failing with -O2 instead:
	cd src/mged
	make CFLAGS="-O2 -DIRIX=6"
	cd ../..
	make
d26 52
@


14.6
log
@Documentation updates/fixes courtesy of Brian Rapp.
@
text
@d10 1
a10 1
	/home/username/BRLCAD/mips64_brlcad-7.2.0
d14 1
a14 1
	/home/username/BRLCAD/m6_72
@


14.5
log
@ack, API != ABI.  Genericize the home directory too.
@
text
@d4 5
a8 5
Note by setting the compiler flags, configure seems to skip the check
for maximum shell command line length is skipped.  Be careful not to
place the source in a directory too deep.  The libtool script wrapper
which runs bwish builds a command line that is too long for the shell
to handle.  So for example, placing the source in:
@


14.4
log
@no longer need to disable blt, build problem fixed (simple cast)
@
text
@d10 1
a10 1
	/vld/butler/BRLCAD/mips64_brlcad-7.2.0
d14 1
a14 1
	/vld/butler/BRLCAD/m6_72
d36 1
a36 1
	export SGI_API=-n32
d40 1
a40 1
	export SGI_API=-64
@


14.3
log
@update the documentation with comments about gcc crashing on -O3.  also provide the actual recommended production release build configure lines for 32-bit and 64-bit if only  for convenience to future releases.
@
text
@d37 1
a37 1
	./configure CC=cc --enable-optimized --enable-everything --disable-blt-build --prefix=/usr/brlcad/rel-MAJOR.MINOR.PATCH/mips32
d41 1
a41 1
	./configure CC=cc CFLAGS=-64 LDFLAGS=-64 --enable-64bit-build --enable-optimized --enable-everything --disable-blt-build --prefix=/usr/brlcad/rel-MAJOR.MINOR.PATCH/mips64
@


14.2
log
@trailing ws
@
text
@d18 8
d27 5
a31 1
For IRIX 64bit build:
d35 7
a41 3
For IRIX 32bit build:
	export SGI_ABI=-n32
	./configure CC=cc
@


14.2.2.1
log
@update from HEAD
@
text
@a17 8
Certain versions of the gcc compiler are known to crash with internal
error messages, for example on src/mged/animedit.c, when using
--enable-optimized (i.e. -O3).  The simple workaround for the problem
is to compile whatever directory is failing with -O2 instead:
	cd src/mged
	make CFLAGS="-O2 -DIRIX=6"
	cd ../..
	make
d19 1
a19 5
For IRIX 32-bit unoptimized /usr/brlcad build:
	export SGI_ABI=-n32
	./configure CC=cc

For IRIX 64-bit unoptimized /usr/brlcad build:
d23 3
a25 7
For IRIX 32-bit optimized production release build:
	export SGI_API=-n32
	./configure CC=cc --enable-optimized --enable-everything --disable-blt-build --prefix=/usr/brlcad/rel-MAJOR.MINOR.PATCH/mips32

For IRIX 64-bit optimized production release build:
	export SGI_API=-64
	./configure CC=cc CFLAGS=-64 LDFLAGS=-64 --enable-64bit-build --enable-optimized --enable-everything --disable-blt-build --prefix=/usr/brlcad/rel-MAJOR.MINOR.PATCH/mips64
@


14.1
log
@separate out the irix notes into it's own readme in the doc directory.  refer readers to the doc/README.* files in INSTALL
@
text
@d25 1
a25 1
	./configure CC=cc 
@


14.1.6.1
log
@merge changes from HEAD aka rel-7-6-4 to the rel-7-6-branch just in case someone peeks a gander or tries to continue/build the branch
@
text
@d25 1
a25 1
	./configure CC=cc
@


