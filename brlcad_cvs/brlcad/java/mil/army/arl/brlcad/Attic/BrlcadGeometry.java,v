head	1.3;
access;
symbols
	postmerge-20040405-ansi:1.2
	premerge-20040404-ansi:1.2
	postmerge-autoconf:1.2
	autoconf-freeze:1.2
	premerge-autoconf:1.2
	postmerge-20040315-windows:1.2
	premerge-20040315-windows:1.2
	windows-20040315-freeze:1.2.4.1
	autoconf-20031203:1.2
	autoconf-20031202:1.2
	autoconf-branch:1.2.0.2
	windows-branch:1.2.0.4;
locks; strict;
comment	@# @;


1.3
date	2004.05.21.17.48.54;	author morrison;	state dead;
branches;
next	1.2;

1.2
date	2003.10.07.15.10.14;	author rbowers;	state Exp;
branches
	1.2.4.1;
next	1.1;

1.1
date	2003.10.06.19.40.03;	author rbowers;	state Exp;
branches;
next	;

1.2.4.1
date	2004.03.12.09.57.47;	author morrison;	state Exp;
branches;
next	;


desc
@@


1.3
log
@moved to src/java/
@
text
@/* Generated by Together */

package mil.army.arl.brlcad;

import java.rmi.*;
import java.util.Vector;

/**
 * Provides a wrapper for BRL-CAD library capabilities.
 */
public interface BrlcadGeometry extends Remote {
    /**
     * Specifies the BRL-CAD target description and top level
     * object to be managed by the server.
     *
     * @@param geomInfo the name of the target description
     * @@return         a boolean indicating success or failure
     * @@see            SomethingElse
     */
    public boolean loadGeometry(String geomInfo) 
	throws RemoteException;

    /**
     * Performs a ray trace of the currently-loaded geometry.
     * <p>
     * Should return an ordered sequence(Vector) of Partitions
     *
     * @@param   origin The point at which the ray originates.
     *          dir    The direction in which the ray points.
     * @@return         An ordered sequence(Vector) of Partitions.
     * @@see            Elsewhere.
     */
    public Vect shootRay(Point origin, Vect dir)
	throws RemoteException;

    /**
     * Returns the bounding box of the top-level object
     * managed by this server.
     *
     * @@return       Bounding box of the top level object(s)
     */
    public BoundingBox getBoundingBox()
	throws RemoteException;

    /**
     * Returns bounding box of the specified object
     *
     * @@param item  The name of the object.
     * @@return      The bounding box of the object, null if the object does not exist.
     */
    public BoundingBox getBoundingBox(String item)
	throws RemoteException;
       
    /**
     * Returns the Title field in the database.
     *
     * @@return      Database title if it is set, null otherwise.
     */
    public String getTitle() 
	throws RemoteException;

    /**
     * Creates a tgc hole in the geometry. 
     * <p>
     * Note that there is no indication of the objects through 
     * which the hole goes. Will need to determine which regions 
     * from which to subtract the hole.
     *
     * @@param  origin   The origin of the hole.
     *         dir      The direction of the hole
     *         baseDiam The diameter of the hole at the origin.
     *         topDiam  The diameter of the hole at the 
     * @@return          Boolean true if successful.
     */
    public boolean makeHole(Point origin, Vect dir, 
			    float baseDiam, float topDiam)
	throws RemoteException;

    // FUTURE
    // shootBundle ()
    // shoots a bundle of rays and returns plates?
    // To support homogenization.
}
@


1.2
log
@-* javadoc-ified existing comments.
@
text
@@


1.2.4.1
log
@merge from HEAD
@
text
@@


1.1
log
@-* Added java package hierarchy and preliminary classes for the BRL-CAD
   geometry server.
@
text
@d8 3
d12 8
a19 4
    // loadGeometry(String geomInfo)
    // Loads geometry. In the BRL-CAD context we need a database file
    // and the objects to load. If we can find a way to make the details
    // opaque that would be cool.
d23 10
a32 5
    // ====
    // Geometry Query Routines
    // ====
    // shootRay (point, direction)
    // should return an ordered sequence(Vector) of Partitions
d36 6
a41 2
    // getBoundingBox()
    // Returns bounding box of the top level object(s)
d45 6
a50 2
    // getBoundingBox(String item)
    // Returns bounding box of the specified object
d53 7
a59 8

    // ====
    // Other Queries
    // ====
    // getTitle()
    // Returns the Title field in the database, if set/supported, \
    // "No Title" otherwise
    public String getTitle()
d62 13
a74 7
    // ====
    // Dynamic geometry
    // ====
    // makeHole
    // Creates a tgc hole in the geometry. Note that there is no indication
    // of the objects through which the hole goes. Will need to determine which
    // regions to subtract the hole from.
d78 1
@

