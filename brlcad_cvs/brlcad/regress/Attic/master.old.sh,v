head	1.2;
access;
symbols
	ansi-20040405-merged:1.1
	postmerge-20040405-ansi:1.1
	premerge-20040404-ansi:1.1
	postmerge-autoconf:1.1
	autoconf-freeze:1.1
	premerge-autoconf:1.1
	postmerge-20040315-windows:1.1
	premerge-20040315-windows:1.1
	windows-20040315-freeze:1.1
	autoconf-20031203:1.1
	autoconf-20031202:1.1
	autoconf-branch:1.1.0.12
	phong-branch:1.1.0.10
	photonmap-branch:1.1.0.8
	rel-6-1-DP:1.1
	windows-branch:1.1.0.6
	rel-6-0-2:1.1
	ansi-branch:1.1.0.4
	rel-6-0-1-branch:1.1.0.2
	hartley-6-0-post:1.1
	hartley-6-0-pre:1.1
	rel-6-0-1:1.1
	rel-6-0:1.1;
locks; strict;
comment	@# @;


1.2
date	2004.05.19.19.16.08;	author morrison;	state dead;
branches;
next	1.1;

1.1
date	2001.07.23.19.43.39;	author morrison;	state Exp;
branches;
next	;


desc
@@


1.2
log
@The old regression test scripts are being replaced by something else.  Likely it'll be Corredor with some unit test framework.  The old scripts are so far out of sync and so inadequate that it's simply not worth it any more.
@
text
@#!/bin/sh
#
#  This is the master script for the BRL-CAD regression tests.  This script
#  is run first, to check out the source code and set up the semaphore files
#  for each of the client architectures.

USAGE="echo Usage: $0 -d regress_dir [-c cvs_binary] [-R cvs_repository]"


args=`getopt d:c:R: $*`

if [ $? != 0 ] ; then
	eval $USAGE
	exit 2
fi

set -- $args

CVS=cvs
REPOSITORY=/c/CVS

for i in $* ; do
	case "$i" in
		-R)	
			REPOSITORY=$2;
			shift 2;;
		-d)
			REGRESS_DIR=$2;
			export REGRESS_DIR
			shift 2;;
		-c)
			CVS=$2;
			shift 2;;
		--)
			shift; break;;
	esac
done

export CVS
export REPOSITORY

if [ X$REGRESS_DIR = X ] ; then
	echo "Must specify regression directory"
	eval $USAGE
	exit 2
fi

#
#  Make sure the regression director exists
#
if [ ! -d $REGRESS_DIR ] ; then
	echo directory $REGRESS_DIR not present
	exit
fi

#
# clean out the contents of the directory
#
rm -rf $REGRESS_DIR/*
if [ $? != 0 ] ; then
	echo "Error cleaning out regression directroy $REGRESS_DIR"
	exit
fi

cd $REGRESS_DIR


#
# Get a copy of the cad package
#
$CVS -Q -d $REPOSITORY get brlcad
$CVS -Q -d $REPOSITORY release brlcad

#
# Touch a file for each architecture that we support.  The clients wait for
# this file to be created before starting their build.
#
for ARCH in m4i64 m4i65 7d fbsd li; do
	touch start_$ARCH
done
@


1.1
log
@rebuild of the regression test suite

master.sh now uses a new utility library
client.sh was broken into different stage files with inidividual post-build tests in the tests.d directory
client scripts will be updated again later to conform more robustly with new testing architecture
@
text
@@

