head	11.7;
access;
symbols
	ansi-20040405-merged:11.3.4.1
	postmerge-20040405-ansi:11.5
	premerge-20040404-ansi:11.5
	postmerge-autoconf:11.5
	autoconf-freeze:11.4.4.2
	premerge-autoconf:11.5
	postmerge-20040315-windows:11.5
	premerge-20040315-windows:11.5
	windows-20040315-freeze:11.3.6.1
	autoconf-20031203:11.4
	autoconf-20031202:11.4
	autoconf-branch:11.4.0.4
	phong-branch:11.4.0.2
	photonmap-branch:11.3.0.8
	rel-6-1-DP:11.3
	windows-branch:11.3.0.6
	rel-6-0-2:11.3
	ansi-branch:11.3.0.4
	rel-6-0-1-branch:11.3.0.2
	hartley-6-0-post:11.3
	hartley-6-0-pre:11.3
	rel-6-0-1:11.3
	rel-6-0:11.3
	rel-5-4:11.2
	offsite-5-3-pre:11.3
	rel-5-3:11.2
	rel-5-2:11.2
	rel-5-1-branch:11.2.0.2
	rel-5-1:11.2
	rel-5-0:11.2
	rel-5-0-beta:11.2
	rel-4-5:11.1
	ctj-4-5-post:11.1
	ctj-4-5-pre:11.1
	rel-4-4:11.1
	rel-4-0:10.1
	rel-3-5:9.1
	rel-3-0:8.1
	rel-2-3:7.1
	rel-2-0:6.1
	rel-1-24:5.1
	rel-1-20:4.2
	rel-1-10:4.1
	rt-2:2.2;
locks; strict;
comment	@ * @;


11.7
date	2004.05.21.17.47.37;	author morrison;	state dead;
branches;
next	11.6;

11.6
date	2004.05.10.15.30.48;	author erikg;	state Exp;
branches;
next	11.5;

11.5
date	2004.02.02.17.39.31;	author morrison;	state Exp;
branches;
next	11.4;

11.4
date	2003.05.17.00.37.14;	author morrison;	state Exp;
branches
	11.4.4.1;
next	11.3;

11.3
date	2000.08.19.03.10.42;	author mike;	state Exp;
branches
	11.3.4.1
	11.3.6.1
	11.3.8.1;
next	11.2;

11.2
date	98.10.21.17.14.27;	author bparker;	state Exp;
branches;
next	11.1;

11.1
date	95.01.04.10.02.45;	author mike;	state Rel4_4;
branches;
next	10.2;

10.2
date	94.08.09.14.59.27;	author gdurf;	state Exp;
branches;
next	10.1;

10.1
date	91.10.12.06.43.13;	author mike;	state Rel4_0;
branches;
next	9.1;

9.1
date	89.05.19.06.02.01;	author mike;	state Rel3_5;
branches;
next	8.1;

8.1
date	88.10.05.00.35.38;	author mike;	state Rel3_0;
branches;
next	7.2;

7.2
date	87.11.05.05.04.00;	author mike;	state Exp;
branches;
next	7.1;

7.1
date	87.11.02.23.58.56;	author mike;	state Rel;
branches;
next	6.1;

6.1
date	87.07.11.08.02.11;	author mike;	state Rel;
branches;
next	5.1;

5.1
date	87.06.24.22.18.22;	author mike;	state Rel;
branches;
next	4.2;

4.2
date	87.02.13.00.05.56;	author mike;	state Exp;
branches;
next	4.1;

4.1
date	86.12.29.03.19.36;	author mike;	state Rel1;
branches;
next	2.3;

2.3
date	86.08.12.06.47.20;	author mike;	state Exp;
branches;
next	2.2;

2.2
date	85.08.07.05.17.10;	author mike;	state Exp;
branches;
next	2.1;

2.1
date	85.03.11.23.54.16;	author mike;	state Prod;
branches;
next	1.3;

1.3
date	85.01.17.05.11.43;	author mike;	state Exp;
branches;
next	1.2;

1.2
date	84.11.20.04.22.58;	author mike;	state Exp;
branches;
next	1.1;

1.1
date	84.11.16.19.48.20;	author mike;	state Exp;
branches;
next	;

11.3.4.1
date	2004.03.17.21.21.55;	author morrison;	state Exp;
branches;
next	;

11.3.6.1
date	2004.03.11.23.46.33;	author morrison;	state Exp;
branches;
next	;

11.3.8.1
date	2003.08.26.14.03.43;	author justin;	state Exp;
branches;
next	;

11.4.4.1
date	2004.02.12.18.34.13;	author erikg;	state Exp;
branches;
next	11.4.4.2;

11.4.4.2
date	2004.03.15.14.07.35;	author erikg;	state Exp;
branches;
next	;


desc
@2-D line clipper
@


11.7
log
@moved to src/mged/
@
text
@/*
 *			C L I P . C
 *
 *  Functions -
 *	clip	clip a 2-D integer line seg against the size of the display
 *	vclip	clip a 3-D floating line segment against a bounding RPP.
 *
 *  Authors -
 *	clip() was written by Doug Kingston, 14 October 81
 *	Based on the clipping routine in "Principles of Computer
 *	Graphics" by Newman and Sproull, 1973, McGraw/Hill.
 *
 *	vclip() was adapted from RT by Mike Muuss, 17 January 1985.
 *
 *  Source -
 *	SECAD/VLD Computing Consortium, Bldg 394
 *	The U. S. Army Ballistic Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005
 *  
 *  Copyright Notice -
 *	This software is Copyright (C) 1985-2004 by the United States Army.
 *	All rights reserved.
 */
#ifndef lint
static const char RCSid[] = "@@(#)$Header: /n/xoff/cvs/brlcad/mged/clip.c,v 11.6 2004/05/10 15:30:48 erikg Exp $ (BRL)";
#endif

#ifdef HAVE_CONFIG_H
# include "config.h"
#endif



#include <stdio.h>
#include "machine.h"
#include "vmath.h"
#include "bu.h"
#include "tcl.h"

#include "mged_dm.h"

static int	code();

int
clip (xp1, yp1, xp2, yp2)
vect_t	xp1, yp1, xp2, yp2;
{
	char code1, code2;

	code1 = code (*xp1, *yp1);
	code2 = code (*xp2, *yp2);

	while (code1 || code2) {
		if (code1 & code2)
			return (-1);	/* No part is visible */

		/* SWAP codes, X's, and Y's */
		if (code1 == 0) {
			char ctemp;
			fastf_t temp;

			ctemp = code1;
			code1 = code2;
			code2 = ctemp;

			temp = *xp1;
			*xp1 = *xp2;
			*xp2 = temp;

			temp = *yp1;
			*yp1 = *yp2;
			*yp2 = temp;
		}

		if (code1 & 01)  {	/* Push toward left edge */
			*yp1 = *yp1 + (*yp2-*yp1)*(GED_MIN-*xp1)/(*xp2-*xp1);
			*xp1 = GED_MIN;
		}
		else if (code1 & 02)  {	/* Push toward right edge */
			*yp1 = *yp1 + (*yp2-*yp1)*(GED_MAX-*xp1)/(*xp2-*xp1);
			*xp1 = GED_MAX;
		}
		else if (code1 & 04)  {	/* Push toward bottom edge */
			*xp1 = *xp1 + (*xp2-*xp1)*(GED_MIN-*yp1)/(*yp2-*yp1);
			*yp1 = GED_MIN;
		}
		else if (code1 & 010)  {	/* Push toward top edge */
			*xp1 = *xp1 + (*xp2-*xp1)*(GED_MAX-*yp1)/(*yp2-*yp1);
			*yp1 = GED_MAX;
		}

		code1 = code (*xp1, *yp1);
	}

	return (0);
}

static int
code (x, y)
fastf_t x, y;
{
	int cval;

	cval = 0;
	if (x < GED_MIN)
		cval |= 01;
	else if (x > GED_MAX)
		cval |= 02;

	if (y < GED_MIN)
		cval |= 04;
	else if (y > GED_MAX)
		cval |= 010;

	return (cval);
}

#define EPSILON		0.0001
#define INFINITY	100000000.0

/*
 *			V C L I P
 *
 *  Clip a ray against a rectangular parallelpiped (RPP)
 *  that has faces parallel to the coordinate planes (a clipping RPP).
 *  The RPP is defined by a minimum point and a maximum point.
 *
 *  Returns -
 *	 0  if ray does not hit RPP,
 *	!0  if ray hits RPP.
 *
 *  Implicit Return -
 *	if !0 was returned, "a" and "b" have been clipped to the RPP.
 */
int vclip( vect_t a, vect_t b, register fastf_t *min, register fastf_t *max )
{
	static vect_t diff;
	static double sv;
	static double st;
	static double mindist, maxdist;
	register fastf_t *pt = &a[0];
	register fastf_t *dir = &diff[0];
	register int i;

	mindist = -INFINITY;
	maxdist = INFINITY;
	VSUB2( diff, b, a );

	for( i=0; i < 3; i++, pt++, dir++, max++, min++ )  {
		if( *dir < -EPSILON )  {
			if( (sv = (*min - *pt) / *dir) < 0.0 )
				return(0);	/* MISS */
			if(maxdist > sv)
				maxdist = sv;
			if( mindist < (st = (*max - *pt) / *dir) )
				mindist = st;
		}  else if( *dir > EPSILON )  {
			if( (st = (*max - *pt) / *dir) < 0.0 )
				return(0);	/* MISS */
			if(maxdist > st)
				maxdist = st;
			if( mindist < ((sv = (*min - *pt) / *dir)) )
				mindist = sv;
		}  else  {
			/*
			 *  If direction component along this axis is NEAR 0,
			 *  (ie, this ray is aligned with this axis),
			 *  merely check against the boundaries.
			 */
			if( (*min > *pt) || (*max < *pt) )
				return(0);	/* MISS */;
		}
	}
	if( mindist >= maxdist )
		return(0);	/* MISS */

	if( mindist > 1 || maxdist < 0 )
		return(0);	/* MISS */

	if( mindist <= 0 && maxdist >= 1 )
		return(1);	/* HIT, no clipping needed */

	/* Don't grow one end of a contained segment */
	if( mindist < 0 )
		mindist = 0;
	if( maxdist > 1 )
		maxdist = 1;

	/* Compute actual intercept points */
	VJOIN1( b, a, maxdist, diff );		/* b must go first */
	VJOIN1( a, a, mindist, diff );
	return(1);		/* HIT */
}
@


11.6
log
@change conf.h to a wrapped config.h
@
text
@d25 1
a25 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/mged/clip.c,v 11.5 2004/02/02 17:39:31 morrison Exp $ (BRL)";
@


11.5
log
@update copyright to include span through 2003
@
text
@d25 1
a25 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/mged/clip.c,v 11.4 2003/05/17 00:37:14 morrison Exp $ (BRL)";
d28 5
a32 1
#include "conf.h"
@


11.4
log
@re-fixed defines so that mged will build undependantly -- X is not *required*
@
text
@d21 1
a21 1
 *	This software is Copyright (C) 1985 by the United States Army.
d25 1
a25 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/mged/clip.c,v 11.3 2000/08/19 03:10:42 mike Exp $ (BRL)";
@


11.4.4.1
log
@merge from HEAD
@
text
@d21 1
a21 1
 *	This software is Copyright (C) 1985-2004 by the United States Army.
d25 1
a25 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/mged/clip.c,v 11.5 2004/02/02 17:39:31 morrison Exp $ (BRL)";
@


11.4.4.2
log
@merge from head
@
text
@d25 1
a25 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/mged/clip.c,v 11.4.4.1 2004/02/12 18:34:13 erikg Exp $ (BRL)";
@


11.3
log
@
const RCSid
@
text
@d25 1
a25 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/mged/clip.c,v 11.2 1998/10/21 17:14:27 bparker Exp $ (BRL)";
d33 4
a116 1

d131 1
a131 3
vclip( a, b, min, max )
vect_t a, b;
register fastf_t *min, *max;
@


11.3.4.1
log
@sync branch with HEAD
@
text
@d21 1
a21 1
 *	This software is Copyright (C) 1985-2004 by the United States Army.
d25 1
a25 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
a32 4
#include "bu.h"
#include "tcl.h"

#include "mged_dm.h"
d113 1
d128 3
a130 1
int vclip( vect_t a, vect_t b, register fastf_t *min, register fastf_t *max )
@


11.3.6.1
log
@sync to HEAD...
@
text
@d21 1
a21 1
 *	This software is Copyright (C) 1985-2004 by the United States Army.
d25 1
a25 1
static const char RCSid[] = "@@(#)$Header: /n/cad/c/CVS/brlcad/mged/clip.c,v 11.5 2004/02/02 17:39:31 morrison Exp $ (BRL)";
a32 4
#include "bu.h"
#include "tcl.h"

#include "mged_dm.h"
d113 1
d128 3
a130 1
int vclip( vect_t a, vect_t b, register fastf_t *min, register fastf_t *max )
@


11.3.8.1
log
@updated for merging
@
text
@d25 1
a25 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/mged/clip.c,v 11.4 2003/05/17 00:37:14 morrison Exp $ (BRL)";
a32 4
#include "bu.h"
#include "tcl.h"

#include "mged_dm.h"
d113 1
d128 3
a130 1
int vclip( vect_t a, vect_t b, register fastf_t *min, register fastf_t *max )
@


11.2
log
@*- replace some use of literals with macros
@
text
@d25 1
a25 1
static char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/mged/clip.c,v 11.1 1995/01/04 10:02:45 mike Rel4_4 $ (BRL)";
@


11.1
log
@Release_4.4
@
text
@d25 1
a25 1
static char RCSid[] = "@@(#)$Header: /m/cad/mged/RCS/clip.c,v 10.2 94/08/09 14:59:27 gdurf Exp $ (BRL)";
d68 2
a69 2
			*yp1 = *yp1 + (*yp2-*yp1)*(-2048.0-*xp1)/(*xp2-*xp1);
			*xp1 = -2048.0;
d72 2
a73 2
			*yp1 = *yp1 + (*yp2-*yp1)*(2047.0-*xp1)/(*xp2-*xp1);
			*xp1 = 2047.0;
d76 2
a77 2
			*xp1 = *xp1 + (*xp2-*xp1)*(-2048.0-*yp1)/(*yp2-*yp1);
			*yp1 = -2048.0;
d80 2
a81 2
			*xp1 = *xp1 + (*xp2-*xp1)*(2047.0-*yp1)/(*yp2-*yp1);
			*yp1 = 2047.0;
d97 1
a97 1
	if (x < -2048.0)
d99 1
a99 1
	else if (x > 2047.0)
d102 1
a102 1
	if (y < -2048.0)
d104 1
a104 1
	else if (y > 2047.0)
@


10.2
log
@Added include
@
text
@d25 1
a25 1
static char RCSid[] = "@@(#)$Header: /m/cad/mged/RCS/clip.c,v 10.1 1991/10/12 06:43:13 mike Rel4_0 gdurf $ (BRL)";
@


10.1
log
@Release_4.0
@
text
@d25 1
a25 1
static char RCSid[] = "@@(#)$Header: clip.c,v 9.1 89/05/19 06:02:01 mike Rel3_5 $ (BRL)";
d27 2
@


9.1
log
@Release_3.5
@
text
@d25 1
a25 1
static char RCSid[] = "@@(#)$Header: clip.c,v 8.1 88/10/05 00:35:38 mike Rel3_0 $ (BRL)";
@


8.1
log
@Release_3.0
@
text
@d25 1
a25 1
static char RCSid[] = "@@(#)$Header: clip.c,v 7.2 87/11/05 05:04:00 mike Exp $ (BRL)";
@


7.2
log
@Eliminated local machine.h, converted to fastf_t, now link with librt.a
@
text
@d25 1
a25 1
static char RCSid[] = "@@(#)$Header: clip.c,v 7.1 87/11/02 23:58:56 mike Rel $ (BRL)";
@


7.1
log
@Release 2.3
@
text
@d25 1
a25 1
static char RCSid[] = "@@(#)$Header: clip.c,v 6.1 87/07/11 08:02:11 mike Rel $ (BRL)";
d29 1
a29 1
#include "./machine.h"	/* special copy */
d36 1
a36 1
float *xp1, *yp1, *xp2, *yp2;
d50 1
a50 1
			float temp;
d90 1
a90 1
float x, y;
@


6.1
log
@Release 2.0
@
text
@d25 1
a25 1
static char RCSid[] = "@@(#)$Header: clip.c,v 5.1 87/06/24 22:18:22 mike Rel $ (BRL)";
@


5.1
log
@Release 1.24
@
text
@d25 1
a25 1
static char RCSid[] = "@@(#)$Header: clip.c,v 4.2 87/02/13 00:05:56 mike Exp $ (BRL)";
@


4.2
log
@Release 1.20 -- First Formal Release
@
text
@d25 1
a25 1
static char RCSid[] = "@@(#)$Header: clip.c,v 4.1 86/12/29 03:19:36 mike Rel1 $ (BRL)";
@


4.1
log
@BRL CAD Distribution Release 1.10
@
text
@d25 1
a25 1
static char RCSid[] = "@@(#)$Header: clip.c,v 2.3 86/08/12 06:47:20 mike Exp $ (BRL)";
@


2.3
log
@Changed #includes for CC -I../h
@
text
@d25 1
a25 1
static char RCSid[] = "@@(#)$Header: clip.c,v 2.2 85/08/07 05:17:10 mike Exp $ (BRL)";
@


2.2
log
@Changed to use common ../h/vmath.h
@
text
@d25 1
a25 1
static char RCSid[] = "@@(#)$Header: clip.c,v 2.1 85/03/11 23:54:16 mike Prod $ (BRL)";
d30 1
a30 1
#include "../h/vmath.h"
@


2.1
log
@First production release.
Includes lint cleanups from Gwyn.
@
text
@d25 1
a25 1
static char RCSid[] = "@@(#)$Header: clip.c,v 1.3 85/01/17 05:11:43 mike Exp $ (BRL)";
d29 1
a29 1
#include "ged_types.h"
a107 1
typedef float fastf_t;		/* for compatability with ged_types.h */
d183 2
a184 2
	VCOMP1( b, a, maxdist, diff );		/* b must go first */
	VCOMP1( a, a, mindist, diff );
@


1.3
log
@Added vclip() function to clip 3-D real vectors against a bounding RPP.
@
text
@d4 2
a5 2
 * Functions -
 *	clip	clip a 2-D integer line segment against the size of the display
d8 1
a8 1
 * Author -
d15 1
a15 1
 * Source -
d19 4
d25 1
a25 1
static char RCSid[] = "@@(#)$Header$ (BRL)";
d30 1
a30 1
#include "vmath.h"
@


1.2
log
@Vector lists saved, multiple display managers supported.
@
text
@d5 2
a6 1
 *	clip	clip a line segment against the size of the display
d9 1
a9 1
 *	This module written by Doug Kingston, 14 October 81
d13 1
a13 1
 *			R E V I S I O N   H I S T O R Y
d15 4
a18 3
 *	05/27/83  MJM	Adapted code to run on VAX;  numerous cleanups.
 *
 *	09-Sep-83 DAG	Overhauled.
d20 3
d24 4
d102 81
@


1.1
log
@Initial revision
@
text
@a0 1
/*	SCCSID	%W%	%E%	*/
d2 1
a2 1
 *			G E D 1 0 . C
@
