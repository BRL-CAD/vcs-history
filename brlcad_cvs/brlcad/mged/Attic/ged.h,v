head	11.97;
access;
symbols
	ansi-20040405-merged:11.93.2.4
	postmerge-20040405-ansi:11.96
	premerge-20040404-ansi:11.95
	postmerge-autoconf:11.95
	autoconf-freeze:11.93.10.3
	premerge-autoconf:11.95
	postmerge-20040315-windows:11.95
	premerge-20040315-windows:11.94
	windows-20040315-freeze:11.93.4.3
	autoconf-20031203:11.93
	autoconf-20031202:11.93
	autoconf-branch:11.93.0.10
	phong-branch:11.93.0.8
	photonmap-branch:11.93.0.6
	rel-6-1-DP:11.93
	windows-branch:11.93.0.4
	rel-6-0-2:11.90
	ansi-branch:11.93.0.2
	rel-6-0-1-branch:11.90.0.2
	hartley-6-0-post:11.92
	hartley-6-0-pre:11.91
	rel-6-0-1:11.90
	rel-6-0:11.90
	rel-5-4:11.79.2.2
	offsite-5-3-pre:11.85
	rel-5-3:11.79.2.2
	rel-5-2:11.79
	rel-5-1-branch:11.79.0.2
	rel-5-1:11.79
	rel-5-0:11.77
	rel-5-0-beta:11.76
	rel-4-5:11.70
	ctj-4-5-post:11.58
	ctj-4-5-pre:11.58
	rel-4-4:11.1
	rel-4-0:10.1
	rel-3-5:9.1
	rel-3-0:8.1
	rel-2-3:7.1
	rel-2-0:6.1
	rel-1-24:5.1
	rel-1-20:4.3
	rel-1-10:4.1
	rt-2:2.7;
locks; strict;
comment	@ * @;


11.97
date	2004.05.21.17.47.43;	author morrison;	state dead;
branches;
next	11.96;

11.96
date	2004.04.05.09.09.11;	author morrison;	state Exp;
branches;
next	11.95;

11.95
date	2004.03.16.21.15.11;	author morrison;	state Exp;
branches;
next	11.94;

11.94
date	2004.02.02.17.39.33;	author morrison;	state Exp;
branches;
next	11.93;

11.93
date	2002.08.20.17.08.23;	author jra;	state Exp;
branches
	11.93.2.1
	11.93.4.1
	11.93.10.1;
next	11.92;

11.92
date	2002.08.15.20.55.35;	author hartley;	state Exp;
branches;
next	11.91;

11.91
date	2002.08.12.18.25.38;	author morrison;	state Exp;
branches;
next	11.90;

11.90
date	2001.06.01.19.23.24;	author bparker;	state Exp;
branches;
next	11.89;

11.89
date	2001.04.02.18.10.11;	author jra;	state Exp;
branches;
next	11.88;

11.88
date	2001.03.21.22.15.58;	author bparker;	state Exp;
branches;
next	11.87;

11.87
date	2001.03.21.20.08.59;	author bparker;	state Exp;
branches;
next	11.86;

11.86
date	2001.03.19.22.20.01;	author butler;	state Exp;
branches;
next	11.85;

11.85
date	2000.11.16.21.20.29;	author bparker;	state Exp;
branches;
next	11.84;

11.84
date	2000.10.24.19.05.06;	author mike;	state Exp;
branches;
next	11.83;

11.83
date	2000.09.07.02.58.52;	author mike;	state Exp;
branches;
next	11.82;

11.82
date	2000.09.07.02.43.21;	author mike;	state Exp;
branches;
next	11.81;

11.81
date	2000.09.07.02.23.44;	author mike;	state Exp;
branches;
next	11.80;

11.80
date	2000.07.24.19.27.31;	author mike;	state Exp;
branches;
next	11.79;

11.79
date	2000.01.07.04.21.20;	author mike;	state Exp;
branches
	11.79.2.1;
next	11.78;

11.78
date	99.10.19.20.34.37;	author jra;	state Exp;
branches;
next	11.77;

11.77
date	99.09.01.18.55.10;	author bparker;	state Exp;
branches;
next	11.76;

11.76
date	98.11.06.22.32.41;	author bparker;	state Exp;
branches;
next	11.75;

11.75
date	98.10.21.16.50.43;	author bparker;	state Exp;
branches;
next	11.74;

11.74
date	98.06.11.14.28.13;	author bparker;	state Exp;
branches;
next	11.73;

11.73
date	98.03.19.18.04.22;	author bparker;	state Exp;
branches;
next	11.72;

11.72
date	98.03.06.22.37.22;	author bparker;	state Exp;
branches;
next	11.71;

11.71
date	98.02.20.23.22.37;	author bparker;	state Exp;
branches;
next	11.70;

11.70
date	98.02.06.21.48.37;	author bparker;	state Exp;
branches;
next	11.69;

11.69
date	98.01.28.16.18.44;	author bparker;	state Exp;
branches;
next	11.68;

11.68
date	98.01.16.21.50.50;	author bparker;	state Exp;
branches;
next	11.67;

11.67
date	97.12.22.18.39.14;	author bparker;	state Exp;
branches;
next	11.66;

11.66
date	97.11.12.21.53.25;	author bparker;	state Exp;
branches;
next	11.65;

11.65
date	97.11.06.20.06.38;	author bparker;	state Exp;
branches;
next	11.64;

11.64
date	97.09.08.18.35.11;	author bparker;	state Exp;
branches;
next	11.63;

11.63
date	97.09.03.14.17.07;	author bparker;	state Exp;
branches;
next	11.62;

11.62
date	97.07.25.20.51.10;	author bparker;	state Exp;
branches;
next	11.61;

11.61
date	97.06.25.13.44.08;	author bparker;	state Exp;
branches;
next	11.60;

11.60
date	97.06.14.02.28.59;	author gdurf;	state Exp;
branches;
next	11.59;

11.59
date	97.06.14.02.28.12;	author gdurf;	state Exp;
branches;
next	11.58;

11.58
date	97.06.03.16.03.59;	author pjt;	state Exp;
branches;
next	11.57;

11.57
date	97.05.29.14.16.43;	author bparker;	state Exp;
branches;
next	11.56;

11.56
date	97.04.16.20.24.33;	author bparker;	state Exp;
branches;
next	11.55;

11.55
date	97.03.25.14.43.44;	author jra;	state Exp;
branches;
next	11.54;

11.54
date	97.03.12.20.49.00;	author jra;	state Exp;
branches;
next	11.53;

11.53
date	97.02.28.21.19.22;	author bparker;	state Exp;
branches;
next	11.52;

11.52
date	97.02.04.22.18.20;	author bparker;	state Exp;
branches;
next	11.51;

11.51
date	97.01.24.20.50.06;	author bparker;	state Exp;
branches;
next	11.50;

11.50
date	97.01.10.18.30.27;	author bparker;	state Exp;
branches;
next	11.49;

11.49
date	96.12.30.22.41.20;	author bparker;	state Exp;
branches;
next	11.48;

11.48
date	96.12.13.23.10.54;	author bparker;	state Exp;
branches;
next	11.47;

11.47
date	96.12.09.23.01.26;	author bparker;	state Exp;
branches;
next	11.46;

11.46
date	96.11.27.08.53.41;	author mike;	state Exp;
branches;
next	11.45;

11.45
date	96.11.21.14.49.32;	author bparker;	state Exp;
branches;
next	11.44;

11.44
date	96.11.19.21.01.48;	author bparker;	state Exp;
branches;
next	11.43;

11.43
date	96.11.01.22.16.05;	author bparker;	state Exp;
branches;
next	11.42;

11.42
date	96.09.25.20.22.19;	author bparker;	state Exp;
branches;
next	11.41;

11.41
date	96.09.17.21.19.40;	author bparker;	state Exp;
branches;
next	11.40;

11.40
date	96.09.03.20.02.37;	author bparker;	state Exp;
branches;
next	11.39;

11.39
date	96.08.27.20.30.05;	author bparker;	state Exp;
branches;
next	11.38;

11.38
date	96.08.22.20.48.58;	author bparker;	state Exp;
branches;
next	11.37;

11.37
date	96.07.30.21.29.22;	author bparker;	state Exp;
branches;
next	11.36;

11.36
date	96.07.25.18.53.40;	author bparker;	state Exp;
branches;
next	11.35;

11.35
date	96.06.21.16.03.52;	author bparker;	state Exp;
branches;
next	11.34;

11.34
date	96.06.14.20.12.20;	author bparker;	state Exp;
branches;
next	11.33;

11.33
date	96.05.24.18.48.12;	author bparker;	state Exp;
branches;
next	11.32;

11.32
date	96.05.02.21.33.02;	author bparker;	state Exp;
branches;
next	11.31;

11.31
date	96.04.24.16.20.56;	author bparker;	state Exp;
branches;
next	11.30;

11.30
date	96.04.18.20.28.43;	author bparker;	state Exp;
branches;
next	11.29;

11.29
date	96.04.03.22.01.20;	author bparker;	state Exp;
branches;
next	11.28;

11.28
date	96.04.01.22.12.35;	author bparker;	state Exp;
branches;
next	11.27;

11.27
date	96.03.22.18.40.34;	author bparker;	state Exp;
branches;
next	11.26;

11.26
date	96.03.11.21.46.28;	author bparker;	state Exp;
branches;
next	11.25;

11.25
date	96.02.28.21.33.59;	author bparker;	state Exp;
branches;
next	11.24;

11.24
date	96.02.12.21.48.33;	author bparker;	state Exp;
branches;
next	11.23;

11.23
date	96.02.09.22.13.46;	author bparker;	state Exp;
branches;
next	11.22;

11.22
date	96.02.01.18.32.09;	author pjt;	state Exp;
branches;
next	11.21;

11.21
date	96.02.01.17.19.04;	author bparker;	state Exp;
branches;
next	11.20;

11.20
date	96.01.17.22.11.03;	author bparker;	state Exp;
branches;
next	11.19;

11.19
date	96.01.05.22.08.48;	author bparker;	state Exp;
branches;
next	11.18;

11.18
date	95.12.27.22.33.51;	author bparker;	state Exp;
branches;
next	11.17;

11.17
date	95.12.07.16.33.44;	author jra;	state Exp;
branches;
next	11.16;

11.16
date	95.12.04.22.04.58;	author bparker;	state Exp;
branches;
next	11.15;

11.15
date	95.12.02.00.23.07;	author bparker;	state Exp;
branches;
next	11.14;

11.14
date	95.11.09.22.23.23;	author bparker;	state Exp;
branches;
next	11.13;

11.13
date	95.09.26.20.21.21;	author pjt;	state Exp;
branches;
next	11.12;

11.12
date	95.08.25.20.50.42;	author cnuzman;	state Exp;
branches;
next	11.11;

11.11
date	95.07.25.14.30.15;	author gdurf;	state Exp;
branches;
next	11.10;

11.10
date	95.07.25.14.27.36;	author gdurf;	state Exp;
branches;
next	11.9;

11.9
date	95.06.28.13.19.15;	author gdurf;	state Exp;
branches;
next	11.8;

11.8
date	95.06.23.20.21.42;	author pjt;	state Exp;
branches;
next	11.7;

11.7
date	95.03.10.20.46.24;	author mike;	state Exp;
branches;
next	11.6;

11.6
date	95.01.25.15.18.34;	author jra;	state Exp;
branches;
next	11.5;

11.5
date	95.01.25.13.20.30;	author jra;	state Exp;
branches;
next	11.4;

11.4
date	95.01.17.12.49.18;	author bparker;	state Exp;
branches;
next	11.3;

11.3
date	95.01.11.11.12.50;	author gdurf;	state Exp;
branches;
next	11.2;

11.2
date	95.01.10.17.12.09;	author gdurf;	state Exp;
branches;
next	11.1;

11.1
date	95.01.04.10.03.11;	author mike;	state Rel4_4;
branches;
next	10.23;

10.23
date	94.12.28.01.12.15;	author gdurf;	state Exp;
branches;
next	10.22;

10.22
date	94.12.27.17.55.17;	author gdurf;	state Exp;
branches;
next	10.21;

10.21
date	94.12.27.16.58.47;	author mike;	state Exp;
branches;
next	10.20;

10.20
date	94.12.23.23.48.17;	author gdurf;	state Exp;
branches;
next	10.19;

10.19
date	94.12.23.22.27.46;	author gdurf;	state Exp;
branches;
next	10.18;

10.18
date	94.12.23.14.20.47;	author gdurf;	state Exp;
branches;
next	10.17;

10.17
date	94.08.27.03.18.21;	author mike;	state Exp;
branches;
next	10.16;

10.16
date	94.08.19.16.13.24;	author pjt;	state Exp;
branches;
next	10.15;

10.15
date	94.08.17.16.16.38;	author pjt;	state Exp;
branches;
next	10.14;

10.14
date	94.08.09.18.14.39;	author gdurf;	state Exp;
branches;
next	10.13;

10.13
date	94.08.09.10.26.18;	author pjt;	state Exp;
branches;
next	10.12;

10.12
date	94.07.12.20.49.13;	author mike;	state Exp;
branches;
next	10.11;

10.11
date	94.06.03.17.29.28;	author gdurf;	state Exp;
branches;
next	10.10;

10.10
date	93.07.15.21.21.56;	author mike;	state Exp;
branches;
next	10.9;

10.9
date	92.08.24.19.51.05;	author mike;	state Exp;
branches;
next	10.8;

10.8
date	92.08.19.15.48.16;	author gdurf;	state Exp;
branches;
next	10.7;

10.7
date	92.06.25.21.05.41;	author butler;	state Exp;
branches;
next	10.6;

10.6
date	92.06.09.14.23.09;	author mike;	state Exp;
branches;
next	10.5;

10.5
date	92.04.18.00.40.43;	author mike;	state Exp;
branches;
next	10.4;

10.4
date	92.04.04.00.12.22;	author mike;	state Exp;
branches;
next	10.3;

10.3
date	91.12.18.08.10.25;	author mike;	state Exp;
branches;
next	10.2;

10.2
date	91.11.04.22.35.19;	author mike;	state Exp;
branches;
next	10.1;

10.1
date	91.10.12.06.43.44;	author mike;	state Rel4_0;
branches;
next	9.15;

9.15
date	91.10.11.11.33.01;	author butler;	state Exp;
branches;
next	9.14;

9.14
date	91.08.31.07.35.05;	author butler;	state Exp;
branches;
next	9.13;

9.13
date	91.07.01.22.33.44;	author mike;	state Exp;
branches;
next	9.12;

9.12
date	91.06.14.02.13.13;	author mike;	state Exp;
branches;
next	9.11;

9.11
date	91.06.12.22.15.12;	author mike;	state Exp;
branches;
next	9.10;

9.10
date	91.01.12.08.24.15;	author mike;	state Exp;
branches;
next	9.9;

9.9
date	91.01.12.08.01.39;	author mike;	state Exp;
branches;
next	9.8;

9.8
date	91.01.12.07.58.07;	author mike;	state Exp;
branches;
next	9.7;

9.7
date	90.12.07.23.10.31;	author mike;	state Exp;
branches;
next	9.6;

9.6
date	90.12.06.23.57.32;	author mike;	state Exp;
branches;
next	9.5;

9.5
date	90.05.01.00.43.01;	author mike;	state Exp;
branches;
next	9.4;

9.4
date	90.04.25.21.48.45;	author mike;	state Exp;
branches;
next	9.3;

9.3
date	90.04.21.06.02.33;	author mike;	state Exp;
branches;
next	9.2;

9.2
date	89.12.28.16.10.52;	author mike;	state Exp;
branches;
next	9.1;

9.1
date	89.05.19.06.03.13;	author mike;	state Rel3_5;
branches;
next	8.4;

8.4
date	89.04.21.04.43.22;	author mike;	state Exp;
branches;
next	8.3;

8.3
date	89.04.06.19.36.55;	author phil;	state Exp;
branches;
next	8.2;

8.2
date	88.12.06.00.38.28;	author mike;	state Exp;
branches;
next	8.1;

8.1
date	88.10.05.00.36.54;	author mike;	state Rel3_0;
branches;
next	7.6;

7.6
date	88.09.17.02.35.53;	author reschly;	state Exp;
branches;
next	7.5;

7.5
date	88.07.22.01.53.35;	author phil;	state Exp;
branches;
next	7.4;

7.4
date	88.05.15.23.04.28;	author mike;	state Exp;
branches;
next	7.3;

7.3
date	87.11.14.05.06.48;	author mike;	state Exp;
branches;
next	7.2;

7.2
date	87.11.05.05.02.37;	author mike;	state Exp;
branches;
next	7.1;

7.1
date	87.11.03.00.01.00;	author mike;	state Rel;
branches;
next	6.1;

6.1
date	87.07.11.08.04.14;	author mike;	state Rel;
branches;
next	5.1;

5.1
date	87.06.24.22.21.00;	author mike;	state Rel;
branches;
next	4.3;

4.3
date	87.02.13.00.07.50;	author mike;	state Exp;
branches;
next	4.2;

4.2
date	87.02.11.05.37.55;	author mike;	state Exp;
branches;
next	4.1;

4.1
date	86.12.29.03.21.53;	author mike;	state Rel1;
branches;
next	2.11;

2.11
date	86.12.19.04.34.53;	author mike;	state Exp;
branches;
next	2.10;

2.10
date	86.05.27.22.18.14;	author reschly;	state Exp;
branches;
next	2.9;

2.9
date	86.03.10.20.36.06;	author mike;	state Exp;
branches;
next	2.8;

2.8
date	85.09.14.05.32.47;	author mike;	state Exp;
branches;
next	2.7;

2.7
date	85.08.07.05.14.28;	author mike;	state Exp;
branches;
next	2.6;

2.6
date	85.05.29.23.19.12;	author mike;	state Exp;
branches;
next	2.5;

2.5
date	85.05.10.00.51.02;	author mike;	state Exp;
branches;
next	2.4;

2.4
date	85.05.09.22.22.54;	author mike;	state Exp;
branches;
next	2.3;

2.3
date	85.05.08.00.29.28;	author mike;	state Exp;
branches;
next	2.2;

2.2
date	85.05.03.01.44.22;	author mike;	state Exp;
branches;
next	2.1;

2.1
date	85.03.11.23.50.51;	author mike;	state Prod;
branches;
next	1.8;

1.8
date	85.02.05.04.08.14;	author mike;	state Exp;
branches;
next	1.7;

1.7
date	85.02.01.00.05.29;	author mike;	state Exp;
branches;
next	1.6;

1.6
date	85.01.16.02.15.20;	author mike;	state Exp;
branches;
next	1.5;

1.5
date	85.01.16.01.54.08;	author mike;	state Exp;
branches;
next	1.4;

1.4
date	84.11.22.06.55.07;	author mike;	state Exp;
branches;
next	1.3;

1.3
date	84.11.20.04.20.23;	author mike;	state Exp;
branches;
next	1.2;

1.2
date	84.11.17.05.33.45;	author mike;	state Exp;
branches;
next	1.1;

1.1
date	84.11.16.19.45.19;	author mike;	state Exp;
branches;
next	;

11.79.2.1
date	2000.11.15.21.31.19;	author bparker;	state Exp;
branches;
next	11.79.2.2;

11.79.2.2
date	2001.01.11.23.27.32;	author bparker;	state Exp;
branches;
next	;

11.93.2.1
date	2002.09.19.18.02.02;	author morrison;	state Exp;
branches;
next	11.93.2.2;

11.93.2.2
date	2004.03.17.21.21.59;	author morrison;	state Exp;
branches;
next	11.93.2.3;

11.93.2.3
date	2004.04.02.16.11.23;	author morrison;	state Exp;
branches;
next	11.93.2.4;

11.93.2.4
date	2004.04.05.03.14.19;	author morrison;	state Exp;
branches;
next	;

11.93.4.1
date	2002.09.26.23.04.11;	author morrison;	state Exp;
branches;
next	11.93.4.2;

11.93.4.2
date	2004.03.11.23.46.35;	author morrison;	state Exp;
branches;
next	11.93.4.3;

11.93.4.3
date	2004.03.12.17.37.09;	author morrison;	state Exp;
branches;
next	;

11.93.10.1
date	2004.02.12.18.34.14;	author erikg;	state Exp;
branches;
next	11.93.10.2;

11.93.10.2
date	2004.03.15.14.07.38;	author erikg;	state Exp;
branches;
next	11.93.10.3;

11.93.10.3
date	2004.03.18.18.10.30;	author erikg;	state Exp;
branches;
next	;


desc
@manifest constants for GED
@


11.97
log
@moved to src/mged/
@
text
@/*
 *			G E D . H
 *
 * This file contains all of the definitions local to
 * the GED graphics editor.
 *
 *	     V E R Y   I M P O R T A N T   N O T I C E ! ! !
 *
 *  Many people in the computer graphics field use post-multiplication,
 *  (thanks to Newman and Sproull) with row vectors, ie:
 *
 *		view_vec = model_vec * T
 *
 *  However, in the GED system, the more traditional representation
 *  of column vectors is used (ref: Gwyn).  Therefore, when transforming
 *  a vector by a matrix, pre-multiplication is used, ie:
 *
 *		view_vec = model2view_mat * model_vec
 *
 *  Furthermore, additional transformations are multiplied on the left, ie:
 *
 *		vec'  =  T1 * vec
 *		vec'' =  T2 * T1 * vec  =  T2 * vec'
 *
 *  The most notable implication of this is the location of the
 *  "delta" (translation) values in the matrix, ie:
 *
 *        x'     ( R0   R1   R2   Dx )      x
 *        y' =  (  R4   R5   R6   Dy  )  *  y
 *        z'    (  R8   R9   R10  Dz  )     z
 *        w'     (  0    0    0   1/s)      w
 *
 *  This of course requires that the rotation portion be computed
 *  using somewhat different formulas (see buildHrot for both kinds).
 *
 *  Source -
 *	SECAD/VLD Computing Consortium, Bldg 394
 *	The U. S. Army Ballistic Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005
 *  
 *  Copyright Notice -
 *	This software is Copyright (C) 1985-2004 by the United States Army.
 *	All rights reserved.
 *
 *  $Header: /n/xoff/cvs/brlcad/mged/ged.h,v 11.96 2004/04/05 09:09:11 morrison Exp $
 */

#ifndef WIN32
#include <sys/time.h>
#endif
#include <time.h>
#include "tcl.h"
#include "wdb.h"

/* Needed to define struct menu_item - RFH */
#include "./menu.h"

/* Needed to define struct w_dm - RFH */
#include "./mged_dm.h"

/* Needed to define struct solid - RFH */
#include "solid.h"

/* A hack around a compilation issue.  No need in fixing it now as the build
   process is about to be redone - RFH */
#ifndef SEEN_RT_NURB_INTERNAL
#define SEEN_RT_NURB_INTERNAL
struct rt_nurb_internal {
	long		magic;
	int	 	nsrf;		/* number of surfaces */
	struct face_g_snurb **srfs;	/* The surfaces themselves */
};
#endif

/*	Stuff needed from db.h */
#ifndef NAMESIZE

#define NAMESIZE 16
#define NAMEMOVE(from,to)       (void)strncpy(to, from, NAMESIZE)

#define MGED_DB_NAME "db"
#define MGED_INMEM_NAME ".inmem"
#define MGED_DG_NAME "dg"

#define ID_NO_UNIT	0		/* unspecified */
#define ID_MM_UNIT	1		/* millimeters (preferred) */
#define ID_UM_UNIT	2		/* micrometers */
#define ID_CM_UNIT	3		/* centimeters */
#define ID_M_UNIT	4		/* meters */
#define ID_KM_UNIT	5		/* kilometers */
#define ID_IN_UNIT	6		/* inches */
#define ID_FT_UNIT	7		/* feet */
#define ID_YD_UNIT	8		/* yards */
#define ID_MI_UNIT	9		/* miles */

#define ARB4	4	/* tetrahedron */
#define ARB5	5	/* pyramid */
#define ARB6	6	/* extruded triangle */
#define ARB7	7	/* weird 7-vertex shape */
#define ARB8	8	/* hexahedron */

#endif

#if USE_PROTOTYPES
#	define	MGED_EXTERN(type_and_name,args)	extern type_and_name args
#	define	MGED_ARGS(args)			args
#else
#	define	MGED_EXTERN(type_and_name,args)	extern type_and_name()
#	define	MGED_ARGS(args)			()
#endif

extern double	degtorad, radtodeg;	/* Defined in usepen.c */

/*
 * All GED files are stored in a fixed base unit (MM).
 * These factors convert database unit to local (or working) units.
 */
extern struct db_i	*dbip;		       /* defined in ged.c */
extern int		 dbih;		       /* defined in ged.c */
extern struct rt_wdb	*wdbp;			/* defined in ged.c */
extern struct dg_obj	*dgop;			/* defined in ged.c */
#define	base2local	(dbip->dbi_base2local)
#define local2base	(dbip->dbi_local2base)
#define	cur_title	(dbip->dbi_title)      /* current model title */

/* Some useful constants, if they haven't been defined elsewhere. */

#ifndef FALSE
# define FALSE 0
#endif

#ifndef TRUE
# define TRUE 1
#endif

#ifndef False
# define False (0)
#endif

#ifndef True
# define True (1)
#endif

/* Tolerances */
extern double		mged_abs_tol;		/* abs surface tolerance */
extern double		mged_rel_tol;		/* rel surface tolerance */
extern double		mged_nrm_tol;		/* surface normal tolerance */

/* default region codes       defined in mover.c */
extern int	item_default;
extern int	air_default;
extern int	mat_default;
extern int	los_default;

/*
 *  Definitions.
 *
 *  Solids are defined in "model space".
 *  The screen is in "view space".
 *  The visible part of view space is -1.0 <= x,y,z <= +1.0
 *
 *  The transformation from the origin of model space to the
 *  origin of view space (the "view center") is contained
 *  in the matrix "toViewcenter".  The viewing rotation is
 *  contained in the "Viewrot" matrix.  The viewscale factor
 *  (for [15] use) is kept in the float "Viewscale".
 *
 *  model2view = Viewscale * Viewrot * toViewcenter;
 *
 *  model2view is the matrix going from model space coordinates
 *  to the view coordinates, and view2model is the inverse.
 *  It is recomputed by new_mats() only.
 *
 * CHANGE matrix.  Defines the change between the un-edited and the
 * present state in the edited solid or combination.
 *
 * model2objview = modelchanges * model2view
 *
 *  For object editing and solid edit, model2objview translates
 *  from model space to view space with all the modelchanges too.
 *
 *  These are allocated storage in dozoom.c
 */

extern mat_t	modelchanges;		/* full changes this edit */
extern mat_t	incr_change;		/* change(s) from last cycle */
extern point_t	recip_vanishing_point;

/*
 * Identity matrix.  Handy to have around. - initialized in e1.c
 */
extern mat_t	identity;

/* defined in buttons.c */
extern fastf_t	acc_sc_sol;	/* accumulate solid scale factor */
extern fastf_t  acc_sc_obj;	/* accumulate global object scale factor */
extern fastf_t	acc_sc[3];	/* accumulate local object scale factors */
extern mat_t	acc_rot_sol;	/* accumulate solid rotations */

/* defined in dodraw.c */
extern int	no_memory;	/* flag indicating memory for drawing is used up */

/* defined in menu.c */
extern int	menuflag;	/* flag indicating if a menu item is selected */

/* defined in ged.c */
extern FILE *infile;
extern FILE *outfile;
extern jmp_buf jmp_env;

/*
 *	GED functions referenced in more than one source file:
 */
extern int              tran(), irot();
extern void             mged_setup(void);
extern void		dir_build(), buildHrot(fastf_t *, double, double, double), dozoom(int which_eye),
			pr_schain(struct solid *startp, int lvl), itoa(int n, char *s, int w);
extern void		eraseobj(register struct directory **dpp), eraseobjall(register struct directory **dpp), mged_finish(int exitcode), slewview(fastf_t *view_pos),
			mmenu_init(void), moveHinstance(struct directory *cdp, struct directory *dp, matp_t xlate), moveHobj(register struct directory *dp, matp_t xlate),
			quit(void), refresh(void), rej_sedit(), sedit(void),
			setview(double a1, double a2, double a3),
			adcursor(void), mmenu_display(int y_top), mmenu_set(int index, struct menu_item *value), mmenu_set_all(int index, struct menu_item *value),
			col_item(), col_putchar(), col_eol(), col_pr4v();
extern void		sedit_menu(void);
extern void		attach(), get_attached(void);
extern void		(*cur_sigint)();	/* Current SIGINT status */
extern void		sig2(int), sig3(int);

extern void		aexists(char *name);
extern int		clip(fastf_t *, fastf_t *, fastf_t *, fastf_t *), getname(), use_pen(), dir_print();
extern int              mged_cmd_arg_check(), release(char *name, int need_close);
extern struct directory	*combadd(), **dir_getspace();
extern void		ellipse();

/* rt_memalloc.c */
MGED_EXTERN(unsigned long rt_memalloc, (struct mem_map **pp, unsigned size) );
MGED_EXTERN(unsigned long rt_memget, (struct mem_map **pp, unsigned int size,
	unsigned int place) );
MGED_EXTERN(void rt_memfree, (struct mem_map **pp, unsigned size, unsigned long addr) );
MGED_EXTERN(void rt_mempurge, (struct mem_map **pp) );
MGED_EXTERN(void rt_memprint, (struct mem_map **pp) );

/* buttons.c */
MGED_EXTERN(void button, (int bnum) );
MGED_EXTERN(void press, (char *str) );
MGED_EXTERN(char *label_button, (int bnum) );
MGED_EXTERN(int not_state, (int desired, char *str) );
MGED_EXTERN(int chg_state, (int from, int to, char *str) );
MGED_EXTERN(void state_err, (char *str) );

MGED_EXTERN(void do_list, (struct bu_vls *outstrp, struct directory *dp, int verbose));
MGED_EXTERN(int invoke_db_wrapper, (Tcl_Interp *interpreter, int argc, char **argv));

/* history.c */
void history_record(
	struct bu_vls *cmdp,
	struct timeval *start,
	struct timeval *finish,
	int status);			   /* Either CMD_OK or CMD_BAD */
void history_setup(void);


/* cmd.c */

extern void start_catching_output(struct bu_vls *vp), stop_catching_output(struct bu_vls *vp);

#ifndef	NULL
#define	NULL		0
#endif

/*
 * Pointer to solid in solid table to be illuminated. - defined in usepen.c
 */
extern struct solid	*illump;/* == 0 if none, else points to ill. solid */
extern int	sedraw;		/* apply solid editing changes */

/* defined in chgview.c */
extern int	inpara;		/* parameter input from keyboard flag */
extern int	newedge;	/* new edge for arb editing */

/* defined in usepen.c */
extern int	ipathpos;	/* path index of illuminated element */

#define RARROW		001
#define UARROW		002
#define SARROW		004
#define	ROTARROW	010	/* Object rotation enabled */
extern int	movedir;	/* RARROW | UARROW | SARROW | ROTARROW */

extern int	edobj;		/* object editing options */

/* Flags for line type decisions */
#define ROOT	0
#define INNER	1

/*
 *  Editor States
 */
extern int state;			/* (defined in titles.c) */
extern char *state_str[];		/* identifying strings */
#define ST_VIEW		1		/* Viewing only */
#define ST_S_PICK	2		/* Picking for Solid Edit */
#define ST_S_EDIT	3		/* Solid Editing */
#define ST_O_PICK	4		/* Picking for Object Edit */
#define ST_O_PATH	5		/* Path select for Object Edit */
#define ST_O_EDIT	6		/* Object Editing */
#define ST_S_VPICK	7		/* Vertex Pick */
#define ST_S_NO_EDIT	8		/* Solid edit without Rotate, translate, or scale */

#if 0 /* Using the one provided by bu.h */
#ifndef GETSTRUCT
/* Acquire storage for a given struct, eg, GETSTRUCT(ptr,structname); */
#if __STDC__ && !alliant && !apollo
# define GETSTRUCT(p,str) \
	p = (struct str *)rt_calloc(1,sizeof(struct str), "getstruct " #str)
# define GETUNION(p,unn) \
	p = (union unn *)rt_calloc(1,sizeof(union unn), "getstruct " #unn)
#else
# define GETSTRUCT(p,str) \
	p = (struct str *)rt_calloc(1,sizeof(struct str), "getstruct str")
# define GETUNION(p,unn) \
	p = (union unn *)rt_calloc(1,sizeof(union unn), "getstruct unn")
#endif
#endif
#endif

#define	MAXLINE		RT_MAXLINE	/* Maximum number of chars per line */

/* Cloned mged macros for use in Tcl/Tk */
#define TCL_READ_ERR {\
	  Tcl_AppendResult(interp, "Database read error, aborting\n", (char *)NULL);\
	}

#define TCL_READ_ERR_return {\
          TCL_READ_ERR;\
	  return TCL_ERROR;\
	}

#define TCL_WRITE_ERR { \
	  Tcl_AppendResult(interp, "Database write error, aborting.\n", (char *)NULL);\
	  TCL_ERROR_RECOVERY_SUGGESTION; }	

#define TCL_WRITE_ERR_return { \
	  TCL_WRITE_ERR; \
	  return TCL_ERROR; }

#define TCL_ALLOC_ERR { \
	  Tcl_AppendResult(interp, "\
An error has occured while adding a new object to the database.\n", (char *)NULL); \
	  TCL_ERROR_RECOVERY_SUGGESTION; }

#define TCL_ALLOC_ERR_return { \
	TCL_ALLOC_ERR; \
	return TCL_ERROR;  }

/* For errors from db_delete() or db_dirdelete() */
#define TCL_DELETE_ERR(_name){ \
	Tcl_AppendResult(interp, "An error has occurred while deleting '", _name,\
	"' from the database.\n", (char *)NULL);\
	TCL_ERROR_RECOVERY_SUGGESTION; }

#define TCL_DELETE_ERR_return(_name){  \
	TCL_DELETE_ERR(_name); \
	return TCL_ERROR;  }

/* A verbose message to attempt to soothe and advise the user */
#define	TCL_ERROR_RECOVERY_SUGGESTION\
        Tcl_AppendResult(interp, "\
The in-memory table of contents may not match the status of the on-disk\n\
database.  The on-disk database should still be intact.  For safety,\n\
you should exit MGED now, and resolve the I/O problem, before continuing.\n", (char *)NULL)

/*
 *  Helpful macros to inform the user of trouble encountered in
 *  library routines, and bail out.
 *  They are intended to be used mainly in top-level command processing
 *  routines, and therefore include a "return" statement and curley brackets.
 *  Thus, they should only be used in void functions.
 *  The word "return" is not in upper case in these macros,
 *  to enable editor searches for the word "return" to succeed.
 */
/* For errors from db_get() or db_getmrec() */
#define READ_ERR { \
	(void)printf("Database read error, aborting\n"); }

#define READ_ERR_return		{ \
	READ_ERR; \
	return;  }

/* For errors from db_put() */
#define WRITE_ERR { \
	(void)printf("Database write error, aborting.\n"); \
	ERROR_RECOVERY_SUGGESTION; }	

#define WRITE_ERR_return	{ \
	WRITE_ERR; \
	return;  }

/* For errors from db_diradd() or db_alloc() */
#define ALLOC_ERR { \
	(void)printf("\
An error has occured while adding a new object to the database.\n"); \
	ERROR_RECOVERY_SUGGESTION; }

#define ALLOC_ERR_return	{ \
	ALLOC_ERR; \
	return;  }

/* For errors from db_delete() or db_dirdelete() */
#define DELETE_ERR(_name)	{ \
	(void)printf("\
An error has occurred while deleting '%s' from the database.\n", _name); \
	ERROR_RECOVERY_SUGGESTION; }

#define DELETE_ERR_return(_name)	{  \
	DELETE_ERR(_name); \
	return;  }

/* A verbose message to attempt to soothe and advise the user */
#define	ERROR_RECOVERY_SUGGESTION	\
	(void)printf("\
The in-memory table of contents may not match the status of the on-disk\n\
database.  The on-disk database should still be intact.  For safety,\n\
you should exit MGED now, and resolve the I/O problem, before continuing.\n")

/* Check if database pointer is NULL */
#define CHECK_DBI_NULL \
	if( dbip == DBI_NULL ) \
	{ \
		Tcl_AppendResult(interp, "A database is not open!\n", (char *)NULL); \
		return TCL_ERROR; \
	}	

/* Check if the database is read only, and if so return TCL_ERROR */
#define	CHECK_READ_ONLY	\
	if( dbip->dbi_read_only) \
	{ \
		Tcl_AppendResult(interp, "Sorry, this database is READ-ONLY\n", (char *)NULL ); \
		return TCL_ERROR; \
	}

struct funtab {
    char *ft_name;
    char *ft_parms;
    char *ft_comment;
    int (*ft_func)();
    int ft_min;
    int ft_max;
    int tcl_converted;
};

struct mged_hist {
  struct bu_list	l;
  struct bu_vls		mh_command;
  struct timeval	mh_start;
  struct timeval	mh_finish;
  int			mh_status;
};

/* internal variables related to the command window(s) */
struct cmd_list {
  struct bu_list	l;
  struct dm_list	*cl_tie;        /* the drawing window that we're tied to */
  struct mged_hist	*cl_cur_hist;
  struct bu_vls		cl_more_default;
  struct bu_vls		cl_name;
  int			cl_quote_string;
};
#define CMD_LIST_NULL ((struct cmd_list *)NULL)

/* defined in cmd.c */
extern Tcl_Interp *interp;
extern struct cmd_list head_cmd_list;
extern struct cmd_list *curr_cmd_list;

/* defined in rtif.c */
extern struct run_rt head_run_rt;

#define	MAXARGS		9000	/* Maximum number of args per line */

#define MGED_PROMPT "\rmged> "

/* Command return codes */
#define CMD_OK		919
#define CMD_BAD		920
#define CMD_MORE	921
#define MORE_ARGS_STR    "more arguments needed::"

/* adc.c */
int f_adc (
	ClientData clientData,
	Tcl_Interp *interpreter,
	int	argc,
	char	**argv);

/* attach.c */
#if defined(SEEN_MGED_DM_H)
int mged_attach(
	struct w_dm *wp,
	int argc,
	char *argv[]);
#else
int mged_attach(struct w_dm *wp, int argc, char **argv);
#endif

/* buttons.c */
int bv_zoomin(ClientData clientData, Tcl_Interp *interpreter, int argc, char **argv);
int bv_zoomout(ClientData clientData, Tcl_Interp *interpreter, int argc, char **argv);
int bv_rate_toggle(ClientData clientData, Tcl_Interp *interpreter, int argc, char **argv);
int bv_top(ClientData clientData, Tcl_Interp *interpreter, int argc, char **argv);
int bv_bottom(ClientData clientData, Tcl_Interp *interpreter, int argc, char **argv);
int bv_right(ClientData clientData, Tcl_Interp *interpreter, int argc, char **argv);
int bv_left(ClientData clientData, Tcl_Interp *interpreter, int argc, char **argv);
int bv_front(ClientData clientData, Tcl_Interp *interpreter, int argc, char **argv);
int bv_rear(ClientData clientData, Tcl_Interp *interpreter, int argc, char **argv);
int bv_vrestore(ClientData clientData, Tcl_Interp *interpreter, int argc, char **argv);
int bv_vsave(ClientData clientData, Tcl_Interp *interpreter, int argc, char **argv);
int bv_adcursor(ClientData clientData, Tcl_Interp *interpreter, int argc, char **argv);
int bv_reset(ClientData clientData, Tcl_Interp *interpreter, int argc, char **argv);
int bv_45_45(ClientData clientData, Tcl_Interp *interpreter, int argc, char **argv);
int bv_35_25(ClientData clientData, Tcl_Interp *interpreter, int argc, char **argv);
int be_o_illuminate(ClientData clientData, Tcl_Interp *interpreter, int argc, char **argv);
int be_s_illuminate(ClientData clientData, Tcl_Interp *interpreter, int argc, char **argv);
int be_o_scale(ClientData clientData, Tcl_Interp *interpreter, int argc, char **argv);
int be_o_x(ClientData clientData, Tcl_Interp *interpreter, int argc, char **argv);
int be_o_y(ClientData clientData, Tcl_Interp *interpreter, int argc, char **argv);
int be_o_xy(ClientData clientData, Tcl_Interp *interpreter, int argc, char **argv);
int be_o_rotate(ClientData clientData, Tcl_Interp *interpreter, int argc, char **argv);
int be_accept(ClientData clientData, Tcl_Interp *interpreter, int argc, char **argv);
int be_reject(ClientData clientData, Tcl_Interp *interpreter, int argc, char **argv);
int be_s_edit(ClientData clientData, Tcl_Interp *interpreter, int argc, char **argv);
int be_s_rotate(ClientData clientData, Tcl_Interp *interpreter, int argc, char **argv);
int be_s_trans(ClientData clientData, Tcl_Interp *interpreter, int argc, char **argv);
int be_s_scale(ClientData clientData, Tcl_Interp *interpreter, int argc, char **argv);
int be_o_xscale(ClientData clientData, Tcl_Interp *interpreter, int argc, char **argv);
int be_o_yscale(ClientData clientData, Tcl_Interp *interpreter, int argc, char **argv);
int be_o_zscale(ClientData clientData, Tcl_Interp *interpreter, int argc, char **argv);
void btn_head_menu(int i, int menu, int item);
void chg_l2menu(int i);

/* chgmodel.c */
int extract_mater_from_line(
	char *line,
	char *name,
	char *shader,
	int *r, int *g, int *b,
	int *override,
	int *inherit);
int f_rmater(
	ClientData clientData,
	Tcl_Interp *interpreter,
	int     argc,
	char    *argv[]);
int
f_wmater(
	ClientData clientData,
	Tcl_Interp *interpreter,
	int     argc,
	char    *argv[]);


/* chgtree.c */
int cmd_kill(
	ClientData clientData,
	Tcl_Interp *interpreter,
	int	argc,
	char	**argv);
int cmd_name(
	ClientData clientData,
	Tcl_Interp *interpreter,
	int	argc,
	char	**argv);

/* chgview.c */
int edit_com(
     int	argc,
     char	**argv,
     int	kind,
     int	catch_sigint);
void eraseobjpath(
     Tcl_Interp	*interpreter,
     int	argc,
     char	**argv,
     int	noisy,
     int	all);
int f_edit(
	ClientData clientData,
	Tcl_Interp *interpreter,
	int	argc,
	char	**argv);
int f_erase(
	ClientData clientData,
	Tcl_Interp *interpreter,
	int     argc,
	char    **argv);
int f_erase_all(
	ClientData clientData,
	Tcl_Interp *interpreter,
	int     argc,
	char    **argv);
int f_sed(
	ClientData clientData,
	Tcl_Interp *interpreter,
	int	argc,
	char	**argv);
int f_zap(
	ClientData clientData,
	Tcl_Interp *interpreter,
	int	argc,
	char	**argv);
int mged_erot_xyz(
	char origin,
	vect_t rvec);
int mged_svbase(void);
int mged_vrot_xyz(
	char origin,
	char coords,
	vect_t rvec);
void size_reset(void);
void solid_list_callback(void);
void view_ring_destroy(struct dm_list *dlp);

/* cmd.c */
int cmdline( struct bu_vls *vp, int record);
int f_quit(
	ClientData clientData,
	Tcl_Interp *interpreter,
	int	argc,
	char	**argv);
int mged_cmd(
	int argc,
	char **argv,
	struct funtab in_functions[]);
void mged_print_result(int status);

/* color_scheme.c */
void cs_set_bg(void);
void cs_update(void);
void cs_set_dirty_flag(void);

/* columns.c */
void
vls_col_item(
	struct bu_vls	*str,
	const char	*cp);
void vls_col_eol( struct bu_vls *str );
void vls_col_pr4v(struct bu_vls *vls, struct directory **list_of_names, int num_in_list);
void vls_line_dpp(
	struct bu_vls *vls,
	struct directory **list_of_names,
	int num_in_list,
	int aflag,	/* print all objects */
	int cflag,	/* print combinations */
	int rflag,	/* print regions */
	int sflag);	/* print solids */
void vls_long_dpp(
	struct bu_vls *vls,
	struct directory **list_of_names,
	int num_in_list,
	int aflag,	/* print all objects */
	int cflag,	/* print combinations */
	int rflag,	/* print regions */
	int sflag);	/* print solids */

/* dir.c */
void dir_summary(int flag);
int cmd_killall(
	ClientData clientData,
	Tcl_Interp *interpreter,
	int	argc,
	char	**argv);
int cmd_killtree(
	ClientData clientData,
	Tcl_Interp *interpreter,
	int	argc,
	char	**argv);

/* dodraw.c */
void cvt_vlblock_to_solids(
	struct bn_vlblock	*vbp,
	const char		*name,
	int			copy);
void drawH_part2(
	int			dashflag,
	struct bu_list		*vhead,
	struct db_full_path	*pathp,
	struct db_tree_state	*tsp,
	struct solid		*existing_sp);
int drawtrees(
	int	argc,
	char	**argv,
	int	kind);
int invent_solid(
	const char	*name,
	struct bu_list	*vhead,
	long		rgb,
	int		copy);
void pathHmat(
	register struct solid *sp,
	matp_t matp,
	int depth);
int replot_modified_solid(
	struct solid			*sp,
	struct rt_db_internal		*ip,
	const mat_t			mat);
int replot_original_solid( struct solid *sp );
void add_solid_path_to_result(
	Tcl_Interp *interpreter,
	struct solid *sp);

/* dozoom.c */
void createDList(struct solid *sp);
void createDLists(struct bu_list *hsp);
void createDListALL(struct solid *sp);
void createDListsAll(struct bu_list *hsp);
void freeDListsAll(unsigned int dlist, int range);

/* edarb.c */
int editarb( vect_t pos_model );
int mv_edge(
	vect_t thru,
	int bp1, int bp2, int end1, int end2,
	const vect_t	dir);

/* edars.c */
#if defined(SEEN_RTGEOM_H)
void find_nearest_ars_pt(
	int *crv,
	int *col,
	struct rt_ars_internal *ars,
	point_t pick_pt,
	vect_t dir);
#else
void find_nearest_ars_pt();
#endif

/* ged.c */
int event_check( int non_blocking );
int f_opendb(
	ClientData clientData,
	Tcl_Interp *interpreter,
	int	argc,
	char	**argv);
int f_closedb(
	ClientData clientData,
	Tcl_Interp *interpreter,
	int	argc,
	char	**argv);
void new_edit_mats(void);
void new_mats(void);
void pr_prompt(void);
void pr_beep(void);

/* grid.c */
void round_to_grid(fastf_t *view_dx, fastf_t *view_dy);
void snap_keypoint_to_grid(void);
void snap_view_center_to_grid(void);
void snap_to_grid(
	fastf_t *mx,		/* input and return values */
	fastf_t *my);		/* input and return values */
void snap_view_to_grid(fastf_t view_dx, fastf_t view_dy);

/* menu.c */
int mmenu_select( int pen_y, int do_func );

/* overlay.c */
int f_overlay(
	ClientData clientData,
	Tcl_Interp *interpreter,
	int	argc,
	char	**argv);

/* predictor.c */
void predictor_frame(void);

/* usepen.c */
int f_mouse(
	ClientData clientData,
	Tcl_Interp *interpreter,
	int	argc,
	char	**argv);
int f_aip(
	ClientData clientData,
	Tcl_Interp *interpreter,
	int argc,
	char **argv);
void buildHrot( mat_t mat, double alpha, double beta, double ggamma );
void wrt_view( mat_t out, const mat_t change, const mat_t in );
void wrt_point( mat_t out, const mat_t change, const mat_t in, const point_t point );
void wrt_point_direc( mat_t out, const mat_t change, const mat_t in, const point_t point, const vect_t direc );
int f_matpick(
	ClientData clientData,
	Tcl_Interp *interpreter,
	int	argc,
	char	**argv);

/* tedit.c */
int editit( const char *file );

/* titles.c */
void create_text_overlay( struct bu_vls *vp );
void screen_vls(
	int	xbase,
	int	ybase,
	struct bu_vls	*vp);
void dotitles(struct bu_vls *overlay_vls);

/* rect.c */
void zoom_rect_area(void);
void paint_rect_area(void);
void rt_rect_area(void);
void draw_rect(void);
void set_rect(void);
void rect_view2image(void);
void rect_image2view(void);
void rb_set_dirty_flag(void);


/* track.c */
int wrobj( char name[], int flags );

/* red.c */
int writecomb( const struct rt_comb_internal *comb, const char *name );
int checkcomb(void);

/* edsol.c */
void vls_solid( struct bu_vls *vp, const struct rt_db_internal *ip, const mat_t mat );
void transform_editing_solid(
	struct rt_db_internal	*os,		/* output solid */
	const mat_t		mat,
	struct rt_db_internal	*is,		/* input solid */
	int			free);
void replot_editing_solid(void);
void sedit_abs_scale(void);
void sedit_accept(void);
void sedit_mouse( const vect_t mousevec );
void sedit_reject(void);
void sedit_vpick( point_t v_pos );
void oedit_abs_scale(void);
void oedit_accept(void);
void oedit_reject(void);
void objedit_mouse( const vect_t mousevec );
extern int nurb_closest2d(int *surface, int *uval, int *vval, const struct rt_nurb_internal *spl, const fastf_t *ref_pt, const fastf_t *mat);
void label_edited_solid(
	int *num_lines,
	point_t *lines,
	struct rt_point_labels	pl[],
	int			max_pl,
	const mat_t		xform,
	struct rt_db_internal	*ip);
void init_oedit(void);
void init_sedit(void);
int rt_arb_calc_planes(
	plane_t			planes[6],
	struct rt_arb_internal	*arb,
	int			type,
	const struct bn_tol	*tol);


/* share.c */
void usurp_all_resources(struct dm_list *dlp1, struct dm_list *dlp2);

/* inside.c */
int torin(struct rt_db_internal *ip, fastf_t thick[6] );
int tgcin(struct rt_db_internal *ip, fastf_t thick[6]);
int rhcin(struct rt_db_internal *ip, fastf_t thick[4]);
int rpcin(struct rt_db_internal *ip, fastf_t thick[4]);
int partin(struct rt_db_internal *ip, fastf_t *thick );
int nmgin( struct rt_db_internal *ip, fastf_t thick );
int arbin(
	struct rt_db_internal	*ip,
	fastf_t	thick[6],
	int	nface,
	int	cgtype,		/* # of points, 4..8 */
	plane_t	planes[6]);
int ehyin(struct rt_db_internal *ip, fastf_t thick[2]);
int ellgin(struct rt_db_internal *ip, fastf_t thick[6]);
int epain(struct rt_db_internal *ip, fastf_t thick[2]);
int etoin(struct rt_db_internal *ip, fastf_t thick[1]);

/* set.c */
void set_scroll_private(void);
void mged_variable_setup(Tcl_Interp *interpreter);

/* scroll.c */
void set_scroll(void);
int scroll_select( int pen_x, int pen_y, int do_func );
int scroll_display( int y_top );

/* edpipe.c */
void pipe_scale_od( struct rt_db_internal *db_int, fastf_t scale);
void pipe_scale_id( struct rt_db_internal *db_int, fastf_t scale );
void pipe_seg_scale_od( struct wdb_pipept *ps, fastf_t scale );
void pipe_seg_scale_id( struct wdb_pipept *ps, fastf_t scale );
void pipe_seg_scale_radius( struct wdb_pipept *ps, fastf_t scale );
void pipe_scale_radius( struct rt_db_internal *db_int, fastf_t scale );
struct wdb_pipept *find_pipept_nearest_pt( const struct bu_list *pipe_hd, const point_t pt );
struct wdb_pipept *add_pipept( struct rt_pipe_internal *pipe, struct wdb_pipept *pp, const point_t new_pt );
void ins_pipept( struct rt_pipe_internal *pipe, struct wdb_pipept *pp, const point_t new_pt );
struct wdb_pipept *del_pipept( struct wdb_pipept *ps );
void move_pipept( struct rt_pipe_internal *pipe, struct wdb_pipept *ps, const point_t new_pt );

/* vparse.c */
void mged_vls_struct_parse_old(
	struct bu_vls *vls,
	const char *title,
	struct bu_structparse *how_to_parse,
	char *structp,
	int argc,
	char *argv[]);

/* rtif.c */
int build_tops(char **start, char **end);

/* mater.c */
void color_soltab(void);

@


11.96
log
@merge of ansi-6-0-branch into HEAD
@
text
@d45 1
a45 1
 *  $Header$
@


11.95
log
@merge of windows-6-0-branch into head
@
text
@d55 20
d215 8
a222 8
extern void             mged_setup();
extern void		dir_build(), buildHrot(), dozoom(),
			pr_schain(), itoa();
extern void		eraseobj(), eraseobjall(), mged_finish(), slewview(),
			mmenu_init(), moveHinstance(), moveHobj(),
			quit(), refresh(), rej_sedit(), sedit(),
			setview(),
			adcursor(), mmenu_display(), mmenu_set(), mmenu_set_all(),
d224 2
a225 2
extern void		sedit_menu();
extern void		attach(), get_attached();
d227 1
a227 5
#ifndef WIN32
extern void		sig2(), sig3();
#else
extern void		sig2(int sig), sig3(int sig);
#endif
d229 3
a231 3
extern void		aexists();
extern int		clip(), getname(), use_pen(), dir_print();
extern int              mged_cmd_arg_check(), release();
d252 1
a252 1
MGED_EXTERN(int invoke_db_wrapper, (Tcl_Interp *interp, int argc, char **argv));
d265 1
a265 1
extern void start_catching_output(), stop_catching_output();
d492 1
a492 1
	Tcl_Interp *interp,
d503 1
a503 1
int mged_attach();
d507 31
a537 31
int bv_zoomin(ClientData clientData, Tcl_Interp *interp, int argc, char **argv);
int bv_zoomout(ClientData clientData, Tcl_Interp *interp, int argc, char **argv);
int bv_rate_toggle(ClientData clientData, Tcl_Interp *interp, int argc, char **argv);
int bv_top(ClientData clientData, Tcl_Interp *interp, int argc, char **argv);
int bv_bottom(ClientData clientData, Tcl_Interp *interp, int argc, char **argv);
int bv_right(ClientData clientData, Tcl_Interp *interp, int argc, char **argv);
int bv_left(ClientData clientData, Tcl_Interp *interp, int argc, char **argv);
int bv_front(ClientData clientData, Tcl_Interp *interp, int argc, char **argv);
int bv_rear(ClientData clientData, Tcl_Interp *interp, int argc, char **argv);
int bv_vrestore(ClientData clientData, Tcl_Interp *interp, int argc, char **argv);
int bv_vsave(ClientData clientData, Tcl_Interp *interp, int argc, char **argv);
int bv_adcursor(ClientData clientData, Tcl_Interp *interp, int argc, char **argv);
int bv_reset(ClientData clientData, Tcl_Interp *interp, int argc, char **argv);
int bv_45_45(ClientData clientData, Tcl_Interp *interp, int argc, char **argv);
int bv_35_25(ClientData clientData, Tcl_Interp *interp, int argc, char **argv);
int be_o_illuminate(ClientData clientData, Tcl_Interp *interp, int argc, char **argv);
int be_s_illuminate(ClientData clientData, Tcl_Interp *interp, int argc, char **argv);
int be_o_scale(ClientData clientData, Tcl_Interp *interp, int argc, char **argv);
int be_o_x(ClientData clientData, Tcl_Interp *interp, int argc, char **argv);
int be_o_y(ClientData clientData, Tcl_Interp *interp, int argc, char **argv);
int be_o_xy(ClientData clientData, Tcl_Interp *interp, int argc, char **argv);
int be_o_rotate(ClientData clientData, Tcl_Interp *interp, int argc, char **argv);
int be_accept(ClientData clientData, Tcl_Interp *interp, int argc, char **argv);
int be_reject(ClientData clientData, Tcl_Interp *interp, int argc, char **argv);
int be_s_edit(ClientData clientData, Tcl_Interp *interp, int argc, char **argv);
int be_s_rotate(ClientData clientData, Tcl_Interp *interp, int argc, char **argv);
int be_s_trans(ClientData clientData, Tcl_Interp *interp, int argc, char **argv);
int be_s_scale(ClientData clientData, Tcl_Interp *interp, int argc, char **argv);
int be_o_xscale(ClientData clientData, Tcl_Interp *interp, int argc, char **argv);
int be_o_yscale(ClientData clientData, Tcl_Interp *interp, int argc, char **argv);
int be_o_zscale(ClientData clientData, Tcl_Interp *interp, int argc, char **argv);
d551 1
a551 1
	Tcl_Interp *interp,
d557 1
a557 1
	Tcl_Interp *interp,
d565 1
a565 1
	Tcl_Interp *interp,
d570 1
a570 1
	Tcl_Interp *interp,
d581 1
a581 1
     Tcl_Interp	*interp,
d588 1
a588 1
	Tcl_Interp *interp,
d593 1
a593 1
	Tcl_Interp *interp,
d598 1
a598 1
	Tcl_Interp *interp,
d603 1
a603 1
	Tcl_Interp *interp,
d608 1
a608 1
	Tcl_Interp *interp,
d627 1
a627 1
	Tcl_Interp *interp,
d669 1
a669 1
	Tcl_Interp *interp,
d674 1
a674 1
	Tcl_Interp *interp,
d708 1
a708 1
	Tcl_Interp *interp,
d741 1
a741 1
	Tcl_Interp *interp,
d746 1
a746 1
	Tcl_Interp *interp,
d769 1
a769 1
	Tcl_Interp *interp,
d774 1
a774 1
void predictor_frame();
d779 1
a779 1
	Tcl_Interp *interp,
d784 1
a784 1
	Tcl_Interp *interp,
d793 1
a793 1
	Tcl_Interp *interp,
d843 1
a843 1
extern int nurb_closest2d();
d883 1
a883 1
void mged_variable_setup(Tcl_Interp *interp);
@


11.94
log
@update copyright to include span through 2003
@
text
@d45 1
a45 1
 *  $Header: /c/CVS/brlcad/mged/ged.h,v 11.93 2002/08/20 17:08:23 jra Exp $
d48 1
d50 1
d207 1
d209 3
d311 1
a311 1
#define	MAXLINE		10240	/* Maximum number of chars per line */
@


11.93
log
@Restoration of entire source tree to Pre-Hartley state
@
text
@d42 1
a42 1
 *	This software is Copyright (C) 1985 by the United States Army.
d45 1
a45 1
 *  $Header: /c/CVS/brlcad/mged/ged.h,v 11.91 2002/08/12 18:25:38 morrison Exp $
@


11.93.10.1
log
@merge from HEAD
@
text
@d42 1
a42 1
 *	This software is Copyright (C) 1985-2004 by the United States Army.
d45 1
a45 1
 *  $Header: /c/CVS/brlcad/mged/ged.h,v 11.94 2004/02/02 17:39:33 morrison Exp $
@


11.93.10.2
log
@merge from head
@
text
@d45 1
a45 1
 *  $Header: /c/CVS/brlcad/mged/ged.h,v 11.93.10.1 2004/02/12 18:34:14 erikg Exp $
@


11.93.10.3
log
@merge from head
@
text
@d45 1
a45 1
 *  $Header$
a47 1
#ifndef WIN32
a48 1
#endif
a204 1
#ifndef WIN32
a205 3
#else
extern void		sig2(int sig), sig3(int sig);
#endif
d305 1
a305 1
#define	MAXLINE		RT_MAXLINE	/* Maximum number of chars per line */
@


11.93.4.1
log
@Modifications (on a 6.0 source distribution) for initial port to windows (merged with sources close to 6.0.2)
@
text
@d45 1
a45 1
 *  $Header: /c/CVS/brlcad/mged/ged.h,v 11.93 2002/08/20 17:08:23 jra Exp $
a47 1
#ifndef WIN32
a48 1
#endif
a204 1
#ifndef WIN32
a205 3
#else
extern void		sig2(int sig), sig3(int sig);
#endif
@


11.93.4.2
log
@sync to HEAD...
@
text
@d42 1
a42 1
 *	This software is Copyright (C) 1985-2004 by the United States Army.
d45 1
a45 1
 *  $Header: /n/cad/c/CVS/brlcad/mged/ged.h,v 11.93.4.1 2002/09/26 23:04:11 morrison Exp $
@


11.93.4.3
log
@use RT_MAXLINE instead of the constant -- same purpose really
@
text
@d45 1
a45 1
 *  $Header$
d311 1
a311 1
#define	MAXLINE		RT_MAXLINE	/* Maximum number of chars per line */
@


11.93.2.1
log
@Initial ANSIfication
@
text
@d45 1
a45 1
 *  $Header: /c/CVS/brlcad/mged/ged.h,v 11.93 2002/08/20 17:08:23 jra Exp $
a52 20
/* Needed to define struct menu_item - RFH */
#include "./menu.h"

/* Needed to define struct w_dm - RFH */
#include "./mged_dm.h"

/* Needed to define struct solid - RFH */
#include "solid.h"

/* A hack around a compilation issue.  No need in fixing it now as the build
   process is about to be redone - RFH */
#ifndef SEEN_RT_NURB_INTERNAL
#define SEEN_RT_NURB_INTERNAL
struct rt_nurb_internal {
	long		magic;
	int	 	nsrf;		/* number of surfaces */
	struct face_g_snurb **srfs;	/* The surfaces themselves */
};
#endif

d193 8
a200 8
extern void             mged_setup(void);
extern void		dir_build(), buildHrot(fastf_t *, double, double, double), dozoom(int which_eye),
			pr_schain(struct solid *startp, int lvl), itoa(int n, char *s, int w);
extern void		eraseobj(register struct directory **dpp), eraseobjall(register struct directory **dpp), mged_finish(int exitcode), slewview(fastf_t *view_pos),
			mmenu_init(void), moveHinstance(struct directory *cdp, struct directory *dp, matp_t xlate), moveHobj(register struct directory *dp, matp_t xlate),
			quit(void), refresh(void), rej_sedit(), sedit(void),
			setview(double a1, double a2, double a3),
			adcursor(void), mmenu_display(int y_top), mmenu_set(int index, struct menu_item *value), mmenu_set_all(int index, struct menu_item *value),
d202 2
a203 2
extern void		sedit_menu(void);
extern void		attach(), get_attached(void);
d205 1
a205 1
extern void		sig2(void), sig3(void);
d207 3
a209 3
extern void		aexists(char *name);
extern int		clip(fastf_t *, fastf_t *, fastf_t *, fastf_t *), getname(), use_pen(), dir_print();
extern int              mged_cmd_arg_check(), release(char *name, int need_close);
d243 1
a243 1
extern void start_catching_output(struct bu_vls *vp), stop_catching_output(struct bu_vls *vp);
d481 1
a481 1
int mged_attach(struct w_dm *wp, int argc, char **argv);
d752 1
a752 1
void predictor_frame(void);
d821 1
a821 1
extern int nurb_closest2d(int *surface, int *uval, int *vval, const struct rt_nurb_internal *spl, const fastf_t *ref_pt, const fastf_t *mat);
@


11.93.2.2
log
@sync branch with HEAD
@
text
@d42 1
a42 1
 *	This software is Copyright (C) 1985-2004 by the United States Army.
d45 1
a45 1
 *  $Header$
a47 1
#ifndef WIN32
a48 1
#endif
d325 1
a325 1
#define	MAXLINE		RT_MAXLINE	/* Maximum number of chars per line */
@


11.93.2.3
log
@no need for win32 section, since we all can use the same thing for the sginal() hook function
@
text
@d227 1
a227 1
extern void		sig2(int), sig3(int);
@


11.93.2.4
log
@quell warnings
@
text
@d45 1
a45 1
 *  $Header: /n/cad/c/CVS/brlcad/mged/ged.h,v 11.93.2.3 2004/04/02 16:11:23 morrison Exp $
d252 1
a252 1
MGED_EXTERN(int invoke_db_wrapper, (Tcl_Interp *interpreter, int argc, char **argv));
d492 1
a492 1
	Tcl_Interp *interpreter,
d507 31
a537 31
int bv_zoomin(ClientData clientData, Tcl_Interp *interpreter, int argc, char **argv);
int bv_zoomout(ClientData clientData, Tcl_Interp *interpreter, int argc, char **argv);
int bv_rate_toggle(ClientData clientData, Tcl_Interp *interpreter, int argc, char **argv);
int bv_top(ClientData clientData, Tcl_Interp *interpreter, int argc, char **argv);
int bv_bottom(ClientData clientData, Tcl_Interp *interpreter, int argc, char **argv);
int bv_right(ClientData clientData, Tcl_Interp *interpreter, int argc, char **argv);
int bv_left(ClientData clientData, Tcl_Interp *interpreter, int argc, char **argv);
int bv_front(ClientData clientData, Tcl_Interp *interpreter, int argc, char **argv);
int bv_rear(ClientData clientData, Tcl_Interp *interpreter, int argc, char **argv);
int bv_vrestore(ClientData clientData, Tcl_Interp *interpreter, int argc, char **argv);
int bv_vsave(ClientData clientData, Tcl_Interp *interpreter, int argc, char **argv);
int bv_adcursor(ClientData clientData, Tcl_Interp *interpreter, int argc, char **argv);
int bv_reset(ClientData clientData, Tcl_Interp *interpreter, int argc, char **argv);
int bv_45_45(ClientData clientData, Tcl_Interp *interpreter, int argc, char **argv);
int bv_35_25(ClientData clientData, Tcl_Interp *interpreter, int argc, char **argv);
int be_o_illuminate(ClientData clientData, Tcl_Interp *interpreter, int argc, char **argv);
int be_s_illuminate(ClientData clientData, Tcl_Interp *interpreter, int argc, char **argv);
int be_o_scale(ClientData clientData, Tcl_Interp *interpreter, int argc, char **argv);
int be_o_x(ClientData clientData, Tcl_Interp *interpreter, int argc, char **argv);
int be_o_y(ClientData clientData, Tcl_Interp *interpreter, int argc, char **argv);
int be_o_xy(ClientData clientData, Tcl_Interp *interpreter, int argc, char **argv);
int be_o_rotate(ClientData clientData, Tcl_Interp *interpreter, int argc, char **argv);
int be_accept(ClientData clientData, Tcl_Interp *interpreter, int argc, char **argv);
int be_reject(ClientData clientData, Tcl_Interp *interpreter, int argc, char **argv);
int be_s_edit(ClientData clientData, Tcl_Interp *interpreter, int argc, char **argv);
int be_s_rotate(ClientData clientData, Tcl_Interp *interpreter, int argc, char **argv);
int be_s_trans(ClientData clientData, Tcl_Interp *interpreter, int argc, char **argv);
int be_s_scale(ClientData clientData, Tcl_Interp *interpreter, int argc, char **argv);
int be_o_xscale(ClientData clientData, Tcl_Interp *interpreter, int argc, char **argv);
int be_o_yscale(ClientData clientData, Tcl_Interp *interpreter, int argc, char **argv);
int be_o_zscale(ClientData clientData, Tcl_Interp *interpreter, int argc, char **argv);
d551 1
a551 1
	Tcl_Interp *interpreter,
d557 1
a557 1
	Tcl_Interp *interpreter,
d565 1
a565 1
	Tcl_Interp *interpreter,
d570 1
a570 1
	Tcl_Interp *interpreter,
d581 1
a581 1
     Tcl_Interp	*interpreter,
d588 1
a588 1
	Tcl_Interp *interpreter,
d593 1
a593 1
	Tcl_Interp *interpreter,
d598 1
a598 1
	Tcl_Interp *interpreter,
d603 1
a603 1
	Tcl_Interp *interpreter,
d608 1
a608 1
	Tcl_Interp *interpreter,
d627 1
a627 1
	Tcl_Interp *interpreter,
d669 1
a669 1
	Tcl_Interp *interpreter,
d674 1
a674 1
	Tcl_Interp *interpreter,
d708 1
a708 1
	Tcl_Interp *interpreter,
d741 1
a741 1
	Tcl_Interp *interpreter,
d746 1
a746 1
	Tcl_Interp *interpreter,
d769 1
a769 1
	Tcl_Interp *interpreter,
d779 1
a779 1
	Tcl_Interp *interpreter,
d784 1
a784 1
	Tcl_Interp *interpreter,
d793 1
a793 1
	Tcl_Interp *interpreter,
d883 1
a883 1
void mged_variable_setup(Tcl_Interp *interpreter);
@


11.92
log
@Converted from K&R to ANSI C - RFH
@
text
@d45 1
a45 1
 *  $Header: /c/CVS/brlcad/mged/ged.h,v 11.90 2001/06/01 19:23:24 bparker Exp $
a52 20
/* Needed to define struct menu_item - RFH */
#include "./menu.h"

/* Needed to define struct w_dm - RFH */
#include "./mged_dm.h"

/* Needed to define struct solid - RFH */
#include "solid.h"

/* A hack around a compilation issue.  No need in fixing it now as the build
   process is about to be redone - RFH */
#ifndef SEEN_RT_NURB_INTERNAL
#define SEEN_RT_NURB_INTERNAL
struct rt_nurb_internal {
	long		magic;
	int	 	nsrf;		/* number of surfaces */
	struct face_g_snurb **srfs;	/* The surfaces themselves */
};
#endif

d193 8
a200 8
extern void             mged_setup(void);
extern void		dir_build(), buildHrot(fastf_t *, double, double, double), dozoom(int which_eye),
			pr_schain(struct solid *startp, int lvl), itoa(int n, char *s, int w);
extern void		eraseobj(register struct directory **dpp), eraseobjall(register struct directory **dpp), mged_finish(int exitcode), slewview(fastf_t *view_pos),
			mmenu_init(void), moveHinstance(struct directory *cdp, struct directory *dp, matp_t xlate), moveHobj(register struct directory *dp, matp_t xlate),
			quit(void), refresh(void), rej_sedit(), sedit(void),
			setview(double a1, double a2, double a3),
			adcursor(void), mmenu_display(int y_top), mmenu_set(int index, struct menu_item *value), mmenu_set_all(int index, struct menu_item *value),
d202 2
a203 2
extern void		sedit_menu(void);
extern void		attach(), get_attached(void);
d205 1
a205 1
extern void		sig2(void), sig3(void);
d207 3
a209 3
extern void		aexists(char *name);
extern int		clip(fastf_t *, fastf_t *, fastf_t *, fastf_t *), getname(), use_pen(), dir_print();
extern int              mged_cmd_arg_check(), release(char *name, int need_close);
d243 1
a243 1
extern void start_catching_output(struct bu_vls *vp), stop_catching_output(struct bu_vls *vp);
d408 1
a408 1
		Tcl_AppendResult(interp, "No database has been opened!\n", (char *)NULL); \
d481 1
a481 1
int mged_attach(struct w_dm *wp, int argc, char **argv);
d722 5
d752 1
a752 1
void predictor_frame(void);
d821 1
a821 1
extern int nurb_closest2d(int *surface, int *uval, int *vval, const struct rt_nurb_internal *spl, const fastf_t *ref_pt, const fastf_t *mat);
@


11.91
log
@added closedb command
@
text
@d53 20
d213 8
a220 8
extern void             mged_setup();
extern void		dir_build(), buildHrot(), dozoom(),
			pr_schain(), itoa();
extern void		eraseobj(), eraseobjall(), mged_finish(), slewview(),
			mmenu_init(), moveHinstance(), moveHobj(),
			quit(), refresh(), rej_sedit(), sedit(),
			setview(),
			adcursor(), mmenu_display(), mmenu_set(), mmenu_set_all(),
d222 2
a223 2
extern void		sedit_menu();
extern void		attach(), get_attached();
d225 1
a225 1
extern void		sig2(), sig3();
d227 3
a229 3
extern void		aexists();
extern int		clip(), getname(), use_pen(), dir_print();
extern int              mged_cmd_arg_check(), release();
d263 1
a263 1
extern void start_catching_output(), stop_catching_output();
d428 1
a428 1
		Tcl_AppendResult(interp, "A database is not open!\n", (char *)NULL); \
d501 1
a501 1
int mged_attach();
a741 5
int f_closedb(
	ClientData clientData,
	Tcl_Interp *interp,
	int	argc,
	char	**argv);
d767 1
a767 1
void predictor_frame();
d836 1
a836 1
extern int nurb_closest2d();
@


11.90
log
@*- mods that reflect MGED's use of drawable geometry
   objects, database objects and view objects
@
text
@d45 1
a45 1
 *  $Header: /c/CVS/brlcad/mged/ged.h,v 11.89 2001/04/02 18:10:11 jra Exp $
d408 1
a408 1
		Tcl_AppendResult(interp, "No database has been opened!\n", (char *)NULL); \
d718 5
@


11.89
log
@Lint
@
text
@d45 1
a45 1
 *  $Header: /c/CVS/brlcad/mged/ged.h,v 11.88 2001/03/21 22:15:58 bparker Exp $
d99 1
d541 1
a541 1
int f_kill(
d546 1
a546 1
int f_name(
a588 6
int knob_rot(
	vect_t rvec,
	char origin,
	int model_flag,
	int view_flag,
	int edit_flag);
a591 5
int mged_etran(const point_t pt);
int mged_mtran(const vect_t tvec);
int mged_otran(const vect_t tvec);
int mged_vtran(const vect_t tvec);
int mged_tran(const vect_t tvec);
d645 1
a645 1
int f_killall(
d650 1
a650 1
int f_killtree(
d691 1
a691 1
void createDLists(struct solid *hsp);
d693 1
a693 1
void createDListsAll(struct solid *hsp);
@


11.88
log
@*- mods to use invoke_db_wrapper
@
text
@d45 1
a45 1
 *  $Header: /d/CVS/brlcad/mged/ged.h,v 11.87 2001/03/21 20:08:59 bparker Exp $
d637 8
@


11.87
log
@*- define MGED_DB_NAME, MGED_INMEM_NAME and MGED_DG_NAME
@
text
@d45 1
a45 1
 *  $Header: /d/CVS/brlcad/mged/ged.h,v 11.86 2001/03/19 22:20:01 butler Exp $
d229 1
d892 1
@


11.86
log
@patches to merge 5.3 into 6.0
@
text
@d45 1
a45 1
 *  $Header: /d/CVS/brlcad/mged/ged.h,v 11.85 2000/11/16 21:20:29 bparker Exp $
d58 4
@


11.85
log
@Add rt_abort command that aborts all
rt processes forked by MGED.
@
text
@d45 1
a45 1
 *  $Header: /c/CVS/brlcad/mged/ged.h,v 11.84 2000/10/24 19:05:06 mike Exp $
a446 7

struct run_rt {
	struct bu_list		l;
	int			fd;
	int			pid;
	int			aborted;
};
@


11.84
log
@
Fixed compiler lint, function declarations.
@
text
@d45 1
a45 1
 *  $Header: /c/CVS/brlcad/mged/ged.h,v 11.83 2000/09/07 02:58:52 mike Exp $
d447 10
@


11.83
log
@
Added externs to ged.h to quiet down lint
@
text
@d45 1
a45 1
 *  $Header: /c/CVS/brlcad/mged/ged.h,v 11.82 2000/09/07 02:43:21 mike Exp $
d51 1
d227 6
a232 3

extern int cmd_prev(), cmd_next();
extern void history_record();
d679 3
d775 109
@


11.82
log
@
More externs to ged.h to silence lint
@
text
@d45 1
a45 1
 *  $Header: /c/CVS/brlcad/mged/ged.h,v 11.81 2000/09/07 02:23:44 mike Exp $
d701 67
@


11.81
log
@
Added externs to ged.h to fix lint
@
text
@d45 1
a45 1
 *  $Header: /c/CVS/brlcad/mged/ged.h,v 11.80 2000/07/24 19:27:31 mike Exp $
d462 1
a462 1
#if 0
d598 103
@


11.80
log
@
Changed mged/typin.c to start using libwdb interfaces.
Which means mged/ged.c now also opens a libwdb interface.
@
text
@d45 1
a45 1
 *  $Header: /c/CVS/brlcad/mged/ged.h,v 11.79 2000/01/07 04:21:20 mike Exp $
d454 144
@


11.79
log
@
Eliminated dbi_localunit.  This is a v4 database anachronism.
@
text
@d45 1
a45 1
 *  $Header: /c/CVS/brlcad/mged/ged.h,v 11.78 1999/10/19 20:34:37 jra Exp $
d93 1
@


11.79.2.1
log
@Add rt_abort command that will abort
any raytrace initiated from MGED.
@
text
@d45 1
a45 1
 *  $Header: /c/CVS/brlcad/mged/ged.h,v 11.79 2000/01/07 04:21:20 mike Exp $
a441 10

struct run_rt {
	struct bu_list		l;
	int			fd;
	int			pid;
	int			aborted;
};

/* defined in rtif.c */
extern struct run_rt head_run_rt;
@


11.79.2.2
log
@*- "struct run_rt" has moved to raytrace.h so it
   could be used by librt/dg_obj.c
@
text
@d45 1
a45 1
 *  $Header: /c/CVS/brlcad/mged/ged.h,v 11.79.2.1 2000/11/15 21:31:19 bparker Exp $
d442 7
@


11.78
log
@Added editing for the FGP solid
@
text
@d45 1
a45 1
 *  $Header: /c/CVS/brlcad/mged/ged.h,v 11.77 1999/09/01 18:55:10 bparker Exp $
a94 1
#define localunit	(dbip->dbi_localunit)  /* current local unit (index) */
@


11.77
log
@*- mods to squak when a database is not open and a user
   tries to perform an operation that needs a valid dbip.
@
text
@d45 1
a45 1
 *  $Header: /c/CVS/brlcad/mged/ged.h,v 11.76 1998/11/06 22:32:41 bparker Exp $
d276 1
@


11.76
log
@*- use new structures
*- cleanup
@
text
@d45 1
a45 1
 *  $Header: /c/CVS/brlcad/mged/ged.h,v 11.75 1998/10/21 16:50:43 bparker Exp $
d392 8
@


11.75
log
@*- remove color members from "struct _mged_variables"
@
text
@d45 1
a45 1
 *  $Header: /c/CVS/brlcad/mged/ged.h,v 11.74 1998/06/11 14:28:13 bparker Exp $
d412 5
a416 4
  struct bu_list l;
  struct bu_vls command;
  struct timeval start, finish;
  int status;
d421 6
a426 6
  struct bu_list l;
  struct dm_list *aim;        /* the drawing window being aimed at */
  struct mged_hist *cur_hist;
  struct bu_vls more_default;
  struct bu_vls name;
  int quote_string;
a434 62
/* mged command variables for affecting the user environment */
struct _mged_variables {
	int	autosize;
	int	rateknobs;
        int	slidersflag;
    	int	sgi_win_size;
	int	sgi_win_origin[2];
	int	faceplate;
        int	orig_gui;
	int	rt_output;
	int	m_axes;  /* model axes */
	int	m_axes_size;
	int	m_axes_linewidth;
	fastf_t	m_axes_pos[3];
	int	v_axes;  /* view axes */
	int	v_axes_size;
	int	v_axes_linewidth;
	int	v_axes_pos[2]; /* view axes position */
	int	e_axes;  /* edit axes */
	int	e_axes_size1;
	int	e_axes_size2;
	int	e_axes_linewidth1;
	int	e_axes_linewidth2;
        int	linewidth;
	char	linestyle;
        int	send_key;
        int	hot_key;
        int	context;
	int	dlist;
	int	use_air;
	int	listen;		/* nonzero to listen on port */
	int	port;		/* port to listen on */
	int	fb;		/* toggle image on/off */
	int	fb_all;		/* 0 - use part of image as defined by the rectangle     1 - use the entire image */
	int	fb_overlay;	/* 0 - underlay     1 - overlay */
	int	rubber_band;	/* draw rubber band rectangle */
	int	rubber_band_linewidth;
	char	rubber_band_linestyle;
	int	grid_draw;		/* draw grid */
	int	grid_snap;		/* snap to grid */
	fastf_t grid_anchor[3];
	fastf_t	grid_res_h;		/* grid resolution in h */
	fastf_t grid_res_v;		/* grid resolution in v */
	int grid_res_major_h;		/* major grid resolution in h */
	int grid_res_major_v;		/* major grid resolution in v */
	char	mouse_behavior;
	char	coords;
	char	rotate_about;
        char    transform;
	int	predictor;
	double	predictor_advance;
	double	predictor_length;
	double	perspective;	/* used to directly set the perspective angle */
        int     perspective_mode; /* used to toggle perspective viewing on/off */
        int     toggle_perspective; /* used to toggle through values in perspective_table[] */
	double	nmg_eu_dist;
	double	eye_sep_dist;	/* >0 implies stereo.  units = "room" mm */
	char	union_lexeme[1024];
	char	intersection_lexeme[1024];
	char	difference_lexeme[1024];
};

a438 8
/* Flags indicating whether the ogl and sgi display managers have been
 * attached. Defined in dm-ogl.c. 
 * These are necessary to decide whether or not to use direct rendering
 * with ogl.
 */
extern	char	ogl_ogl_used;
extern	char	ogl_sgi_used;

a439 1

@


11.74
log
@*- remove the following ifdefs:
	USE_FRAMEBUFFER, DO_SNAP_TO_GRID, DO_RUBBER_BAND, USE_RT_ASPECT
@
text
@d45 1
a45 1
 *  $Header: /m/cad/CVS/brlcad/mged/ged.h,v 11.73 1998/03/19 18:04:22 bparker Exp $
a444 2
	int	m_axes_color[3];
	int	m_axes_label_color[3];
a448 2
	int	v_axes_color[3];
	int	v_axes_label_color[3];
a452 4
	int	e_axes_color1[3];
	int	e_axes_color2[3];
	int	e_axes_label_color1[3];
	int	e_axes_label_color2[3];
a469 1
	int	rubber_band_color[3];
a473 1
	int	grid_color[3];
@


11.73
log
@ADC variables and "Query Ray" variables are
no longer mged_variables.
@
text
@d45 1
a45 1
 *  $Header: /m/cad/mged/RCS/ged.h,v 11.72 1998/03/06 22:37:22 bparker Exp bparker $
a471 1
#ifdef USE_FRAMEBUFFER
a476 2
#endif
#ifdef DO_RUBBER_BAND
a480 2
#endif
#ifdef DO_SNAP_TO_GRID
a488 1
#endif
@


11.72
log
@*- added a few mged_variables
@
text
@d45 1
a45 1
 *  $Header: /m/cad/mged/RCS/ged.h,v 11.71 1998/02/20 23:22:37 bparker Exp bparker $
a437 1
        int	adcflag;
a471 17
	int	query_ray_cmd_echo;
	int	query_ray_color_odd[3];
	int	query_ray_color_even[3];
	int	query_ray_color_void[3];
	int	query_ray_color_overlap[3];
	fastf_t adc_xyz[3];
	fastf_t adc_xyz_grid[2];
	fastf_t	adc_a1;
	fastf_t	adc_a2;
	fastf_t	adc_dst;
	int	adc_anchor_xyz;
	int	adc_anchor_a1;
	fastf_t	adc_anchor_pt_a1[3];
	int	adc_anchor_a2;
	fastf_t	adc_anchor_pt_a2[3];
	int	adc_anchor_tick;
	fastf_t	adc_anchor_pt_tick[3];
a495 1
	char	query_ray_behavior;
@


11.71
log
@added rt_output
@
text
@d45 1
a45 1
 *  $Header: /m/cad/mged/RCS/ged.h,v 11.70 1998/02/06 21:48:37 bparker Exp bparker $
d473 1
a473 1
	int	echo_query_ray_cmd;
d476 14
a489 1
	int	query_ray_color_void[3];	
@


11.70
log
@created a passel of mged_variables
@
text
@d45 1
a45 1
 *  $Header: /m/cad/mged/RCS/ged.h,v 11.69 1998/01/28 16:18:44 bparker Exp bparker $
d444 1
@


11.69
log
@*- changed nirt_behavior to a char
*- deleted ecoords, and erotate_about
@
text
@d45 1
a45 1
 *  $Header: /m/cad/mged/RCS/ged.h,v 11.68 1998/01/16 21:50:50 bparker Exp bparker $
d438 2
a439 2
        int     adcflag;
        int     slidersflag;
d443 27
a469 10
        int     orig_gui;
	int     m_axes;  /* model axes */
	int     v_axes;  /* view axes */
	int	v_axes_pos; /* view axes position */
	int     e_axes;  /* edit axes */
        int     linewidth;
        int     linestyle;
        int     send_key;
        int     hot_key;
        int     context;
d472 4
a475 1
	int	echo_nirt_cmd;
d484 14
a497 1
	int	rubber_band;
d500 1
a500 1
	char	nirt_behavior;
@


11.68
log
@a few new mged_variables
@
text
@d45 1
a45 1
 *  $Header: /m/cad/mged/RCS/ged.h,v 11.67 1997/12/22 18:39:14 bparker Exp bparker $
a453 1
	int	nirt_behavior;
d467 1
a468 1
	char	ecoords;
a469 1
	char	erotate_about;
@


11.67
log
@add mged_variables in support of nirt
@
text
@d45 1
a45 1
 *  $Header: /m/cad/mged/RCS/ged.h,v 11.66 1997/11/12 21:53:25 bparker Exp bparker $
a454 1
	int	mouse_nirt;
d457 11
@


11.66
log
@add two more mged_variables:
	perspective_mode - used to toggle perspective viewing on/off
	toggle_perspective - used to toggle through values in perspective_table[]
@
text
@d45 1
a45 1
 *  $Header: /m/cad/mged/RCS/ged.h,v 11.65 1997/11/06 20:06:38 bparker Exp bparker $
d454 4
@


11.65
log
@add new mged variables: ecoords and erotate_about
@
text
@d45 1
a45 1
 *  $Header: /m/cad/mged/RCS/ged.h,v 11.64 1997/09/08 18:35:11 bparker Exp bparker $
d462 3
a464 1
	double	perspective;	/* >0 implies perspective viewing is on. */
@


11.64
log
@new member to "struct _mged_variables" ---> v_axes_pos
@
text
@d45 1
a45 1
 *  $Header: /m/cad/mged/RCS/ged.h,v 11.63 1997/09/03 14:17:07 bparker Exp bparker $
d455 1
d457 1
@


11.63
log
@new mged variable: dlist
@
text
@d45 1
a45 1
 *  $Header: /m/cad/mged/RCS/ged.h,v 11.62 1997/07/25 20:51:10 bparker Exp bparker $
d446 1
@


11.62
log
@2 new mged variables ---- linewidth and linestyle (0 - solid  1 - dashed)
@
text
@d45 1
a45 1
 *  $Header: /m/cad/mged/RCS/ged.h,v 11.61 1997/06/25 13:44:08 bparker Exp bparker $
d452 1
@


11.61
log
@some renaming of newer mged_variables
@
text
@d45 1
a45 1
 *  $Header: /m/cad/mged/RCS/ged.h,v 11.60 1997/06/14 02:28:59 gdurf Exp bparker $
d447 2
@


11.60
log
@Added "dbih" variable, which keeps track of a Tcl handle to the database
instance.
@
text
@d45 1
a45 1
 *  $Header: /m/cad/mged/RCS/ged.h,v 11.59 1997/06/14 02:28:12 gdurf Exp gdurf $
d443 2
a444 2
        int     show_menu;
	int     w_axes;  /* world view axes */
a448 1
	int	edit;
d450 3
a452 4
        int     eyerot;
	int	constrain;
	int	model;
	char	origin;
@


11.59
log
@changes by bparker
@
text
@d45 1
a45 1
 *  $Header: /m/cad/mged/RCS/ged.h,v 11.58 1997/06/03 16:03:59 pjt Exp bparker $
d92 1
@


11.58
log
@Added units um, km, yd, mi, and other minor improvements
@
text
@d45 1
a45 1
 *  $Header: /m/cad/mged/RCS/ged.h,v 11.57 1997/05/29 14:16:43 bparker Exp pjt $
d451 3
@


11.57
log
@changed scroll_enabled to slidersflag
@
text
@d45 1
a45 1
 *  $Header: /m/cad/mged/RCS/ged.h,v 11.56 1997/04/16 20:24:33 bparker Exp bparker $
d59 9
a67 5
#define ID_MM_UNIT	1		/* milimeters (preferred) */
#define ID_CM_UNIT	2		/* centimeters */
#define ID_M_UNIT	3		/* meters */
#define ID_IN_UNIT	4		/* inches */
#define ID_FT_UNIT	5		/* feet */
a447 1
	int     view;
@


11.56
log
@add declarations for eraseobj and eraseobjall
@
text
@d45 1
a45 1
 *  $Header: /m/cad/mged/RCS/ged.h,v 11.55 1997/03/25 14:43:44 jra Exp bparker $
d434 1
a434 1
        int     scroll_enabled;
@


11.55
log
@Mods to support MGED's read-only mode.
@
text
@d45 1
a45 1
 *  $Header: /m/cad/mged/RCS/ged.h,v 11.54 1997/03/12 20:49:00 jra Exp jra $
d185 1
a185 1
extern void		eraseobj(), mged_finish(), slewview(),
a191 1
#if 0
a192 1
#endif
@


11.54
log
@Added ID_XXX_UNIT and ARBX deinitions from db.h
@
text
@d45 1
a45 1
 *  $Header: /m/cad/mged/RCS/ged.h,v 11.53 1997/02/28 21:19:22 bparker Exp jra $
d390 7
@


11.53
log
@*- add a few constants as requested by jra
*- declaration for mmenu_set_all
@
text
@d45 1
a45 1
 *  $Header: /m/cad/mged/RCS/ged.h,v 11.52 1997/02/04 22:18:20 bparker Exp bparker $
d52 1
d54 1
d57 14
@


11.52
log
@add new mged variable ---- eyerot
@
text
@d45 1
a45 1
 *  $Header: /m/cad/mged/RCS/ged.h,v 11.51 1997/01/24 20:50:06 bparker Exp bparker $
d52 5
d173 1
a173 1
			adcursor(), mmenu_display(), mmenu_set(),
@


11.51
log
@add member to struct cmd_list ----> quote_string
@
text
@d45 1
a45 1
 *  $Header: /m/cad/mged/RCS/ged.h,v 11.50 1997/01/10 18:30:27 bparker Exp bparker $
d421 1
@


11.50
log
@move command declarations into cmd.h
@
text
@d45 1
a45 1
 *  $Header: /m/cad/mged/RCS/ged.h,v 11.49 1996/12/30 22:41:20 bparker Exp bparker $
d394 1
@


11.49
log
@added mged variable
@
text
@d45 1
a45 1
 *  $Header: /m/cad/mged/RCS/ged.h,v 11.48 1996/12/13 23:10:54 bparker Exp bparker $
a449 154
/* Commands */

MGED_EXTERN(int f_3ptarb, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_adc, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_aetview, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_aim, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_aip, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_amtrack, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_analyze, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_arbdef, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_arced, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_area, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_attach, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_bev, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_blast, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_cat, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_center, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_color, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_comb, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_comb_color, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_comb_std, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_comm, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_concat, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_copy, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_copy_inv, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_copyeval, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_debug, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_debugbu, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_debugdir, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_debuglib, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_debugmem, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_debugnmg, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_delay, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_delobj, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_dm, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_dup, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_edcodes, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_edmater, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_edcolor, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_edcomb, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_edgedir, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_edit, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_eqn, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_ev, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_evedit, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_extrude, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_facedef, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_facetize, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_fhelp, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_find, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_fix, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_fracture, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_group, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_help, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_hideline, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_history, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_ill, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_in, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_inside, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_instance, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_itemair, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_joint, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_journal, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_keep, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_keypoint, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_kill, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_killall, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_killtree, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_knob, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_labelvert, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
/* MGED_EXTERN(int f_list, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv)); */
MGED_EXTERN(int f_load_dv, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_make, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_mater, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_matpick, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_memprint, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_mirface, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_mirror, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_mouse, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_mvall, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_name, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_nirt, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_opendb, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_orientation, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_overlay, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_param, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_pathsum, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_permute, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_pl, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_plot, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_polybinout, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_pov, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_prcolor, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_prefix, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_press, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_preview, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_ps, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_push, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_putmat, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_quit, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_qorot, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_qvrot, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_rcodes, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_red, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_refresh, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_regdebug, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_regdef, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_region, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_release, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_rfarb, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_rm, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_rmater, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_rmats, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_rot_obj, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_rrt, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_rt, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_rtcheck, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_savekey, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_saveview, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_sc_obj, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_sed, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_set, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_setview, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_shader, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_shells, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_showmats, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_source, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_status, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_summary, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_slewview, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_sync, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_tables, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_tabobj, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_tedit, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_tie, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_title, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_tol, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_tops, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_tr_obj, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_tree, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_units, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_untie, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_update, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_view, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_vrmgr, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_vrot, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_vrot_center, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_wcodes, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_which_id, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_winset, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_wmater, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_xpush, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_zap, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
MGED_EXTERN(int f_zoom, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
@


11.48
log
@weekend checkin
@
text
@d45 1
a45 1
 *  $Header: /m/cad/mged/RCS/ged.h,v 11.47 1996/12/09 23:01:26 bparker Exp bparker $
d419 1
@


11.47
log
@mods to allow any kind of view manipulation at any time --- not quite done yet
@
text
@d45 1
a45 1
 *  $Header: /m/cad/mged/RCS/ged.h,v 11.46 1996/11/27 08:53:41 mike Exp bparker $
d142 1
@


11.46
log
@Added debugbu
@
text
@d45 1
a45 1
 *  $Header: /m/cad/mged/RCS/ged.h,v 11.45 1996/11/21 14:49:32 bparker Exp mike $
d417 1
@


11.45
log
@moved UP and DOWN to solid.h
@
text
@d45 1
a45 1
 *  $Header: /m/cad/mged/RCS/ged.h,v 11.44 1996/11/19 21:01:48 bparker Exp bparker $
d474 1
@


11.44
log
@*** empty log message ***
@
text
@d45 1
a45 1
 *  $Header: /m/cad/mged/RCS/ged.h,v 11.43 1996/11/01 22:16:05 bparker Exp bparker $
a212 6

/*
 * "Standard" flag settings
 */
#define UP	0
#define DOWN	1
@


11.43
log
@add declarations for f_aetview and f_update
@
text
@d45 1
a45 1
 *  $Header: /m/cad/mged/RCS/ged.h,v 11.42 1996/09/25 20:22:19 bparker Exp bparker $
a456 1
MGED_EXTERN(int f_aeview, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
@


11.42
log
@added declaration for f_pl
@
text
@d45 1
a45 1
 *  $Header: /m/cad/mged/RCS/ged.h,v 11.41 1996/09/17 21:19:40 bparker Exp bparker $
d458 1
d595 1
@


11.41
log
@prepare to use libdm
@
text
@d45 1
a45 1
 *  $Header: /m/cad/mged/RCS/ged.h,v 11.40 1996/09/03 20:02:37 bparker Exp bparker $
d540 1
@


11.40
log
@rt_list ---> bu_list
@
text
@d45 1
a45 1
 *  $Header: /m/cad/mged/RCS/ged.h,v 11.39 1996/08/27 20:30:05 bparker Exp bparker $
a133 3
				
#define VIEWSIZE	(2*Viewscale)	/* Width of viewing cube */
#define VIEWFACTOR	(1/Viewscale)	/* 2.0 / VIEWSIZE */
@


11.39
log
@now using libbu
@
text
@d45 1
a45 1
 *  $Header: /m/cad/mged/RCS/ged.h,v 11.38 1996/08/22 20:48:58 bparker Exp bparker $
d389 1
a389 1
  struct rt_list l;
d397 1
a397 1
  struct rt_list l;
@


11.38
log
@add declarations for new commands: f_edmater, f_rmater, f_wmater.
@
text
@d45 1
a45 1
 *  $Header: /m/cad/mged/RCS/ged.h,v 11.37 1996/07/30 21:29:22 bparker Exp bparker $
d201 1
a201 1
MGED_EXTERN(void do_list, (struct rt_vls *outstrp, struct directory *dp, int verbose));
d261 1
d276 1
d390 1
a390 1
  struct rt_vls command;
d400 2
a401 2
  struct rt_vls more_default;
  struct rt_vls name;
@


11.37
log
@*** empty log message ***
@
text
@d45 1
a45 1
 *  $Header: /m/cad/mged/RCS/ged.h,v 11.36 1996/07/25 18:53:40 bparker Exp bparker $
d490 1
d563 1
d601 1
@


11.36
log
@declare f_load_dv
@
text
@d45 1
a45 1
 *  $Header: /m/cad/mged/RCS/ged.h,v 11.35 1996/06/21 16:03:52 bparker Exp bparker $
d418 3
a420 3
	int     w_axis;  /* world view axis */
	int     v_axis;  /* view axis */
	int     e_axis;  /* edit axis */
@


11.35
log
@ moved adcflag and scroll_enabled over to mged_variables
@
text
@d45 1
a45 1
 *  $Header: /m/cad/mged/RCS/ged.h,v 11.34 1996/06/14 20:12:20 bparker Exp bparker $
d523 1
@


11.34
log
@using vls for name
@
text
@d45 1
a45 1
 *  $Header: /m/cad/mged/RCS/ged.h,v 11.33 1996/05/24 18:48:12 bparker Exp bparker $
d401 1
d412 2
@


11.33
log
@added declarations for tran() and irot()
@
text
@d45 1
a45 1
 *  $Header: /m/cad/mged/RCS/ged.h,v 11.32 1996/05/02 21:33:02 bparker Exp bparker $
d399 1
a399 1
  char name[32];
@


11.32
log
@Still Tcl'ing the code
@
text
@d45 1
a45 1
 *  $Header: /m/cad/mged/RCS/ged.h,v 11.31 1996/04/24 16:20:56 bparker Exp bparker $
d162 1
@


11.31
log
@still tcl-converting
@
text
@d45 1
a45 1
 *  $Header: /m/cad/mged/RCS/ged.h,v 11.30 1996/04/18 20:28:43 bparker Exp bparker $
d157 2
d176 1
a176 1
extern void		sig2();
d455 1
d548 1
d591 1
@


11.30
log
@convert commands to Tcl
@
text
@d45 1
a45 1
 *  $Header: /m/cad/mged/RCS/ged.h,v 11.29 1996/04/03 22:01:20 bparker Exp bparker $
d160 1
d170 3
a172 1
extern void		attach(), release(), get_attached();
d178 1
a178 1
extern int              mged_cmd_arg_check();
d539 1
d575 1
d582 1
a587 1
MGED_EXTERN(int f_tie, (ClientData clientData, Tcl_Interp *interp, int argc, char **argv));
@


11.29
log
@added new member to struct cmd_list --- more_default.
more_default is used to hold a default string
@
text
@d45 1
a45 1
 *  $Header: /m/cad/mged/RCS/ged.h,v 11.28 1996/04/01 22:12:35 bparker Exp bparker $
d50 1
d161 1
a161 1
			pr_schain();
d175 1
d272 44
d369 11
d396 2
d443 1
d447 140
a586 140
MGED_EXTERN(int f_3ptarb, (int argc, char **argv));
MGED_EXTERN(int f_adc, (int argc, char **argv));
MGED_EXTERN(int f_aeview, (int argc, char **argv));
MGED_EXTERN(int f_aip, (int argc, char **argv));
MGED_EXTERN(int f_amtrack, (int argc, char **argv));
MGED_EXTERN(int f_analyze, (int argc, char **argv));
MGED_EXTERN(int f_arbdef, (int argc, char **argv));
MGED_EXTERN(int f_arced, (int argc, char **argv));
MGED_EXTERN(int f_area, (int argc, char **argv));
MGED_EXTERN(int f_attach, (int argc, char **argv));
MGED_EXTERN(int f_bev, (int argc, char **argv));
MGED_EXTERN(int f_blast, (int argc, char **argv));
MGED_EXTERN(int f_cat, (int argc, char **argv));
MGED_EXTERN(int f_center, (int argc, char **argv));
MGED_EXTERN(int f_color, (int argc, char **argv));
MGED_EXTERN(int f_comb, (int argc, char **argv));
MGED_EXTERN(int f_comb_color, (int argc, char **argv));
MGED_EXTERN(int f_comb_std, (int argc, char **argv));
MGED_EXTERN(int f_comm, (int argc, char **argv));
MGED_EXTERN(int f_concat, (int argc, char **argv));
MGED_EXTERN(int f_copy, (int argc, char **argv));
MGED_EXTERN(int f_copy_inv, (int argc, char **argv));
MGED_EXTERN(int f_copyeval, (int argc, char **argv));
MGED_EXTERN(int f_debug, (int argc, char **argv));
MGED_EXTERN(int f_debugdir, (int argc, char **argv));
MGED_EXTERN(int f_debuglib, (int argc, char **argv));
MGED_EXTERN(int f_debugmem, (int argc, char **argv));
MGED_EXTERN(int f_debugnmg, (int argc, char **argv));
MGED_EXTERN(int f_delay, (int argc, char **argv));
MGED_EXTERN(int f_delobj, (int argc, char **argv));
MGED_EXTERN(int f_dm, (int argc, char **argv));
MGED_EXTERN(int f_dup, (int argc, char **argv));
MGED_EXTERN(int f_edcodes, (int argc, char **argv));
MGED_EXTERN(int f_edcolor, (int argc, char **argv));
MGED_EXTERN(int f_edcomb, (int argc, char **argv));
MGED_EXTERN(int f_edgedir, (int argc, char **argv));
MGED_EXTERN(int f_edit, (int argc, char **argv));
MGED_EXTERN(int f_eqn, (int argc, char **argv));
MGED_EXTERN(int f_ev, (int argc, char **argv));
MGED_EXTERN(int f_evedit, (int argc, char **argv));
MGED_EXTERN(int f_extrude, (int argc, char **argv));
MGED_EXTERN(int f_facedef, (int argc, char **argv));
MGED_EXTERN(int f_facetize, (int argc, char **argv));
MGED_EXTERN(int f_fhelp, (int argc, char **argv));
MGED_EXTERN(int f_find, (int argc, char **argv));
MGED_EXTERN(int f_fix, (int argc, char **argv));
MGED_EXTERN(int f_fracture, (int argc, char **argv));
MGED_EXTERN(int f_group, (int argc, char **argv));
MGED_EXTERN(int f_help, (int argc, char **argv));
MGED_EXTERN(int f_hideline, (int argc, char **argv));
MGED_EXTERN(int f_history, (int argc, char **argv));
MGED_EXTERN(int f_ill, (int argc, char **argv));
MGED_EXTERN(int f_in, (int argc, char **argv));
MGED_EXTERN(int f_inside, (int argc, char **argv));
MGED_EXTERN(int f_instance, (int argc, char **argv));
MGED_EXTERN(int f_itemair, (int argc, char **argv));
MGED_EXTERN(int f_joint, (int argc, char **argv));
MGED_EXTERN(int f_journal, (int argc, char **argv));
MGED_EXTERN(int f_keep, (int argc, char **argv));
MGED_EXTERN(int f_keypoint, (int argc, char **argv));
MGED_EXTERN(int f_kill, (int argc, char **argv));
MGED_EXTERN(int f_killall, (int argc, char **argv));
MGED_EXTERN(int f_killtree, (int argc, char **argv));
MGED_EXTERN(int f_knob, (int argc, char **argv));
MGED_EXTERN(int f_labelvert, (int argc, char **argv));
/* MGED_EXTERN(int f_list, (int argc, char **argv)); */
MGED_EXTERN(int f_make, (int argc, char **argv));
MGED_EXTERN(int f_mater, (int argc, char **argv));
MGED_EXTERN(int f_matpick, (int argc, char **argv));
MGED_EXTERN(int f_memprint, (int argc, char **argv));
MGED_EXTERN(int f_mirface, (int argc, char **argv));
MGED_EXTERN(int f_mirror, (int argc, char **argv));
MGED_EXTERN(int f_mouse, (int argc, char **argv));
MGED_EXTERN(int f_mvall, (int argc, char **argv));
MGED_EXTERN(int f_name, (int argc, char **argv));
MGED_EXTERN(int f_nirt, (int argc, char **argv));
MGED_EXTERN(int f_opendb, (int argc, char **argv));
MGED_EXTERN(int f_orientation, (int argc, char **argv));
MGED_EXTERN(int f_overlay, (int argc, char **argv));
MGED_EXTERN(int f_param, (int argc, char **argv));
MGED_EXTERN(int f_pathsum, (int argc, char **argv));
MGED_EXTERN(int f_permute, (int argc, char **argv));
MGED_EXTERN(int f_plot, (int argc, char **argv));
MGED_EXTERN(int f_polybinout, (int argc, char **argv));
MGED_EXTERN(int f_pov, (int argc, char **argv));
MGED_EXTERN(int f_prcolor, (int argc, char **argv));
MGED_EXTERN(int f_prefix, (int argc, char **argv));
MGED_EXTERN(int f_press, (int argc, char **argv));
MGED_EXTERN(int f_preview, (int argc, char **argv));
MGED_EXTERN(int f_push, (int argc, char **argv));
MGED_EXTERN(int f_putmat, (int argc, char **argv));
MGED_EXTERN(int f_quit, (int argc, char **argv));
MGED_EXTERN(int f_qorot, (int argc, char **argv));
MGED_EXTERN(int f_qvrot, (int argc, char **argv));
MGED_EXTERN(int f_red, (int argc, char **argv));
MGED_EXTERN(int f_refresh, (int argc, char **argv));
MGED_EXTERN(int f_regdebug, (int argc, char **argv));
MGED_EXTERN(int f_regdef, (int argc, char **argv));
MGED_EXTERN(int f_region, (int argc, char **argv));
MGED_EXTERN(int f_release, (int argc, char **argv));
MGED_EXTERN(int f_rfarb, (int argc, char **argv));
MGED_EXTERN(int f_rm, (int argc, char **argv));
MGED_EXTERN(int f_rmats, (int argc, char **argv));
MGED_EXTERN(int f_rot_obj, (int argc, char **argv));
MGED_EXTERN(int f_rrt, (int argc, char **argv));
MGED_EXTERN(int f_rt, (int argc, char **argv));
MGED_EXTERN(int f_rtcheck, (int argc, char **argv));
MGED_EXTERN(int f_savekey, (int argc, char **argv));
MGED_EXTERN(int f_saveview, (int argc, char **argv));
MGED_EXTERN(int f_sc_obj, (int argc, char **argv));
MGED_EXTERN(int f_sed, (int argc, char **argv));
MGED_EXTERN(int f_set, (int argc, char **argv));
MGED_EXTERN(int f_setview, (int argc, char **argv));
MGED_EXTERN(int f_shader, (int argc, char **argv));
MGED_EXTERN(int f_shells, (int argc, char **argv));
MGED_EXTERN(int f_showmats, (int argc, char **argv));
MGED_EXTERN(int f_source, (int argc, char **argv));
MGED_EXTERN(int f_status, (int argc, char **argv));
MGED_EXTERN(int f_summary, (int argc, char **argv));
MGED_EXTERN(int f_slewview, (int argc, char **argv));
MGED_EXTERN(int f_sync, (int argc, char **argv));
MGED_EXTERN(int f_tables, (int argc, char **argv));
MGED_EXTERN(int f_tabobj, (int argc, char **argv));
MGED_EXTERN(int f_tedit, (int argc, char **argv));
MGED_EXTERN(int f_title, (int argc, char **argv));
MGED_EXTERN(int f_tol, (int argc, char **argv));
MGED_EXTERN(int f_tops, (int argc, char **argv));
MGED_EXTERN(int f_tr_obj, (int argc, char **argv));
MGED_EXTERN(int f_tree, (int argc, char **argv));
MGED_EXTERN(int f_units, (int argc, char **argv));
MGED_EXTERN(int f_view, (int argc, char **argv));
MGED_EXTERN(int f_vrmgr, (int argc, char **argv));
MGED_EXTERN(int f_vrot, (int argc, char **argv));
MGED_EXTERN(int f_vrot_center, (int argc, char **argv));
MGED_EXTERN(int f_which_id, (int argc, char **argv));
MGED_EXTERN(int f_tie, (int argc, char **argv));
MGED_EXTERN(int f_winset, (int argc, char **argv));
MGED_EXTERN(int f_xpush, (int argc, char **argv));
MGED_EXTERN(int f_zap, (int argc, char **argv));
MGED_EXTERN(int f_zoom, (int argc, char **argv));
@


11.28
log
@added struct cmd_list
@
text
@d45 1
a45 1
 *  $Header: /m/cad/mged/RCS/ged.h,v 11.27 1996/03/22 18:40:34 bparker Exp bparker $
d330 1
a330 1
/* variables related to the command window(s) */
d335 1
@


11.27
log
@cleanup
@
text
@d45 1
a45 1
 *  $Header: /m/cad/mged/RCS/ged.h,v 11.26 1996/03/11 21:46:28 bparker Exp bparker $
d47 4
d323 17
@


11.26
log
@added declaration for the tie command
@
text
@d45 1
a45 1
 *  $Header: /m/cad/mged/RCS/ged.h,v 11.25 1996/02/28 21:33:59 bparker Exp bparker $
a66 5
#ifndef MULTI_ATTACH
extern int		dmaflag;	       /* !0 forces screen update */
#endif


a124 7
#ifndef MULTI_ATTACH
extern fastf_t	Viewscale;		/* dist from center to edge of RPP */
extern mat_t	Viewrot;
extern mat_t	toViewcenter;
extern mat_t	model2view, view2model;
extern mat_t	model2objview, objview2model;
#endif
a148 25
#ifndef MULTI_ATTACH
/* defined in chgview.c */
extern int	rateflag_slew;
extern vect_t	rate_slew;
extern vect_t	absolute_slew;

extern int	rateflag_rotate;
extern vect_t	rate_rotate;
extern vect_t	absolute_rotate;

extern int	rateflag_zoom;
extern fastf_t	rate_zoom;
extern fastf_t	absolute_zoom;

/*
 * These variables are global for the benefit of
 * the display portion of dozoom. - defined in adc.c
 */
extern fastf_t	curs_x;		/* cursor X position */
extern fastf_t	curs_y;		/* cursor Y position */
extern fastf_t	c_tdist;	/* Cursor tick distance */
extern fastf_t	angle1;		/* Angle to solid wiper */
extern fastf_t	angle2;		/* Angle to dashed wiper */
#endif

a216 5
/* defined in buttons.c */
#ifndef MULTI_ATTACH
extern int	adcflag;	/* angle/distance cursor in use */
#endif

a320 1
#ifdef MULTI_ATTACH
a321 3
#else
struct mged_variables {
#endif
a330 1
#ifdef SEND_KEY_DOWN_PIPE
a332 1
#endif
a344 4
#ifndef MULTI_ATTACH
extern struct mged_variables mged_variables;
#endif

a499 1
#ifdef MULTI_ATTACH
a501 1
#endif
@


11.25
log
@added hot_key
@
text
@d45 1
a45 1
 *  $Header: /m/cad/mged/RCS/ged.h,v 11.24 1996/02/12 21:48:33 bparker Exp bparker $
d553 1
@


11.24
log
@*** empty log message ***
@
text
@d45 1
a45 1
 *  $Header: /m/cad/mged/RCS/ged.h,v 11.23 1996/02/09 22:13:46 bparker Exp bparker $
d379 1
@


11.23
log
@*** empty log message ***
@
text
@d45 1
a45 1
 *  $Header: /m/cad/mged/RCS/ged.h,v 11.22 1996/02/01 18:32:09 pjt Exp bparker $
d377 3
a379 1
	int     focus;
@


11.22
log
@Implemented putmat command
@
text
@d45 1
a45 1
 *  $Header: /m/cad/mged/RCS/ged.h,v 11.21 1996/02/01 17:19:04 bparker Exp pjt $
a373 1
	int	predictor;
d379 1
@


11.21
log
@*** empty log message ***
@
text
@d45 1
a45 1
 *  $Header: /m/cad/mged/RCS/ged.h,v 11.20 1996/01/17 22:11:03 bparker Exp bparker $
d504 1
@


11.20
log
@playing it safe
@
text
@d45 1
a45 1
 *  $Header: /m/cad/mged/RCS/ged.h,v 11.19 1996/01/05 22:08:48 bparker Exp bparker $
d548 1
d550 1
@


11.19
log
@Just playing it safe
@
text
@d45 1
a45 1
 *  $Header: /m/cad/mged/RCS/ged.h,v 11.18 1995/12/27 22:33:51 bparker Exp bparker $
d373 1
@


11.18
log
@Experimenting with attaching
more than one display manager
@
text
@d45 1
a45 1
 *  $Header: /m/cad/mged/RCS/ged.h,v 11.17 1995/12/07 16:33:44 jra Exp bparker $
d67 1
a67 62
#ifdef MULTI_ATTACH
extern struct dm_list *dm_list_curr;

#define mged_variables dm_list_curr->_mged_variables
#define dmaflag dm_list_curr->_dmaflag

#define adcflag dm_list_curr->_adcflag
#define curs_x dm_list_curr->_curs_x
#define curs_y dm_list_curr->_curs_y
#define c_tdist dm_list_curr->_c_tdist
#define angle1 dm_list_curr->_angle1
#define angle2 dm_list_curr->_angle2

#define rateflag_slew dm_list_curr->_rateflag_slew
#define rate_slew dm_list_curr->_rate_slew
#define absolute_slew dm_list_curr->_absolute_slew
#define rateflag_rotate dm_list_curr->_rateflag_rotate
#define rate_rotate dm_list_curr->_rate_rotate
#define absolute_rotate dm_list_curr->_absolute_rotate
#define rateflag_zoom dm_list_curr->_rateflag_zoom
#define rate_zoom dm_list_curr->_rate_zoom
#define absolute_zoom dm_list_curr->_absolute_zoom

#define Viewscale dm_list_curr->_Viewscale
#define Viewrot dm_list_curr->_Viewrot
#define toViewcenter dm_list_curr->_toViewcenter
#define model2view dm_list_curr->_model2view
#define view2model dm_list_curr->_view2model
#define model2objview dm_list_curr->_model2objview
#define objview2model dm_list_curr->_objview2model

#if 0
#define dmp->dmr_open dm_list_curr->dmp->dmr_open
#define dmp->dmr_close dm_list_curr->dmp->dmr_close
#define dmp->dmr_input dm_list_curr->dmp->dmr_input
#define dmp->dmr_prolog dm_list_curr->dmp->dmr_prolog
#define dmp->dmr_epilog dm_list_curr->dmp->dmr_epilog
#define dmp->dmr_normal dm_list_curr->dmp->dmr_normal
#define dmp->dmr_newrot dm_list_curr->dmp->dmr_newrot
#define dmp->dmr_update dm_list_curr->dmp->dmr_update
#define dmp->dmr_puts dm_list_curr->dmp->dmr_puts
#define dmp->dmr_2d_line dm_list_curr->dmp->dmr_2d_line
#define dmp->dmr_light dm_list_curr->dmp->dmr_light
#define dmp->dmr_object dm_list_curr->dmp->dmr_object
#define dmp->dmr_cvtvecs dm_list_curr->dmp->dmr_cvtvecs
#define dmp->dmr_load dm_list_curr->dmp->dmr_load
#define dmp->dmr_statechange dm_list_curr->dmp->dmr_statechange
#define dmp->dmr_viewchange dm_list_curr->dmp->dmr_viewchange
#define dmp->dmr_colorchange dm_list_curr->dmp->dmr_colorchange
#define dmp->dmr_window dm_list_curr->dmp->dmr_window
#define dmp->dmr_debug dm_list_curr->dmp->dmr_debug
#define dmp->dmr_displaylist dm_list_curr->dmp->dmr_displaylist
#define dmp->dmr_releasedisplay dm_list_curr->dmp->dmr_releasedisplay
#define dmp->dmr_bound dm_list_curr->dmp->dmr_bound
#define dmp->dmr_name dm_list_curr->dmp->dmr_name
#define dmp->dmr_lname dm_list_curr->dmp->dmr_lname
#define dmp->dmr_map dm_list_curr->dmp->dmr_map
#define dmp->dmr_cmd dm_list_curr->dmp->dmr_cmd
#else
#define dmp dm_list_curr->_dmp
#endif
#else
d547 1
@


11.17
log
@Added declaration for f_showmats().
@
text
@d45 1
a45 1
 *  $Header: /m/cad/mged/RCS/ged.h,v 11.16 1995/12/04 22:04:58 bparker Exp jra $
d67 62
d130 1
d191 1
d197 2
d222 1
d245 1
d316 1
d318 1
d424 3
d428 1
d450 1
d452 1
@


11.16
log
@added to mged_variables: view and focus
,
,
./
@
text
@d45 1
a45 1
 *  $Header: /m/cad/mged/RCS/ged.h,v 11.15 1995/12/02 00:23:07 bparker Exp bparker $
d512 1
@


11.15
log
@added f_setview declaration
@
text
@d45 1
a45 1
 *  $Header: /m/cad/mged/RCS/ged.h,v 11.14 1995/11/09 22:23:23 bparker Exp bparker $
d364 2
@


11.14
log
@added f_slewview and f_aip
uncommented axis stuff
removed unnecessary xmged stuff
@
text
@d45 1
a45 1
 *  $Header: /m/cad/mged/RCS/ged.h,v 11.13 1995/09/26 20:21:21 pjt Exp bparker $
d507 1
@


11.13
log
@Implemented comb_color command
@
text
@d45 1
a45 1
 *  $Header: /n/wolf/m/cad/mged/RCS/ged.h,v 11.12 1995/08/25 20:50:42 cnuzman Exp butler $
a87 14
#ifdef XMGED
/* new I/O routines */
extern char	*mged_fgets();
extern char	*mged_gets();
extern int	mged_fgetc();
extern int	mged_fputc();
extern int	mged_fputs();
#if __STDC__
extern void	mged_fprintf(FILE *, char *, ...);
#else
extern void	mged_fprintf();
#endif
#endif

a308 44
#ifdef XMGED
#define READ_ERR { \
	(void)rt_log("Database read error, aborting\n"); }

#define READ_ERR_return		{ \
	READ_ERR; \
	return;  }

/* For errors from db_put() */
#define WRITE_ERR { \
	(void)rt_log("Database write error, aborting.\n"); \
	ERROR_RECOVERY_SUGGESTION; }	

#define WRITE_ERR_return	{ \
	WRITE_ERR; \
	return;  }

/* For errors from db_diradd() or db_alloc() */
#define ALLOC_ERR { \
	(void)rt_log("\
An error has occured while adding a new object to the database.\n"); \
	ERROR_RECOVERY_SUGGESTION; }

#define ALLOC_ERR_return	{ \
	ALLOC_ERR; \
	return;  }

/* For errors from db_delete() or db_dirdelete() */
#define DELETE_ERR(_name)	{ \
	(void)rt_log("\
An error has occurred while deleting '%s' from the database.\n", _name); \
	ERROR_RECOVERY_SUGGESTION; }

#define DELETE_ERR_return(_name)	{  \
	DELETE_ERR(_name); \
	return;  }

/* A verbose message to attempt to soothe and advise the user */
#define	ERROR_RECOVERY_SUGGESTION	\
	(void)rt_log("\
The in-memory table of contents may not match the status of the on-disk\n\
database.  The on-disk database should still be intact.  For safety,\n\
you should exit MGED now, and resolve the I/O problem, before continuing.\n")
#else
a350 1
#endif
a360 1
#ifdef XMGED
a363 1
#endif
d399 1
d512 1
@


11.12
log
@hacked around attach release bug with sgi/gl
@
text
@d45 1
a45 1
 *  $Header: /m/cad/mged/RCS/ged.h,v 11.11 1995/07/25 14:30:15 gdurf Exp cnuzman $
d472 1
d521 1
a521 1
MGED_EXTERN(int f_list, (int argc, char **argv));
@


11.11
log
@*** empty log message ***
@
text
@d45 1
a45 1
 *  $Header: /m/cad/mged/RCS/ged.h,v 11.10 1995/07/25 14:27:36 gdurf Exp gdurf $
d439 9
a447 1
#define MGED_PROMPT "mged> "
@


11.10
log
@Added output catch prototypes and MGED_PROMPT #define
@
text
@d45 1
a45 1
 *  $Header: /m/cad/mged/RCS/ged.h,v 11.9 1995/06/28 13:19:15 gdurf Exp gdurf $
d439 2
a441 2

#define MGED_PROMPT "mged> "
@


11.9
log
@Added externs
@
text
@d45 1
a45 1
 *  $Header: /m/cad/mged/RCS/ged.h,v 11.8 1995/06/23 20:21:42 pjt Exp gdurf $
d240 5
d440 2
@


11.8
log
@Added lexemes for the Boolean operations
@
text
@d45 1
a45 1
 *  $Header: /m/cad/mged/RCS/ged.h,v 11.7 1995/03/10 20:46:24 mike Exp $
d61 1
a61 1
extern struct db_i	*dbip;			/* defined in ged.c */
d64 2
a65 2
#define localunit	(dbip->dbi_localunit)	/* current local unit (index) */
#define	cur_title	(dbip->dbi_title)	/* current model title */
d67 1
a67 1
extern int		dmaflag;		/* !0 forces screen update */
d69 11
a79 1
#ifdef XMGED
d81 1
a81 1
#define False (0)
d85 1
a85 1
#define True (1)
d88 1
d235 4
d448 1
a471 1
MGED_EXTERN(int f_echo, (int argc, char **argv));
d508 1
d552 1
d556 1
d571 1
@


11.7
log
@Moved MAXARGS to ged.h, standardized on it's use, increased to 9000.
@
text
@d45 1
a45 1
 *  $Header: /m/cad/mged/RCS/ged.h,v 11.6 95/01/25 15:18:34 jra Exp Locker: mike $
d410 3
d441 1
@


11.6
log
@changed f_eval to f_bev.
@
text
@d45 1
a45 1
 *  $Header: /m/cad/mged/RCS/ged.h,v 11.5 95/01/25 13:20:30 jra Exp Locker: jra $
d413 2
@


11.5
log
@Added f_eval.
@
text
@d45 1
a45 1
 *  $Header: /n/wolf/m/cad/mged/RCS/ged.h,v 11.4 95/01/17 12:49:18 bparker Exp Locker: jra $
d430 1
a457 1
MGED_EXTERN(int f_eval, (int argc, char **argv));
@


11.4
log
@merging xmged sources
@
text
@d45 1
a45 1
 *  $Header: /m/cad/xmged/RCS/ged.h,v 11.2 95/01/17 11:45:08 bparker Exp $
d457 1
@


11.3
log
@Added externs for non-rate-based sliders
@
text
@d45 1
a45 1
 *  $Header: /m/cad/mged/RCS/ged.h,v 11.2 95/01/10 17:12:09 gdurf Exp Locker: gdurf $
d69 22
d303 1
d305 43
d389 1
a391 1

d400 5
@


11.2
log
@*** empty log message ***
@
text
@d45 1
a45 1
 *  $Header: /m/cad/mged/RCS/ged.h,v 11.1 95/01/04 10:03:11 mike Rel4_4 Locker: gdurf $
d140 2
d145 1
d148 1
@


11.1
log
@Release_4.4
@
text
@d45 1
a45 1
 *  $Header: /m/cad/mged/RCS/ged.h,v 10.23 94/12/28 01:12:15 gdurf Exp $
@


10.23
log
@Added extern for f_history, absolute_rotate
@
text
@d45 1
a45 1
 *  $Header: /m/cad/mged/RCS/ged.h,v 10.22 94/12/27 17:55:17 gdurf Exp Locker: gdurf $
@


10.22
log
@Added externs for f_delay and f_journal
@
text
@d45 1
a45 1
 *  $Header: /m/cad/mged/RCS/ged.h,v 10.21 94/12/27 16:58:47 mike Exp Locker: gdurf $
d142 1
d393 1
@


10.21
log
@Fixed bug #247, added rt_ prefix to memalloc(), etc.
@
text
@d45 1
a45 1
 *  $Header: /m/cad/mged/RCS/ged.h,v 10.20 94/12/23 23:48:17 gdurf Exp Locker: mike $
d369 1
d398 1
@


10.20
log
@Added prototype for do_list
@
text
@d45 1
a45 1
 *  $Header: /m/cad/mged/RCS/ged.h,v 10.19 94/12/23 22:27:46 gdurf Exp Locker: gdurf $
d179 3
a181 3
/* memalloc.c */
MGED_EXTERN(unsigned long memalloc, (struct mem_map **pp, unsigned size) );
MGED_EXTERN(unsigned long memget, (struct mem_map **pp, unsigned int size,
d183 3
a185 3
MGED_EXTERN(void memfree, (struct mem_map **pp, unsigned size, unsigned long addr) );
MGED_EXTERN(void mempurge, (struct mem_map **pp) );
MGED_EXTERN(void memprint, (struct mem_map **pp) );
@


10.19
log
@Added f_shader
@
text
@d45 1
a45 1
 *  $Header: /m/cad/mged/RCS/ged.h,v 10.18 94/12/23 14:20:47 gdurf Exp Locker: gdurf $
d194 3
@


10.18
log
@Added support for mmenu_set
@
text
@d45 1
a45 1
 *  $Header: /m/cad/mged/RCS/ged.h,v 10.17 94/08/27 03:18:21 mike Exp Locker: gdurf $
d343 1
a343 4
MGED_EXTERN(int f_3ptarb, (int argc, char **argv));	/* arbs.c */



d446 1
@


10.17
log
@Eliminated MIN() and MAX() from ged.h, in favor of V_MIN() and V_MAX()
from vmath.h, because some systems use the symbols MIN and MAX in
system header files.
@
text
@d45 1
a45 1
 *  $Header: /m/cad/mged/RCS/ged.h,v 10.16 94/08/19 16:13:24 pjt Exp Locker: mike $
d167 1
a167 1
			adcursor(), mmenu_display(),
@


10.16
log
@Implemented qorot command
@
text
@d45 1
a45 1
 *  $Header: /m/cad/mged/RCS/ged.h,v 10.15 94/08/17 16:16:38 pjt Exp Locker: pjt $
a244 3

#define MIN(a,b)	if( (b) < (a) )  a = b
#define MAX(a,b)	if( (b) > (a) )  a = b
@


10.15
log
@Implemented qvrot command
@
text
@d45 1
a45 1
 *  $Header: /m/cad/mged/RCS/ged.h,v 10.14 1994/08/09 18:14:39 gdurf Exp $
d432 1
@


10.14
log
@Removed old 3030 cruft
@
text
@d45 1
a45 1
 *  $Header: /m/cad/mged/RCS/ged.h,v 10.13 1994/08/09 10:26:18 pjt Exp gdurf $
d432 1
@


10.13
log
@Implemented the 'source' command
@
text
@d45 1
a45 1
 *  $Header: /m/cad/mged/RCS/ged.h,v 10.12 94/07/12 20:49:13 mike Exp Locker: pjt $
a170 4
#if defined(sgi) && !defined(mips)
extern int		(*cur_sigint)();	/* Current SIGINT status */
extern int		sig2(); 
#else
d173 1
a173 1
#endif
@


10.12
log
@# is only a CPP directive at the beginning of a line in K&R C.
@
text
@d45 1
a45 1
 *  $Header: /m/cad/mged/RCS/ged.h,v 10.11 1994/06/03 17:29:28 gdurf Exp gdurf $
d454 1
@


10.11
log
@Added MGED_EXTERN's for all f_ functions.
@
text
@d45 1
a45 1
 *  $Header: /m/cad/mged/RCS/ged.h,v 10.10 1993/07/15 21:21:56 mike Exp gdurf $
d316 2
a317 1
/* A verbose message to attempt to soothe and advise the user */#define	ERROR_RECOVERY_SUGGESTION	\
@


10.10
log
@Added "rateknobs".
@
text
@d45 1
a45 1
 *  $Header: /m/cad/mged/RCS/ged.h,v 10.9 92/08/24 19:51:05 mike Exp Locker: mike $
a165 1
			dir_print(),
d178 2
a179 2
extern void		aexists(), f_quit();
extern int		clip(), getname(), use_pen();
d280 3
d284 1
a284 1
	(void)printf("Database read error, aborting\n"); \
d288 4
d293 1
a293 2
	(void)printf("Database write error, aborting.\n"); \
	ERROR_RECOVERY_SUGGESTION; \
d297 1
a297 1
#define ALLOC_ERR_return	{ \
d300 4
a303 1
	ERROR_RECOVERY_SUGGESTION; \
d307 5
d313 1
a313 3
	(void)printf("\
An error has occured while deleting '%s' from the database.\n", _name); \
	ERROR_RECOVERY_SUGGESTION; \
d316 1
a316 2
/* A verbose message to attempt to soothe and advise the user */
#define	ERROR_RECOVERY_SUGGESTION	\
d340 131
@


10.9
log
@Added new variable "eye_sep_dist" to support Stereo viewing.
@
text
@d45 1
a45 1
 *  $Header: /m/cad/mged/RCS/ged.h,v 10.8 92/08/19 15:48:16 gdurf Exp Locker: mike $
d317 1
@


10.8
log
@added "recip_vanishing_point"
@
text
@d45 1
a45 1
 *  $Header: /m/cad/mged/RCS/ged.h,v 10.7 92/06/25 21:05:41 butler Exp Locker: gdurf $
d323 1
a323 1
	double	perspective;
d325 1
@


10.7
log
@added nmg_eu_dist to list of settable variables.
@
text
@d45 1
a45 1
 *  $Header: /m/cad/mged/RCS/ged.h,v 10.6 92/06/09 14:23:09 mike Exp Locker: butler $
d116 1
@


10.6
log
@Added ST_S_VPICK
@
text
@d45 1
a45 1
 *  $Header: /m/cad/mged/RCS/ged.h,v 10.5 92/04/18 00:40:43 mike Exp Locker: mike $
d323 1
@


10.5
log
@Added perspective variable
@
text
@d45 1
a45 1
 *  $Header: /m/cad/mged/RCS/ged.h,v 10.4 92/04/04 00:12:22 mike Exp Locker: mike $
d240 1
a240 1
extern int state;			/* (defined in dozoom.c) */
d248 1
@


10.4
log
@Added predictor and faceplate support
@
text
@d45 1
a45 1
 *  $Header: /m/cad/mged/RCS/ged.h,v 10.3 1991/12/18 08:10:25 mike Exp butler $
d321 1
@


10.3
log
@eliminated pr_solid()
@
text
@d45 1
a45 1
 *  $Header: /m/cad/mged/RCS/ged.h,v 10.2 91/11/04 22:35:19 mike Exp Locker: mike $
d317 4
@


10.2
log
@Added variables for rate-based processing
@
text
@d45 1
a45 1
 *  $Header: /m/cad/mged/RCS/ged.h,v 10.1 91/10/12 06:43:44 mike Rel4_0 Locker: mike $
d163 1
a163 1
			mmenu_init(), moveHinstance(), moveHobj(), pr_solid(),
@


10.1
log
@Release_4.0
@
text
@d45 1
a45 1
 *  $Header: /m/cad/mged/RCS/ged.h,v 9.15 91/10/11 11:33:01 butler Exp $
d136 8
d166 1
a166 1
			usepen(), setview(),
@


9.15
log
@mods to make SGI 3030 happy
@
text
@d45 1
a45 1
 *  $Header: /m/cad/mged/RCS/ged.h,v 9.14 91/08/31 07:35:05 butler Exp Locker: butler $
@


9.14
log
@added "configuration variables" for window size/position, and "autosize"
feature of geometry display.
@
text
@d45 1
a45 1
 *  $Header: /m/cad/mged/RCS/ged.h,v 9.13 91/07/01 22:33:44 mike Exp $
d157 1
a157 1
			sig2(), dir_print(),
d163 4
d168 2
d307 1
a307 1
	int	sgi_win_size;
@


9.13
log
@Eliminated local_unit[]
@
text
@d45 1
a45 1
 *  $Header: /m/cad/mged/RCS/ged.h,v 9.12 91/06/14 02:13:13 mike Exp $
d295 11
@


9.12
log
@mat_* routines should be defined in raytrace.h only
@
text
@d45 1
a45 1
 *  $Header: /m/cad/mged/RCS/ged.h,v 9.11 91/06/12 22:15:12 mike Exp $
a65 1
extern char		*local_unit[];			/* titles.c */
@


9.11
log
@Added some function prototypes
@
text
@d45 1
a45 1
 *  $Header: /m/cad/mged/RCS/ged.h,v 9.10 91/01/12 08:24:15 mike Exp $
a176 29

/* The matrix math routines */
MGED_EXTERN(double mat_atan2, (double y, double x) );
MGED_EXTERN(void mat_zero, (mat_t m) );
MGED_EXTERN(void mat_idn, (mat_t m) );
MGED_EXTERN(void mat_copy, (mat_t dest, mat_t src) );
MGED_EXTERN(void mat_mul, (mat_t dest, mat_t a, mat_t b) );
MGED_EXTERN(void matXvec, (vect_t dest, mat_t m, vect_t src) );
MGED_EXTERN(void mat_inv, (mat_t dest, mat_t src) );
/* XXX these two need mat_ on their names */
MGED_EXTERN(void vtoh_move, (hvect_t dest, vect_t src) );
MGED_EXTERN(void htov_move, (vect_t dest, hvect_t src) );
MGED_EXTERN(void mat_print, (char *title, mat_t m) );
MGED_EXTERN(void mat_trn, (mat_t dest, mat_t src) );
MGED_EXTERN(void mat_ae, (mat_t dest, double azimuth, double elev) );
/* XXX new name */
MGED_EXTERN(void ae_vec, (fastf_t *azp, fastf_t *elp, vect_t src) );
MGED_EXTERN(void mat_angles, (mat_t dest, double alpha, double beta, double ggamma) );
/* XXX new name */
MGED_EXTERN(void eigen2x2, (fastf_t *val1, fastf_t *val2,
	vect_t vec1, vect_t vec2, double a, double b, double c) );
MGED_EXTERN(void mat_fromto, (mat_t dest, vect_t from, vect_t to) );
MGED_EXTERN(void mat_xrot, (mat_t dest, double sinx, double cosx) );
MGED_EXTERN(void mat_yrot, (mat_t dest, double siny, double cosy) );
MGED_EXTERN(void mat_zrot, (mat_t dest, double sinz, double cosz) );
MGED_EXTERN(void mat_lookat, (mat_t dest, vect_t dir, int yflip) );
/* XXX new names */
MGED_EXTERN(void vec_ortho, (vect_t dest, vect_t src) );
MGED_EXTERN(void vec_perp, (vect_t dest, vect_t src) );
@


9.10
log
@finish -> mged_finish, due to stupid conflict with SGI's libgl
@
text
@d45 1
a45 1
 *  $Header: /m/cad/mged/RCS/ged.h,v 9.9 91/01/12 08:01:39 mike Exp $
d153 1
a153 1
extern void		dir_build(), buildHrot(), button(), dozoom(),
d206 8
@


9.9
log
@Eliminated crud
@
text
@d45 1
a45 1
 *  $Header: /m/cad/mged/RCS/ged.h,v 9.8 91/01/12 07:58:07 mike Exp $
d155 1
a155 1
extern void		eraseobj(), finish(), slewview(),
@


9.8
log
@USE_PROTOTYPES
@
text
@d45 1
a45 1
 *  $Header: /m/cad/mged/RCS/ged.h,v 9.7 90/12/07 23:10:31 mike Exp $
a165 1
extern char		*addname(), *strdup();
@


9.7
log
@Added general-purpose macros for error recovery.
@
text
@d45 1
a45 1
 *  $Header: /m/cad/mged/RCS/ged.h,v 9.6 90/12/06 23:57:32 mike Exp $
d47 7
a155 2
			htov_move(), mat_copy(), mat_idn(),
			mat_inv(), mat_mul(), mat_zero(), matXvec(),
d159 1
a159 1
			usepen(), vtoh_move(), setview(),
d170 37
a206 2
extern void		memfree(), mempurge();
extern unsigned long	memalloc(), memget();
@


9.6
log
@Removed some big-E global variables.
@
text
@d45 1
a45 1
 *  $Header: /m/cad/mged/RCS/ged.h,v 9.5 90/05/01 00:43:01 mike Exp $
d237 41
@


9.5
log
@Added surface normal tolerance
@
text
@d45 1
a45 1
 *  $Header: ged.h,v 9.4 90/04/25 21:48:45 mike Locked $
a118 3
/* defined in chgview.c */
extern int	drawreg;	/* if > 0, process and draw regions */

a123 5
/* defined in path.c */
extern int	regmemb;	/* # of members left to process in a region */
extern char	memb_oper;	/* op for present member of proc region */
extern int	reg_pathpos;	/* pathpos of a processed region */

d148 1
a148 1
extern void		drawHobj(), eraseobj(), finish(), slewview(),
@


9.4
log
@New vars
@
text
@d45 1
a45 1
 *  $Header: ged.h,v 9.3 90/04/21 06:02:33 mike Locked $
d64 3
a66 2
extern double		mged_abs_tol;
extern double		mged_rel_tol;
@


9.3
log
@housekeeping
@
text
@d45 1
a45 1
 *  $Header: ged.h,v 9.2 89/12/28 16:10:52 mike Locked $
d59 1
d61 5
a65 1
extern int	dmaflag;		/* Set !0 to force a new screen DMA */
@


9.2
log
@Made MAXARGS local to cmd.c, global 'maxargs' is used to learn of size.
Improved error checking in command globbing.
@
text
@d45 1
a45 1
 *  $Header: ged.h,v 9.1 89/05/19 06:03:13 mike Locked $
a126 1
extern int	reg_error;	/* error encountered in region processing */
d164 4
a167 4
extern int		clip(), getname(), use_pen(), drawHsolid();
extern struct directory	*combadd(), *dir_add(), *lookup(), **dir_getspace();
extern struct solid *redraw();
extern void		ellipse(), memfree(), mempurge();
d205 2
a206 2
#define ROOT	UP
#define INNER	DOWN
d225 11
a235 4
#define GETSTRUCT(p,str) \
	p = (struct str *)malloc((unsigned)sizeof(struct str)); \
	if( p == (struct str *)0 ) \
		(void)printf("getstruct( p, str ): malloc failed\n");/* cpp magic */
@


9.1
log
@Release_3.5
@
text
@d45 1
a45 1
 *  $Header: ged.h,v 8.4 89/04/21 04:43:22 mike Exp $
d232 1
a232 2
#define	MAXLINE		1024     /* Maximum number of chars per line */
#define	MAXARGS		200	/* Maximum number of args per line */
@


8.4
log
@Moved screen locations to titles.h

@
text
@d45 1
a45 1
 *  $Header: ged.h,v 8.3 89/04/06 19:36:55 mike Locked $
@


8.3
log
@moved MAXLINE and MAXARGS to this file.
upped MAXLINE from 512 to 1024.
@
text
@d45 1
a45 1
 *  $Header: ged.h,v 8.2 88/12/06 00:38:28 phil Locked $
a207 19

/*
 * Screen locations
 */
#define XMIN		(-2048)
#define XMAX		(2047)
#define YMIN		(-2048)
#define YMAX		(2047)
#define	MENUXLIM	(-1250)		/* Value to set X lim to for menu */
#define	MENUX		(-2048+115)	/* pixel position for menu, X */
#define	MENUY		1800		/* pixel position for menu, Y */
#define	MENU_DY		(-120)		/* Distance between menu items */

#define TITLE_XBASE	(-2048)		/* pixel X of title line start pos */
#define TITLE_YBASE	(-1920)		/* pixel pos of last title line */
#define SOLID_XBASE	MENUXLIM	/* X to start display text */
#define SOLID_YBASE	( 1920)		/* pixel pos of first solid line */
#define TEXT0_DY	(  -60)		/* #pixels per line, Size 0 */
#define TEXT1_DY	(  -90)		/* #pixels per line, Size 1 */
@


8.2
log
@Converted to new db_*() database interface routines
@
text
@d45 1
a45 1
 *  $Header: /cad/d/mike/cad/mged/RCS/ged.h,v 1.3 88/10/29 22:46:46 mike Exp $
d250 3
@


8.1
log
@Release_3.0
@
text
@d45 1
a45 1
 *  $Header: ged.h,v 7.6 88/09/17 02:35:53 reschly Exp $
d54 5
a58 3
extern double	base2local, local2base;	/* Defined in dir.c */
extern int 	localunit;		/* the current local unit (index) */
extern char	cur_title[];		/* current model title */
d97 1
a97 1
extern fastf_t	Viewscale;
d104 2
a105 2

#define VIEWSIZE	(2*Viewscale)
a107 2
extern fastf_t	maxview;

d151 1
a151 2
extern void		db_getrec(), db_putrec(), db_delete(), db_alloc(),
			drawHobj(), eraseobj(), finish(), slewview(),
a169 1
extern union record	*db_getmrec();
d243 1
d249 1
@


7.6
log
@added FILE pointers in preparation for pipes and redirects.
@
text
@d45 1
a45 1
 *  $Header: ged.h,v 7.5 88/07/22 01:53:35 reschly Locked $
@


7.5
log
@menu_ -> mmenu_ due to suntools
@
text
@d45 1
a45 1
 *  $Header: ged.h,v 7.4 88/05/15 23:04:28 phil Locked $
d143 3
@


7.4
log
@lint fixes
@
text
@d45 1
a45 1
 *  $Header: ged.h,v 7.3 87/11/14 05:06:48 mike Locked $
d152 1
a152 1
			menu_init(), moveHinstance(), moveHobj(), pr_solid(),
d156 1
a156 1
			adcursor(), menu_display(),
@


7.3
log
@Added definition for db_getmrec()
@
text
@d45 1
a45 1
 *  $Header: ged.h,v 7.2 87/11/05 05:02:37 mike Locked $
d159 1
d161 1
@


7.2
log
@Eliminated local machine.h, converted to fastf_t, now link with librt.a
@
text
@d45 1
a45 1
 *  $Header: ged.h,v 7.1 87/11/03 00:01:00 mike Rel $
d166 1
@


7.1
log
@Release 2.3
@
text
@d45 1
a45 1
 *  $Header: ged.h,v 6.1 87/07/11 08:04:14 mike Rel $
d95 1
a95 1
extern float	Viewscale;
d106 1
a106 1
extern float	maxview;
d117 2
a118 2
extern float	acc_sc_sol;	/* accumulate solid scale factor */
extern float	acc_sc[3];	/* accumulate local object scale factors */
d137 5
a141 5
extern float	curs_x;		/* cursor X position */
extern float	curs_y;		/* cursor Y position */
extern float	c_tdist;	/* Cursor tick distance */
extern float	angle1;		/* Angle to solid wiper */
extern float	angle2;		/* Angle to dashed wiper */
@


6.1
log
@Release 2.0
@
text
@d45 1
a45 1
 *  $Header: ged.h,v 5.1 87/06/24 22:21:00 mike Rel $
@


5.1
log
@Release 1.24
@
text
@d45 1
a45 1
 *  $Header: ged.h,v 4.3 87/02/13 00:07:50 mike Exp $
@


4.3
log
@Release 1.20 -- First Formal Release
@
text
@d45 1
a45 1
 *  $Header: ged.h,v 4.2 87/02/11 05:37:55 mike Exp $
@


4.2
log
@Minor cleanups inspired by the Cray
@
text
@d45 1
a45 1
 *  $Header: ged.h,v 4.1 86/12/29 03:21:53 mike Locked $
@


4.1
log
@BRL CAD Distribution Release 1.10
@
text
@d45 1
a45 1
 *  $Header: ged.h,v 2.11 86/12/19 04:34:53 mike Exp $
d147 1
a147 1
			pr_solids();
@


2.11
log
@Minor correction to comment
@
text
@d45 1
a45 1
 *  $Header: ged.h,v 2.10 86/05/27 22:18:14 mike Locked $
@


2.10
log
@Added declarations for col_pr4v(), dir_getspace().
@
text
@d10 1
a10 1
 *  (thanks to Newman and Sproull) with column vectors, ie:
d15 1
a15 1
 *  of row vectors is used (ref: Gwyn).  Therefore, when transforming
d45 1
a45 1
 *  $Header: ged.h,v 2.9 86/03/10 20:36:06 mike Exp $
@


2.9
log
@Latest features from Keith
@
text
@d45 1
a45 1
 *  $Header: ged.h,v 2.8 85/09/14 05:32:47 mike Exp $
d157 1
a157 1
			col_item(), col_putchar(), col_eol();
d162 1
a162 1
extern struct directory	*combadd(), *dir_add(), *lookup();
@


2.8
log
@Lint-inspired cleanup.
@
text
@d45 1
a45 1
 *  $Header: ged.h,v 2.7 85/08/07 05:14:28 mike Exp $
d118 1
d198 2
@


2.7
log
@Changed to have common vmath.h with RT and other programs in ../h
New header file ../h/machine.h created.
@
text
@d45 1
a45 1
 *  $Header: ged.h,v 2.6 85/05/29 23:19:12 mike Exp $
d120 1
a120 2
/* defined in e6.c */
extern struct directory	*path[];/* 'path' name of this solid */
d122 1
a122 1
extern char	memb_oper;	/* operation for present member of proc region */
@


2.6
log
@Menus moved to left side of screen.
@
text
@d45 1
a45 1
 *  $Header: ged.h,v 2.6 85/05/29 16:19:48 mike Exp $
d236 6
@


2.5
log
@Added multi-menu capability, added dmr_window and dmr_debug,
deleted dmr_restart.
@
text
@d45 1
a45 1
 *  $Header: ged.h,v 2.4 85/05/09 22:22:54 mike Exp $
d206 8
a213 4
#define	XLIM		1250		/* Value to set X lim to for menu */
#define	MENUX		1380		/* pixel position for menu, X */
#define	MENUY		1500		/* pixel position for menu, Y */
#define	MENU_DY		(-200)		/* Distance between menu items */
d217 1
@


2.4
log
@added sedit_menu()
@
text
@d45 1
a45 1
 *  $Header: ged.h,v 2.3 85/05/08 00:29:28 mike Exp $
a58 1
extern int	regdebug;		/* Device register debugging flag */
@


2.3
log
@KAA added default region codes.
@
text
@d45 1
a45 1
 *  $Header: ged.h,v 2.3 85/05/08 00:00:21 mike Exp $
d159 1
@


2.2
log
@Eliminated some external variables no longer used.
@
text
@d45 1
a45 1
 *  $Header: ged.h,v 2.1 85/03/11 23:50:51 mike Prod $
d60 6
@


2.1
log
@First production release.
Includes lint cleanups from Gwyn.
@
text
@d45 1
a45 1
 *  $Header$
a60 3
extern int	inten_offset;		/* Intensity offset */
extern int	inten_scale;		/* Intensity scale */

a61 8
 *	The position of the tracking cross - defined in e1.c
 *
 * NOTE that xcross == 0 means draw no cross.
 */
extern int	xcross;
extern int	ycross;

/*
a125 1
extern int	menuyy;		/* y-location of selected menu item */
d172 1
a172 1
 * Entry number of solid in solid table to be illuminated. - defined in usepen.c
@


1.8
log
@Fiddled with extern function list
@
text
@a6 3
 *	U. S. Army Ballistic Research Laboratory
 *
 *
d36 10
d48 1
a48 1
extern double	degtorad, radtodeg;	/* Defined in e4.c */
d99 1
a99 1
 *  These are allocated storage in e3.c
d119 1
a119 1
/* defined in e8.c */
a128 1
extern long	memb_loc;	/* disk loc of present member of proc region */
d132 1
a132 1
/* defined in e2.c */
d136 1
a136 1
/* defined in e11.c */
d142 1
a142 1
 * the display portion of dozoom. - defined in e12.c
d184 1
a184 1
 * Entry number of solid in solid table to be illuminated. - defined in e4.c
d189 1
a189 1
/* defined in e9.c */
d192 1
a192 1
/* defined in e8.c */
d196 1
a196 1
/* defined in e4.c */
d226 1
a226 1
extern int state;			/* (defined in e3.c) */
@


1.7
log
@Added KAA base/local units conversions.
@
text
@d155 1
a155 1
			sig3(), dir_print(),
d157 3
a159 1
			adcursor(), menu_display();
@


1.6
log
@Added acc_sc_sol, acc_rot_sol (KAA)
@
text
@d43 10
a52 2
extern int	dmaflag;	/* Set to 1 to force a new screen DMA */
extern int	regdebug;
@


1.5
log
@pre-Keith version
@
text
@d107 4
@


1.4
log
@Multiple simultaneous display manager support
@
text
@d151 1
a151 1
extern unsigned		memalloc();
@


1.3
log
@Vector lists saved, multiple display managers supported.
@
text
@d139 1
a139 1
			freevgcore(), htov_move(), mat_copy(), mat_idn(),
d150 1
a150 1
extern void		ellipse(), memfree();
@


1.2
log
@Some function definitions shuffled to dm.h
@
text
@a0 1
/*	SCCSID	%W%	%E%	*/
a42 7
/*
 *	Global file descriptors - defined in e1.c
 */
extern int	objfd;		/* Object file */
extern int	p_out;		/* Pipe to GED2, output FD */
extern int	p_in;		/* Pipe to GED2, input FD */

d150 2
a161 2
#define QUIET	UP
#define NOISY	DOWN
d214 3
@


1.1
log
@Initial revision
@
text
@a158 7
/* Display manager routines */
void		dm_open(), dm_init(), dm_restart();
void		dm_prolog(), dm_epilog(), dm_call();
void		dm_normal(), dm_newrot(), dm_update();
void		dm_finish(), dm_puts(), dm_2d_line();
int		dm_getfd();

@
