head	11.75;
access;
symbols
	ansi-20040405-merged:11.72.4.1
	postmerge-20040405-ansi:11.73
	premerge-20040404-ansi:11.73
	postmerge-autoconf:11.73
	autoconf-freeze:11.72.12.2
	premerge-autoconf:11.73
	postmerge-20040315-windows:11.73
	premerge-20040315-windows:11.73
	windows-20040315-freeze:11.72.6.1
	autoconf-20031203:11.72
	autoconf-20031202:11.72
	autoconf-branch:11.72.0.12
	phong-branch:11.72.0.10
	photonmap-branch:11.72.0.8
	rel-6-1-DP:11.72
	windows-branch:11.72.0.6
	rel-6-0-2:11.72
	ansi-branch:11.72.0.4
	rel-6-0-1-branch:11.72.0.2
	hartley-6-0-post:11.72
	hartley-6-0-pre:11.72
	rel-6-0-1:11.72
	rel-6-0:11.72
	rel-5-4:11.67
	offsite-5-3-pre:11.69
	rel-5-3:11.67
	rel-5-2:11.67
	rel-5-1-branch:11.67.0.2
	rel-5-1:11.67
	rel-5-0:11.67
	rel-5-0-beta:11.67
	rel-4-5:11.53
	ctj-4-5-post:11.42
	ctj-4-5-pre:11.42
	rel-4-4:11.1
	rel-4-0:10.1
	rel-3-5:9.1
	rel-3-0:8.1
	rel-2-3:7.1
	rel-2-0:6.1
	rel-1-24:5.1
	rel-1-20:4.2
	rel-1-10:4.1
	rt-2:2.4;
locks; strict;
comment	@ * @;


11.75
date	2004.05.21.17.47.46;	author morrison;	state dead;
branches;
next	11.74;

11.74
date	2004.05.10.15.25.28;	author morrison;	state Exp;
branches;
next	11.73;

11.73
date	2004.02.02.17.39.33;	author morrison;	state Exp;
branches;
next	11.72;

11.72
date	2001.07.19.15.37.13;	author bparker;	state Exp;
branches
	11.72.4.1
	11.72.6.1
	11.72.12.1;
next	11.71;

11.71
date	2001.06.05.15.51.42;	author bparker;	state Exp;
branches;
next	11.70;

11.70
date	2001.06.01.19.23.24;	author bparker;	state Exp;
branches;
next	11.69;

11.69
date	2001.03.09.15.51.25;	author bparker;	state Exp;
branches;
next	11.68;

11.68
date	2000.07.05.22.23.18;	author mike;	state Exp;
branches;
next	11.67;

11.67
date	99.02.23.22.50.01;	author bparker;	state Exp;
branches;
next	11.66;

11.66
date	99.01.12.18.15.07;	author bparker;	state Exp;
branches;
next	11.65;

11.65
date	98.12.30.09.13.59;	author mike;	state Exp;
branches;
next	11.64;

11.64
date	98.12.29.20.28.04;	author bparker;	state Exp;
branches;
next	11.63;

11.63
date	98.12.15.15.51.53;	author bparker;	state Exp;
branches;
next	11.62;

11.62
date	98.11.06.22.32.41;	author bparker;	state Exp;
branches;
next	11.61;

11.61
date	98.10.21.16.53.16;	author bparker;	state Exp;
branches;
next	11.60;

11.60
date	98.08.13.11.20.11;	author bparker;	state Exp;
branches;
next	11.59;

11.59
date	98.06.24.18.20.04;	author bparker;	state Exp;
branches;
next	11.58;

11.58
date	98.06.11.14.28.15;	author bparker;	state Exp;
branches;
next	11.57;

11.57
date	98.03.19.18.01.32;	author bparker;	state Exp;
branches;
next	11.56;

11.56
date	98.03.06.22.34.48;	author bparker;	state Exp;
branches;
next	11.55;

11.55
date	98.02.26.16.11.00;	author bparker;	state Exp;
branches;
next	11.54;

11.54
date	98.02.20.23.11.34;	author bparker;	state Exp;
branches;
next	11.53;

11.53
date	98.02.06.21.57.16;	author bparker;	state Exp;
branches;
next	11.52;

11.52
date	98.01.16.22.00.49;	author bparker;	state Exp;
branches;
next	11.51;

11.51
date	97.12.23.14.10.53;	author bparker;	state Exp;
branches;
next	11.50;

11.50
date	97.11.26.21.35.03;	author bparker;	state Exp;
branches;
next	11.49;

11.49
date	97.11.12.22.02.02;	author bparker;	state Exp;
branches;
next	11.48;

11.48
date	97.11.03.15.21.06;	author bparker;	state Exp;
branches;
next	11.47;

11.47
date	97.10.10.13.03.20;	author bparker;	state Exp;
branches;
next	11.46;

11.46
date	97.09.08.18.24.08;	author bparker;	state Exp;
branches;
next	11.45;

11.45
date	97.09.03.14.19.29;	author bparker;	state Exp;
branches;
next	11.44;

11.44
date	97.07.25.20.50.02;	author bparker;	state Exp;
branches;
next	11.43;

11.43
date	97.06.25.12.58.53;	author bparker;	state Exp;
branches;
next	11.42;

11.42
date	97.05.21.12.55.16;	author bparker;	state Exp;
branches;
next	11.41;

11.41
date	97.05.08.14.30.47;	author bparker;	state Exp;
branches;
next	11.40;

11.40
date	97.04.23.18.27.52;	author bparker;	state Exp;
branches;
next	11.39;

11.39
date	97.03.06.21.42.15;	author bparker;	state Exp;
branches;
next	11.38;

11.38
date	97.03.06.14.06.58;	author bparker;	state Exp;
branches;
next	11.37;

11.37
date	97.02.28.21.38.14;	author bparker;	state Exp;
branches;
next	11.36;

11.36
date	97.02.04.22.18.47;	author bparker;	state Exp;
branches;
next	11.35;

11.35
date	97.01.24.21.03.17;	author bparker;	state Exp;
branches;
next	11.34;

11.34
date	97.01.17.22.56.57;	author bparker;	state Exp;
branches;
next	11.33;

11.33
date	97.01.10.21.59.51;	author bparker;	state Exp;
branches;
next	11.32;

11.32
date	97.01.08.19.44.27;	author bparker;	state Exp;
branches;
next	11.31;

11.31
date	96.12.30.22.47.37;	author bparker;	state Exp;
branches;
next	11.30;

11.30
date	96.12.09.23.01.26;	author bparker;	state Exp;
branches;
next	11.29;

11.29
date	96.11.19.21.56.19;	author bparker;	state Exp;
branches;
next	11.28;

11.28
date	96.09.25.19.51.03;	author bparker;	state Exp;
branches;
next	11.27;

11.27
date	96.09.23.18.15.21;	author bparker;	state Exp;
branches;
next	11.26;

11.26
date	96.09.17.21.19.17;	author bparker;	state Exp;
branches;
next	11.25;

11.25
date	96.09.03.20.02.37;	author bparker;	state Exp;
branches;
next	11.24;

11.24
date	96.08.28.19.41.24;	author bparker;	state Exp;
branches;
next	11.23;

11.23
date	96.08.27.20.30.05;	author bparker;	state Exp;
branches;
next	11.22;

11.22
date	96.08.02.18.06.02;	author bparker;	state Exp;
branches;
next	11.21;

11.21
date	96.07.30.21.32.14;	author bparker;	state Exp;
branches;
next	11.20;

11.20
date	96.07.25.18.52.39;	author bparker;	state Exp;
branches;
next	11.19;

11.19
date	96.06.25.21.05.01;	author bparker;	state Exp;
branches;
next	11.18;

11.18
date	96.06.21.16.02.20;	author bparker;	state Exp;
branches;
next	11.17;

11.17
date	96.05.24.19.11.12;	author bparker;	state Exp;
branches;
next	11.16;

11.16
date	96.05.16.20.59.26;	author bparker;	state Exp;
branches;
next	11.15;

11.15
date	96.05.02.21.33.02;	author bparker;	state Exp;
branches;
next	11.14;

11.14
date	96.04.24.16.20.56;	author bparker;	state Exp;
branches;
next	11.13;

11.13
date	96.04.03.22.11.00;	author bparker;	state Exp;
branches;
next	11.12;

11.12
date	96.03.22.18.40.17;	author bparker;	state Exp;
branches;
next	11.11;

11.11
date	96.03.11.21.46.03;	author bparker;	state Exp;
branches;
next	11.10;

11.10
date	96.03.01.19.22.54;	author bparker;	state Exp;
branches;
next	11.9;

11.9
date	96.02.28.21.33.29;	author bparker;	state Exp;
branches;
next	11.8;

11.8
date	96.02.12.21.47.27;	author bparker;	state Exp;
branches;
next	11.7;

11.7
date	96.02.09.22.13.30;	author bparker;	state Exp;
branches;
next	11.6;

11.6
date	96.01.17.22.11.03;	author bparker;	state Exp;
branches;
next	11.5;

11.5
date	96.01.05.22.08.48;	author bparker;	state Exp;
branches;
next	11.4;

11.4
date	95.12.27.22.32.23;	author bparker;	state Exp;
branches;
next	11.3;

11.3
date	95.12.04.21.03.03;	author bparker;	state Exp;
branches;
next	11.2;

11.2
date	95.01.17.12.48.41;	author bparker;	state Exp;
branches;
next	11.1;

11.1
date	95.01.04.10.03.01;	author mike;	state Rel4_4;
branches;
next	10.5;

10.5
date	94.12.24.01.05.28;	author mike;	state Exp;
branches;
next	10.4;

10.4
date	94.12.23.23.39.46;	author mike;	state Exp;
branches;
next	10.3;

10.3
date	94.08.10.20.20.35;	author mike;	state Exp;
branches;
next	10.2;

10.2
date	93.07.13.20.56.52;	author mike;	state Exp;
branches;
next	10.1;

10.1
date	91.10.12.06.43.37;	author mike;	state Rel4_0;
branches;
next	9.3;

9.3
date	91.01.27.21.50.47;	author butler;	state Exp;
branches;
next	9.2;

9.2
date	91.01.26.04.51.26;	author mike;	state Exp;
branches;
next	9.1;

9.1
date	89.05.19.06.02.55;	author mike;	state Rel3_5;
branches;
next	8.2;

8.2
date	88.12.06.00.38.03;	author mike;	state Exp;
branches;
next	8.1;

8.1
date	88.10.05.00.36.41;	author mike;	state Rel3_0;
branches;
next	7.4;

7.4
date	88.09.15.21.00.54;	author phil;	state Exp;
branches;
next	7.3;

7.3
date	88.02.25.06.04.15;	author mike;	state Exp;
branches;
next	7.2;

7.2
date	87.11.05.05.02.33;	author mike;	state Exp;
branches;
next	7.1;

7.1
date	87.11.03.00.00.27;	author mike;	state Rel;
branches;
next	6.1;

6.1
date	87.07.11.08.03.40;	author mike;	state Rel;
branches;
next	5.1;

5.1
date	87.06.24.22.20.17;	author mike;	state Rel;
branches;
next	4.3;

4.3
date	87.06.13.06.04.48;	author phil;	state Exp;
branches;
next	4.2;

4.2
date	87.02.13.00.07.19;	author mike;	state Exp;
branches;
next	4.1;

4.1
date	86.12.29.03.21.15;	author mike;	state Rel1;
branches;
next	2.6;

2.6
date	86.12.20.05.02.33;	author mike;	state Exp;
branches;
next	2.5;

2.5
date	86.03.10.20.35.57;	author mike;	state Exp;
branches;
next	2.4;

2.4
date	85.05.10.00.50.14;	author mike;	state Exp;
branches;
next	2.3;

2.3
date	85.03.22.01.43.06;	author mike;	state Exp;
branches;
next	2.2;

2.2
date	85.03.15.05.01.07;	author mike;	state Exp;
branches;
next	2.1;

2.1
date	85.03.11.23.46.24;	author mike;	state Prod;
branches;
next	1.8;

1.8
date	85.03.08.20.49.51;	author mike;	state Exp;
branches;
next	1.7;

1.7
date	85.02.02.01.38.22;	author mike;	state Exp;
branches;
next	1.6;

1.6
date	85.01.16.02.19.06;	author mike;	state Exp;
branches;
next	1.5;

1.5
date	85.01.16.01.53.56;	author mike;	state Exp;
branches;
next	1.4;

1.4
date	84.11.22.06.54.39;	author mike;	state Exp;
branches;
next	1.3;

1.3
date	84.11.20.04.20.01;	author mike;	state Exp;
branches;
next	1.2;

1.2
date	84.11.17.05.33.26;	author mike;	state Exp;
branches;
next	1.1;

1.1
date	84.11.16.19.45.11;	author mike;	state Exp;
branches;
next	;

11.72.4.1
date	2004.03.17.21.22.01;	author morrison;	state Exp;
branches;
next	;

11.72.6.1
date	2004.03.11.23.46.35;	author morrison;	state Exp;
branches;
next	;

11.72.12.1
date	2004.02.12.18.34.15;	author erikg;	state Exp;
branches;
next	11.72.12.2;

11.72.12.2
date	2004.03.15.14.07.39;	author erikg;	state Exp;
branches;
next	;


desc
@display manager interface
@


11.75
log
@moved to src/mged/
@
text
@#ifndef SEEN_MGED_DM_H
#define SEEN_MGED_DM_H

/*
 *			M G E D _ D M . H
 *
 * Header file for communication with the display manager.
 *  
 * Source -
 *	SECAD/VLD Computing Consortium, Bldg 394
 *	The U. S. Army Ballistic Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005
 *  
 *  Copyright Notice -
 *	This software is Copyright (C) 1985-2004 by the United States Army.
 *	All rights reserved.
 *
 *  $Header: /n/xoff/cvs/brlcad/mged/mged_dm.h,v 11.74 2004/05/10 15:25:28 morrison Exp $
 */

#include "dm.h"	/* struct dm */
#include "./menu.h" /* struct menu_item */
#include "./scroll.h" /* struct scroll_item */
#include "fb.h" /* FBIO */
#include "pkg.h" /* struct pkg_conn */

#define DO_NEW_EDIT_MATS

#define DO_DISPLAY_LISTS
#if 0
#define DO_SINGLE_DISPLAY_LIST
#endif

#if !defined(PI)      /* sometimes found in math.h */
#define PI 3.14159265358979323846264338327950288419716939937511
#endif

#define MGED_DISPLAY_VAR "mged_display"

#define RAD2DEG 57.2957795130823208767981548141051703324054724665642
#define DEG2RAD 0.01745329251994329573

/* +-2048 to +-1 */
#define GED2PM1(x) (((fastf_t)(x))*INV_GED)

#define SL_TOL 0.03125  /* size of dead spot - 64/2048 */

#define AMM_IDLE 0
#define AMM_ROT 1 
#define AMM_TRAN 2
#define AMM_SCALE 3
#define AMM_ADC_ANG1 4
#define AMM_ADC_ANG2 5
#define AMM_ADC_TRAN 6
#define AMM_ADC_DIST 7
#define AMM_CON_ROT_X 8
#define AMM_CON_ROT_Y 9
#define AMM_CON_ROT_Z 10
#define AMM_CON_TRAN_X 11
#define AMM_CON_TRAN_Y 12
#define AMM_CON_TRAN_Z 13
#define AMM_CON_SCALE_X 14
#define AMM_CON_SCALE_Y 15
#define AMM_CON_SCALE_Z 16 
#define AMM_CON_XADC 17
#define AMM_CON_YADC 18
#define AMM_CON_ANG1 19
#define AMM_CON_ANG2 20
#define AMM_CON_DIST 21

#define IS_CONSTRAINED_ROT(_mode) ( \
	(_mode) == AMM_CON_ROT_X || \
	(_mode) == AMM_CON_ROT_Y || \
	(_mode) == AMM_CON_ROT_Z )

#define IS_CONSTRAINED_TRAN(_mode) ( \
	(_mode) == AMM_CON_TRAN_X || \
	(_mode) == AMM_CON_TRAN_Y || \
	(_mode) == AMM_CON_TRAN_Z )

struct view_ring {
  struct bu_list	l;
  mat_t			vr_rot_mat;
  mat_t			vr_tvc_mat;
  fastf_t		vr_scale;
  int			vr_id;
};

#define NUM_TRAILS 8
#define MAX_TRAIL 32
struct trail {
  int		t_cur_index;      /* index of first free entry */
  int		t_nused;          /* max index in use */
  point_t	t_pt[MAX_TRAIL];
};

#ifdef MAX_CLIENTS
#	undef MAX_CLIENTS
#	define MAX_CLIENTS 32
#else
#	define MAX_CLIENTS 32
#endif

struct client {
  int			c_fd;
  struct pkg_conn	*c_pkg;
};

/* mged command variables for affecting the user environment */
struct _mged_variables {
  int		mv_rc;
  int		mv_autosize;
  int		mv_rateknobs;
  int		mv_sliders;
  int		mv_faceplate;
  int		mv_orig_gui;
  int		mv_linewidth;
  char		mv_linestyle;
  int		mv_hot_key;
  int		mv_context;
  int		mv_dlist;
  int		mv_use_air;
  int		mv_listen;			/* nonzero to listen on port */
  int		mv_port;			/* port to listen on */
  int		mv_fb;				/* toggle image on/off */
  int		mv_fb_all;			/* 0 - use part of image as defined by the rectangle
						   1 - use the entire image */
  int		mv_fb_overlay;			/* 0 - underlay    1 - interlay    2 - overlay */
  char		mv_mouse_behavior;
  char		mv_coords;
  char		mv_rotate_about;
  char		mv_transform;
  int		mv_predictor;
  double	mv_predictor_advance;
  double	mv_predictor_length;
  double	mv_perspective;			/* used to directly set the perspective angle */
  int		mv_perspective_mode;		/* used to toggle perspective viewing on/off */
  int		mv_toggle_perspective;		/* used to toggle through values in perspective_table[] */
  double	mv_nmg_eu_dist;
  double	mv_eye_sep_dist;		/* >0 implies stereo.  units = "room" mm */
  char		mv_union_lexeme[1024];
  char		mv_intersection_lexeme[1024];
  char		mv_difference_lexeme[1024];
};

struct _axes_state {
  int		ax_rc;
  int		ax_model_draw;			/* model axes */
  int		ax_model_size;
  int		ax_model_linewidth;
  fastf_t	ax_model_pos[3];
  int		ax_view_draw;			/* view axes */
  int		ax_view_size;
  int		ax_view_linewidth;
  int		ax_view_pos[2];
  int		ax_edit_draw;			/* edit axes */
  int		ax_edit_size1;
  int		ax_edit_size2;
  int		ax_edit_linewidth1;
  int		ax_edit_linewidth2;
};

struct _dlist_state {
  int		dl_rc;
  int		dl_active;	/* 1 - actively using display lists */
  int		dl_flag;
};

struct _grid_state {
  int		gr_rc;
  int		gr_draw;	/* draw grid */
  int		gr_snap;	/* snap to grid */
  fastf_t	gr_anchor[3];
  fastf_t	gr_res_h;	/* grid resolution in h */
  fastf_t	gr_res_v;	/* grid resolution in v */
  int		gr_res_major_h;	/* major grid resolution in h */
  int		gr_res_major_v;	/* major grid resolution in v */
};

struct _adc_state {
  int		adc_rc;
  int		adc_draw;
  int		adc_dv_x;
  int		adc_dv_y;
  int		adc_dv_a1;
  int		adc_dv_a2;
  int		adc_dv_dist;
  fastf_t	adc_pos_model[3];
  fastf_t	adc_pos_view[3];
  fastf_t	adc_pos_grid[3];
  fastf_t	adc_a1;
  fastf_t	adc_a2;
  fastf_t	adc_dst;
  int		adc_anchor_pos;
  int		adc_anchor_a1;
  int		adc_anchor_a2;
  int		adc_anchor_dst;
  fastf_t	adc_anchor_pt_a1[3];
  fastf_t	adc_anchor_pt_a2[3];
  fastf_t	adc_anchor_pt_dst[3];
};

struct _rubber_band {
  int		rb_rc;
  int		rb_active;	/* 1 - actively drawing a rubber band */
  int		rb_draw;	/* draw rubber band rectangle */
  int		rb_linewidth;
  char		rb_linestyle;
  int		rb_pos[2];	/* Position in image coordinates */
  int		rb_dim[2];	/* Rectangle dimension in image coordinates */
  fastf_t	rb_x;		/* Corner of rectangle in normalized     */
  fastf_t	rb_y;		/* ------ view coordinates (i.e. +-1.0). */
  fastf_t	rb_width;	/* Width and height of rectangle in      */
  fastf_t	rb_height;	/* ------ normalized view coordinates.   */
};

struct _view_state {
  int		vs_rc;
  int		vs_flag;

  struct view_obj	*vs_vop;
  fastf_t	vs_i_Viewscale;
  mat_t		vs_model2objview;
  mat_t		vs_objview2model;
  mat_t		vs_ModelDelta;		/* changes to Viewrot this frame */

  struct view_ring	vs_headView;
  struct view_ring	*vs_current_view;
  struct view_ring	*vs_last_view;

  /* Rate stuff */
  int		vs_rateflag_model_tran;
  vect_t	vs_rate_model_tran;

  int		vs_rateflag_model_rotate;
  vect_t	vs_rate_model_rotate;
  char		vs_rate_model_origin;

  int		vs_rateflag_tran;
  vect_t	vs_rate_tran;

  int		vs_rateflag_rotate;
  vect_t	vs_rate_rotate;
  char		vs_rate_origin;
	
  int		vs_rateflag_scale;
  fastf_t	vs_rate_scale;

  /* Absolute stuff */
  vect_t	vs_absolute_tran;
  vect_t	vs_absolute_model_tran;
  vect_t	vs_last_absolute_tran;
  vect_t	vs_last_absolute_model_tran;
  vect_t	vs_absolute_rotate;
  vect_t	vs_absolute_model_rotate;
  vect_t	vs_last_absolute_rotate;
  vect_t	vs_last_absolute_model_rotate;
  fastf_t	vs_absolute_scale;

  /* Virtual trackball stuff */
  point_t	vs_orig_pos;
};

struct _color_scheme {
  int	cs_rc;
  int	cs_mode;
  int	cs_bg[3];
  int	cs_bg_a[3];
  int	cs_bg_ia[3];
  int	cs_adc_line[3];
  int	cs_adc_line_a[3];
  int	cs_adc_line_ia[3];
  int	cs_adc_tick[3];
  int	cs_adc_tick_a[3];
  int	cs_adc_tick_ia[3];
  int	cs_geo_def[3];
  int	cs_geo_def_a[3];
  int	cs_geo_def_ia[3];
  int	cs_geo_hl[3];
  int	cs_geo_hl_a[3];
  int	cs_geo_hl_ia[3];
  int	cs_geo_label[3];
  int	cs_geo_label_a[3];
  int	cs_geo_label_ia[3];
  int	cs_model_axes[3];
  int	cs_model_axes_a[3];
  int	cs_model_axes_ia[3];
  int	cs_model_axes_label[3];
  int	cs_model_axes_label_a[3];
  int	cs_model_axes_label_ia[3];
  int	cs_view_axes[3];
  int	cs_view_axes_a[3];
  int	cs_view_axes_ia[3];
  int	cs_view_axes_label[3];
  int	cs_view_axes_label_a[3];
  int	cs_view_axes_label_ia[3];
  int	cs_edit_axes1[3];
  int	cs_edit_axes1_a[3];
  int	cs_edit_axes1_ia[3];
  int	cs_edit_axes_label1[3];
  int	cs_edit_axes_label1_a[3];
  int	cs_edit_axes_label1_ia[3];
  int	cs_edit_axes2[3];
  int	cs_edit_axes2_a[3];
  int	cs_edit_axes2_ia[3];
  int	cs_edit_axes_label2[3];
  int	cs_edit_axes_label2_a[3];
  int	cs_edit_axes_label2_ia[3];
  int	cs_rubber_band[3];
  int	cs_rubber_band_a[3];
  int	cs_rubber_band_ia[3];
  int	cs_grid[3];
  int	cs_grid_a[3];
  int	cs_grid_ia[3];
  int	cs_predictor[3];
  int	cs_predictor_a[3];
  int	cs_predictor_ia[3];
  int	cs_menu_line[3];
  int	cs_menu_line_a[3];
  int	cs_menu_line_ia[3];
  int	cs_slider_line[3];
  int	cs_slider_line_a[3];
  int	cs_slider_line_ia[3];
  int	cs_other_line[3];
  int	cs_other_line_a[3];
  int	cs_other_line_ia[3];
  int	cs_status_text1[3];
  int	cs_status_text1_a[3];
  int	cs_status_text1_ia[3];
  int	cs_status_text2[3];
  int	cs_status_text2_a[3];
  int	cs_status_text2_ia[3];
  int	cs_slider_text1[3];
  int	cs_slider_text1_a[3];
  int	cs_slider_text1_ia[3];
  int	cs_slider_text2[3];
  int	cs_slider_text2_a[3];
  int	cs_slider_text2_ia[3];
  int	cs_menu_text1[3];
  int	cs_menu_text1_a[3];
  int	cs_menu_text1_ia[3];
  int	cs_menu_text2[3];
  int	cs_menu_text2_a[3];
  int	cs_menu_text2_ia[3];
  int	cs_menu_title[3];
  int	cs_menu_title_a[3];
  int	cs_menu_title_ia[3];
  int	cs_menu_arrow[3];
  int	cs_menu_arrow_a[3];
  int	cs_menu_arrow_ia[3];
  int	cs_state_text1[3];
  int	cs_state_text1_a[3];
  int	cs_state_text1_ia[3];
  int	cs_state_text2[3];
  int	cs_state_text2_a[3];
  int	cs_state_text2_ia[3];
  int	cs_edit_info[3];
  int	cs_edit_info_a[3];
  int	cs_edit_info_ia[3];
  int	cs_center_dot[3];
  int	cs_center_dot_a[3];
  int	cs_center_dot_ia[3];
};

struct _menu_state {
  int	ms_rc;
  int	ms_flag;
  int	ms_top;
  int	ms_cur_menu;
  int	ms_cur_item;
  struct menu_item	*ms_menus[NMENU];    /* base of menu items array */
};

struct dm_list {
  struct bu_list	l;
  struct dm		*dml_dmp;
  FBIO			*dml_fbp;
  int			dml_netfd;			/* socket used to listen for connections */
  struct client		dml_clients[MAX_CLIENTS];
  int			dml_dirty;			/* true if received an expose or configuration event */
  int			dml_mapped;
  int			dml_owner;			/* true if owner of the view info */
  int			dml_am_mode;			/* alternate mouse mode */
  int			dml_ndrawn;
  int			dml_perspective_angle;
  int			*dml_zclip_ptr;
  struct bu_list	dml_p_vlist;			/* predictor vlist */
  struct trail		dml_trails[NUM_TRAILS];
  struct cmd_list	*dml_tie;

  int			dml_adc_auto;
  int			dml_grid_auto_size;
  int			_dml_mouse_dx;
  int			_dml_mouse_dy;
  int			_dml_omx;
  int			_dml_omy;
  int			_dml_knobs[8];
  point_t		_dml_work_pt;

  /* Tcl variable names for display info */
  struct bu_vls		dml_fps_name;
  struct bu_vls		dml_aet_name;
  struct bu_vls		dml_ang_name;
  struct bu_vls		dml_center_name;
  struct bu_vls		dml_size_name;
  struct bu_vls		dml_adc_name;

  /* Slider stuff */
  int			dml_scroll_top;
  int			dml_scroll_active;
  int			dml_scroll_y;
  struct scroll_item	*dml_scroll_array[6];

  /* Shareable Resources */
  struct _view_state	*dml_view_state;
  struct _adc_state	*dml_adc_state;
  struct _menu_state	*dml_menu_state;
  struct _rubber_band	*dml_rubber_band;
  struct _mged_variables *dml_mged_variables;
  struct _color_scheme	*dml_color_scheme;
  struct _grid_state	*dml_grid_state;
  struct _axes_state	*dml_axes_state;
  struct _dlist_state	*dml_dlist_state;

  /* Hooks */
  int			(*dml_cmd_hook)();
  void			(*dml_viewpoint_hook)();
  int			(*dml_eventHandler)();
};

#define DM_LIST_NULL ((struct dm_list *)NULL)
#define dmp curr_dm_list->dml_dmp
#define fbp curr_dm_list->dml_fbp
#define netfd curr_dm_list->dml_netfd
#define clients curr_dm_list->dml_clients
#define pathName dmp->dm_pathName
#define tkName dmp->dm_tkName
#define dName dmp->dm_dName
#define displaylist dmp->dm_displaylist
#define dirty curr_dm_list->dml_dirty
#define mapped curr_dm_list->dml_mapped
#define owner curr_dm_list->dml_owner
#define am_mode curr_dm_list->dml_am_mode
#define ndrawn curr_dm_list->dml_ndrawn
#define perspective_angle curr_dm_list->dml_perspective_angle
#define zclip_ptr curr_dm_list->dml_zclip_ptr

#define view_state curr_dm_list->dml_view_state
#define adc_state curr_dm_list->dml_adc_state
#define menu_state curr_dm_list->dml_menu_state
#define rubber_band curr_dm_list->dml_rubber_band
#define mged_variables curr_dm_list->dml_mged_variables
#define color_scheme curr_dm_list->dml_color_scheme
#define grid_state curr_dm_list->dml_grid_state
#define axes_state curr_dm_list->dml_axes_state
#define dlist_state curr_dm_list->dml_dlist_state

#define cmd_hook curr_dm_list->dml_cmd_hook
#define viewpoint_hook curr_dm_list->dml_viewpoint_hook
#define eventHandler curr_dm_list->dml_eventHandler

#define adc_auto curr_dm_list->dml_adc_auto
#define grid_auto_size curr_dm_list->dml_grid_auto_size

/* Names of macros must be different than actual struct element */
#define dml_mouse_dx curr_dm_list->_dml_mouse_dx
#define dml_mouse_dy curr_dm_list->_dml_mouse_dy
#define dml_omx curr_dm_list->_dml_omx
#define dml_omy curr_dm_list->_dml_omy
#define dml_knobs curr_dm_list->_dml_knobs
#define dml_work_pt curr_dm_list->_dml_work_pt

#define scroll_top curr_dm_list->dml_scroll_top
#define scroll_active curr_dm_list->dml_scroll_active
#define scroll_y curr_dm_list->dml_scroll_y
#define scroll_array curr_dm_list->dml_scroll_array

#define MINVIEW		0.001				
#define VIEWSIZE	(2.0*view_state->vs_Viewscale)	/* Width of viewing cube */
#define VIEWFACTOR	(1/view_state->vs_Viewscale)	/* 2.0 / VIEWSIZE */

#define RATE_ROT_FACTOR 6.0
#define ABS_ROT_FACTOR 180.0
#define ADC_ANGLE_FACTOR 45.0

/*
 * Definitions for dealing with the buttons and lights.
 * BV are for viewing, and BE are for editing functions.
 */
#define LIGHT_OFF	0
#define LIGHT_ON	1
#define LIGHT_RESET	2		/* all lights out */

/* Function button/light codes.  Note that code 0 is reserved */
#define BV_TOP		15+16
#define BV_BOTTOM	14+16
#define BV_RIGHT	13+16
#define BV_LEFT		12+16
#define BV_FRONT	11+16
#define BV_REAR		10+16
#define BV_VRESTORE	9+16
#define BV_VSAVE	8+16
#define BE_O_ILLUMINATE	7+16
#define BE_O_SCALE	6+16
#define BE_O_X		5+16
#define BE_O_Y		4+16
#define BE_O_XY		3+16
#define BE_O_ROTATE	2+16
#define BE_ACCEPT	1+16
#define BE_REJECT	0+16

#define BE_S_EDIT	14
#define BE_S_ROTATE	13
#define BE_S_TRANS	12
#define BE_S_SCALE	11
#define BE_MENU		10
#define BV_ADCURSOR	9
#define BV_RESET	8
#define BE_S_ILLUMINATE	7
#define BE_O_XSCALE	6
#define BE_O_YSCALE	5
#define BE_O_ZSCALE	4
#define BV_ZOOM_IN	3
#define BV_ZOOM_OUT	2
#define BV_45_45	1
#define BV_35_25	0+32

#define BV_RATE_TOGGLE	1+32
#define BV_EDIT_TOGGLE  2+32
#define BV_EYEROT_TOGGLE 3+32
#define BE_S_CONTEXT    4+32

#define BV_MAXFUNC	64	/* largest code used */

#define FOR_ALL_DISPLAYS(p,hp) \
	for(BU_LIST_FOR(p,dm_list,hp))

#define GET_DM_LIST(p,id) { \
		register struct dm_list *tp; \
\
		FOR_ALL_DISPLAYS(tp, &head_dm_list.l) { \
			if((id) == tp->dml_dmp->dm_id) { \
				(p) = tp; \
				break; \
			} \
		} \
\
		if(BU_LIST_IS_HEAD(tp, &head_dm_list.l)) \
			(p) = DM_LIST_NULL; \
	}

extern double frametime;		/* defined in ged.c */
extern int doEvent();			/* defined in doevent.c */
extern int dm_pipe[];			/* defined in ged.c */
extern int update_views;		/* defined in ged.c */
extern struct dm_list head_dm_list;	/* defined in attach.c */
extern struct dm_list *curr_dm_list;	/* defined in attach.c */

struct w_dm {
  int	type;
  char	*name;
  int	(*init)();
};
extern struct w_dm which_dm[];  /* defined in attach.c */

/* indices into which_dm[] */
#define DM_PLOT_INDEX 0
#define DM_PS_INDEX 1


/* Flags indicating whether the ogl and sgi display managers have been
 * attached. Defined in dm-ogl.c. 
 * These are necessary to decide whether or not to use direct rendering
 * with ogl.
 */
extern	char	ogl_ogl_used;
extern	char	ogl_sgi_used;

#endif /* SEEN_MGED_DM_H */
@


11.74
log
@Bob Parker's view modifications, png framebuffer support, shaded drawing mode
@
text
@d18 1
a18 1
 *  $Header: /c/CVS/brlcad/mged/mged_dm.h,v 11.73 2004/02/02 17:39:33 morrison Exp $
@


11.73
log
@update copyright to include span through 2003
@
text
@d18 1
a18 1
 *  $Header: /c/CVS/brlcad/mged/mged_dm.h,v 11.72 2001/07/19 15:37:13 bparker Exp $
a38 5

#define GED_MAX 2047.0
#define GED_MIN -2048.0
#define GED_RANGE 4095.0
#define INV_GED 0.00048828125
@


11.72
log
@*- check if MAX_CLIENTS is defined
   before (re)defining.
@
text
@d15 1
a15 1
 *	This software is Copyright (C) 1985 by the United States Army.
d18 1
a18 1
 *  $Header: /c/CVS/brlcad/mged/mged_dm.h,v 11.71 2001/06/05 15:51:42 bparker Exp $
@


11.72.4.1
log
@sync branch with HEAD
@
text
@d15 1
a15 1
 *	This software is Copyright (C) 1985-2004 by the United States Army.
d18 1
a18 1
 *  $Header$
@


11.72.6.1
log
@sync to HEAD...
@
text
@d15 1
a15 1
 *	This software is Copyright (C) 1985-2004 by the United States Army.
d18 1
a18 1
 *  $Header: /n/cad/c/CVS/brlcad/mged/mged_dm.h,v 11.73 2004/02/02 17:39:33 morrison Exp $
@


11.72.12.1
log
@merge from HEAD
@
text
@d15 1
a15 1
 *	This software is Copyright (C) 1985-2004 by the United States Army.
d18 1
a18 1
 *  $Header: /c/CVS/brlcad/mged/mged_dm.h,v 11.73 2004/02/02 17:39:33 morrison Exp $
@


11.72.12.2
log
@merge from head
@
text
@d18 1
a18 1
 *  $Header: /c/CVS/brlcad/mged/mged_dm.h,v 11.72.12.1 2004/02/12 18:34:15 erikg Exp $
@


11.71
log
@*- got rid of "#ifdef MGED_USE_VIEW_OBJ"
@
text
@d18 1
a18 1
 *  $Header: /c/CVS/brlcad/mged/mged_dm.h,v 11.70 2001/06/01 19:23:24 bparker Exp $
d102 7
a108 1
#define MAX_CLIENTS 32
@


11.70
log
@*- mods that reflect MGED's use of drawable geometry
   objects, database objects and view objects
@
text
@d18 1
a18 1
 *  $Header: /c/CVS/brlcad/mged/mged_dm.h,v 11.69 2001/03/09 15:51:25 bparker Exp $
a26 4
#if 1
#define MGED_USE_VIEW_OBJ
#endif

a219 1
#ifdef MGED_USE_VIEW_OBJ
a220 10
#else
  fastf_t	vs_Viewscale;
  fastf_t	vs_azimuth;
  fastf_t	vs_elevation;
  fastf_t	vs_twist;
  mat_t		vs_Viewrot;
  mat_t		vs_toViewcenter;
  mat_t		vs_model2view;
  mat_t		vs_view2model;
#endif
@


11.69
log
@*- update comment for mv_fb_overlay
@
text
@d18 1
a18 1
 *  $Header: /c/CVS/brlcad/mged/mged_dm.h,v 11.68 2000/07/05 22:23:18 mike Exp $
d27 4
d224 3
a227 1
  fastf_t	vs_i_Viewscale;
d235 2
@


11.68
log
@
"press slice" command has been removed.
@
text
@d18 1
a18 1
 *  $Header: /c/CVS/brlcad/mged/mged_dm.h,v 11.67 1999/02/23 22:50:01 bparker Exp $
d127 1
a127 1
  int		mv_fb_overlay;			/* 0 - underlay     1 - overlay */
@


11.67
log
@*- change slidersflag back to sliders
*- remove rt_output and send_key
@
text
@d18 1
a18 1
 *  $Header: /c/CVS/brlcad/mged/mged_dm.h,v 11.66 1999/01/12 18:15:07 bparker Exp $
a517 1
#define BV_SLICEMODE	15
@


11.66
log
@*- code to support sharing display lists
@
text
@d18 1
a18 1
 *  $Header: /c/CVS/brlcad/mged/mged_dm.h,v 11.65 1998/12/30 09:13:59 mike Exp $
d113 1
a113 1
  int		mv_slidersflag;
a115 1
  int		mv_rt_output;
a117 1
  int		mv_send_key;
@


11.65
log
@Names of macros must be different than actual struct element.
So I added an _ prefix to some of the dml_ elements like dml_knobs.
@
text
@d18 1
a18 1
 *  $Header: /c/CVS/brlcad/mged/mged_dm.h,v 11.64 1998/12/29 20:28:04 bparker Exp $
d87 5
a91 5
  struct bu_list l;
  mat_t   vr_rot_mat;
  mat_t   vr_tvc_mat;
  fastf_t vr_scale;
  int     vr_id;
d97 3
a99 3
  int t_cur_index;      /* index of first free entry */
  int t_nused;          /* max index in use */
  point_t t_pt[MAX_TRAIL];
d104 2
a105 2
  int c_fd;
  struct pkg_conn *c_pkg;
d164 6
d383 24
a406 15
  struct bu_list l;
  struct dm *dml_dmp;
  FBIO *dml_fbp;
  int dml_netfd;			/* socket used to listen for connections */
  struct client dml_clients[MAX_CLIENTS];
  int dml_dirty;			/* true if received an expose or configuration event */
  int dml_mapped;
  int dml_owner;			/* true if owner of the view info */
  int dml_am_mode;			/* alternate mouse mode */
  int dml_ndrawn;
  int dml_perspective_angle;
  int *dml_zclip_ptr;
  struct bu_list dml_p_vlist;		/* predictor vlist */
  struct trail dml_trails[NUM_TRAILS];
  struct cmd_list *dml_tie;
d409 6
a414 15
  struct bu_vls dml_fps_name;
  struct bu_vls	dml_aet_name;
  struct bu_vls	dml_ang_name;
  struct bu_vls	dml_center_name;
  struct bu_vls	dml_size_name;
  struct bu_vls	dml_adc_name;

  int dml_adc_auto;
  int dml_grid_auto_size;
  int _dml_mouse_dx;
  int _dml_mouse_dy;
  int _dml_omx;
  int _dml_omy;
  int _dml_knobs[8];
  point_t _dml_work_pt;
d417 4
a420 4
  int dml_scroll_top;
  int dml_scroll_active;
  int dml_scroll_y;
  struct scroll_item *dml_scroll_array[6];
d423 4
a426 4
  struct _view_state *dml_view_state;
  struct _adc_state *dml_adc_state;
  struct _menu_state *dml_menu_state;
  struct _rubber_band *dml_rubber_band;
d428 4
a431 3
  struct _color_scheme *dml_color_scheme;
  struct _grid_state *dml_grid_state;
  struct _axes_state *dml_axes_state;
d434 3
a436 8
  int (*dml_cmd_hook)();
  void (*dml_viewpoint_hook)();
  int (*dml_eventHandler)();
};

struct dm_char_queue {
  struct bu_list l;
  struct dm_list *dlp;
d464 1
a566 1
extern struct dm_char_queue head_dm_char_queue;
d569 3
a571 3
  int type;
  char *name;
  int (*init)();
@


11.64
log
@*- moved a few members from "struct _view_state" to
	"struct dm_list"
@
text
@d18 1
a18 1
 *  $Header: /c/CVS/brlcad/mged/mged_dm.h,v 11.63 1998/12/15 15:51:53 bparker Exp $
d403 6
a408 6
  int dml_mouse_dx;
  int dml_mouse_dy;
  int dml_omx;
  int dml_omy;
  int dml_knobs[8];
  point_t dml_work_pt;
d469 8
a476 6
#define dml_mouse_dx curr_dm_list->dml_mouse_dx
#define dml_mouse_dy curr_dm_list->dml_mouse_dy
#define dml_omx curr_dm_list->dml_omx
#define dml_omy curr_dm_list->dml_omy
#define dml_knobs curr_dm_list->dml_knobs
#define dml_work_pt curr_dm_list->dml_work_pt
@


11.63
log
@*- remove dml_frametime  --- don't need one for each
				display manager
@
text
@d18 1
a18 1
 *  $Header: /c/CVS/brlcad/mged/mged_dm.h,v 11.62 1998/11/06 22:32:41 bparker Exp $
a263 7

  /* Tcl variable names for display info */
  struct bu_vls	vs_aet_name;
  struct bu_vls	vs_ang_name;
  struct bu_vls	vs_center_name;
  struct bu_vls	vs_size_name;
  struct bu_vls	vs_adc_name;
a388 1
  struct bu_vls dml_fps_name;
d393 8
a452 1
#define fps_name curr_dm_list->dml_fps_name
@


11.62
log
@*- use new structures
*- cleanup
@
text
@d18 1
a18 1
 *  $Header: /c/CVS/brlcad/mged/mged_dm.h,v 11.61 1998/10/21 16:53:16 bparker Exp $
a395 1
  double dml_frametime;			/* time needed to draw last frame */
a452 1
#define frametime curr_dm_list->dml_frametime
d557 6
a562 5
extern int doEvent(); /* defined in doevent.c */
extern int dm_pipe[];  /* defined in ged.c */
extern int update_views;   /* defined in ged.c */
extern struct dm_list head_dm_list;  /* list of active display managers */
extern struct dm_list *curr_dm_list;
@


11.61
log
@*- add "struct _color_scheme"
*- add other structures for future use
	- adc_state
	- view_state
	- menu_state
@
text
@d18 1
a18 1
 *  $Header: /c/CVS/brlcad/mged/mged_dm.h,v 11.60 1998/08/13 11:20:11 bparker Exp $
d42 1
d86 1
a86 1
struct view_list {
d88 4
a91 4
  mat_t   vrot_mat;
  mat_t   tvc_mat;
  fastf_t vscale;
  int     vid;
d94 82
a175 2
/*XXX for future use */
struct adc_state {
d177 1
d180 2
a181 2
  int		adc_dv_1;
  int		adc_dv_2;
a182 1
  int		adc_draw;
d198 18
a215 2
/*XXX for future use */
struct view_state {
d218 3
a220 3
  fastf_t	vs_az;
  fastf_t	vs_el;
  fastf_t	vs_tw;
d227 1
a227 1
  mat_t		vs_ModelDelta;       /* changes to Viewrot this frame */
d229 3
a231 3
  struct view_list	vs_headView;
  struct view_list	*vs_current_view;
  struct view_list	*vs_last_view;
a270 5

  /* other stuff */
  int		vs_rc;
  int		vs_flag;
  struct bu_vls	*vs_opp;	/* pointer to owner's dm_pathName */
d274 107
a380 237
  int	rc;
  int	active;
  int	bg[3];
  int	bg_a[3];
  int	bg_ia[3];
  int	adc_line[3];
  int	adc_line_a[3];
  int	adc_line_ia[3];
  int	adc_tick[3];
  int	adc_tick_a[3];
  int	adc_tick_ia[3];
  int	geo_def[3];
  int	geo_def_a[3];
  int	geo_def_ia[3];
  int	geo_hl[3];
  int	geo_hl_a[3];
  int	geo_hl_ia[3];
  int	geo_label[3];
  int	geo_label_a[3];
  int	geo_label_ia[3];
  int	model_axes[3];
  int	model_axes_a[3];
  int	model_axes_ia[3];
  int	model_axes_label[3];
  int	model_axes_label_a[3];
  int	model_axes_label_ia[3];
  int	view_axes[3];
  int	view_axes_a[3];
  int	view_axes_ia[3];
  int	view_axes_label[3];
  int	view_axes_label_a[3];
  int	view_axes_label_ia[3];
  int	edit_axes1[3];
  int	edit_axes1_a[3];
  int	edit_axes1_ia[3];
  int	edit_axes_label1[3];
  int	edit_axes_label1_a[3];
  int	edit_axes_label1_ia[3];
  int	edit_axes2[3];
  int	edit_axes2_a[3];
  int	edit_axes2_ia[3];
  int	edit_axes_label2[3];
  int	edit_axes_label2_a[3];
  int	edit_axes_label2_ia[3];
  int	rubber_band[3];
  int	rubber_band_a[3];
  int	rubber_band_ia[3];
  int	grid[3];
  int	grid_a[3];
  int	grid_ia[3];
  int	predictor[3];
  int	predictor_a[3];
  int	predictor_ia[3];
  int	fp_menu_line[3];
  int	fp_menu_line_a[3];
  int	fp_menu_line_ia[3];
  int	fp_slider_line[3];
  int	fp_slider_line_a[3];
  int	fp_slider_line_ia[3];
  int	fp_other_line[3];
  int	fp_other_line_a[3];
  int	fp_other_line_ia[3];
  int	fp_status_text1[3];
  int	fp_status_text1_a[3];
  int	fp_status_text1_ia[3];
  int	fp_status_text2[3];
  int	fp_status_text2_a[3];
  int	fp_status_text2_ia[3];
  int	fp_slider_text1[3];
  int	fp_slider_text1_a[3];
  int	fp_slider_text1_ia[3];
  int	fp_slider_text2[3];
  int	fp_slider_text2_a[3];
  int	fp_slider_text2_ia[3];
  int	fp_menu_text1[3];
  int	fp_menu_text1_a[3];
  int	fp_menu_text1_ia[3];
  int	fp_menu_text2[3];
  int	fp_menu_text2_a[3];
  int	fp_menu_text2_ia[3];
  int	fp_menu_title[3];
  int	fp_menu_title_a[3];
  int	fp_menu_title_ia[3];
  int	fp_menu_arrow[3];
  int	fp_menu_arrow_a[3];
  int	fp_menu_arrow_ia[3];
  int	fp_state_text1[3];
  int	fp_state_text1_a[3];
  int	fp_state_text1_ia[3];
  int	fp_state_text2[3];
  int	fp_state_text2_a[3];
  int	fp_state_text2_ia[3];
  int	fp_edit_info[3];
  int	fp_edit_info_a[3];
  int	fp_edit_info_ia[3];
  int	fp_center_dot[3];
  int	fp_center_dot_a[3];
  int	fp_center_dot_ia[3];
};

struct shared_info {
  fastf_t _Viewscale;
  fastf_t _i_Viewscale;
  fastf_t azimuth;
  fastf_t elevation;
  fastf_t twist;
  mat_t   _Viewrot;
  mat_t   _toViewcenter;
  mat_t   _model2view;
  mat_t   _view2model;
  mat_t   _model2objview;
  mat_t   _objview2model;
  mat_t   _ModelDelta;       /* changes to Viewrot this frame */

  struct view_list _headView;
  struct view_list *_current_view;
  struct view_list *_last_view;

  /* Angle/distance cursor stuff */
  int		_dv_xadc;
  int		_dv_yadc;
  int		_dv_1adc;
  int		_dv_2adc;
  int		_dv_distadc;
  int		_adc_draw;
  fastf_t	_adc_pos_model[3];
  fastf_t	_adc_pos_view[3];
  fastf_t	_adc_pos_grid[3];
  fastf_t	_adc_a1;
  fastf_t	_adc_a2;
  fastf_t	_adc_dst;
  int		_adc_anchor_pos;
  int		_adc_anchor_a1;
  int		_adc_anchor_a2;
  int		_adc_anchor_dst;
  fastf_t	_adc_anchor_pt_a1[3];
  fastf_t	_adc_anchor_pt_a2[3];
  fastf_t	_adc_anchor_pt_dst[3];

  /* Rate stuff */
  int     _rateflag_model_tran;
  vect_t  _rate_model_tran;

  int     _rateflag_model_rotate;
  vect_t  _rate_model_rotate;
  char    _rate_model_origin;

  int	  _rateflag_tran;
  vect_t  _rate_tran;

  int	  _rateflag_rotate;
  vect_t  _rate_rotate;
  char    _rate_origin;
	
  int	  _rateflag_scale;
  fastf_t _rate_scale;

  /* Absolute stuff */
  vect_t  _absolute_tran;
  vect_t  _absolute_model_tran;
  vect_t  _last_absolute_tran;
  vect_t  _last_absolute_model_tran;
  vect_t  _absolute_rotate;
  vect_t  _absolute_model_rotate;
  vect_t  _last_absolute_rotate;
  vect_t  _last_absolute_model_rotate;
  fastf_t _absolute_scale;

  /* Virtual trackball stuff */
  point_t _orig_pos;

  int _dmaflag;
  int _rc;         /* reference count */

  /* Tcl variable names for display info */
  struct bu_vls _aet_name;
  struct bu_vls _ang_name;
  struct bu_vls _center_name;
  struct bu_vls _size_name;
  struct bu_vls _adc_name;

#ifdef UPDATE_TCL_SLIDERS
  /* Tcl variable names for sliders */
  struct bu_vls _rate_tran_vls[3];
  struct bu_vls _rate_model_tran_vls[3];
  struct bu_vls _rate_rotate_vls[3];
  struct bu_vls _rate_model_rotate_vls[3];
  struct bu_vls _rate_scale_vls;
  struct bu_vls _absolute_tran_vls[3];
  struct bu_vls _absolute_model_tran_vls[3];
  struct bu_vls _absolute_rotate_vls[3];
  struct bu_vls _absolute_model_rotate_vls[3];
  struct bu_vls _absolute_scale_vls;
  struct bu_vls _xadc_vls;
  struct bu_vls _yadc_vls;
  struct bu_vls _ang1_vls;
  struct bu_vls _ang2_vls;
  struct bu_vls _distadc_vls;
  struct bu_vls _Viewscale_vls;
#endif

  /* Convenient pointer to the owner's (of the shared_info) dm_pathName */
  struct bu_vls *opp;
};

#if 0
/*XXX for future use */
struct menu_state {
  int	menu_rc;
  int	menu_flag;
  int	menu_top;
  int	menu_cur;
  int	menu_cur_item;
  struct menu_item	*menu_array[NMENU];    /* base of menu items array */
};
#else
struct menu_vars {
  int _menuflag;
  int _menu_top;
  int _cur_menu;
  int _cur_menu_item;
  struct menu_item *_menu_array[NMENU];    /* base of menu items array */
};
#endif

#define NUM_TRAILS 8
#define MAX_TRAIL 32
struct trail {
  int cur_index;      /* index of first free entry */
  int nused;          /* max index in use */
  point_t pt[MAX_TRAIL];
};

#define MAX_CLIENTS 32
struct client{
  int fd;
  struct pkg_conn *pkg;
d385 46
a430 48
  struct dm *_dmp;
  FBIO *_fbp;
  int _netfd;       /* socket used to listen for connections */
  struct client _clients[MAX_CLIENTS];
  struct shared_info *s_info;  /* info that can be used by display managers that share their views */
  int _dirty;      /* true if received an expose or configuration event */
  int _mapped;
  int _owner;      /* true if owner of the shared info */
  int _am_mode;    /* alternate mouse mode */
  int _ndrawn;
  int _perspective_angle;
  int *_zclip_ptr;
  double _frametime;/* time needed to draw last frame */
  struct bu_vls _fps_name;
  struct cmd_list *aim;
  struct _mged_variables *_mged_variables;
  struct menu_vars *menu_vars;
  struct bu_list p_vlist; /* predictor vlist */
  struct trail trails[NUM_TRAILS];
  struct _color_scheme *_color_scheme;

  int _rubber_band_active;
  fastf_t _rect_x;		/* Corner of rectangle in normalized     */
  fastf_t _rect_y;		/* ------ view coordinates (i.e. +-1.0). */
  fastf_t _rect_width;		/* Width and height of rectangle in      */
  fastf_t _rect_height;		/* ------ normalized view coordinates.   */

  int _adc_auto;
  int _grid_auto_size;
  int _dml_mouse_dx;
  int _dml_mouse_dy;
  int _dml_omx;
  int _dml_omy;
  int _dml_knobs[8];
  point_t _dml_work_pt;

/* Slider stuff */
  int _scroll_top;
  int _scroll_active;
  int _scroll_y;
  struct scroll_item *_scroll_array[6];

  void (*_knob_hook)();
  void (*_axes_color_hook)();
  int (*_cmd_hook)();
  void (*_state_hook)();
  void (*_viewpoint_hook)();
  int (*_eventHandler)();
d439 4
a442 4
#define dmp curr_dm_list->_dmp
#define fbp curr_dm_list->_fbp
#define netfd curr_dm_list->_netfd
#define clients curr_dm_list->_clients
d447 36
a482 137
#define dirty curr_dm_list->_dirty
#define mapped curr_dm_list->_mapped
#define owner curr_dm_list->_owner
#define am_mode curr_dm_list->_am_mode
#define ndrawn curr_dm_list->_ndrawn
#define perspective_angle curr_dm_list->_perspective_angle
#define zclip_ptr curr_dm_list->_zclip_ptr
#define frametime curr_dm_list->_frametime
#define fps_name curr_dm_list->_fps_name
#define knob_hook curr_dm_list->_knob_hook
#define axes_color_hook curr_dm_list->_axes_color_hook
#define cmd_hook curr_dm_list->_cmd_hook
#define state_hook curr_dm_list->_state_hook
#define viewpoint_hook curr_dm_list->_viewpoint_hook
#define eventHandler curr_dm_list->_eventHandler
#define mged_variables curr_dm_list->_mged_variables
#define color_scheme curr_dm_list->_color_scheme

#define menu_array curr_dm_list->menu_vars->_menu_array
#define menuflag curr_dm_list->menu_vars->_menuflag
#define menu_top curr_dm_list->menu_vars->_menu_top
#define cur_menu curr_dm_list->menu_vars->_cur_menu
#define cur_item curr_dm_list->menu_vars->_cur_menu_item

#define dv_xadc curr_dm_list->s_info->_dv_xadc
#define dv_yadc curr_dm_list->s_info->_dv_yadc
#define dv_1adc curr_dm_list->s_info->_dv_1adc
#define dv_2adc curr_dm_list->s_info->_dv_2adc
#define dv_distadc curr_dm_list->s_info->_dv_distadc

#define adc_draw curr_dm_list->s_info->_adc_draw
#define adc_pos_model curr_dm_list->s_info->_adc_pos_model
#define adc_pos_view curr_dm_list->s_info->_adc_pos_view
#define adc_pos_grid curr_dm_list->s_info->_adc_pos_grid
#define adc_a1 curr_dm_list->s_info->_adc_a1
#define adc_a2 curr_dm_list->s_info->_adc_a2
#define adc_dst curr_dm_list->s_info->_adc_dst
#define adc_anchor_pos curr_dm_list->s_info->_adc_anchor_pos
#define adc_anchor_a1 curr_dm_list->s_info->_adc_anchor_a1
#define adc_anchor_a2 curr_dm_list->s_info->_adc_anchor_a2
#define adc_anchor_dst curr_dm_list->s_info->_adc_anchor_dst
#define adc_anchor_pt_a1 curr_dm_list->s_info->_adc_anchor_pt_a1
#define adc_anchor_pt_a2 curr_dm_list->s_info->_adc_anchor_pt_a2
#define adc_anchor_pt_dst curr_dm_list->s_info->_adc_anchor_pt_dst

#define rateflag_model_tran curr_dm_list->s_info->_rateflag_model_tran
#define rateflag_model_rotate curr_dm_list->s_info->_rateflag_model_rotate
#define rateflag_tran curr_dm_list->s_info->_rateflag_tran
#define rateflag_rotate curr_dm_list->s_info->_rateflag_rotate
#define rateflag_scale curr_dm_list->s_info->_rateflag_scale

#define rate_model_tran curr_dm_list->s_info->_rate_model_tran
#define rate_model_rotate curr_dm_list->s_info->_rate_model_rotate
#define rate_tran curr_dm_list->s_info->_rate_tran
#define rate_rotate curr_dm_list->s_info->_rate_rotate
#define rate_scale curr_dm_list->s_info->_rate_scale

#define absolute_tran curr_dm_list->s_info->_absolute_tran
#define absolute_model_tran curr_dm_list->s_info->_absolute_model_tran
#define last_absolute_tran curr_dm_list->s_info->_last_absolute_tran
#define last_absolute_model_tran curr_dm_list->s_info->_last_absolute_model_tran
#define absolute_rotate curr_dm_list->s_info->_absolute_rotate
#define absolute_model_rotate curr_dm_list->s_info->_absolute_model_rotate
#define last_absolute_rotate curr_dm_list->s_info->_last_absolute_rotate
#define last_absolute_model_rotate curr_dm_list->s_info->_last_absolute_model_rotate
#define absolute_scale curr_dm_list->s_info->_absolute_scale

#define rate_model_origin curr_dm_list->s_info->_rate_model_origin
#define rate_origin curr_dm_list->s_info->_rate_origin


#define Viewscale curr_dm_list->s_info->_Viewscale
#define i_Viewscale curr_dm_list->s_info->_i_Viewscale
#define Viewrot curr_dm_list->s_info->_Viewrot
#define toViewcenter curr_dm_list->s_info->_toViewcenter
#define model2view curr_dm_list->s_info->_model2view
#define view2model curr_dm_list->s_info->_view2model
#define model2objview curr_dm_list->s_info->_model2objview
#define objview2model curr_dm_list->s_info->_objview2model
#define ModelDelta curr_dm_list->s_info->_ModelDelta
#define headView curr_dm_list->s_info->_headView
#define current_view curr_dm_list->s_info->_current_view
#define last_view curr_dm_list->s_info->_last_view

#define rot_x curr_dm_list->s_info->_rot_x
#define rot_y curr_dm_list->s_info->_rot_y
#define rot_z curr_dm_list->s_info->_rot_z
#define tran_x curr_dm_list->s_info->_tran_x
#define tran_y curr_dm_list->s_info->_tran_y
#define tran_z curr_dm_list->s_info->_tran_z
#define orig_pos curr_dm_list->s_info->_orig_pos

#define dmaflag curr_dm_list->s_info->_dmaflag
#define rc curr_dm_list->s_info->_rc

#define aet_name curr_dm_list->s_info->_aet_name
#define ang_name curr_dm_list->s_info->_ang_name
#define center_name curr_dm_list->s_info->_center_name
#define size_name curr_dm_list->s_info->_size_name
#define adc_name curr_dm_list->s_info->_adc_name

#define rate_tran_vls curr_dm_list->s_info->_rate_tran_vls
#define rate_model_tran_vls curr_dm_list->s_info->_rate_model_tran_vls
#define rate_rotate_vls curr_dm_list->s_info->_rate_rotate_vls
#define rate_model_rotate_vls curr_dm_list->s_info->_rate_model_rotate_vls
#define rate_scale_vls curr_dm_list->s_info->_rate_scale_vls
#define absolute_tran_vls curr_dm_list->s_info->_absolute_tran_vls
#define absolute_model_tran_vls curr_dm_list->s_info->_absolute_model_tran_vls
#define absolute_rotate_vls curr_dm_list->s_info->_absolute_rotate_vls
#define absolute_model_rotate_vls curr_dm_list->s_info->_absolute_model_rotate_vls
#define absolute_scale_vls curr_dm_list->s_info->_absolute_scale_vls
#define xadc_vls curr_dm_list->s_info->_xadc_vls
#define yadc_vls curr_dm_list->s_info->_yadc_vls
#define ang1_vls curr_dm_list->s_info->_ang1_vls
#define ang2_vls curr_dm_list->s_info->_ang2_vls
#define distadc_vls curr_dm_list->s_info->_distadc_vls
#define Viewscale_vls curr_dm_list->s_info->_Viewscale_vls

#define rubber_band_active curr_dm_list->_rubber_band_active
#define rect_x curr_dm_list->_rect_x
#define rect_y curr_dm_list->_rect_y
#define rect_width curr_dm_list->_rect_width
#define rect_height curr_dm_list->_rect_height

#define adc_auto curr_dm_list->_adc_auto
#define grid_auto_size curr_dm_list->_grid_auto_size
#define dml_mouse_dx curr_dm_list->_dml_mouse_dx
#define dml_mouse_dy curr_dm_list->_dml_mouse_dy
#define dml_omx curr_dm_list->_dml_omx
#define dml_omy curr_dm_list->_dml_omy
#define dml_knobs curr_dm_list->_dml_knobs
#define dml_work_pt curr_dm_list->_dml_work_pt

#define scroll_top curr_dm_list->_scroll_top
#define scroll_active curr_dm_list->_scroll_active
#define scroll_y curr_dm_list->_scroll_y
#define scroll_array curr_dm_list->_scroll_array
d485 2
a486 2
#define VIEWSIZE	(2.0*Viewscale)	/* Width of viewing cube */
#define VIEWFACTOR	(1/Viewscale)	/* 2.0 / VIEWSIZE */
d549 1
a549 1
			if((id) == tp->_dmp->dm_id) { \
d576 9
@


11.60
log
@*- added MGED_DISPLAY_VAR
@
text
@d18 1
a18 1
 *  $Header: /c/CVS/brlcad/mged/mged_dm.h,v 11.59 1998/06/24 18:20:04 bparker Exp $
d93 189
d387 11
d403 1
a403 1
  struct menu_item *_menu_array[NMENU];    /* base of array of menu items */
d405 1
d442 1
d503 1
@


11.59
log
@*- ifdef the slider variable names
@
text
@d5 1
a5 1
 *			D M . H
d18 1
a18 1
 *  $Header: /c/CVS/brlcad/mged/mged_dm.h,v 11.58 1998/06/11 14:28:15 bparker Exp $
d37 2
@


11.58
log
@*- remove the following ifdefs:
	USE_FRAMEBUFFER, DO_SNAP_TO_GRID, DO_RUBBER_BAND, USE_RT_ASPECT
@
text
@d18 1
a18 1
 *  $Header: /m/cad/CVS/brlcad/mged/mged_dm.h,v 11.57 1998/03/19 18:01:32 bparker Exp $
d172 1
a188 1

d190 1
@


11.57
log
@*- add more members to "struct shared_info" in
	support of ADC
@
text
@d18 1
a18 1
 *  $Header: /m/cad/mged/RCS/mged_dm.h,v 11.56 1998/03/06 22:34:48 bparker Exp bparker $
a23 1
#ifdef USE_FRAMEBUFFER
a25 1
#endif
a210 1
#ifdef USE_FRAMEBUFFER
a215 1
#endif
a219 1
#ifdef USE_FRAMEBUFFER
a222 1
#endif
a238 1
#ifdef DO_RUBBER_BAND
a243 1
#endif
a274 1
#ifdef USE_FRAMEBUFFER
a277 1
#endif
a398 1
#ifdef DO_RUBBER_BAND
a403 1
#endif
@


11.56
log
@*- clean up some old ADC related code
*- add a few macros
@
text
@d18 1
a18 1
 *  $Header: /m/cad/mged/RCS/mged_dm.h,v 11.55 1998/02/26 16:11:00 bparker Exp bparker $
d112 19
a130 5
  int	  _dv_xadc;
  int	  _dv_yadc;
  int	  _dv_1adc;
  int	  _dv_2adc;
  int	  _dv_distadc;
d320 15
@


11.55
log
@*- add new members to "struct dm_list" - _dml_omx, _dml_omy, _dml_knobs
@
text
@d18 1
a18 1
 *  $Header: /m/cad/mged/RCS/mged_dm.h,v 11.54 1998/02/20 23:11:34 bparker Exp bparker $
d36 14
a49 4
#define GED_FACTOR 2048.0
#define INV_GED_FACTOR 0.00048828125
#define GED2PM1(x) (((fastf_t)(x))*INV_GED_FACTOR)
#define DEGRAD  57.2957795130823208767981548141051703324054724665642
a116 7
  fastf_t _curs_x;
  fastf_t _curs_y;
  fastf_t _c_tdist;
  fastf_t _angle1;
  fastf_t _angle2;
  fastf_t _adc_a1_deg;
  fastf_t _adc_a2_deg;
d239 1
a300 7
#define curs_x curr_dm_list->s_info->_curs_x
#define curs_y curr_dm_list->s_info->_curs_y
#define c_tdist curr_dm_list->s_info->_c_tdist
#define angle1 curr_dm_list->s_info->_angle1
#define angle2 curr_dm_list->s_info->_angle2
#define adc_a1_deg curr_dm_list->s_info->_adc_a1_deg
#define adc_a2_deg curr_dm_list->s_info->_adc_a2_deg
d388 1
@


11.54
log
@added a few members to "struct dm_list" to aid in grid-snapping
@
text
@d18 1
a18 1
 *  $Header: /m/cad/mged/RCS/mged_dm.h,v 11.53 1998/02/06 21:57:16 bparker Exp bparker $
d239 3
d394 3
@


11.53
log
@added GED_FACTOR, INV_GED_FACTOR and GED2PM1
@
text
@d18 1
a18 1
 *  $Header: /m/cad/mged/RCS/mged_dm.h,v 11.52 1998/01/16 22:00:49 bparker Exp bparker $
a211 1
/* New members to allow more than one active display manager */
d236 5
d388 5
a478 4

#ifdef USE_FRAMEBUFFER
extern int fb_busy_flag;
#endif
@


11.52
log
@*- mods to implement new framebuffer capability
*- mods to implement new rubber band rectangle
@
text
@d18 1
a18 1
 *  $Header: /m/cad/mged/RCS/mged_dm.h,v 11.51 1997/12/23 14:10:53 bparker Exp bparker $
d36 3
d40 1
a40 1
#define SL_TOL 0.031265266  /* size of dead spot - 64/2047 */
@


11.51
log
@*- remove scroll_edit
*- define "struct dm_char_queue" for use in synchronizing what is written down dm_pipe
@
text
@d18 1
a18 1
 *  $Header: /m/cad/mged/RCS/mged_dm.h,v 11.50 1997/11/26 21:35:03 bparker Exp bparker $
d24 5
d75 1
d186 1
a186 1
#define MAX_TRAIL  32
d193 8
d204 5
d226 8
d255 5
d373 8
d467 4
@


11.50
log
@add new members to "struct shared_info"
@
text
@d18 1
a18 1
 *  $Header: /m/cad/mged/RCS/mged_dm.h,v 11.49 1997/11/12 22:02:02 bparker Exp bparker $
d198 1
a210 1
  int _scroll_edit;
a211 1
  struct bu_vls _scroll_edit_vls;
d221 5
d238 1
a343 1
#define scroll_edit curr_dm_list->_scroll_edit
a344 1
#define scroll_edit_vls curr_dm_list->_scroll_edit_vls
d426 1
@


11.49
log
@add member to "struct dm_list"
@
text
@d18 1
a18 1
 *  $Header: /m/cad/mged/RCS/mged_dm.h,v 11.48 1997/11/03 15:21:06 bparker Exp bparker $
d92 1
a92 1
/* Angle/distance cursor stuff */
d106 1
a106 1
/* Rate stuff */
d124 1
a124 1
/* Absolute stuff */
d135 1
a135 1
/* Virtual trackball stuff */
d150 1
d152 1
d155 1
d157 1
d320 1
d322 1
d325 1
d327 1
@


11.48
log
@some clean up
@
text
@d18 1
a18 1
 *  $Header: /m/cad/mged/RCS/mged_dm.h,v 11.47 1997/10/10 13:03:20 bparker Exp bparker $
d193 1
d229 1
@


11.47
log
@*- mods to GET_DM_LIST
*- add new member (_eventHandler) to "struct dm_list"
@
text
@d18 1
a18 1
 *  $Header: /m/cad/mged/RCS/mged_dm.h,v 11.46 1997/09/08 18:24:08 bparker Exp bparker $
a237 1
#if 1
a242 7
#else
#define menu_array curr_dm_list->_menu_array
#define menuflag curr_dm_list->_menuflag
#define menu_top curr_dm_list->_menu_top
#define cur_menu curr_dm_list->_cur_menu
#define cur_item curr_dm_list->_cur_menu_item
#endif
a389 3

#define MGED_EVENT_HANDLER_NULL (int (*)())NULL
#define DM_EVENTHANDLER(_dmp,_clientData,_eventPtr) _dmp->dm_eventHandler(_clientData,_eventPtr)
@


11.46
log
@*- move ModelDelta to "struct shared_info"
*- _mged_variables is now a pointer
*- add p_vlist and trails to "struct dm_list"
@
text
@d18 1
a18 1
 *  $Header: /m/cad/mged/RCS/mged_dm.h,v 11.45 1997/09/03 14:19:29 bparker Exp bparker $
a30 8
struct device_values  {
	struct bu_vls	dv_string;	/* newline-separated "commands" from dm */
};
extern struct device_values dm_values;

/* defined in ged.c */
extern int dm_pipe[];

d214 1
a214 1
  int (*dm_init)();
a216 4
extern int update_views;   /* from ged.c */
extern struct dm_list head_dm_list;  /* list of active display managers */
extern struct dm_list *curr_dm_list;

d235 1
d399 14
a412 6
#define GET_DM_LIST(p,structure,w) { \
	register struct dm_list *tp; \
	for(BU_LIST_FOR(tp, dm_list, &head_dm_list.l)) { \
		if(w == ((struct structure *)tp->_dmp->dm_vars)->win) { \
			(p) = tp; \
			break; \
a413 1
	} \
d415 2
a416 2
	if(BU_LIST_IS_HEAD(tp, &head_dm_list.l))\
		p = DM_LIST_NULL;\
d419 5
a434 3

#define FOR_ALL_DISPLAYS(p,hp) \
	for(BU_LIST_FOR(p,dm_list,hp))
@


11.45
log
@mods to implement new display lists
@
text
@d18 1
a18 1
 *  $Header: /m/cad/mged/RCS/mged_dm.h,v 11.44 1997/07/25 20:50:02 bparker Exp bparker $
d94 1
d183 8
d194 2
a195 2
/* New stuff to allow more than one active display manager */
  struct shared_info *s_info;  /* info that can be used by display managers that are tied */
d204 1
a204 1
  struct _mged_variables _mged_variables;
d206 2
a216 1
  int _last_v_axes;
d310 1
a351 2
#define last_v_axes curr_dm_list->_last_v_axes

d434 3
@


11.44
log
@more variables
@
text
@d18 1
a18 1
 *  $Header: /m/cad/mged/RCS/mged_dm.h,v 11.43 1997/06/25 12:58:53 bparker Exp bparker $
d26 5
a184 1

d224 1
@


11.43
log
@ mods for dynamic view list, constrained modes etc.
@
text
@d18 1
a18 1
 *  $Header: /m/cad/mged/RCS/mged_dm.h,v 11.42 1997/05/21 12:55:16 bparker Exp bparker $
d34 1
d37 22
a58 16
#define ALT_IDLE 0
#define ALT_ROT 1 
#define ALT_TRAN 2
#define ALT_ZOOM 3
#define ALT_ADC 4
#define ALT_CON_ROT_X 5
#define ALT_CON_ROT_Y 6
#define ALT_CON_ROT_Z 7
#define ALT_CON_TRAN_X 8
#define ALT_CON_TRAN_Y 9
#define ALT_CON_TRAN_Z 10
#define ALT_CON_XADC 11
#define ALT_CON_YADC 12
#define ALT_CON_ANG1 13
#define ALT_CON_ANG2 14
#define ALT_CON_TICK 15
d61 3
a63 3
	(_mode) == ALT_CON_ROT_X || \
	(_mode) == ALT_CON_ROT_Y || \
	(_mode) == ALT_CON_ROT_Z )
d66 3
a68 3
	(_mode) == ALT_CON_TRAN_X || \
	(_mode) == ALT_CON_TRAN_Y || \
	(_mode) == ALT_CON_TRAN_Z )
a125 3
  int     _rateflag_azimuth;
  fastf_t _rate_azimuth;

d127 1
d129 2
a130 1
  vect_t  _absolute_tran;
d132 1
d134 1
a153 1
  struct bu_vls _rate_azimuth_vls;
a156 1
  struct bu_vls _absolute_azimuth_vls;
d163 2
a260 3
#define rate_model_tran curr_dm_list->s_info->_rate_model_tran
#define rate_model_rotate curr_dm_list->s_info->_rate_model_rotate
#define rate_model_origin curr_dm_list->s_info->_rate_model_origin
d263 3
a265 1
#define absolute_model_tran curr_dm_list->s_info->_absolute_model_tran
d267 2
a268 3
#define rateflag_slew curr_dm_list->s_info->_rateflag_tran
#define rateflag_tran curr_dm_list->s_info->_rateflag_tran
#define rate_slew curr_dm_list->s_info->_rate_tran
d270 3
a272 1
#define absolute_slew curr_dm_list->s_info->_absolute_tran
d274 3
a276 3
#define rateflag_rotate curr_dm_list->s_info->_rateflag_rotate
#define rate_rotate curr_dm_list->s_info->_rate_rotate
#define rate_origin curr_dm_list->s_info->_rate_origin
d278 1
d280 6
a285 5
#define rateflag_zoom curr_dm_list->s_info->_rateflag_scale
#define rate_zoom curr_dm_list->s_info->_rate_scale
#define absolute_zoom curr_dm_list->s_info->_absolute_scale
#define rate_azimuth curr_dm_list->s_info->_rate_azimuth
#define rateflag_azimuth curr_dm_list->s_info->_rateflag_azimuth
a318 1
#define rate_azimuth_vls curr_dm_list->s_info->_rate_azimuth_vls
a321 1
#define absolute_azimuth_vls curr_dm_list->s_info->_absolute_azimuth_vls
d327 1
a344 4

#define ALT_MOUSE_MODE_NOT_ACTIVE(_type,_name)\
  ((_type)dm_vars)->_name == ALT_MOUSE_MODE_OFF ||\
  ((_type)dm_vars)->_name == ALT_MOUSE_MODE_ON
@


11.42
log
@*** empty log message ***
@
text
@d18 1
a18 1
 *  $Header: /m/cad/mged/RCS/mged_dm.h,v 11.41 1997/05/08 14:30:47 bparker Exp bparker $
a23 1
#define TRY_NEW_MGED_VARS 0
d36 26
a61 4
#define ALT_MOUSE_MODE_IDLE 0
#define ALT_MOUSE_MODE_ROTATE 1 
#define ALT_MOUSE_MODE_TRANSLATE 2
#define ALT_MOUSE_MODE_ZOOM 3
d63 6
a68 1
#define VIEW_TABLE_SIZE 5    /* enough to hold the menu's view selections */
d83 3
a85 3
  mat_t	  _viewrot_table[VIEW_TABLE_SIZE];
  fastf_t _viewscale_table[VIEW_TABLE_SIZE];
  int	  _current_view;
d102 7
d114 1
d119 3
d123 1
a134 5
#if TRY_NEW_MGED_VARS
  /* Tcl variable names for mged_variables */
  struct bu_vls mged_variable_names[27];
#endif

d146 1
d150 1
d161 7
d176 1
d183 2
a184 6
  struct  _mged_variables _mged_variables;
  struct menu_item *_menu_array[NMENU];    /* base of array of menu items */
  int _menuflag;
  int _menu_top;
  int _cur_menu;
  int _cur_menu_item;
d213 1
d224 1
d226 6
a231 2
#if 0
#define mged_variables curr_dm_list->s_info->_mged_variables
a232 3
#define mged_variables curr_dm_list->_mged_variables
#endif

d238 1
d253 7
d268 1
d274 2
d285 1
a285 2
#define viewrot_table curr_dm_list->s_info->_viewrot_table
#define viewscale_table curr_dm_list->s_info->_viewscale_table
d287 1
d309 1
d313 1
a319 7
#if 0
#define scroll_top curr_dm_list->s_info->_scroll_top
#define scroll_active curr_dm_list->s_info->_scroll_active
#define scroll_y curr_dm_list->s_info->_scroll_y
#define scroll_edit curr_dm_list->s_info->_scroll_edit
#define scroll_array curr_dm_list->s_info->_scroll_array
#else
a325 1
#endif
@


11.41
log
@mods to "struct w_dm"
@
text
@d18 1
a18 1
 *  $Header: /m/cad/mged/RCS/mged_dm.h,v 11.40 1997/04/23 18:27:52 bparker Exp bparker $
d122 1
a122 1
  /* Convenient pointer to the owner's (of the shared_info) tkName */
@


11.40
log
@*** empty log message ***
@
text
@d18 1
a18 1
 *  $Header: /m/cad/mged/RCS/mged_dm.h,v 11.39 1997/03/06 21:42:15 bparker Exp bparker $
d359 3
a361 2
    struct dm *dp;
    int (*init)();
@


11.39
log
@added _fps_name to struct dm
@
text
@d18 1
a18 1
 *  $Header: /m/cad/mged/RCS/mged_dm.h,v 11.38 1997/03/06 14:06:58 bparker Exp bparker $
d23 1
d356 11
@


11.38
log
@added _last_v_axes to struct dm to remember the
last v_axes setting
@
text
@d18 1
a18 1
 *  $Header: /m/cad/mged/RCS/mged_dm.h,v 11.37 1997/02/28 21:38:14 bparker Exp bparker $
d24 1
d102 5
a106 4
  struct bu_vls aet_name;
  struct bu_vls ang_name;
  struct bu_vls center_name;
  struct bu_vls size_name;
d137 1
d177 1
d246 6
a251 3
#if 0
#define scroll_edit_vls curr_dm_list->s_info->_scroll_edit_vls
#endif
@


11.37
log
@*- mods to allow separate button menus
*- no longer allow sharing of slider variables
@
text
@d18 1
a18 1
 *  $Header: /m/cad/mged/RCS/mged_dm.h,v 11.36 1997/02/04 22:18:47 bparker Exp bparker $
a57 3
#if 0
  struct  _mged_variables _mged_variables;
#endif
a91 9
#if 0
/* Slider stuff */
  int _scroll_top;
  int _scroll_active;
  int _scroll_y;
  int _scroll_edit;
  struct scroll_item *_scroll_array[6];
#endif

d119 1
a119 1
  /* Convenient pointer to the owner's (of the shared_info) pathName */
d151 1
d271 2
@


11.36
log
@mods to add new menu item to toggle whether or not to
rotate about the eye
@
text
@d18 1
a18 1
 *  $Header: /m/cad/mged/RCS/mged_dm.h,v 11.35 1997/01/24 21:03:17 bparker Exp bparker $
d22 2
d40 1
a40 1
#define VIEW_TABLE_SIZE 5    /* enough to hold the view selections in the menu */
a44 1
#if 1
a47 1
#endif
d58 1
d60 1
d95 1
d102 1
d107 12
a118 2
  /* Tcl variable names for use with sliders */
  struct bu_vls _scroll_edit_vls;
d148 15
d178 2
a179 1
#define dname dmp->dm_dname
d191 1
d193 9
d253 1
d255 1
d268 1
d274 8
@


11.35
log
@mods to update sliders
@
text
@d18 1
a18 1
 *  $Header: /m/cad/mged/RCS/mged_dm.h,v 11.34 1997/01/17 22:56:57 bparker Exp bparker $
d289 2
a290 1
#define BE_S_CONTEXT    3+32
@


11.34
log
@checkin for weekend
@
text
@d18 1
a18 1
 *  $Header: /m/cad/mged/RCS/mged_dm.h,v 11.33 1997/01/10 21:59:51 bparker Exp bparker $
d87 1
d97 1
d104 1
d185 1
d213 1
d229 1
@


11.33
log
@*** empty log message ***
@
text
@d18 1
a18 1
 *  $Header: /m/cad/mged/RCS/mged_dm.h,v 11.32 1997/01/08 19:44:27 bparker Exp bparker $
d71 2
d75 2
a76 2
  int	  _rateflag_slew;
  vect_t  _rate_slew;
d81 2
a82 2
  int	  _rateflag_zoom;
  fastf_t _rate_zoom;
d85 1
a85 1
  vect_t  _absolute_slew;
d87 1
a87 1
  fastf_t _absolute_zoom;
a97 2
  int _rot_set;
  int _tran_set;
d100 16
d128 2
d135 1
d139 1
a139 1
extern int update_views;   /* from dm-X.h */
a144 3
#if 0
#define dm_vars dmp->dm_vars
#endif
d150 2
a153 4
#if 0
#define dm_init curr_dm_list->_dm_init
#endif
#if 1
d156 1
a156 1
#endif
d165 2
d173 6
a178 3
#define rateflag_slew curr_dm_list->s_info->_rateflag_slew
#define rate_slew curr_dm_list->s_info->_rate_slew
#define absolute_slew curr_dm_list->s_info->_absolute_slew
d182 3
a184 3
#define rateflag_zoom curr_dm_list->s_info->_rateflag_zoom
#define rate_zoom curr_dm_list->s_info->_rate_zoom
#define absolute_zoom curr_dm_list->s_info->_absolute_zoom
a205 2
#define rot_set curr_dm_list->s_info->_rot_set
#define tran_set curr_dm_list->s_info->_tran_set
d209 12
d227 1
a227 1
#define VIEWSIZE	(2*Viewscale)	/* Width of viewing cube */
@


11.32
log
@add definition for MINVIEW, from ged.c
@
text
@d18 1
a18 1
 *  $Header: /m/cad/mged/RCS/mged_dm.h,v 11.31 1996/12/30 22:47:37 bparker Exp bparker $
d200 4
@


11.31
log
@*** empty log message ***
@
text
@d18 1
a18 1
 *  $Header: /m/cad/mged/RCS/mged_dm.h,v 11.30 1996/12/09 23:01:26 bparker Exp bparker $
d196 2
a197 1
				
@


11.30
log
@mods to allow any kind of view manipulation at any time --- not quite done yet
@
text
@d18 1
a18 1
 *  $Header: /m/cad/mged/RCS/mged_dm.h,v 11.29 1996/11/19 21:56:19 bparker Exp bparker $
d249 1
@


11.29
log
@- add new members to "struct shared_info"
- add new members to "struct dm_list"
@
text
@d18 1
a18 1
 *  $Header: /m/cad/mged/RCS/mged_dm.h,v 11.28 1996/09/25 19:51:03 bparker Exp bparker $
d248 1
@


11.28
log
@added GET_DM_LIST macro
@
text
@d18 1
a18 1
 *  $Header: /m/cad/mged/RCS/mged_dm.h,v 11.27 1996/09/23 18:15:21 bparker Exp bparker $
d43 5
d115 3
a117 1
  int (*_dm_init)();
d126 5
a130 3
#define dm_vars dmp->dmr_vars
#define pathName dmp->dmr_pathName
#define dname dmp->dmr_dname
d136 1
d138 5
d254 1
a254 1
		if(w == ((struct structure *)tp->_dmp->dmr_vars)->win) { \
@


11.27
log
@use LIBDM permanently
@
text
@d18 1
a18 1
 *  $Header: /m/cad/mged/RCS/dm.h,v 11.26 1996/09/17 21:19:17 bparker Exp bparker $
d235 14
@


11.26
log
@prepare to use libdm
@
text
@d1 3
d18 1
a18 1
 *  $Header: /m/cad/mged/RCS/dm.h,v 11.25 1996/09/03 20:02:37 bparker Exp bparker $
d21 1
a21 52
#ifdef USE_LIBDM
#include "_dm.h"	/* struct dm */
#else

/*  Colors */
#define DM_BLACK	0
#define DM_RED		1
#define DM_BLUE		2
#define DM_YELLOW	3
#define DM_WHITE	4

/* Command parameter to dmr_viewchange() */
#define DM_CHGV_REDO	0	/* Display has changed substantially */
#define DM_CHGV_ADD	1	/* Add an object to the display */
#define DM_CHGV_DEL	2	/* Delete an object from the display */
#define DM_CHGV_REPL	3	/* Replace an object */
#define DM_CHGV_ILLUM	4	/* Make new object the illuminated object */

/* Interface to a specific Display Manager */
struct dm {
	int	(*dmr_open)();
	void	(*dmr_close)();
	void	(*dmr_input)BU_ARGS((fd_set *input, int noblock));
	void	(*dmr_prolog)();
	void	(*dmr_epilog)();
	void	(*dmr_normal)();
	void	(*dmr_newrot)();
	void	(*dmr_update)();
	void	(*dmr_puts)();
	void	(*dmr_2d_line)();
	void	(*dmr_light)();
	int	(*dmr_object)();	/* Invoke an object subroutine */
	unsigned (*dmr_cvtvecs)();	/* returns size requirement of subr */
	unsigned (*dmr_load)();		/* DMA the subr to device */
	void	(*dmr_statechange)();	/* called on editor state change */
	void	(*dmr_viewchange)();	/* add/drop solids from view */
	void	(*dmr_colorchange)();	/* called when color table changes */
	void	(*dmr_window)();	/* Change window boundry */
	void	(*dmr_debug)();		/* Set DM debug level */
	int	(*dmr_cmd)();		/* application provided dm-specific command handler */
	int	(*dmr_eventhandler)();	/* application provided dm-specific event handler */
	int	dmr_displaylist;	/* !0 means device has displaylist */
	int	dmr_releasedisplay;	/* !0 release for other programs */
	double	dmr_bound;		/* zoom-in limit */
	char	*dmr_name;		/* short name of device */
	char	*dmr_lname;		/* long name of device */
	struct mem_map *dmr_map;	/* displaylist mem map */
	genptr_t dmr_vars;		/* pointer to display manager dependant variables */
	struct bu_vls dmr_pathName;	/* full Tcl/Tk name of drawing window */
	char	dmr_dname[80];		/* Display name */
};
#endif
d235 1
a235 1

@


11.25
log
@rt_list ---> bu_list
@
text
@d15 1
a15 1
 *  $Header: /m/cad/mged/RCS/dm.h,v 11.24 1996/08/28 19:41:24 bparker Exp bparker $
d18 3
a20 4
struct device_values  {
	struct bu_vls	dv_string;	/* newline-separated "commands" from dm */
};
extern struct device_values dm_values;
d22 6
a27 2
/* defined in ged.c */
extern int dm_pipe[];
d29 6
a34 11
/* defined in dm-ps.c */
extern FILE *ps_fp;

#define SL_TOL 0.031265266  /* size of dead spot - 64/2047 */

#define ALT_MOUSE_MODE_IDLE 0
#define ALT_MOUSE_MODE_ROTATE 1 
#define ALT_MOUSE_MODE_TRANSLATE 2
#define ALT_MOUSE_MODE_ZOOM 3

#define VIEW_TABLE_SIZE 5    /* enough to hold the view selections in the menu */
d40 1
a40 1
	void	(*dmr_input)MGED_ARGS((fd_set *input, int noblock));
d57 2
d65 8
a72 1
	int	(*dmr_cmd)();		/* dm-specific cmds to perform */
d74 13
a151 2
  char *_dm_vars;   /* pointer to dependant display manager variables */
  struct bu_vls _pathName; /* full name of drawing window */
a155 1
  char _dname[80];  /* Display name */
d158 1
d167 3
a169 2
#define dm_vars curr_dm_list->_dm_vars
#define pathName curr_dm_list->_pathName
a172 1
#define dname curr_dm_list->_dname
d175 1
d229 3
a283 14
/*  Colors */

#define DM_BLACK	0
#define DM_RED		1
#define DM_BLUE		2
#define DM_YELLOW	3
#define DM_WHITE	4

/* Command parameter to dmr_viewchange() */
#define DM_CHGV_REDO	0	/* Display has changed substantially */
#define DM_CHGV_ADD	1	/* Add an object to the display */
#define DM_CHGV_DEL	2	/* Delete an object from the display */
#define DM_CHGV_REPL	3	/* Replace an object */
#define DM_CHGV_ILLUM	4	/* Make new object the illuminated object */
@


11.24
log
@add _am_mode to struct dm_list
@
text
@d15 1
a15 1
 *  $Header: /m/cad/mged/RCS/dm.h,v 11.23 1996/08/27 20:30:05 bparker Exp bparker $
a17 2
#include "rtstring.h"		/* for vls string support */

d127 1
a127 1
  struct rt_list l;
@


11.23
log
@now using libbu
@
text
@d15 1
a15 1
 *  $Header: /m/cad/mged/RCS/dm.h,v 11.22 1996/08/02 18:06:02 bparker Exp bparker $
d33 5
a37 5
#define ALT_MOUSE_MODE_OFF 0
#define ALT_MOUSE_MODE_ON 1
#define ALT_MOUSE_MODE_ROTATE 2 
#define ALT_MOUSE_MODE_TRANSLATE 3
#define ALT_MOUSE_MODE_ZOOM 4
d138 1
d155 1
@


11.22
log
@changed VIRTUAL_TRACKBALL to ALT_MOUSE_MODE
@
text
@d15 1
a15 1
 *  $Header: /m/cad/mged/RCS/dm.h,v 11.21 1996/07/30 21:32:14 bparker Exp bparker $
d21 1
a21 1
	struct rt_vls	dv_string;	/* newline-separated "commands" from dm */
d135 1
a135 1
  struct rt_vls _pathName; /* full name of drawing window */
@


11.21
log
@*** empty log message ***
@
text
@d15 1
a15 1
 *  $Header: /m/cad/mged/RCS/dm.h,v 11.20 1996/07/25 18:52:39 bparker Exp bparker $
d33 5
a37 5
#define VIRTUAL_TRACKBALL_OFF 0
#define VIRTUAL_TRACKBALL_ON 1
#define VIRTUAL_TRACKBALL_ROTATE 2 
#define VIRTUAL_TRACKBALL_TRANSLATE 3
#define VIRTUAL_TRACKBALL_ZOOM 4
d211 3
a213 3
#define VIRTUAL_TRACKBALL_NOT_ACTIVE(_type,_name)\
  ((_type)dm_vars)->_name == VIRTUAL_TRACKBALL_OFF ||\
  ((_type)dm_vars)->_name == VIRTUAL_TRACKBALL_ON
@


11.20
log
@add support for default views
@
text
@d15 1
a15 1
 *  $Header: /m/cad/mged/RCS/dm.h,v 11.19 1996/06/25 21:05:01 bparker Exp bparker $
d38 1
a38 1
#define VIEW_TABLE_SIZE 4
d141 1
a141 1
  void (*_axis_color_hook)();
d156 1
a156 1
#define axis_color_hook curr_dm_list->_axis_color_hook
@


11.19
log
@*** empty log message ***
@
text
@d15 1
a15 1
 *  $Header: /m/cad/mged/RCS/dm.h,v 11.18 1996/06/21 16:02:20 bparker Exp bparker $
d38 1
a78 1
  struct _mged_variables _mged_variables;
d80 5
d86 5
a90 5
  int     _dv_xadc;
  int     _dv_yadc;
  int     _dv_1adc;
  int     _dv_2adc;
  int     _dv_distadc;
d98 1
a98 1
  int     _rateflag_slew;
d101 1
a101 1
  int     _rateflag_rotate;
d104 2
a105 2
  int     _rateflag_zoom;
  fastf_t  _rate_zoom;
d110 1
a110 1
  fastf_t  _absolute_zoom;
d189 3
@


11.18
log
@moved adcflag and scroll_enabled over to mged_variables
@
text
@d15 1
a15 1
 *  $Header: /m/cad/mged/RCS/dm.h,v 11.17 1996/05/24 19:11:12 bparker Exp bparker $
d135 1
a135 1
  void (*_knob_offset_hook)();
d150 1
a150 1
#define knob_offset_hook curr_dm_list->_knob_offset_hook
@


11.17
log
@attempting to make commands/sliders/mouse-interactions
compatible.
@
text
@d15 1
a15 1
 *  $Header: /m/cad/mged/RCS/dm.h,v 11.16 1996/05/16 20:59:26 bparker Exp bparker $
d71 1
a80 1
  int     _adcflag;
a111 1
  int _scroll_enabled;
a154 1
#define adcflag curr_dm_list->s_info->_adcflag
d177 1
a198 1
#define scroll_enabled curr_dm_list->s_info->_scroll_enabled
@


11.16
log
@modifying sliders
@
text
@d15 1
a15 1
 *  $Header: /m/cad/mged/RCS/dm.h,v 11.15 1996/05/02 21:33:02 bparker Exp bparker $
d31 2
a94 1
  vect_t  _absolute_slew;
a97 1
  vect_t  _absolute_rotate;
d101 4
a107 6
  double _rot_x;
  double _rot_y;
  double _rot_z;
  double _tran_x;
  double _tran_y;
  double _tran_z;
@


11.15
log
@Still Tcl'ing the code
@
text
@d15 1
a15 1
 *  $Header: /m/cad/mged/RCS/dm.h,v 11.14 1996/04/24 16:20:56 bparker Exp bparker $
d115 2
d203 2
@


11.14
log
@still tcl-converting
@
text
@d15 1
a15 1
 *  $Header: /m/cad/mged/RCS/dm.h,v 11.13 1996/04/03 22:11:00 bparker Exp bparker $
a36 4
#define VIRTUAL_TRACKBALL_NOT_ACTIVE(_type,_name)\
  ((_type)dm_vars)->_name == VIRTUAL_TRACKBALL_OFF ||\
  ((_type)dm_vars)->_name == VIRTUAL_TRACKBALL_ON

d112 5
d133 2
a134 1
  int _owner;
d198 8
@


11.13
log
@added member dname to dm_list
@
text
@d15 1
a15 1
 *  $Header: /m/cad/mged/RCS/dm.h,v 11.12 1996/03/22 18:40:17 bparker Exp bparker $
d27 3
@


11.12
log
@cleanup
@
text
@d15 1
a15 1
 *  $Header: /m/cad/mged/RCS/dm.h,v 11.11 1996/03/11 21:46:03 bparker Exp bparker $
d25 1
d130 1
d145 1
@


11.11
log
@a few changes in support of the "tie" command
@
text
@d15 1
a15 1
 *  $Header: /m/cad/mged/RCS/dm.h,v 11.10 1996/03/01 19:22:54 bparker Exp bparker $
a24 1
#ifdef SEND_KEY_DOWN_PIPE
a25 1
#endif
a26 1
#ifdef VIRTUAL_TRACKBALL
a35 1
#endif
a66 1
#ifdef MULTI_ATTACH
a102 1
#ifdef VIRTUAL_TRACKBALL
a110 1
#endif
d128 1
d142 1
a177 1
#ifdef VIRTUAL_TRACKBALL
a184 1
#endif
a189 7

#else
/* Not MULTI_ATTACH */

extern struct dm *dmp;			/* ptr to current display mgr */

#endif
@


11.10
log
@remove unused XMGED stuff
add 4 new members to struct dm_list
@
text
@d15 1
a15 1
 *  $Header: /m/cad/mged/RCS/dm.h,v 11.9 1996/02/28 21:33:29 bparker Exp bparker $
d72 1
a72 9

struct dm_list {
  struct rt_list l;
  struct dm *_dmp;

/* New stuff to allow more than one active display manager */
  char *_dm_vars;   /* pointer to dependant display manager variables */
  struct rt_vls _pathName; /* full name of drawing window */
  int     _dmaflag;
d121 14
d147 5
a151 2
#define mged_variables curr_dm_list->_mged_variables
#define dmaflag curr_dm_list->_dmaflag
d153 29
a181 29
#define adcflag curr_dm_list->_adcflag
#define curs_x curr_dm_list->_curs_x
#define curs_y curr_dm_list->_curs_y
#define c_tdist curr_dm_list->_c_tdist
#define angle1 curr_dm_list->_angle1
#define angle2 curr_dm_list->_angle2
#define dv_xadc curr_dm_list->_dv_xadc
#define dv_yadc curr_dm_list->_dv_yadc
#define dv_1adc curr_dm_list->_dv_1adc
#define dv_2adc curr_dm_list->_dv_2adc
#define dv_distadc curr_dm_list->_dv_distadc

#define rateflag_slew curr_dm_list->_rateflag_slew
#define rate_slew curr_dm_list->_rate_slew
#define absolute_slew curr_dm_list->_absolute_slew
#define rateflag_rotate curr_dm_list->_rateflag_rotate
#define rate_rotate curr_dm_list->_rate_rotate
#define absolute_rotate curr_dm_list->_absolute_rotate
#define rateflag_zoom curr_dm_list->_rateflag_zoom
#define rate_zoom curr_dm_list->_rate_zoom
#define absolute_zoom curr_dm_list->_absolute_zoom

#define Viewscale curr_dm_list->_Viewscale
#define Viewrot curr_dm_list->_Viewrot
#define toViewcenter curr_dm_list->_toViewcenter
#define model2view curr_dm_list->_model2view
#define view2model curr_dm_list->_view2model
#define model2objview curr_dm_list->_model2objview
#define objview2model curr_dm_list->_objview2model
d184 7
a190 7
#define rot_x curr_dm_list->_rot_x
#define rot_y curr_dm_list->_rot_y
#define rot_z curr_dm_list->_rot_z
#define tran_x curr_dm_list->_tran_x
#define tran_y curr_dm_list->_tran_y
#define tran_z curr_dm_list->_tran_z
#define orig_pos curr_dm_list->_orig_pos
d193 4
a196 4
#define rot_set curr_dm_list->_rot_set
#define tran_set curr_dm_list->_tran_set
#define knob_offset_hook curr_dm_list->_knob_offset_hook
#define axis_color_hook curr_dm_list->_axis_color_hook
@


11.9
log
@*** empty log message ***
@
text
@d15 1
a15 1
 *  $Header: /m/cad/mged/RCS/dm.h,v 11.8 1996/02/12 21:47:27 bparker Exp bparker $
d117 1
d126 5
d184 5
a240 1

a256 146

#ifdef XMGED
#define NMG_1           78+128
#define NMG_2           77+128
#define NMG_3           76+128
#define NMG_4           75+128
#define NMG_5           74+128
#define NMG_6           73+128
#define NMG_7           72+128
#define NMG_8           71+128
#define EHY_1		70+128
#define EHY_2		69+128
#define EHY_3		68+128
#define EHY_4		67+128
#define EPA_1		66+128
#define EPA_2		65+128
#define EPA_3		64+128
#define RHC_1		63+128
#define RHC_2		62+128
#define RHC_3		61+128
#define RHC_4		60+128
#define RPC_1		59+128
#define RPC_2		58+128
#define RPC_3		57+128
#define ROT4_1		56+128
#define ROT4_2		55+128
#define ROT4_3		54+128
#define ROT4_4		53+128
#define ROT5_1		52+128
#define ROT5_2		51+128
#define ROT5_3		50+128
#define ROT5_4		49+128
#define ROT5_5		48+128
#define ROT6_1		47+128
#define ROT6_2		46+128
#define ROT6_3		45+128
#define ROT6_4		44+128
#define ROT6_5		43+128
#define ROT7_1		42+128
#define ROT7_2		41+128
#define ROT7_3		40+128
#define ROT7_4		39+128
#define ROT7_5		38+128
#define ROT7_6		37+128
#define ROT8_1		36+128
#define ROT8_2		35+128
#define ROT8_3		34+128
#define ROT8_4		33+128
#define ROT8_5		32+128
#define ROT8_6		31+128
#define MV4_1		30+128
#define MV4_2		29+128
#define MV4_3		28+128
#define MV4_4		27+128
#define MV5_1		26+128
#define MV5_2		25+128
#define MV5_3		24+128
#define MV5_4		23+128
#define MV5_5		22+128
#define MV6_1		21+128
#define MV6_2		20+128
#define MV6_3		19+128
#define MV6_4		18+128
#define MV6_5		17+128
#define MV7_1		16+128
#define MV7_2		15+128
#define MV8_1		14+128
#define MV8_2		13+128
#define MV8_3		12+128
#define MV8_4		11+128
#define MV8_5		10+128
#define MV8_6		9+128
#define SPLINE_1	8+128
#define SPLINE_2	7+128
#define ARS_1		6+128
#define ELL_1		5+128
#define ELL_2		4+128
#define ELL_3		3+128
#define ELL_4		2+128
#define ETO_1		1+128
#define ETO_2		0+128
#define ETO_3		63+64
#define ETO_4		62+64
#define TOR_1		61+64
#define TOR_2		60+64
#define TGC_1		59+64
#define TGC_2		58+64
#define TGC_3		57+64
#define TGC_4		56+64
#define TGC_5		55+64
#define TGC_6		54+64
#define TGC_7		53+64
#define TGC_8		52+64
#define TGC_9		51+64
#define TGC_10		50+64
#define TGC_11		49+64
#define TGC_12		48+64
#define POINT4_1	47+64
#define POINT4_2	46+64
#define POINT4_3	45+64
#define POINT4_4	44+64
#define EDGE5_1		43+64
#define EDGE5_2		42+64
#define EDGE5_3		41+64
#define EDGE5_4		40+64
#define EDGE5_5		39+64
#define EDGE5_6		38+64
#define EDGE5_7		37+64
#define EDGE5_8		36+64
#define EDGE5_9		35+64
#define EDGE6_1		34+64
#define EDGE6_2		33+64
#define EDGE6_3		32+64
#define EDGE6_4		31+64
#define EDGE6_5		30+64
#define EDGE6_6		29+64
#define EDGE6_7		28+64
#define EDGE6_8		27+64
#define EDGE6_9		26+64
#define EDGE6_10	25+64
#define EDGE7_1		24+64
#define EDGE7_2		23+64
#define EDGE7_3		22+64
#define EDGE7_4		21+64
#define EDGE7_5		20+64
#define EDGE7_6		19+64
#define EDGE7_7		18+64
#define EDGE7_8		17+64
#define EDGE7_9		16+64
#define EDGE7_10	15+64
#define EDGE7_11	14+64
#define EDGE7_12	13+64
#define EDGE8_1		12+64
#define EDGE8_2		11+64
#define EDGE8_3		10+64
#define EDGE8_4		9+64
#define EDGE8_5		8+64
#define EDGE8_6		7+64
#define EDGE8_7		6+64
#define EDGE8_8		5+64
#define EDGE8_9		4+64
#define EDGE8_10	3+64
#define EDGE8_11	2+64
#define EDGE8_12	1+64
#define P_HELP		0+64
#endif
@


11.8
log
@virtual trackball stuff
@
text
@d15 1
a15 1
 *  $Header: /m/cad/mged/RCS/dm.h,v 11.7 1996/02/09 22:13:30 bparker Exp bparker $
d31 1
a31 1
#define VIRTUAL_TRACKBALL_IGNORE 1 /* Ignore motion events */
d35 4
@


11.7
log
@*** empty log message ***
@
text
@d15 1
a15 1
 *  $Header: /m/cad/mged/RCS/dm.h,v 11.6 1996/01/17 22:11:03 bparker Exp bparker $
d24 12
@


11.6
log
@playing it safe
@
text
@d15 1
a15 1
 *  $Header: /m/cad/mged/RCS/dm.h,v 11.5 1996/01/05 22:08:48 bparker Exp bparker $
d62 1
a62 1
  char *_dm_vars;   /* pointer to display manager variables */
d99 10
d151 10
@


11.5
log
@Just playing it safe
@
text
@d15 1
a15 1
 *  $Header: /m/cad/mged/RCS/dm.h,v 11.4 1995/12/27 22:32:23 bparker Exp bparker $
a24 3
/* Used to ignore the old scrollbars and menus */
extern int ignore_scroll_and_menu;

d55 1
a55 5
#ifndef MULTI_ATTACH

extern struct dm *dmp;			/* ptr to current display mgr */

#else
d76 5
d118 5
d141 6
@


11.4
log
@Experimenting with attaching more
than one display manager at a time
@
text
@d15 1
a15 1
 *  $Header: /m/cad/mged/RCS/dm.h,v 11.3 1995/12/04 21:03:03 bparker Exp bparker $
a66 1
  int *dm_vars;   /* pointer to display manager variables */
d69 2
d103 35
a137 2
extern struct rt_list dm_list_head;  /* list of active display managers */
extern struct dm_list *dm_list_curr;
@


11.3
log
@added variable to display of menu and scrollbars
@
text
@d15 1
a15 1
 *  $Header: /m/cad/mged/RCS/dm.h,v 11.2 1995/01/17 12:48:41 bparker Exp bparker $
d57 3
d61 44
@


11.2
log
@merging xmged sources
@
text
@d15 1
a15 1
 *  $Header: /m/cad/xmged/RCS/dm.h,v 11.2 95/01/17 11:45:06 bparker Exp $
d24 3
@


11.1
log
@Release_4.4
@
text
@d15 1
a15 1
 *  $Header: /m/cad/mged/RCS/dm.h,v 10.5 94/12/24 01:05:28 mike Exp $
d118 146
@


10.5
log
@Eliminated old dm_values.dv_* style "polled" device interface.
Everything is done by string commands now.
@
text
@d15 1
a15 1
 *  $Header: /m/cad/mged/RCS/dm.h,v 10.4 94/12/23 23:39:46 mike Exp Locker: mike $
@


10.4
log
@Eliminated unused buttons, added some new ones.
@
text
@d15 1
a15 1
 *  $Header: /m/cad/mged/RCS/dm.h,v 10.3 94/08/10 20:20:35 mike Exp Locker: mike $
a19 4
#define DV_PICK		1	/* dv_penpress for pick function */
#define DV_INZOOM	2	/* dv_penpress for zoom in */
#define DV_OUTZOOM	4	/* dv_penpress for zoom out */
#define DV_SLEW		8	/* dv_penpress for view slew */
a20 17
	int	dv_buttonpress;		/* Number of button pressed when !0 */
	double	dv_xjoy;		/* Joystick,  -1.0 <= x <= +1.0 */
	double	dv_yjoy;
	double	dv_zjoy;
	int	dv_xpen;		/* Tablet.  -2048 <= x,y <= +2047 */
	int	dv_ypen;
	int	dv_penpress;		/* !0 when tablet is pressed */
	double	dv_zoom;		/* Zoom knob.  -1.0 <= zoom <= +1.0 */
	double	dv_xslew;		/* View slew.  -1.0 <= slew <= +1.0 */
	double	dv_yslew;
	double	dv_zslew;
	int	dv_xadc;		/* A/D cursor -2048 <= adc <= +2047 */
	int	dv_yadc;
	int	dv_1adc;		/* angle 1 for A/D cursor */
	int	dv_2adc;		/* angle 2 for A/D cursor */
	int	dv_distadc;		/* Tick distance */
	int	dv_flagadc;		/* A/D cursor "changed" flag */
@


10.3
log
@Radical changes to the way dm_input works.
@
text
@d15 1
a15 1
 *  $Header: /m/cad/mged/RCS/dm.h,v 10.2 93/07/13 20:56:52 mike Exp Locker: mike $
d115 2
d120 1
a120 7
#define BV_SHIFT	1+32
#define BE_SHIFT	2+32
#define BV_DCUE		3+32
#define BV_ZCLIP	4+32
#define BV_PERSP	5+32
#define BV_ZBUFF	6+32
#define BV_LIGHT	7+32
@


10.2
log
@Added dmr_cmd().
@
text
@d15 1
a15 1
 *  $Header: /m/cad/mged/RCS/dm.h,v 10.1 91/10/12 06:43:37 mike Rel4_0 Locker: mike $
d50 1
a50 1
	int	(*dmr_input)();
@


10.1
log
@Release_4.0
@
text
@d15 1
a15 1
 *  $Header: /n/wolf/m/cad/mged/RCS/dm.h,v 9.3 91/01/27 21:50:47 butler Exp $
d73 1
@


9.3
log
@added defines for buttons "DepthCue", "Zclip", "Persp", "Zbuff", "Light"
@
text
@d15 1
a15 1
 *  $Header: /n/wolf/m/cad/mged/RCS/dm.h,v 9.2 91/01/26 04:51:26 mike Exp $
@


9.2
log
@Added ability for display managers to send command strings up
to the top half.
@
text
@d15 1
a15 1
 *  $Header: /m/cad/mged/RCS/dm.h,v 9.1 89/05/19 06:02:55 mike Rel3_5 $
d119 6
@


9.1
log
@Release_3.5
@
text
@d15 1
a15 1
 *  $Header: dm.h,v 8.2 88/12/06 00:38:03 mike Exp $
d18 2
d42 1
@


8.2
log
@Memory map, and vector list stuff now taken from raytrace.h
@
text
@d15 1
a15 1
 *  $Header: /cad/d/mike/cad/mged/RCS/dm.h,v 1.2 88/10/29 22:46:13 mike Exp $
@


8.1
log
@Release_3.0
@
text
@d15 1
a15 1
 *  $Header: dm.h,v 7.4 88/09/15 21:00:54 phil Exp $
a42 7
struct mem_map {
	struct mem_map	*m_nxtp;	/* Linking pointer to next element */
	unsigned	 m_size;	/* Size of this free element */
	unsigned long	 m_addr;	/* Address of start of this element */
};
#define MAP_NULL	((struct mem_map *) 0)

a71 39

/***** START TEMPORARY COPY OF DEFINITIONS FROM h/raytrace.h ****/
struct vlist {
	point_t		vl_pnt;		/* coordinates in space */
	int		vl_draw;	/* 1=draw, 0=move */
	struct vlist	*vl_forw;	/* next structure in list */
};
#define VL_NULL		((struct vlist *)0)

struct vlhead {
	struct vlist	*vh_first;
	struct vlist	*vh_last;
};
extern struct vlist	*rtg_vlFree;	/* should be rt_g.rtg_vlFree !! XXX */

#define GET_VL(p)	{ \
			if( ((p) = rtg_vlFree) == VL_NULL )  { \
				(p) = (struct vlist *)malloc(sizeof(struct vlist) ); \
			} else { \
				rtg_vlFree = (p)->vl_forw; \
			} }
/* Free an entire chain of vlist structs */
#define FREE_VL(p)	{ register struct vlist *_vp = (p); \
			while( _vp->vl_forw != VL_NULL ) _vp=_vp->vl_forw; \
			_vp->vl_forw = rtg_vlFree; \
			rtg_vlFree = (p);  }
#define ADD_VL(hd,pnt,draw)  { \
			register struct vlist *_vp; \
			GET_VL(_vp); \
			VMOVE( _vp->vl_pnt, (pnt) ); \
			_vp->vl_draw = draw; \
			_vp->vl_forw = VL_NULL; \
			if( (hd)->vh_first == VL_NULL ) { \
				(hd)->vh_first = (hd)->vh_last = _vp; \
			} else { \
				(hd)->vh_last->vl_forw = _vp; \
				(hd)->vh_last = _vp; \
			} }
/*****   END TEMPORARY COPY OF DEFINITIONS FROM h/raytrace.h ****/
@


7.4
log
@added dmr_releasedisplay to display manager structure so that
individual displays can specify whether MGED must release them
before running RT.
@
text
@d15 1
a15 1
 *  $Header: dm.h,v 7.3 88/02/25 06:04:15 phil Locked $
@


7.3
log
@Modified for new vector lists
@
text
@d15 1
a15 1
 *  $Header: dm.h,v 7.2 87/11/05 05:02:33 mike Locked $
d72 1
@


7.2
log
@Eliminated local machine.h, converted to fastf_t, now link with librt.a
@
text
@d15 1
a15 1
 *  $Header: dm.h,v 7.1 87/11/03 00:00:27 mike Rel $
d79 5
a83 4
/* Format of a vector list */
struct veclist {
	float	vl_pnt[3];	/* X, Y, Z of point in Model space */
	char	vl_pen;		/* PEN_DOWN==draw, PEN_UP==move */
d85 1
a85 3
extern struct veclist *vlp;	/* pointer to first free veclist element */
extern struct veclist *vlend;	/* pointer to first invalid veclist element */
#define VLIST_NULL	((struct veclist *)0)
d87 5
a91 6
/*
 * Record an absolute vector and "pen" position in veclist array.
 */
#define DM_GOTO(p,pen)	if(vlp>=vlend) \
	(void)printf("%s/%d:  veclist overrun\n", __FILE__, __LINE__); \
	else { VMOVE( vlp->vl_pnt, p ); (vlp++)->vl_pen = pen; }
d93 24
a116 3
/* Virtual Pen settings */
#define PEN_UP		0
#define PEN_DOWN	1
@


7.1
log
@Release 2.3
@
text
@d15 1
a15 1
 *  $Header: dm.h,v 6.1 87/07/11 08:03:40 mike Rel $
d24 3
a26 3
	float	dv_xjoy;		/* Joystick,  -1.0 <= x <= +1.0 */
	float	dv_yjoy;
	float	dv_zjoy;
d30 4
a33 4
	float	dv_zoom;		/* Zoom knob.  -1.0 <= zoom <= +1.0 */
	float	dv_xslew;		/* View slew.  -1.0 <= slew <= +1.0 */
	float	dv_yslew;
	float	dv_zslew;
d72 1
a72 1
	float	dmr_bound;		/* zoom-in limit */
@


6.1
log
@Release 2.0
@
text
@d15 1
a15 1
 *  $Header: dm.h,v 5.1 87/06/24 22:20:17 mike Rel $
@


5.1
log
@Release 1.24
@
text
@d15 1
a15 1
 *  $Header: dm.h,v 4.3 87/06/13 06:04:48 phil Exp $
@


4.3
log
@added dv_zslew
@
text
@d15 1
a15 1
 *  $Header: dm.h,v 4.2 87/02/13 00:07:19 mike Exp $
@


4.2
log
@Release 1.20 -- First Formal Release
@
text
@d15 1
a15 1
 *  $Header: dm.h,v 4.1 86/12/29 03:21:15 mike Rel1 $
d33 1
@


4.1
log
@BRL CAD Distribution Release 1.10
@
text
@d15 1
a15 1
 *  $Header: dm.h,v 2.6 86/12/20 05:02:33 mike Exp $
@


2.6
log
@Changed 90,90 to 45,45
@
text
@d15 1
a15 1
 *  $Header: dm.h,v 2.5 86/03/10 20:35:57 mike Locked $
@


2.5
log
@Latest features from Keith
@
text
@d15 1
a15 1
 *  $Header: dm.h,v 2.4 85/05/10 00:50:14 mike Exp $
d136 1
a136 1
#define BV_90_90	1
@


2.4
log
@Added multi-menu capability, added dmr_window and dmr_debug,
deleted dmr_restart.
@
text
@d15 1
a15 1
 *  $Header: dm.h,v 2.3 85/03/22 01:43:06 mike Exp $
d133 3
@


2.3
log
@Added defines for command to dmr_changeview()
@
text
@d15 1
a15 1
 *  $Header: dm.h,v 2.3 85/03/22 01:35:07 mike Exp $
a52 1
	void	(*dmr_restart)();
d68 2
@


2.2
log
@Added mapping between region ID and color + database handle.
Reorganized to support regular expressions on the command line.
@
text
@d15 1
a15 1
 *  $Header: dm.h,v 2.1 85/03/11 23:46:24 mike Prod $
d147 7
@


2.1
log
@First production release.
Includes lint cleanups from Gwyn.
@
text
@d15 1
a15 1
 *  $Header: dm.h,v 1.8 85/03/08 20:49:51 mike Exp $
d68 1
d144 3
a146 7
#define DM_GREEN	2
#define DM_BLUE		3
#define DM_YELLOW	4
#define DM_MAGENTA	5
#define DM_CYAN		6
#define DM_GRAY		14
#define DM_WHITE	15
@


1.8
log
@Added statechange, viewchange, and displaylist hooks.
@
text
@d10 4
d15 1
a15 1
 *  $Header: dm.h,v 1.7 85/02/02 01:38:22 mike Exp $
d89 1
a89 1
	printf("%s/%d:  veclist overrun\n", __FILE__, __LINE__); \
@


1.7
log
@dmr_open routines now return success/fail indication
@
text
@d11 1
a11 1
 *  $Header: dm.h,v 1.6 85/01/16 02:19:06 mike Exp $
d62 3
@


1.6
log
@Defined values for dv_penpress
@
text
@d11 1
a11 1
 *  $Header: dm.h,v 1.6 85/01/16 02:13:56 mike Exp $
d47 1
a47 1
	void	(*dmr_open)();
@


1.5
log
@comments
@
text
@d11 1
a11 1
 *  $Header: dm.h,v 1.4 84/11/22 06:54:39 mike Exp $
d14 4
@


1.4
log
@Multiple simultaneous display manager support
@
text
@d11 1
a11 1
 *  $Header: dm.h,v 1.3 84/11/20 04:20:01 mike Exp $
d37 1
a37 1
	unsigned	 m_addr;	/* Address of start of this element */
@


1.3
log
@shufle
@
text
@d11 1
a11 1
 *  $Header$
d34 7
d61 1
@


1.2
log
@
Unified display manager interface defined here
@
text
@d5 7
d13 1
d32 1
d34 22
d57 8
a64 8
/* Display manager routines */
extern void	dm_open(), dm_init(), dm_restart();
extern void	dm_prolog(), dm_epilog(), dm_call();
extern void	dm_normal(), dm_newrot(), dm_update();
extern void	dm_finish(), dm_puts(), dm_2d_line();
extern void	dm_light();
extern float	dm_bound;		/* zoom-in limit */
extern int	dm_object();		/* Set up for an object */
d66 6
a71 3
/* Global solid center & sizing information */
extern float	dl_xcent, dl_ycent, dl_zcent;
extern float	dl_scale;
d73 3
a75 7
/* Functions to generate displaylist */
extern void dl_preamble();
extern void dl_epilogue();
extern unsigned dl_load();
extern unsigned dl_size();
extern void	dl_goto();	/* Produce optimized absolute vectors */

@


1.1
log
@Initial revision
@
text
@d25 6
a30 1
/* Declarations of functions in the Display Manager module */
d32 13
@
