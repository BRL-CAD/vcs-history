head	1.2;
access;
symbols
	ansi-20040316-freeze:1.1.1.1
	rel-6-1-DP:1.1.1.1
	rel-6-0-2:1.1.1.1
	rel-6-0-1-branch:1.1.1.1.0.4
	hartley-6-0-post:1.1.1.1
	hartley-6-0-pre:1.1.1.1
	rel-6-0-1:1.1.1.1
	rel-6-0:1.1.1.1
	rel-5-4:1.1.1.1
	offsite-5-3-pre:1.1.1.1
	rel-5-3:1.1.1.1
	rel-5-1-branch:1.1.1.1.0.2
	windows-6-0-branch:1.1.1.1.0.8
	ansi-6-0-branch:1.1.1.1.0.6
	tcl8-3:1.1.1.1
	scriptics:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	2003.03.13.19.09.30;	author jra;	state dead;
branches;
next	1.1;

1.1
date	2000.12.06.21.33.21;	author bparker;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.12.06.21.33.21;	author bparker;	state Exp;
branches
	1.1.1.1.6.1
	1.1.1.1.8.1;
next	;

1.1.1.1.6.1
date	2004.03.17.07.14.04;	author morrison;	state dead;
branches;
next	;

1.1.1.1.8.1
date	2004.03.15.17.34.32;	author morrison;	state dead;
branches;
next	;


desc
@@


1.2
log
@*** empty log message ***
@
text
@/*
 * dirent.h --
 *
 *	Declarations of a library of directory-reading procedures
 *	in the POSIX style ("struct dirent").
 *
 * Copyright (c) 1991 The Regents of the University of California.
 * Copyright (c) 1994 Sun Microsystems, Inc.
 *
 * See the file "license.terms" for information on usage and redistribution
 * of this file, and for a DISCLAIMER OF ALL WARRANTIES.
 *
 * RCS: @@(#) $Id: dirent2.h,v 1.1 2000/12/06 21:33:21 bparker Exp $
 */

#ifndef _DIRENT
#define _DIRENT

#ifndef _TCL
#include <tcl.h>
#endif

/*
 * Dirent structure, which holds information about a single
 * directory entry.
 */

#define MAXNAMLEN 255
#define DIRBLKSIZ 512

struct dirent {
    long d_ino;			/* Inode number of entry */
    short d_reclen;		/* Length of this record */
    short d_namlen;		/* Length of string in d_name */
    char d_name[MAXNAMLEN + 1];	/* Name must be no longer than this */
};

/*
 * State that keeps track of the reading of a directory (clients
 * should never look inside this structure;  the fields should
 * only be accessed by the library procedures).
 */

typedef struct _dirdesc {
    int dd_fd;
    long dd_loc;
    long dd_size;
    char dd_buf[DIRBLKSIZ];
} DIR;

/*
 * Procedures defined for reading directories:
 */

extern void		closedir _ANSI_ARGS_((DIR *dirp));
extern DIR *		opendir _ANSI_ARGS_((char *name));
extern struct dirent *	readdir _ANSI_ARGS_((DIR *dirp));

#endif /* _DIRENT */
@


1.1
log
@Initial revision
@
text
@d13 1
a13 1
 * RCS: @@(#) $Id: dirent2.h,v 1.2 1998/09/14 18:39:44 stanton Exp $
@


1.1.1.1
log
@Import tcl8.3
@
text
@@


1.1.1.1.6.1
log
@sync branch with HEAD
@
text
@d13 1
a13 1
 * RCS: @@(#) $Id: dirent2.h,v 1.1.1.1 2000/12/06 21:33:21 bparker Exp $
@


1.1.1.1.8.1
log
@sync with HEAD -- libtcl8.3 is now libtcl8.4
@
text
@d13 1
a13 1
 * RCS: @@(#) $Id: dirent2.h,v 1.1.1.1 2000/12/06 21:33:21 bparker Exp $
@

