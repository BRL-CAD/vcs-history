head	1.4;
access;
symbols
	ansi-20040316-freeze:1.3
	rel-6-1-DP:1.3
	rel-6-0-2:1.3
	rel-6-0-1-branch:1.3.0.2
	hartley-6-0-post:1.3
	hartley-6-0-pre:1.3
	rel-6-0-1:1.3
	rel-6-0:1.3
	rel-5-4:1.1.1.1
	offsite-5-3-pre:1.1.1.1
	rel-5-3:1.1.1.1
	rel-5-1-branch:1.1.1.1.0.2
	windows-6-0-branch:1.3.0.6
	ansi-6-0-branch:1.3.0.4
	tcl8-3:1.1.1.1
	scriptics:1.1.1;
locks; strict;
comment	@ * @;


1.4
date	2003.03.13.19.10.04;	author jra;	state dead;
branches;
next	1.3;

1.3
date	2001.07.03.01.30.01;	author butler;	state Exp;
branches
	1.3.4.1
	1.3.6.1;
next	1.2;

1.2
date	2001.04.20.22.30.13;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2000.12.06.21.33.21;	author bparker;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.12.06.21.33.21;	author bparker;	state Exp;
branches;
next	;

1.3.4.1
date	2004.03.17.07.14.23;	author morrison;	state dead;
branches;
next	;

1.3.6.1
date	2004.03.11.23.44.12;	author morrison;	state dead;
branches;
next	;


desc
@@


1.4
log
@*** empty log message ***
@
text
@/* 
 * tclRegexp.h --
 *
 * 	This file contains definitions used internally by Henry
 *	Spencer's regular expression code.
 *
 * Copyright (c) 1998 by Sun Microsystems, Inc.
 * Copyright (c) 1998-1999 by Scriptics Corporation.
 *
 * See the file "license.terms" for information on usage and redistribution
 * of this file, and for a DISCLAIMER OF ALL WARRANTIES.
 *
 * RCS: @@(#) $Id: tclRegexp.h,v 1.3 2001/07/03 01:30:01 butler Exp $
 */

#ifndef _TCLREGEXP
#define _TCLREGEXP

#include "regex.h"

#ifdef BUILD_tcl
# undef TCL_STORAGE_CLASS
# define TCL_STORAGE_CLASS DLLEXPORT
#endif

/*
 * The TclRegexp structure encapsulates a compiled regex_t,
 * the flags that were used to compile it, and an array of pointers
 * that are used to indicate subexpressions after a call to Tcl_RegExpExec.
 * Note that the string and objPtr are mutually exclusive.  These values
 * are needed by Tcl_RegExpRange in order to return pointers into the
 * original string.
 */

typedef struct TclRegexp {
    int flags;			/* Regexp compile flags. */
    regex_t re;			/* Compiled re, includes number of
				 * subexpressions. */
    const char *string;		/* Last string passed to Tcl_RegExpExec. */
    Tcl_Obj *objPtr;		/* Last object passed to Tcl_RegExpExecObj. */
    regmatch_t *matches;	/* Array of indices into the Tcl_UniChar
				 * representation of the last string matched
				 * with this regexp to indicate the location
				 * of subexpressions. */
    rm_detail_t details;	/* Detailed information on match (currently
				 * used only for REG_EXPECT). */
    int refCount;		/* Count of number of references to this
				 * compiled regexp. */
} TclRegexp;

#endif /* _TCLREGEXP */

@


1.3
log
@forcing the timestamps.
@
text
@d13 1
a13 1
 * RCS: @@(#) $Id: tclRegexp.h,v 1.2 2001/04/20 22:30:13 morrison Exp $
@


1.3.4.1
log
@sync branch with HEAD
@
text
@d13 1
a13 1
 * RCS: @@(#) $Id: tclRegexp.h,v 1.3 2001/07/03 01:30:01 butler Exp $
@


1.3.6.1
log
@sync to HEAD...
@
text
@d13 1
a13 1
 * RCS: @@(#) $Id: tclRegexp.h,v 1.3 2001/07/03 01:30:01 butler Exp $
@


1.2
log
@CONST to const
@
text
@d13 1
a13 1
 * RCS: @@(#) $Id: tclRegexp.h,v 1.1.1.1 2000/12/06 21:33:21 bparker Exp $
d52 1
@


1.1
log
@Initial revision
@
text
@d13 1
a13 1
 * RCS: @@(#) $Id: tclRegexp.h,v 1.11 1999/08/02 17:45:38 redman Exp $
d39 1
a39 1
    CONST char *string;		/* Last string passed to Tcl_RegExpExec. */
@


1.1.1.1
log
@Import tcl8.3
@
text
@@
