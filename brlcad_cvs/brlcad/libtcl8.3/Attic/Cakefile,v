head	1.6;
access;
symbols
	ansi-20040316-freeze:1.5
	rel-6-1-DP:1.5
	rel-6-0-2:1.5
	rel-6-0-1-branch:1.5.0.2
	hartley-6-0-post:1.5
	hartley-6-0-pre:1.5
	rel-6-0-1:1.5
	rel-6-0:1.5
	rel-5-4:1.1.1.1.2.1
	offsite-5-3-pre:1.2
	rel-5-3:1.1.1.1.2.1
	rel-5-1-branch:1.1.1.1.0.2
	windows-6-0-branch:1.5.0.6
	ansi-6-0-branch:1.5.0.4
	tcl8-3:1.1.1.1
	scriptics:1.1.1;
locks; strict;
comment	@# @;


1.6
date	2003.03.13.19.09.25;	author jra;	state dead;
branches;
next	1.5;

1.5
date	2002.02.28.22.57.24;	author kermit;	state Exp;
branches
	1.5.4.1
	1.5.6.1;
next	1.4;

1.4
date	2001.10.26.21.53.53;	author morrison;	state Exp;
branches;
next	1.3;

1.3
date	2001.10.24.23.09.58;	author morrison;	state Exp;
branches;
next	1.2;

1.2
date	2000.12.07.23.39.44;	author bparker;	state Exp;
branches;
next	1.1;

1.1
date	2000.12.06.21.33.14;	author bparker;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.12.06.21.33.14;	author bparker;	state Exp;
branches
	1.1.1.1.2.1;
next	;

1.1.1.1.2.1
date	2000.12.07.23.36.23;	author bparker;	state Exp;
branches;
next	;

1.5.4.1
date	2004.03.17.07.14.03;	author morrison;	state dead;
branches;
next	;

1.5.6.1
date	2004.03.11.23.43.58;	author morrison;	state dead;
branches;
next	;


desc
@@


1.6
log
@Update to libtcl8.4
@
text
@/*
 *			libtcl/Cakefile
 */
#define SRCDIR	[[echo libtcl''TCLTK_VERS]]
#define	SRCSUFF	.c
#define MANSECTION	3

#include "../Cakefile.defs"

/* Since we're building a library, we can't also list a regular
 * program (like tclsh) in the PRODUCTS rule, it will confuse
 * the BUILD_LIBRARY rule in Cakefile.defs.
 * Hence the EXTRA_PRODUCTS dodge
 */

#if !defined(BUILD_LIBRARY)
#define	BUILD_LIBRARY	ar r
#define TCL_OPTS	--srcdir=[[pwd]]/../SRCDIR/"unix" --quiet --cache-file cache.MTYPE \
			 --exec-prefix=BASEDIR --prefix=BASEDIR --disable-shared
#define PRODUCTS	[[echo libtcl''TCLTK_VERS.a]]
#define	AFTER_MAKE	rm -f libtcl.a ; ln -s PRODUCTS libtcl.a
#else
#define TCL_OPTS	--srcdir=[[pwd]]/../SRCDIR/"unix" --quiet --enable-shared \
			 --cache-file cache.MTYPE --exec-prefix=BASEDIR --prefix=BASEDIR
#define PRODUCTS	[[ echo libtcl''TCLTK_VERS.so]]
#define SHARED_PRODUCT	libtcl''TCLTK_VERS.so''[[LIBVERS]]
#define	AFTER_MAKE	mv -f libtcl''TCLTK_VERS.so SHARED_PRODUCT ; sharedliblink.sh SHARED_PRODUCT ; rm -f libtcl.so ; ln -s SHARED_PRODUCT libtcl.so
#endif
#define EXTRA_PRODUCTS	tclsh

/* Rule to see if cake is running with -s flag */
#define MINUS_S	[[echo CAKEFLAGS | tr '\040' '\012' | sed -n -e /-s/p ]]

PRODUCTS: Makefile.MTYPE cache.MTYPE
	make MINUS_S -f Makefile.MTYPE CAKEFLAGS EXTRA_PRODUCTS
	AFTER_MAKE

EXTRA_PRODUCTS: Makefile.MTYPE cache.MTYPE
	make MINUS_S -f Makefile.MTYPE CAKEFLAGS EXTRA_PRODUCTS
	AFTER_MAKE


Makefile.MTYPE cache.MTYPE:		if not exist Makefile.MTYPE or not exist cache.MTYPE
	( \C\F\L\A\G\S=\"GFLAG OPTIMIZER PROFILER\"; \
		\A\F\T\E\R\_\M\A\K\E=\"AFTER_MAKE\"; \
		\R\A\N\L\I\B=\"RANLIB\"; \
		\L\D\F\L\A\G\S=\"LDFLAGS\"; \
		\B\U\I\L\D\_\L\I\B\R\A\R\Y=\"BUILD_LIBRARY\"; \
		\C\C=\"CC\"; \
		 export \C\F\L\A\G\S \R\A\N\L\I\B \L\D\F\L\A\G\S \B\U\I\L\D\_\L\I\B\R\A\R\Y \C\C \A\F\T\E\R\_\M\A\K\E; \
		 ../SRCDIR/"unix"/configure TCL_OPTS; \
		../SRCDIR/fix_makefile.sh > Makefile.MTYPE)


clean&:	Makefile.MTYPE
	make -f Makefile.MTYPE clean

noprod&:
	rm -rf libtcl''TCLTK_VERS.*

clobber&: Makefile.MTYPE
	make -f Makefile.MTYPE clean
	rm -f *.MTYPE *.o libtcl* config.log config.status tclConfig.sh tclsh Makefile
	#ifdef NFS
	rm -rf dltest
	#endif

install&: Makefile.MTYPE
	make -f Makefile.MTYPE install
	( cd BASEDIR/lib; AFTER_MAKE )

install-nobak&: Makefile.MTYPE
	make -f Makefile.MTYPE install
	( cd BASEDIR/lib; AFTER_MAKE )

tclsh: Makefile.MTYPE
	make -f Makefile.MTYPE tclsh

tcltest: Makefile.MTYPE
	make -f Makefile.MTYPE tcltest

test&: Makefile.MTYPE
	make -f Makefile.MTYPE test

/* dltest:			if not exist dltest
	cp -r ../SRCDIR/"unix"/dltest .
*/
@


1.5
log
@Added CC definition so it can be passed through from Cakefile.defs.
@
text
@@


1.5.4.1
log
@sync branch with HEAD
@
text
@@


1.5.6.1
log
@sync to HEAD...
@
text
@@


1.4
log
@temporarily removed the ARCH_SUF usage until I can investigate why there was a case where it didn't get replaced with the suffix (reported on an m4i64)
@
text
@d49 2
a50 1
		 export \C\F\L\A\G\S \R\A\N\L\I\B \L\D\F\L\A\G\S \B\U\I\L\D\_\L\I\B\R\A\R\Y \A\F\T\E\R\_\M\A\K\E; \
@


1.3
log
@added proper ARCH suffix support for shared libraries (.so, .dylib, etc)
@
text
@d25 3
a27 3
#define PRODUCTS	[[ echo libtcl''TCLTK_VERS.ARCH_SUF]]
#define SHARED_PRODUCT	libtcl''TCLTK_VERS.ARCH_SUF''[[LIBVERS]]
#define	AFTER_MAKE	mv -f libtcl''TCLTK_VERS.ARCH_SUF SHARED_PRODUCT ; sharedliblink.sh SHARED_PRODUCT ; rm -f libtcl.ARCH_SUF ; ln -s SHARED_PRODUCT libtcl.ARCH_SUF
@


1.2
log
@Mods for static compile
@
text
@d25 3
a27 3
#define PRODUCTS	[[ echo libtcl''TCLTK_VERS.so]]
#define SHARED_PRODUCT	libtcl''TCLTK_VERS.so''[[LIBVERS]]
#define	AFTER_MAKE	mv -f libtcl''TCLTK_VERS.so SHARED_PRODUCT ; sharedliblink.sh SHARED_PRODUCT ; rm -f libtcl.so ; ln -s SHARED_PRODUCT libtcl.so
@


1.1
log
@Initial revision
@
text
@d19 1
a19 1
			 --exec-prefix=BASEDIR --prefix=BASEDIR
@


1.1.1.1
log
@Import tcl8.3
@
text
@@


1.1.1.1.2.1
log
@Mod for static compile
@
text
@d19 1
a19 1
			 --exec-prefix=BASEDIR --prefix=BASEDIR --disable-shared
@

