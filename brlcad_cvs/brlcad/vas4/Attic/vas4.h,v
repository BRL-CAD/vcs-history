head	11.6;
access;
symbols
	ansi-20040405-merged:11.4.2.1
	postmerge-20040405-ansi:11.5
	premerge-20040404-ansi:11.4
	postmerge-autoconf:11.4
	autoconf-freeze:11.4
	premerge-autoconf:11.4
	postmerge-20040315-windows:11.4
	premerge-20040315-windows:11.4
	windows-20040315-freeze:11.4
	autoconf-20031203:11.4
	autoconf-20031202:11.4
	autoconf-branch:11.4.0.10
	phong-branch:11.4.0.8
	photonmap-branch:11.4.0.6
	rel-6-1-DP:11.4
	windows-branch:11.4.0.4
	rel-6-0-2:11.2
	ansi-branch:11.4.0.2
	rel-6-0-1-branch:11.2.0.2
	hartley-6-0-post:11.3
	hartley-6-0-pre:11.2
	rel-6-0-1:11.2
	rel-6-0:11.2
	rel-5-4:11.1
	offsite-5-3-pre:11.1
	rel-5-3:11.1
	rel-5-2:11.1
	rel-5-1-branch:11.1.0.2
	rel-5-1:11.1
	rel-5-0:11.1
	rel-5-0-beta:11.1
	rel-4-5:11.1
	ctj-4-5-post:11.1
	ctj-4-5-pre:11.1
	rel-4-4:11.1
	rel-4-0:10.1
	rel-3-5:9.1
	rel-3-0:8.1;
locks; strict;
comment	@ * @;


11.6
date	2004.05.21.13.50.00;	author morrison;	state dead;
branches;
next	11.5;

11.5
date	2004.04.05.05.46.03;	author morrison;	state Exp;
branches;
next	11.4;

11.4
date	2002.08.20.17.09.12;	author jra;	state Exp;
branches
	11.4.2.1;
next	11.3;

11.3
date	2002.08.15.20.56.23;	author hartley;	state Exp;
branches;
next	11.2;

11.2
date	2001.08.10.18.36.57;	author jra;	state Exp;
branches;
next	11.1;

11.1
date	95.01.04.10.18.28;	author mike;	state Rel4_4;
branches;
next	10.1;

10.1
date	91.10.12.06.50.26;	author mike;	state Rel4_0;
branches;
next	9.1;

9.1
date	89.05.19.06.13.53;	author mike;	state Rel3_5;
branches;
next	8.1;

8.1
date	88.10.05.00.52.44;	author mike;	state Rel3_0;
branches;
next	1.4;

1.4
date	88.01.09.03.50.25;	author mike;	state Exp;
branches;
next	1.3;

1.3
date	88.01.07.04.55.15;	author mike;	state Exp;
branches;
next	1.2;

1.2
date	88.01.06.07.29.18;	author mike;	state Exp;
branches;
next	1.1;

1.1
date	88.01.05.20.17.03;	author mike;	state Exp;
branches;
next	;

11.4.2.1
date	2002.09.19.18.02.52;	author morrison;	state Exp;
branches;
next	;


desc
@Command codes for Lyon Lamb VAS IV
@


11.6
log
@moved to src/vas4/
@
text
@/*
 *			V A S 4 . H
 *
 *  Constants used with the Lyon-Lamb VAS IV video animation controller.
 *
 *  Use 'C_' prefix for commands
 *  Use 'R_' prefix for result codes
 *
 *  Authors -
 *	Steve Satterfield, USNA
 *	Joe Johnson, USNA
 *	Michael John Muuss, BRL
 *  
 *  Source -
 *	SECAD/VLD Computing Consortium, Bldg 394
 *	The U. S. Army Ballistic Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5066
 *  
 *  Distribution Status -
 *	Public Domain, Distribution Unlimitied.
 *
 *  $Header: /n/xoff/cvs/brlcad/vas4/vas4.h,v 11.5 2004/04/05 05:46:03 morrison Exp $
 */

/* Commands */
#define C_DISPLAY_DATA	'+'
#define C_EE		'&'
#define C_EDIT		'.'
#define C_ENTER		':'
#define C_FRAME_CHANGE	'-'
#define C_FRAME_CODE	'*'
#define C_HOLD		','
#define C_PLAY		'$'
#define C_PROGRAM	')'
#define C_RECORD	'\''
#define C_REGISTER	'('
#define C_REPLACE	'/'
#define C_STOP		' '
#define C_SEARCH	'?'
#define C_RESET_TAPETIME '<'

/* There seems to be at least 2 version of the microcode in the VAS IV */
#ifdef USNA
#define C_FFORWARD	'!'
#define C_PAUSE		'"'
#define C_REWIND	'#'
#else
/* BRL version can not do these operations */
#define C_FFORWARD	C_STOP
#define C_PAUSE		C_STOP
#define C_REWIND	C_STOP
#endif

#define C_INIT		'I'
#define C_NO		'0'
#define C_ACTIVITY	'A'
#define C_SEND_TAPE_POS	'B'
#define C_SEND_FRAME_CODE 'C'
#define C_VTR_STATUS	'V'

/* Result codes */
#define R_INIT		'I'
#define R_PROGRAM	'P'
#define R_SEARCH	'S'
#define R_RECORD	'R'
#define R_DONE		'D'
#define R_MISSED	'M'
#define R_CUT_IN	'X'
#define R_CUT_OUT	'Y'

#define TRUE 1
#define FALSE 0

extern void	vas_open(void);
extern int	get_vas_status(void);
extern int	vas_putc(char c);
extern int	vas_await(int c, int sec);
extern int	get_vtr_status(int chatter);
extern int	get_frame_code(void);
extern int	str2frames(char *str);
extern void	record_seq(int number_of_images, int number_of_frames, int start_seq_number);
extern int	search_frame(int frame);
extern int	time0(void);
extern int	reset_tape_time(void);
extern void	vas_close(void);
extern void	vas_putnum(int n);
extern int	vas_getc(void);
extern void	vas_response(char c);
extern int	vas_rawputc(char c);
@


11.5
log
@merge of ansi-6-0-branch into head
@
text
@d22 1
a22 1
 *  $Header$
@


11.4
log
@Restoration of entire source tree to Pre-Hartley state
@
text
@d22 1
a22 1
 *  $Header: /c/CVS/brlcad/vas4/vas4.h,v 11.2 2001/08/10 18:36:57 jra Exp $
d74 16
a89 16
extern void	vas_open();
extern int	get_vas_status();
extern int	vas_putc();
extern int	vas_await();
extern int	get_vtr_status();
extern int	get_frame_code();
extern int	str2frames();
extern void	record_seq();
extern int	search_frame();
extern int	time0();
extern int	reset_tape_time();
extern void	vas_close();
extern void	vas_putnum();
extern int	vas_getc();
extern void	vas_response();
extern int	vas_rawputc();
@


11.4.2.1
log
@Initial ANSIfication
@
text
@d22 1
a22 1
 *  $Header: /c/CVS/brlcad/vas4/vas4.h,v 11.4 2002/08/20 17:09:12 jra Exp $
d74 16
a89 16
extern void	vas_open(void);
extern int	get_vas_status(void);
extern int	vas_putc(char c);
extern int	vas_await(int c, int sec);
extern int	get_vtr_status(int chatter);
extern int	get_frame_code(void);
extern int	str2frames(char *str);
extern void	record_seq(int number_of_images, int number_of_frames, int start_seq_number);
extern int	search_frame(int frame);
extern int	time0(void);
extern int	reset_tape_time(void);
extern void	vas_close(void);
extern void	vas_putnum(int n);
extern int	vas_getc(void);
extern void	vas_response(char c);
extern int	vas_rawputc(char c);
@


11.3
log
@Converted from K&R to ANSI C - RFH
@
text
@d74 16
a89 16
extern void	vas_open(void);
extern int	get_vas_status(void);
extern int	vas_putc(char c);
extern int	vas_await(int c, int sec);
extern int	get_vtr_status(int chatter);
extern int	get_frame_code(void);
extern int	str2frames(char *str);
extern void	record_seq(int number_of_images, int number_of_frames, int start_seq_number);
extern int	search_frame(int frame);
extern int	time0(void);
extern int	reset_tape_time(void);
extern void	vas_close(void);
extern void	vas_putnum(int n);
extern int	vas_getc(void);
extern void	vas_response(char c);
extern int	vas_rawputc(char c);
@


11.2
log
@lint
@
text
@d22 1
a22 1
 *  $Header: /c/CVS/brlcad/vas4/vas4.h,v 11.1 1995/01/04 10:18:28 mike Rel4_4 $
d74 16
a89 16
extern void	vas_open();
extern int	get_vas_status();
extern int	vas_putc();
extern int	vas_await();
extern int	get_vtr_status();
extern int	get_frame_code();
extern int	str2frames();
extern void	record_seq();
extern int	search_frame();
extern int	time0();
extern int	reset_tape_time();
extern void	vas_close();
extern void	vas_putnum();
extern int	vas_getc();
extern void	vas_response();
extern int	vas_rawputc();
@


11.1
log
@Release_4.4
@
text
@d22 1
a22 1
 *  $Header: /m/cad/vas4/RCS/vas4.h,v 10.1 91/10/12 06:50:26 mike Rel4_0 $
d73 17
@


10.1
log
@Release_4.0
@
text
@d22 1
a22 1
 *  $Header: vas4.h,v 9.1 89/05/19 06:13:53 mike Rel3_5 $
@


9.1
log
@Release_3.5
@
text
@d22 1
a22 1
 *  $Header: vas4.h,v 8.1 88/10/05 00:52:44 mike Rel3_0 $
@


8.1
log
@Release_3.0
@
text
@d22 1
a22 1
 *  $Header: vas4.h,v 1.4 88/01/09 03:50:25 mike Exp $
@


1.4
log
@More defines
@
text
@d22 1
a22 1
 *  $Header: pkg.h,v 7.1 87/11/02 23:22:36 mike Rel $
@


1.3
log
@Added several more commands
@
text
@d1 23
a23 1
/* Constants used with VAS IV */
a24 4
/* Use 'C_' prefix for commands */
/* Use 'R_' prefix for result codes */


d42 1
d48 1
a48 1
/* BRL version */
d66 1
a66 1
#define R_DOWN		'D'
d68 2
a69 1

@


1.2
log
@Updated for use at BRL
@
text
@d21 2
d38 2
@


1.1
log
@Initial revision
@
text
@a11 1
#define C_FFORWARD	'!'
a14 1
#define C_PAUSE		'"'
a19 1
#define C_REWIND	'#'
d22 11
d36 1
@
