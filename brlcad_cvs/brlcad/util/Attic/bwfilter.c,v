head	11.11;
access;
symbols
	ansi-20040405-merged:11.7.2.2
	postmerge-20040405-ansi:11.9
	premerge-20040404-ansi:11.8
	postmerge-autoconf:11.8
	autoconf-freeze:11.7.10.2
	premerge-autoconf:11.8
	postmerge-20040315-windows:11.8
	premerge-20040315-windows:11.8
	windows-20040315-freeze:11.7.4.1
	autoconf-20031203:11.7
	autoconf-20031202:11.7
	autoconf-branch:11.7.0.10
	phong-branch:11.7.0.8
	photonmap-branch:11.7.0.6
	rel-6-1-DP:11.7
	windows-branch:11.7.0.4
	rel-6-0-2:11.5
	ansi-branch:11.7.0.2
	rel-6-0-1-branch:11.5.0.2
	hartley-6-0-post:11.6
	hartley-6-0-pre:11.5
	rel-6-0-1:11.5
	rel-6-0:11.5
	rel-5-4:11.1
	offsite-5-3-pre:11.3
	rel-5-3:11.1
	rel-5-2:11.1
	rel-5-1-branch:11.1.0.2
	rel-5-1:11.1
	rel-5-0:11.1
	rel-5-0-beta:11.1
	rel-4-5:11.1
	ctj-4-5-post:11.1
	ctj-4-5-pre:11.1
	rel-4-4:11.1
	rel-4-0:10.1
	rel-3-5:9.1
	rel-3-0:8.1
	rel-2-3:7.1
	rel-2-0:6.1
	rel-1-24:5.1
	rel-1-20:4.2
	rel-1-10:4.1;
locks; strict;
comment	@ * @;


11.11
date	2004.05.21.14.57.35;	author morrison;	state dead;
branches;
next	11.10;

11.10
date	2004.05.10.15.30.50;	author erikg;	state Exp;
branches;
next	11.9;

11.9
date	2004.04.05.05.46.01;	author morrison;	state Exp;
branches;
next	11.8;

11.8
date	2004.02.02.17.39.45;	author morrison;	state Exp;
branches;
next	11.7;

11.7
date	2002.08.20.17.08.55;	author jra;	state Exp;
branches
	11.7.2.1
	11.7.4.1
	11.7.10.1;
next	11.6;

11.6
date	2002.08.15.20.56.08;	author hartley;	state Exp;
branches;
next	11.5;

11.5
date	2001.08.10.20.57.05;	author butler;	state Exp;
branches;
next	11.4;

11.4
date	2001.08.07.20.57.01;	author butler;	state Exp;
branches;
next	11.3;

11.3
date	2000.09.01.03.23.45;	author mike;	state Exp;
branches;
next	11.2;

11.2
date	2000.08.23.19.04.23;	author mike;	state Exp;
branches;
next	11.1;

11.1
date	95.01.04.10.11.39;	author mike;	state Rel4_4;
branches;
next	10.2;

10.2
date	94.08.23.15.05.34;	author gdurf;	state Exp;
branches;
next	10.1;

10.1
date	91.10.12.06.47.54;	author mike;	state Rel4_0;
branches;
next	9.2;

9.2
date	91.06.14.13.27.46;	author mmark;	state Exp;
branches;
next	9.1;

9.1
date	89.05.19.06.07.38;	author mike;	state Rel3_5;
branches;
next	8.1;

8.1
date	88.10.05.00.40.25;	author mike;	state Rel3_0;
branches;
next	7.4;

7.4
date	88.05.16.00.19.08;	author mike;	state Exp;
branches;
next	7.3;

7.3
date	88.05.16.00.06.18;	author mike;	state Exp;
branches;
next	7.2;

7.2
date	88.01.29.22.52.12;	author phil;	state Exp;
branches;
next	7.1;

7.1
date	87.11.03.00.05.18;	author mike;	state Rel;
branches;
next	6.1;

6.1
date	87.07.11.08.08.50;	author mike;	state Rel;
branches;
next	5.1;

5.1
date	87.06.24.22.36.36;	author mike;	state Rel;
branches;
next	4.2;

4.2
date	87.02.13.00.38.29;	author mike;	state Exp;
branches;
next	4.1;

4.1
date	86.12.29.03.11.58;	author mike;	state Rel1;
branches;
next	1.5;

1.5
date	86.11.14.23.13.47;	author phil;	state Exp;
branches;
next	1.4;

1.4
date	86.10.30.22.28.37;	author phil;	state Exp;
branches;
next	1.3;

1.3
date	86.10.27.18.34.30;	author phil;	state Exp;
branches;
next	1.2;

1.2
date	86.10.03.08.11.46;	author mike;	state Exp;
branches;
next	1.1;

1.1
date	86.08.14.21.51.53;	author mike;	state Exp;
branches;
next	;

11.7.2.1
date	2002.09.19.18.02.35;	author morrison;	state Exp;
branches;
next	11.7.2.2;

11.7.2.2
date	2004.03.17.21.23.20;	author morrison;	state Exp;
branches;
next	;

11.7.4.1
date	2004.03.11.23.52.29;	author morrison;	state Exp;
branches;
next	;

11.7.10.1
date	2004.02.12.19.43.09;	author erikg;	state Exp;
branches;
next	11.7.10.2;

11.7.10.2
date	2004.03.15.14.08.11;	author erikg;	state Exp;
branches;
next	;


desc
@Apply various filters to a BW image
@


11.11
log
@moved to src/util/
@
text
@/*
 *		B W F I L T E R . C
 *
 *  Filters a black and white file with an arbitrary 3x3 kernel.
 *  Leaves the outer rows untouched.
 *  Allows an alternate divisor and offset to be given.
 *
 *  Author -
 *	Phillip Dykstra
 *	15 Aug 1985
 *  
 *  Source -
 *	SECAD/VLD Computing Consortium, Bldg 394
 *	The U. S. Army Ballistic Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5066
 *  
 *  Copyright Notice -
 *	This software is Copyright (C) 1986-2004 by the United States Army.
 *	All rights reserved.
 */
#ifndef lint
static const char RCSid[] = "@@(#)$Header: /n/xoff/cvs/brlcad/util/bwfilter.c,v 11.10 2004/05/10 15:30:50 erikg Exp $ (BRL)";
#endif

#ifdef HAVE_CONFIG_H
# include "config.h"
#endif



#include <stdio.h>
#ifdef HAVE_STRING_H
#include <string.h>
#else
#include <strings.h>
#endif

#include "machine.h"
#include "externs.h"			/* For getopt */

#define MAXLINE		(8*1024)
#define DEFAULT_WIDTH	512
unsigned char	line1[MAXLINE], line2[MAXLINE], line3[MAXLINE], obuf[MAXLINE];
unsigned char	*top, *middle, *bottom, *temp;

/* The filter kernels */
struct	kernels {
	char	*name;
	char	*uname;		/* What is needed to recognize it */
	int	kern[9];
	int	kerndiv;	/* Divisor for kernel */
	int	kernoffset;	/* To be added to result */
} kernel[] = {
	{ "Low Pass", "lo", {3, 5, 3, 5, 10, 5, 3, 5, 3}, 42, 0 },
	{ "Laplacian", "la", {-1, -1, -1, -1, 8, -1, -1, -1, -1}, 16, 128 },
	{ "High Pass", "hi", {-1, -2, -1, -2,13, -2, -1, -2, -1}, 1, 0 },
	{ "Horizontal Gradiant", "hg", {1, 0, -1, 1, 0, -1, 1, 0, -1}, 6, 128},
	{ "Vertical Gradient", "vg", {1, 1, 1, 0, 0, 0, -1, -1, -1}, 6, 128 },
	{ "Boxcar Average", "b", {1, 1, 1, 1, 1, 1, 1, 1, 1}, 9, 0 },
	{ NULL, NULL, {0, 0, 0, 0, 0, 0, 0, 0, 0}, 0, 0 },
};

int	*kern;
int	kerndiv;
int	kernoffset;
int	width = DEFAULT_WIDTH;
int	height = DEFAULT_WIDTH;
int	verbose = 0;
int	dflag = 0;	/* Different divisor specified */
int	oflag = 0;	/* Different offset specified */

char *file_name;
FILE *infp;

void	select_filter(char *str), dousage(void);

char	usage[] = "\
Usage: bwfilter [-f type] [-v] [-d div] [-o offset]\n\
        [-s squaresize] [-w width] [-n height] [file.bw] > file.bw\n";

int
get_args(int argc, register char **argv)
{
	register int c;

	while ( (c = getopt( argc, argv, "vf:d:o:w:n:s:" )) != EOF )  {
		switch( c )  {
		case 'v':
			verbose++;
			break;
		case 'f':
			select_filter(optarg);
			break;
		case 'd':
			dflag++;
			kerndiv = atoi(optarg);
			break;
		case 'o':
			oflag++;
			kernoffset = atoi(optarg);
			break;
		case 'w':
			width = atoi(optarg);
			break;
		case 'n':
			height = atoi(optarg);
			break;
		case 's':
			width = height = atoi(optarg);
			break;
		default:		/* '?' */
			return(0);
		}
	}

	if( optind >= argc )  {
		if( isatty(fileno(stdin)) )
			return(0);
		file_name = "-";
		infp = stdin;
	} else {
		file_name = argv[optind];
		if( (infp = fopen(file_name, "r")) == NULL )  {
			(void)fprintf( stderr,
				"bwfilter: cannot open \"%s\" for reading\n",
				file_name );
			return(0);
		}
	}

	if( isatty(fileno(stdout)) )
		return(0);

	if ( argc > ++optind )
		(void)fprintf( stderr, "bwfilter: excess argument(s) ignored\n" );

	return(1);		/* OK */
}

int
main(int argc, char **argv)
{
	int	x, y;
	int	value, r1, r2, r3;
	int	max, min;

	/* Select Default Filter (low pass) */
	select_filter( "low" );

	if ( !get_args( argc, argv ) )  {
		dousage();
		exit( 1 );
	}

	if( width > MAXLINE )  {
		fprintf(stderr, "bwfilter:  limited to scanlines of %d\n", MAXLINE);
		exit(1);
	}

	/*
	 * Read in bottom and middle lines.
	 * Write out bottom untouched.
	 */
	bottom = &line1[0];
	middle = &line2[0];
	top    = &line3[0];
	fread( bottom, sizeof( char ), width, infp );
	fread( middle, sizeof( char ), width, infp );
	fwrite( bottom, sizeof( char ), width, stdout );

	if(verbose) {
		for( x = 0; x < 11; x++ )
			fprintf(stderr, "kern[%d] = %d\n", x, kern[x]);
	}

	max = 0;
	min = 255;

	for( y = 1; y < height-1; y++ ) {
		/* read in top line */
		fread( top, sizeof( char ), width, infp );
		obuf[0] = middle[0];
		/* Filter a line */
		for( x = 1; x < width-1; x++ ) {
			r1 = top[x-1] * kern[0] + top[x] * kern[1] + top[x+1] * kern[2];
			r2 = middle[x-1] * kern[3] + middle[x] * kern[4] + middle[x+1] * kern[5];
			r3 = bottom[x-1] * kern[6] + bottom[x] * kern[7] + bottom[x+1] * kern[8];
			value = (r1+r2+r3) / kerndiv + kernoffset;
			if( value > max ) max = value;
			if( value < min ) min = value;
			if( verbose && (value > 255 || value < 0) ) {
				fprintf(stderr,"Value %d\n", value);
				fprintf(stderr,"r1=%d, r2=%d, r3=%d\n", r1, r2, r3);
			}
			if( value < 0 )
				obuf[x] = 0;
			else if( value > 255 )
				obuf[x] = 255;
			else
				obuf[x] = value;
		}
		obuf[width-1] = middle[width-1];
		fwrite( obuf, sizeof( char ), width, stdout );
		/* Adjust row pointers */
		temp = bottom;
		bottom = middle;
		middle = top;
		top = temp;
	}
	/* write out last line untouched */
	fwrite( top, sizeof( char ), width, stdout );

	/* Give advise on scaling factors */
	if( verbose )
		fprintf( stderr, "Max = %d,  Min = %d\n", max, min );

	exit( 0 );
}

/*
 *	S E L E C T _ F I L T E R
 *
 *  Looks at the command line string and selects a filter
 *  based on it.
 */
void
select_filter(char *str)
{
	int	i;

	i = 0;
	while( kernel[i].name != NULL ) {
		if( strncmp( str, kernel[i].uname, strlen( kernel[i].uname ) ) == 0 )
			break;
		i++;
	}

	if( kernel[i].name == NULL ) {
		/* No match, output list and exit */
		fprintf( stderr, "Unrecognized filter type \"%s\"\n", str );
		dousage();
		exit( 3 );
	}

	/* Have a match, set up that kernel */
	kern = &kernel[i].kern[0];
	if( dflag == 0 )
		kerndiv = kernel[i].kerndiv;
	if( oflag == 0 )
		kernoffset = kernel[i].kernoffset;
}

void
dousage(void)
{
	int	i;

	fputs( usage, stderr );
	i = 0;
	while( kernel[i].name != NULL ) {
		fprintf( stderr, "%-10s%s\n", kernel[i].uname, kernel[i].name );
		i++;
	}
}
@


11.10
log
@change conf.h to a wrapped config.h
@
text
@d22 1
a22 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/util/bwfilter.c,v 11.9 2004/04/05 05:46:01 morrison Exp $ (BRL)";
@


11.9
log
@merge of ansi-6-0-branch into head
@
text
@d22 1
a22 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
d25 5
a29 1
#include "conf.h"
@


11.8
log
@update copyright to include span through 2003
@
text
@d22 1
a22 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/bwfilter.c,v 11.7 2002/08/20 17:08:55 jra Exp $ (BRL)";
d71 1
a71 1
void	select_filter(), dousage();
d78 1
a78 2
get_args( argc, argv )
register char **argv;
d137 1
a137 2
main( argc, argv )
int argc; char **argv;
d223 1
a223 2
select_filter( str )
char *str;
d250 1
a250 1
dousage()
@


11.7
log
@Restoration of entire source tree to Pre-Hartley state
@
text
@d18 1
a18 1
 *	This software is Copyright (C) 1986 by the United States Army.
d22 1
a22 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/bwfilter.c,v 11.5 2001/08/10 20:57:05 butler Exp $ (BRL)";
@


11.7.4.1
log
@sync to HEAD...
@
text
@d18 1
a18 1
 *	This software is Copyright (C) 1986-2004 by the United States Army.
d22 1
a22 1
static const char RCSid[] = "@@(#)$Header: /n/cad/c/CVS/brlcad/util/bwfilter.c,v 11.8 2004/02/02 17:39:45 morrison Exp $ (BRL)";
@


11.7.10.1
log
@merge from HEAD
@
text
@d18 1
a18 1
 *	This software is Copyright (C) 1986-2004 by the United States Army.
d22 1
a22 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/bwfilter.c,v 11.8 2004/02/02 17:39:45 morrison Exp $ (BRL)";
@


11.7.10.2
log
@merge from head
@
text
@d22 1
a22 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/bwfilter.c,v 11.7.10.1 2004/02/12 19:43:09 erikg Exp $ (BRL)";
@


11.7.2.1
log
@Initial ANSIfication
@
text
@d22 1
a22 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/bwfilter.c,v 11.7 2002/08/20 17:08:55 jra Exp $ (BRL)";
d71 1
a71 1
void	select_filter(char *str), dousage(void);
d78 2
a79 1
get_args(int argc, register char **argv)
d138 2
a139 1
main(int argc, char **argv)
d225 2
a226 1
select_filter(char *str)
d253 1
a253 1
dousage(void)
@


11.7.2.2
log
@sync branch with HEAD
@
text
@d18 1
a18 1
 *	This software is Copyright (C) 1986-2004 by the United States Army.
d22 1
a22 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
@


11.6
log
@Converted from K&R to ANSI C - RFH
@
text
@d71 1
a71 1
void	select_filter(char *str), dousage(void);
d78 2
a79 1
get_args(int argc, register char **argv)
d138 2
a139 1
main(int argc, char **argv)
d225 2
a226 1
select_filter(char *str)
d253 1
a253 1
dousage(void)
@


11.5
log
@Misc compiler warnings eliminated
@
text
@d22 1
a22 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/bwfilter.c,v 11.4 2001/08/07 20:57:01 butler Exp $ (BRL)";
d71 1
a71 1
void	select_filter(), dousage();
d78 1
a78 2
get_args( argc, argv )
register char **argv;
d137 1
a137 2
main( argc, argv )
int argc; char **argv;
d223 1
a223 2
select_filter( str )
char *str;
d250 1
a250 1
dousage()
@


11.4
log
@misc compiler warnings
@
text
@d22 1
a22 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/bwfilter.c,v 11.3 2000/09/01 03:23:45 mike Exp $ (BRL)";
d28 1
a28 1
#ifdef USE_STRING_H
@


11.3
log
@
Lint fix
@
text
@d22 1
a22 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/bwfilter.c,v 11.2 2000/08/23 19:04:23 mike Exp $ (BRL)";
d50 7
a56 7
	{ "Low Pass", "lo", 3, 5, 3, 5, 10, 5, 3, 5, 3, 42, 0 },
	{ "Laplacian", "la", -1, -1, -1, -1, 8, -1, -1, -1, -1, 16, 128 },
	{ "High Pass", "hi", -1, -2, -1, -2,13, -2, -1, -2, -1, 1, 0 },
	{ "Horizontal Gradiant", "hg", 1, 0, -1, 1, 0, -1, 1, 0, -1, 6, 128 },
	{ "Vertical Gradient", "vg", 1, 1, 1, 0, 0, 0, -1, -1, -1, 6, 128 },
	{ "Boxcar Average", "b", 1, 1, 1, 1, 1, 1, 1, 1, 1, 9, 0 },
	{ NULL, NULL, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
@


11.2
log
@
const RCSid
@
text
@d22 1
a22 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/bwfilter.c,v 11.1 1995/01/04 10:11:39 mike Rel4_4 $ (BRL)";
d77 1
d137 1
@


11.1
log
@Release_4.4
@
text
@d22 1
a22 1
static char RCSid[] = "@@(#)$Header: /m/cad/util/RCS/bwfilter.c,v 10.2 94/08/23 15:05:34 gdurf Exp $ (BRL)";
@


10.2
log
@Factored ifdefs
@
text
@d22 1
a22 1
static char RCSid[] = "@@(#)$Header: /m/cad/util/RCS/bwfilter.c,v 10.1 1991/10/12 06:47:54 mike Rel4_0 gdurf $ (BRL)";
@


10.1
log
@Release_4.0
@
text
@d22 1
a22 1
static char RCSid[] = "@@(#)$Header: /m/cad/util/RCS/bwfilter.c,v 9.2 91/06/14 13:27:46 mmark Exp $ (BRL)";
d25 2
d28 4
a31 6

#ifdef BSD
#include	<strings.h>
#endif
#ifdef SYSV
#include	<string.h>
d34 2
a35 3
extern int	getopt();
extern char	*optarg;
extern int	optind;
@


9.2
log
@fixed usage msg
@
text
@d22 1
a22 1
static char RCSid[] = "@@(#)$Header: /m/cad/util/RCS/bwfilter.c,v 9.1 89/05/19 06:07:38 mike Rel3_5 $ (BRL)";
@


9.1
log
@Release_3.5
@
text
@d22 1
a22 1
static char RCSid[] = "@@(#)$Header: bwfilter.c,v 8.1 88/10/05 00:40:25 mike Rel3_0 $ (BRL)";
d75 1
a75 1
Usage: bwfilter [-f<type>] [-v] [-d#] [-o#]\n\
@


8.1
log
@Release_3.0
@
text
@d22 1
a22 1
static char RCSid[] = "@@(#)$Header: bwfilter.c,v 7.4 88/05/16 00:19:08 mike Exp $ (BRL)";
@


7.4
log
@more lint fixes
@
text
@d22 1
a22 1
static char RCSid[] = "@@(#)$Header: bwfilter.c,v 7.3 88/05/16 00:06:18 mike Locked $ (BRL)";
@


7.3
log
@lint fixes
@
text
@d22 1
a22 1
static char RCSid[] = "@@(#)$Header: bwfilter.c,v 7.2 88/01/29 22:52:12 mike Locked $ (BRL)";
d72 1
a72 1
void	select_filter();
d251 1
@


7.2
log
@added hi pass filter
-n and -s flags
@
text
@d22 1
a22 1
static char RCSid[] = "@@(#)$Header: bwfilter.c,v 7.1 87/11/03 00:05:18 phil Locked $ (BRL)";
d72 2
d223 1
@


7.1
log
@Release 2.3
@
text
@d4 1
a4 1
 * Filters a black and white file with an arbitrary 3x3 kernel.
d6 1
a6 1
 *  Allows an alternate devisor and offset to be given.
d22 1
a22 1
static char RCSid[] = "@@(#)$Header: bwfilter.c,v 6.1 87/07/11 08:08:50 mike Rel $ (BRL)";
d53 1
a53 1
/*	{ "High Pass", "hi", 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0 },*/
d64 1
d73 2
a74 2
Usage: bwfilter [-f<type>] [-v] [-d#] [-o#] [-w width]\n\
                [file.bw] > file.bw\n";
d81 1
a81 1
	while ( (c = getopt( argc, argv, "vf:d:o:w:" )) != EOF )  {
d100 6
a105 1

d174 1
a174 1
	for( y = 1; y < width-1; y++ ) {
d218 2
a219 2
 * Looks at the command line string and selects a filter based
 *  on it.
@


6.1
log
@Release 2.0
@
text
@d22 1
a22 1
static char RCSid[] = "@@(#)$Header: bwfilter.c,v 5.1 87/06/24 22:36:36 mike Rel $ (BRL)";
@


5.1
log
@Release 1.24
@
text
@d22 1
a22 1
static char RCSid[] = "@@(#)$Header: bwfilter.c,v 4.2 87/02/13 00:38:29 mike Exp $ (BRL)";
@


4.2
log
@Release 1.20 -- First Formal Release
@
text
@d22 1
a22 1
static char RCSid[] = "@@(#)$Header: bwfilter.c,v 4.1 86/12/29 03:11:58 mike Rel1 $ (BRL)";
@


4.1
log
@BRL CAD Distribution Release 1.10
@
text
@d22 1
a22 1
static char RCSid[] = "@@(#)$Header: bwfilter.c,v 1.5 86/11/14 23:13:47 phil Exp $ (BRL)";
@


1.5
log
@arg convention
@
text
@d22 1
a22 1
static char RCSid[] = "@@(#)$Header: bwfilter.c,v 1.4 86/10/30 22:28:37 phil Locked $ (BRL)";
@


1.4
log
@return 1
@
text
@d22 1
a22 1
static char RCSid[] = "@@(#)$Header: bwfilter.c,v 1.3 86/10/27 18:34:30 phil Locked $ (BRL)";
d72 1
a72 1
Usage: bwfilter [-f<type>] [-v] [-d#] [-o#] [-W width]\n\
d80 1
a80 1
	while ( (c = getopt( argc, argv, "vf:d:o:W:" )) != EOF )  {
d96 1
a96 1
		case 'W':
@


1.3
log
@getopt'd it.  Increased max scanline length.
@
text
@d22 1
a22 1
static char RCSid[] = "@@(#)$Header: bwfilter.c,v 1.2 86/10/03 08:11:46 phil Locked $ (BRL)";
d141 1
a141 1
		return 1;
d205 2
@


1.2
log
@argc bug
@
text
@d22 1
a22 1
static char RCSid[] = "@@(#)$Header: bwfilter.c,v 1.1 86/08/14 21:51:53 mike Exp $ (BRL)";
d34 7
a40 2
int	size;
unsigned char	line1[512], line2[512], line3[512], obuf[512];
d53 3
a55 3
	{ "High Pass", "hi", 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0 },
	{ "Horizontal Gradiant", "ho", 1, 0, -1, 1, 0, -1, 1, 0, -1, 6, 128 },
	{ "Vertical Gradient", "v", 1, 1, 1, 0, 0, 0, -1, -1, -1, 6, 128 },
d63 1
d68 2
a69 1
char	*Usage = "usage: bwfilter [-f <type>] [-v] [-d#] [-o#] [size] < file.bw\n";
d71 6
a76 2
main( argc, argv )
int argc; char **argv;
d78 1
a78 3
	int	x, y;
	int	value, r1, r2, r3;
	int	max, min;
d80 2
a81 15
	if( isatty(fileno(stdin)) ) {
		usage();
		exit( 1 );
	}

	/* Select Default Filter (low pass) */
	select_filter( "low" );

	while( argc > 1 && argv[1][0] == '-' )  {
		switch( argv[1][1] )  {
		case 'f':
			select_filter( argv[2] );
			argc--;
			argv++;
			break;
d85 3
d90 1
a90 1
			kerndiv = atoi( &argv[1][2] );
d94 1
a94 1
			kernoffset = atoi( &argv[1][2] );
d96 6
a101 3
		default:
			usage();
			exit( 2 );
a102 2
		argc--;
		argv++;
d105 14
a118 1
	size = (argc == 2) ? atoi( argv[1] ) : 512;
d120 29
d156 3
a158 3
	fread( bottom, sizeof( char ), size, stdin );
	fread( middle, sizeof( char ), size, stdin );
	fwrite( bottom, sizeof( char ), size, stdout );
d168 1
a168 1
	for( y = 1; y < size-1; y++ ) {
d170 1
a170 1
		fread( top, sizeof( char ), size, stdin );
d173 1
a173 1
		for( x = 1; x < size-1; x++ ) {
d191 2
a192 2
		obuf[size-1] = middle[size-1];
		fwrite( obuf, sizeof( char ), size, stdout );
d200 1
a200 1
	fwrite( top, sizeof( char ), size, stdout );
d228 1
a228 1
		usage();
d240 1
a240 1
usage()
d244 1
a244 1
	fputs( Usage, stderr );
@


1.1
log
@Initial revision
@
text
@d22 1
a22 1
static char RCSid[] = "@@(#)$Header$ (BRL)";
d79 1
a79 1
	while( argv[1][0] == '-' )  {
@
