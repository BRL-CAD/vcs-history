head	11.7;
access;
symbols
	ansi-20040405-merged:11.4.2.1
	postmerge-20040405-ansi:11.5
	premerge-20040404-ansi:11.4
	postmerge-autoconf:11.4
	autoconf-freeze:11.4
	premerge-autoconf:11.4
	postmerge-20040315-windows:11.4
	premerge-20040315-windows:11.4
	windows-20040315-freeze:11.4
	autoconf-20031203:11.4
	autoconf-20031202:11.4
	autoconf-branch:11.4.0.10
	phong-branch:11.4.0.8
	photonmap-branch:11.4.0.6
	rel-6-1-DP:11.4
	windows-branch:11.4.0.4
	rel-6-0-2:11.2
	ansi-branch:11.4.0.2
	rel-6-0-1-branch:11.2.0.2
	hartley-6-0-post:11.3
	hartley-6-0-pre:11.2
	rel-6-0-1:11.2
	rel-6-0:11.2
	rel-5-4:11.1
	offsite-5-3-pre:11.1
	rel-5-3:11.1
	rel-5-2:11.1
	rel-5-1-branch:11.1.0.2
	rel-5-1:11.1
	rel-5-0:11.1
	rel-5-0-beta:11.1
	rel-4-5:11.1
	ctj-4-5-post:11.1
	ctj-4-5-pre:11.1
	rel-4-4:11.1;
locks; strict;
comment	@ * @;


11.7
date	2004.05.21.14.57.52;	author morrison;	state dead;
branches;
next	11.6;

11.6
date	2004.05.10.15.30.50;	author erikg;	state Exp;
branches;
next	11.5;

11.5
date	2004.04.05.05.46.02;	author morrison;	state Exp;
branches;
next	11.4;

11.4
date	2002.08.20.17.09.02;	author jra;	state Exp;
branches
	11.4.2.1;
next	11.3;

11.3
date	2002.08.15.20.56.13;	author hartley;	state Exp;
branches;
next	11.2;

11.2
date	2001.08.10.20.57.07;	author butler;	state Exp;
branches;
next	11.1;

11.1
date	95.01.04.10.12.38;	author mike;	state Rel4_4;
branches;
next	1.3;

1.3
date	94.08.23.15.05.54;	author gdurf;	state Exp;
branches;
next	1.2;

1.2
date	94.08.11.19.45.52;	author gdurf;	state Exp;
branches;
next	1.1;

1.1
date	93.09.25.08.09.17;	author mike;	state Exp;
branches;
next	;

11.4.2.1
date	2002.09.19.18.02.41;	author morrison;	state Exp;
branches;
next	;


desc
@When a pixel is one value, substitute the other.
Used for flipping light and dark backgrounds for video/print.
@


11.7
log
@moved to src/util/
@
text
@/*	P I X E L S W A P -- interchange pixel values in an image
 *	Options
 *	h	help
 */
#ifdef HAVE_CONFIG_H
# include "config.h"
#endif



#include <stdio.h>
#ifdef HAVE_STRING_H
#include <string.h>
#else
#include <strings.h>
#endif

#include "machine.h"
#include "externs.h"		/* For getopt() */
#include "fb.h"

char *options = "hd:";
char *progname = "(noname)";

int depth = 3;
unsigned char ibuf[32767 * 3];
unsigned char obuf[32767 * 3];
#define RGBCMP(a, b) ((a) == (b)[0] && \
		      (a)[1] == (b)[1] && \
		      (a)[2] == (b)[2])

/*
 *	U S A G E --- tell user how to invoke this program, then exit
 */
void usage(char *s)
{
	if (s) (void)fputs(s, stderr);

	(void) fprintf(stderr, "Usage: %s [ -%s ] r g b R G B [ < infile > outfile]\n",
			progname, options);
	exit(1);
}

/*
 *	P A R S E _ A R G S --- Parse through command line flags
 */
int parse_args(int ac, char **av)
{
	int  c;

	if (  ! (progname=strrchr(*av, '/'))  )
		progname = *av;
	else
		++progname;

	/* Turn off getopt's error messages */
	opterr = 0;

	/* get all the option flags from the command line */
	while ((c=getopt(ac,av,options)) != EOF)
		switch (c) {
		case 'd'	: if ((c=atoi(optarg)) > 0 )
					depth = c;
				   else
				   	fprintf(stderr, "bad # of bytes per pixel (%d)\n", c);
				break;
		case '?'	:
		case 'h'	:
		default		: usage("Bad or help flag specified\n"); break;
		}

	return(optind);
}
/*
 *	M A I N
 *
 *	Call parse_args to handle command line arguments first, then
 *	process input.
 */
int main(int ac, char **av)
{
	int i, pixels;
	unsigned char r, g, b, R, G, B;

	if ((i=parse_args(ac, av))+6 > ac)
		usage("missing pixel value(s)\n");

	if (isatty(fileno(stdout)) || isatty(fileno(stdin)))
		usage("Redirect standard output\n");

	/* get pixel values */
	r = atoi(av[i++]);
	g = atoi(av[i++]);
	b = atoi(av[i++]);

	R = atoi(av[i++]);
	G = atoi(av[i++]);
	B = atoi(av[i]);

	/* process stdin */
	while ((pixels = fread(ibuf, 3, sizeof(ibuf)/3, stdin)) > 0) {
		for (i = 0 ; i < pixels ; i++ ) {
			if (ibuf[i*3] == r &&
			    ibuf[i*3+1] == g &&
			    ibuf[i*3+2] == b) {
				obuf[i*3] = R;
				obuf[i*3+1] = G;
				obuf[i*3+2] = B;
			} else if (ibuf[i*3] == R &&
			    ibuf[i*3+1] == G &&
			    ibuf[i*3+2] == B) {
				obuf[i*3] = r;
				obuf[i*3+1] = g;
				obuf[i*3+2] = b;
			} else {
				obuf[i*3] = ibuf[i*3];
				obuf[i*3+1] = ibuf[i*3+1];
				obuf[i*3+2] = ibuf[i*3+2];
			}
		}

		fwrite(obuf, 3, pixels, stdout);
	}
	return(0);
}
@


11.6
log
@change conf.h to a wrapped config.h
@
text
@@


11.5
log
@merge of ansi-6-0-branch into head
@
text
@d5 5
a9 1
#include "conf.h"
@


11.4
log
@Restoration of entire source tree to Pre-Hartley state
@
text
@d31 1
a31 2
void usage(s)
char *s;
d43 1
a43 3
int parse_args(ac, av)
int ac;
char *av[];
d76 1
a76 3
int main(ac,av)
int ac;
char *av[];
@


11.4.2.1
log
@Initial ANSIfication
@
text
@d31 2
a32 1
void usage(char *s)
d44 3
a46 1
int parse_args(int ac, char **av)
d79 3
a81 1
int main(int ac, char **av)
@


11.3
log
@Converted from K&R to ANSI C - RFH
@
text
@d31 2
a32 1
void usage(char *s)
d44 3
a46 1
int parse_args(int ac, char **av)
d79 3
a81 1
int main(int ac, char **av)
@


11.2
log
@Misc compiler warnings eliminated
@
text
@d31 1
a31 2
void usage(s)
char *s;
d43 1
a43 3
int parse_args(ac, av)
int ac;
char *av[];
d76 1
a76 3
int main(ac,av)
int ac;
char *av[];
@


11.1
log
@Release_4.4
@
text
@d8 1
a8 1
#ifdef USE_STRING_H
@


1.3
log
@Factored ifdefs
@
text
@@


1.2
log
@Added inclueds
@
text
@d8 6
@


1.1
log
@Initial revision
@
text
@d5 2
d8 2
a11 1
/* declarations to support use of getopt() system call */
d13 1
a13 2
extern char *optarg;
extern int optind, opterr, getopt();
a14 1
char *progname = "(noname)";
a42 1
	char *strrchr();
@
