head	11.11;
access;
symbols
	ansi-20040405-merged:11.7.2.2
	postmerge-20040405-ansi:11.9
	premerge-20040404-ansi:11.8
	postmerge-autoconf:11.8
	autoconf-freeze:11.7.10.2
	premerge-autoconf:11.8
	postmerge-20040315-windows:11.8
	premerge-20040315-windows:11.8
	windows-20040315-freeze:11.7.4.1
	autoconf-20031203:11.7
	autoconf-20031202:11.7
	autoconf-branch:11.7.0.10
	phong-branch:11.7.0.8
	photonmap-branch:11.7.0.6
	rel-6-1-DP:11.7
	windows-branch:11.7.0.4
	rel-6-0-2:11.5
	ansi-branch:11.7.0.2
	rel-6-0-1-branch:11.5.0.2
	hartley-6-0-post:11.6
	hartley-6-0-pre:11.5
	rel-6-0-1:11.5
	rel-6-0:11.5
	rel-5-4:11.2
	offsite-5-3-pre:11.4
	rel-5-3:11.2
	rel-5-2:11.2
	rel-5-1-branch:11.2.0.2
	rel-5-1:11.2
	rel-5-0:11.1
	rel-5-0-beta:11.1
	rel-4-5:11.1
	ctj-4-5-post:11.1
	ctj-4-5-pre:11.1
	rel-4-4:11.1
	rel-4-0:10.1
	rel-3-5:9.1
	rel-3-0:8.1
	rel-2-3:7.1
	rel-2-0:6.1
	rel-1-24:5.1
	rel-1-20:4.4
	rel-1-10:4.1;
locks; strict;
comment	@ * @;


11.11
date	2004.05.21.14.57.40;	author morrison;	state dead;
branches;
next	11.10;

11.10
date	2004.05.10.15.30.50;	author erikg;	state Exp;
branches;
next	11.9;

11.9
date	2004.04.05.05.46.01;	author morrison;	state Exp;
branches;
next	11.8;

11.8
date	2004.02.02.17.39.45;	author morrison;	state Exp;
branches;
next	11.7;

11.7
date	2002.08.20.17.08.58;	author jra;	state Exp;
branches
	11.7.2.1
	11.7.4.1
	11.7.10.1;
next	11.6;

11.6
date	2002.08.15.20.56.10;	author hartley;	state Exp;
branches;
next	11.5;

11.5
date	2001.08.08.03.28.15;	author butler;	state Exp;
branches;
next	11.4;

11.4
date	2000.09.01.03.23.48;	author mike;	state Exp;
branches;
next	11.3;

11.3
date	2000.08.23.19.04.31;	author mike;	state Exp;
branches;
next	11.2;

11.2
date	2000.01.31.16.03.08;	author jra;	state Exp;
branches;
next	11.1;

11.1
date	95.01.04.10.12.01;	author mike;	state Rel4_4;
branches;
next	10.2;

10.2
date	94.08.23.15.05.39;	author gdurf;	state Exp;
branches;
next	10.1;

10.1
date	91.10.12.06.48.11;	author mike;	state Rel4_0;
branches;
next	9.2;

9.2
date	90.11.24.01.23.07;	author mike;	state Exp;
branches;
next	9.1;

9.1
date	89.05.19.06.08.13;	author mike;	state Rel3_5;
branches;
next	8.1;

8.1
date	88.10.05.00.40.56;	author mike;	state Rel3_0;
branches;
next	7.4;

7.4
date	88.05.21.10.58.24;	author mike;	state Exp;
branches;
next	7.3;

7.3
date	88.05.17.03.31.46;	author mike;	state Exp;
branches;
next	7.2;

7.2
date	88.05.16.04.31.35;	author mike;	state Exp;
branches;
next	7.1;

7.1
date	87.11.03.00.06.23;	author mike;	state Rel;
branches;
next	6.1;

6.1
date	87.07.11.08.09.40;	author mike;	state Rel;
branches;
next	5.1;

5.1
date	87.06.24.22.37.33;	author mike;	state Rel;
branches;
next	4.5;

4.5
date	87.06.20.05.53.56;	author mike;	state Exp;
branches;
next	4.4;

4.4
date	87.02.13.00.39.48;	author mike;	state Exp;
branches;
next	4.3;

4.3
date	87.01.04.02.02.52;	author mike;	state Rel1;
branches;
next	4.2;

4.2
date	87.01.04.01.26.50;	author mike;	state Rel1;
branches;
next	4.1;

4.1
date	86.12.29.03.12.24;	author mike;	state Rel1;
branches;
next	1.3;

1.3
date	86.11.19.00.51.02;	author kermit;	state Exp;
branches;
next	1.2;

1.2
date	86.08.13.04.40.51;	author mike;	state Exp;
branches;
next	1.1;

1.1
date	86.06.16.22.24.39;	author mike;	state Exp;
branches;
next	;

11.7.2.1
date	2002.09.19.18.02.37;	author morrison;	state Exp;
branches;
next	11.7.2.2;

11.7.2.2
date	2004.03.17.21.23.24;	author morrison;	state Exp;
branches;
next	;

11.7.4.1
date	2004.03.11.23.52.30;	author morrison;	state Exp;
branches;
next	;

11.7.10.1
date	2004.02.12.19.43.09;	author erikg;	state Exp;
branches;
next	11.7.10.2;

11.7.10.2
date	2004.03.15.14.08.12;	author erikg;	state Exp;
branches;
next	;


desc
@Dunn Camera shutter control
@


11.11
log
@moved to src/util/
@
text
@/*
 *			D U N N S N A P . C
 *
 *	Checks status of the Dunn camera and exposes the number of frames
 *	of film specified in the argument (default is 1 frame).
 *
 *	dunnsnap [num_frames]
 *
 *  Author -
 *	Don Merritt
 *	August 1985
 *  
 *  Source -
 *	SECAD/VLD Computing Consortium, Bldg 394
 *	The U. S. Army Ballistic Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5066
 *  
 *  Copyright Notice -
 *	This software is Copyright (C) 1986-2004 by the United States Army.
 *	All rights reserved.
 */
#ifndef lint
static const char RCSid[] = "@@(#)$Header: /n/xoff/cvs/brlcad/util/dunnsnap.c,v 11.10 2004/05/10 15:30:50 erikg Exp $ (BRL)";
#endif

#ifdef HAVE_CONFIG_H
# include "config.h"
#endif



#include <stdio.h>

#include "machine.h"
#include "externs.h"			/* For getopt */
#include "fb.h"

/* Shared with dunncomm.c */
extern int	fd;
extern char	cmd;
extern void dunnopen(void);
extern int ready(int nsecs);
extern void getexposure(char *title);
extern int dunnsend(char color, int val);
extern int goodstatus(void);
extern void hangten(void);


static int	nframes = 1;
static char	*framebuffer;
static int	scr_width = 0;
static int	scr_height = 0;

static char usage[] = "\
Usage: dunnsnap [-h] [-F framebuffer]\n\
	[-{sS} squarescrsize] [-{wW} scr_width] [-{nN} scr_height]\n\
	[num_frames]\n";

int
get_args(int argc, register char **argv)
{
	register int c;

	while ( (c = getopt( argc, argv, "hF:s:S:w:W:n:N:" )) != EOF )  {
		switch( c )  {
		case 'h':
			/* high-res */
			scr_height = scr_width = 1024;
			break;
		case 'F':
			framebuffer = optarg;
			break;
		case 's':
		case 'S':
			scr_height = scr_width = atoi(optarg);
			break;
		case 'w':
		case 'W':
			scr_width = atoi(optarg);
			break;
		case 'n':
		case 'N':
			scr_height = atoi(optarg);
			break;

		default:		/* '?' */
			return(0);
		}
	}

	if( optind < argc )  {
		nframes = atoi( argv[optind] );
	}
	if ( argc > ++optind )
		(void)fprintf( stderr, "dunnsnap: excess argument(s) ignored\n" );

	return(1);		/* OK */
}

int
main(int argc, char **argv)
{
	register FBIO *fbp = FBIO_NULL;

	if ( !get_args( argc, argv ) )  {
		(void)fputs(usage, stderr);
		exit( 1 );
	}

	dunnopen();

	if( framebuffer != (char *)0 )  {
		if( (fbp = fb_open( framebuffer, scr_width, scr_height )) == FBIO_NULL )
			exit(12);
	}

	/* check argument */
	if( nframes < 0 )  {
		fprintf(stderr,"dunnsnap: negative frame count\n");
		goto bad;
	}
	if( nframes >= 10000 )
		fprintf(stderr,"dunnsnap: What a lot of film!\n");

	if (!ready(2)) {
		fprintf(stderr,"dunnsnap:  camera not ready at startup\n");
		goto bad;
	}
		
	/* loop until number of frames specified have been exposed */

	while (nframes>0) {

		if (!ready(20)) {
			fprintf(stderr,"dunnsnap: camera not ready at frame start\n");
			goto bad;
		}

		if (!goodstatus()) {
			fprintf(stderr,"dunnsnap: badstatus\n");
			goto bad;
		}
		
		/* send expose command to camera */
		cmd = 'I';	/* expose command */
		write(fd, &cmd, 1);
		hangten();

		/* Wait a long time here, because exposure can be lengthy */
		if (!ready(45)) {
			fprintf(stderr,"dunnsnap: camera not ready after expose cmd\n");
			goto bad;
		}
		--nframes;
	}
	if( fbp != FBIO_NULL )
		fb_close(fbp);
	exit(0);

bad:
	if( fbp != FBIO_NULL )
		fb_close(fbp);
	exit(1);
}
@


11.10
log
@change conf.h to a wrapped config.h
@
text
@d23 1
a23 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/util/dunnsnap.c,v 11.9 2004/04/05 05:46:01 morrison Exp $ (BRL)";
@


11.9
log
@merge of ansi-6-0-branch into head
@
text
@d23 1
a23 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
d26 5
a30 1
#include "conf.h"
@


11.8
log
@update copyright to include span through 2003
@
text
@d23 1
a23 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/dunnsnap.c,v 11.7 2002/08/20 17:08:58 jra Exp $ (BRL)";
d37 1
a37 1
extern void dunnopen();
d41 2
a42 2
extern int goodstatus();
extern void hangten();
d56 1
a56 2
get_args( argc, argv )
register char **argv;
d97 1
a97 3
main(argc, argv)
int argc;
char **argv;
@


11.7
log
@Restoration of entire source tree to Pre-Hartley state
@
text
@d19 1
a19 1
 *	This software is Copyright (C) 1986 by the United States Army.
d23 1
a23 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/dunnsnap.c,v 11.5 2001/08/08 03:28:15 butler Exp $ (BRL)";
@


11.7.4.1
log
@sync to HEAD...
@
text
@d19 1
a19 1
 *	This software is Copyright (C) 1986-2004 by the United States Army.
d23 1
a23 1
static const char RCSid[] = "@@(#)$Header: /n/cad/c/CVS/brlcad/util/dunnsnap.c,v 11.8 2004/02/02 17:39:45 morrison Exp $ (BRL)";
@


11.7.10.1
log
@merge from HEAD
@
text
@d19 1
a19 1
 *	This software is Copyright (C) 1986-2004 by the United States Army.
d23 1
a23 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/dunnsnap.c,v 11.8 2004/02/02 17:39:45 morrison Exp $ (BRL)";
@


11.7.10.2
log
@merge from head
@
text
@d23 1
a23 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/dunnsnap.c,v 11.7.10.1 2004/02/12 19:43:09 erikg Exp $ (BRL)";
@


11.7.2.1
log
@Initial ANSIfication
@
text
@d23 1
a23 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/dunnsnap.c,v 11.7 2002/08/20 17:08:58 jra Exp $ (BRL)";
d37 1
a37 1
extern void dunnopen(void);
d41 2
a42 2
extern int goodstatus(void);
extern void hangten(void);
d56 2
a57 1
get_args(int argc, register char **argv)
d98 3
a100 1
main(int argc, char **argv)
@


11.7.2.2
log
@sync branch with HEAD
@
text
@d19 1
a19 1
 *	This software is Copyright (C) 1986-2004 by the United States Army.
d23 1
a23 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
@


11.6
log
@Converted from K&R to ANSI C - RFH
@
text
@d37 1
a37 1
extern void dunnopen(void);
d41 2
a42 2
extern int goodstatus(void);
extern void hangten(void);
d56 2
a57 1
get_args(int argc, register char **argv)
d98 3
a100 1
main(int argc, char **argv)
@


11.5
log
@Misc compiler warnings eliminated
@
text
@d23 1
a23 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/dunnsnap.c,v 11.4 2000/09/01 03:23:48 mike Exp $ (BRL)";
d37 1
a37 1
extern void dunnopen();
d41 2
a42 2
extern int goodstatus();
extern void hangten();
d56 1
a56 2
get_args( argc, argv )
register char **argv;
d97 1
a97 3
main(argc, argv)
int argc;
char **argv;
@


11.4
log
@
Lint fix
@
text
@d23 1
a23 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/dunnsnap.c,v 11.3 2000/08/23 19:04:31 mike Exp $ (BRL)";
d37 7
d55 1
d102 1
a102 1
	register FBIO *fbp;
@


11.3
log
@
const RCSid
@
text
@d23 1
a23 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/dunnsnap.c,v 11.2 2000/01/31 16:03:08 jra Exp $ (BRL)";
d89 1
@


11.2
log
@Eliminated some unused variables
@
text
@d23 1
a23 1
static char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/dunnsnap.c,v 11.1 1995/01/04 10:12:01 mike Rel4_4 $ (BRL)";
@


11.1
log
@Release_4.4
@
text
@d23 1
a23 1
static char RCSid[] = "@@(#)$Header: /m/cad/util/RCS/dunnsnap.c,v 10.2 94/08/23 15:05:39 gdurf Exp $ (BRL)";
a93 1
	int	retcode = 0;
@


10.2
log
@Factored ifdefs
@
text
@d23 1
a23 1
static char RCSid[] = "@@(#)$Header: /m/cad/util/RCS/dunnsnap.c,v 10.1 1991/10/12 06:48:11 mike Rel4_0 gdurf $ (BRL)";
@


10.1
log
@Release_4.0
@
text
@d23 1
a23 1
static char RCSid[] = "@@(#)$Header: /m/cad/util/RCS/dunnsnap.c,v 9.2 90/11/24 01:23:07 mike Exp $ (BRL)";
d26 2
d29 3
a32 4

extern int	getopt();
extern char	*optarg;
extern int	optind;
@


9.2
log
@Changed a dubious while() loop into an if() statement to
silence compiler warnings.  It couldn't ever loop, anyways.`
@
text
@d23 1
a23 1
static char RCSid[] = "@@(#)$Header: /m/cad/util/RCS/dunnsnap.c,v 9.1 89/05/19 06:08:13 mike Rel3_5 $ (BRL)";
@


9.1
log
@Release_3.5
@
text
@d23 1
a23 1
static char RCSid[] = "@@(#)$Header: dunnsnap.c,v 8.1 88/10/05 00:40:56 mike Rel3_0 $ (BRL)";
d124 1
a124 1
		while (!ready(20)) {
@


8.1
log
@Release_3.0
@
text
@d23 1
a23 1
static char RCSid[] = "@@(#)$Header: dunnsnap.c,v 7.4 88/05/21 10:58:24 mike Exp $ (BRL)";
@


7.4
log
@added -s -w -n
@
text
@d23 1
a23 1
static char RCSid[] = "@@(#)$Header: dunnsnap.c,v 7.3 88/05/17 03:31:46 mike Locked $ (BRL)";
@


7.3
log
@Added -F framebuffer option, for working with the SGI 4-D
@
text
@d23 1
a23 1
static char RCSid[] = "@@(#)$Header: dunnsnap.c,v 7.2 88/05/16 04:31:35 mike Locked $ (BRL)";
d44 2
a45 1
	[-S squarescrsize] [-W scr_width] [-N scr_height] [num_frames]\n";
d52 1
a52 1
	while ( (c = getopt( argc, argv, "hF:S:W:N:" )) != EOF )  {
d61 1
d65 1
d69 1
@


7.2
log
@Modification for SYSV, ugh.
@
text
@d23 1
a23 1
static char RCSid[] = "@@(#)$Header: dunnsnap.c,v 7.1 87/11/03 00:06:23 mike Locked $ (BRL)";
d27 1
d29 5
d37 47
d88 2
a89 1
	int nframes;
d91 5
d98 5
d104 3
a106 4

	if ( argc < 1 || argc > 2) {
		printf("Usage: dunnsnap [num_frames]\n");
		exit(25);
d108 2
a109 4
	if ( argc > 1) 
		nframes = atoi(*++argv);
	else
		nframes = 1;
d112 2
a113 2
		printf("dunnsnap:  camera not ready at startup\n");
		exit(30);
d118 1
a118 1
	while (nframes) {
d121 2
a122 2
			printf("dunnsnap: camera not ready at frame start\n");
			exit(40);
d126 2
a127 2
			printf("badstatus\n");
			exit(50);
d131 3
d135 5
a139 7
			cmd = 'I';	/* expose command */
			write(fd, &cmd, 1);
			hangten();
			if (!ready(20)) {
				printf("dunnsnap: camera not ready after expose cmd\n");
				exit(60);
			}
d142 8
@


7.1
log
@Release 2.3
@
text
@d23 1
a23 1
static char RCSid[] = "@@(#)$Header: dunnsnap.c,v 6.1 87/07/11 08:09:40 mike Rel $ (BRL)";
d50 2
a51 2
	if (!ready(1)) {
		printf("camera not ready\n");
d60 1
a60 1
			printf("camera not ready\n");
d75 1
a75 1
				printf("camera not ready\n");
@


6.1
log
@Release 2.0
@
text
@d23 1
a23 1
static char RCSid[] = "@@(#)$Header: dunnsnap.c,v 5.1 87/06/24 22:37:33 mike Rel $ (BRL)";
@


5.1
log
@Release 1.24
@
text
@d23 1
a23 1
static char RCSid[] = "@@(#)$Header: dunnsnap.c,v 4.5 87/06/20 05:53:56 mike Exp $ (BRL)";
@


4.5
log
@Modified to use dunncomm.c
@
text
@d23 1
a23 1
static char RCSid[] = "@@(#)$Header: dunnsnap.c,v 4.4 87/02/13 00:39:48 mike Locked $ (BRL)";
@


4.4
log
@Release 1.20 -- First Formal Release
@
text
@d23 1
a23 1
static char RCSid[] = "@@(#)$Header: dunnsnap.c,v 4.3 87/01/04 02:02:52 mike Rel1 $ (BRL)";
a26 1
#include <sgtty.h>
d28 2
a29 4
#ifdef BSD
#include <sys/time.h>
#include <sys/file.h>
#endif
a30 6
struct	sgttyb	tty;
int fd;
char cmd;
unsigned char status[4];
int readfds, xcptfd;

d37 1
a38 18
	/* open the camera device */

	if( (fd = open("/dev/camera", O_RDWR | O_NDELAY)) < 0 
	     || ioctl(fd, TIOCGETP, &tty) < 0) {
	     	printf("\007dunnsnap: can't open /dev/camera\n");
		close(fd);
		exit(10);
	}
	
	/* set up the camera device */

	tty.sg_ispeed = tty.sg_ospeed = B9600;
	tty.sg_flags = RAW | EVENP | ODDP | XTABS;
	if( ioctl(fd,TIOCSETP,&tty) < 0 ) {
		printf("\007dunnsnap: error on /dev/camera setup\n");
		exit(20);
	}

a79 115
}


/*
 *			M R E A D
 *
 * This function performs the function of a read(II) but will
 * call read(II) multiple times in order to get the requested
 * number of characters.  This can be necessary because pipes
 * and network connections don't deliver data with the same
 * grouping as it is written with.
 */
static int
mread(fd, bufp, n)
int fd;
register char	*bufp;
unsigned	n;
{
	register unsigned	count = 0;
	register int		nread;

	do {
		nread = read(fd, bufp, n-count);
		if(nread == -1)
			return(nread);
		if(nread == 0)
			return((int)count);
		count += (unsigned)nread;
		bufp += nread;
	 } while(count < n);

	return((int)count);
}

/*
 *			G O O D S T A T U S
 *
 *	Checks the status of the Dunn camera and returns 1 for good status
 *	and 0 for bad status.
 *
 */

goodstatus()
{
	struct timeval waittime, *timeout;
	
	timeout = &waittime;
	timeout->tv_sec = 10;
	timeout->tv_usec = 0;
	
	cmd = ';';	/* status request cmd */
	write(fd, &cmd, 1);	
	readfds = 1<<fd;
	select(fd+1, &readfds, (int *)0, &xcptfd, timeout);
	if( (readfds & (1<<fd)) !=0) {
		mread(fd, status, 4);
		if (status[0]&0x1)  printf("No vertical sync\n");
		if (status[0]&0x2)  printf("8x10 not ready\n");
		if (status[0]&0x4)  printf("Expose in wrong mode\n");
		if (status[0]&0x8)  printf("Aux camera out of film\n");
		if (status[1]&0x1)  printf("B/W mode\n");
		if (status[1]&0x2)  printf("Separate mode\n");
		if (status[2]&0x1)  printf("Y-smoothing off\n");

		if ((status[0]&0xf) == 0x0 &&
		    (status[1]&0x3) == 0x0 )
			return 1;	/* status is ok */
		printf("\007dunnsnap: status error from camera\n");
		printf("status[0]= 0x%x [1]= 0x%x [2]= 0x%x [3]= 0x%x\n",
			status[0]&0xf,status[1]&0xf,
			status[2]&0x3,status[3]&0x7f);
	} else
		printf("\007dunnsnap: status request timed out\n");
	return 0;	/* status is bad or request timed out */
}

/*
 *			H A N G T E N 
 *
 *	Provides a 10 millisecond delay when called
 *
 */
hangten()
{
	static struct timeval delaytime = { 0, 10000}; /* set timeout to 10mS*/

	select(0, (int *)0, (int *)0, (int *)0, &delaytime);
}

/*
 *			R E A D Y
 *
 *	Sends a ready test command to the Dunn camera and returns 1 if the
 *	camera is ready or 0 if the camera is not ready after waiting the
 *	number of seconds specified by the argument.
 *
 */
ready(nsecs)
int nsecs;
{
	struct timeval waittime, *timeout;
	timeout = &waittime;
	timeout->tv_sec = nsecs;
	timeout->tv_usec = 0;
	
	cmd = ':';	/* ready test command */
	write(fd, &cmd, 1);
	readfds = 1<<fd;
	select(fd+1, &readfds, (int *)0, &xcptfd, timeout);
	if ((readfds & (1<<fd)) != 0) {
		mread(fd, status, 2);
		if((status[0]&0x7f) == 'R')
			return 1;	/* camera is ready */
	}
	return 0;	/* camera is not ready or timeout after n secs */
@


4.3
log
@Enhanced verbosity (and comprehensibility) of bad status messages.
Release 1.12
@
text
@d23 1
a23 1
static char RCSid[] = "@@(#)$Header: dunnsnap.c,v 4.2 87/01/04 01:26:50 mike Locked $ (BRL)";
@


4.2
log
@Release 1.12 -- fixed status checking
@
text
@d23 1
a23 1
static char RCSid[] = "@@(#)$Header: dunnsnap.c,v 4.1 86/12/29 03:12:24 mike Rel1 $ (BRL)";
d162 9
a170 1
		if ((status[0]&0xf) == 0 &&
d173 4
a176 5
		else {
			printf("\007dunnsnap: status error from camera\n");
			printf("status[0]= 0x%x [1]= 0x%x [2]= 0x%x [3]= 0x%x\n",status[0]&0xf,status[1]&0xf,
				status[2]&0x3,status[3]&0x7f);
		}
@


4.1
log
@BRL CAD Distribution Release 1.10
@
text
@d23 1
a23 1
static char RCSid[] = "@@(#)$Header: dunnsnap.c,v 1.3 86/11/19 00:51:02 kermit Exp $ (BRL)";
d163 1
a163 2
		    (status[1]&0xf) == 0x8 &&
		    (status[2]&0x3) == 0x3)
@


1.3
log
@Fixed up argument checking a bit.
@
text
@d23 1
a23 1
static char RCSid[] = "@@(#)$Header: dunnsnap.c,v 1.2 86/08/13 04:40:51 kermit Locked $ (BRL)";
@


1.2
log
@Cleanup for distribution
@
text
@d7 2
d23 1
a23 1
static char RCSid[] = "@@(#)$Header$ (BRL)";
d67 4
@


1.1
log
@Initial revision
@
text
@d7 1
d10 9
a18 1
 *
d20 3
d24 2
d27 1
a28 1
#include <sgtty.h>
d30 2
@
