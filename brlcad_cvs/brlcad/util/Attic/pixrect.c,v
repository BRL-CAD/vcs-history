head	11.13;
access;
symbols
	ansi-20040405-merged:11.9.2.2
	postmerge-20040405-ansi:11.11
	premerge-20040404-ansi:11.10
	postmerge-autoconf:11.10
	autoconf-freeze:11.9.10.2
	premerge-autoconf:11.10
	postmerge-20040315-windows:11.10
	premerge-20040315-windows:11.10
	windows-20040315-freeze:11.9.4.1
	autoconf-20031203:11.9
	autoconf-20031202:11.9
	autoconf-branch:11.9.0.10
	phong-branch:11.9.0.8
	photonmap-branch:11.9.0.6
	rel-6-1-DP:11.9
	windows-branch:11.9.0.4
	rel-6-0-2:11.7
	ansi-branch:11.9.0.2
	rel-6-0-1-branch:11.7.0.2
	hartley-6-0-post:11.8
	hartley-6-0-pre:11.7
	rel-6-0-1:11.7
	rel-6-0:11.7
	rel-5-4:11.4
	offsite-5-3-pre:11.6
	rel-5-3:11.4
	rel-5-2:11.4
	rel-5-1-branch:11.4.0.2
	rel-5-1:11.4
	rel-5-0:11.3
	rel-5-0-beta:11.3
	rel-4-5:11.2
	ctj-4-5-post:11.2
	ctj-4-5-pre:11.2
	rel-4-4:11.1
	rel-4-0:10.1
	rel-3-5:9.1
	rel-3-0:8.1
	rel-2-3:7.1
	rel-2-0:5.1
	rel-1-24:5.1
	rel-1-20:4.2
	rel-1-10:4.1;
locks; strict;
comment	@ * @;


11.13
date	2004.05.21.14.57.55;	author morrison;	state dead;
branches;
next	11.12;

11.12
date	2004.05.10.15.30.51;	author erikg;	state Exp;
branches;
next	11.11;

11.11
date	2004.04.05.05.46.02;	author morrison;	state Exp;
branches;
next	11.10;

11.10
date	2004.02.02.17.39.49;	author morrison;	state Exp;
branches;
next	11.9;

11.9
date	2002.08.20.17.09.03;	author jra;	state Exp;
branches
	11.9.2.1
	11.9.4.1
	11.9.10.1;
next	11.8;

11.8
date	2002.08.15.20.56.15;	author hartley;	state Exp;
branches;
next	11.7;

11.7
date	2001.08.10.20.57.07;	author butler;	state Exp;
branches;
next	11.6;

11.6
date	2000.09.01.03.23.59;	author mike;	state Exp;
branches;
next	11.5;

11.5
date	2000.08.23.19.04.55;	author mike;	state Exp;
branches;
next	11.4;

11.4
date	2000.01.31.16.03.09;	author jra;	state Exp;
branches;
next	11.3;

11.3
date	98.09.14.15.59.24;	author bparker;	state Exp;
branches;
next	11.2;

11.2
date	96.07.16.22.56.03;	author jra;	state Exp;
branches;
next	11.1;

11.1
date	95.01.04.10.12.55;	author mike;	state Rel4_4;
branches;
next	10.3;

10.3
date	94.08.23.15.06.02;	author gdurf;	state Exp;
branches;
next	10.2;

10.2
date	92.10.08.14.55.28;	author phil;	state Exp;
branches;
next	10.1;

10.1
date	91.10.12.06.48.50;	author mike;	state Rel4_0;
branches;
next	9.1;

9.1
date	89.05.19.06.10.43;	author mike;	state Rel3_5;
branches;
next	8.1;

8.1
date	88.10.05.00.43.07;	author mike;	state Rel3_0;
branches;
next	7.1;

7.1
date	87.11.03.00.08.58;	author mike;	state Rel;
branches;
next	6.1;

6.1
date	87.07.11.08.12.21;	author mike;	state Rel;
branches;
next	5.1;

5.1
date	87.06.24.22.43.10;	author mike;	state Rel;
branches;
next	4.2;

4.2
date	87.02.13.00.45.35;	author mike;	state Exp;
branches;
next	4.1;

4.1
date	86.12.29.03.13.46;	author mike;	state Rel1;
branches;
next	1.2;

1.2
date	86.11.13.02.30.17;	author phil;	state Exp;
branches;
next	1.1;

1.1
date	86.08.14.21.55.42;	author mike;	state Exp;
branches;
next	;

11.9.2.1
date	2002.09.19.18.02.42;	author morrison;	state Exp;
branches;
next	11.9.2.2;

11.9.2.2
date	2004.03.17.21.23.32;	author morrison;	state Exp;
branches;
next	;

11.9.4.1
date	2004.03.11.23.52.34;	author morrison;	state Exp;
branches;
next	;

11.9.10.1
date	2004.02.12.19.43.11;	author erikg;	state Exp;
branches;
next	11.9.10.2;

11.9.10.2
date	2004.03.15.14.08.17;	author erikg;	state Exp;
branches;
next	;


desc
@Extract a rectangle from a .pix file
@


11.13
log
@moved to src/util/
@
text
@/*
 *		P I X R E C T . C
 *
 *  Remove a portion of a potentially huge pix file.
 *
 *  Authors -
 *	Phillip Dykstra
 *	2 Oct 1985
 *  
 *      Further additions by John Grosh, 1 April 1990
 *
 *  Source -
 *	SECAD/VLD Computing Consortium, Bldg 394
 *	The U. S. Army Ballistic Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5066
 *  
 *  Copyright Notice -
 *	This software is Copyright (C) 1986-2004 by the United States Army.
 *	All rights reserved.
 */
#ifndef lint
static const char RCSid[] = "@@(#)$Header: /n/xoff/cvs/brlcad/util/pixrect.c,v 11.12 2004/05/10 15:30:51 erikg Exp $ (BRL)";
#endif

#ifdef HAVE_CONFIG_H
# include "config.h"
#endif



#include <stdio.h>
#include <ctype.h>

#include "machine.h"
#include "externs.h"		/* For getopt */

#define	INTERACTIVE	0
#define	COMMAND_LINE	1

FILE		*ifp, *ofp;		/* input and output file pointers */

static char	*file_name;

static int 	linelen;		/* input width input file */ 
static int 	xorig = 0;     		/* Bottom left corner to extract from */
static int 	yorig = 0;		/* Default at (0,0) pixels     */
static int 	xnum  = 0;
static int 	ynum  = 0;
static int 	bytes_per_pixel = 3;	/* Default for RGB */

static char usage[] = "\
Usage: pixrect -w in_width -n in_height -W out_width -N out_height\n\
               [-x xoffset] [-y yoffset] [-# bytes] [infile.pix]\n\
  or   pixrect [-# bytes] infile outfile (I prompt!)\n";


int
get_args(register int argc, register char **argv)
{
	register int c;
	register int inputmode = INTERACTIVE;

	/* Get info from command line arguments */
	while ((c = getopt(argc, argv, "s:w:n:x:y:X:Y:S:W:N:#:")) != EOF) {
		switch(c) {
		case 's':
			linelen   = atoi(optarg);
			inputmode = COMMAND_LINE;
			break;
		case 'w':
			linelen   = atoi(optarg);
			inputmode = COMMAND_LINE;
			break;
		case 'n':
			inputmode = COMMAND_LINE;
			break;
		case 'x':
			xorig     = atoi(optarg);
			inputmode = COMMAND_LINE;
			break;
		case 'y':
			yorig     = atoi(optarg);
			inputmode = COMMAND_LINE;
			break;
		case 'X':
			inputmode = COMMAND_LINE;
			break;
		case 'Y':
			inputmode = COMMAND_LINE;
			break;
		case 'S':
			xnum = ynum = atoi(optarg);
			inputmode = COMMAND_LINE;
			break;
		case 'W':
			xnum      = atoi(optarg);
			inputmode = COMMAND_LINE;
			break;
		case 'N':
			ynum      = atoi(optarg);
			inputmode = COMMAND_LINE;
			break;
		case '#':
			bytes_per_pixel = atoi(optarg);
			break;
		default:		/* '?' */
			return(0);
		}
	}

	/* If parameters (i.e. xnum, etc.) are not entered on */
        /*    command line, obtain input in the same style as */
        /*    the original version of pixrect.c               */
	
	if (inputmode == INTERACTIVE) {
		if (argc != 4 && argc != 3) 
			return(0);

		/* Obtain file pointers */
		if ((ifp = fopen(argv[argc-2], "r")) == NULL) {
			fprintf(stderr,"pixrect: can't open %s\n", argv[argc-1]);
			fprintf(stderr,usage);
			exit(2);
		}
		if ((ofp = fopen(argv[argc-1], "w")) == NULL) {
			fprintf(stderr,"pixrect: can't open %s\n", argv[argc]);
			fprintf(stderr, usage);
			exit(3);
		}

		/* Get info */
		printf( "Area to extract (x, y) in pixels " );
		scanf( "%d%d", &xnum, &ynum );
		printf( "Origin to extract from (0,0 is lower left) " );
		scanf( "%d%d", &xorig, &yorig );
		printf( "Scan line length of input file " );
		scanf( "%d", &linelen );
	}

	/* Make sure nessecary variables set */
	if (linelen <= 0 || xnum <= 0 || ynum <= 0) {
		fprintf(stderr, "pixrect: args for -w -W -N [-S] must be > 0\n");
		fprintf(stderr, usage);
		exit(1);
	}

	if (inputmode == COMMAND_LINE) {
		/* Obtain file pointers */
		ofp = stdout;
		if (optind >= argc) {
			if (isatty(fileno(stdin))) {
				fprintf(stderr,
					"pixrect: input from sdtin\n");
				return(0);
			}
			ifp = stdin;
		} else {
			file_name = argv[optind];
			if ((ifp = fopen(file_name, "r")) == NULL) {
				fprintf(stderr,
					"pixrect: cannot open \"%s\" for reading\n",
					file_name);
				return(0);
			}
		}

		if (isatty(fileno(stdout))) {
			fprintf(stderr, "pixrect: output to stdout\n\n");
			return(0);
		}
	}

#if 0
	if (argc > ++optind)
		fprintf(stderr,"pixrect: excess argument(s) ignored\n");
#endif

	return(1);		/* OK */
}

/* ======================================================================= */

char	*buf;			/* output scanline buffer, malloc'd */
int	outbytes;

int
main(register int argc, register char **argv)
{
	int	row;
	long	offset;

	if (!get_args(argc,argv)) {
		fprintf(stderr, usage);
		exit(1);
	}

	outbytes = xnum * bytes_per_pixel;

	if ((buf = malloc(outbytes)) == NULL) {
		fprintf(stderr, "pixrect: malloc failed!\n");
		exit(1);
	}

	/* Move all points */
	for (row = 0 + yorig; row < ynum + yorig; row++) {
		offset = (row * linelen + xorig) * bytes_per_pixel;
		fseek(ifp, offset, 0);
		fread(buf, sizeof(*buf), outbytes, ifp);
		fwrite(buf, sizeof(*buf), outbytes, ofp);
	}

	exit(0);
}
@


11.12
log
@change conf.h to a wrapped config.h
@
text
@d22 1
a22 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/util/pixrect.c,v 11.11 2004/04/05 05:46:02 morrison Exp $ (BRL)";
@


11.11
log
@merge of ansi-6-0-branch into head
@
text
@d22 1
a22 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
d25 5
a29 1
#include "conf.h"
@


11.10
log
@update copyright to include span through 2003
@
text
@d22 1
a22 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/pixrect.c,v 11.9 2002/08/20 17:09:03 jra Exp $ (BRL)";
d54 1
a54 3
get_args(argc,argv)
register char **argv;
register int 	argc;
d183 1
a183 3
main(argc, argv)
register char **argv;
register int 	argc;
@


11.9
log
@Restoration of entire source tree to Pre-Hartley state
@
text
@d18 1
a18 1
 *	This software is Copyright (C) 1986 by the United States Army.
d22 1
a22 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/pixrect.c,v 11.7 2001/08/10 20:57:07 butler Exp $ (BRL)";
@


11.9.4.1
log
@sync to HEAD...
@
text
@d18 1
a18 1
 *	This software is Copyright (C) 1986-2004 by the United States Army.
d22 1
a22 1
static const char RCSid[] = "@@(#)$Header: /n/cad/c/CVS/brlcad/util/pixrect.c,v 11.10 2004/02/02 17:39:49 morrison Exp $ (BRL)";
@


11.9.10.1
log
@merge from HEAD
@
text
@d18 1
a18 1
 *	This software is Copyright (C) 1986-2004 by the United States Army.
d22 1
a22 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/pixrect.c,v 11.10 2004/02/02 17:39:49 morrison Exp $ (BRL)";
@


11.9.10.2
log
@merge from head
@
text
@d22 1
a22 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/pixrect.c,v 11.9.10.1 2004/02/12 19:43:11 erikg Exp $ (BRL)";
@


11.9.2.1
log
@Initial ANSIfication
@
text
@d22 1
a22 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/pixrect.c,v 11.9 2002/08/20 17:09:03 jra Exp $ (BRL)";
d54 3
a56 1
get_args(register int argc, register char **argv)
d185 3
a187 1
main(register int argc, register char **argv)
@


11.9.2.2
log
@sync branch with HEAD
@
text
@d18 1
a18 1
 *	This software is Copyright (C) 1986-2004 by the United States Army.
d22 1
a22 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
@


11.8
log
@Converted from K&R to ANSI C - RFH
@
text
@d54 3
a56 1
get_args(register int argc, register char **argv)
d185 3
a187 1
main(register int argc, register char **argv)
@


11.7
log
@Misc compiler warnings eliminated
@
text
@d22 1
a22 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/pixrect.c,v 11.6 2000/09/01 03:23:59 mike Exp $ (BRL)";
d54 1
a54 3
get_args(argc,argv)
register char **argv;
register int 	argc;
d183 1
a183 3
main(argc, argv)
register char **argv;
register int 	argc;
@


11.6
log
@
Lint fix
@
text
@d22 1
a22 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/pixrect.c,v 11.5 2000/08/23 19:04:55 mike Exp $ (BRL)";
d53 1
@


11.5
log
@
const RCSid
@
text
@d22 1
a22 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/pixrect.c,v 11.4 2000/01/31 16:03:09 jra Exp $ (BRL)";
d183 1
@


11.4
log
@Eliminated some unused variables
@
text
@d22 1
a22 1
static char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/pixrect.c,v 11.3 1998/09/14 15:59:24 bparker Exp $ (BRL)";
@


11.3
log
@*- fix typos
@
text
@d22 1
a22 1
static char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/pixrect.c,v 11.2 1996/07/16 22:56:03 jra Exp $ (BRL)";
a40 1
static int 	idummy;          	/* for storage of superfluous args  */
a71 1
			idummy    = atoi(optarg);
a82 1
			idummy    = atoi(optarg);
a85 1
			idummy    = atoi(optarg);
a187 1
	int	error;
d205 3
a207 3
		error = fseek(ifp, offset, 0);
		error = fread(buf, sizeof(*buf), outbytes, ifp);
		error = fwrite(buf, sizeof(*buf), outbytes, ofp);
@


11.2
log
@Minor mods for IRIX 6.2
@
text
@d22 1
a22 1
static char RCSid[] = "@@(#)$Header: /m/cad/util/RCS/pixrect.c,v 11.1 1995/01/04 10:12:55 mike Rel4_4 jra $ (BRL)";
d154 1
a154 1
					"pixrect: input from sdtin\n",file_name);
@


11.1
log
@Release_4.4
@
text
@d22 1
a22 1
static char RCSid[] = "@@(#)$Header: /m/cad/util/RCS/pixrect.c,v 10.3 94/08/23 15:06:02 gdurf Exp $ (BRL)";
d56 1
a56 1
register 	argc;
d189 1
a189 1
register 	argc;
@


10.3
log
@Factored ifdefs
@
text
@d22 1
a22 1
static char RCSid[] = "@@(#)$Header: /m/cad/util/RCS/pixrect.c,v 10.2 1992/10/08 14:55:28 phil Exp gdurf $ (BRL)";
@


10.2
log
@John Grosh's command line argument additions.
Fixed return code from main.
@
text
@d22 1
a22 1
static char RCSid[] = "@@(#)$Header: pixrect.c,v 9.1 89/05/19 06:10:43 mike Rel3_5 $ (BRL)";
d25 2
d30 3
a37 4
extern int	getopt();		/* for command line options */
extern int	optind;
extern char	*optarg;

a183 1
char	*malloc();
@


10.1
log
@Release_4.0
@
text
@d4 1
a4 1
 * Remove a portion of a potentially huge pix file.
d6 1
a6 1
 *  Author -
d10 2
d22 1
a22 1
static char RCSid[] = "@@(#)$Header: /m/cad/util/RCS/pixrect.c,v 9.1 89/05/19 06:10:43 mike Rel3_5 $ (BRL)";
d26 1
d28 2
a29 1
char *malloc();
d31 1
a31 5
int	xnum, ynum;		/* Number of pixels in new map */
int	xorig, yorig;		/* Bottom left corner to extract from */
int	linelen, outbytes;
int	bytes_per_pixel = 0;
char	*buf;			/* output scanline buffer, malloc'd */
d33 23
a55 2
main(argc, argv)
int argc; char **argv;
d57 2
a58 4
	FILE	*ifp, *ofp;
	int	row;
	int	error;
	long	offset;
d60 49
a108 5
	/* Check for byte count */
	if( argc > 1 && strncmp(argv[1], "-#", 2) == 0 ) {
		bytes_per_pixel = atoi( &argv[1][2] );
		argc--;
		argv++;
a109 2
	if( bytes_per_pixel == 0 )
		bytes_per_pixel = 3;
d111 27
a137 3
	if (argc != 3) {
		printf("usage: pixrect [-#bytes] infile outfile (I prompt!)\n");
		exit( 1 );
d140 5
a144 3
	if ((ifp = fopen(argv[1], "r")) == NULL) {
		printf("pixrect: can't open %s\n", argv[1]);
		exit( 2 );
d146 25
a170 3
	if ((ofp = fopen(argv[2], "w")) == NULL) {
		printf("pixrect: can't open %s\n", argv[1]);
		exit( 3 );
d173 4
a176 7
	/* Get info */
	printf( "Area to extract (x, y) in pixels " );
	scanf( "%d%d", &xnum, &ynum );
	printf( "Origin to extract from (0,0 is lower left) " );
	scanf( "%d%d", &xorig, &yorig );
	printf( "Scan line length of input file " );
	scanf( "%d", &linelen );
d178 22
d202 3
a204 3
	if( (buf = malloc(outbytes)) == NULL ) {
		fprintf( stderr, "pixrect: malloc failed!\n" );
		exit( 1 );
d208 1
a208 1
	for( row = 0+yorig; row < ynum+yorig; row++ ) {
d214 2
@


9.1
log
@Release_3.5
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: pixrect.c,v 8.1 88/10/05 00:43:07 mike Rel3_0 $ (BRL)";
@


8.1
log
@Release_3.0
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: pixrect.c,v 7.1 87/11/03 00:08:58 mike Rel $ (BRL)";
@


7.1
log
@Release 2.3
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: pixrect.c,v 6.1 87/07/11 08:12:21 mike Rel $ (BRL)";
@


6.1
log
@Release 2.0
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: pixrect.c,v 5.1 87/06/24 22:43:10 mike Rel $ (BRL)";
@


5.1
log
@Release 1.24
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: pixrect.c,v 4.2 87/02/13 00:45:35 mike Exp $ (BRL)";
@


4.2
log
@Release 1.20 -- First Formal Release
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: pixrect.c,v 4.1 86/12/29 03:13:46 mike Rel1 $ (BRL)";
@


4.1
log
@BRL CAD Distribution Release 1.10
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: pixrect.c,v 1.2 86/11/13 02:30:17 phil Exp $ (BRL)";
@


1.2
log
@variable pixel size option.
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: pixrect.c,v 1.1 86/08/14 21:55:42 mike Exp $ (BRL)";
@


1.1
log
@Initial revision
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header$ (BRL)";
d29 2
a30 1
int	linelen;
d41 11
a51 2
	if (argc < 3) {
		printf("usage: pixrect infile outfile (I prompt!)\n");
d54 1
d72 1
a72 1
	buf = malloc( xnum * 3 );
d74 5
d80 2
a81 2
	for (row = 0+yorig; row < ynum+yorig; row++) {
		offset = row * 3 * linelen + (3 * xorig);
d83 2
a84 2
		error = fread(buf, sizeof(*buf), 3*xnum, ifp);
		error = fwrite(buf, sizeof(*buf), 3*xnum, ofp);
@
