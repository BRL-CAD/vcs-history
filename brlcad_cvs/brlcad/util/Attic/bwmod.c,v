head	11.11;
access;
symbols
	ansi-20040405-merged:11.7.2.2
	postmerge-20040405-ansi:11.9
	premerge-20040404-ansi:11.8
	postmerge-autoconf:11.8
	autoconf-freeze:11.7.10.2
	premerge-autoconf:11.8
	postmerge-20040315-windows:11.8
	premerge-20040315-windows:11.8
	windows-20040315-freeze:11.7.4.1
	autoconf-20031203:11.7
	autoconf-20031202:11.7
	autoconf-branch:11.7.0.10
	phong-branch:11.7.0.8
	photonmap-branch:11.7.0.6
	rel-6-1-DP:11.7
	windows-branch:11.7.0.4
	rel-6-0-2:11.5
	ansi-branch:11.7.0.2
	rel-6-0-1-branch:11.5.0.2
	hartley-6-0-post:11.6
	hartley-6-0-pre:11.5
	rel-6-0-1:11.5
	rel-6-0:11.5
	rel-5-4:11.2
	offsite-5-3-pre:11.4
	rel-5-3:11.2
	rel-5-2:11.2
	rel-5-1-branch:11.2.0.2
	rel-5-1:11.2
	rel-5-0:11.2
	rel-5-0-beta:11.2
	rel-4-5:11.2
	ctj-4-5-post:11.2
	ctj-4-5-pre:11.2
	rel-4-4:11.1
	rel-4-0:10.1
	rel-3-5:9.1
	rel-3-0:8.1
	rel-2-3:7.1
	rel-2-0:6.1
	rel-1-24:5.1
	rel-1-20:4.3
	rel-1-10:4.1;
locks; strict;
comment	@ * @;


11.11
date	2004.05.21.14.57.36;	author morrison;	state dead;
branches;
next	11.10;

11.10
date	2004.05.10.15.30.50;	author erikg;	state Exp;
branches;
next	11.9;

11.9
date	2004.04.05.05.46.01;	author morrison;	state Exp;
branches;
next	11.8;

11.8
date	2004.02.02.17.39.45;	author morrison;	state Exp;
branches;
next	11.7;

11.7
date	2002.08.20.17.08.55;	author jra;	state Exp;
branches
	11.7.2.1
	11.7.4.1
	11.7.10.1;
next	11.6;

11.6
date	2002.08.15.20.56.08;	author hartley;	state Exp;
branches;
next	11.5;

11.5
date	2001.04.05.19.36.10;	author morrison;	state Exp;
branches;
next	11.4;

11.4
date	2000.09.01.03.23.46;	author mike;	state Exp;
branches;
next	11.3;

11.3
date	2000.08.23.19.04.24;	author mike;	state Exp;
branches;
next	11.2;

11.2
date	96.04.19.19.57.23;	author pjt;	state Exp;
branches;
next	11.1;

11.1
date	95.01.04.10.11.42;	author mike;	state Rel4_4;
branches;
next	10.4;

10.4
date	94.12.23.08.49.00;	author jra;	state Exp;
branches;
next	10.3;

10.3
date	94.11.21.22.41.25;	author cjohnson;	state Exp;
branches;
next	10.2;

10.2
date	94.08.22.20.22.24;	author gdurf;	state Exp;
branches;
next	10.1;

10.1
date	91.10.12.06.47.58;	author mike;	state Rel4_0;
branches;
next	9.9;

9.9
date	91.07.06.03.37.31;	author mike;	state Exp;
branches;
next	9.8;

9.8
date	91.06.14.13.43.56;	author mmark;	state Exp;
branches;
next	9.7;

9.7
date	90.12.12.14.38.18;	author butler;	state Exp;
branches;
next	9.6;

9.6
date	90.12.12.14.26.08;	author butler;	state Exp;
branches;
next	9.5;

9.5
date	90.11.03.14.46.50;	author butler;	state Exp;
branches;
next	9.4;

9.4
date	90.10.27.18.45.04;	author butler;	state Exp;
branches;
next	9.3;

9.3
date	90.10.25.17.39.11;	author butler;	state Exp;
branches;
next	9.2;

9.2
date	89.12.29.22.15.15;	author mike;	state Exp;
branches;
next	9.1;

9.1
date	89.05.19.06.07.46;	author mike;	state Rel3_5;
branches;
next	8.1;

8.1
date	88.10.05.00.40.32;	author mike;	state Rel3_0;
branches;
next	7.2;

7.2
date	88.09.19.22.55.45;	author mike;	state Exp;
branches;
next	7.1;

7.1
date	87.11.03.00.05.39;	author mike;	state Rel;
branches;
next	6.1;

6.1
date	87.07.11.08.09.06;	author mike;	state Rel;
branches;
next	5.1;

5.1
date	87.06.24.22.36.55;	author mike;	state Rel;
branches;
next	4.3;

4.3
date	87.02.13.00.38.52;	author mike;	state Exp;
branches;
next	4.2;

4.2
date	87.02.11.04.01.14;	author mike;	state Exp;
branches;
next	4.1;

4.1
date	86.12.29.03.12.06;	author mike;	state Rel1;
branches;
next	1.5;

1.5
date	86.11.26.10.28.11;	author phil;	state Exp;
branches;
next	1.4;

1.4
date	86.11.18.17.51.46;	author phil;	state Exp;
branches;
next	1.3;

1.3
date	86.11.15.00.57.37;	author phil;	state Exp;
branches;
next	1.2;

1.2
date	86.09.03.22.20.49;	author phil;	state BRL;
branches;
next	1.1;

1.1
date	86.08.14.21.52.16;	author mike;	state Exp;
branches;
next	;

11.7.2.1
date	2002.09.19.18.02.35;	author morrison;	state Exp;
branches;
next	11.7.2.2;

11.7.2.2
date	2004.03.17.21.23.22;	author morrison;	state Exp;
branches;
next	;

11.7.4.1
date	2004.03.11.23.52.29;	author morrison;	state Exp;
branches;
next	;

11.7.10.1
date	2004.02.12.19.43.09;	author erikg;	state Exp;
branches;
next	11.7.10.2;

11.7.10.2
date	2004.03.15.14.08.11;	author erikg;	state Exp;
branches;
next	;


desc
@BW mod program
@


11.11
log
@moved to src/util/
@
text
@/*
 *		B W M O D . C
 *
 *  Modify intensities in Black and White files.
 *
 *  Allows any number of add, subtract, multiply, divide, or
 *  exponentiation operations to be performed on a picture.
 *  Keeps track of and reports clipping.
 *
 *  Note that this works on PIX files also but there is no
 *  distinction made between colors.
 *
 *  Author -
 *	Phillip Dykstra
 *	31 July 1986
 *  
 *  Source -
 *	SECAD/VLD Computing Consortium, Bldg 394
 *	The U. S. Army Ballistic Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5066
 *  
 *  Copyright Notice -
 *	This software is Copyright (C) 1986-2004 by the United States Army.
 *	All rights reserved.
 */
#ifndef lint
static const char RCSid[] = "@@(#)$Header: /n/xoff/cvs/brlcad/util/bwmod.c,v 11.10 2004/05/10 15:30:50 erikg Exp $ (BRL)";
#endif

#ifdef HAVE_CONFIG_H
# include "config.h"
#endif



#include <stdio.h>
#include <math.h>
#include "machine.h"
#include "externs.h"

char *progname = "(noname)";

char	*file_name;

char usage[] = "\
Usage: bwmod [-c] {-a add -s sub -m mult -d div -A -e exp -r root\n\
                   -S shift -M and -O or -X xor -t trunc} [file.bw]\n";

#define	ADD	1
#define MULT	2
#define	ABS	3
#define	POW	4
#define SHIFT	5
#define AND	6
#define OR	7
#define	XOR	8
#define	TRUNC	9
#define	BUFLEN	(8192*2)	/* usually 2 pages of memory, 16KB */

int	numop = 0;		/* number of operations */
int	op[256];		/* operations */
double	val[256];		/* arguments to operations */
unsigned char ibuf[BUFLEN];	/* input buffer */

#define MAPBUFLEN 256
int mapbuf[MAPBUFLEN];		/* translation buffer/lookup table */
int char_arith = 0;

int
get_args(int argc, register char **argv)
{
	register int c;
	double	d;

	while ( (c = getopt( argc, argv, "a:s:m:d:Ae:r:cS:O:M:X:t:" )) != EOF )
	{
		switch( c )  {
		case 'a':
			op[ numop ] = ADD;
			val[ numop++ ] = atof(optarg);
			break;
		case 's':
			op[ numop ] = ADD;
			val[ numop++ ] = - atof(optarg);
			break;
		case 'm':
			op[ numop ] = MULT;
			val[ numop++ ] = atof(optarg);
			break;
		case 'd':
			op[ numop ] = MULT;
			d = atof(optarg);
			if( d == 0.0 ) {
				(void)fprintf( stderr, "bwmod: divide by zero!\n" );
				exit( 2 );
			}
			val[ numop++ ] = 1.0 / d;
			break;
		case 'A':
			op[ numop ] = ABS;
			val[ numop++ ] = 0;
			break;
		case 'e':
			op[ numop ] = POW;
			val[ numop++ ] = atof(optarg);
			break;
		case 'r':
			op[ numop ] = POW;
			d = atof(optarg);
			if( d == 0.0 ) {
				(void)fprintf( stderr, "bwmod: zero root!\n" );
				exit( 2 );
			}
			val[ numop++ ] = 1.0 / d;
			break;
		case 'c':
			char_arith = !char_arith; break;
		case 'S':
			op[ numop ] = SHIFT;
			val[ numop++] = atof(optarg);
			break;
		case 'M':
			op[ numop ] = AND;
			val[ numop++] = atof(optarg);
			break;
		case 'O':
			op[ numop ] = OR;
			val[ numop++ ] = atof(optarg);
			break;
		case 'X':
			op[ numop ] = XOR;
			val[ numop++ ] = atof(optarg);
			break;
		case 't':
			op[ numop ] = TRUNC;
			val[ numop++ ] = atof(optarg);
			break;
		default:		/* '?' */
			return(0);
		}
	}

	if( optind >= argc )  {
		if( isatty((int)fileno(stdin)) )
			return(0);
		file_name = "-";
	} else {
		file_name = argv[optind];
		if( freopen(file_name, "r", stdin) == NULL )  {
			(void)fprintf( stderr,
				"bwmod: cannot open \"%s\" for reading\n",
				file_name );
			return(0);
		}
	}

	if ( argc > ++optind )
		(void)fprintf( stderr, "bwmod: excess argument(s) ignored\n" );

	return(1);		/* OK */
}

void mk_trans_tbl(void)
{
	register int j, i, tmp;
	register double d;

	/* create translation map */
	for (j = 0; j < MAPBUFLEN ; ++j) {
		d = j;
		for (i=0 ; i < numop ; i++) {
			switch (op[i]) {
			case ADD : d += val[i]; break;
			case MULT: d *= val[i]; break;
			case POW : d = pow( d, val[i]); break;
			case ABS : if (d < 0.0) d = - d; break;
			case SHIFT: tmp=d; tmp=tmp<<(int)val[i];d=tmp;break;
			case OR  : tmp=d; tmp |= (int)val[i]; d=tmp;break;
			case AND : tmp=d; tmp &= (int)val[i]; d=tmp;break;
			case XOR : tmp=d; tmp ^= (int)val[i]; d= tmp; break;
			case TRUNC: tmp=((int)d/(int)val[i])*(int)val[i]; break;
			default  : (void)fprintf(stderr, "%s: error in op\n", progname);
				   exit(-1);
				   break;
			}
		}
		if (d > 255.0) {
			mapbuf[j] = 256;
		} else if (d < 0.0) {
			mapbuf[j] = -1;
		} else
			mapbuf[j] = d + 0.5;
	}
}
void mk_char_trans_tbl(void)
{
	register int j, i;
	register signed char d;

	/* create translation map */
	for (j = 0; j < MAPBUFLEN ; ++j) {
		d = j;
		for (i=0 ; i < numop ; i++) {
			switch (op[i]) {
			case ADD : d += val[i]; break;
			case MULT: d *= val[i]; break;
			case POW : d = pow( (double)d, val[i]); break;
			case ABS : if (d < 0.0) d = - d; break;
			case SHIFT: d=d<<(int)val[i]; break;
			case AND : d &= (int)val[i]; break;
			case OR  : d |= (int)val[i]; break;
			case XOR : d ^= (int)val[i]; break;
			case TRUNC: d /= (int)val[i];d *= (int)val[i]; break;
			default  : (void)fprintf(stderr, "%s: error in op\n", progname);
				   exit(-1);
				   break;
			}
		}
		mapbuf[j] = d & 0x0ff;
	}
}
int main(int argc, char **argv)
{
	register unsigned char	*p, *q;
	register int		tmp;
	int	 		n;
	unsigned long		clip_high, clip_low;
	
	progname = *argv;

	if( !get_args( argc, argv ) || isatty((int)fileno(stdin))
	    || isatty((int)fileno(stdout)) ) {
		(void)fputs(usage, stderr);
		exit( 1 );
	}

	if (char_arith)
		mk_char_trans_tbl();
	else
		mk_trans_tbl();

	clip_high = clip_low = 0L;
	while ( (n=read(0, (void *)ibuf, (unsigned)sizeof(ibuf))) > 0) {
		/* translate */
		for (p = ibuf, q = &ibuf[n] ; p < q ; ++p) {
			tmp = mapbuf[*p];
			if (tmp > 255) { ++clip_high; *p = 255; }
			else if (tmp < 0) { ++clip_low; *p = 0; }
			else *p = tmp;
		}
		/* output */
		if (write(1, (void *)ibuf, (unsigned)n) != n) {
			(void)fprintf(stderr, "%s: Error writing stdout\n",
				progname);
			exit(-1);
		}
	}

	if( clip_high != 0 || clip_low != 0 ) {
		(void)fprintf( stderr, "bwmod: clipped %lu high, %lu low\n",
			clip_high, clip_low );
	}
	return(0);
}
@


11.10
log
@change conf.h to a wrapped config.h
@
text
@d27 1
a27 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/util/bwmod.c,v 11.9 2004/04/05 05:46:01 morrison Exp $ (BRL)";
@


11.9
log
@merge of ansi-6-0-branch into head
@
text
@d27 1
a27 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
d30 5
a34 1
#include "conf.h"
@


11.8
log
@update copyright to include span through 2003
@
text
@d27 1
a27 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/bwmod.c,v 11.7 2002/08/20 17:08:55 jra Exp $ (BRL)";
d66 1
a66 2
get_args( argc, argv )
register char **argv;
d159 1
a159 1
void mk_trans_tbl()
d191 1
a191 1
void mk_char_trans_tbl()
d218 1
a218 3
int main( argc, argv )
int argc;
char **argv;
@


11.7
log
@Restoration of entire source tree to Pre-Hartley state
@
text
@d23 1
a23 1
 *	This software is Copyright (C) 1986 by the United States Army.
d27 1
a27 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/bwmod.c,v 11.5 2001/04/05 19:36:10 morrison Exp $ (BRL)";
@


11.7.4.1
log
@sync to HEAD...
@
text
@d23 1
a23 1
 *	This software is Copyright (C) 1986-2004 by the United States Army.
d27 1
a27 1
static const char RCSid[] = "@@(#)$Header: /n/cad/c/CVS/brlcad/util/bwmod.c,v 11.8 2004/02/02 17:39:45 morrison Exp $ (BRL)";
@


11.7.10.1
log
@merge from HEAD
@
text
@d23 1
a23 1
 *	This software is Copyright (C) 1986-2004 by the United States Army.
d27 1
a27 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/bwmod.c,v 11.8 2004/02/02 17:39:45 morrison Exp $ (BRL)";
@


11.7.10.2
log
@merge from head
@
text
@d27 1
a27 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/bwmod.c,v 11.7.10.1 2004/02/12 19:43:09 erikg Exp $ (BRL)";
@


11.7.2.1
log
@Initial ANSIfication
@
text
@d27 1
a27 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/bwmod.c,v 11.7 2002/08/20 17:08:55 jra Exp $ (BRL)";
d66 2
a67 1
get_args(int argc, register char **argv)
d160 1
a160 1
void mk_trans_tbl(void)
d192 1
a192 1
void mk_char_trans_tbl(void)
d219 3
a221 1
int main(int argc, char **argv)
@


11.7.2.2
log
@sync branch with HEAD
@
text
@d23 1
a23 1
 *	This software is Copyright (C) 1986-2004 by the United States Army.
d27 1
a27 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
@


11.6
log
@Converted from K&R to ANSI C - RFH
@
text
@d66 2
a67 1
get_args(int argc, register char **argv)
d160 1
a160 1
void mk_trans_tbl(void)
d192 1
a192 1
void mk_char_trans_tbl(void)
d219 3
a221 1
int main(int argc, char **argv)
@


11.5
log
@updated SIGNED to signed
updated CONST to const
@
text
@d27 1
a27 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/bwmod.c,v 11.4 2000/09/01 03:23:46 mike Exp $ (BRL)";
d66 1
a66 2
get_args( argc, argv )
register char **argv;
d159 1
a159 1
void mk_trans_tbl()
d191 1
a191 1
void mk_char_trans_tbl()
d218 1
a218 3
int main( argc, argv )
int argc;
char **argv;
@


11.4
log
@
Lint fix
@
text
@d27 1
a27 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/bwmod.c,v 11.3 2000/08/23 19:04:24 mike Exp $ (BRL)";
d195 1
a195 1
	register SIGNED char d;
@


11.3
log
@
const RCSid
@
text
@d27 1
a27 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/bwmod.c,v 11.2 1996/04/19 19:57:23 pjt Exp $ (BRL)";
d65 1
@


11.2
log
@Implemented -t option
@
text
@d27 1
a27 1
static char RCSid[] = "@@(#)$Header: /m/cad/util/RCS/bwmod.c,v 11.1 1995/01/04 10:11:42 mike Rel4_4 pjt $ (BRL)";
@


11.1
log
@Release_4.4
@
text
@d27 1
a27 1
static char RCSid[] = "@@(#)$Header: /m/cad/util/RCS/bwmod.c,v 10.4 94/12/23 08:49:00 jra Exp $ (BRL)";
d42 2
a43 1
Usage: bwmod [-c] {-a add -s sub -m mult -d div -A -e exp -r root} [file.bw]\n";
d53 1
d71 2
a72 1
	while ( (c = getopt( argc, argv, "a:s:m:d:Ae:r:cS:O:M:X:" )) != EOF )  {
d130 4
d177 1
d209 1
@


10.4
log
@Needed cast to double in call to "pow()".
@
text
@d27 1
a27 1
static char RCSid[] = "@@(#)$Header: /n/wolf/m/cad/util/RCS/bwmod.c,v 10.3 94/11/21 22:41:25 cjohnson Exp Locker: jra $ (BRL)";
@


10.3
log
@Add Shift, Or, Xor and Mask (and) to bwmod.
@
text
@d27 1
a27 1
static char RCSid[] = "@@(#)$Header: /m/cad/util/RCS/bwmod.c,v 10.2 1994/08/22 20:22:24 gdurf Exp $ (BRL)";
d195 1
a195 1
			case POW : d = pow( d, val[i]); break;
@


10.2
log
@Added include of conf.h
@
text
@d27 1
a27 1
static char RCSid[] = "@@(#)$Header: /m/cad/util/RCS/bwmod.c,v 10.1 1991/10/12 06:47:58 mike Rel4_0 gdurf $ (BRL)";
d48 4
d69 1
a69 1
	while ( (c = getopt( argc, argv, "a:s:m:d:Ae:r:c" )) != EOF )  {
d111 16
d154 1
a154 1
	register int j, i;
d166 4
d197 4
@


10.1
log
@Release_4.0
@
text
@d27 1
a27 1
static char RCSid[] = "@@(#)$Header: /m/cad/util/RCS/bwmod.c,v 9.9 91/07/06 03:37:31 mike Exp $ (BRL)";
d29 2
@


9.9
log
@Older machines don't know "signed" keyword, use SIGNED.
@
text
@d27 1
a27 1
static char RCSid[] = "@@(#)$Header: /m/cad/util/RCS/bwmod.c,v 9.8 91/06/14 13:43:56 mmark Exp $ (BRL)";
@


9.8
log
@fixed usage msg
@
text
@d27 1
a27 1
static char RCSid[] = "@@(#)$Header: /m/cad/util/RCS/bwmod.c,v 9.7 90/12/12 14:38:18 butler Exp $ (BRL)";
d32 1
a34 3
extern int	getopt();
extern char	*optarg;
extern int	optind;
d160 1
a160 1
	register signed char d;
@


9.7
log
@removed diagnostic fprintf
@
text
@d27 1
a27 1
static char RCSid[] = "@@(#)$Header: /m/cad/util/RCS/bwmod.c,v 9.6 90/12/12 14:26:08 butler Exp $ (BRL)";
d42 1
a42 1
Usage: bwmod {-a add -s sub -m mult -d div -A(abs) -e exp -r root} [file.bw]\n";
@


9.6
log
@added option for signed character arithmetic
@
text
@d27 1
a27 1
static char RCSid[] = "@@(#)$Header: /m/cad/util/RCS/bwmod.c,v 9.5 90/11/03 14:46:50 butler Exp $ (BRL)";
a176 1
			fprintf(stderr, "%d: %d\n", j, d);
@


9.5
log
@Prevented running off the end of mapbuf[]
@
text
@d27 1
a27 1
static char RCSid[] = "@@(#)$Header: /m/cad/util/RCS/bwmod.c,v 9.4 90/10/27 18:45:04 butler Exp $ (BRL)";
d57 1
a58 1

d65 1
a65 1
	while ( (c = getopt( argc, argv, "a:s:m:d:Ae:r:" )) != EOF )  {
d105 2
a106 1

d159 4
d164 18
d199 4
a202 1
	mk_trans_tbl();
@


9.4
log
@removed need for clip arrays, & converted array indexing in buffer
conversion to pointer dereferencing.
@
text
@d27 1
a27 1
static char RCSid[] = "@@(#)$Header: /m/cad/util/RCS/bwmod.c,v 9.3 90/10/25 17:39:11 butler Exp $ (BRL)";
a53 1
int mapbuf[256];		/* translation buffer/lookup table */
d55 2
d58 1
d137 1
a137 1
	for (j = 0; j < sizeof(mapbuf) ; ++j) {
@


9.3
log
@converted operation to table lookup instead of performing all calculations
on all pixels.
Changed to using unbuffered I/O
@
text
@d27 1
a27 1
static char RCSid[] = "@@(#)$Header: /m/cad/util/RCS/bwmod.c,v 9.2 89/12/29 22:15:15 mike Exp $ (BRL)";
d54 1
a54 3
unsigned char mapbuf[256];	/* translation buffer/lookup table */
unsigned char clip_h[256];	/* map of values which clip high */
unsigned char clip_l[256];	/* map of values which clip low */
a133 3
	(void)bzero((char *)clip_h, sizeof(clip_h));
	(void)bzero((char *)clip_l, sizeof(clip_l));

d143 3
a145 1
			default  : (void)fprintf(stderr, "%s: error in op\n", progname); break;
d149 1
a149 2
			clip_h[j] = 1;
			mapbuf[j] = 255;
d151 1
a151 2
			clip_l[j] = 1;
			mapbuf[j] = 0;
d161 4
a164 2
	register int	j, n;
	unsigned long clip_high, clip_low;
d168 2
a169 2
	if( !get_args( argc, argv ) || isatty(fileno(stdin))
	    || isatty(fileno(stdout)) ) {
d176 1
a176 1
	clip_high = clip_low = 0;
d179 5
a183 4
		for (j=0 ; j < n ; ++j) {
			ibuf[j] = mapbuf[ibuf[j]];
			if (clip_h[j]) clip_high++;
			else if (clip_l[j]) clip_low++;
@


9.2
log
@Added "externs.h" for atof().
@
text
@d27 1
a27 1
static char RCSid[] = "@@(#)$Header: bwmod.c,v 9.1 89/05/19 06:07:46 mike Locked $ (BRL)";
d37 1
a39 1
FILE	*infp;
d48 1
a49 2
#define	BUFLEN	1024

d53 4
a56 2
double	buf[BUFLEN];		/* working buffer */
unsigned char obuf[BUFLEN];	/* output buffer */
d58 1
d83 1
a83 1
				fprintf( stderr, "bwmod: divide by zero!\n" );
d100 1
a100 1
				fprintf( stderr, "bwmod: zero root!\n" );
d112 1
a112 1
		if( isatty(fileno(stdin)) )
a114 1
		infp = stdin;
d117 1
a117 1
		if( (infp = fopen(file_name, "r")) == NULL )  {
d131 32
a162 1
main( argc, argv )
d166 4
a169 11
	int	i, n;
#ifdef sgi
	double	*bp;		/* avoid SGI -Zf reg pointer ++ problem */
#else
	register double	*bp;
#endif
	register double	arg;
	register int j;
	long	value;
	unsigned char ibuf[BUFLEN];
	long	clip_high, clip_low;
d171 1
a171 1
	if( !get_args( argc, argv ) || isatty(fileno(infp))
d177 2
d180 6
a185 36

	while( (n = fread(ibuf, sizeof(*ibuf), BUFLEN, infp)) > 0 ) {
		for( i = 0; i < n; i++ )
			buf[i] = ibuf[i];
		for( i = 0; i < numop; i++ ) {
			arg = val[ i ];
			switch( op[i] ) {
			case ADD:
				bp = &buf[0];
				for( j = n; j > 0; j-- ) {
					*bp++ += arg;
				}
				break;
			case MULT:
				bp = &buf[0];
				for( j = n; j > 0; j-- ) {
					*bp++ *= arg;
				}
				break;
			case POW:
				bp = &buf[0];
				for( j = n; j > 0; j-- ) {
					*bp++ = pow( *bp, arg );
				}
				break;
			case ABS:
				bp = &buf[0];
				for( j = n; j > 0; j-- ) {
					if( *bp < 0.0 )
						*bp = - *bp;
					bp++;
				}
				break;
			default:
				break;
			}
d187 5
a191 10
		for( i = 0; i < n; i++ ) {
			value = buf[i] + 0.5;	/* double -> long */
			if( value > 255 ) {
				obuf[i] = 255;
				clip_high++;
			} else if( value < 0 ) {
				obuf[i] = 0;
				clip_low++;
			} else
				obuf[i] = value;
a192 1
		fwrite( obuf, sizeof(*obuf), n, stdout );
d196 1
a196 1
		fprintf( stderr, "bwmod: clipped %d high, %d low\n",
d199 1
@


9.1
log
@Release_3.5
@
text
@d27 1
a27 1
static char RCSid[] = "@@(#)$Header: bwmod.c,v 8.1 88/10/05 00:40:32 mike Rel3_0 $ (BRL)";
d32 1
@


8.1
log
@Release_3.0
@
text
@d27 1
a27 1
static char RCSid[] = "@@(#)$Header: bwmod.c,v 7.2 88/09/19 22:55:45 mike Exp $ (BRL)";
@


7.2
log
@atof() is better defined in <math.h>
@
text
@d27 1
a27 1
static char RCSid[] = "@@(#)$Header: bwmod.c,v 7.1 87/11/03 00:05:39 mike Locked $ (BRL)";
@


7.1
log
@Release 2.3
@
text
@d27 1
a27 1
static char RCSid[] = "@@(#)$Header: bwmod.c,v 6.1 87/07/11 08:09:06 mike Rel $ (BRL)";
a31 2

double	atof();
@


6.1
log
@Release 2.0
@
text
@d27 1
a27 1
static char RCSid[] = "@@(#)$Header: bwmod.c,v 5.1 87/06/24 22:36:55 mike Rel $ (BRL)";
@


5.1
log
@Release 1.24
@
text
@d27 1
a27 1
static char RCSid[] = "@@(#)$Header: bwmod.c,v 4.3 87/02/13 00:38:52 mike Exp $ (BRL)";
@


4.3
log
@Release 1.20 -- First Formal Release
@
text
@d27 1
a27 1
static char RCSid[] = "@@(#)$Header: bwmod.c,v 4.2 87/02/11 04:01:14 mike Exp $ (BRL)";
@


4.2
log
@FLEXNAMEs
@
text
@d27 1
a27 1
static char RCSid[] = "@@(#)$Header: bwmod.c,v 4.1 86/12/29 03:12:06 mike Locked $ (BRL)";
@


4.1
log
@BRL CAD Distribution Release 1.10
@
text
@d27 1
a27 1
static char RCSid[] = "@@(#)$Header: bwmod.c,v 1.5 86/11/26 10:28:11 phil Exp $ (BRL)";
d145 1
a145 1
	long	clipped_high, clipped_low;
d153 1
a153 1
	clipped_high = clipped_low = 0;
d195 1
a195 1
				clipped_high++;
d198 1
a198 1
				clipped_low++;
d205 1
a205 1
	if( clipped_high != 0 || clipped_low != 0 ) {
d207 1
a207 1
			clipped_high, clipped_low );
@


1.5
log
@SGI reg pointer bug work around.  Should be removed later.
@
text
@d27 1
a27 1
static char RCSid[] = "@@(#)$Header: bwmod.c,v 1.4 86/11/18 17:51:46 phil Locked $ (BRL)";
@


1.4
log
@Added -r root option.
@
text
@d27 1
a27 1
static char RCSid[] = "@@(#)$Header: bwmod.c,v 1.3 86/11/15 00:57:37 phil Locked $ (BRL)";
d136 3
d140 1
d176 1
a176 2
					*bp = pow( *bp, arg );
					bp++;
@


1.3
log
@essentially a whole new program!
@
text
@d27 1
a27 1
static char RCSid[] = "@@(#)$Header: bwmod.c,v 1.2 86/09/03 22:20:49 phil BRL $ (BRL)";
d43 1
a43 1
Usage: bwmod {-a add -s sub -m mult -d div -A(abs) -e exp} [file.bw]\n";
d64 1
a64 1
	while ( (c = getopt( argc, argv, "a:s:m:d:Ae:" )) != EOF )  {
d94 9
@


1.2
log
@Added final offset.
@
text
@d4 1
a4 1
 * Modify intensities in Black and White files.
d6 3
a8 3
 * Adds or subtracts an offset and then optionally
 * provides a "gain" around a chosen "zero" level.
 * Keeps track of and reports clipping.
d10 1
a10 1
 * Note that this works on PIX files also but there is no
d27 1
a27 1
static char RCSid[] = "@@(#)$Header: bwmod.c,v 1.1 86/08/14 21:52:16 mike Exp $ (BRL)";
d31 1
d35 3
a37 1
static char *Usage = "usage: bwmod offset [gain [\"zero\" (127) [offset]]]\n";
d39 83
d127 3
d131 1
a131 1
	double	offset, gain, zero, offset2;
a132 1
	unsigned char buf[1024], out;
d134 3
a136 2
	if( argc < 2 || isatty(fileno(stdin)) ) {
		fputs( Usage, stderr );
a139 5
	offset = atof( argv[1] );
	gain = (argc > 2) ? atof( argv[2] ) : 0.0;
	zero = (argc > 3) ? atof( argv[3] ) : 127.0;
	offset2 = (argc > 4) ? atof( argv[4] ) : 0.0;

d142 37
a178 1
	while( (n = fread(buf, sizeof(*buf), 1024, stdin)) > 0 ) {
d180 3
a182 6
			value = offset + buf[i];
			if( gain != 0.0 )
				value = gain * (value-zero) + zero;
			value += offset2;
			if( value > 255.0 ) {
				out = 255;
d184 2
a185 2
			} else if( value < 0.0 ) {
				out = 0;
d188 1
a188 3
				out = value;

			fwrite( &out, 1, 1, stdout );
d190 1
@


1.1
log
@Initial revision
@
text
@d27 1
a27 1
static char RCSid[] = "@@(#)$Header$ (BRL)";
d34 1
a34 1
static char *Usage = "usage: bwmod offset [gain [\"zero\" (127)]]\n";
d42 1
a42 1
	double	offset, gain, zero;
d54 1
d63 1
@
