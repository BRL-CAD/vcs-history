head	11.12;
access;
symbols
	ansi-20040405-merged:11.8.2.2
	postmerge-20040405-ansi:11.10
	premerge-20040404-ansi:11.9
	postmerge-autoconf:11.9
	autoconf-freeze:11.8.10.2
	premerge-autoconf:11.9
	postmerge-20040315-windows:11.9
	premerge-20040315-windows:11.9
	windows-20040315-freeze:11.8.4.1
	autoconf-20031203:11.8
	autoconf-20031202:11.8
	autoconf-branch:11.8.0.10
	phong-branch:11.8.0.8
	photonmap-branch:11.8.0.6
	rel-6-1-DP:11.8
	windows-branch:11.8.0.4
	rel-6-0-2:11.6
	ansi-branch:11.8.0.2
	rel-6-0-1-branch:11.6.0.2
	hartley-6-0-post:11.7
	hartley-6-0-pre:11.6
	rel-6-0-1:11.6
	rel-6-0:11.6
	rel-5-4:11.3
	offsite-5-3-pre:11.5
	rel-5-3:11.3
	rel-5-2:11.3
	rel-5-1-branch:11.3.0.2
	rel-5-1:11.3
	rel-5-0:11.2
	rel-5-0-beta:11.2
	rel-4-5:11.2
	ctj-4-5-post:11.2
	ctj-4-5-pre:11.2
	rel-4-4:11.1
	rel-4-0:10.1;
locks; strict;
comment	@ * @;


11.12
date	2004.05.21.14.57.47;	author morrison;	state dead;
branches;
next	11.11;

11.11
date	2004.05.10.15.30.50;	author erikg;	state Exp;
branches;
next	11.10;

11.10
date	2004.04.05.05.46.02;	author morrison;	state Exp;
branches;
next	11.9;

11.9
date	2004.02.02.17.39.45;	author morrison;	state Exp;
branches;
next	11.8;

11.8
date	2002.08.20.17.09.01;	author jra;	state Exp;
branches
	11.8.2.1
	11.8.4.1
	11.8.10.1;
next	11.7;

11.7
date	2002.08.15.20.56.12;	author hartley;	state Exp;
branches;
next	11.6;

11.6
date	2001.08.08.03.28.16;	author butler;	state Exp;
branches;
next	11.5;

11.5
date	2000.09.01.03.23.53;	author mike;	state Exp;
branches;
next	11.4;

11.4
date	2000.08.23.19.04.39;	author mike;	state Exp;
branches;
next	11.3;

11.3
date	2000.01.31.16.03.08;	author jra;	state Exp;
branches;
next	11.2;

11.2
date	96.07.16.22.56.03;	author jra;	state Exp;
branches;
next	11.1;

11.1
date	95.01.04.10.12.25;	author mike;	state Rel4_4;
branches;
next	10.5;

10.5
date	94.11.08.04.32.20;	author mike;	state Exp;
branches;
next	10.4;

10.4
date	94.08.23.15.05.46;	author gdurf;	state Exp;
branches;
next	10.3;

10.3
date	92.05.14.16.26.24;	author phil;	state Exp;
branches;
next	10.2;

10.2
date	92.04.22.15.09.59;	author phil;	state Exp;
branches;
next	10.1;

10.1
date	91.10.12.06.48.27;	author mike;	state Rel4_0;
branches;
next	1.1;

1.1
date	90.11.03.14.50.39;	author phil;	state Exp;
branches;
next	;

11.8.2.1
date	2002.09.19.18.02.40;	author morrison;	state Exp;
branches;
next	11.8.2.2;

11.8.2.2
date	2004.03.17.21.23.27;	author morrison;	state Exp;
branches;
next	;

11.8.4.1
date	2004.03.11.23.52.31;	author morrison;	state Exp;
branches;
next	;

11.8.10.1
date	2004.02.12.19.43.10;	author erikg;	state Exp;
branches;
next	11.8.10.2;

11.8.10.2
date	2004.03.15.14.08.12;	author erikg;	state Exp;
branches;
next	;


desc
@ Convert an RGB (pix) file to an 24-bit color PostScript image.
@


11.12
log
@moved to src/util/
@
text
@/*
 *			P I X - P S . C
 *
 *  Convert an RGB (pix) file to an 24-bit color PostScript image.
 *
 *  Author -
 *	Phillip Dykstra
 *  
 *  Source -
 *	SECAD/VLD Computing Consortium, Bldg 394
 *	The U. S. Army Ballistic Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5066
 *  
 *  Copyright Notice -
 *	This software is Copyright (C) 1986-2004 by the United States Army.
 *	All rights reserved.
 */
#ifndef lint
static const char RCSid[] = "@@(#)$Header: /n/xoff/cvs/brlcad/util/pix-ps.c,v 11.11 2004/05/10 15:30:50 erikg Exp $ (BRL)";
#endif

#ifdef HAVE_CONFIG_H
# include "config.h"
#endif



#include <stdio.h>
#include <math.h>	/* for atof() */
#include <time.h>	/* for ctime() */

#include "machine.h"
#include "externs.h"	/* for getopt() */

#define	DEFAULT_SIZE	6.75		/* default output size in inches */
#define	MAX_BYTES	(3*64*128)	/* max bytes per image chunk */

static int	encapsulated = 0;	/* encapsulated postscript */
static int	center = 1;		/* center output on 8.5 x 11 page */
static int	landscape = 0;		/* landscape mode */

static int	width = 512;		/* input size in pixels */
static int	height = 512;
static double	outwidth;		/* output image size in inches */
static double	outheight;
static int	xpoints;		/* output image size in points */
static int	ypoints;
static int	pagewidth = 612;	/* page size in points - 8.5 inches */
static int	pageheight = 792;	/* 11 inches */

static char	*file_name;
static FILE	*infp;

void prolog(FILE *fp, char *name, int width, int height), postlog(FILE *fp), hexout(FILE *fp, int byte);

static char usage[] = "\
Usage: pix-ps [-e] [-c|-l] [-L] [-h]\n\
        [-s input_squaresize] [-w input_width] [-n input_height]\n\
        [-S inches_square] [-W inches_width] [-N inches_height] [file.pix]\n";

int
get_args(int argc, register char **argv)
{
	register int c;

	while ( (c = getopt( argc, argv, "ehclLs:w:n:S:W:N:" )) != EOF )  {
		switch( c )  {
		case 'e':
			/* Encapsulated PostScript */
			encapsulated++;
			break;
		case 'h':
			/* high-res */
			height = width = 1024;
			break;
		case 'c':
			center = 1;
			break;
		case 'l':
			center = 0;	/* lower left */
			break;
		case 'L':
			landscape = 1;
			break;
		case 's':
			/* square file size */
			height = width = atoi(optarg);
			break;
		case 'w':
			width = atoi(optarg);
			break;
		case 'n':
			height = atoi(optarg);
			break;
		case 'S':
			/* square file size */
			outheight = outwidth = atof(optarg);
			break;
		case 'W':
			outwidth = atof(optarg);
			break;
		case 'N':
			outheight = atof(optarg);
			break;

		default:		/* '?' */
			return(0);
		}
	}

	if( optind >= argc )  {
		if( isatty(fileno(stdin)) )
			return(0);
		file_name = "[stdin]";
		infp = stdin;
	} else {
		file_name = argv[optind];
		if( (infp = fopen(file_name, "r")) == NULL )  {
			(void)fprintf( stderr,
				"pix-ps: cannot open \"%s\" for reading\n",
				file_name );
			return(0);
		}
		/*fileinput++;*/
	}

	if ( argc > ++optind )
		(void)fprintf( stderr, "pix-ps: excess argument(s) ignored\n" );

	return(1);		/* OK */
}

int
main(int argc, char **argv)
{
	FILE	*ofp = stdout;
	int	num = 0;
	int	scans_per_patch, bytes_per_patch;
	int	y;

	outwidth = outheight = DEFAULT_SIZE;

	if ( !get_args( argc, argv ) )  {
		(void)fputs(usage, stderr);
		exit( 1 );
	}

	if( encapsulated ) {
		xpoints = width;
		ypoints = height;
	} else {
		xpoints = outwidth * 72 + 0.5;
		ypoints = outheight * 72 + 0.5;
	}
	prolog(ofp, file_name, xpoints, ypoints);

	scans_per_patch = MAX_BYTES / (width*3);
	if( scans_per_patch > height )
		scans_per_patch = height;
	bytes_per_patch = scans_per_patch * (width*3);

	for( y = 0; y < height; y += scans_per_patch ) {
		if (y + scans_per_patch > height) {
			scans_per_patch = height-y;
			bytes_per_patch = scans_per_patch * (width*3);
		}

		/* start a patch */
		fprintf(ofp, "save\n");
		fprintf(ofp, "%d %d 8 [%d 0 0 %d 0 %d] {<\n ",
			width, scans_per_patch,		/* patch size */
			width, height,			/* total size = 1.0 */
			-y );				/* patch y origin */

		/* data */
		num = 0;
		while( num < bytes_per_patch ) {
			/*fprintf( ofp, "%02x", getc(infp) );*/
			hexout(ofp,getc(infp));
			if( (++num % 32) == 0 )
				fprintf( ofp, "\n " );
		}

		/* close this patch */
		/*fprintf(ofp, ">} image\n"); BW*/
		fprintf(ofp, ">} false 3 colorimage\n");
		fprintf(ofp, "restore\n");
	}

	postlog( ofp );
	exit( 0 );
}

void
prolog(FILE *fp, char *name, int width, int height)
    	    
    	      
   	              		/* in points */
{
	time_t	ltime;

	ltime = time(0);

	if( encapsulated ) {
		fputs( "%!PS-Adobe-2.0 EPSF-1.2\n", fp );
		fprintf(fp, "%%%%Title: %s\n", name );
		fputs( "%%Creator: BRL-CAD pix-ps\n", fp );
		fprintf(fp, "%%%%CreationDate: %s", ctime(&ltime) );
		fputs( "%%Pages: 0\n", fp );
	} else {
		fputs( "%!PS-Adobe-1.0\n", fp );
		fputs( "%begin(plot)\n", fp );
		fprintf(fp, "%%%%Title: %s\n", name );
		fputs( "%%Creator: BRL-CAD pix-ps\n", fp );
		fprintf(fp, "%%%%CreationDate: %s", ctime(&ltime) );
	}
	fprintf(fp, "%%%%BoundingBox: 0 0 %d %d\n", width, height );
	fputs( "%%EndComments\n\n", fp );

	if( !encapsulated && landscape ) {
		int	tmp;
		tmp = pagewidth;
		pagewidth = pageheight;
		pageheight = tmp;
		fprintf( fp, "90 rotate\n" );
		fprintf( fp, "0 -%d translate\n", pageheight );
	}
	if( !encapsulated && center ) {
		int	xtrans, ytrans;
		xtrans = (pagewidth - width)/2.0;
		ytrans = (pageheight - height)/2.0;
		fprintf( fp, "%d %d translate\n", xtrans, ytrans );
	}
	fprintf( fp, "%d %d scale\n\n", width, height );
}

void
postlog(FILE *fp)
{
	if( !encapsulated )
		fputs( "%end(plot)\n", fp );

	fputs( "\nshowpage\n", fp );
}

/*
 * Print a byte in 2-character hexadecimal.
 */
void
hexout(FILE *fp, int byte)
         
         		/* 0 <= byte <= 255 */
{
	int high, low;
	static int symbol[16] = { '0', '1', '2', '3', '4', '5', '6',
		'7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f' };

	high = (byte>>4) & 0xf;
	low = byte & 0xf;

	putc(symbol[high], fp);
	putc(symbol[low], fp);
}
@


11.11
log
@change conf.h to a wrapped config.h
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/util/pix-ps.c,v 11.10 2004/04/05 05:46:02 morrison Exp $ (BRL)";
@


11.10
log
@merge of ansi-6-0-branch into head
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
d22 5
a26 1
#include "conf.h"
@


11.9
log
@update copyright to include span through 2003
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/pix-ps.c,v 11.8 2002/08/20 17:09:01 jra Exp $ (BRL)";
d50 1
a50 1
void prolog(), postlog(), hexout();
d58 1
a58 2
get_args( argc, argv )
register char **argv;
d130 1
a130 3
main( argc, argv )
int	argc;
char	**argv;
d191 4
a194 4
prolog( fp, name, width, height )
FILE	*fp;
char	*name;
int	width, height;		/* in points */
d234 1
a234 2
postlog( fp )
FILE	*fp;
d246 3
a248 3
hexout(fp,byte)
FILE *fp;
int byte;		/* 0 <= byte <= 255 */
@


11.8
log
@Restoration of entire source tree to Pre-Hartley state
@
text
@d15 1
a15 1
 *	This software is Copyright (C) 1986 by the United States Army.
d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/pix-ps.c,v 11.6 2001/08/08 03:28:16 butler Exp $ (BRL)";
@


11.8.4.1
log
@sync to HEAD...
@
text
@d15 1
a15 1
 *	This software is Copyright (C) 1986-2004 by the United States Army.
d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /n/cad/c/CVS/brlcad/util/pix-ps.c,v 11.9 2004/02/02 17:39:45 morrison Exp $ (BRL)";
@


11.8.10.1
log
@merge from HEAD
@
text
@d15 1
a15 1
 *	This software is Copyright (C) 1986-2004 by the United States Army.
d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/pix-ps.c,v 11.9 2004/02/02 17:39:45 morrison Exp $ (BRL)";
@


11.8.10.2
log
@merge from head
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/pix-ps.c,v 11.8.10.1 2004/02/12 19:43:10 erikg Exp $ (BRL)";
@


11.8.2.1
log
@Initial ANSIfication
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/pix-ps.c,v 11.8 2002/08/20 17:09:01 jra Exp $ (BRL)";
d50 1
a50 1
void prolog(FILE *fp, char *name, int width, int height), postlog(FILE *fp), hexout(FILE *fp, int byte);
d58 2
a59 1
get_args(int argc, register char **argv)
d131 3
a133 1
main(int argc, char **argv)
d194 4
a197 4
prolog(FILE *fp, char *name, int width, int height)
    	    
    	      
   	              		/* in points */
d237 2
a238 1
postlog(FILE *fp)
d250 3
a252 3
hexout(FILE *fp, int byte)
         
         		/* 0 <= byte <= 255 */
@


11.8.2.2
log
@sync branch with HEAD
@
text
@d15 1
a15 1
 *	This software is Copyright (C) 1986-2004 by the United States Army.
d19 1
a19 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
@


11.7
log
@Converted from K&R to ANSI C - RFH
@
text
@d50 1
a50 1
void prolog(FILE *fp, char *name, int width, int height), postlog(FILE *fp), hexout(FILE *fp, int byte);
d58 2
a59 1
get_args(int argc, register char **argv)
d131 3
a133 1
main(int argc, char **argv)
d194 4
a197 4
prolog(FILE *fp, char *name, int width, int height)
    	    
    	      
   	              		/* in points */
d237 2
a238 1
postlog(FILE *fp)
d250 3
a252 3
hexout(FILE *fp, int byte)
         
         		/* 0 <= byte <= 255 */
@


11.6
log
@Misc compiler warnings eliminated
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/pix-ps.c,v 11.5 2000/09/01 03:23:53 mike Exp $ (BRL)";
d50 1
a50 1
void prolog(), postlog(), hexout();
d58 1
a58 2
get_args( argc, argv )
register char **argv;
d130 1
a130 3
main( argc, argv )
int	argc;
char	**argv;
d191 4
a194 4
prolog( fp, name, width, height )
FILE	*fp;
char	*name;
int	width, height;		/* in points */
d234 1
a234 2
postlog( fp )
FILE	*fp;
d246 3
a248 3
hexout(fp,byte)
FILE *fp;
int byte;		/* 0 <= byte <= 255 */
@


11.5
log
@
Lint fix
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/pix-ps.c,v 11.4 2000/08/23 19:04:39 mike Exp $ (BRL)";
d57 1
@


11.4
log
@
const RCSid
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/pix-ps.c,v 11.3 2000/01/31 16:03:08 jra Exp $ (BRL)";
d129 1
@


11.3
log
@Eliminated some unused variables
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/pix-ps.c,v 11.2 1996/07/16 22:56:03 jra Exp $ (BRL)";
@


11.2
log
@Minor mods for IRIX 6.2
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/util/RCS/pix-ps.c,v 11.1 1995/01/04 10:12:25 mike Rel4_4 $ (BRL)";
a34 1
static int	inverse = 0;		/* inverse video (RFU) */
d62 1
a62 1
	while ( (c = getopt( argc, argv, "ehiclLs:w:n:S:W:N:" )) != EOF )  {
a70 3
			break;
		case 'i':
			inverse = 1;
@


11.1
log
@Release_4.4
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/util/RCS/pix-ps.c,v 10.5 94/11/08 04:32:20 mike Exp $ (BRL)";
d51 2
d195 1
d238 1
d251 1
@


10.5
log
@Irix 6
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/util/RCS/pix-ps.c,v 10.4 94/08/23 15:05:46 gdurf Exp Locker: mike $ (BRL)";
@


10.4
log
@Factored ifdefs
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/util/RCS/pix-ps.c,v 10.3 1992/05/14 16:26:24 phil Exp gdurf $ (BRL)";
d198 1
a198 1
	long	ltime;
@


10.3
log
@Fixed return code.
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/util/RCS/pix-ps.c,v 10.2 92/04/22 15:09:59 phil Exp Locker: phil $ (BRL)";
d22 2
d28 3
a32 4

extern int	getopt();
extern char	*optarg;
extern int	optind;
@


10.2
log
@Fixed bug where unusual image sizes would result in unfull image
blocks.  This could produce stripes at the top of the image, or
worse, some printer wouldn't print anything as a result.
Made page centering the default and added -l lower-left option.
Sped it up quite a bit by adding a hexout routine (sans printf).
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/util/RCS/pix-ps.c,v 10.1 91/10/12 06:48:27 mike Rel4_0 $ (BRL)";
d189 1
@


10.1
log
@Release_4.0
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/util/RCS/pix-ps.c,v 1.1 90/11/03 14:50:39 phil Exp $ (BRL)";
d35 1
a35 1
static int	center = 0;		/* center output on 8.5 x 11 page */
d51 1
a51 1
Usage: pix-ps [-e] [-c] [-L] [-h]\n\
d60 1
a60 1
	while ( (c = getopt( argc, argv, "ehicLs:w:n:S:W:N:" )) != EOF )  {
d76 3
d161 5
d176 2
a177 1
			fprintf( ofp, "%02x", getc(infp) );
d240 18
@


1.1
log
@Initial revision
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: pix-ps.c,v 9.2 89/08/28 21:37:53 phil Exp $ (BRL)";
@
