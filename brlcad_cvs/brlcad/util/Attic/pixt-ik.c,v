head	11.6;
access;
symbols
	ansi-20040405-merged:11.4.2.1
	postmerge-20040405-ansi:11.5
	premerge-20040404-ansi:11.4
	postmerge-autoconf:11.4
	autoconf-freeze:11.4
	premerge-autoconf:11.4
	postmerge-20040315-windows:11.4
	premerge-20040315-windows:11.4
	windows-20040315-freeze:11.4
	autoconf-20031203:11.4
	autoconf-20031202:11.4
	autoconf-branch:11.4.0.10
	phong-branch:11.4.0.8
	photonmap-branch:11.4.0.6
	rel-6-1-DP:11.4
	windows-branch:11.4.0.4
	rel-6-0-2:11.2
	ansi-branch:11.4.0.2
	rel-6-0-1-branch:11.2.0.2
	hartley-6-0-post:11.3
	hartley-6-0-pre:11.2
	rel-6-0-1:11.2
	rel-6-0:11.2
	rel-5-4:11.1
	offsite-5-3-pre:11.2
	rel-5-3:11.1
	rel-5-2:11.1
	rel-5-1-branch:11.1.0.2
	rel-5-1:11.1
	rel-5-0:11.1
	rel-5-0-beta:11.1
	rel-4-5:11.1
	ctj-4-5-post:11.1
	ctj-4-5-pre:11.1
	rel-4-4:11.1
	rel-4-0:1.2
	rel-3-5:1.2
	rel-3-0:1.2
	rel-2-3:1.2
	rel-2-0:1.2
	rel-1-24:1.2
	rel-1-20:1.2
	rel-1-10:1.2;
locks; strict;
comment	@ * @;


11.6
date	2004.05.21.14.57.57;	author morrison;	state dead;
branches;
next	11.5;

11.5
date	2004.04.05.05.46.02;	author morrison;	state Exp;
branches;
next	11.4;

11.4
date	2002.08.20.17.09.04;	author jra;	state Exp;
branches
	11.4.2.1;
next	11.3;

11.3
date	2002.08.15.20.56.16;	author hartley;	state Exp;
branches;
next	11.2;

11.2
date	2000.09.01.03.24.00;	author mike;	state Exp;
branches;
next	11.1;

11.1
date	95.01.04.10.13.02;	author mike;	state Rel4_4;
branches;
next	1.2;

1.2
date	86.05.16.03.32.16;	author mike;	state Exp;
branches;
next	1.1;

1.1
date	86.05.15.17.22.09;	author mike;	state Exp;
branches;
next	;

11.4.2.1
date	2002.09.19.18.02.43;	author morrison;	state Exp;
branches;
next	;


desc
@Display blocked (tape) .pix files on Ikonas
@


11.6
log
@moved to src/util/
@
text
@/*
 *  			P I X T - I K . C
 *  
 *  Dumb little program to take bottom-up pixel files and
 *  send them to the Ikonas.
 *  This version expects the .pix files to be comming from a raw
 *  magtape with a block size of 24k, regardless of resolution.
 *  
 *  Mike Muuss, BRL.
 *
 *  $Revision: 11.5 $
 */
#include <stdio.h>

extern int ikfd;
extern int ikhires;

#define BLOCKSIZE	(24*1024)	/* Size of tape record */

#define MAX_LINE	1024		/* Max pixels/line */
static char scanline[BLOCKSIZE];	/* multi-scanline pixel buffer */
static int scanbytes;			/* # of bytes of one scanline */

static char outline[MAX_LINE*4];	/* Ikonas pixels */
int reverse = 0;		/* rotate picture 180 degrees if non-zero */

char usage[] = "Usage: pixt-ik [-h] [-r] file.pix [width]\n";

int
main(int argc, char **argv)
{
	static int y;
	static int infd;
	static int nlines;		/* Square:  nlines, npixels/line */
	static int lines_per_block;
	static int j;

	if( argc < 2 )  {
		fprintf(stderr,"%s", usage);
		exit(1);
	}

	nlines = 512;
	while( argv[1][0] == '-' )  {
		if( strcmp( argv[1], "-h" ) == 0 )  {
			nlines = 1024;
			argc--; argv++;
			ikhires = 1;
			continue;
		}
		if( strcmp( argv[1], "-r" ) == 0 )  {
			reverse = 1;
			argc--; argv++;
			continue;
		}
	}
	if( (infd = open( argv[1], 0 )) < 0 )  {
		perror( argv[1] );
		exit(3);
	}
	if( argc >= 3 )
		nlines = atoi(argv[2] );
	if( nlines > 512 )
		ikhires = 1;

	scanbytes = nlines * 3;
	lines_per_block = BLOCKSIZE / scanbytes;

	ikopen();
	ikclear();

	if( !reverse )  {
		/* Normal mode */
		for( y = nlines-1; y >= 0; )  {
			register char *in;
			if( read( infd, (char *)scanline, BLOCKSIZE ) != BLOCKSIZE )
				exit(0);

			in = scanline;
			for( j=0; j<lines_per_block; j++ )  {
				register char *out;
				register int i;

				out = outline;
				for( i=0; i<nlines; i++ )  {
					*out++ = *in++;
					*out++ = *in++;
					*out++ = *in++;
					*out++ = 0;
				}
				clustwrite( outline, y--, nlines );
			}
		}
	} else {
		/* Rotate 180 degrees, for Dunn camera */
		for( y=0; y < nlines; )  {
			register char *in;

			if( read( infd, (char *)scanline, BLOCKSIZE ) != BLOCKSIZE )
				exit(0);

			in = scanline;
			for( j=0; j<lines_per_block; j++ )  {
				register char *out;

				out = outline+(4*nlines)-1;
				while( out > outline )  {
					*out-- = 0;
					*out-- = in[2];
					*out-- = in[1];
					*out-- = *in;
					in += 3;
				}
				clustwrite( outline, y++, nlines );
			}
		}
	}
	if( read( infd, (char *)scanline, BLOCKSIZE ) > 0 )
		printf("EOF missing?\n");
	exit(0);
}
@


11.5
log
@merge of ansi-6-0-branch into head
@
text
@d11 1
a11 1
 *  $Revision$
@


11.4
log
@Restoration of entire source tree to Pre-Hartley state
@
text
@d11 1
a11 1
 *  $Revision: 11.2 $
d30 1
a30 3
main(argc, argv)
int argc;
char **argv;
@


11.4.2.1
log
@Initial ANSIfication
@
text
@d11 1
a11 1
 *  $Revision: 11.4 $
d30 3
a32 1
main(int argc, char **argv)
@


11.3
log
@Converted from K&R to ANSI C - RFH
@
text
@d30 3
a32 1
main(int argc, char **argv)
@


11.2
log
@
Lint fix
@
text
@d11 1
a11 1
 *  $Revision: 11.1 $
d30 1
a30 3
main(argc, argv)
int argc;
char **argv;
@


11.1
log
@Release_4.4
@
text
@d11 1
a11 1
 *  $Revision: 1.2 $
d29 1
@


1.2
log
@Added -r flag for Dunn
@
text
@d11 1
a11 1
 *  $Revision: 1.1 $
@


1.1
log
@Initial revision
@
text
@d11 1
a11 1
 *  $Revision: 1.6 $
d25 1
d27 1
a27 1
char usage[] = "Usage: pixt-ik [-h] file.pix [width]\n";
d45 12
a56 4
	if( strcmp( argv[1], "-h" ) == 0 )  {
		nlines = 1024;
		argc--; argv++;
		ikhires = 1;
d73 6
a78 4
	for( y = nlines-1; y >= 0; )  {
		register char *in;
		if( read( infd, (char *)scanline, BLOCKSIZE ) != BLOCKSIZE )
			exit(0);
d80 4
a83 4
		in = scanline;
		for( j=0; j<lines_per_block; j++ )  {
			register char *out;
			register int i;
d85 8
a92 6
			out = outline;
			for( i=0; i<nlines; i++ )  {
				*out++ = *in++;
				*out++ = *in++;
				*out++ = *in++;
				*out++ = 0;
d94 23
a116 1
			clustwrite( outline, y--, nlines );
@
