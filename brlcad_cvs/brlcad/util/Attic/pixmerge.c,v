head	11.11;
access;
symbols
	ansi-20040405-merged:11.7.2.2
	postmerge-20040405-ansi:11.9
	premerge-20040404-ansi:11.8
	postmerge-autoconf:11.8
	autoconf-freeze:11.7.10.2
	premerge-autoconf:11.8
	postmerge-20040315-windows:11.8
	premerge-20040315-windows:11.8
	windows-20040315-freeze:11.7.4.1
	autoconf-20031203:11.7
	autoconf-20031202:11.7
	autoconf-branch:11.7.0.10
	phong-branch:11.7.0.8
	photonmap-branch:11.7.0.6
	rel-6-1-DP:11.7
	windows-branch:11.7.0.4
	rel-6-0-2:11.5
	ansi-branch:11.7.0.2
	rel-6-0-1-branch:11.5.0.2
	hartley-6-0-post:11.6
	hartley-6-0-pre:11.5
	rel-6-0-1:11.5
	rel-6-0:11.5
	rel-5-4:11.2
	offsite-5-3-pre:11.4
	rel-5-3:11.2
	rel-5-2:11.2
	rel-5-1-branch:11.2.0.2
	rel-5-1:11.2
	rel-5-0:11.2
	rel-5-0-beta:11.2
	rel-4-5:11.1
	ctj-4-5-post:11.1
	ctj-4-5-pre:11.1
	rel-4-4:11.1
	rel-4-0:10.1
	rel-3-5:9.1
	rel-3-0:8.1
	rel-2-3:7.1
	rel-2-0:5.1
	rel-1-24:5.1
	rel-1-20:4.2;
locks; strict;
comment	@ * @;


11.11
date	2004.05.21.14.57.55;	author morrison;	state dead;
branches;
next	11.10;

11.10
date	2004.05.10.15.30.51;	author erikg;	state Exp;
branches;
next	11.9;

11.9
date	2004.04.05.05.46.02;	author morrison;	state Exp;
branches;
next	11.8;

11.8
date	2004.02.02.17.39.48;	author morrison;	state Exp;
branches;
next	11.7;

11.7
date	2002.08.20.17.09.03;	author jra;	state Exp;
branches
	11.7.2.1
	11.7.4.1
	11.7.10.1;
next	11.6;

11.6
date	2002.08.15.20.56.15;	author hartley;	state Exp;
branches;
next	11.5;

11.5
date	2001.08.10.20.57.07;	author butler;	state Exp;
branches;
next	11.4;

11.4
date	2000.09.01.03.23.58;	author mike;	state Exp;
branches;
next	11.3;

11.3
date	2000.08.23.19.04.54;	author mike;	state Exp;
branches;
next	11.2;

11.2
date	98.09.14.15.59.24;	author bparker;	state Exp;
branches;
next	11.1;

11.1
date	95.01.04.10.12.53;	author mike;	state Rel4_4;
branches;
next	10.2;

10.2
date	94.08.23.15.06.01;	author gdurf;	state Exp;
branches;
next	10.1;

10.1
date	91.10.12.06.48.49;	author mike;	state Rel4_0;
branches;
next	9.1;

9.1
date	89.05.19.06.10.39;	author mike;	state Rel3_5;
branches;
next	8.1;

8.1
date	88.10.05.00.43.03;	author mike;	state Rel3_0;
branches;
next	7.4;

7.4
date	88.07.29.03.08.28;	author phil;	state Exp;
branches;
next	7.2;

7.2
date	88.01.15.08.54.03;	author stay;	state Exp;
branches;
next	7.1;

7.1
date	87.11.03.00.08.54;	author mike;	state Rel;
branches;
next	6.1;

6.1
date	87.07.11.08.12.16;	author mike;	state Rel;
branches;
next	5.1;

5.1
date	87.06.24.22.43.04;	author mike;	state Rel;
branches;
next	4.3;

4.3
date	87.05.22.03.28.27;	author mike;	state Exp;
branches;
next	4.2;

4.2
date	87.02.13.00.44.53;	author mike;	state Exp;
branches;
next	4.1;

4.1
date	87.01.09.18.20.12;	author mike;	state Rel1;
branches;
next	1.2;

1.2
date	87.01.05.08.37.03;	author mike;	state Exp;
branches;
next	1.1;

1.1
date	87.01.05.07.25.20;	author mike;	state Exp;
branches;
next	;

11.7.2.1
date	2002.09.19.18.02.42;	author morrison;	state Exp;
branches;
next	11.7.2.2;

11.7.2.2
date	2004.03.17.21.23.31;	author morrison;	state Exp;
branches;
next	;

11.7.4.1
date	2004.03.11.23.52.34;	author morrison;	state Exp;
branches;
next	;

11.7.10.1
date	2004.02.12.19.43.11;	author erikg;	state Exp;
branches;
next	11.7.10.2;

11.7.10.2
date	2004.03.15.14.08.14;	author erikg;	state Exp;
branches;
next	;


desc
@Program to merge two byte streams, depending on their
relationship to each other, or to a constant.
@


11.11
log
@moved to src/util/
@
text
@/*
 *  			P I X M E R G E . C
 *  
 *  Given two streams of data, typically pix(5) or bw(5) images,
 *  generate an output stream of the same size, where the value of
 *  the output is determined by a formula involving the first
 *  (foreground) stream and a constant, or the value of the second
 *  (background) stream.
 *
 *  This routine operates on a pixel-by-pixel basis, and thus
 *  is independent of the resolution of the image.
 *  
 *  Author -
 *	Michael John Muuss
 *  
 *  Source -
 *	SECAD/VLD Computing Consortium, Bldg 394
 *	The U. S. Army Ballistic Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5066
 *  
 *  Copyright Notice -
 *	This software is Copyright (C) 1986-2004 by the United States Army.
 *	All rights reserved.
 */
#ifndef lint
static const char RCSid[] = "@@(#)$Header: /n/xoff/cvs/brlcad/util/pixmerge.c,v 11.10 2004/05/10 15:30:51 erikg Exp $ (BRL)";
#endif

#ifdef HAVE_CONFIG_H
# include "config.h"
#endif



#include <stdio.h>
#ifdef HAVE_STRING_H
#include <string.h>
#else
#include <strings.h>
#endif

#include "machine.h"
#include "externs.h"			/* For malloc and getopt */

static char	*f1_name;
static char	*f2_name;
static FILE	*f1;
static FILE	*f2;

#define LT	1
#define EQ	2
#define GT	4
#define NE	8
static int	wanted;			/* LT|EQ|GT conditions to pick fb */

static int	seen_const;
static int	seen_formula;

static int	width = 3;
static unsigned char	pconst[32];

#define CHUNK	1024
static char	*b1;			/* fg input buffer */
static char	*b2;			/* bg input buffer */
static char	*b3;			/* output buffer */

static long	fg_cnt;
static long	bg_cnt;

static char usage[] = "\
Usage: pixmerge [-g -l -e -n] [-w bytes_wide] [-C r/g/b]\n\
	foreground.pix background.pix > out.pix\n";

int
get_args(int argc, register char **argv)
{
	register int c;

	while ( (c = getopt( argc, argv, "glenw:C:c:" )) != EOF )  {
		switch( c )  {
		case 'g':
			wanted |= GT;
			seen_formula = 1;
			break;
		case 'l':
			wanted |= LT;
			seen_formula = 1;
			break;
		case 'e':
			wanted |= EQ;
			seen_formula = 1;
			break;
		case 'n':
			wanted |= NE;
			seen_formula = 1;
			break;
		case 'w':
			c = atoi(optarg);
			if( c > 1 && c < sizeof(pconst) )
				width = c;
			break;
		case 'C':
		case 'c':	/* backword compatability */
			{
				register char *cp = optarg;
				register unsigned char *conp = pconst;

				/* premature null => atoi gives zeros */
				for( c=0; c < width; c++ )  {
					*conp++ = atoi(cp);
					while( *cp && *cp++ != '/' ) ;
				}
			}
			seen_const = 1;
			break;

		default:		/* '?' */
			return(0);
		}
	}

	if( optind+2 > argc )
		return(0);

	f1_name = argv[optind++];
	if( strcmp( f1_name, "-" ) == 0 )
		f1 = stdin;
	else if( (f1 = fopen(f1_name, "r")) == NULL )  {
		perror(f1_name);
		(void)fprintf( stderr,
			"pixmerge: cannot open \"%s\" for reading\n",
			f1_name );
		return(0);
	}

	f2_name = argv[optind++];
	if( strcmp( f2_name, "-" ) == 0 )
		f2 = stdin;
	else if( (f2 = fopen(f2_name, "r")) == NULL )  {
		perror(f2_name);
		(void)fprintf( stderr,
			"pixmerge: cannot open \"%s\" for reading\n",
			f2_name );
		return(0);
	}

	if ( argc > optind )
		(void)fprintf( stderr, "pixmerge: excess argument(s) ignored\n" );

	return(1);		/* OK */
}

int
main(int argc, char **argv)
{

	if ( !get_args( argc, argv ) || isatty(fileno(stdout)) )  {
		(void)fputs(usage, stderr);
		exit( 1 );
	}

	if( !seen_formula )  {
		wanted = GT;
		seen_const = 1;		/* Default is const of 0/0/0 */
	}
	fprintf(stderr, "pixmerge: Selecting foreground when fg ");
	if( wanted & LT )  putc( '<', stderr );
	if( wanted & EQ )  putc( '=', stderr );
	if( wanted & GT )  putc( '>', stderr );
	if( wanted & NE )  fprintf( stderr, "!=" );
	if( seen_const )  {
		register int i;

		putc( ' ', stderr );
		for( i = 0; i < width; i++ )  {
			fprintf( stderr, "%d", pconst[i] );
			if( i < width-1 )
				putc( '/', stderr );
		}
		putc( '\n', stderr );
	} else {
		fprintf( stderr, " bg\n" );
	}

	if( (b1 = malloc( width*CHUNK )) == (char *)0 ||
	    (b2 = malloc( width*CHUNK )) == (char *)0 ||
	    (b3 = malloc( width*CHUNK )) == (char *)0 ) {
	    	fprintf(stderr, "pixmerge:  malloc failure\n");
	    	exit(3);
	}

	while(1)  {
		unsigned char	*cb1, *cb2;	/* current input buf ptrs */
		register unsigned char	*cb3; 	/* current output buf ptr */
		unsigned char	*ebuf;		/* end ptr in b1 */
		int r1, r2, len;

		r1 = fread( b1, width, CHUNK, f1 );
		r2 = fread( b2, width, CHUNK, f2 );
		len = r1;
		if( r2 < len )
			len = r2;
		if( len <= 0 )
			break;

		cb1 = (unsigned char *)b1;
		cb2 = (unsigned char *)b2;
		cb3 = (unsigned char *)b3;
		ebuf = cb1 + width*len;
		for( ; cb1 < ebuf; cb1 += width, cb2 += width )  {
			/*
			 * Stated condition must hold for all input bytes
			 * to select the foreground for output
			 */
			register unsigned char	*ap, *bp;
			register unsigned char	*ep;		/* end ptr */

			ap = cb1;
			if( seen_const )
				bp = pconst;
			else
				bp = cb2;
			if( wanted & NE )  {
				for( ep = cb1+width; ap < ep; ap++,bp++ )  {
					if( *ap != *bp )
						goto success;
				}
				goto fail;
			} else {
				for( ep = cb1+width; ap < ep; ap++,bp++ )  {
					if( *ap > *bp )  {
						if( !(GT & wanted) ) goto fail;
					} else if( *ap == *bp )  {
						if( !(EQ & wanted) ) goto fail;
					} else  {
						if( !(LT & wanted) ) goto fail;
					}
				}
			}
success:
			{
				register int i;
				ap = cb1;
				for( i=0; i<width; i++ )
					*cb3++ = *ap++;
			}
			fg_cnt++;
			continue;
fail:
			{
				register int i;
				bp = cb2;
				for( i=0; i<width; i++ )
					*cb3++ = *bp++;
			}
			bg_cnt++;
		}
		fwrite( b3, width, len, stdout );
	}
	fprintf( stderr, "pixmerge: %ld foreground, %ld background\n",
		fg_cnt, bg_cnt );
	exit(0);
}
@


11.10
log
@change conf.h to a wrapped config.h
@
text
@d26 1
a26 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/util/pixmerge.c,v 11.9 2004/04/05 05:46:02 morrison Exp $ (BRL)";
@


11.9
log
@merge of ansi-6-0-branch into head
@
text
@d26 1
a26 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
d29 5
a33 1
#include "conf.h"
@


11.8
log
@update copyright to include span through 2003
@
text
@d26 1
a26 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/pixmerge.c,v 11.7 2002/08/20 17:09:03 jra Exp $ (BRL)";
d71 1
a71 2
get_args( argc, argv )
register char **argv;
d150 1
a150 3
main(argc, argv)
int argc;
char **argv;
@


11.7
log
@Restoration of entire source tree to Pre-Hartley state
@
text
@d22 1
a22 1
 *	This software is Copyright (C) 1986 by the United States Army.
d26 1
a26 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/pixmerge.c,v 11.5 2001/08/10 20:57:07 butler Exp $ (BRL)";
@


11.7.4.1
log
@sync to HEAD...
@
text
@d22 1
a22 1
 *	This software is Copyright (C) 1986-2004 by the United States Army.
d26 1
a26 1
static const char RCSid[] = "@@(#)$Header: /n/cad/c/CVS/brlcad/util/pixmerge.c,v 11.8 2004/02/02 17:39:48 morrison Exp $ (BRL)";
@


11.7.10.1
log
@merge from HEAD
@
text
@d22 1
a22 1
 *	This software is Copyright (C) 1986-2004 by the United States Army.
d26 1
a26 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/pixmerge.c,v 11.8 2004/02/02 17:39:48 morrison Exp $ (BRL)";
@


11.7.10.2
log
@merge from head
@
text
@d26 1
a26 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/pixmerge.c,v 11.7.10.1 2004/02/12 19:43:11 erikg Exp $ (BRL)";
@


11.7.2.1
log
@Initial ANSIfication
@
text
@d26 1
a26 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/pixmerge.c,v 11.7 2002/08/20 17:09:03 jra Exp $ (BRL)";
d71 2
a72 1
get_args(int argc, register char **argv)
d151 3
a153 1
main(int argc, char **argv)
@


11.7.2.2
log
@sync branch with HEAD
@
text
@d22 1
a22 1
 *	This software is Copyright (C) 1986-2004 by the United States Army.
d26 1
a26 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
@


11.6
log
@Converted from K&R to ANSI C - RFH
@
text
@d71 2
a72 1
get_args(int argc, register char **argv)
d151 3
a153 1
main(int argc, char **argv)
@


11.5
log
@Misc compiler warnings eliminated
@
text
@d26 1
a26 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/pixmerge.c,v 11.4 2000/09/01 03:23:58 mike Exp $ (BRL)";
d71 1
a71 2
get_args( argc, argv )
register char **argv;
d150 1
a150 3
main(argc, argv)
int argc;
char **argv;
@


11.4
log
@
Lint fix
@
text
@d26 1
a26 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/pixmerge.c,v 11.3 2000/08/23 19:04:54 mike Exp $ (BRL)";
d32 5
d70 1
@


11.3
log
@
const RCSid
@
text
@d26 1
a26 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/pixmerge.c,v 11.2 1998/09/14 15:59:24 bparker Exp $ (BRL)";
d144 1
@


11.2
log
@*- fix typos
@
text
@d26 1
a26 1
static char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/pixmerge.c,v 11.1 1995/01/04 10:12:53 mike Rel4_4 $ (BRL)";
@


11.1
log
@Release_4.4
@
text
@d26 1
a26 1
static char RCSid[] = "@@(#)$Header: /m/cad/util/RCS/pixmerge.c,v 10.2 94/08/23 15:06:01 gdurf Exp $ (BRL)";
d252 1
a252 1
	fprintf( stderr, "pixmerge: %d foreground, %d background\n",
@


10.2
log
@Factored ifdefs
@
text
@d26 1
a26 1
static char RCSid[] = "@@(#)$Header: /m/cad/util/RCS/pixmerge.c,v 10.1 1991/10/12 06:48:49 mike Rel4_0 gdurf $ (BRL)";
@


10.1
log
@Release_4.0
@
text
@d26 1
a26 1
static char RCSid[] = "@@(#)$Header: /m/cad/util/RCS/pixmerge.c,v 9.1 89/05/19 06:10:39 mike Rel3_5 $ (BRL)";
d29 2
d33 2
a34 5
extern int	getopt();
extern char	*optarg;
extern int	optind;

extern char	*malloc();
@


9.1
log
@Release_3.5
@
text
@d26 1
a26 1
static char RCSid[] = "@@(#)$Header: pixmerge.c,v 8.1 88/10/05 00:43:03 mike Rel3_0 $ (BRL)";
@


8.1
log
@Release_3.0
@
text
@d26 1
a26 1
static char RCSid[] = "@@(#)$Header: pixmerge.c,v 7.4 88/07/29 03:08:28 phil Exp $ (BRL)";
@


7.4
log
@-c r/g/b to -C r/g/b
@
text
@d26 1
a26 1
static char RCSid[] = "@@(#)$Header: pixmerge.c,v 7.3 88/07/29 03:00:47 phil Locked $ (BRL)";
@


7.2
log
@const is a reserved word on some machines so it was changed to pconst
@
text
@d26 1
a26 1
static char RCSid[] = "@@(#)$Header: pixmerge.c,v 7.1 87/11/03 00:08:54 stay Locked $ (BRL)";
d63 1
a63 1
Usage: pixmerge [-g -l -e -n] [-w bytes_wide] [-c r/g/b]\n\
d71 1
a71 1
	while ( (c = getopt( argc, argv, "glenw:c:" )) != EOF )  {
d94 2
a95 1
		case 'c':
@


7.1
log
@Release 2.3
@
text
@d26 1
a26 1
static char RCSid[] = "@@(#)$Header: pixmerge.c,v 6.1 87/07/11 08:12:16 mike Rel $ (BRL)";
d52 1
a52 1
static unsigned char	const[32];
d91 1
a91 1
			if( c > 1 && c < sizeof(const) )
d97 1
a97 1
				register unsigned char *conp = const;
d168 1
a168 1
			fprintf( stderr, "%d", const[i] );
d212 1
a212 1
				bp = const;
@


6.1
log
@Release 2.0
@
text
@d26 1
a26 1
static char RCSid[] = "@@(#)$Header: pixmerge.c,v 5.1 87/06/24 22:43:04 mike Rel $ (BRL)";
@


5.1
log
@Release 1.24
@
text
@d26 1
a26 1
static char RCSid[] = "@@(#)$Header: pixmerge.c,v 4.3 87/05/22 03:28:27 mike Exp $ (BRL)";
@


4.3
log
@Fixed not-equal tests
@
text
@d26 1
a26 1
static char RCSid[] = "@@(#)$Header: pixmerge.c,v 4.2 87/02/13 00:44:53 mike Locked $ (BRL)";
@


4.2
log
@Release 1.20 -- First Formal Release
@
text
@d26 1
a26 1
static char RCSid[] = "@@(#)$Header: pixmerge.c,v 4.1 87/01/09 18:20:12 mike Rel1 $ (BRL)";
d45 1
d86 1
a86 1
			wanted |= GT|LT;
d162 1
d215 4
a218 7
			for( ep = cb1+width; ap < ep; ap++,bp++ )  {
				if( *ap > *bp )  {
					if( !(GT & wanted) ) goto fail;
				} else if( *ap == *bp )  {
					if( !(EQ & wanted) ) goto fail;
				} else  {
					if( !(LT & wanted) ) goto fail;
d220 11
d232 1
a232 1
			/* success */
@


4.1
log
@Rel 1.15
@
text
@d26 1
a26 1
static char RCSid[] = "@@(#)$Header: pixmerge.c,v 1.2 87/01/05 08:37:03 mike Locked $ (BRL)";
@


1.2
log
@Greatly improved speed
@
text
@d26 1
a26 1
static char RCSid[] = "@@(#)$Header: pixmerge.c,v 4.1 86/12/29 03:13:20 mike Rel1 $ (BRL)";
@


1.1
log
@Initial revision
@
text
@d35 2
a51 2
static unsigned char	fg[32];
static unsigned char	bg[32];
d53 8
a146 1
	register int i;
d157 1
a157 1
	fprintf(stderr, "Selecting foreground when fg ");
d162 2
d165 5
a169 2
		for( i = 0; i < width; i++ )
			fprintf( stderr, "%d/", const[i] );
d175 7
d183 4
a186 2
		register unsigned char	*ap, *bp;
		register unsigned char	*ep;		/* end ptr */
d188 6
a193 2
		if( fread( fg, width, 1, f1 ) != 1 ||
		    fread( bg, width, 1, f2 ) != 1 )
d196 25
a220 16
		/*
		 * Stated condition must hold for all input bytes
		 * to select the foreground for output
		 */
		ap = fg;
		if( seen_const )
			bp = const;
		else
			bp = bg;
		for( ep = fg+width; ap < ep; ap++,bp++ )  {
			if( *ap > *bp )  {
				if( !(GT & wanted) ) goto fail;
			} else if( *ap == *bp )  {
				if( !(EQ & wanted) ) goto fail;
			} else  {
				if( !(LT & wanted) ) goto fail;
d222 17
d240 1
a240 5
		/* success */
		fwrite( fg, width, 1, stdout );
		continue;
fail:
		fwrite( bg, width, 1, stdout );
d242 2
@
