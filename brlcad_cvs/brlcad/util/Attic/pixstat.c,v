head	11.11;
access;
symbols
	ansi-20040405-merged:11.7.2.2
	postmerge-20040405-ansi:11.9
	premerge-20040404-ansi:11.8
	postmerge-autoconf:11.8
	autoconf-freeze:11.7.10.2
	premerge-autoconf:11.8
	postmerge-20040315-windows:11.8
	premerge-20040315-windows:11.8
	windows-20040315-freeze:11.7.4.1
	autoconf-20031203:11.7
	autoconf-20031202:11.7
	autoconf-branch:11.7.0.10
	phong-branch:11.7.0.8
	photonmap-branch:11.7.0.6
	rel-6-1-DP:11.7
	windows-branch:11.7.0.4
	rel-6-0-2:11.5
	ansi-branch:11.7.0.2
	rel-6-0-1-branch:11.5.0.2
	hartley-6-0-post:11.6
	hartley-6-0-pre:11.5
	rel-6-0-1:11.5
	rel-6-0:11.5
	rel-5-4:11.2
	offsite-5-3-pre:11.4
	rel-5-3:11.2
	rel-5-2:11.2
	rel-5-1-branch:11.2.0.2
	rel-5-1:11.2
	rel-5-0:11.2
	rel-5-0-beta:11.2
	rel-4-5:11.1
	ctj-4-5-post:11.1
	ctj-4-5-pre:11.1
	rel-4-4:11.1
	rel-4-0:10.1
	rel-3-5:9.1
	rel-3-0:8.1
	rel-2-3:7.1
	rel-2-0:5.1
	rel-1-24:5.1
	rel-1-20:4.2
	rel-1-10:4.1;
locks; strict;
comment	@ * @;


11.11
date	2004.05.21.14.57.57;	author morrison;	state dead;
branches;
next	11.10;

11.10
date	2004.05.10.15.30.51;	author erikg;	state Exp;
branches;
next	11.9;

11.9
date	2004.04.05.05.46.02;	author morrison;	state Exp;
branches;
next	11.8;

11.8
date	2004.02.02.17.39.50;	author morrison;	state Exp;
branches;
next	11.7;

11.7
date	2002.08.20.17.09.04;	author jra;	state Exp;
branches
	11.7.2.1
	11.7.4.1
	11.7.10.1;
next	11.6;

11.6
date	2002.08.15.20.56.16;	author hartley;	state Exp;
branches;
next	11.5;

11.5
date	2001.08.10.20.57.07;	author butler;	state Exp;
branches;
next	11.4;

11.4
date	2000.09.01.03.24.00;	author mike;	state Exp;
branches;
next	11.3;

11.3
date	2000.08.23.19.04.57;	author mike;	state Exp;
branches;
next	11.2;

11.2
date	98.09.14.15.59.24;	author bparker;	state Exp;
branches;
next	11.1;

11.1
date	95.01.04.10.13.02;	author mike;	state Rel4_4;
branches;
next	10.1;

10.1
date	91.10.12.06.48.57;	author mike;	state Rel4_0;
branches;
next	9.1;

9.1
date	89.05.19.06.10.52;	author mike;	state Rel3_5;
branches;
next	8.1;

8.1
date	88.10.05.00.43.17;	author mike;	state Rel3_0;
branches;
next	7.3;

7.3
date	88.09.01.05.23.36;	author phil;	state Exp;
branches;
next	7.2;

7.2
date	88.05.16.00.06.57;	author mike;	state Exp;
branches;
next	7.1;

7.1
date	87.11.03.00.09.10;	author mike;	state Rel;
branches;
next	6.1;

6.1
date	87.07.11.08.12.34;	author mike;	state Rel;
branches;
next	5.1;

5.1
date	87.06.24.22.43.24;	author mike;	state Rel;
branches;
next	4.2;

4.2
date	87.02.13.00.46.07;	author mike;	state Exp;
branches;
next	4.1;

4.1
date	86.12.29.03.13.54;	author mike;	state Rel1;
branches;
next	1.1;

1.1
date	86.08.14.21.55.58;	author mike;	state Exp;
branches;
next	;

11.7.2.1
date	2002.09.19.18.02.43;	author morrison;	state Exp;
branches;
next	11.7.2.2;

11.7.2.2
date	2004.03.17.21.23.32;	author morrison;	state Exp;
branches;
next	;

11.7.4.1
date	2004.03.11.23.52.34;	author morrison;	state Exp;
branches;
next	;

11.7.10.1
date	2004.02.12.19.43.11;	author erikg;	state Exp;
branches;
next	11.7.10.2;

11.7.10.2
date	2004.03.15.14.08.19;	author erikg;	state Exp;
branches;
next	;


desc
@Print statistics about a .pix file
@


11.11
log
@moved to src/util/
@
text
@/*
 *		P I X S T A T . C
 *
 * Compute statistics of pixels in a PIX file.
 * Gives min, max, mode, median, mean, s.d., var, and skew
 * for each color.
 * Will optionally dump the histogram of values.
 *
 * We compute these from a histogram which is a real win for
 * discrete values of small range.  Statistics can then be
 * calculated on the lump sums in the bins rather than individual
 * samples.  Also only one pass is required over the input file.
 * (lastly, some statistics such as mode and median, require the
 *  histogram)
 *
 *  Author -
 *	Phillip Dykstra
 *	6 Aug 1986
 *  
 *  Source -
 *	SECAD/VLD Computing Consortium, Bldg 394
 *	The U. S. Army Ballistic Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5066
 *  
 *  Copyright Notice -
 *	This software is Copyright (C) 1986-2004 by the United States Army.
 *	All rights reserved.
 */
#ifndef lint
static const char RCSid[] = "@@(#)$Header: /n/xoff/cvs/brlcad/util/pixstat.c,v 11.10 2004/05/10 15:30:51 erikg Exp $ (BRL)";
#endif

#ifdef HAVE_CONFIG_H
# include "config.h"
#endif



#include <stdio.h>
#ifdef HAVE_STRING_H
#include <string.h>
#else
#include <strings.h>
#endif
#include <unistd.h>
#include <stdlib.h>
#include <math.h>

#define	IBUFSIZE 3*1024		/* Max read size in rgb pixels */
unsigned char buf[IBUFSIZE];	/* Input buffer */

int	verbose = 0;

/* our statistics pool */
struct	{
	long	bin[256];
	int	max, min, mode, median;
	double	mean, var, skew;
	long	sum, partial_sum;
} r, g, b;

void	show_hist(void);

static char *Usage = "usage: pixstat [-v] [file.pix]\n";

int
main(int argc, char **argv)
{
	int	i, n, num;
	double	d;
	long	num_pixels;
	register unsigned char *bp;
	FILE	*fp;

	/* check for verbose flag */
	if( argc > 1 && strcmp(argv[1], "-v") == 0 ) {
		verbose++;
		argv++;
		argc--;
	}

	/* check for optional input file */
	if( argc > 1 ) {
		if( (fp = fopen(argv[1],"r")) == 0 ) {
			fprintf( stderr, "pixstat: can't open \"%s\"\n", argv[1] );
			exit( 1 );
		}
		argv++;
		argc--;
	} else
		fp = stdin;

	/* check usage */
	if( argc > 1 || isatty(fileno(fp)) ) {
		fputs( Usage, stderr );
		exit( 1 );
	}

	/*
	 * Build the histogram.
	 */
	num_pixels = 0;
	while( (n = fread(&buf[0], sizeof(*buf), IBUFSIZE, fp)) > 0 ) {
		num = n/3;
		num_pixels += num;
		bp = &buf[0];
		for( i = 0; i < num; i++ ) {
			r.bin[ *bp++ ]++;
			g.bin[ *bp++ ]++;
			b.bin[ *bp++ ]++;
		}
	}

	/*
	 * Find sum, min, max, mode.
	 */
	r.sum = g.sum = b.sum = 0;
	r.min = g.min = b.min = 256;
	r.max = g.max = b.max = -1;
	r.mode = g.mode = b.mode = 0;
	for( i = 0; i < 256; i++ ) {
		/* sum */
		r.sum += i * r.bin[i];
		g.sum += i * g.bin[i];
		b.sum += i * b.bin[i];
		/* min */
		if( i < r.min && r.bin[i] != 0 )
			r.min = i;
		if( i < g.min && g.bin[i] != 0 )
			g.min = i;
		if( i < b.min && b.bin[i] != 0 )
			b.min = i;
		/* max */
		if( i > r.max && r.bin[i] != 0 )
			r.max = i;
		if( i > g.max && g.bin[i] != 0 )
			g.max = i;
		if( i > b.max && b.bin[i] != 0 )
			b.max = i;
		/* mode */
		if( r.bin[i] > r.bin[r.mode] )
			r.mode = i;
		if( g.bin[i] > g.bin[g.mode] )
			g.mode = i;
		if( b.bin[i] > b.bin[b.mode] )
			b.mode = i;
	}
	r.mean = (double)r.sum/(double)num_pixels;
	g.mean = (double)g.sum/(double)num_pixels;
	b.mean = (double)b.sum/(double)num_pixels;

	/*
	 * Now do a second pass to compute median,
	 *  variance and skew.
	 */
	for( i = 0; i < 256; i++ ) {
		/* median */
		if( r.partial_sum < r.sum/2.0 ) {
			r.partial_sum += i * r.bin[i];
			r.median = i;
		}
		if( g.partial_sum < g.sum/2.0 ) {
			g.partial_sum += i * g.bin[i];
			g.median = i;
		}
		if( b.partial_sum < b.sum/2.0 ) {
			b.partial_sum += i * b.bin[i];
			b.median = i;
		}
		/* var and skew */
		d = (double)i - r.mean;
		r.var += r.bin[i] * d * d;
		r.skew += r.bin[i] * d * d * d;
		d = (double)i - g.mean;
		g.var += g.bin[i] * d * d;
		g.skew += g.bin[i] * d * d * d;
		d = (double)i - b.mean;
		b.var += b.bin[i] * d * d;
		b.skew += b.bin[i] * d * d * d;
	}
	r.var /= (double)num_pixels;
	g.var /= (double)num_pixels;
	b.var /= (double)num_pixels;
	r.skew /= (double)num_pixels;
	g.skew /= (double)num_pixels;
	b.skew /= (double)num_pixels;

	/*
	 * Display the results.
	 */
	printf( "Pixels  %14ld (%.0f x %.0f)\n", num_pixels,
		sqrt((double)num_pixels), sqrt((double)num_pixels) );
	printf( "Min     %14d%14d%14d\n", r.min, g.min, b.min );
	printf( "Max     %14d%14d%14d\n", r.max, g.max, b.max );
	printf( "Mode    %14d%14d%14d\n", r.mode, g.mode, b.mode );
	printf( "Num@@mode%14ld%14ld%14ld\n", r.bin[r.mode], g.bin[g.mode], b.bin[b.mode] );
	printf( "Median  %14d%14d%14d\n", r.median, g.median, b.median );
	printf( "Mean    %14.3f%14.3f%14.3f\n", r.mean, g.mean, b.mean );
	printf( "s.d.    %14.3f%14.3f%14.3f\n", sqrt(r.var), sqrt(g.var), sqrt(b.var) );
	printf( "Var     %14.3f%14.3f%14.3f\n", r.var, g.var, b.var );
	printf( "Skew    %14.3f%14.3f%14.3f\n", r.skew, g.skew, b.skew );

	if( verbose )
		show_hist();
	return 0;
}

/*
 * Display the histogram values.
 */
void
show_hist(void)
{
	int	i;

	printf( "Histogram:\n" );

	for( i = 0; i < 256; i++ ) {
		printf( "%3d: %10ld %10ld %10ld\n",
			i, r.bin[i], g.bin[i], b.bin[i] );
	}
}
@


11.10
log
@change conf.h to a wrapped config.h
@
text
@d30 1
a30 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/util/pixstat.c,v 11.9 2004/04/05 05:46:02 morrison Exp $ (BRL)";
@


11.9
log
@merge of ansi-6-0-branch into head
@
text
@d30 1
a30 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
d33 5
a37 1
#include "conf.h"
@


11.8
log
@update copyright to include span through 2003
@
text
@d30 1
a30 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/pixstat.c,v 11.7 2002/08/20 17:09:04 jra Exp $ (BRL)";
d58 1
a58 1
void	show_hist();
d63 1
a63 3
main( argc, argv )
int argc;
char **argv;
d208 1
a208 1
show_hist()
@


11.7
log
@Restoration of entire source tree to Pre-Hartley state
@
text
@d26 1
a26 1
 *	This software is Copyright (C) 1986 by the United States Army.
d30 1
a30 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/pixstat.c,v 11.5 2001/08/10 20:57:07 butler Exp $ (BRL)";
@


11.7.4.1
log
@sync to HEAD...
@
text
@d26 1
a26 1
 *	This software is Copyright (C) 1986-2004 by the United States Army.
d30 1
a30 1
static const char RCSid[] = "@@(#)$Header: /n/cad/c/CVS/brlcad/util/pixstat.c,v 11.8 2004/02/02 17:39:50 morrison Exp $ (BRL)";
@


11.7.10.1
log
@merge from HEAD
@
text
@d26 1
a26 1
 *	This software is Copyright (C) 1986-2004 by the United States Army.
d30 1
a30 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/pixstat.c,v 11.8 2004/02/02 17:39:50 morrison Exp $ (BRL)";
@


11.7.10.2
log
@merge from head
@
text
@d30 1
a30 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/pixstat.c,v 11.7.10.1 2004/02/12 19:43:11 erikg Exp $ (BRL)";
@


11.7.2.1
log
@Initial ANSIfication
@
text
@d30 1
a30 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/pixstat.c,v 11.7 2002/08/20 17:09:04 jra Exp $ (BRL)";
d58 1
a58 1
void	show_hist(void);
d63 3
a65 1
main(int argc, char **argv)
d210 1
a210 1
show_hist(void)
@


11.7.2.2
log
@sync branch with HEAD
@
text
@d26 1
a26 1
 *	This software is Copyright (C) 1986-2004 by the United States Army.
d30 1
a30 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
@


11.6
log
@Converted from K&R to ANSI C - RFH
@
text
@d58 1
a58 1
void	show_hist(void);
d63 3
a65 1
main(int argc, char **argv)
d210 1
a210 1
show_hist(void)
@


11.5
log
@Misc compiler warnings eliminated
@
text
@d30 1
a30 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/pixstat.c,v 11.4 2000/09/01 03:24:00 mike Exp $ (BRL)";
d58 1
a58 1
void	show_hist();
d63 1
a63 3
main( argc, argv )
int argc;
char **argv;
d208 1
a208 1
show_hist()
@


11.4
log
@
Lint fix
@
text
@d30 1
a30 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/pixstat.c,v 11.3 2000/08/23 19:04:57 mike Exp $ (BRL)";
d33 2
d36 7
d203 1
@


11.3
log
@
const RCSid
@
text
@d30 1
a30 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/pixstat.c,v 11.2 1998/09/14 15:59:24 bparker Exp $ (BRL)";
d53 1
@


11.2
log
@*- fix typos
@
text
@d30 1
a30 1
static char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/pixstat.c,v 11.1 1995/01/04 10:13:02 mike Rel4_4 $ (BRL)";
@


11.1
log
@Release_4.4
@
text
@d30 1
a30 1
static char RCSid[] = "@@(#)$Header: /m/cad/util/RCS/pixstat.c,v 10.1 91/10/12 06:48:57 mike Rel4_0 $ (BRL)";
d179 1
a179 1
	printf( "Pixels  %14d (%.0f x %.0f)\n", num_pixels,
d184 1
a184 1
	printf( "Num@@mode%14d%14d%14d\n", r.bin[r.mode], g.bin[g.mode], b.bin[b.mode] );
d206 1
a206 1
		printf( "%3d: %10d %10d %10d\n",
@


10.1
log
@Release_4.0
@
text
@d30 1
a30 1
static char RCSid[] = "@@(#)$Header: /m/cad/util/RCS/pixstat.c,v 9.1 89/05/19 06:10:52 mike Rel3_5 $ (BRL)";
@


9.1
log
@Release_3.5
@
text
@d30 1
a30 1
static char RCSid[] = "@@(#)$Header: pixstat.c,v 8.1 88/10/05 00:43:17 mike Rel3_0 $ (BRL)";
@


8.1
log
@Release_3.0
@
text
@d30 1
a30 1
static char RCSid[] = "@@(#)$Header: pixstat.c,v 7.3 88/09/01 05:23:36 phil Exp $ (BRL)";
@


7.3
log
@Num@@mode is now output by default (used to be -v only)
@
text
@d30 1
a30 1
static char RCSid[] = "@@(#)$Header: pixstat.c,v 7.2 88/05/16 00:06:57 phil Locked $ (BRL)";
@


7.2
log
@lint fixes
@
text
@d30 1
a30 1
static char RCSid[] = "@@(#)$Header: pixstat.c,v 7.1 87/11/03 00:09:10 mike Locked $ (BRL)";
d184 1
a184 2
	if( verbose )
		printf( "Num@@mode%14d%14d%14d\n", r.bin[r.mode], g.bin[g.mode], b.bin[b.mode] );
@


7.1
log
@Release 2.3
@
text
@d30 1
a30 1
static char RCSid[] = "@@(#)$Header: pixstat.c,v 6.1 87/07/11 08:12:34 mike Rel $ (BRL)";
d49 2
d199 1
@


6.1
log
@Release 2.0
@
text
@d30 1
a30 1
static char RCSid[] = "@@(#)$Header: pixstat.c,v 5.1 87/06/24 22:43:24 mike Rel $ (BRL)";
@


5.1
log
@Release 1.24
@
text
@d30 1
a30 1
static char RCSid[] = "@@(#)$Header: pixstat.c,v 4.2 87/02/13 00:46:07 mike Exp $ (BRL)";
@


4.2
log
@Release 1.20 -- First Formal Release
@
text
@d30 1
a30 1
static char RCSid[] = "@@(#)$Header: pixstat.c,v 4.1 86/12/29 03:13:54 mike Rel1 $ (BRL)";
@


4.1
log
@BRL CAD Distribution Release 1.10
@
text
@d30 1
a30 1
static char RCSid[] = "@@(#)$Header: pixstat.c,v 1.1 86/08/14 21:55:58 mike Exp $ (BRL)";
@


1.1
log
@Initial revision
@
text
@d30 1
a30 1
static char RCSid[] = "@@(#)$Header$ (BRL)";
@
