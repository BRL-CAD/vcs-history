head	11.9;
access;
symbols
	ansi-20040405-merged:11.5.2.2
	postmerge-20040405-ansi:11.7
	premerge-20040404-ansi:11.6
	postmerge-autoconf:11.6
	autoconf-freeze:11.5.10.2
	premerge-autoconf:11.6
	postmerge-20040315-windows:11.6
	premerge-20040315-windows:11.6
	windows-20040315-freeze:11.5.4.1
	autoconf-20031203:11.5
	autoconf-20031202:11.5
	autoconf-branch:11.5.0.10
	phong-branch:11.5.0.8
	photonmap-branch:11.5.0.6
	rel-6-1-DP:11.5
	windows-branch:11.5.0.4
	rel-6-0-2:11.3
	ansi-branch:11.5.0.2
	rel-6-0-1-branch:11.3.0.2
	hartley-6-0-post:11.4
	hartley-6-0-pre:11.3
	rel-6-0-1:11.3
	rel-6-0:11.3
	rel-5-4:11.1
	offsite-5-3-pre:11.3
	rel-5-3:11.1
	rel-5-2:11.1
	rel-5-1-branch:11.1.0.2
	rel-5-1:11.1
	rel-5-0:11.1
	rel-5-0-beta:11.1
	rel-4-5:11.1
	ctj-4-5-post:11.1
	ctj-4-5-pre:11.1
	rel-4-4:11.1
	rel-4-0:10.1
	rel-3-5:9.1
	rel-3-0:8.1
	rel-2-3:7.1
	rel-2-0:5.1
	rel-1-24:5.1
	rel-1-20:4.3
	rel-1-10:4.1;
locks; strict;
comment	@ * @;


11.9
date	2004.05.21.14.57.49;	author morrison;	state dead;
branches;
next	11.8;

11.8
date	2004.05.10.15.30.50;	author erikg;	state Exp;
branches;
next	11.7;

11.7
date	2004.04.05.05.46.02;	author morrison;	state Exp;
branches;
next	11.6;

11.6
date	2004.02.02.17.39.45;	author morrison;	state Exp;
branches;
next	11.5;

11.5
date	2002.08.20.17.09.01;	author jra;	state Exp;
branches
	11.5.2.1
	11.5.4.1
	11.5.10.1;
next	11.4;

11.4
date	2002.08.15.20.56.12;	author hartley;	state Exp;
branches;
next	11.3;

11.3
date	2000.09.01.03.23.54;	author mike;	state Exp;
branches;
next	11.2;

11.2
date	2000.08.23.19.04.43;	author mike;	state Exp;
branches;
next	11.1;

11.1
date	95.01.04.10.12.31;	author mike;	state Rel4_4;
branches;
next	10.3;

10.3
date	94.08.23.15.05.51;	author gdurf;	state Exp;
branches;
next	10.2;

10.2
date	92.05.14.00.32.45;	author mike;	state Exp;
branches;
next	10.1;

10.1
date	91.10.12.06.48.32;	author mike;	state Rel4_0;
branches;
next	9.3;

9.3
date	91.06.18.10.21.41;	author mmark;	state Exp;
branches;
next	9.2;

9.2
date	90.12.08.06.21.08;	author mike;	state Exp;
branches;
next	9.1;

9.1
date	89.05.19.06.10.12;	author mike;	state Rel3_5;
branches;
next	8.1;

8.1
date	88.10.05.00.42.40;	author mike;	state Rel3_0;
branches;
next	7.4;

7.4
date	88.06.30.22.39.16;	author mike;	state Exp;
branches;
next	7.3;

7.3
date	88.05.23.00.32.51;	author mike;	state Exp;
branches;
next	7.2;

7.2
date	88.05.16.00.06.47;	author mike;	state Exp;
branches;
next	7.1;

7.1
date	87.11.03.00.08.21;	author mike;	state Rel;
branches;
next	6.1;

6.1
date	87.07.11.08.11.40;	author mike;	state Rel;
branches;
next	5.1;

5.1
date	87.06.24.22.42.18;	author mike;	state Rel;
branches;
next	4.4;

4.4
date	87.06.03.02.18.51;	author mike;	state Exp;
branches;
next	4.3;

4.3
date	87.02.13.00.43.17;	author mike;	state Exp;
branches;
next	4.2;

4.2
date	87.02.11.07.20.02;	author mike;	state Exp;
branches;
next	4.1;

4.1
date	86.12.29.03.12.40;	author mike;	state Rel1;
branches;
next	1.3;

1.3
date	86.11.21.06.56.06;	author mike;	state Exp;
branches;
next	1.2;

1.2
date	89.10.31.02.29.18;	author mike;	state Exp;
branches;
next	1.1;

1.1
date	86.10.29.04.16.27;	author mike;	state Exp;
branches;
next	;

11.5.2.1
date	2002.09.19.18.02.40;	author morrison;	state Exp;
branches;
next	11.5.2.2;

11.5.2.2
date	2004.03.17.21.23.28;	author morrison;	state Exp;
branches;
next	;

11.5.4.1
date	2004.03.11.23.52.31;	author morrison;	state Exp;
branches;
next	;

11.5.10.1
date	2004.02.12.19.43.10;	author erikg;	state Exp;
branches;
next	11.5.10.2;

11.5.10.2
date	2004.03.15.14.08.13;	author erikg;	state Exp;
branches;
next	;


desc
@Background maker for viewgraphs
@


11.9
log
@moved to src/util/
@
text
@/*
 *			P I X B A C K G N D . C
 *
 * Function -
 *	Backgound Maker
 *
 *  Given Hue and Saturation for background, make top light and bottom dark.
 *  Generates a pix(5) stream on stdout.
 *
 *  Author -
 *	Michael John Muuss
 *  
 *  Source -
 *	SECAD/VLD Computing Consortium, Bldg 394
 *	The U. S. Army Ballistic Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5066
 *  
 *  Copyright Notice -
 *	This software is Copyright (C) 1986-2004 by the United States Army.
 *	All rights reserved.
 */
#ifndef lint
static const char RCSid[] = "@@(#)$Header: /n/xoff/cvs/brlcad/util/pixbackgnd.c,v 11.8 2004/05/10 15:30:50 erikg Exp $ (BRL)";
#endif

#ifdef HAVE_CONFIG_H
# include "config.h"
#endif



#include <stdio.h>	
#include <math.h>

#include "machine.h"
#include "externs.h"		/* For getopt and atof */

double col[3] = {128,128,128};		/* r,g,b */
double hsv[3];				/* h,s,v */

int	file_width = 512;
int	file_height = 512;
int	invert = 0;

double	deltav;
int	title_height = 80;
int	h_start = 240;
int	h_end = 50;

void	rgbhsv(register double *rgb, register double *hsv), hsvrgb(register double *hsv, register double *rgb);

char usage[] = "\
Usage:  pixbackgnd [-h -i] [-s squaresize] [-w width] [-n height]\n\
	[-t title_height] [-a top_inten] [-b bottom_inten]\n\
	hue saturation\n\
or	r g b\n\
	> file.pix";

int
get_args(int argc, register char **argv)
{
	register int c;

	while ( (c = getopt( argc, argv, "his:w:n:t:a:b:" )) != EOF )  {
		switch( c )  {
		case 'i':
			invert = 1;
			break;
		case 'h':
			/* high-res */
			file_height = file_width = 1024;
			title_height = 90;
			break;
		case 's':
			/* square file size */
			file_height = file_width = atoi(optarg);
			break;
		case 'w':
			file_width = atoi(optarg);
			break;
		case 'n':
			file_height = atoi(optarg);
			break;
		case 't':
			/* Title area size */
			title_height = atoi( optarg );
			break;
		case 'a':
			h_start = atoi(optarg);
			break;
		case 'b':
			h_end = atoi(optarg);
			break;

		default:		/* '?' */
			return(0);
		}
	}
	/* when optind >= argc, we have run out of args */
	if( optind+1 >= argc )
		return(0);		/* only 0 or 1 args */
	if( optind+2 == argc )  {
		/* Paramaters are H S */
		hsv[0] = atof(argv[optind++]);
		hsv[1] = atof(argv[optind]);
		hsv[2] = h_start;

		hsvrgb( hsv, col );
	} else {
		/* parameters are R G B */
		col[0] = atof(argv[optind++]);
		col[1] = atof(argv[optind++]);
		col[2] = atof(argv[optind++]);

		rgbhsv( col, hsv );
		hsv[2] = h_start;	/* Change given RGB to starting inten */
	}
	return(1);			/* OK */
}

int
main(int argc, char **argv)
{
	register int i;
	register int line;
	register unsigned char *horiz_buf;
	unsigned char *vert_buf;
	register unsigned char *vp;

	if ( !get_args( argc, argv ) || isatty(fileno(stdout)) )  {
		(void)fputs(usage, stderr);
		exit( 1 );
	}

	horiz_buf = (unsigned char *)malloc( file_width * 3 );
	vert_buf = (unsigned char *)malloc( file_height * 3 );

	/*
	 *  First stage -- prepare the vert_buf with one pixel
	 *  for each scanline, since each scanline has uniform color.
	 *  For ease of thinking about it, this is done top-to-bottom.
	 */
	line = 0;
	vp = vert_buf;
	if( title_height > 0 )  {
		/* Make top area with initial HSV */
		for( ; line<title_height; line++ )  {
			*vp++ = col[0];
			*vp++ = col[1];
			*vp++ = col[2];
		}

		/* A white stripe, 4 lines high */
		for( i=0; i<4; i++,line++ )  {
			*vp++ = 250;
			*vp++ = 250;
			*vp++ = 250;
		}
	}

	/* Do rest with V dropping from start to end values */
	if( hsv[2] > h_end )  {
		/* Go from bright at the top to dim at the bottom */
		deltav = (hsv[2]-h_end) / (double)(file_height-line);

		for( ; line<file_height; line++ )  {
			hsv[2] -= deltav;
			hsvrgb( hsv, col );
			*vp++ = col[0];
			*vp++ = col[1];
			*vp++ = col[2];
		}
	} else {
		/* Go from dim at the top to bright at the bottom */
		deltav = (h_end-hsv[2]) / (double)(file_height-line);

		for( ; line<file_height; line++ )  {
			hsv[2] += deltav;
			hsvrgb( hsv, col );
			*vp++ = col[0];
			*vp++ = col[1];
			*vp++ = col[2];
		}
	}

	/*
	 *  Second stage -- flood each value across the horiz_buf
	 *  and write the scanline out.  Here we proceed bottom-to-top
	 *  for pix(5) format.
	 */
	if( !invert )  {
		for( line = file_height-1; line >= 0; line-- )  {
			register unsigned char *op;

			vp = &vert_buf[line*3];
			op = &horiz_buf[(file_width*3)-1];
			while( op > horiz_buf )  {
				*op-- = vp[2];
				*op-- = vp[1];
				*op-- = *vp;
			}
			write( 1, horiz_buf, file_width*3 );
		}
	} else {
		/* Inverted:  top-to-bottom.  Good with cat-fb */
		for( line=0; line < file_height; line++ )  {
			register unsigned char *op;

			vp = &vert_buf[line*3];
			op = &horiz_buf[(file_width*3)-1];
			while( op > horiz_buf )  {
				*op-- = vp[2];
				*op-- = vp[1];
				*op-- = *vp;
			}
			write( 1, horiz_buf, file_width*3 );
		}
	}
	exit(0);
}

/* rgbhsv
 * 
 * convert red green blue to hue saturation value
 */
void
rgbhsv(register double *rgb, register double *hsv)
{
        double s, v, r, g, b, x;
	static double h;
        double dif = 0.0;

        r = rgb[0];
        g = rgb[1];
        b = rgb[2];
        v = ((r > g) ? r : g);
        v = ((v > b) ? v : b);
        x = ((r < g) ? r : g);
        x = ((x < b) ? x : b);
	if (v != x)
        {
            dif = (double) (v - x);
            if (r != v)
                if (g == v)
                    if (b != x)
                        h = (double) (42.5 * (3. - (double)(v-b) / dif));
                    else
                        h = (double) (42.5 * (1. + (double)(v-r) / dif));
                else
                    if (r != x)
                        h = (double) (42.5 * (5. - (double)(v-r) / dif));
                    else
                        h = (double) (42.5 * (3. + (double)(v-g) / dif));
            else
                if (g != x)
                    h = (double) (42.5 * (1. - (double)(v-g) / dif));
                else
                    h = (double) (42.5 * (5. + (double)(v-b) / dif));
	}

	if (v != 0)
            s = (double)(255. * dif / (double)v);
        else
            s = 0;

        hsv[0] = h;
        hsv[1] = s;
        hsv[2] = v;
}

/* hsvrgb
 * 
 * convert hue saturation and value to red, green, blue
 */

void
hsvrgb(register double *hsv, register double *rgb)
{
        double r, g, b, m, n, k, foo;
        double h, s, v;
        double f;

	if(hsv[1] != 0) 
        {
            s = (double)hsv[1] / 255.;
            h = (double)hsv[0] / 42.666;
            f = modf(h, &foo);
            v = (double)hsv[2];
            m = (double) (v * (1. - s) + .5);
            n = (double) (v * (1. - s*f) + .5);
            k = (double) (v * (1. - (s * (1.-f))) + .5);
            switch((int) h)
            {
            case 0:
                r = hsv[2];
                g = k;
                b = m;
                break;
            case 1:
                r = n;
                g = hsv[2];
                b = m;
                break;
            case 2:
                r = m;
                g = hsv[2];
                b = k;
                break;
            case 3:
                r = m;
                g = n;
                b = hsv[2];
                break;
            case 4:
                r = k;
                g = m;
                b = hsv[2];
                break;
            default:
            case 5:
                r = hsv[2];
                g = m;
                b = n;
                break;
            }
        }
        else
            r = g = b = hsv[2];

        rgb[0] = r;
        rgb[1] = g;
        rgb[2] = b;
}
@


11.8
log
@change conf.h to a wrapped config.h
@
text
@d23 1
a23 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/util/pixbackgnd.c,v 11.7 2004/04/05 05:46:02 morrison Exp $ (BRL)";
@


11.7
log
@merge of ansi-6-0-branch into head
@
text
@d23 1
a23 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
d26 5
a30 1
#include "conf.h"
@


11.6
log
@update copyright to include span through 2003
@
text
@d23 1
a23 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/pixbackgnd.c,v 11.5 2002/08/20 17:09:01 jra Exp $ (BRL)";
d46 1
a46 1
void	rgbhsv(), hsvrgb();
d56 1
a56 2
get_args( argc, argv )
register char **argv;
d118 1
a118 2
main(argc, argv )
char **argv;
d223 1
a223 3
rgbhsv(rgb, hsv)
register double *rgb;
register double *hsv;
d273 1
a273 3
hsvrgb(hsv, rgb)
register double *hsv;
register double *rgb;
@


11.5
log
@Restoration of entire source tree to Pre-Hartley state
@
text
@d19 1
a19 1
 *	This software is Copyright (C) 1986 by the United States Army.
d23 1
a23 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/pixbackgnd.c,v 11.3 2000/09/01 03:23:54 mike Exp $ (BRL)";
@


11.5.4.1
log
@sync to HEAD...
@
text
@d19 1
a19 1
 *	This software is Copyright (C) 1986-2004 by the United States Army.
d23 1
a23 1
static const char RCSid[] = "@@(#)$Header: /n/cad/c/CVS/brlcad/util/pixbackgnd.c,v 11.6 2004/02/02 17:39:45 morrison Exp $ (BRL)";
@


11.5.10.1
log
@merge from HEAD
@
text
@d19 1
a19 1
 *	This software is Copyright (C) 1986-2004 by the United States Army.
d23 1
a23 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/pixbackgnd.c,v 11.6 2004/02/02 17:39:45 morrison Exp $ (BRL)";
@


11.5.10.2
log
@merge from head
@
text
@d23 1
a23 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/pixbackgnd.c,v 11.5.10.1 2004/02/12 19:43:10 erikg Exp $ (BRL)";
@


11.5.2.1
log
@Initial ANSIfication
@
text
@d23 1
a23 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/pixbackgnd.c,v 11.5 2002/08/20 17:09:01 jra Exp $ (BRL)";
d46 1
a46 1
void	rgbhsv(register double *rgb, register double *hsv), hsvrgb(register double *hsv, register double *rgb);
d56 2
a57 1
get_args(int argc, register char **argv)
d119 2
a120 1
main(int argc, char **argv)
d225 3
a227 1
rgbhsv(register double *rgb, register double *hsv)
d277 3
a279 1
hsvrgb(register double *hsv, register double *rgb)
@


11.5.2.2
log
@sync branch with HEAD
@
text
@d19 1
a19 1
 *	This software is Copyright (C) 1986-2004 by the United States Army.
d23 1
a23 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
@


11.4
log
@Converted from K&R to ANSI C - RFH
@
text
@d46 1
a46 1
void	rgbhsv(register double *rgb, register double *hsv), hsvrgb(register double *hsv, register double *rgb);
d56 2
a57 1
get_args(int argc, register char **argv)
d119 2
a120 1
main(int argc, char **argv)
d225 3
a227 1
rgbhsv(register double *rgb, register double *hsv)
d277 3
a279 1
hsvrgb(register double *hsv, register double *rgb)
@


11.3
log
@
Lint fix
@
text
@d23 1
a23 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/pixbackgnd.c,v 11.2 2000/08/23 19:04:43 mike Exp $ (BRL)";
d46 1
a46 1
void	rgbhsv(), hsvrgb();
d56 1
a56 2
get_args( argc, argv )
register char **argv;
d118 1
a118 2
main(argc, argv )
char **argv;
d223 1
a223 3
rgbhsv(rgb, hsv)
register double *rgb;
register double *hsv;
d273 1
a273 3
hsvrgb(hsv, rgb)
register double *hsv;
register double *rgb;
@


11.2
log
@
const RCSid
@
text
@d23 1
a23 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/pixbackgnd.c,v 11.1 1995/01/04 10:12:31 mike Rel4_4 $ (BRL)";
d55 1
d118 1
@


11.1
log
@Release_4.4
@
text
@d23 1
a23 1
static char RCSid[] = "@@(#)$Header: /m/cad/util/RCS/pixbackgnd.c,v 10.3 94/08/23 15:05:51 gdurf Exp $ (BRL)";
@


10.3
log
@Factored ifdefs
@
text
@d23 1
a23 1
static char RCSid[] = "@@(#)$Header: /m/cad/util/RCS/pixbackgnd.c,v 10.2 1992/05/14 00:32:45 mike Exp gdurf $ (BRL)";
@


10.2
log
@starting I value can be smaller than ending value.
-a0 -b160 with color 50 160 50 makes a nice "green grass" effect.
@
text
@d23 1
a23 1
static char RCSid[] = "@@(#)$Header: /m/cad/util/RCS/pixbackgnd.c,v 10.1 91/10/12 06:48:32 mike Rel4_0 Locker: mike $ (BRL)";
d26 2
d29 1
a29 4

#ifdef SYSV
#define bzero(p,cnt)	memset(p,'\0',cnt);
#endif
d31 2
a32 4
extern int	getopt();
extern char	*optarg;
extern int	optind;
extern double	atof();
a272 2

double modf();
@


10.1
log
@Release_4.0
@
text
@d23 1
a23 1
static char RCSid[] = "@@(#)$Header: /m/cad/util/RCS/pixbackgnd.c,v 9.3 91/06/18 10:21:41 mmark Exp $ (BRL)";
d115 1
d161 3
a163 1
	deltav = (hsv[2]-h_end) / (double)(file_height-line);
d165 18
a182 6
	for( ; line<file_height; line++ )  {
		hsv[2] -= deltav;
		hsvrgb( hsv, col );
		*vp++ = col[0];
		*vp++ = col[1];
		*vp++ = col[2];
@


9.3
log
@fixed synopsis
@
text
@d23 1
a23 1
static char RCSid[] = "@@(#)$Header: /m/cad/util/RCS/pixbackgnd.c,v 9.2 90/12/08 06:21:08 mike Exp $ (BRL)";
@


9.2
log
@lint
@
text
@d23 1
a23 1
static char RCSid[] = "@@(#)$Header: /m/cad/util/RCS/pixbackgnd.c,v 9.1 89/05/19 06:10:12 mike Rel3_5 $ (BRL)";
d55 2
a56 1
or	r g b\n";
@


9.1
log
@Release_3.5
@
text
@d23 1
a23 1
static char RCSid[] = "@@(#)$Header: pixbackgnd.c,v 8.1 88/10/05 00:42:40 mike Rel3_0 $ (BRL)";
d216 1
a216 1
        double dif;
d308 1
a313 3
      	default:
            	printf("hsv2rgb:  gak!\n");
            	break;
@


8.1
log
@Release_3.0
@
text
@d23 1
a23 1
static char RCSid[] = "@@(#)$Header: pixbackgnd.c,v 7.4 88/06/30 22:39:16 mike Exp $ (BRL)";
@


7.4
log
@added -a, -b
@
text
@d23 1
a23 1
static char RCSid[] = "@@(#)$Header: pixbackgnd.c,v 7.3 88/05/23 00:32:51 mike Locked $ (BRL)";
@


7.3
log
@Added -i flag
@
text
@d23 1
a23 1
static char RCSid[] = "@@(#)$Header: pixbackgnd.c,v 7.2 88/05/16 00:06:47 mike Locked $ (BRL)";
d53 1
a53 1
	[-t title_height]\n\
d62 1
a62 1
	while ( (c = getopt( argc, argv, "his:w:n:t:" )) != EOF )  {
d85 6
@


7.2
log
@lint fixes
@
text
@d23 1
a23 1
static char RCSid[] = "@@(#)$Header: pixbackgnd.c,v 7.1 87/11/03 00:08:21 mike Locked $ (BRL)";
d42 1
d52 1
a52 1
Usage:  pixbackgnd [-h] [-s squaresize] [-w width] [-n height]\n\
d62 1
a62 1
	while ( (c = getopt( argc, argv, "hs:w:n:t:" )) != EOF )  {
d64 3
d168 3
a170 2
	for( line = file_height-1; line >= 0; line-- )  {
		register unsigned char *op;
d172 8
a179 6
		vp = &vert_buf[line*3];
		op = &horiz_buf[(file_width*3)-1];
		while( op > horiz_buf )  {
			*op-- = vp[2];
			*op-- = vp[1];
			*op-- = *vp;
d181 14
a194 1
		write( 1, horiz_buf, file_width*3 );
@


7.1
log
@Release 2.3
@
text
@d23 1
a23 1
static char RCSid[] = "@@(#)$Header: pixbackgnd.c,v 6.1 87/07/11 08:11:40 mike Rel $ (BRL)";
d48 2
d183 1
d237 1
@


6.1
log
@Release 2.0
@
text
@d23 1
a23 1
static char RCSid[] = "@@(#)$Header: pixbackgnd.c,v 5.1 87/06/24 22:42:18 mike Rel $ (BRL)";
@


5.1
log
@Release 1.24
@
text
@d23 1
a23 1
static char RCSid[] = "@@(#)$Header: pixbackgnd.c,v 4.4 87/06/03 02:18:51 mike Exp $ (BRL)";
@


4.4
log
@Fixed problem with specifying background in RGB
@
text
@d23 1
a23 1
static char RCSid[] = "@@(#)$Header: pixbackgnd.c,v 4.3 87/02/13 00:43:17 mike Locked $ (BRL)";
@


4.3
log
@Release 1.20 -- First Formal Release
@
text
@d23 1
a23 1
static char RCSid[] = "@@(#)$Header: pixbackgnd.c,v 4.2 87/02/11 07:20:02 mike Exp $ (BRL)";
d147 1
a147 2
	hsv[2] = h_start;
	deltav = (h_start-h_end) / (double)(file_height-line);
@


4.2
log
@Revision 1.18 -- converted fbbackgnd to pixbackgnd.
Much more useful tool this way.
@
text
@d23 1
a23 1
static char RCSid[] = "@@(#)$Header: pixbackgnd.c,v 4.1 86/12/29 03:12:40 mike Rel1 $ (BRL)";
@


4.1
log
@BRL CAD Distribution Release 1.10
@
text
@d2 1
a2 1
 *			F B B A C K G N D . C
d8 1
d23 1
a23 1
static char RCSid[] = "@@(#)$Header: fbbackgnd.c,v 1.3 86/11/21 06:56:06 mike Exp $ (BRL)";
a26 1
#include "fb.h"
d37 2
a38 1
int curchan = 0;	/* 0=r, 1=g, 2=b */
d40 2
a41 1
double col[6] = {128,128,128};		/* r,g,b h,s,v */
a42 5
int	screen_width = 512;
int	screen_height = 512;

RGBpixel pix;

a47 7
FBIO *fbp;

#define FILL(r,g,b)	{ register RGBpixel *pp; \
	pix[RED]=r; pix[GRN]=g; pix[BLU]=b; \
	for( pp = (RGBpixel *)&buf[screen_width-1][RED]; pp >= buf; pp-- ) \
		COPYRGB(*pp, pix); }

d49 4
a52 1
Usage:  fbbackgnd [-h] [-t title_height] hue saturation\n";
d59 1
a59 1
	while ( (c = getopt( argc, argv, "ht:" )) != EOF )  {
d63 1
a63 1
			screen_height = screen_width = 1024;
d66 10
d85 18
a102 2
	if( argc < optind+1 )
		return(0);		/* missing args */
d111 3
a113 1
	register RGBpixel *buf;
d115 1
a115 1
	if ( !get_args( argc, argv ) )  {
d120 2
a121 4
	if( (fbp = fb_open( NULL, screen_width, screen_height )) == FBIO_NULL )  {
		fprintf(stderr, "fbbackgnd:  fb_open failed\n");
		exit(1);
	}
d123 5
a127 10
	/* Adjust to what we got */
	screen_height = fb_getheight(fbp);
	screen_width = fb_getwidth(fbp);
	buf = (RGBpixel *)malloc( screen_width * sizeof(RGBpixel) );

	col[3] = atof(argv[optind++]);
	col[4] = atof(argv[optind]);
	col[5] = h_start;
	hsvrgb( &col[3], col );

d129 1
d131 6
a136 4
		/* Write out top area with initial HSV */
		FILL( col[RED], col[GRN], col[BLU] );
		for( ; line<title_height; line++ )
			fb_write( fbp, 0, screen_height-1-line, buf, screen_width );
d138 6
a143 4
		/* A white stripe, 4 lines wide */
		FILL( 250, 250, 250 );
		for( i=0; i<4; i++,line++ )
			fb_write( fbp, 0, screen_height-1-line, buf, screen_width );
d147 2
a148 2
	col[5] = h_start;
	deltav = (h_start-h_end) / (double)(screen_height-line);
d150 6
a155 5
	for( ; line<screen_height; line++ )  {
		col[5] -= deltav;
		hsvrgb( &col[3], col );
		FILL( col[RED], col[GRN], col[BLU] );
		fb_write( fbp, 0, screen_height-1-line, buf, screen_width );
d157 18
d190 3
a192 3
        r = rgb[RED];
        g = rgb[GRN];
        b = rgb[BLU];
d292 3
a294 3
        rgb[RED] = r;
        rgb[GRN] = g;
        rgb[BLU] = b;
@


1.3
log
@Added -t flag, getopt.
@
text
@d22 1
a22 1
static char RCSid[] = "@@(#)$Header: fbbackgnd.c,v 1.2 89/10/31 02:29:18 mike Locked $ (BRL)";
@


1.2
log
@Added exit(0), changed returns to exits.
@
text
@d22 1
a22 1
static char RCSid[] = "@@(#)$Header: fbbackgnd.c,v 1.1 86/10/29 04:16:27 mike Locked $ (BRL)";
d32 5
a38 1
double atof();
d41 3
a43 2
int npix = 512;
RGBpixel buf[1024];
d46 4
a49 4
double deltav;
int title_height = 80;
int h_start = 240;
int h_end = 50;
d55 1
a55 1
	for( pp = (RGBpixel *)&buf[npix-1][RED]; pp >= buf; pp-- ) \
d58 29
d92 1
d94 3
a96 3
	if( argc < 3 )  {
		fprintf(stderr,"Usage:  fbbackgnd [-h] hue saturation\n");
		exit(1);
d99 1
a99 8
	if( argv[1][0] == '-' && argv[1][1] == 'h' )  {
		argc--;
		argv++;
		npix = 1024;
		title_height = 90;
	}

	if( (fbp = fb_open( NULL, npix, npix )) == FBIO_NULL )  {
d104 7
a110 3
	/* Write out top area with initial HSV */
	col[3] = atof(argv[1]);
	col[4] = atof(argv[2]);
a112 3
	FILL( col[0], col[1], col[2] );
	for( line=0; line<title_height; line++ )
		fb_write( fbp, 0, npix-1-line, buf, npix );
d114 6
a119 4
	/* A white stripe, 4 lines wide */
	FILL( 250, 250, 250 );
	for( i=0; i<4; i++,line++ )
		fb_write( fbp, 0, npix-1-line, buf, npix );
d121 6
d129 3
a131 3
	deltav = (h_start-h_end) / (double)(npix-line);
printf("%d..%d: deltav=%f\n", h_start, h_end, deltav);
	for( ; line<npix; line++ )  {
d134 2
a135 2
		FILL( col[0], col[1], col[2] );
		fb_write( fbp, 0, npix-1-line, buf, npix );
d152 3
a154 3
        r = rgb[0];
        g = rgb[1];
        b = rgb[2];
d254 3
a256 3
        rgb[0] = r;
        rgb[1] = g;
        rgb[2] = b;
@


1.1
log
@Initial revision
@
text
@d22 1
a22 1
static char RCSid[] = "@@(#)$Header$ (BRL)";
d61 1
a61 1
		return(1);
d73 1
a73 1
		return	1;
d100 1
@
