head	11.10;
access;
symbols
	ansi-20040405-merged:11.7.2.1
	postmerge-20040405-ansi:11.8
	premerge-20040404-ansi:11.7
	postmerge-autoconf:11.7
	autoconf-freeze:11.7
	premerge-autoconf:11.7
	postmerge-20040315-windows:11.7
	premerge-20040315-windows:11.7
	windows-20040315-freeze:11.7
	autoconf-20031203:11.7
	autoconf-20031202:11.7
	autoconf-branch:11.7.0.10
	phong-branch:11.7.0.8
	photonmap-branch:11.7.0.6
	rel-6-1-DP:11.7
	windows-branch:11.7.0.4
	rel-6-0-2:11.5
	ansi-branch:11.7.0.2
	rel-6-0-1-branch:11.5.0.2
	hartley-6-0-post:11.6
	hartley-6-0-pre:11.5
	rel-6-0-1:11.5
	rel-6-0:11.5
	rel-5-4:11.2
	offsite-5-3-pre:11.4
	rel-5-3:11.2
	rel-5-2:11.2
	rel-5-1-branch:11.2.0.2
	rel-5-1:11.2
	rel-5-0:11.1
	rel-5-0-beta:11.1
	rel-4-5:11.1
	ctj-4-5-post:11.1
	ctj-4-5-pre:11.1
	rel-4-4:11.1
	rel-4-0:10.1;
locks; strict;
comment	@ * @;


11.10
date	2004.05.21.14.57.59;	author morrison;	state dead;
branches;
next	11.9;

11.9
date	2004.05.10.15.30.51;	author erikg;	state Exp;
branches;
next	11.8;

11.8
date	2004.04.05.05.46.02;	author morrison;	state Exp;
branches;
next	11.7;

11.7
date	2002.08.20.17.09.04;	author jra;	state Exp;
branches
	11.7.2.1;
next	11.6;

11.6
date	2002.08.15.20.56.16;	author hartley;	state Exp;
branches;
next	11.5;

11.5
date	2001.08.10.20.57.08;	author butler;	state Exp;
branches;
next	11.4;

11.4
date	2000.09.01.03.24.01;	author mike;	state Exp;
branches;
next	11.3;

11.3
date	2000.08.23.19.05.00;	author mike;	state Exp;
branches;
next	11.2;

11.2
date	2000.01.31.16.03.09;	author jra;	state Exp;
branches;
next	11.1;

11.1
date	95.01.04.10.13.10;	author mike;	state Rel4_4;
branches;
next	10.1;

10.1
date	91.10.12.06.49.05;	author mike;	state Rel4_0;
branches;
next	1.3;

1.3
date	91.07.03.03.24.51;	author mike;	state Exp;
branches;
next	1.2;

1.2
date	91.01.28.19.17.22;	author mike;	state Exp;
branches;
next	1.1;

1.1
date	91.01.28.19.14.50;	author mike;	state Exp;
branches;
next	;

11.7.2.1
date	2002.09.19.18.02.43;	author morrison;	state Exp;
branches;
next	;


desc
@UNIX-plot to HPGL file
@


11.10
log
@moved to src/util/
@
text
@/*
 *			P L - H P G L . C
 *
 * Description -
 *	Convert a unix-plot file to hpgl codes.
 *
 * Author -  
 *	Mark Huston Bowden  
 *  
 *  Source -
 *	Research Institute, E-47 
 *	University of Alabama in Huntsville  
 *	Huntsville, AL  35899
 *	(205) 895-6467 UAH
 *	(205) 876-1089 Redstone Arsenal
 *  
 *  Distribution Status -
 *	Public Domain, Distribution Unlimitied.
 */
#ifndef lint
static const char RCSid[] = "@@(#)$Header: /n/xoff/cvs/brlcad/util/pl-hpgl.c,v 11.9 2004/05/10 15:30:51 erikg Exp $ (BRL)";
#endif

#ifdef HAVE_CONFIG_H
# include "config.h"
#endif



#include <stdio.h>
#include <stdlib.h>
#ifdef HAVE_STRING_H
#include <string.h>
#else
#include <strings.h>
#endif

#define ASPECT	(9.8/7.1)
#define	geti(x)	{ (x) = getchar(); (x) |= (short)(getchar()<<8); }
#define getb(x)	((x) = getchar())

int
main(int argc, char **argv)
{
	char colors[8][3];
	int	numcolors = 0;
	int	c,i,x,y,x1,x2,y1,y2,r,g,b;

	if (argc != 1) {
		printf("Usage: %s < infile > outfile\n",argv[0]);
		exit(1);
	}

	getb(c);
	do {
		switch (c) {
		case 'p':		/* point */
			geti(x);
			geti(y);
			printf("PU;\n");
			printf("PA %d %d;\n",x,y);
			printf("PD;\n");
			break;
		case 'l':		/* line */
			geti(x1);
			geti(y1);
			geti(x2);
			geti(y2);
			printf("PU;\n");
			printf("PA %d %d;\n",x1,y1);
			printf("PD;\n");
			printf("PA %d %d;\n",x2,y2);
			break;
		case 'f':		/* line style */
			while( getchar() != '\n');
			/* set line style ignored */
			break;
		case 'm':		/* move */
			geti(x);
			geti(y);
			printf("PU;\n");
			printf("PA %d %d;\n",x,y);
			break;
		case 'n':		/* draw */
			geti(x);
			geti(y);
			printf("PD;\n");
			printf("PA %d %d;\n",x,y);
			break;
		case 't':		/* text */
			while( getchar() != '\n' );
			/* draw text ignored */
			break;
		case 's':		/* space */
			geti(x1);
			geti(y1);
			geti(x2);
			geti(y2);
			x1 *= ASPECT;
			x2 *= ASPECT;
			printf("SC %d %d %d %d;\n",x1,x2,y1,y2);
			printf("SP 1;\n");
			printf("PU;\n");
			printf("PA %d %d;\n",x1,y1);
			printf("PD;\n");
			printf("PA %d %d;\n",x1,y2);
			printf("PA %d %d;\n",x2,y2);
			printf("PA %d %d;\n",x2,y1);
			printf("PA %d %d;\n",x1,y1);
			break;
		case 'C':		/* color */
			r = getchar();
			g = getchar();
			b = getchar();
			for (i = 0; i < numcolors; i++)
				if (r == colors[i][0] 
				    &&  g == colors[i][1] 
				    &&  b == colors[i][2])
					break;
			if (i < numcolors)
				i++;
			else
				if (numcolors < 8) {
					colors[numcolors][0] = r;
					colors[numcolors][1] = g;
					colors[numcolors][2] = b;
					numcolors++;
					i++;
				} 
				else
					i = 8;
			printf("SP %d;\n",i);
			break;
		default:
			fprintf(stderr,"unable to process cmd x%x\n", c);
			break;
		}
		getb(c);
	} while (!feof(stdin));
	exit(0);
}
@


11.9
log
@change conf.h to a wrapped config.h
@
text
@d21 1
a21 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/util/pl-hpgl.c,v 11.8 2004/04/05 05:46:02 morrison Exp $ (BRL)";
@


11.8
log
@merge of ansi-6-0-branch into head
@
text
@d21 1
a21 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
d24 5
a28 1
#include "conf.h"
@


11.7
log
@Restoration of entire source tree to Pre-Hartley state
@
text
@d21 1
a21 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/pl-hpgl.c,v 11.5 2001/08/10 20:57:08 butler Exp $ (BRL)";
d39 1
a39 3
main(argc,argv)
int argc;
char **argv;
@


11.7.2.1
log
@Initial ANSIfication
@
text
@d21 1
a21 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/pl-hpgl.c,v 11.7 2002/08/20 17:09:04 jra Exp $ (BRL)";
d39 3
a41 1
main(int argc, char **argv)
@


11.6
log
@Converted from K&R to ANSI C - RFH
@
text
@d39 3
a41 1
main(int argc, char **argv)
@


11.5
log
@Misc compiler warnings eliminated
@
text
@d21 1
a21 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/pl-hpgl.c,v 11.4 2000/09/01 03:24:01 mike Exp $ (BRL)";
d39 1
a39 3
main(argc,argv)
int argc;
char **argv;
@


11.4
log
@
Lint fix
@
text
@d21 1
a21 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/pl-hpgl.c,v 11.3 2000/08/23 19:05:00 mike Exp $ (BRL)";
d24 2
d27 6
@


11.3
log
@
const RCSid
@
text
@d21 1
a21 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/pl-hpgl.c,v 11.2 2000/01/31 16:03:09 jra Exp $ (BRL)";
d30 1
@


11.2
log
@Eliminated some unused variables
@
text
@d21 1
a21 1
static char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/pl-hpgl.c,v 11.1 1995/01/04 10:13:10 mike Rel4_4 $ (BRL)";
@


11.1
log
@Release_4.4
@
text
@d21 1
a21 1
static char RCSid[] = "@@(#)$Header: /m/cad/util/RCS/pl-hpgl.c,v 10.1 91/10/12 06:49:05 mike Rel4_0 $ (BRL)";
d34 1
a34 1
	char colors[8][3],s[1024];
d64 2
a65 3
			for (i = 0; (s[i] = getchar()) != '\n'; i++);
			s[i] = '\0';
			/* set line style */
d80 2
a81 3
			for (i = 0; (s[i] = getchar()) != '\n'; i++);
			s[i] = '\0';
			/* draw text */
@


10.1
log
@Release_4.0
@
text
@d21 1
a21 1
static char RCSid[] = "@@(#)$Header: /m/cad/util/RCS/pl-hpgl.c,v 1.3 91/07/03 03:24:51 mike Exp $ (BRL)";
@


1.3
log
@lint
@
text
@d21 1
a21 1
static char RCSid[] = "@@(#)$Header: /m/cad/util/RCS/pl-hpgl.c,v 1.2 91/01/28 19:17:22 mike Exp $ (BRL)";
@


1.2
log
@Neatness
@
text
@d21 1
a21 1
static char RCSid[] = "@@(#)$Header$ (BRL)";
d35 2
a36 1
	int numcolors,c,i,x,y,x1,x2,y1,y2,r,g,b;
@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
 *	---->	u p 2 h p g l   <----
d9 2
d16 3
d20 3
d34 2
a35 2
    char colors[8][3],s[1024];
    int numcolors,c,i,x,y,x1,x2,y1,y2,r,g,b;
d37 4
a40 4
    if (argc != 1) {
	printf("Usage: %s < infile > outfile\n",argv[0]);
	exit(1);
    }
d42 9
a50 67
    getb(c);
    do {
	switch (c) {
	    case 'p':		/* point */
		geti(x);
		geti(y);
		printf("PU;\n");
		printf("PA %d %d;\n",x,y);
		printf("PD;\n");
		break;
	    case 'l':		/* line */
		geti(x1);
		geti(y1);
		geti(x2);
		geti(y2);
		printf("PU;\n");
		printf("PA %d %d;\n",x1,y1);
		printf("PD;\n");
		printf("PA %d %d;\n",x2,y2);
		break;
	    case 'f':		/* line style */
		for (i = 0; (s[i] = getchar()) != '\n'; i++);
		s[i] = '\0';
		/* set line style */
		break;
	    case 'm':		/* move */
		geti(x);
		geti(y);
		printf("PU;\n");
		printf("PA %d %d;\n",x,y);
		break;
	    case 'n':		/* draw */
		geti(x);
		geti(y);
		printf("PD;\n");
		printf("PA %d %d;\n",x,y);
		break;
	    case 't':		/* text */
		for (i = 0; (s[i] = getchar()) != '\n'; i++);
		s[i] = '\0';
		/* draw text */
		break;
	    case 's':		/* space */
		geti(x1);
		geti(y1);
		geti(x2);
		geti(y2);
		x1 *= ASPECT;
		x2 *= ASPECT;
		printf("SC %d %d %d %d;\n",x1,x2,y1,y2);
		printf("SP 1;\n");
		printf("PU;\n");
		printf("PA %d %d;\n",x1,y1);
		printf("PD;\n");
		printf("PA %d %d;\n",x1,y2);
		printf("PA %d %d;\n",x2,y2);
		printf("PA %d %d;\n",x2,y1);
		printf("PA %d %d;\n",x1,y1);
		break;
	    case 'C':		/* color */
		r = getchar();
		g = getchar();
		b = getchar();
		for (i = 0; i < numcolors; i++)
		    if (r == colors[i][0] 
		    &&  g == colors[i][1] 
		    &&  b == colors[i][2])
d52 79
a130 18
		if (i < numcolors)
		    i++;
		else
		    if (numcolors < 8) {
			colors[numcolors][0] = r;
			colors[numcolors][1] = g;
			colors[numcolors][2] = b;
			numcolors++;
			i++;
		    } else
			i = 8;
		printf("SP %d;\n",i);
		break;
	    default:
		break;
	}
	getb(c);
    } while (!feof(stdin));
@
