head	11.9;
access;
symbols
	ansi-20040405-merged:11.6.2.1
	postmerge-20040405-ansi:11.7
	premerge-20040404-ansi:11.6
	postmerge-autoconf:11.6
	autoconf-freeze:11.6
	premerge-autoconf:11.6
	postmerge-20040315-windows:11.6
	premerge-20040315-windows:11.6
	windows-20040315-freeze:11.6
	autoconf-20031203:11.6
	autoconf-20031202:11.6
	autoconf-branch:11.6.0.10
	phong-branch:11.6.0.8
	photonmap-branch:11.6.0.6
	rel-6-1-DP:11.6
	windows-branch:11.6.0.4
	rel-6-0-2:11.4
	ansi-branch:11.6.0.2
	rel-6-0-1-branch:11.4.0.2
	hartley-6-0-post:11.5
	hartley-6-0-pre:11.4
	rel-6-0-1:11.4
	rel-6-0:11.4
	rel-5-4:11.2
	offsite-5-3-pre:11.3
	rel-5-3:11.2
	rel-5-2:11.2
	rel-5-1-branch:11.2.0.2
	rel-5-1:11.2
	rel-5-0:11.2
	rel-5-0-beta:11.2
	rel-4-5:11.2
	ctj-4-5-post:11.2
	ctj-4-5-pre:11.2
	rel-4-4:11.1
	rel-4-0:10.1;
locks; strict;
comment	@ * @;


11.9
date	2004.05.21.14.57.37;	author morrison;	state dead;
branches;
next	11.8;

11.8
date	2004.05.10.15.30.50;	author erikg;	state Exp;
branches;
next	11.7;

11.7
date	2004.04.05.05.46.01;	author morrison;	state Exp;
branches;
next	11.6;

11.6
date	2002.08.20.17.08.55;	author jra;	state Exp;
branches
	11.6.2.1;
next	11.5;

11.5
date	2002.08.15.20.56.10;	author hartley;	state Exp;
branches;
next	11.4;

11.4
date	2001.08.10.20.57.05;	author butler;	state Exp;
branches;
next	11.3;

11.3
date	2000.08.23.19.04.26;	author mike;	state Exp;
branches;
next	11.2;

11.2
date	96.07.16.22.56.03;	author jra;	state Exp;
branches;
next	11.1;

11.1
date	95.01.04.10.11.48;	author mike;	state Rel4_4;
branches;
next	10.2;

10.2
date	94.08.23.15.05.36;	author gdurf;	state Exp;
branches;
next	10.1;

10.1
date	91.10.12.06.48.03;	author mike;	state Rel4_0;
branches;
next	1.7;

1.7
date	91.08.30.00.01.44;	author mike;	state Exp;
branches;
next	1.6;

1.6
date	91.07.16.21.01.45;	author butler;	state Exp;
branches;
next	1.5;

1.5
date	91.07.11.22.56.45;	author butler;	state Exp;
branches;
next	1.4;

1.4
date	91.06.12.22.38.36;	author mike;	state Exp;
branches;
next	1.3;

1.3
date	90.12.07.01.33.15;	author mike;	state Exp;
branches;
next	1.2;

1.2
date	90.12.05.06.08.52;	author mike;	state Exp;
branches;
next	1.1;

1.1
date	90.10.23.21.01.03;	author butler;	state Exp;
branches;
next	;

11.6.2.1
date	2002.09.19.18.02.35;	author morrison;	state Exp;
branches;
next	;


desc
@shrink a bw image by an integer factor
@


11.9
log
@moved to src/util/
@
text
@/*
 *			P I X S H R I N K . C
 *
 *	scale down a picture by a uniform factor.
 *
 *	Options
 *	h	help
 *
 *  Author -
 *	Lee A. Butler
 *  
 *  Source -
 *	SECAD/VLD Computing Consortium, Bldg 394
 *	The U. S. Army Ballistic Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5066
 *  
 *  Distribution Status -
 *	Public Domain, Distribution Unlimitied.
 */
#ifndef lint
static const char RCSid[] = "@@(#)$Header: /n/xoff/cvs/brlcad/util/bwshrink.c,v 11.8 2004/05/10 15:30:50 erikg Exp $ (BRL)";
#endif

#ifdef HAVE_CONFIG_H
# include "config.h"
#endif



#include <stdio.h>
#ifdef HAVE_STRING_H
#include <string.h>
#else
#include <strings.h>
#endif

#include "machine.h"
#include "externs.h"

/* declarations to support use of getopt() system call */
char *options = "uhs:w:n:f:";

char *progname = "(noname)";
char *filename = "(stdin)";

/*	S H R I N K _ I M A G E
 *
 *	
 */
void
shrink_image(int w, int h, unsigned char *buffer, int Factor)
{
	unsigned char *finalpixel;	/* output pixel pointer */
	unsigned int p;		/* pixel sum/average */
	int facsq, x, y, px, py;

	facsq = Factor * Factor;
	finalpixel = buffer;

	for (y=0 ; y < h ; y += Factor)
		for (x=0 ; x < w ; x += Factor) {

			/* average factor by factor grid of pixels */

			p = 0;
			for (py = 0 ; py < Factor ; py++) {

				/* add pixels from scanline to average */
				for (px = 0 ; px < Factor ; px++) {
					p += buffer[y*w + x+px];
				}
			}

			/* store resultant pixel back in buffer */
			*finalpixel++ = p / facsq;
		}
}

/*
 *	Undersample image pixels
 */
void
usample_image(int w, int h, unsigned char *buffer, int Factor)
{
	register int x, y;
	register unsigned char *p;

	p = buffer;

	for (y=0 ; y < h ; y += Factor)
		for (x=0 ; x < w ; x += Factor, p++) {
			p[0] = buffer[x + y * w];
		}
}


int width = 512;
int height = 512;
int factor = 2;

#define METH_BOXCAR 1
#define METH_UNDERSAMPLE 2
int method = METH_BOXCAR;

/*
 *	U S A G E --- tell user how to invoke this program, then exit
 */
void usage(void)
{
	(void) fprintf(stderr,
"Usage: %s [-u] [-h] [-w width] [-n scanlines] [-s squaresize]\n\
[-f shrink_factor] [pixfile] > pixfile\n", progname);
	exit(1);
}


/*
 *	P A R S E _ A R G S --- Parse through command line flags
 */
void parse_args(int ac, char **av)
{
	int  c;

	if (!(progname = strrchr(*av, '/')))
		progname = *av;
	
	/* Turn off getopt's error messages */
	opterr = 0;

	/* get all the option flags from the command line */
	while ((c=getopt(ac,av,options)) != EOF)
		switch (c) {
		case 'f'	: if ((c = atoi(optarg)) > 1)
					factor = c;
				  break;
		case 'h'	: width = height = 1024; break;
		case 'n'	: if ((c=atoi(optarg)) > 0)
					height = c;
				  break;
		case 'w'	: if ((c=atoi(optarg)) > 0)
					width = c;
				  break;
		case 's'	: if ((c=atoi(optarg)) > 0)
					height = width = c;
				  break;
		case 'u'	: method = METH_UNDERSAMPLE; break; 
		case '?'	:
		default		: usage(); break;
		}

	if (optind >= ac) {
		if (isatty(fileno(stdout)) )
			usage();
	}
	if (optind < ac) {
		if (freopen(av[optind], "r", stdin) == (FILE *)NULL) {
			perror(av[optind]);
			exit(-1);
		} else
			filename = av[optind];
	}
	if (optind+1 < ac)
		(void)fprintf(stderr, "%s: Excess arguments ignored\n", progname);

}




/*
 *	M A I N
 *
 *	Call parse_args to handle command line arguments first, then
 *	process input.
 */
int main(int ac, char **av)
{
	unsigned char *buffer = (unsigned char *)NULL;
	int	size;
	int	c = 0;
	register int t;

	(void)parse_args(ac, av);
	if (isatty(fileno(stdin))) usage();

	/* process stdin */

	/* get buffer for image */
	size = width * height;
	if ((buffer = (unsigned char *)malloc(width*height)) == (unsigned char *)NULL) {
		(void)fprintf(stderr, "%s: cannot allocate input buffer\n", 
			progname);
		exit(-1);
	}

	/* read in entire image */
	for (t=0 ; t < size && (c=read(0, (char *)&buffer[t], size-t)) >= 0 ; 
		t += c);

	if (c < 0) {
		perror (filename);
		return(-1);
	}

	switch (method) {
	case METH_BOXCAR : shrink_image(width, height, buffer, factor); break;
	case METH_UNDERSAMPLE : usample_image(width, height, buffer, factor);
				break;
	default: return(-1);
	}

	for (t=0 ; t < size && (c=write(1, (char *)&buffer[t], size-t)) >= 0 ;
		t += c);

	if (c < 0) {
		perror("stdout");
		return(-1);
	}

	return(0);
}


@


11.8
log
@change conf.h to a wrapped config.h
@
text
@d21 1
a21 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/util/bwshrink.c,v 11.7 2004/04/05 05:46:01 morrison Exp $ (BRL)";
@


11.7
log
@merge of ansi-6-0-branch into head
@
text
@d21 1
a21 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
d24 5
a28 1
#include "conf.h"
@


11.6
log
@Restoration of entire source tree to Pre-Hartley state
@
text
@d21 1
a21 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/bwshrink.c,v 11.4 2001/08/10 20:57:05 butler Exp $ (BRL)";
d47 1
a47 3
shrink_image(w, h, buffer, Factor)
unsigned char *buffer;
int Factor, w, h;
d79 1
a79 3
usample_image(w, h, buffer, Factor)
unsigned char *buffer;
int Factor, w, h;
d104 1
a104 1
void usage()
d116 1
a116 3
void parse_args(ac, av)
int ac;
char *av[];
d172 1
a172 3
int main(ac,av)
int ac;
char *av[];
@


11.6.2.1
log
@Initial ANSIfication
@
text
@d21 1
a21 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/bwshrink.c,v 11.6 2002/08/20 17:08:55 jra Exp $ (BRL)";
d47 3
a49 1
shrink_image(int w, int h, unsigned char *buffer, int Factor)
d81 3
a83 1
usample_image(int w, int h, unsigned char *buffer, int Factor)
d108 1
a108 1
void usage(void)
d120 3
a122 1
void parse_args(int ac, char **av)
d178 3
a180 1
int main(int ac, char **av)
@


11.5
log
@Converted from K&R to ANSI C - RFH
@
text
@d47 3
a49 1
shrink_image(int w, int h, unsigned char *buffer, int Factor)
d81 3
a83 1
usample_image(int w, int h, unsigned char *buffer, int Factor)
d108 1
a108 1
void usage(void)
d120 3
a122 1
void parse_args(int ac, char **av)
d178 3
a180 1
int main(int ac, char **av)
@


11.4
log
@Misc compiler warnings eliminated
@
text
@d21 1
a21 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/bwshrink.c,v 11.3 2000/08/23 19:04:26 mike Exp $ (BRL)";
d47 1
a47 3
shrink_image(w, h, buffer, Factor)
unsigned char *buffer;
int Factor, w, h;
d79 1
a79 3
usample_image(w, h, buffer, Factor)
unsigned char *buffer;
int Factor, w, h;
d104 1
a104 1
void usage()
d116 1
a116 3
void parse_args(ac, av)
int ac;
char *av[];
d172 1
a172 3
int main(ac,av)
int ac;
char *av[];
@


11.3
log
@
const RCSid
@
text
@d21 1
a21 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/bwshrink.c,v 11.2 1996/07/16 22:56:03 jra Exp $ (BRL)";
d27 1
a27 1
#ifdef USE_STRING_H
@


11.2
log
@Minor mods for IRIX 6.2
@
text
@d21 1
a21 1
static char RCSid[] = "@@(#)$Header: /m/cad/util/RCS/bwshrink.c,v 11.1 1995/01/04 10:11:48 mike Rel4_4 jra $ (BRL)";
@


11.1
log
@Release_4.4
@
text
@d21 1
a21 1
static char RCSid[] = "@@(#)$Header: /m/cad/util/RCS/bwshrink.c,v 10.2 94/08/23 15:05:36 gdurf Exp $ (BRL)";
d46 1
d80 1
@


10.2
log
@Factored ifdefs
@
text
@d21 1
a21 1
static char RCSid[] = "@@(#)$Header: /m/cad/util/RCS/bwshrink.c,v 10.1 1991/10/12 06:48:03 mike Rel4_0 gdurf $ (BRL)";
@


10.1
log
@Release_4.0
@
text
@d21 1
a21 1
static char RCSid[] = "@@(#)$Header: /m/cad/util/RCS/bwshrink.c,v 1.7 91/08/30 00:01:44 mike Exp $ (BRL)";
d24 2
d27 3
a29 2
#include <sys/types.h>
#ifdef BSD
d32 1
a32 3
#ifdef SYSV
#include <string.h>
#endif
@


1.7
log
@u_char is no good
@
text
@d21 1
a21 1
static char RCSid[] = "@@(#)$Header: /m/cad/util/RCS/bwshrink.c,v 1.6 91/07/16 21:01:45 butler Exp $ (BRL)";
@


1.6
log
@removed declaration of strrchr which is now in externs.h
@
text
@d21 1
a21 1
static char RCSid[] = "@@(#)$Header: /m/cad/util/RCS/bwshrink.c,v 1.5 91/07/11 22:56:45 butler Exp $ (BRL)";
d46 1
a46 1
u_char *buffer;
d49 1
a49 1
	u_char *finalpixel;	/* output pixel pointer */
d79 1
a79 1
u_char *buffer;
d83 1
a83 1
	register u_char *p;
d179 1
a179 1
	u_char *buffer = (u_char *)NULL;
d191 1
a191 1
	if ((buffer = (u_char *)malloc(width*height)) == (u_char *)NULL) {
@


1.5
log
@added declaration of strrchr before use
@
text
@d21 1
a21 1
static char RCSid[] = "@@(#)$Header: /m/cad/util/RCS/bwshrink.c,v 1.4 91/06/12 22:38:36 mike Exp $ (BRL)";
a121 1
	char *strrchr();
@


1.4
log
@lint
@
text
@d21 1
a21 1
static char RCSid[] = "@@(#)$Header$ (BRL)";
d122 2
a123 1
	
@


1.3
log
@lint
@
text
@d1 2
a2 1
/*	P I X S H R I N K . C
d8 11
d20 4
d32 1
a36 2
extern char *optarg;
extern int optind, opterr, getopt();
a120 1
	char *strrchr();
a121 1

@


1.2
log
@malloc.h is not portable, externs.h is.
@
text
@d167 2
a168 1
	int size, c;
@


1.1
log
@Initial revision
@
text
@a8 1
#include <malloc.h>
d16 1
@
