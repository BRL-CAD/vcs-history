head	11.13;
access;
symbols
	ansi-20040405-merged:11.9.2.2
	postmerge-20040405-ansi:11.11
	premerge-20040404-ansi:11.10
	postmerge-autoconf:11.10
	autoconf-freeze:11.9.10.2
	premerge-autoconf:11.10
	postmerge-20040315-windows:11.10
	premerge-20040315-windows:11.10
	windows-20040315-freeze:11.9.4.1
	autoconf-20031203:11.9
	autoconf-20031202:11.9
	autoconf-branch:11.9.0.10
	phong-branch:11.9.0.8
	photonmap-branch:11.9.0.6
	rel-6-1-DP:11.9
	windows-branch:11.9.0.4
	rel-6-0-2:11.7
	ansi-branch:11.9.0.2
	rel-6-0-1-branch:11.7.0.2
	hartley-6-0-post:11.8
	hartley-6-0-pre:11.7
	rel-6-0-1:11.7
	rel-6-0:11.7
	rel-5-4:11.3
	offsite-5-3-pre:11.5
	rel-5-3:11.3
	rel-5-2:11.3
	rel-5-1-branch:11.3.0.2
	rel-5-1:11.3
	rel-5-0:11.3
	rel-5-0-beta:11.3
	rel-4-5:11.1
	ctj-4-5-post:11.1
	ctj-4-5-pre:11.1
	rel-4-4:11.1
	rel-4-0:10.1
	rel-3-5:9.1
	rel-3-0:8.1
	rel-2-3:7.1
	rel-2-0:6.1
	rel-1-24:5.1;
locks; strict;
comment	@ * @;


11.13
date	2004.05.21.14.57.40;	author morrison;	state dead;
branches;
next	11.12;

11.12
date	2004.05.10.15.30.50;	author erikg;	state Exp;
branches;
next	11.11;

11.11
date	2004.04.05.05.46.01;	author morrison;	state Exp;
branches;
next	11.10;

11.10
date	2004.02.02.17.39.45;	author morrison;	state Exp;
branches;
next	11.9;

11.9
date	2002.08.20.17.08.58;	author jra;	state Exp;
branches
	11.9.2.1
	11.9.4.1
	11.9.10.1;
next	11.8;

11.8
date	2002.08.15.20.56.10;	author hartley;	state Exp;
branches;
next	11.7;

11.7
date	2001.08.10.20.57.06;	author butler;	state Exp;
branches;
next	11.6;

11.6
date	2001.08.08.03.28.15;	author butler;	state Exp;
branches;
next	11.5;

11.5
date	2000.09.01.03.23.48;	author mike;	state Exp;
branches;
next	11.4;

11.4
date	2000.08.23.19.04.31;	author mike;	state Exp;
branches;
next	11.3;

11.3
date	98.09.14.17.24.43;	author bparker;	state Exp;
branches;
next	11.2;

11.2
date	98.09.14.15.59.23;	author bparker;	state Exp;
branches;
next	11.1;

11.1
date	95.01.04.10.11.59;	author mike;	state Rel4_4;
branches;
next	10.11;

10.11
date	94.12.23.08.59.27;	author jra;	state Exp;
branches;
next	10.10;

10.10
date	94.12.19.18.25.43;	author mike;	state Exp;
branches;
next	10.9;

10.9
date	94.12.15.14.01.22;	author jra;	state Exp;
branches;
next	10.8;

10.8
date	94.12.09.08.44.58;	author jra;	state Exp;
branches;
next	10.7;

10.7
date	94.10.28.02.59.11;	author butler;	state Exp;
branches;
next	10.6;

10.6
date	94.10.18.02.27.21;	author mike;	state Exp;
branches;
next	10.5;

10.5
date	94.09.01.15.21.39;	author gdurf;	state Exp;
branches;
next	10.4;

10.4
date	94.09.01.05.55.16;	author gdurf;	state Exp;
branches;
next	10.3;

10.3
date	94.08.23.15.05.38;	author gdurf;	state Exp;
branches;
next	10.2;

10.2
date	93.10.26.02.37.23;	author mike;	state Exp;
branches;
next	10.1;

10.1
date	91.10.12.06.48.10;	author mike;	state Rel4_0;
branches;
next	9.1;

9.1
date	89.05.19.06.08.10;	author mike;	state Rel3_5;
branches;
next	8.3;

8.3
date	89.03.07.00.27.51;	author mike;	state Exp;
branches;
next	8.2;

8.2
date	89.02.27.01.01.57;	author phil;	state Exp;
branches;
next	8.1;

8.1
date	88.10.05.00.40.53;	author mike;	state Rel3_0;
branches;
next	7.6;

7.6
date	88.09.10.05.37.38;	author mike;	state Exp;
branches;
next	7.5;

7.5
date	88.05.17.03.26.25;	author mike;	state Exp;
branches;
next	7.4;

7.4
date	88.05.16.04.31.23;	author mike;	state Exp;
branches;
next	7.3;

7.3
date	88.05.16.00.22.57;	author mike;	state Exp;
branches;
next	7.2;

7.2
date	88.05.16.00.06.26;	author mike;	state Exp;
branches;
next	7.1;

7.1
date	87.11.03.00.06.17;	author mike;	state Rel;
branches;
next	6.1;

6.1
date	87.07.11.08.09.36;	author mike;	state Rel;
branches;
next	5.3;

5.3
date	87.06.25.03.45.02;	author mike;	state Exp;
branches;
next	5.2;

5.2
date	87.06.25.03.19.46;	author phil;	state Exp;
branches;
next	5.1;

5.1
date	87.06.24.22.37.28;	author mike;	state Rel;
branches;
next	1.1;

1.1
date	87.06.20.05.53.38;	author mike;	state Exp;
branches;
next	;

11.9.2.1
date	2002.09.19.18.02.36;	author morrison;	state Exp;
branches;
next	11.9.2.2;

11.9.2.2
date	2004.03.17.21.23.23;	author morrison;	state Exp;
branches;
next	;

11.9.4.1
date	2004.03.11.23.52.30;	author morrison;	state Exp;
branches;
next	;

11.9.10.1
date	2004.02.12.19.43.09;	author erikg;	state Exp;
branches;
next	11.9.10.2;

11.9.10.2
date	2004.03.15.14.08.11;	author erikg;	state Exp;
branches;
next	;


desc
@Common routines for managing the RS-232 interface to a Dunn Camera
@


11.13
log
@moved to src/util/
@
text
@/*
 *			D U N N C O M M . C
 *
 *	Common routines needed for both dunncolor and dunnsnap
 *
 *  Author -
 *	Don Merritt
 *	August 1985
 *  
 *  Source -
 *	SECAD/VLD Computing Consortium, Bldg 394
 *	The U. S. Army Ballistic Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5066
 *  
 *  Copyright Notice -
 *	This software is Copyright (C) 1986-2004 by the United States Army.
 *	All rights reserved.
 */
#ifndef lint
static const char RCSid[] = "@@(#)$Header: /n/xoff/cvs/brlcad/util/dunncomm.c,v 11.12 2004/05/10 15:30:50 erikg Exp $ (BRL)";
#endif

#ifdef HAVE_CONFIG_H
# include "config.h"
#endif



#include <stdio.h>
#include <fcntl.h>
#include <signal.h>
#ifdef HAVE_STRING_H
#include <string.h>
#else
#include <strings.h>
#endif

#include <sys/time.h>
#ifdef __NetBSD__
#	define USE_OLD_TTY
#	include <sys/ioctl_compat.h>
#endif
#if defined(__bsdi__)
#	include <sys/ioctl_compat.h>
#	define OCRNL   0000010
#endif

#include "machine.h"
#include "externs.h"

/*
 *  This file will work IFF one of these three flags is set:
 *	HAVE_TERMIOS_H	use POSIX termios and tcsetattr() call with XOPEN flags
 *	SYSV		use SysV Rel3 termio and TCSETA ioctl
 *	BSD		use Version 7 / BSD sgttyb and TIOCSETP ioctl
 */

#if defined(HAVE_TERMIOS_H)
#  undef SYSV
#  undef BSD
#  include <termios.h>

	static struct termios	tty;

#else	/* !defined(HAVE_TERMIOS_H) */

#  ifdef BSD
#    include <sys/ioctl.h>
     struct	sgttyb	tty;
#    define TCSETA	TIOCSETP
#    define TCGETA	TIOCGETP
#  endif	/* BSD */

#  ifdef SYSV
#if 0
#	if !defined(__sparc) && !defined(CRAY)
		struct timeval {
			int	tv_sec;
			int	tv_usec;
	};
#	endif
#endif
#   include <termio.h>
    struct	termio	tty;
#  endif /* SYSV */

#endif /* _POSIX_SOURCE */

#ifndef OCRNL
#define OCRNL 0x00000008
#endif

#ifndef TAB1
#define TAB1 0x00000400
#endif

#ifndef TAB2
#define TAB2 0x00000800
#endif

#ifndef	XTABS
#	define	XTABS	(TAB1 | TAB2)
#endif /* XTABS */

int fd;
char cmd;
unsigned char	status[4];
unsigned char	values[21];
fd_set	readfds;
int	polaroid = 0;		/* 0 = aux camera, 1 = Polaroid 8x10 */

void
unsnooze(int x)
{
	printf("\007dunnsnap: request timed out, aborting\n");
	exit(1);
}

/*
 *			D U N N O P E N
 */
void
dunnopen(void)
{

	/* open the camera device */

#ifdef HAVE_TERMIOS_H
	if( (fd = open("/dev/camera", O_RDWR | O_NONBLOCK)) < 0 )
#else
	if( (fd = open("/dev/camera", O_RDWR | O_NDELAY)) < 0 )
#endif
	{
	     	printf("\007dunnopen: can't open /dev/camera\n");
		close(fd);
		exit(10);
	}
#ifdef HAVE_TERMIOS_H
	if( tcgetattr( fd, &tty ) < 0 )
#else
	if( ioctl(fd, TCGETA, &tty) < 0)
#endif
	{
	     	printf("\007dunnopen: can't open /dev/camera\n");
		close(fd);
		exit(10);
	}
	
	/* set up the camera device */
	
#ifdef BSD
	tty.sg_ispeed = tty.sg_ospeed = B9600;
	tty.sg_flags = RAW | EVENP | ODDP | XTABS;
#endif
#if defined(SYSV) || defined(HAVE_TERMIOS_H)
	tty.c_cflag = B9600 | CS8;	/* Character size = 8 bits */
	tty.c_cflag &= ~CSTOPB;		/* One stop bit */
	tty.c_cflag |= CREAD;		/* Enable the reader */
	tty.c_cflag &= ~PARENB;		/* Parity disable */
	tty.c_cflag &= ~HUPCL;		/* No hangup on close */
	tty.c_cflag |= CLOCAL;		/* Line has no modem control */

	tty.c_iflag &= ~(BRKINT|ICRNL|INLCR|IXON|IXANY|IXOFF);
	tty.c_iflag |= IGNBRK|IGNPAR;

	tty.c_oflag &= ~(OPOST|ONLCR|OCRNL);	/* Turn off all post-processing */
#if defined(XTABS)
	tty.c_oflag |= XTABS;		/* output tab expansion ON */
#endif
	tty.c_cc[VMIN] = 1;
	tty.c_cc[VTIME] = 0;

	tty.c_lflag &= ~ICANON;		/* Raw mode */
	tty.c_lflag &= ~ISIG;		/* Signals OFF */
	tty.c_lflag &= ~(ECHO|ECHOE|ECHOK);	/* Echo mode OFF */
#endif

#if HAVE_TERMIOS_H
	if( tcsetattr( fd, TCSAFLUSH, &tty ) < 0 )
#else
	if( ioctl(fd, TCSETA, &tty) < 0 )
#endif
	{
		perror("/dev/camera");
		exit(20);
	}

	/* Be certain the FNDELAY is off */
	if( fcntl(fd, F_SETFL, 0) < 0 )  {
		perror("/dev/camera");
		exit(21);
	}

	/* Set up alarm clock catcher */
	(void)signal( SIGALRM, unsnooze );
}

/*
 *			M R E A D
 *
 * This function performs the function of a read(II) but will
 * call read(II) multiple times in order to get the requested
 * number of characters.  This can be necessary because pipes
 * and network connections don't deliver data with the same
 * grouping as it is written with.
 */
static int
mread(int fd, register unsigned char *bufp, unsigned int n)
{
	register unsigned	count = 0;
	register int		nread;

	do {
		nread = read(fd, bufp, n-count);
		if(nread == -1)
			return(nread);
		if(nread == 0)
			return((int)count);
		count += (unsigned)nread;
		bufp += nread;
	 } while(count < n);

	return((int)count);
}

/*
 *			G O O D S T A T U S
 *
 *	Checks the status of the Dunn camera and returns 1 for good status
 *	and 0 for bad status.
 *
 */
int
goodstatus(void)
{
	struct timeval waittime, *timeout;

	timeout = &waittime;
	timeout->tv_sec = 10;
	timeout->tv_usec = 0;
	
	cmd = ';';	/* status request cmd */
	write(fd, &cmd, 1);	
	FD_ZERO(&readfds);
	FD_SET(fd, &readfds);
	select(fd+1, &readfds, (fd_set *)0, (fd_set *)0, timeout);
	if( FD_ISSET(fd, &readfds) ==0 ) {
		printf("\007dunnsnap: status request timed out\n");
		return(0);
	}

	(void)mread(fd, status, 4);
	alarm(0);

	if (status[0]&0x1)  printf("No vertical sync\n");
	if (status[0]&0x2)  printf("8x10 not ready\n");
	if (status[0]&0x4)  printf("Expose in wrong mode\n");
	if (status[0]&0x8)  printf("Aux camera out of film\n");
	if (status[1]&0x1)  printf("B/W mode\n");
	if (status[1]&0x2)  printf("Separate mode\n");
	if (status[2]&0x1)  printf("Y-smoothing off\n");

	if ((status[0]&0xf) == 0x0 &&
	    (status[1]&0x3) == 0x0 &&
	    (status[3]&0x7f)== '\r')
		return 1;	/* status is ok */

	printf("\007dunnsnap: status error from camera\n");
	printf("status[0]= 0x%x [1]= 0x%x [2]= 0x%x [3]= 0x%x\n",
		status[0]&0x7f,status[1]&0x7f,
		status[2]&0x7f,status[3]&0x7f);
	return 0;	/* status is bad or request timed out */
}

/*
 *			H A N G T E N 
 *
 *	Provides a 10 millisecond delay when called
 *
 */
void
hangten(void)
{
	static struct timeval delaytime = { 0, 10000}; /* set timeout to 10mS*/

	select(0, (fd_set *)0, (fd_set *)0, (fd_set *)0, &delaytime);
}

/*
 *			R E A D Y
 *
 *	Sends a ready test command to the Dunn camera and returns 1 if the
 *	camera is ready or 0 if the camera is not ready after waiting the
 *	number of seconds specified by the argument.
 *
 */
int
ready(int nsecs)
{
	register int i;

	struct timeval waittime, *timeout;
	timeout = &waittime;
	timeout->tv_sec = nsecs;
	timeout->tv_usec = 0;

	cmd = ':';	/* ready test command */
	write(fd, &cmd, 1);

	FD_ZERO(&readfds);
	FD_SET(fd, &readfds);
	select(fd+1, &readfds, (fd_set *)0, (fd_set *)0, timeout);
	if ( FD_ISSET(fd, &readfds) ) {
		return 0;	/* timeout after n secs */
	}
	status[0] = status[1] = '\0';
	/* This loop is needed to skip leading nulls in input stream */
	do {
		i = read(fd, &status[0], 1);
		if( i != 1 )  {
			printf("dunnsnap:  unexpected EOF %d\n", i);
			return(0);
		}
	} while( status[0] == '\0' );
	(void)read(fd, &status[1], 1);

	if((status[0]&0x7f) == 'R' && (status[1]&0x7f) == '\r')
		return 1;	/* camera is ready */

	printf("dunnsnap/ready():  unexpected camera status 0%o 0%o\n",
		status[0]&0x7f, status[1]&0x7f);
	return 0;	/* camera is not ready */
}

/*
 *			G E T E X P O S U R E
 *
 *  Get and print the current exposure
 */
void
getexposure(char *title)
{
	struct timeval waittime;

	waittime.tv_sec = 20;
	waittime.tv_usec = 0;

	if(!ready(20)) {
		printf("dunncolor: (getexposure) camera not ready\n");
		exit(60);
	}

	if(polaroid)
		cmd = '<';	/* req 8x10 exposure values */
	else
		cmd = '=';	/* request AUX exposure values */
	write(fd, &cmd, 1);
	FD_ZERO(&readfds);
	FD_SET(fd, &readfds);
	select(fd+1, &readfds, (fd_set *)0, (fd_set *)0, &waittime);
	if( FD_ISSET(fd, &readfds) ) {
		printf("dunncolor:\007 %s request exposure value cmd: timed out\n", title);
		exit(40);
	}

	(void)mread(fd, values, 20);

	values[20] = '\0';
	printf("dunncolor: %s = %s\n", title, values);
}

/*
 *			D U N N S E N D
 *
 */
int
dunnsend(char color, int val)
{
	char digit;

	if(val < 0 || val > 255) {
		printf("dunncolor: bad value %d\n",val);
		return(-1);
	}

	if(!ready(5)) {
		printf("dunncolor: dunnsend(), camera not ready\n");
		return(-1);
	}

	if( polaroid )
		cmd = 'K';	/* set 8x10 exposure values */
	else
		cmd = 'L';	/* set AUX exposure values */
	write(fd, &cmd, 1);
	hangten();
	write(fd, &color, 1);
	hangten();
	digit = (val/100 + 0x30)&0x7f;
	write(fd, &digit, 1);
	hangten();
	val = val%100;
	digit = (val/10 + 0x30)&0x7f;
	write(fd, &digit, 1);
	hangten();
	digit = (val%10 + 0x30)&0x7f;
	write(fd, &digit,1);
	hangten();
	return(0);		/* OK */
}
@


11.12
log
@change conf.h to a wrapped config.h
@
text
@d20 1
a20 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/util/dunncomm.c,v 11.11 2004/04/05 05:46:01 morrison Exp $ (BRL)";
@


11.11
log
@merge of ansi-6-0-branch into head
@
text
@d20 1
a20 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
d23 5
a27 1
#include "conf.h"
@


11.10
log
@update copyright to include span through 2003
@
text
@d20 1
a20 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/dunncomm.c,v 11.9 2002/08/20 17:08:58 jra Exp $ (BRL)";
d109 1
a109 2
unsnooze(x)
int	x;
d119 1
a119 1
dunnopen()
d204 1
a204 4
mread(fd, bufp, n)
int fd;
register unsigned char	*bufp;
unsigned	n;
d230 1
a230 1
goodstatus()
d278 1
a278 1
hangten()
d294 1
a294 2
ready(nsecs)
int nsecs;
d337 1
a337 2
getexposure(title)
char *title;
d373 1
a373 3
dunnsend(color,val)
char color;
int val;
@


11.9
log
@Restoration of entire source tree to Pre-Hartley state
@
text
@d16 1
a16 1
 *	This software is Copyright (C) 1986 by the United States Army.
d20 1
a20 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/dunncomm.c,v 11.7 2001/08/10 20:57:06 butler Exp $ (BRL)";
@


11.9.4.1
log
@sync to HEAD...
@
text
@d16 1
a16 1
 *	This software is Copyright (C) 1986-2004 by the United States Army.
d20 1
a20 1
static const char RCSid[] = "@@(#)$Header: /n/cad/c/CVS/brlcad/util/dunncomm.c,v 11.10 2004/02/02 17:39:45 morrison Exp $ (BRL)";
@


11.9.10.1
log
@merge from HEAD
@
text
@d16 1
a16 1
 *	This software is Copyright (C) 1986-2004 by the United States Army.
d20 1
a20 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/dunncomm.c,v 11.10 2004/02/02 17:39:45 morrison Exp $ (BRL)";
@


11.9.10.2
log
@merge from head
@
text
@d20 1
a20 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/dunncomm.c,v 11.9.10.1 2004/02/12 19:43:09 erikg Exp $ (BRL)";
@


11.9.2.1
log
@Initial ANSIfication
@
text
@d20 1
a20 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/dunncomm.c,v 11.9 2002/08/20 17:08:58 jra Exp $ (BRL)";
d109 2
a110 1
unsnooze(int x)
d120 1
a120 1
dunnopen(void)
d205 4
a208 1
mread(int fd, register unsigned char *bufp, unsigned int n)
d234 1
a234 1
goodstatus(void)
d282 1
a282 1
hangten(void)
d298 2
a299 1
ready(int nsecs)
d342 2
a343 1
getexposure(char *title)
d379 3
a381 1
dunnsend(char color, int val)
@


11.9.2.2
log
@sync branch with HEAD
@
text
@d16 1
a16 1
 *	This software is Copyright (C) 1986-2004 by the United States Army.
d20 1
a20 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
@


11.8
log
@Converted from K&R to ANSI C - RFH
@
text
@d109 2
a110 1
unsnooze(int x)
d120 1
a120 1
dunnopen(void)
d205 4
a208 1
mread(int fd, register unsigned char *bufp, unsigned int n)
d234 1
a234 1
goodstatus(void)
d282 1
a282 1
hangten(void)
d298 2
a299 1
ready(int nsecs)
d342 2
a343 1
getexposure(char *title)
d379 3
a381 1
dunnsend(char color, int val)
@


11.7
log
@Misc compiler warnings eliminated
@
text
@d20 1
a20 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/dunncomm.c,v 11.6 2001/08/08 03:28:15 butler Exp $ (BRL)";
d109 1
a109 2
unsnooze(x)
int	x;
d119 1
a119 1
dunnopen()
d204 1
a204 4
mread(fd, bufp, n)
int fd;
register unsigned char	*bufp;
unsigned	n;
d230 1
a230 1
goodstatus()
d278 1
a278 1
hangten()
d294 1
a294 2
ready(nsecs)
int nsecs;
d337 1
a337 2
getexposure(title)
char *title;
d373 1
a373 3
dunnsend(color,val)
char color;
int val;
@


11.6
log
@Misc compiler warnings eliminated
@
text
@d20 1
a20 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/dunncomm.c,v 11.5 2000/09/01 03:23:48 mike Exp $ (BRL)";
d28 1
a28 1
#ifdef USE_STRING_H
@


11.5
log
@
Lint fix
@
text
@d20 1
a20 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/dunncomm.c,v 11.4 2000/08/23 19:04:31 mike Exp $ (BRL)";
d28 6
@


11.4
log
@
const RCSid
@
text
@d20 1
a20 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/dunncomm.c,v 11.3 1998/09/14 17:24:43 bparker Exp $ (BRL)";
d227 1
a227 1

d291 1
@


11.3
log
@*- if not previously defined, define OCRNL, TAB1, and TAB2
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/dunncomm.c,v 11.2 1998/09/14 15:59:23 bparker Exp $ (BRL)";
@


11.2
log
@*- fix typos
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/dunncomm.c,v 11.1 1995/01/04 10:11:59 mike Rel4_4 $ (BRL)";
d78 13
@


11.1
log
@Release_4.4
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: /m/cad/util/RCS/dunncomm.c,v 10.11 94/12/23 08:59:27 jra Exp $ (BRL)";
d65 1
d72 1
@


10.11
log
@Changed mread to use unsigned char buffer.
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: /m/cad/util/RCS/dunncomm.c,v 10.10 94/12/19 18:25:43 mike Exp $ (BRL)";
@


10.10
log
@Linux.  Changed to HAVE_TERMIOS_H.
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: /m/cad/util/RCS/dunncomm.c,v 10.9 94/12/15 14:01:22 jra Exp Locker: mike $ (BRL)";
d186 1
a186 1
register char	*bufp;
d231 1
a231 1
	mread(fd, status, 4);
d346 1
a346 1
	mread(fd, values, 20);
@


10.9
log
@Mods for CRAY.
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: /n/wolf/m/cad/util/RCS/dunncomm.c,v 10.8 94/12/09 08:44:58 jra Exp Locker: jra $ (BRL)";
a31 1
#	define TAB3 (TAB1|TAB2)
a34 1
#	define TAB3 (TAB1|TAB2)
d43 1
a43 1
 *	HAVE_XOPEN	use POSIX termios and tcsetattr() call with XOPEN flags
d48 1
a48 1
#if defined(HAVE_XOPEN)
d55 1
a55 1
#else	/* !defined(HAVE_XOPEN) */
a61 3
#    ifndef	XTABS
#	define	XTABS	(TAB1 | TAB2)
#    endif /* Not XTABS */
d76 3
d104 1
a104 1
#ifdef HAVE_XOPEN
d114 1
a114 1
#ifdef HAVE_XOPEN
d131 1
a131 1
#if defined(SYSV) || defined(HAVE_XOPEN)
d143 3
a145 1
	tty.c_oflag |= TAB3;		/* output tab expansion ON */
d154 1
a154 1
#if HAVE_XOPEN
@


10.8
log
@MOd for CRAY1
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: /n/wolf/m/cad/util/RCS/dunncomm.c,v 10.7 94/10/28 02:59:11 butler Exp Locker: jra $ (BRL)";
d70 1
a70 1
#	if !defined(__sparc) && !defined(CRAY1)
@


10.7
log
@bsdi patch
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: /m/cad/util/RCS/dunncomm.c,v 10.6 1994/10/18 02:27:21 mike Exp butler $ (BRL)";
d70 1
a70 1
#	if !defined(__sparc)
@


10.6
log
@Incredibly grubby hack to get it to compile on SunOS 5.2
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: /m/cad/util/RCS/dunncomm.c,v 10.5 94/09/01 15:21:39 gdurf Exp Locker: mike $ (BRL)";
d33 5
@


10.5
log
@Another NetBSD tweak
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: /m/cad/util/RCS/dunncomm.c,v 10.4 1994/09/01 05:55:16 gdurf Exp gdurf $ (BRL)";
d65 6
a70 4
struct timeval {
	int	tv_sec;
	int	tv_usec;
};
@


10.4
log
@Added NetBSD tweak
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: /m/cad/util/RCS/dunncomm.c,v 10.3 1994/08/23 15:05:38 gdurf Exp gdurf $ (BRL)";
d30 1
@


10.3
log
@Factored ifdefs
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: /m/cad/util/RCS/dunncomm.c,v 10.2 1993/10/26 02:37:23 mike Exp gdurf $ (BRL)";
d29 4
@


10.2
log
@POSIX support
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: /m/cad/util/RCS/dunncomm.c,v 10.1 91/10/12 06:48:10 mike Rel4_0 Locker: mike $ (BRL)";
d23 2
d28 4
d35 1
a35 1
 *	_POSIX_SOURCE	use POXIX termios and tcsetattr() call
d40 1
a40 4
#if defined(_POSIX_SOURCE)
#  if !defined(_XOPEN_SOURCE)
#	define _XOPEN_SOURCE 1	/* to get TAB3, etc */
#  endif
d47 1
a47 1
#else	/* !defined(_POSIX_SOURCE) */
a49 1
#    include <sys/time.h>
d74 1
a74 1
int	readfds;
d94 1
a94 1
#if _POSIX_SOURCE
d104 1
a104 1
#if _POSIX_SOURCE
d121 1
a121 1
#if defined(SYSV) || defined(_POSIX_SOURCE)
d142 1
a142 1
#if _POSIX_SOURCE
a202 1
#ifdef BSD
a207 1
#endif
d211 4
a214 4
#ifdef BSD
	readfds = 1<<fd;
	select(fd+1, &readfds, (int *)0, (int *)0, timeout);
	if( (readfds & (1<<fd)) ==0 ) {
a217 4
#else
	/* Set an alarm, and then just hang a read */
	alarm(10);
#endif
a250 1
#ifdef BSD
d253 1
a253 12
	select(0, (int *)0, (int *)0, (int *)0, &delaytime);
#else
	register int i;
	register int a, b;
	/* On a 10 MIPS machine, do 10,000,000 * 0.010 adds,
	 * to approximate 10mS
	 */
	b = 2;
	for( i=0; i < 100000; i++ )
		b = b + i;
	a = b;
#endif
a268 1
#ifdef BSD
a272 1
#endif
d276 5
a280 4
#ifdef BSD
	readfds = 1<<fd;
	select(fd+1, &readfds, (int *)0, (int *)0, timeout);
	if ((readfds & (1<<fd)) != 0) {
a282 3
#else
	alarm(nsecs);
#endif
a292 1
	alarm(0);
a310 1
#ifdef BSD
a314 1
#endif
d326 4
a329 4
#ifdef BSD
	readfds = 1<<fd;
	select(fd+1, &readfds, (int *)0, (int *)0, &waittime);
	if( (readfds&(1<<fd)) == 0) {
d333 1
a333 3
#else
	alarm(20);
#endif
a334 1
	alarm(0);
@


10.1
log
@Release_4.0
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: /m/cad/util/RCS/dunncomm.c,v 9.1 89/05/19 06:08:10 mike Rel3_5 $ (BRL)";
d27 6
a32 10
#ifdef BSD
# include <sys/time.h>
# include <sys/ioctl.h>
struct	sgttyb	tty;
#define TCSETA	TIOCSETP
#define TCGETA	TIOCGETP
#ifndef	XTABS
#define	XTABS	(TAB1 | TAB2)
#endif /* Not XTABS */
#endif
d34 24
a57 1
#ifdef SYSV
d62 3
a64 3
# include <termio.h>
struct	termio	tty;
#endif /* SYSV */
d66 2
d92 6
a97 2
	if( (fd = open("/dev/camera", O_RDWR | O_NDELAY)) < 0 
	     || ioctl(fd, TCGETA, &tty) < 0) {
d102 10
d119 1
a119 1
#ifdef SYSV
d139 7
a145 1
	if( ioctl(fd, TCSETA, &tty) < 0 ) {
d201 1
d203 1
a203 1
	
d207 1
d220 1
a220 1
	alarm(timeout->tv_sec);
d255 1
a257 1
#ifdef BSD
d283 3
a286 1
	register int i;
d290 2
a291 1
	
d332 1
d337 1
d357 1
a357 1
	alarm(waittime.tv_sec);
@


9.1
log
@Release_3.5
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: dunncomm.c,v 8.3 89/03/07 00:27:51 mike Exp $ (BRL)";
@


8.3
log
@ANSII-fied
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: dunncomm.c,v 8.2 89/02/27 01:01:57 mike Locked $ (BRL)";
@


8.2
log
@#endif /* comment */
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: dunncomm.c,v 8.1 88/10/05 00:40:53 phil Locked $ (BRL)";
d54 3
a56 1
unsnooze()
@


8.1
log
@Release_3.0
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: dunncomm.c,v 7.6 88/09/10 05:37:38 mike Exp $ (BRL)";
d35 1
a35 1
#endif XTABS
d45 1
a45 1
#endif SYSV
@


7.6
log
@Changed send() to dunnsend() to avoid name conflict with
BSD sys-call.
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: dunncomm.c,v 7.5 88/05/17 03:26:25 mike Locked $ (BRL)";
@


7.5
log
@Modifications for working on big-endian SysV.
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: dunncomm.c,v 7.4 88/05/16 04:31:23 mike Locked $ (BRL)";
d317 1
a317 1
 *			S E N D
d321 1
a321 1
send(color,val)
d333 1
a333 1
		printf("dunncolor: send(), camera not ready\n");
@


7.4
log
@Modification for SYSV, ugh.
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: dunncomm.c,v 7.3 88/05/16 00:22:57 mike Locked $ (BRL)";
d215 9
a223 1
	sleep(1);
d320 1
a320 1
void
d325 1
a325 1
	int digit;
d329 1
a329 1
		exit(75);
d332 3
a334 3
	if(!ready(20)) {
		printf("dunncolor: 80 camera not ready\n");
		exit(80);
d354 2
@


7.3
log
@more lint fixes
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: dunncomm.c,v 7.2 88/05/16 00:06:26 mike Locked $ (BRL)";
d25 1
d54 6
d77 1
a77 1

d83 15
a97 1
	tty.c_cflag = B9600 | CS7 | TAB3;
d100 1
a100 2
	tty.c_cc[VMIN] = 1;
	tty.c_cc[VTIME] = 0;
d103 1
a103 1
		printf("\007dunnopen: error on /dev/camera setup\n");
a105 1
}
d107 8
a114 4
#ifdef SYSV
select()
{
	sleep(1);
a115 1
#endif SYSV
d166 1
d169 8
a176 9
	if( (readfds & (1<<fd)) !=0) {
		mread(fd, status, 4);
		if (status[0]&0x1)  printf("No vertical sync\n");
		if (status[0]&0x2)  printf("8x10 not ready\n");
		if (status[0]&0x4)  printf("Expose in wrong mode\n");
		if (status[0]&0x8)  printf("Aux camera out of film\n");
		if (status[1]&0x1)  printf("B/W mode\n");
		if (status[1]&0x2)  printf("Separate mode\n");
		if (status[2]&0x1)  printf("Y-smoothing off\n");
d178 20
a197 9
		if ((status[0]&0xf) == 0x0 &&
		    (status[1]&0x3) == 0x0 )
			return 1;	/* status is ok */
		printf("\007dunnsnap: status error from camera\n");
		printf("status[0]= 0x%x [1]= 0x%x [2]= 0x%x [3]= 0x%x\n",
			status[0]&0xf,status[1]&0xf,
			status[2]&0x3,status[3]&0x7f);
	} else
		printf("\007dunnsnap: status request timed out\n");
d212 1
d214 3
d231 1
d238 1
d242 1
a242 3
		mread(fd, status, 2);
		if((status[0]&0x7f) == 'R')
			return 1;	/* camera is ready */
d244 21
a264 1
	return 0;	/* camera is not ready or timeout after n secs */
d291 1
d294 1
a294 5
	if( (readfds&(1<<fd)) != 0) {
		mread(fd, values, 20);
		values[20] = '\0';
		printf("dunncolor: %s = %s\n", title, values);
	} else {
d298 8
@


7.2
log
@lint fixes
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: dunncomm.c,v 7.1 87/11/03 00:06:17 mike Locked $ (BRL)";
d250 1
@


7.1
log
@Release 2.3
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: dunncomm.c,v 6.1 87/07/11 08:09:36 mike Rel $ (BRL)";
d56 1
a56 1
int
d174 1
d215 1
@


6.1
log
@Release 2.0
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: dunncomm.c,v 5.3 87/06/25 03:45:02 mike Exp $ (BRL)";
@


5.3
log
@Eliminated unnecessary BSD header file.
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: dunncomm.c,v 5.2 87/06/25 03:19:46 mike Locked $ (BRL)";
@


5.2
log
@BSD/SYSV tty control changes
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: dunncomm.c,v 5.1 87/06/24 22:37:28 phil Locked $ (BRL)";
a27 1
# include <sys/file.h>
@


5.1
log
@Release 1.24
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: dunncomm.c,v 1.1 87/06/20 05:53:38 mike Locked $ (BRL)";
a24 1
#include <sgtty.h>
d29 7
d43 2
a46 1
struct	sgttyb	tty;
d64 1
a64 1
	     || ioctl(fd, TIOCGETP, &tty) < 0) {
d72 1
d75 9
a83 1
	if( ioctl(fd,TIOCSETP,&tty) < 0 ) {
@


1.1
log
@Initial revision
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: dunnsnap.c,v 4.4 87/02/13 00:39:48 mike Locked $ (BRL)";
d24 1
d28 2
a29 2
#include <sys/time.h>
#include <sys/file.h>
a32 1
#include <fcntl.h>
@
