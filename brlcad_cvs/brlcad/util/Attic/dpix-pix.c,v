head	11.11;
access;
symbols
	ansi-20040405-merged:11.7.2.2
	postmerge-20040405-ansi:11.9
	premerge-20040404-ansi:11.8
	postmerge-autoconf:11.8
	autoconf-freeze:11.7.10.2
	premerge-autoconf:11.8
	postmerge-20040315-windows:11.8
	premerge-20040315-windows:11.8
	windows-20040315-freeze:11.7.4.1
	autoconf-20031203:11.7
	autoconf-20031202:11.7
	autoconf-branch:11.7.0.10
	phong-branch:11.7.0.8
	photonmap-branch:11.7.0.6
	rel-6-1-DP:11.7
	windows-branch:11.7.0.4
	rel-6-0-2:11.5
	ansi-branch:11.7.0.2
	rel-6-0-1-branch:11.5.0.2
	hartley-6-0-post:11.6
	hartley-6-0-pre:11.5
	rel-6-0-1:11.5
	rel-6-0:11.5
	rel-5-4:11.1
	offsite-5-3-pre:11.3
	rel-5-3:11.1
	rel-5-2:11.1
	rel-5-1-branch:11.1.0.2
	rel-5-1:11.1
	rel-5-0:11.1
	rel-5-0-beta:11.1
	rel-4-5:11.1
	ctj-4-5-post:11.1
	ctj-4-5-pre:11.1
	rel-4-4:11.1
	rel-4-0:10.1;
locks; strict;
comment	@ * @;


11.11
date	2004.05.21.14.57.39;	author morrison;	state dead;
branches;
next	11.10;

11.10
date	2004.05.10.15.30.50;	author erikg;	state Exp;
branches;
next	11.9;

11.9
date	2004.04.05.05.46.01;	author morrison;	state Exp;
branches;
next	11.8;

11.8
date	2004.02.02.17.39.45;	author morrison;	state Exp;
branches;
next	11.7;

11.7
date	2002.08.20.17.08.58;	author jra;	state Exp;
branches
	11.7.2.1
	11.7.4.1
	11.7.10.1;
next	11.6;

11.6
date	2002.08.15.20.56.10;	author hartley;	state Exp;
branches;
next	11.5;

11.5
date	2001.08.21.17.50.14;	author jra;	state Exp;
branches;
next	11.4;

11.4
date	2001.08.10.20.57.05;	author butler;	state Exp;
branches;
next	11.3;

11.3
date	2000.09.01.03.23.48;	author mike;	state Exp;
branches;
next	11.2;

11.2
date	2000.08.23.19.04.30;	author mike;	state Exp;
branches;
next	11.1;

11.1
date	95.01.04.10.11.56;	author mike;	state Rel4_4;
branches;
next	10.1;

10.1
date	91.10.12.06.48.08;	author mike;	state Rel4_0;
branches;
next	1.7;

1.7
date	91.07.11.22.36.55;	author butler;	state Exp;
branches;
next	1.6;

1.6
date	91.07.06.03.44.43;	author mike;	state Exp;
branches;
next	1.5;

1.5
date	91.07.06.01.55.33;	author mike;	state Exp;
branches;
next	1.4;

1.4
date	91.07.06.01.52.17;	author mike;	state Exp;
branches;
next	1.3;

1.3
date	91.07.06.01.49.29;	author mike;	state Exp;
branches;
next	1.2;

1.2
date	90.03.12.20.20.34;	author mike;	state Exp;
branches;
next	1.1;

1.1
date	90.03.12.20.14.31;	author sue;	state Exp;
branches;
next	;

11.7.2.1
date	2002.09.19.18.02.36;	author morrison;	state Exp;
branches;
next	11.7.2.2;

11.7.2.2
date	2004.03.17.21.23.23;	author morrison;	state Exp;
branches;
next	;

11.7.4.1
date	2004.03.11.23.52.30;	author morrison;	state Exp;
branches;
next	;

11.7.10.1
date	2004.02.12.19.43.09;	author erikg;	state Exp;
branches;
next	11.7.10.2;

11.7.10.2
date	2004.03.15.14.08.11;	author erikg;	state Exp;
branches;
next	;


desc
@Convert double-precision .dpix files to regular .pix files.
@


11.11
log
@moved to src/util/
@
text
@/*
 *			D P I X - P I X . C
 *
 *  Convert double precision images in .dpix form to a .pix file.
 *  By default, will determin min/max values to drive exposure
 *  calculations, and perform linear interpolation on the way to 1-byte
 *  values.
 *
 *  Reads the binary input file, finds the minimum and maximum values
 *  read, and linearly interpolates these values between 0 and 255.
 *
 *  Author -
 *	S. Muuss, J.D., Feb 04, 1990.
 *  
 *  Source -
 *	SECAD/VLD Computing Consortium, Bldg 394
 *	The U. S. Army Ballistic Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5066
 *  
 *  Copyright Notice -
 *	This software is Copyright (C) 1990-2004 by the United States Army.
 *	All rights reserved.
 */
#ifndef lint
static const char RCSid[] = "@@(#)$Header: /n/xoff/cvs/brlcad/util/dpix-pix.c,v 11.10 2004/05/10 15:30:50 erikg Exp $ (BRL)";
#endif

#ifdef HAVE_CONFIG_H
# include "config.h"
#endif



#include <stdio.h>
#include <stdlib.h>

#include "machine.h"
#include "externs.h"

#define NUM	(1024 * 16)	/* Note the powers of 2 -- v. efficient */
static double		doub[NUM];
static unsigned char	cha[NUM];

int
main(int argc, char **argv)
{
	int		count;			/* count of items */
	int		got;			/* count of bytes */
	int		fd;			/* UNIX file descriptor */
	register double	*dp;			/* ptr to d */
	register double *ep;
	double		m;			/* slope */
	double		b;			/* intercept */

	if( argc < 2 )  {
		fprintf(stderr, "Usage: dpix-pix file.dpix > file.pix\n");
		exit(1);
	}

	if( (fd = open(argv[1], 0)) < 0 )  {
		perror(argv[1]);
		exit(1);
	}

	if( isatty(fileno(stdout)) )  {
		fprintf(stderr, "dpix-pix:  binary output directed to terminal, aborting\n");
		exit(2);
	}

	/* Note that the minimum is set to 1.0e20, the computer's working
	 * equivalent of positive infinity.  Thus any subsequent value
	 * must be larger. Likewise, the maximun is set to -1.0e20, the
	 * equivalent of negative infinity, and any values must thus be
	 * bigger than it.
	 */
	{
		register double	min, max;		/* high usage items */

		min = 1.0e20;
		max = -1.0e20;

		while(1)  {
			got = read( fd, (char *)&doub[0], NUM*sizeof(doub[0]) );
			if( got <= 0 )
				break;
			count = got / sizeof(doub[0]);
			ep = &doub[count];
			for(dp = &doub[0]; dp < ep;)  {
				register double val;
				if( (val = *dp++) < min )
					min = val;
				else if ( val > max )
					max = val;
			}
		}

		lseek( fd, 0L, 0 );		/* rewind(fp); */
	

		/* This section uses the maximum and the minimum values found to
		 * compute the m and the b of the line as specified by the
		 * equation y = mx + b.
		 */
		fprintf(stderr, "min=%f, max=%f\n", min, max);
		if (max < min)  {
			printf("MINMAX: max less than min!\n");
			exit(1);
		}

		m = (255 - 0)/(max - min);
		b = (-255 * min)/(max - min);
	}

	while (1)  {
		register char	*cp;		/* ptr to c */
		register double	mm;		/* slope */
		register double	bb;		/* intercept */

		mm = m;
		bb = b;

		got = read( fd, (char *)&doub[0], NUM*sizeof(doub[0]) );
		if (got <=  0 )
			break;
		count = got / sizeof(doub[0]);
		ep = &doub[count];
		cp = (char *)&cha[0];
		for(dp = &doub[0]; dp < ep;)  {
			*cp++ = mm * (*dp++) + bb;
		}

		/* fd 1 is stdout */
		got = write( 1, (char *)&cha[0], count*sizeof(cha[0]) );
		if( got != count*sizeof(cha[0]) )  {
			perror("write");
			exit(2);
		}
	}

	exit(0);
}
@


11.10
log
@change conf.h to a wrapped config.h
@
text
@d25 1
a25 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/util/dpix-pix.c,v 11.9 2004/04/05 05:46:01 morrison Exp $ (BRL)";
@


11.9
log
@merge of ansi-6-0-branch into head
@
text
@d25 1
a25 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
d28 5
a32 1
#include "conf.h"
@


11.8
log
@update copyright to include span through 2003
@
text
@d25 1
a25 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/dpix-pix.c,v 11.7 2002/08/20 17:08:58 jra Exp $ (BRL)";
d41 1
a41 3
main(argc, argv)
int	argc;
char	*argv[];
@


11.7
log
@Restoration of entire source tree to Pre-Hartley state
@
text
@d21 1
a21 1
 *	This software is Copyright (C) 1990 by the United States Army.
d25 1
a25 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/dpix-pix.c,v 11.5 2001/08/21 17:50:14 jra Exp $ (BRL)";
@


11.7.4.1
log
@sync to HEAD...
@
text
@d21 1
a21 1
 *	This software is Copyright (C) 1990-2004 by the United States Army.
d25 1
a25 1
static const char RCSid[] = "@@(#)$Header: /n/cad/c/CVS/brlcad/util/dpix-pix.c,v 11.8 2004/02/02 17:39:45 morrison Exp $ (BRL)";
@


11.7.10.1
log
@merge from HEAD
@
text
@d21 1
a21 1
 *	This software is Copyright (C) 1990-2004 by the United States Army.
d25 1
a25 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/dpix-pix.c,v 11.8 2004/02/02 17:39:45 morrison Exp $ (BRL)";
@


11.7.10.2
log
@merge from head
@
text
@d25 1
a25 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/dpix-pix.c,v 11.7.10.1 2004/02/12 19:43:09 erikg Exp $ (BRL)";
@


11.7.2.1
log
@Initial ANSIfication
@
text
@d25 1
a25 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/dpix-pix.c,v 11.7 2002/08/20 17:08:58 jra Exp $ (BRL)";
d41 3
a43 1
main(int argc, char **argv)
@


11.7.2.2
log
@sync branch with HEAD
@
text
@d21 1
a21 1
 *	This software is Copyright (C) 1990-2004 by the United States Army.
d25 1
a25 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
@


11.6
log
@Converted from K&R to ANSI C - RFH
@
text
@d41 3
a43 1
main(int argc, char **argv)
@


11.5
log
@Eliminated a warning by using "%f" instead of "%lf" in a print format
@
text
@d25 1
a25 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/dpix-pix.c,v 11.4 2001/08/10 20:57:05 butler Exp $ (BRL)";
d41 1
a41 3
main(argc, argv)
int	argc;
char	*argv[];
@


11.4
log
@Misc compiler warnings eliminated
@
text
@d25 1
a25 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/dpix-pix.c,v 11.3 2000/09/01 03:23:48 mike Exp $ (BRL)";
d102 1
a102 1
		fprintf(stderr, "min=%lf, max=%lf\n", min, max);
@


11.3
log
@
Lint fix
@
text
@d25 1
a25 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/dpix-pix.c,v 11.2 2000/08/23 19:04:30 mike Exp $ (BRL)";
d31 1
@


11.2
log
@
const RCSid
@
text
@d25 1
a25 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/dpix-pix.c,v 11.1 1995/01/04 10:11:56 mike Rel4_4 $ (BRL)";
d28 2
d32 3
d39 1
@


11.1
log
@Release_4.4
@
text
@d25 1
a25 1
static char RCSid[] = "@@(#)$Header: /m/cad/util/RCS/dpix-pix.c,v 10.1 91/10/12 06:48:08 mike Rel4_0 $ (BRL)";
@


10.1
log
@Release_4.0
@
text
@d25 1
a25 1
static char RCSid[] = "@@(#)$Header: /m/cad/util/RCS/dpix-pix.c,v 1.7 91/07/11 22:36:55 butler Exp $ (BRL)";
@


1.7
log
@added cast from unsigned char to char to make lint, ANSI C happy
@
text
@d25 1
a25 1
static char RCSid[] = "@@(#)$Header: /m/cad/util/RCS/dpix-pix.c,v 1.6 91/07/06 03:44:43 mike Exp $ (BRL)";
@


1.6
log
@ANSI nit
@
text
@d25 1
a25 1
static char RCSid[] = "@@(#)$Header: /m/cad/util/RCS/dpix-pix.c,v 1.5 91/07/06 01:55:33 mike Exp $ (BRL)";
d118 1
a118 1
		cp = &cha[0];
@


1.5
log
@Added check for stdout being a terminal.
@
text
@d25 1
a25 1
static char RCSid[] = "@@(#)$Header: /m/cad/util/RCS/dpix-pix.c,v 1.4 91/07/06 01:52:17 mike Exp $ (BRL)";
d118 2
a119 1
		for(dp = &doub[0], cp = &cha[0]; dp < ep;)  {
@


1.4
log
@Moved large buffers from the stack to static extern.
Will keep Gould and Alliant machines happier.
@
text
@d25 1
a25 1
static char RCSid[] = "@@(#)$Header: /m/cad/util/RCS/dpix-pix.c,v 1.3 91/07/06 01:49:29 mike Exp $ (BRL)";
d54 5
@


1.3
log
@Added usage message
@
text
@d25 1
a25 1
static char RCSid[] = "@@(#)$Header: /m/cad/util/RCS/dpix-pix.c,v 1.2 90/03/12 20:20:34 mike Exp $ (BRL)";
d31 2
a40 1
	double		d[NUM];
a44 1
	unsigned char	c[NUM];
d69 1
a69 1
			got = read( fd, (char *)&d[0], NUM*sizeof(d[0]) );
d72 3
a74 3
			count = got / sizeof(d[0]);
			ep = &d[count];
			for(dp = &d[0]; dp < ep;)  {
d108 1
a108 1
		got = read( fd, (char *)&d[0], NUM*sizeof(d[0]) );
d111 3
a113 3
		count = got / sizeof(d[0]);
		ep = &d[count];
		for(dp = &d[0], cp = &c[0]; dp < ep;)  {
d118 2
a119 2
		got = write( 1, (char *)&c[0], count*sizeof(c[0]) );
		if( got != count*sizeof(c[0]) )  {
@


1.2
log
@Added standard header.
@
text
@d25 1
a25 1
static char RCSid[] = "@@(#)$Header$ (BRL)";
a34 1

d46 4
@


1.1
log
@Initial revision
@
text
@d1 22
a22 3
/* Minmax reads a binary input file, finds the minimum and maximum values
 * read, and linearly interpolates these values between 0 and 255.
 * S. Muuss, J.D., Feb 04, 1990.
d24 3
@
