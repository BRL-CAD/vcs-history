head	11.9;
access;
symbols
	ansi-20040405-merged:11.6.2.2
	postmerge-20040405-ansi:11.8
	premerge-20040404-ansi:11.7
	postmerge-autoconf:11.7
	autoconf-freeze:11.6.10.2
	premerge-autoconf:11.7
	postmerge-20040315-windows:11.7
	premerge-20040315-windows:11.7
	windows-20040315-freeze:11.6.4.1
	autoconf-20031203:11.6
	autoconf-20031202:11.6
	autoconf-branch:11.6.0.10
	phong-branch:11.6.0.8
	photonmap-branch:11.6.0.6
	rel-6-1-DP:11.6
	windows-branch:11.6.0.4
	rel-6-0-2:11.4
	ansi-branch:11.6.0.2
	rel-6-0-1-branch:11.4.0.2
	hartley-6-0-post:11.5
	hartley-6-0-pre:11.4
	rel-6-0-1:11.4
	rel-6-0:11.4
	rel-5-4:11.1
	offsite-5-3-pre:11.3
	rel-5-3:11.1
	rel-5-2:11.1
	rel-5-1-branch:11.1.0.2
	rel-5-1:11.1
	rel-5-0:11.1
	rel-5-0-beta:11.1
	rel-4-5:11.1
	ctj-4-5-post:11.1
	ctj-4-5-pre:11.1
	rel-4-4:11.1
	rel-4-0:10.1
	rel-3-5:9.1
	rel-3-0:8.1;
locks; strict;
comment	@ * @;


11.9
date	2004.05.21.14.57.43;	author morrison;	state dead;
branches;
next	11.8;

11.8
date	2004.04.05.05.46.02;	author morrison;	state Exp;
branches;
next	11.7;

11.7
date	2004.02.02.17.39.45;	author morrison;	state Exp;
branches;
next	11.6;

11.6
date	2002.08.20.17.08.58;	author jra;	state Exp;
branches
	11.6.2.1
	11.6.4.1
	11.6.10.1;
next	11.5;

11.5
date	2002.08.15.20.56.11;	author hartley;	state Exp;
branches;
next	11.4;

11.4
date	2001.08.10.20.57.06;	author butler;	state Exp;
branches;
next	11.3;

11.3
date	2000.09.01.03.23.50;	author mike;	state Exp;
branches;
next	11.2;

11.2
date	2000.08.23.19.04.35;	author mike;	state Exp;
branches;
next	11.1;

11.1
date	95.01.04.10.12.10;	author mike;	state Rel4_4;
branches;
next	10.1;

10.1
date	91.10.12.06.48.18;	author mike;	state Rel4_0;
branches;
next	9.1;

9.1
date	89.05.19.06.09.40;	author mike;	state Rel3_5;
branches;
next	8.2;

8.2
date	89.02.27.01.01.54;	author phil;	state Exp;
branches;
next	8.1;

8.1
date	88.10.05.00.42.13;	author mike;	state Rel3_0;
branches;
next	1.2;

1.2
date	88.01.29.22.54.36;	author phil;	state Exp;
branches;
next	1.1;

1.1
date	88.01.20.22.35.12;	author phil;	state Exp;
branches;
next	;

11.6.2.1
date	2002.09.19.18.02.38;	author morrison;	state Exp;
branches;
next	11.6.2.2;

11.6.2.2
date	2004.03.17.21.23.26;	author morrison;	state Exp;
branches;
next	;

11.6.4.1
date	2004.03.11.23.52.30;	author morrison;	state Exp;
branches;
next	;

11.6.10.1
date	2004.02.12.19.43.10;	author erikg;	state Exp;
branches;
next	11.6.10.2;

11.6.10.2
date	2004.03.15.14.08.12;	author erikg;	state Exp;
branches;
next	;


desc
@Optronics Scanner Reader
@


11.9
log
@moved to src/util/
@
text
@/*
 *			O P - B W . C
 *
 *  Read 8-bit (.bw) images from an Optronics Scanner
 *
 *  Author -
 *	Phillip Dykstra
 *
 * Acknowledgment:
 * 	This grew out of opread.c by
 *	Doug Kingston and
 *	Charles M. Kennedy
 *
 *  Source -
 *	SECAD/VLD Computing Consortium, Bldg 394
 *	The U. S. Army Ballistic Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5066
 *  
 *  Copyright Notice -
 *	This software is Copyright (C) 1988-2004 by the United States Army.
 *	All rights reserved.
 */
#ifndef lint
static const char RCSid[] = "@@(#)$Header: /n/xoff/cvs/brlcad/util/op-bw.c,v 11.8 2004/04/05 05:46:02 morrison Exp $ (BRL)";
#endif

# include <stdio.h>
#include <stdlib.h>
#ifdef HAVE_STRING_H
#include <string.h>
#else
#include <strings.h>
#endif
#ifdef vax
# include <vaxuba/opio.h>
# include <sys/ioctl.h>

char	*malloc();

int	step = 4;	/* 12.5 micron steps per scanline */
int	offset = 0;	/* pixels in "left margin" */
int	roffset = 0;	/* Rotational offset (pixels) before read starts */
int	verbose = 0;
int	width = 512;
int	nlines = 512;
char	*buf;

extern int	getopt();
extern char	*optarg;
extern int	optind;

static char usage[] = "\
Usage: op-bw [-hv] [-S step] [-x xoffset] [-y yoffset]\n\
        [-s squaresize] [-w width] [-n nlines] > file.bw\n";

/*
 *			G E T_ A R G S
 */
get_args( argc, argv )
register char **argv;
{

	register int c;

	while ( (c = getopt( argc, argv, "hvx:y:o:r:S:w:n:s:" )) != EOF )  {
		switch( c )  {
		case 'v':
			verbose++;
			break;
		case 'h':
			nlines = width = 1024;
			break;
		case 'y':
		case 'o':
			offset = atoi( optarg );
			break;
		case 'x':
		case 'r':
			roffset = atoi( optarg );
			break;
		case 'S':
			step = atoi( optarg );
			break;
		case 'w':
			width = atoi( optarg );
			break;
		case 'n':
			nlines = atoi( optarg );
			break;
		case 's':
			width = nlines = atoi( optarg );
			break;
		default:		/* '?' */
			return(0);
		}
	}

	if ( argc > optind )
		(void)fprintf( stderr, "fbline: excess argument(s) ignored\n" );

	return(1);		/* OK */
}

int
main( argc, argv )
int	argc;
char	**argv;
{
	int	fd;
	int	status;
	struct opstate ops;
	struct opseek opseek;

	if ( !get_args( argc, argv ) || isatty(fileno(stdout)) ) {
		fputs( usage, stderr);
		exit( 1 );
	}

	if( width % 512 != 0 ) {
		fprintf( stderr, "op-bw: Warning, width is not a multiple of 512\n" );
	}
	if( (buf = malloc(width)) == NULL ) {
		fprintf( stderr, "op-bw: can't malloc a buffer for %d pixels\n", width );
		exit( 1 );
	}

	if (verbose)
		fprintf( stderr, "step=%d, offset=%d, rotational offset=%d\n",
			step, offset, roffset );

	if( (fd = open("/dev/op0", 0)) < 0 ) {
		perror("/dev/op0");
		exit(8);
	}
	/* Make Optronics fd stdin so dd can read from it. */
	dup2( fd, 0 );
	close( fd );

	sync();			/* Force disk update now so it will
				   not interrupt the Optronics */

	ops.op_var = OPINCR;
	ops.op_val = step;
	if( step && ioctl(0, OPIOCSET, &ops) < 0 ) {
		perror("OPIOCSET: OPINCR");
		fprintf( stderr, "op_var=%d, op_val=%d\n",
			ops.op_var, ops.op_val );
		exit(1);
	}

	ops.op_var = OPDRUM;
	ops.op_val = roffset;
	if( ioctl(0, OPIOCSET, &ops) < 0 ) {
		perror("OPIOCSET: OPDRUM");
		fprintf( stderr, "op_var=%d, op_val=%d\n",
			ops.op_var, ops.op_val );
		exit(1);
	}

	opseek.op_cmd = OPRIGHT;
	opseek.op_arg = offset;
	if( ioctl(0, OPIOSEEK, &opseek) < 0 ) {
		perror("OPIOSEEK: OPRIGHT");
		fprintf( stderr, "op_cmd=%d, op_arg=%d\n",
			opseek.op_cmd, opseek.op_arg );
		exit(1);
	}

	return( doit() );
}

doit()
{
	int	i, n;

	for( i = 0; i < nlines; i++ ) {
		if( (n = read( 0, buf, width )) != width ) {
			fprintf( stderr, "op-bw: read returned %d\n", n );
			return 1;
		}
		if( (n = write( 1, buf, width )) != width ) {
			fprintf( stderr, "op-bw: write returned %d\n", n );
			return 1;
		}
	}

	return 0;
}
#else
int
main(void)
{
	fprintf( stderr, "op-bw: this is a vax specific program\n" );
	exit( 1 );
}
#endif /* Not vax */
@


11.8
log
@merge of ansi-6-0-branch into head
@
text
@d24 1
a24 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
@


11.7
log
@update copyright to include span through 2003
@
text
@d24 1
a24 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/op-bw.c,v 11.6 2002/08/20 17:08:58 jra Exp $ (BRL)";
d191 1
a191 1
main()
@


11.6
log
@Restoration of entire source tree to Pre-Hartley state
@
text
@d20 1
a20 1
 *	This software is Copyright (C) 1988 by the United States Army.
d24 1
a24 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/op-bw.c,v 11.4 2001/08/10 20:57:06 butler Exp $ (BRL)";
@


11.6.4.1
log
@sync to HEAD...
@
text
@d20 1
a20 1
 *	This software is Copyright (C) 1988-2004 by the United States Army.
d24 1
a24 1
static const char RCSid[] = "@@(#)$Header: /n/cad/c/CVS/brlcad/util/op-bw.c,v 11.7 2004/02/02 17:39:45 morrison Exp $ (BRL)";
@


11.6.10.1
log
@merge from HEAD
@
text
@d20 1
a20 1
 *	This software is Copyright (C) 1988-2004 by the United States Army.
d24 1
a24 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/op-bw.c,v 11.7 2004/02/02 17:39:45 morrison Exp $ (BRL)";
@


11.6.10.2
log
@merge from head
@
text
@d24 1
a24 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/op-bw.c,v 11.6.10.1 2004/02/12 19:43:10 erikg Exp $ (BRL)";
@


11.6.2.1
log
@Initial ANSIfication
@
text
@d24 1
a24 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/op-bw.c,v 11.6 2002/08/20 17:08:58 jra Exp $ (BRL)";
d191 1
a191 1
main(void)
@


11.6.2.2
log
@sync branch with HEAD
@
text
@d20 1
a20 1
 *	This software is Copyright (C) 1988-2004 by the United States Army.
d24 1
a24 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
@


11.5
log
@Converted from K&R to ANSI C - RFH
@
text
@d191 1
a191 1
main(void)
@


11.4
log
@Misc compiler warnings eliminated
@
text
@d24 1
a24 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/op-bw.c,v 11.3 2000/09/01 03:23:50 mike Exp $ (BRL)";
d191 1
a191 1
main()
@


11.3
log
@
Lint fix
@
text
@d24 1
a24 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/op-bw.c,v 11.2 2000/08/23 19:04:35 mike Exp $ (BRL)";
d28 6
@


11.2
log
@
const RCSid
@
text
@d24 1
a24 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/op-bw.c,v 11.1 1995/01/04 10:12:10 mike Rel4_4 $ (BRL)";
d98 1
d184 1
@


11.1
log
@Release_4.4
@
text
@d24 1
a24 1
static char RCSid[] = "@@(#)$Header: /m/cad/util/RCS/op-bw.c,v 10.1 91/10/12 06:48:18 mike Rel4_0 $ (BRL)";
@


10.1
log
@Release_4.0
@
text
@d24 1
a24 1
static char RCSid[] = "@@(#)$Header: /m/cad/util/RCS/op-bw.c,v 9.1 89/05/19 06:09:40 mike Rel3_5 $ (BRL)";
@


9.1
log
@Release_3.5
@
text
@d24 1
a24 1
static char RCSid[] = "@@(#)$Header: op-bw.c,v 8.2 89/02/27 01:01:54 phil Exp $ (BRL)";
@


8.2
log
@#endif /* comment */
@
text
@d24 1
a24 1
static char RCSid[] = "@@(#)$Header: op-bw.c,v 8.1 88/10/05 00:42:13 phil Locked $ (BRL)";
@


8.1
log
@Release_3.0
@
text
@d24 1
a24 1
static char RCSid[] = "@@(#)$Header: op-bw.c,v 1.2 88/01/29 22:54:36 phil Exp $ (BRL)";
d188 1
a188 1
#endif vax
@


1.2
log
@added the infamous -h flag
@
text
@d24 1
a24 1
static char RCSid[] = "@@(#)$Header: op-bw.c,v 1.1 88/01/20 22:35:12 phil Locked $ (BRL)";
@


1.1
log
@Initial revision
@
text
@d24 1
a24 1
static char RCSid[] = "@@(#)$Header: fbline.c,v 1.1 88/01/13 21:37:50 mike Exp $ (BRL)";
d47 1
a47 1
Usage: op-bw [-x xoffset] [-y yoffset] [-S step] [-v]\n\
d59 1
a59 1
	while ( (c = getopt( argc, argv, "vx:y:o:r:S:w:n:s:" )) != EOF )  {
d63 3
@
