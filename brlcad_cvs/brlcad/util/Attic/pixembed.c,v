head	11.10;
access;
symbols
	ansi-20040405-merged:11.6.2.2
	postmerge-20040405-ansi:11.8
	premerge-20040404-ansi:11.7
	postmerge-autoconf:11.7
	autoconf-freeze:11.6.10.2
	premerge-autoconf:11.7
	postmerge-20040315-windows:11.7
	premerge-20040315-windows:11.7
	windows-20040315-freeze:11.6.4.1
	autoconf-20031203:11.6
	autoconf-20031202:11.6
	autoconf-branch:11.6.0.10
	phong-branch:11.6.0.8
	photonmap-branch:11.6.0.6
	rel-6-1-DP:11.6
	windows-branch:11.6.0.4
	rel-6-0-2:11.4
	ansi-branch:11.6.0.2
	rel-6-0-1-branch:11.4.0.2
	hartley-6-0-post:11.5
	hartley-6-0-pre:11.4
	rel-6-0-1:11.4
	rel-6-0:11.4
	rel-5-4:11.1
	offsite-5-3-pre:11.3
	rel-5-3:11.1
	rel-5-2:11.1
	rel-5-1-branch:11.1.0.2
	rel-5-1:11.1
	rel-5-0:11.1
	rel-5-0-beta:11.1
	rel-4-5:11.1
	ctj-4-5-post:11.1
	ctj-4-5-pre:11.1
	rel-4-4:11.1;
locks; strict;
comment	@ * @;


11.10
date	2004.05.21.14.57.52;	author morrison;	state dead;
branches;
next	11.9;

11.9
date	2004.05.10.15.30.51;	author erikg;	state Exp;
branches;
next	11.8;

11.8
date	2004.04.05.05.46.02;	author morrison;	state Exp;
branches;
next	11.7;

11.7
date	2004.02.02.17.39.46;	author morrison;	state Exp;
branches;
next	11.6;

11.6
date	2002.08.20.17.09.02;	author jra;	state Exp;
branches
	11.6.2.1
	11.6.4.1
	11.6.10.1;
next	11.5;

11.5
date	2002.08.15.20.56.13;	author hartley;	state Exp;
branches;
next	11.4;

11.4
date	2001.08.10.20.57.07;	author butler;	state Exp;
branches;
next	11.3;

11.3
date	2000.09.01.03.23.55;	author mike;	state Exp;
branches;
next	11.2;

11.2
date	2000.08.23.19.04.48;	author mike;	state Exp;
branches;
next	11.1;

11.1
date	95.01.04.10.12.38;	author mike;	state Rel4_4;
branches;
next	1.5;

1.5
date	94.09.22.04.17.47;	author mike;	state Exp;
branches;
next	1.4;

1.4
date	94.08.23.13.15.04;	author gdurf;	state Exp;
branches;
next	1.3;

1.3
date	92.05.12.21.54.51;	author mike;	state Exp;
branches;
next	1.2;

1.2
date	92.05.08.22.27.47;	author mike;	state Exp;
branches;
next	1.1;

1.1
date	92.05.08.22.15.12;	author mike;	state Exp;
branches;
next	;

11.6.2.1
date	2002.09.19.18.02.41;	author morrison;	state Exp;
branches;
next	11.6.2.2;

11.6.2.2
date	2004.03.17.21.23.30;	author morrison;	state Exp;
branches;
next	;

11.6.4.1
date	2004.03.11.23.52.32;	author morrison;	state Exp;
branches;
next	;

11.6.10.1
date	2004.02.12.19.43.11;	author erikg;	state Exp;
branches;
next	11.6.10.2;

11.6.10.2
date	2004.03.15.14.08.13;	author erikg;	state Exp;
branches;
next	;


desc
@Program to embed smaller pix files in larger spaces, by replicating edges.
@


11.10
log
@moved to src/util/
@
text
@/*
 *			P I X E M B E D . C
 *
 *  Embed a smaller pix file in a larger space, replicating the boundary
 *  pixels to fill out the borders, and output as a pix file.
 *
 *  Author -
 *	Michael John Muuss
 *  
 *  Source -
 *	SECAD/VLD Computing Consortium, Bldg 394
 *	The U. S. Army Ballistic Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5066
 *  
 *  Copyright Notice -
 *	This software is Copyright (C) 1992-2004 by the United States Army.
 *	All rights reserved.
 */
#ifndef lint
static const char RCSid[] = "@@(#)$Header: /n/xoff/cvs/brlcad/util/pixembed.c,v 11.9 2004/05/10 15:30:51 erikg Exp $ (BRL)";
#endif

#ifdef HAVE_CONFIG_H
# include "config.h"
#endif



#include <stdio.h>
#include "machine.h"
#include "externs.h"

unsigned char	*obuf;

int	scanlen;			/* length of infile (and buffer) scanlines */

FILE	*buffp;
static char	*file_name;

int	xin = 512;
int	yin = 512;
int	xout = 512;
int	yout = 512;

int	border_inset = 0;		/* Sometimes border pixels are bad */

void	load_buffer(void), write_buffer(void);

static	char usage[] = "\
Usage: pixembed [-h] [-b border_inset] \n\
	[-s squareinsize] [-w inwidth] [-n inheight]\n\
	[-S squareoutsize] [-W outwidth] [-N outheight] [in.pix] > out.pix\n";

/*
 *			G E T _ A R G S
 */
int
get_args(int argc, register char **argv)
{
	register int c;

	while ( (c = getopt( argc, argv, "b:hs:w:n:S:W:N:" )) != EOF )  {
		switch( c )  {
		case 'b':
			border_inset = atoi(optarg);
			break;
		case 'h':
			/* high-res */
			xin = yin = 1024;
			break;
		case 'S':
			/* square size */
			xout = yout = atoi(optarg);
			break;
		case 's':
			/* square size */
			xin = yin = atoi(optarg);
			break;
		case 'W':
			xout = atoi(optarg);
			break;
		case 'w':
			xin = atoi(optarg);
			break;
		case 'N':
			yout = atoi(optarg);
			break;
		case 'n':
			yin = atoi(optarg);
			break;

		default:		/* '?' */
			return(0);
		}
	}

	if( optind >= argc )  {
		if( isatty(fileno(stdin)) )
			return(0);
		file_name = "-";
		buffp = stdin;
	} else {
		file_name = argv[optind];
		if( (buffp = fopen(file_name, "r")) == NULL )  {
			(void)fprintf( stderr,
				"pixembed: cannot open \"%s\" for reading\n",
				file_name );
			return(0);
		}
	}

	if ( argc > ++optind )
		(void)fprintf( stderr, "pixembed: excess argument(s) ignored\n" );

	return(1);		/* OK */
}

/*
 *			M A I N
 */
int
main(int argc, char **argv)
{
	int	ydup;
	int	i;
	int	y;

	if ( !get_args( argc, argv ) || isatty(fileno(stdout)) )  {
		(void)fputs(usage, stderr);
		exit( 1 );
	}

	if( xin <= 0 || yin <= 0 || xout <= 0 || yout <= 0 ) {
		fprintf( stderr, "pixembed: sizes must be positive\n" );
		exit( 2 );
	}
	if( xout < xin || yout < yin )  {
		fprintf( stderr, "pixembed: output size must exceed input size\n");
		exit(3);
	}

	if( border_inset < 0 || border_inset >= xin )  {
		fprintf(stderr, "pixembed: border inset out of range\n");
		exit(4);
	}

	/* Allocate storage for one output line */
	scanlen = 3*xout;
	if( (obuf = (unsigned char *)malloc( scanlen )) == (unsigned char *)0 )  {
		fprintf( stderr, "pixembed: malloc failure\n");
		exit(4);
	}

	/* Pre-fetch the first line (after skipping) */
	for( i= -1; i<border_inset; i++ )  load_buffer();

	/* Write out duplicates at bottom, including real copy of 1st line */
	ydup = (yout - yin) / 2 + border_inset + 1;
	for( y = 0; y < ydup; y++ )  write_buffer();

	/* Read and write the remaining lines */
	for( ; i < yin-border_inset; i++, y++ )  {
		load_buffer();
		write_buffer();
	}

	/* Write out duplicates at the top, until all done */
	for( ; y < yout; y++ )  write_buffer();

	return 0;
}

/*
 *			L O A D _ B U F F E R
 *
 *  Read one input scanline into the middle of the output scanline,
 *  and duplicate the border pixels.
 */
void
load_buffer(void)
{
	register unsigned char	r,g,b;
	register unsigned char	*cp;
	register int		i;
	register int		inbase;

	inbase = (xout - xin) / 2;

	if( fread( obuf + inbase*3, 3, xin, buffp ) != xin )  {
		perror("pixembed fread");
		exit(7);
	}
	r = obuf[(inbase+border_inset)*3+0];
	g = obuf[(inbase+border_inset)*3+1];
	b = obuf[(inbase+border_inset)*3+2];

	cp = obuf;
	for( i=0; i<inbase+border_inset; i++ )  {
		*cp++ = r;
		*cp++ = g;
		*cp++ = b;
	}

	r = obuf[(xin+inbase-1-border_inset)*3+0];
	g = obuf[(xin+inbase-1-border_inset)*3+1];
	b = obuf[(xin+inbase-1-border_inset)*3+2];
	cp = &obuf[(xin+inbase+0-border_inset)*3+0];
	for( i=xin+inbase-border_inset; i<xout; i++ )  {
		*cp++ = r;
		*cp++ = g;
		*cp++ = b;
	}

}

/*
 *			W R I T E _ B U F F E R
 *
 *  Write the buffer to stdout, with error checking.
 */
void
write_buffer(void)
{
	if( fwrite( obuf, 3, xout, stdout ) != xout )  {
		perror("pixembed stdout fwrite");
		exit(8);
	}
}
@


11.9
log
@change conf.h to a wrapped config.h
@
text
@d20 1
a20 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/util/pixembed.c,v 11.8 2004/04/05 05:46:02 morrison Exp $ (BRL)";
@


11.8
log
@merge of ansi-6-0-branch into head
@
text
@d20 1
a20 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
d23 5
a27 1
#include "conf.h"
@


11.7
log
@update copyright to include span through 2003
@
text
@d20 1
a20 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/pixembed.c,v 11.6 2002/08/20 17:09:02 jra Exp $ (BRL)";
d43 1
a43 1
void	load_buffer(), write_buffer();
d54 1
a54 2
get_args( argc, argv )
register char **argv;
d118 1
a118 3
main( argc, argv )
int	argc;
char	**argv;
d176 1
a176 1
load_buffer()
d218 1
a218 1
write_buffer()
@


11.6
log
@Restoration of entire source tree to Pre-Hartley state
@
text
@d16 1
a16 1
 *	This software is Copyright (C) 1992 by the United States Army.
d20 1
a20 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/pixembed.c,v 11.4 2001/08/10 20:57:07 butler Exp $ (BRL)";
@


11.6.4.1
log
@sync to HEAD...
@
text
@d16 1
a16 1
 *	This software is Copyright (C) 1992-2004 by the United States Army.
d20 1
a20 1
static const char RCSid[] = "@@(#)$Header: /n/cad/c/CVS/brlcad/util/pixembed.c,v 11.7 2004/02/02 17:39:46 morrison Exp $ (BRL)";
@


11.6.10.1
log
@merge from HEAD
@
text
@d16 1
a16 1
 *	This software is Copyright (C) 1992-2004 by the United States Army.
d20 1
a20 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/pixembed.c,v 11.7 2004/02/02 17:39:46 morrison Exp $ (BRL)";
@


11.6.10.2
log
@merge from head
@
text
@d20 1
a20 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/pixembed.c,v 11.6.10.1 2004/02/12 19:43:11 erikg Exp $ (BRL)";
@


11.6.2.1
log
@Initial ANSIfication
@
text
@d20 1
a20 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/pixembed.c,v 11.6 2002/08/20 17:09:02 jra Exp $ (BRL)";
d43 1
a43 1
void	load_buffer(void), write_buffer(void);
d54 2
a55 1
get_args(int argc, register char **argv)
d119 3
a121 1
main(int argc, char **argv)
d179 1
a179 1
load_buffer(void)
d221 1
a221 1
write_buffer(void)
@


11.6.2.2
log
@sync branch with HEAD
@
text
@d16 1
a16 1
 *	This software is Copyright (C) 1992-2004 by the United States Army.
d20 1
a20 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
@


11.5
log
@Converted from K&R to ANSI C - RFH
@
text
@d43 1
a43 1
void	load_buffer(void), write_buffer(void);
d54 2
a55 1
get_args(int argc, register char **argv)
d119 3
a121 1
main(int argc, char **argv)
d179 1
a179 1
load_buffer(void)
d221 1
a221 1
write_buffer(void)
@


11.4
log
@Misc compiler warnings eliminated
@
text
@d20 1
a20 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/pixembed.c,v 11.3 2000/09/01 03:23:55 mike Exp $ (BRL)";
d43 1
a43 1
void	load_buffer(), write_buffer();
d54 1
a54 2
get_args( argc, argv )
register char **argv;
d118 1
a118 3
main( argc, argv )
int	argc;
char	**argv;
d176 1
a176 1
load_buffer()
d218 1
a218 1
write_buffer()
@


11.3
log
@
Lint fix
@
text
@d20 1
a20 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/pixembed.c,v 11.2 2000/08/23 19:04:48 mike Exp $ (BRL)";
d53 1
@


11.2
log
@
const RCSid
@
text
@d20 1
a20 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/pixembed.c,v 11.1 1995/01/04 10:12:38 mike Rel4_4 $ (BRL)";
d117 1
@


11.1
log
@Release_4.4
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: /m/cad/util/RCS/pixembed.c,v 1.5 94/09/22 04:17:47 mike Exp $ (BRL)";
@


1.5
log
@Pointer problem.
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: /m/cad/util/RCS/pixembed.c,v 1.4 94/08/23 13:15:04 gdurf Exp Locker: mike $ (BRL)";
@


1.4
log
@Added include of conf.h
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: /m/cad/util/RCS/pixembed.c,v 1.3 1992/05/12 21:54:51 mike Exp gdurf $ (BRL)";
d146 1
a146 1
	if( (obuf = malloc( scanlen )) == (unsigned char *)0 )  {
@


1.3
log
@Extended -b border_insert flag to top and bottom scanlines, as well as
left and right pixels.
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: /m/cad/util/RCS/pixembed.c,v 1.2 92/05/08 22:27:47 mike Exp Locker: mike $ (BRL)";
d22 2
@


1.2
log
@Added -b for border_inset.
Sometimes the pixel at the precise border is bad, and it is necessary
to reach in a pixel or two further to obtain a good one.
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: /m/cad/util/RCS/pixembed.c,v 1.1 92/05/08 22:15:12 mike Exp Locker: mike $ (BRL)";
d149 2
a150 2
	/* Pre-fetch the first line */
	load_buffer();
d153 1
a153 1
	ydup = (yout - yin) / 2 + 1;
d157 1
a157 1
	for( i = 1; i < yin; i++, y++ )  {
@


1.1
log
@Initial revision
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header$ (BRL)";
a29 2
int	buflines;			/* Number of lines held in buffer */
int	buf_start = -1000;		/* First line in buffer */
a30 1
int	bufy;				/* y coordinate in buffer */
d39 1
a39 1
void	init_buffer(), fill_buffer(), binterp(), ninterp();
d41 2
d44 2
a45 1
Usage: pixembed [-h] [-s squareinsize] [-w inwidth] [-n inheight]\n\
d48 3
d56 1
a56 1
	while ( (c = getopt( argc, argv, "rhs:w:n:S:W:N:" )) != EOF )  {
d58 3
d137 5
d188 3
a190 3
	r = obuf[inbase*3+0];
	g = obuf[inbase*3+1];
	b = obuf[inbase*3+2];
d193 1
a193 1
	for( i=0; i<inbase; i++ )  {
d199 5
a203 5
	r = obuf[(xin+inbase-1)*3+0];
	g = obuf[(xin+inbase-1)*3+1];
	b = obuf[(xin+inbase-1)*3+2];
	cp = &obuf[(xin+inbase+0)*3+0];
	for( i=xin+inbase; i<xout; i++ )  {
d211 5
@
