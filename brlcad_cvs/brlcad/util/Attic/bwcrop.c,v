head	11.10;
access;
symbols
	ansi-20040405-merged:11.6.2.2
	postmerge-20040405-ansi:11.8
	premerge-20040404-ansi:11.7
	postmerge-autoconf:11.7
	autoconf-freeze:11.6.10.2
	premerge-autoconf:11.7
	postmerge-20040315-windows:11.7
	premerge-20040315-windows:11.7
	windows-20040315-freeze:11.6.4.1
	autoconf-20031203:11.6
	autoconf-20031202:11.6
	autoconf-branch:11.6.0.10
	phong-branch:11.6.0.8
	photonmap-branch:11.6.0.6
	rel-6-1-DP:11.6
	windows-branch:11.6.0.4
	rel-6-0-2:11.4
	ansi-branch:11.6.0.2
	rel-6-0-1-branch:11.4.0.2
	hartley-6-0-post:11.5
	hartley-6-0-pre:11.4
	rel-6-0-1:11.4
	rel-6-0:11.4
	rel-5-4:11.2
	offsite-5-3-pre:11.4
	rel-5-3:11.2
	rel-5-2:11.2
	rel-5-1-branch:11.2.0.2
	rel-5-1:11.2
	rel-5-0:11.1
	rel-5-0-beta:11.1
	rel-4-5:11.1
	ctj-4-5-post:11.1
	ctj-4-5-pre:11.1
	rel-4-4:11.1
	rel-4-0:10.1
	rel-3-5:9.1
	rel-3-0:8.1
	rel-2-3:7.1
	rel-2-0:6.1
	rel-1-24:5.1
	rel-1-20:4.3
	rel-1-10:4.1;
locks; strict;
comment	@ * @;


11.10
date	2004.05.21.14.57.34;	author morrison;	state dead;
branches;
next	11.9;

11.9
date	2004.05.10.15.30.50;	author erikg;	state Exp;
branches;
next	11.8;

11.8
date	2004.04.05.05.46.01;	author morrison;	state Exp;
branches;
next	11.7;

11.7
date	2004.02.02.17.39.45;	author morrison;	state Exp;
branches;
next	11.6;

11.6
date	2002.08.20.17.08.54;	author jra;	state Exp;
branches
	11.6.2.1
	11.6.4.1
	11.6.10.1;
next	11.5;

11.5
date	2002.08.15.20.56.08;	author hartley;	state Exp;
branches;
next	11.4;

11.4
date	2000.09.01.03.23.45;	author mike;	state Exp;
branches;
next	11.3;

11.3
date	2000.08.23.19.04.22;	author mike;	state Exp;
branches;
next	11.2;

11.2
date	2000.01.31.16.03.08;	author jra;	state Exp;
branches;
next	11.1;

11.1
date	95.01.04.10.11.36;	author mike;	state Rel4_4;
branches;
next	10.3;

10.3
date	94.09.22.04.17.00;	author mike;	state Exp;
branches;
next	10.2;

10.2
date	94.08.23.15.05.32;	author gdurf;	state Exp;
branches;
next	10.1;

10.1
date	91.10.12.06.47.51;	author mike;	state Rel4_0;
branches;
next	9.2;

9.2
date	91.10.11.11.21.21;	author butler;	state Exp;
branches;
next	9.1;

9.1
date	89.05.19.06.07.33;	author mike;	state Rel3_5;
branches;
next	8.2;

8.2
date	89.03.06.17.49.15;	author mike;	state Exp;
branches;
next	8.1;

8.1
date	88.10.05.00.40.19;	author mike;	state Rel3_0;
branches;
next	7.2;

7.2
date	88.05.16.00.06.15;	author mike;	state Exp;
branches;
next	7.1;

7.1
date	87.11.03.00.05.06;	author mike;	state Rel;
branches;
next	6.1;

6.1
date	87.07.11.08.08.39;	author mike;	state Rel;
branches;
next	5.1;

5.1
date	87.06.24.22.36.24;	author mike;	state Rel;
branches;
next	4.3;

4.3
date	87.02.13.00.37.40;	author mike;	state Exp;
branches;
next	4.2;

4.2
date	87.01.09.16.37.04;	author phil;	state Exp;
branches;
next	4.1;

4.1
date	86.12.29.03.11.52;	author mike;	state Rel1;
branches;
next	1.2;

1.2
date	86.11.18.05.47.57;	author reschly;	state Exp;
branches;
next	1.1;

1.1
date	86.08.14.21.51.27;	author mike;	state Exp;
branches;
next	;

11.6.2.1
date	2002.09.19.18.02.34;	author morrison;	state Exp;
branches;
next	11.6.2.2;

11.6.2.2
date	2004.03.17.21.23.20;	author morrison;	state Exp;
branches;
next	;

11.6.4.1
date	2004.03.11.23.52.28;	author morrison;	state Exp;
branches;
next	;

11.6.10.1
date	2004.02.12.19.43.09;	author erikg;	state Exp;
branches;
next	11.6.10.2;

11.6.10.2
date	2004.03.15.14.08.11;	author erikg;	state Exp;
branches;
next	;


desc
@crop a BW image
@


11.10
log
@moved to src/util/
@
text
@/*
 *		B W C R O P . C
 *
 * Crop Black and White files.
 *
 * Given four "corner points" in the input file, we produce an
 * output file of the requested size consisting of the nearest
 * pixels.  No filtering/interpolating is done.
 *
 * This can handle arbitrarily large files.
 * We keep a buffer of scan lines centered around the last
 * point that fell outside of the buffer.
 * Note: this buffer code is shared with bwscale.c
 *
 *  Author -
 *	Phillip Dykstra
 *	16 June 1986
 *  
 *  Source -
 *	SECAD/VLD Computing Consortium, Bldg 394
 *	The U. S. Army Ballistic Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5066
 *  
 *  Copyright Notice -
 *	This software is Copyright (C) 1986-2004 by the United States Army.
 *	All rights reserved.
 */
#ifndef lint
static const char RCSid[] = "@@(#)$Header: /n/xoff/cvs/brlcad/util/bwcrop.c,v 11.9 2004/05/10 15:30:50 erikg Exp $ (BRL)";
#endif

#ifdef HAVE_CONFIG_H
# include "config.h"
#endif



#include <stdio.h>

#include "machine.h"
#include "externs.h"		/* For malloc */

#define	MAXBUFBYTES	1024*1024	/* max bytes to malloc in buffer space */

unsigned char	*buffer;
int	scanlen;			/* length of infile scanlines */
int	buflines;			/* Number of lines held in buffer */
int	buf_start = -1000;		/* First line in buffer */

float	xnum, ynum;			/* Number of pixels in new file */
float	ulx,uly,urx,ury,lrx,lry,llx,lly;	/* Corners of original file */

#define	round(x) ((int)(x+0.5))

void	init_buffer(int scanlen), fill_buffer(int y);

FILE	*ifp, *ofp;

static char usage[] = "\
Usage: bwcrop in.bw out.bw (I prompt!)\n\
   or  bwcrop in.bw out.bw inwidth outwidth outheight\n\
        ulx uly urx ury lrx lry llx lly\n";

int
main(int argc, char **argv)
{
	float	row, col, x1, y1, x2, y2, x, y;
	int	yindex;
	char	value;

	if (argc < 3) {
		fprintf( stderr, usage );
		exit( 1 );
	}
	if ((ifp = fopen(argv[1], "r")) == NULL) {
		fprintf( stderr, "bwcrop: can't open %s\n", argv[1] );
		exit( 2 );
	}
	if ((ofp = fopen(argv[2], "w")) == NULL) {
		fprintf( stderr, "bwcrop: can't open %s\n", argv[1] );
		exit( 3 );
	}

	if( argc == 14 ) {
		scanlen = atoi( argv[3] );
		xnum = atoi( argv[4] );
		ynum = atoi( argv[5] );
		ulx = atoi( argv[6] );
		uly = atoi( argv[7] );
		urx = atoi( argv[8] );
		ury = atoi( argv[9] );
		lrx = atoi( argv[10] );
		lry = atoi( argv[11] );
		llx = atoi( argv[12] );
		lly = atoi( argv[13] );
	} else {
		/* Get info */
		printf("Scanline length in input file: ");
		scanf( "%d", &scanlen );
		if( scanlen <= 0 ) {
			fprintf(stderr,"bwcrop: scanlen = %d, don't be ridiculous\n", scanlen );
			exit( 4 );
		}
		printf("Line Length and Number of scan lines (in new file)?: ");
		scanf( "%f%f", &xnum, &ynum );
		printf("Upper left corner in input file (x,y)?: ");
		scanf( "%f%f", &ulx, &uly );
		printf("Upper right corner (x,y)?: ");
		scanf( "%f%f", &urx, &ury );
		printf("Lower right (x,y)?: ");
		scanf( "%f%f", &lrx, &lry );
		printf("Lower left (x,y)?: ");
		scanf( "%f%f", &llx, &lly );
	}

	/* See how many lines we can buffer */
	init_buffer( scanlen );

	/* Check for silly buffer syndrome */
	if( abs((int)(ury - uly)) > buflines/2 || abs((int)(lry - lly)) > buflines/2 ) {
		fprintf( stderr, "bwcrop: Warning: You are skewing enough in the y direction\n" );
		fprintf( stderr, "bwcrop: relative to my buffer size that I will exhibit silly\n" );
		fprintf( stderr, "bwcrop: buffer syndrome (two replacements per scanline).\n" );
		fprintf( stderr, "bwcrop: Recompile me or use a smarter algorithm.\n" );
	}

	/* Move all points */
	for (row = 0; row < ynum; row++) {
		/* calculate left point of row */
		x1 = ((ulx-llx)/(ynum-1)) * row + llx;
		y1 = ((uly-lly)/(ynum-1)) * row + lly;
		/* calculate right point of row */
		x2 = ((urx-lrx)/(ynum-1)) * row + lrx;
		y2 = ((ury-lry)/(ynum-1)) * row + lry;

		for (col = 0; col < xnum; col++) {
			/* calculate point along row */
			x = ((x2-x1)/(xnum-1)) * col + x1;
			y = ((y2-y1)/(xnum-1)) * col + y1;

			/* Make sure we are in the buffer */
			yindex = round(y) - buf_start;
			if( yindex < 0 || yindex >= buflines ) {
				fill_buffer( round(y) );
				yindex = round(y) - buf_start;
			}

			value = buffer[ yindex * scanlen + round(x) ];
			fwrite(&value, sizeof(value), 1, ofp);
		}
	}
	return (0);
}

/*
 * Determine max number of lines to buffer.
 *  and malloc space for it.
 *  XXX - CHECK FILE SIZE
 */
void
init_buffer(int scanlen)
{
	int	max;

	/* See how many we could buffer */
	max = MAXBUFBYTES / scanlen;

	/*
	 * Do a max of 512.  We really should see how big
	 * the input file is to decide if we should buffer
	 * less than our max.
	 */
	if( max > 512 ) max = 512;

	buflines = max;
	buffer = (unsigned char *)malloc( buflines * scanlen );
}

/*
 * Load the buffer with scan lines centered around
 * the given y coordinate.
 */
void
fill_buffer(int y)
{
	buf_start = y - buflines/2;
	if( buf_start < 0 ) buf_start = 0;

	fseek( ifp, buf_start * scanlen, 0 );
	fread( buffer, scanlen, buflines, ifp );
}
@


11.9
log
@change conf.h to a wrapped config.h
@
text
@d29 1
a29 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/util/bwcrop.c,v 11.8 2004/04/05 05:46:01 morrison Exp $ (BRL)";
@


11.8
log
@merge of ansi-6-0-branch into head
@
text
@d29 1
a29 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
d32 5
a36 1
#include "conf.h"
@


11.7
log
@update copyright to include span through 2003
@
text
@d29 1
a29 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/bwcrop.c,v 11.6 2002/08/20 17:08:54 jra Exp $ (BRL)";
d51 1
a51 1
void	init_buffer(), fill_buffer();
d61 1
a61 2
main(argc, argv)
int argc; char **argv;
d157 1
a157 2
init_buffer( scanlen )
int scanlen;
d180 1
a180 2
fill_buffer( y )
int y;
@


11.6
log
@Restoration of entire source tree to Pre-Hartley state
@
text
@d25 1
a25 1
 *	This software is Copyright (C) 1986 by the United States Army.
d29 1
a29 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/bwcrop.c,v 11.4 2000/09/01 03:23:45 mike Exp $ (BRL)";
@


11.6.4.1
log
@sync to HEAD...
@
text
@d25 1
a25 1
 *	This software is Copyright (C) 1986-2004 by the United States Army.
d29 1
a29 1
static const char RCSid[] = "@@(#)$Header: /n/cad/c/CVS/brlcad/util/bwcrop.c,v 11.7 2004/02/02 17:39:45 morrison Exp $ (BRL)";
@


11.6.10.1
log
@merge from HEAD
@
text
@d25 1
a25 1
 *	This software is Copyright (C) 1986-2004 by the United States Army.
d29 1
a29 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/bwcrop.c,v 11.7 2004/02/02 17:39:45 morrison Exp $ (BRL)";
@


11.6.10.2
log
@merge from head
@
text
@d29 1
a29 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/bwcrop.c,v 11.6.10.1 2004/02/12 19:43:09 erikg Exp $ (BRL)";
@


11.6.2.1
log
@Initial ANSIfication
@
text
@d29 1
a29 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/bwcrop.c,v 11.6 2002/08/20 17:08:54 jra Exp $ (BRL)";
d51 1
a51 1
void	init_buffer(int scanlen), fill_buffer(int y);
d61 2
a62 1
main(int argc, char **argv)
d158 2
a159 1
init_buffer(int scanlen)
d182 2
a183 1
fill_buffer(int y)
@


11.6.2.2
log
@sync branch with HEAD
@
text
@d25 1
a25 1
 *	This software is Copyright (C) 1986-2004 by the United States Army.
d29 1
a29 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
@


11.5
log
@Converted from K&R to ANSI C - RFH
@
text
@d51 1
a51 1
void	init_buffer(int scanlen), fill_buffer(int y);
d61 2
a62 1
main(int argc, char **argv)
d158 2
a159 1
init_buffer(int scanlen)
d182 2
a183 1
fill_buffer(int y)
@


11.4
log
@
Lint fix
@
text
@d29 1
a29 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/bwcrop.c,v 11.3 2000/08/23 19:04:22 mike Exp $ (BRL)";
d51 1
a51 1
void	init_buffer(), fill_buffer();
d61 1
a61 2
main(argc, argv)
int argc; char **argv;
d157 1
a157 2
init_buffer( scanlen )
int scanlen;
d180 1
a180 2
fill_buffer( y )
int y;
@


11.3
log
@
const RCSid
@
text
@d29 1
a29 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/bwcrop.c,v 11.2 2000/01/31 16:03:08 jra Exp $ (BRL)";
d60 1
@


11.2
log
@Eliminated some unused variables
@
text
@d29 1
a29 1
static char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/bwcrop.c,v 11.1 1995/01/04 10:11:36 mike Rel4_4 $ (BRL)";
@


11.1
log
@Release_4.4
@
text
@d29 1
a29 1
static char RCSid[] = "@@(#)$Header: /m/cad/util/RCS/bwcrop.c,v 10.3 94/09/22 04:17:00 mike Exp $ (BRL)";
d64 1
a64 1
	int	error, yindex;
a65 1
	long	offset;
d145 1
a145 1
			error = fwrite(&value, sizeof(value), 1, ofp);
a183 2
	int	i;

@


10.3
log
@Pointer problem.
@
text
@d29 1
a29 1
static char RCSid[] = "@@(#)$Header: /m/cad/util/RCS/bwcrop.c,v 10.2 94/08/23 15:05:32 gdurf Exp Locker: mike $ (BRL)";
@


10.2
log
@Factored ifdefs
@
text
@d29 1
a29 1
static char RCSid[] = "@@(#)$Header: /m/cad/util/RCS/bwcrop.c,v 10.1 1991/10/12 06:47:51 mike Rel4_0 gdurf $ (BRL)";
d174 1
a174 1
	buffer = malloc( buflines * scanlen );
@


10.1
log
@Release_4.0
@
text
@d29 1
a29 1
static char RCSid[] = "@@(#)$Header: /m/cad/util/RCS/bwcrop.c,v 9.2 91/10/11 11:21:21 butler Exp $ (BRL)";
d32 2
d36 2
a37 1
unsigned char *malloc();
@


9.2
log
@main() now returns 0
@
text
@d29 1
a29 1
static char RCSid[] = "@@(#)$Header: /m/cad/util/RCS/bwcrop.c,v 9.1 89/05/19 06:07:33 mike Rel3_5 Locker: butler $ (BRL)";
@


9.1
log
@Release_3.5
@
text
@d29 1
a29 1
static char RCSid[] = "@@(#)$Header: bwcrop.c,v 8.2 89/03/06 17:49:15 mike Exp $ (BRL)";
d146 1
@


8.2
log
@ansii finds error
@
text
@d29 1
a29 1
static char RCSid[] = "@@(#)$Header: bwcrop.c,v 8.1 88/10/05 00:40:19 mike Locked $ (BRL)";
@


8.1
log
@Release_3.0
@
text
@d29 1
a29 1
static char RCSid[] = "@@(#)$Header: bwcrop.c,v 7.2 88/05/16 00:06:15 mike Exp $ (BRL)";
d95 1
a95 1
			fprintf("bwcrop: scanlen = %d, don't be ridiculous\n", scanlen );
@


7.2
log
@lint fixes
@
text
@d29 1
a29 1
static char RCSid[] = "@@(#)$Header: bwcrop.c,v 7.1 87/11/03 00:05:06 mike Locked $ (BRL)";
@


7.1
log
@Release 2.3
@
text
@d29 1
a29 1
static char RCSid[] = "@@(#)$Header: bwcrop.c,v 6.1 87/07/11 08:08:39 mike Rel $ (BRL)";
d48 2
d153 1
d177 1
@


6.1
log
@Release 2.0
@
text
@d29 1
a29 1
static char RCSid[] = "@@(#)$Header: bwcrop.c,v 5.1 87/06/24 22:36:24 mike Rel $ (BRL)";
@


5.1
log
@Release 1.24
@
text
@d29 1
a29 1
static char RCSid[] = "@@(#)$Header: bwcrop.c,v 4.3 87/02/13 00:37:40 mike Exp $ (BRL)";
@


4.3
log
@Release 1.20 -- First Formal Release
@
text
@d29 1
a29 1
static char RCSid[] = "@@(#)$Header: bwcrop.c,v 4.2 87/01/09 16:37:04 phil Exp $ (BRL)";
@


4.2
log
@quadrant conversion, optional command line args
@
text
@d29 1
a29 1
static char RCSid[] = "@@(#)$Header: bwcrop.c,v 4.1 86/12/29 03:11:52 phil Locked $ (BRL)";
@


4.1
log
@BRL CAD Distribution Release 1.10
@
text
@d29 1
a29 1
static char RCSid[] = "@@(#)$Header: bwcrop.c,v 1.2 86/11/18 05:47:57 reschly Exp $ (BRL)";
d50 5
d64 1
a64 1
		printf("usage: bwcrop infile outfile (I prompt!)\n");
d68 1
a68 1
		printf("bwcrop: can't open %s\n", argv[1]);
d72 1
a72 1
		printf("bwcrop: can't open %s\n", argv[1]);
d76 30
a105 6
	/* Get info */
	printf("Scanline length in input file: ");
	scanf( "%d", &scanlen );
	if( scanlen <= 0 ) {
		fprintf("bwcrop: scanlen = %d, don't be ridiculous\n", scanlen );
		exit( 4 );
a106 10
	printf("Line Length and Number of scan lines (in new file)?: ");
	scanf( "%f%f", &xnum, &ynum );
	printf("Upper left corner in input file (x,y)?: ");
	scanf( "%f%f", &ulx, &uly );
	printf("Upper right corner (x,y)?: ");
	scanf( "%f%f", &urx, &ury );
	printf("Lower right (x,y)?: ");
	scanf( "%f%f", &lrx, &lry );
	printf("Lower left (x,y)?: ");
	scanf( "%f%f", &llx, &lly );
d122 2
a123 2
		x1 = ((llx-ulx)/(ynum-1)) * row + ulx;
		y1 = ((lly-uly)/(ynum-1)) * row + uly;
d125 2
a126 2
		x2 = ((lrx-urx)/(ynum-1)) * row + urx;
		y2 = ((lry-ury)/(ynum-1)) * row + ury;
@


1.2
log
@Just corrected a typo, and added some question marks to some of the prompts.
@
text
@d29 1
a29 1
static char RCSid[] = "@@(#)$Header: bwcrop.c,v 1.1 86/08/14 21:51:27 reschly Locked $ (BRL)";
@


1.1
log
@Initial revision
@
text
@d29 1
a29 1
static char RCSid[] = "@@(#)$Header$ (BRL)";
d75 1
a75 1
		fprintf("bwcrop: scanlen = %d, don't be rediculous", scanlen );
d78 1
a78 1
	printf("Line Length and Number of scan lines (in new file): ");
d80 1
a80 1
	printf("Upper left corner in input file (x,y): ");
d82 1
a82 1
	printf("Upper right corner (x,y): ");
d84 1
a84 1
	printf("Lower right (x,y): ");
d86 1
a86 1
	printf("Lower left (x,y): ");
@
