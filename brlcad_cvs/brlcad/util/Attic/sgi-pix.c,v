head	11.12;
access;
symbols
	ansi-20040405-merged:11.9.2.1
	postmerge-20040405-ansi:11.10
	premerge-20040404-ansi:11.9
	postmerge-autoconf:11.9
	autoconf-freeze:11.9
	premerge-autoconf:11.9
	postmerge-20040315-windows:11.9
	premerge-20040315-windows:11.9
	windows-20040315-freeze:11.9
	autoconf-20031203:11.9
	autoconf-20031202:11.9
	autoconf-branch:11.9.0.10
	phong-branch:11.9.0.8
	photonmap-branch:11.9.0.6
	rel-6-1-DP:11.9
	windows-branch:11.9.0.4
	rel-6-0-2:11.7
	ansi-branch:11.9.0.2
	rel-6-0-1-branch:11.7.0.2
	hartley-6-0-post:11.8
	hartley-6-0-pre:11.7
	rel-6-0-1:11.7
	rel-6-0:11.7
	rel-5-4:11.2.2.1
	offsite-5-3-pre:11.6
	rel-5-3:11.2.2.1
	rel-5-2:11.2.2.1
	rel-5-1-branch:11.2.0.2
	rel-5-1:11.2
	rel-5-0:11.1
	rel-5-0-beta:11.1
	rel-4-5:11.1
	ctj-4-5-post:11.1
	ctj-4-5-pre:11.1
	rel-4-4:11.1
	rel-4-0:10.1;
locks; strict;
comment	@ * @;


11.12
date	2004.05.21.14.58.04;	author morrison;	state dead;
branches;
next	11.11;

11.11
date	2004.05.10.15.30.51;	author erikg;	state Exp;
branches;
next	11.10;

11.10
date	2004.04.05.05.46.02;	author morrison;	state Exp;
branches;
next	11.9;

11.9
date	2002.08.20.17.09.06;	author jra;	state Exp;
branches
	11.9.2.1;
next	11.8;

11.8
date	2002.08.15.20.56.18;	author hartley;	state Exp;
branches;
next	11.7;

11.7
date	2001.08.10.20.57.08;	author butler;	state Exp;
branches;
next	11.6;

11.6
date	2000.09.12.13.29.14;	author jra;	state Exp;
branches;
next	11.5;

11.5
date	2000.09.11.20.20.25;	author jra;	state Exp;
branches;
next	11.4;

11.4
date	2000.09.01.03.24.06;	author mike;	state Exp;
branches;
next	11.3;

11.3
date	2000.08.23.19.05.11;	author mike;	state Exp;
branches;
next	11.2;

11.2
date	2000.01.31.16.03.10;	author jra;	state Exp;
branches
	11.2.2.1;
next	11.1;

11.1
date	95.01.04.10.13.28;	author mike;	state Rel4_4;
branches;
next	10.5;

10.5
date	94.11.24.02.39.27;	author mike;	state Exp;
branches;
next	10.4;

10.4
date	94.08.23.13.31.37;	author gdurf;	state Exp;
branches;
next	10.3;

10.3
date	92.05.12.20.32.32;	author mike;	state Exp;
branches;
next	10.2;

10.2
date	92.05.12.19.40.48;	author mike;	state Exp;
branches;
next	10.1;

10.1
date	91.10.12.06.49.22;	author mike;	state Rel4_0;
branches;
next	1.2;

1.2
date	91.07.16.13.47.16;	author mmark;	state Exp;
branches;
next	1.1;

1.1
date	90.03.01.16.45.30;	author mike;	state Exp;
branches;
next	;

11.2.2.1
date	2000.09.11.19.55.01;	author jra;	state Exp;
branches;
next	;

11.9.2.1
date	2002.09.19.18.02.45;	author morrison;	state Exp;
branches;
next	;


desc
@Program to screendump an SGI screen as a .pix file
@


11.12
log
@moved to src/util/
@
text
@/*
 *			S G I - P I X . C
 *
 *  Authors -
 *	Multiple Sources (Dykstra, Muuss, etc)
 *	Based on scrsave.c
 *  
 *  Source -
 *	SECAD/VLD Computing Consortium, Bldg 394
 *	The U. S. Army Ballistic Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5066
 *  
 *  Distribution Status -
 *	Public Domain, Distribution Unlimitied.
 */
#ifndef lint
static const char RCSid[] = "@@(#)$Header: /n/xoff/cvs/brlcad/util/sgi-pix.c,v 11.11 2004/05/10 15:30:51 erikg Exp $ (BRL)";
#endif

#ifdef HAVE_CONFIG_H
# include "config.h"
#endif



#include <stdio.h>
#include <stdlib.h>
#ifdef HAVE_STRING_H
#include <string.h>
#else
#include <strings.h>
#endif
#include "machine.h"

#if HAS_SGIGL
# ifdef mips
#	include <gl/gl.h>
# else
#	include <gl.h>
# endif
#endif

#define	MIN(a,b)	((a)<(b)?(a):(b))
#define	ABS(a)		((a)<0? -(a):(a))

char rbuf[2048];
char gbuf[2048];
char bbuf[2048];
char obuf[2048*3];
struct cmap {
	unsigned char red;
	unsigned char grn;
	unsigned char blu;
} cmap[4096];

#if !HAS_SGIGL
int
main(int argc, char **argv)
{
	fprintf(stderr, "sgi-pix:  This program only works on SGI machines\n");
	exit(1);
}
#else
static char usage[] = "\
Usage: sgi-pix [x1 x2 y1 y2] [outfile]\n";

int
main(argc,argv)
int argc;
char **argv;
{
	int i, y, gotfirst;
	int x1, x2, y1, y2;
	int xsize, ysize;
	int xorg, yorg;
	FILE *ofp;
	char *fname;
	int mode, planes;

	if(!(argc==1 || argc==2 || argc==5 || argc==6)) {
		fprintf(stderr,usage);
		exit(1);
	}
	if( argc > 4 ) {
		x1 = atoi(argv[1]);
		x2 = atoi(argv[2]);
		y1 = atoi(argv[3]);
		y2 = atoi(argv[4]);
	} else {
		x1 = 0;
		x2 = XMAXSCREEN;
		y1 = 0;
		y2 = YMAXSCREEN;
	}
	if( argc == 2 ) {
		fname = argv[1];
		ofp = fopen(fname,"w");
	} else if( argc == 6 ) {
		fname = argv[5];
		ofp = fopen(fname,"w");
	} else {
		fname = "-";
		ofp = stdout;
	}
	if( ofp == NULL ) {
		fprintf(stderr,"sgi-pix: can't open \"%s\"\n", fname);
		exit(2);
	}
	if( isatty(fileno(ofp)) ) {
		fprintf(stderr,"sgi-pix: refuse to send binary output to terminal\n");
		fprintf(stderr,usage);
		exit(1);
	}

	/* Convert rectangle edges to origin and size */
	xorg = MIN(x1,x2);
	yorg = MIN(y1,y2);
	if(xorg<0)
		xorg = 0;
	if(yorg<0)
		yorg = 0;
	xsize = ABS(x2-x1);
	ysize = ABS(y2-y1);
	if((xorg+xsize)>XMAXSCREEN)
		xsize = XMAXSCREEN-xorg;
	if((yorg+ysize)>YMAXSCREEN)
		ysize = YMAXSCREEN-yorg;
	xsize++;
	ysize++;
	fprintf(stderr,"origin(%d, %d) size (%d, %d)\n",
		xorg, yorg, xsize, ysize);

#ifdef mips
	foreground();
	noport();
	winopen("sgi-pix");
	savescreen(ofp, xorg, yorg, xsize, ysize);
#else
	gbegin();
	foreground();
	noport();
	winopen("sgi-pix");
	cursoff();

	if((mode = getdisplaymode()) == 0) {
		/* RGB mode */
		fprintf(stderr,"RGB mode\n");
		savescreen(ofp, xorg, yorg, xsize, ysize);
	} else {
		if( mode == 1 )
			fprintf(stderr,"CMAP mode (single buffered)\n");
		else  {
			fprintf(stderr,"CMAP mode (double buffered)\n");
			swapbuffers();
		}
		planes = getplanes();
		fprintf(stderr,"%d planes\n", planes);
		for( i = 0; i < 4096; i++ ) {
			short r,g,b;
			getmcolor( i, &r, &g, &b );
			cmap[i].red = r;
			cmap[i].grn = g;
			cmap[i].blu = b;
		}
		cmap_savescreen(ofp,x1,x2,y1,y2);
		if( mode != 1 )  {
			/* Double buffered mode, swap 'em back */
			swapbuffers();
		}
	}
#endif
	return(0);
}
#endif

/*
 *  This block of code is for SGI 3030 machines, and 4Ds running Irix 3.
 */
#if HAS_SGIGL && !defined(__mips)
/*
 *			S A V E S C R E E N
 */
savescreen(ofp,xorg,yorg,xsize,ysize)
FILE	*ofp;
int	xorg,yorg,xsize,ysize;
{
	int y, i;
	int pos, togo, n;

	screenspace();

#if !defined(mips)
	/* 3D only */
	viewport(0,1023,0,767);
	ortho2(-0.5,1023.5,-0.5,767.5);
#endif

	for(y=0; y<ysize; y++) {
#ifdef mips
		/* Note that gl_readscreen() can only do 256 pixels! */
		togo = xsize;
		pos = 0;
		while(togo) {
			n = togo;
			if(n>256)
				n = 256;
			cmov2i(xorg+pos,yorg+y);
			gl_readscreen(n,rbuf+pos,gbuf+pos,bbuf+pos);
			pos += n;
			togo -= n;
		}
#else
		cmov2i(xorg,yorg+y);
		readRGB(n,rbuf,gbuf,bbuf);
#endif
		for( i = 0; i < xsize; i++ ) {
			obuf[3*i] = rbuf[i];
			obuf[3*i+1] = gbuf[i];
			obuf[3*i+2] = bbuf[i];
		}
		if( fwrite(obuf,3,xsize,ofp) != xsize )  {
			perror("fwrite");
			exit(2);
		}
	}
}

cmap_savescreen(ofp,xorg,yorg,xsize,ysize)
FILE	*ofp;
int	xorg,yorg,xsize,ysize;
{
	int y, i;
	int pos, togo, n;
	Colorindex buff[1024];

	screenspace();

	for(y=0; y<ysize; y++) {
		cmov2i(xorg,yorg+y);
		readpixels(xsize,buff);

		for( i = 0; i < xsize; i++ ) {
			obuf[i*3] = cmap[buff[i]].red;
			obuf[i*3+1] = cmap[buff[i]].grn;
			obuf[i*3+2] = cmap[buff[i]].blu;
		}
		if( fwrite(obuf,3,xsize,ofp) != xsize )  {
			perror("fwrite");
			exit(2);
		}
	}
}
#endif

/*
 *  This block of code is for SGI 4Ds running Irix.
 */
#if HAS_SGIGL && defined(__mips)
/*
 *			S A V E S C R E E N
 *
 *  In order for this to work reasonably, the entire screen should be read
 *  at once.
 */
savescreen(ofp,xorg,yorg,xsize,ysize)
FILE	*ofp;
int	xorg,yorg,xsize,ysize;
{
	unsigned long	*lbuf;
	unsigned long	*lp;
	int	npix;
	int	x;
	int	y;
	register unsigned char	*op;
	long	got;

	npix = (xsize+1)*(ysize+1);		/* conservative */
	lbuf = (unsigned long *)malloc( sizeof(long) * npix );
	if( lbuf == (unsigned long *)NULL )  {
		fprintf(stderr, "sgi-pix:  malloc error\n");
		exit(1);
	}

	npix = (xsize)*(ysize);			/* exact */
	got = readdisplay( xorg, yorg, xorg+xsize-1, yorg+ysize-1,
		lbuf, RD_FREEZE );
	if( got != npix )  {
		fprintf(stderr,"sgi-pix: readdisplay() wanted %d, got %d\n",
			npix, got );
	}
	lp = lbuf;
	for( y=0; y<ysize; y++ )  {
		register unsigned long	w;
		op = (unsigned char *)obuf;
		for( x=0; x<xsize; x++ )  {
			w = *lp++;
			*op++ = (w    ) & 0xFF;
			*op++ = (w>> 8) & 0xFF;
			*op++ = (w>>16) & 0xFF;
		}
		if( fwrite(obuf,3,xsize,ofp) != xsize )  {
			perror("fwrite");
			exit(2);
		}
	}
}
#endif
@


11.11
log
@change conf.h to a wrapped config.h
@
text
@d17 1
a17 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/util/sgi-pix.c,v 11.10 2004/04/05 05:46:02 morrison Exp $ (BRL)";
@


11.10
log
@merge of ansi-6-0-branch into head
@
text
@d17 1
a17 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
d20 5
a24 1
#include "conf.h"
@


11.9
log
@Restoration of entire source tree to Pre-Hartley state
@
text
@d17 1
a17 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/sgi-pix.c,v 11.7 2001/08/10 20:57:08 butler Exp $ (BRL)";
d54 1
a54 3
main(argc,argv)
int argc;
char **argv;
@


11.9.2.1
log
@Initial ANSIfication
@
text
@d17 1
a17 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/sgi-pix.c,v 11.9 2002/08/20 17:09:06 jra Exp $ (BRL)";
d54 3
a56 1
main(int argc, char **argv)
@


11.8
log
@Converted from K&R to ANSI C - RFH
@
text
@d54 3
a56 1
main(int argc, char **argv)
@


11.7
log
@Misc compiler warnings eliminated
@
text
@d17 1
a17 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/sgi-pix.c,v 11.6 2000/09/12 13:29:14 jra Exp $ (BRL)";
d54 1
a54 3
main(argc,argv)
int argc;
char **argv;
@


11.6
log
@Arranged ifdef's to eliminate complaints about unused variables
@
text
@d17 1
a17 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/sgi-pix.c,v 11.5 2000/09/11 20:20:25 jra Exp $ (BRL)";
d23 6
@


11.5
log
@Replaced accidentally removed "usage" definition
@
text
@d17 1
a17 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/sgi-pix.c,v 11.4 2000/09/01 03:24:06 mike Exp $ (BRL)";
d46 10
a63 4
#if !HAS_SGIGL
	fprintf(stderr, "sgi-pix:  This program only works on SGI machines\n");
	exit(1);
#else
d165 1
a166 1
}
@


11.4
log
@
Lint fix
@
text
@d17 1
a17 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/sgi-pix.c,v 11.3 2000/08/23 19:05:11 mike Exp $ (BRL)";
d45 3
@


11.3
log
@
const RCSid
@
text
@d17 1
a17 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/sgi-pix.c,v 11.2 2000/01/31 16:03:10 jra Exp $ (BRL)";
d46 1
@


11.2
log
@Eliminated some unused variables
@
text
@d17 1
a17 1
static char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/sgi-pix.c,v 11.1 1995/01/04 10:13:28 mike Rel4_4 $ (BRL)";
@


11.2.2.1
log
@Replaced accidentally removed "usage" declaration.
@
text
@d17 1
a17 1
static char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/sgi-pix.c,v 11.2 2000/01/31 16:03:10 jra Exp $ (BRL)";
a44 3

static char usage[] = "\
Usage: sgi-pix [x1 x2 y1 y2] [outfile]\n";
@


11.1
log
@Release_4.4
@
text
@d17 1
a17 1
static char RCSid[] = "@@(#)$Header: /m/cad/util/RCS/sgi-pix.c,v 10.5 94/11/24 02:39:27 mike Exp $ (BRL)";
a44 3

static char usage[] = "\
Usage: sgi-pix [x1 x2 y1 y2] [outfile]\n";
@


10.5
log
@GL
@
text
@d17 1
a17 1
static char RCSid[] = "@@(#)$Header: /m/cad/util/RCS/sgi-pix.c,v 10.4 94/08/23 13:31:37 gdurf Exp Locker: mike $ (BRL)";
@


10.4
log
@Added include of conf.h
@
text
@d17 1
a17 1
static char RCSid[] = "@@(#)$Header: /m/cad/util/RCS/sgi-pix.c,v 10.3 1992/05/12 20:32:32 mike Exp gdurf $ (BRL)";
d25 1
a25 1
#ifdef sgi
d53 1
a53 1
#ifndef sgi
d164 1
a164 1
#if defined(sgi) && !defined(__mips)
d241 1
a241 1
 *  This block of code is for SGI 4Ds running Irix 4.
d243 1
a243 1
#if defined(__sgi) && defined(__mips)
@


10.3
log
@To do atomic reads, needed to malloc full image.
@
text
@d17 1
a17 1
static char RCSid[] = "@@(#)$Header: /m/cad/util/RCS/sgi-pix.c,v 10.2 92/05/12 19:40:48 mike Exp Locker: mike $ (BRL)";
d19 2
@


10.2
log
@Modified to work on 4D running IRIX 4.
@
text
@d17 1
a17 1
static char RCSid[] = "@@(#)$Header$ (BRL)";
d252 3
a254 1
	unsigned long	lbuf[2048];
d260 17
a276 8
	for(y=0; y<ysize; y++) {
		got = readdisplay( xorg, yorg+y, xorg+xsize-1, yorg+y,
			lbuf, RD_FREEZE );
		if( got != xsize )  {
			fprintf(stderr,"sgi-pix: readdisplay() wanted %d, got %d\n",
				xsize, got );
			/* exit? */
		}
d279 4
a282 3
			*op++ = (lbuf[x]    ) & 0xFF;
			*op++ = (lbuf[x]>> 8) & 0xFF;
			*op++ = (lbuf[x]>>16) & 0xFF;
@


10.1
log
@Release_4.0
@
text
@d2 13
a14 1
 * From scrsave.c
d16 3
d20 3
a30 2
#include <stdio.h>

d113 2
a114 1
	fprintf(stderr,"(%d %d)\n", xsize, ysize);
d120 1
a120 1
	savescreen(ofp,x1,x2,y1,y2);
d131 1
a131 1
		savescreen(ofp,x1,x2,y1,y2);
d159 7
a165 1
#ifdef sgi
d229 42
@


1.2
log
@changed '#ifndef' to '#if !defined'
@
text
@@


1.1
log
@Initial revision
@
text
@d152 1
a152 1
#ifndef(mips)
@
