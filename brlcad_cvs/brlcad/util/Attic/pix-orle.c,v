head	11.9;
access;
symbols
	ansi-20040405-merged:11.5.2.2
	postmerge-20040405-ansi:11.7
	premerge-20040404-ansi:11.6
	postmerge-autoconf:11.6
	autoconf-freeze:11.5.10.2
	premerge-autoconf:11.6
	postmerge-20040315-windows:11.6
	premerge-20040315-windows:11.6
	windows-20040315-freeze:11.5.4.1
	autoconf-20031203:11.5
	autoconf-20031202:11.5
	autoconf-branch:11.5.0.10
	phong-branch:11.5.0.8
	photonmap-branch:11.5.0.6
	rel-6-1-DP:11.5
	windows-branch:11.5.0.4
	rel-6-0-2:11.3
	ansi-branch:11.5.0.2
	rel-6-0-1-branch:11.3.0.2
	hartley-6-0-post:11.4
	hartley-6-0-pre:11.3
	rel-6-0-1:11.3
	rel-6-0:11.3
	rel-5-4:11.1
	offsite-5-3-pre:11.3
	rel-5-3:11.1
	rel-5-2:11.1
	rel-5-1-branch:11.1.0.2
	rel-5-1:11.1
	rel-5-0:11.1
	rel-5-0-beta:11.1
	rel-4-5:11.1
	ctj-4-5-post:11.1
	ctj-4-5-pre:11.1
	rel-4-4:11.1
	rel-4-0:10.1
	rel-3-5:9.1
	rel-3-0:8.1
	rel-2-3:7.1
	rel-2-0:5.1
	rel-1-24:5.1
	rel-1-20:4.2
	rel-1-10:4.1;
locks; strict;
comment	@ * @;


11.9
date	2004.05.21.14.57.46;	author morrison;	state dead;
branches;
next	11.8;

11.8
date	2004.05.10.15.30.50;	author erikg;	state Exp;
branches;
next	11.7;

11.7
date	2004.04.05.05.46.02;	author morrison;	state Exp;
branches;
next	11.6;

11.6
date	2004.02.02.17.39.45;	author morrison;	state Exp;
branches;
next	11.5;

11.5
date	2002.08.20.17.09.00;	author jra;	state Exp;
branches
	11.5.2.1
	11.5.4.1
	11.5.10.1;
next	11.4;

11.4
date	2002.08.15.20.56.12;	author hartley;	state Exp;
branches;
next	11.3;

11.3
date	2000.09.01.03.23.52;	author mike;	state Exp;
branches;
next	11.2;

11.2
date	2000.08.23.19.04.38;	author mike;	state Exp;
branches;
next	11.1;

11.1
date	95.01.04.10.12.23;	author mike;	state Rel4_4;
branches;
next	10.3;

10.3
date	94.08.23.15.05.45;	author gdurf;	state Exp;
branches;
next	10.2;

10.2
date	92.03.17.00.20.36;	author mike;	state Exp;
branches;
next	10.1;

10.1
date	91.10.12.06.48.25;	author mike;	state Rel4_0;
branches;
next	9.2;

9.2
date	91.01.12.08.54.24;	author butler;	state Exp;
branches;
next	9.1;

9.1
date	89.05.19.06.10.01;	author mike;	state Rel3_5;
branches;
next	8.1;

8.1
date	88.10.05.00.42.35;	author mike;	state Rel3_0;
branches;
next	7.2;

7.2
date	88.09.08.01.10.22;	author mike;	state Exp;
branches;
next	7.1;

7.1
date	87.11.03.00.08.17;	author mike;	state Rel;
branches;
next	6.1;

6.1
date	87.07.11.08.11.35;	author mike;	state Rel;
branches;
next	5.1;

5.1
date	87.06.24.22.42.13;	author mike;	state Rel;
branches;
next	4.2;

4.2
date	87.02.13.00.42.56;	author mike;	state Exp;
branches;
next	4.1;

4.1
date	86.12.29.03.13.23;	author mike;	state Rel1;
branches;
next	1.1;

1.1
date	86.11.21.05.23.08;	author mike;	state Exp;
branches;
next	;

11.5.2.1
date	2002.09.19.18.02.39;	author morrison;	state Exp;
branches;
next	11.5.2.2;

11.5.2.2
date	2004.03.17.21.23.27;	author morrison;	state Exp;
branches;
next	;

11.5.4.1
date	2004.03.11.23.52.31;	author morrison;	state Exp;
branches;
next	;

11.5.10.1
date	2004.02.12.19.43.10;	author erikg;	state Exp;
branches;
next	11.5.10.2;

11.5.10.2
date	2004.03.15.14.08.12;	author erikg;	state Exp;
branches;
next	;


desc
@Program to convert .pix images into .rle images
@


11.9
log
@moved to src/util/
@
text
@/*
 *			P I X - O R L E . C
 *
 *  Encode a .pix file using the old ORLE library
 *
 *  Author -
 *	Michael John Muuss
 *  
 *  Source -
 *	SECAD/VLD Computing Consortium, Bldg 394
 *	The U. S. Army Ballistic Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5066
 *  
 *  Copyright Notice -
 *	This software is Copyright (C) 1986-2004 by the United States Army.
 *	All rights reserved.
 */
#ifndef lint
static const char RCSid[] = "@@(#)$Id: pix-orle.c,v 11.8 2004/05/10 15:30:50 erikg Exp $ (BRL)";
#endif

#ifdef HAVE_CONFIG_H
# include "config.h"
#endif



#include <stdio.h>

#include "machine.h"
#include "externs.h"			/* For malloc and getopt */
#include "fb.h"
#include "orle.h"

static FILE	*outfp;
static FILE	*infp;
static char	*infile;

static int	background[3];

static int	file_width = 512;
static int	file_height = 512;

static char	usage[] = "\
Usage: pix-rle [-h -d -v] [-s squarefilesize]  [-C r/g/b]\n\
	[-w file_width] [-n file_height] [file.pix] [file.rle]\n\
\n\
If omitted, the .pix file is taken from stdin\n\
and the .rle file is written to stdout\n";


/*
 *			G E T _ A R G S
 */
static int
get_args(int argc, register char **argv)
{
	register int	c;

	while( (c = getopt( argc, argv, "dhs:w:n:vC:" )) != EOF )  {
		switch( c )  {
		case 'd':
			/* For debugging RLE library */
			rle_debug = 1;
			break;
		case 'v':
			/* Verbose */
			rle_verbose = 1;
			break;
		case 'h':
			/* high-res */
			file_height = file_width = 1024;
			break;
		case 's':
			/* square file size */
			file_height = file_width = atoi(optarg);
			break;
		case 'w':
			file_width = atoi(optarg);
			break;
		case 'n':
			file_height = atoi(optarg);
			break;
		case 'C':
			{
				register char *cp = optarg;
				register int *conp = background;

				/* premature null => atoi gives zeros */
				for( c=0; c < 3; c++ )  {
					*conp++ = atoi(cp);
					while( *cp && *cp++ != '/' ) ;
				}
			}
			break;
		case '?':
			return	0;
		}
	}
	if( argv[optind] != NULL )  {
		if( (infp = fopen( (infile=argv[optind]), "r" )) == NULL )  {
			perror(infile);
			return	0;
		}
		optind++;
	} else {
		infile = "-";
	}
	if( argv[optind] != NULL )  {
		if( access( argv[optind], 0 ) == 0 )  {
			(void) fprintf( stderr,
				"\"%s\" already exists.\n",
				argv[optind] );
			exit( 1 );
		}
		if( (outfp = fopen( argv[optind], "w" )) == NULL )  {
			perror(argv[optind]);
			return	0;
		}
	}
	if( argc > ++optind )
		(void) fprintf( stderr, "Excess arguments ignored\n" );

	if( isatty(fileno(infp)) || isatty(fileno(outfp)) )
		return 0;
	return	1;
}

/*
 *			M A I N
 */
int
main(int argc, char **argv)
{
	register RGBpixel *scan_buf;
	register int	y;

	infp = stdin;
	outfp = stdout;
	if( !get_args( argc, argv ) )  {
		(void)fputs(usage, stderr);
		exit( 1 );
	}
	scan_buf = (RGBpixel *)malloc( sizeof(RGBpixel) * file_width );

	rle_wlen( file_width, file_height, 1 );
	rle_wpos( 0, 0, 1 );		/* Start position is origin */

	/* Write RLE header, ncolors=3, bgflag=0 */
	if( rle_whdr( outfp, 3, 0, 0, RGBPIXEL_NULL ) == -1 )
		return	1;

	/* Read image a scanline at a time, and encode it */
	for( y = 0; y < file_height; y++ )  {
		if(rle_debug)fprintf(stderr,"encoding line %d\n", y);
		if( fread( (char *)scan_buf, sizeof(RGBpixel), file_width, infp ) != file_width)  {
			(void) fprintf(	stderr,
				"read of %d pixels on line %d failed!\n",
				file_width, y );
				return	1;
		}

		if( rle_encode_ln( outfp, scan_buf ) == -1 )
			return	1;
	}

	fclose( infp );
	fclose( outfp );
	return	0;
}
@


11.8
log
@change conf.h to a wrapped config.h
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Id: pix-orle.c,v 11.7 2004/04/05 05:46:02 morrison Exp $ (BRL)";
@


11.7
log
@merge of ansi-6-0-branch into head
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Id$ (BRL)";
d22 5
a26 1
#include "conf.h"
@


11.6
log
@update copyright to include span through 2003
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Id: pix-orle.c,v 11.5 2002/08/20 17:09:00 jra Exp $ (BRL)";
d52 1
a52 2
get_args( argc, argv )
register char	**argv;
d129 1
a129 3
main( argc, argv )
int	argc;
char	*argv[];
@


11.5
log
@Restoration of entire source tree to Pre-Hartley state
@
text
@d15 1
a15 1
 *	This software is Copyright (C) 1986 by the United States Army.
d19 1
a19 1
static const char RCSid[] = "@@(#)$Id: pix-orle.c,v 11.3 2000/09/01 03:23:52 mike Exp $ (BRL)";
@


11.5.4.1
log
@sync to HEAD...
@
text
@d15 1
a15 1
 *	This software is Copyright (C) 1986-2004 by the United States Army.
d19 1
a19 1
static const char RCSid[] = "@@(#)$Id: pix-orle.c,v 11.6 2004/02/02 17:39:45 morrison Exp $ (BRL)";
@


11.5.10.1
log
@merge from HEAD
@
text
@d15 1
a15 1
 *	This software is Copyright (C) 1986-2004 by the United States Army.
d19 1
a19 1
static const char RCSid[] = "@@(#)$Id: pix-orle.c,v 11.6 2004/02/02 17:39:45 morrison Exp $ (BRL)";
@


11.5.10.2
log
@merge from head
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Id: pix-orle.c,v 11.5.10.1 2004/02/12 19:43:10 erikg Exp $ (BRL)";
@


11.5.2.1
log
@Initial ANSIfication
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Id: pix-orle.c,v 11.5 2002/08/20 17:09:00 jra Exp $ (BRL)";
d52 2
a53 1
get_args(int argc, register char **argv)
d130 3
a132 1
main(int argc, char **argv)
@


11.5.2.2
log
@sync branch with HEAD
@
text
@d15 1
a15 1
 *	This software is Copyright (C) 1986-2004 by the United States Army.
d19 1
a19 1
static const char RCSid[] = "@@(#)$Id$ (BRL)";
@


11.4
log
@Converted from K&R to ANSI C - RFH
@
text
@d52 2
a53 1
get_args(int argc, register char **argv)
d130 3
a132 1
main(int argc, char **argv)
@


11.3
log
@
Lint fix
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Id: pix-orle.c,v 11.2 2000/08/23 19:04:38 mike Exp $ (BRL)";
d52 1
a52 2
get_args( argc, argv )
register char	**argv;
d129 1
a129 3
main( argc, argv )
int	argc;
char	*argv[];
@


11.2
log
@
const RCSid
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Id: pix-orle.c,v 11.1 1995/01/04 10:12:23 mike Rel4_4 $ (BRL)";
d129 1
@


11.1
log
@Release_4.4
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Id: pix-orle.c,v 10.3 94/08/23 15:05:45 gdurf Exp $ (BRL)";
@


10.3
log
@Factored ifdefs
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Id: pix-orle.c,v 10.2 1992/03/17 00:20:36 mike Exp gdurf $ (BRL)";
@


10.2
log
@IRIX 4.0.1
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Id: pix-orle.c,v 10.1 91/10/12 06:48:25 mike Rel4_0 Locker: mike $ (BRL)";
d22 2
d25 3
a28 1

a31 3

extern char	*malloc();

a55 2
	extern int	optind;
	extern char	*optarg;
@


10.1
log
@Release_4.0
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Id: /f/cad/util/RCS/pix-orle.c,v 1.1 91/01/03 23:11:40 butler Exp $ (BRL)";
d31 1
a31 1
static FILE	*infp = stdin;
@


9.2
log
@changed include of rle.h to include of orle.h
@
text
@@


9.1
log
@Release_3.5
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: pix-orle.c,v 8.1 88/10/05 00:42:35 mike Rel3_0 $ (BRL)";
d25 1
a25 1
#include "rle.h"
@


8.1
log
@Release_3.0
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: pix-orle.c,v 7.2 88/09/08 01:10:22 mike Exp $ (BRL)";
@


7.2
log
@Added -C flag
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: pix-rle.c,v 7.1 87/11/03 00:08:17 mike Locked $ (BRL)";
@


7.1
log
@Release 2.3
@
text
@d2 1
a2 1
 *			P I X - R L E . C
d4 1
a4 1
 *  Encode a .pix file using the RLE library
d19 1
a19 1
static char RCSid[] = "@@(#)$Header: pix-rle.c,v 6.1 87/07/11 08:11:35 mike Rel $ (BRL)";
d24 1
d27 4
a30 1
static FILE	*outfp = stdout;
d32 1
d34 2
d40 1
a40 1
Usage: pix-rle [-h -d -v] [-s squarefilesize]\n\
d46 1
d58 1
a58 1
	while( (c = getopt( argc, argv, "dhs:w:n:v" )) != EOF )  {
d64 4
d82 11
a92 3
		case 'v':
			/* Verbose */
			rle_verbose = 1;
d99 2
a100 2
		if( (infp = fopen( argv[optind], "r" )) == NULL )  {
			perror(argv[optind]);
d104 2
d137 2
d165 1
@


6.1
log
@Release 2.0
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: pix-rle.c,v 5.1 87/06/24 22:42:13 mike Rel $ (BRL)";
@


5.1
log
@Release 1.24
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: pix-rle.c,v 4.2 87/02/13 00:42:56 mike Exp $ (BRL)";
@


4.2
log
@Release 1.20 -- First Formal Release
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: pix-rle.c,v 4.1 86/12/29 03:13:23 mike Rel1 $ (BRL)";
@


4.1
log
@BRL CAD Distribution Release 1.10
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: pix-rle.c,v 1.1 86/11/21 05:23:08 mike Exp $ (BRL)";
@


1.1
log
@Initial revision
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: fb-rle.c,v 1.17 86/10/27 04:32:51 mike Exp $ (BRL)";
@
