head	11.10;
access;
symbols
	ansi-20040405-merged:11.6.2.2
	postmerge-20040405-ansi:11.8
	premerge-20040404-ansi:11.7
	postmerge-autoconf:11.7
	autoconf-freeze:11.6.10.2
	premerge-autoconf:11.7
	postmerge-20040315-windows:11.7
	premerge-20040315-windows:11.7
	windows-20040315-freeze:11.6.4.1
	autoconf-20031203:11.6
	autoconf-20031202:11.6
	autoconf-branch:11.6.0.10
	phong-branch:11.6.0.8
	photonmap-branch:11.6.0.6
	rel-6-1-DP:11.6
	windows-branch:11.6.0.4
	rel-6-0-2:11.4
	ansi-branch:11.6.0.2
	rel-6-0-1-branch:11.4.0.2
	hartley-6-0-post:11.5
	hartley-6-0-pre:11.4
	rel-6-0-1:11.4
	rel-6-0:11.4
	rel-5-4:11.1
	offsite-5-3-pre:11.3
	rel-5-3:11.1
	rel-5-2:11.1
	rel-5-1-branch:11.1.0.2
	rel-5-1:11.1
	rel-5-0:11.1
	rel-5-0-beta:11.1
	rel-4-5:11.1
	ctj-4-5-post:11.1
	ctj-4-5-pre:11.1
	rel-4-4:11.1
	rel-4-0:10.1
	rel-3-5:9.1
	rel-3-0:8.1
	rel-2-3:7.1
	rel-2-0:5.1
	rel-1-24:5.1
	rel-1-20:4.3;
locks; strict;
comment	@ * @;


11.10
date	2004.05.21.14.57.42;	author morrison;	state dead;
branches;
next	11.9;

11.9
date	2004.05.10.15.30.50;	author erikg;	state Exp;
branches;
next	11.8;

11.8
date	2004.04.05.05.46.02;	author morrison;	state Exp;
branches;
next	11.7;

11.7
date	2004.02.02.17.39.45;	author morrison;	state Exp;
branches;
next	11.6;

11.6
date	2002.08.20.17.08.58;	author jra;	state Exp;
branches
	11.6.2.1
	11.6.4.1
	11.6.10.1;
next	11.5;

11.5
date	2002.08.15.20.56.11;	author hartley;	state Exp;
branches;
next	11.4;

11.4
date	2001.08.08.03.28.15;	author butler;	state Exp;
branches;
next	11.3;

11.3
date	2000.09.01.03.23.50;	author mike;	state Exp;
branches;
next	11.2;

11.2
date	2000.08.23.19.04.34;	author mike;	state Exp;
branches;
next	11.1;

11.1
date	95.01.04.10.12.07;	author mike;	state Rel4_4;
branches;
next	10.2;

10.2
date	94.08.23.15.05.41;	author gdurf;	state Exp;
branches;
next	10.1;

10.1
date	91.10.12.06.48.17;	author mike;	state Rel4_0;
branches;
next	9.1;

9.1
date	89.05.19.06.09.38;	author mike;	state Rel3_5;
branches;
next	8.1;

8.1
date	88.10.05.00.42.07;	author mike;	state Rel3_0;
branches;
next	7.3;

7.3
date	88.09.02.15.10.32;	author phil;	state Exp;
branches;
next	7.2;

7.2
date	88.08.11.14.25.42;	author steveb;	state Exp;
branches;
next	7.1;

7.1
date	87.11.03.00.07.54;	author mike;	state Rel;
branches;
next	6.1;

6.1
date	87.07.11.08.11.10;	author mike;	state Rel;
branches;
next	5.1;

5.1
date	87.06.24.22.39.19;	author mike;	state Rel;
branches;
next	4.3;

4.3
date	87.02.13.00.42.29;	author mike;	state Exp;
branches;
next	4.2;

4.2
date	87.01.13.17.06.08;	author phil;	state Exp;
branches;
next	4.1;

4.1
date	87.01.09.18.20.25;	author mike;	state Rel1;
branches;
next	1.2;

1.2
date	87.01.05.08.37.22;	author mike;	state Exp;
branches;
next	1.1;

1.1
date	87.01.05.05.28.56;	author mike;	state Exp;
branches;
next	;

11.6.2.1
date	2002.09.19.18.02.37;	author morrison;	state Exp;
branches;
next	11.6.2.2;

11.6.2.2
date	2004.03.17.21.23.24;	author morrison;	state Exp;
branches;
next	;

11.6.4.1
date	2004.03.11.23.52.30;	author morrison;	state Exp;
branches;
next	;

11.6.10.1
date	2004.02.12.19.43.10;	author erikg;	state Exp;
branches;
next	11.6.10.2;

11.6.10.2
date	2004.03.15.14.08.12;	author erikg;	state Exp;
branches;
next	;


desc
@Convert MacPaint screendumps into pix(5) or bw(5) files
@


11.10
log
@moved to src/util/
@
text
@/*
 *			M A C - P I X . C
 *
 *  Read MacPaint document and output pix(5) or bw(5) raster image
 *
 *  The Macintosh bitmap file has a 512 byte header which is
 *  unimportant for this application, followed by a run-length-encoded
 *  image.
 *
 *  The image is stored as a sequence of bits, proceeding from the
 *  upper right corner down to the lower right corner, and then
 *  advancing left one column.  This unusual format 
 *  somewhat complicates matters here.
 *
 *  Within each byte, bits are extracted MSB to LSB;  these bits go down
 *  the page.
 *
 *  Because two files are being processed, the "file_*" things refer
 *  to the input file, and the "scr_*" things refer to the output file.
 *  
 *  Author -
 *	Michael John Muuss
 *
 *  Acknowledgement -
 *	getbits() drawn from paintimp.c by
 *	Dave Johnson, Brown University Computer Science
 *  
 *  Source -
 *	SECAD/VLD Computing Consortium, Bldg 394
 *	The U. S. Army Ballistic Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5066
 *  
 *  Copyright Notice -
 *	This software is Copyright (C) 1986-2004 by the United States Army.
 *	All rights reserved.
 */
#ifndef lint
static const char RCSid[] = "@@(#)$Header: /n/xoff/cvs/brlcad/util/mac-pix.c,v 11.9 2004/05/10 15:30:50 erikg Exp $ (BRL)";
#endif

#ifdef HAVE_CONFIG_H
# include "config.h"
#endif



#include <stdio.h>

#include "machine.h"
#include "externs.h"			/* For getopt */

#define	MAC_HEIGHT	576	/* input height (y), in bits */
#define	MAC_WIDTH	720	/* input width (x), in bits */

struct macpaint_hdr {
	long	version;		/* 4 bytes */
	char	patterns[38*8];		/* 304 bytes */
	char	spare[204];
} hdr;

unsigned char pix[MAC_HEIGHT*MAC_WIDTH];

unsigned char color[3] = { 0xFF, 0xFF, 0xFF };
unsigned char black[3*2048];

int	file_height = MAC_HEIGHT;	/* generally constant */
int	file_width = MAC_WIDTH;
int	file_xoff;
int	file_yoff;
int	scr_width = 1024;		/* "screen" tracks input file if zero */
int	scr_height = 1024;
int	scr_xoff;
int	scr_yoff;

int	bwflag;
char	*file_name;
FILE	*infp;

static char usage[] = "\
Usage: mac-pix [-c -l -b]\n\
	[-s squareMacsize] [-w Mac_width] [-n Mac_height]\n\
	[-x Mac_xoff] [-y Mac_yoff] [-X outp_xoff] [-Y outp_yoff]\n\
	[-S squareoutpsize] [-W outp_width] [-N outp_height]\n\
	[-C r/g/b] [file.mac]\n";

int
get_args(int argc, register char **argv)
{
	register int c;

	while ( (c = getopt( argc, argv, "clbs:w:n:x:y:X:Y:S:W:N:C:" )) != EOF )  {
		switch( c )  {
		case 'c':
			/* Center in output */
			scr_xoff = (scr_width-file_width)/2;
			scr_yoff = (scr_height-file_height)/2;
			break;
		case 'b':
			bwflag = 1;
			break;
		case 'l':
			/* "low"-res output -- track file size */
			scr_height = scr_width = 0;
			break;
		case 's':
			/* square file size */
			file_height = file_width = atoi(optarg);
			break;
		case 'w':
			file_width = atoi(optarg);
			break;
		case 'n':
			file_height = atoi(optarg);
			break;
		case 'x':
			file_xoff = atoi(optarg);
			break;
		case 'X':
			scr_xoff += atoi(optarg);
			break;
		case 'Y':
			scr_yoff += atoi(optarg);
			break;
		case 'S':
			scr_height = scr_width = atoi(optarg);
			break;
		case 'W':
			scr_width = atoi(optarg);
			break;
		case 'N':
			scr_height = atoi(optarg);
			break;
		case 'y':
			file_yoff = atoi(optarg);
			break;
		case 'C':
			{
				register char *cp = optarg;
				register unsigned char *conp
					= (unsigned char *)color;

				/* premature null => atoi gives zeros */
				for( c=0; c < 3; c++ )  {
					*conp++ = atoi(cp);
					while( *cp && *cp++ != '/' ) ;
				}
			}
			break;

		default:		/* '?' */
			return(0);
		}

		/* enforce limits */
		if( file_width > MAC_WIDTH )
			file_width = MAC_WIDTH;
		if( file_height > MAC_HEIGHT )
			file_height = MAC_HEIGHT;
		if( file_xoff < 0 || file_xoff >= MAC_WIDTH )
			file_xoff = 0;
		if( file_yoff < 0 || file_yoff >= MAC_HEIGHT )
			file_yoff = 0;
	}

	if( optind >= argc )  {
		if( isatty(fileno(stdin)) )
			return(0);
		file_name = "-";
		infp = stdin;
	} else {
		file_name = argv[optind];
		if( (infp = fopen(file_name, "r")) == NULL )  {
			(void)fprintf( stderr,
				"mac-pix: cannot open \"%s\" for reading\n",
				file_name );
			return(0);
		}
	}

	if ( argc > ++optind )
		(void)fprintf( stderr, "mac-pix: excess argument(s) ignored\n" );

	return(1);		/* OK */
}

int
getbits(register FILE *fp)
{
	static int count, rep, chr;
	register int c;

	if (rep) {
		rep--;
		return chr;
	}
	if (count) {
		count--;
		return getc(fp);
	}
	c = getc(fp);
	if (c & 0x80) {			/* repeated character count */
		rep = 0x100 - c;	/* byte length 2's comp + 1 */
					/* 	allow for this call */
		chr = getc(fp);		/* character to repeat */
		return chr;
	}
	else {
		count = c;		/* already counted this char */
		return getc(fp);
	}
}

int
main(int argc, char **argv)
{
	register int c;
	register int x, y;
	int x1, x2, x3;		/* x zone widths */
	int y1, y2, y3;		/* y zone widths */
	int first_x;		/* x: first pixel to be output in pix[] */
	int first_y;		/* y: first pixel to be output in pix[] */

	if ( !get_args( argc, argv ) || isatty(fileno(stdout)) )  {
		(void)fputs(usage, stderr);
		exit( 1 );
	}

	/* If screen size was not set, track the file size */
	if( scr_width == 0 )
		scr_width = file_width;
	if( scr_height == 0 )
		scr_height = file_height;

	fread( (char *)&hdr, sizeof(hdr), 1, infp );

	/* x and y are in terms of 1st quadrant coordinates */
	/* Very first bit input is in upper right of screen */
	x = file_width-1;
	y = file_height-1;

	while ((c = getbits(infp)) != EOF) {
		register int mask;
		register unsigned char *cp;

		cp = &pix[(file_width*y)+x];

		for( mask = 0x80; mask; mask >>= 1 )  {
			if( c & mask )
				*cp = 0xFF;
			else
				*cp = 0;
			cp -= file_width;
		}

		y -= 8;
		if (y < 0) {
			y = file_height-1;
			if ( --x < 0)
				break;
		}
	}
	fclose(infp);

	/*
	 *  There are potentially 9 regions in the output file, only one
	 *  will contain actual image.  x1 is the width of the left border
	 *  for each scanline, x2 is the width of the image area,
	 *  with the first pixel being first_x, and x3 being the width
	 *  of the right border.
	 *  Computations in y are similar.
	 */
	first_y = file_yoff;		/* always >= 0 */
	y1 = scr_yoff;
	if( y1 < 0 )  {
		y1 = 0;
		first_y += -scr_yoff;
	}
	y2 = file_height - first_y;
	if( y1 + y2 > scr_height )
		y2 = scr_height - y1;
	if( first_y >= file_height )
		y2 = 0;
	y3 = scr_height - y1 - y2;

	first_x = file_xoff;
	x1 = scr_xoff;
	if( x1 < 0 )  {
		x1 = 0;
		first_x += -scr_xoff;
	}
	x2 = file_width - first_x;
	if( x1 + x2 > scr_width )
		x2 = scr_width - x1;
	if( first_x >= file_width )
		x2 = 0;
	x3 = scr_width - x1 - x2;

	if( bwflag )  {
		for( y = 0; y < y1; y++ )
			fwrite( black, scr_width, 1, stdout );
		for( y = 0; y < y2; y++ )  {
			fwrite( black, x1, 1, stdout );
			fwrite( &pix[(file_width*(y+first_y))+first_x],
				x2, 1, stdout );
			fwrite( black, x3, 1, stdout );
		}
		for( y = 0; y < y3; y++ )
			fwrite( black, scr_width, 1, stdout );
	} else {
		for( y = 0; y < y1; y++ )
			fwrite( black, scr_width, 3, stdout );
		for( y = 0; y < y2; y++ )  {
			register unsigned char *cp;

			fwrite( black, x1, 3, stdout );
			cp = &pix[(file_width*(y+first_y))+first_x];
			for( x = 0; x < x2; x++ )  {
				if( *cp++ )
					fwrite( color, 3, 1, stdout );
				else
					fwrite( black, 3, 1, stdout );
			}
			fwrite( black, x3, 3, stdout );
		}
		for( y = 0; y < y3; y++ )
			fwrite( black, scr_width, 3, stdout );
	}
	exit(0);
}

@


11.9
log
@change conf.h to a wrapped config.h
@
text
@d38 1
a38 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/util/mac-pix.c,v 11.8 2004/04/05 05:46:02 morrison Exp $ (BRL)";
@


11.8
log
@merge of ansi-6-0-branch into head
@
text
@d38 1
a38 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
d41 5
a45 1
#include "conf.h"
@


11.7
log
@update copyright to include span through 2003
@
text
@d38 1
a38 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/mac-pix.c,v 11.6 2002/08/20 17:08:58 jra Exp $ (BRL)";
d83 1
a83 2
get_args( argc, argv )
register char **argv;
d183 1
a183 2
getbits(fp)
register FILE *fp;
d210 1
a210 3
main(argc, argv)
int argc;
char **argv;
@


11.6
log
@Restoration of entire source tree to Pre-Hartley state
@
text
@d34 1
a34 1
 *	This software is Copyright (C) 1986 by the United States Army.
d38 1
a38 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/mac-pix.c,v 11.4 2001/08/08 03:28:15 butler Exp $ (BRL)";
@


11.6.4.1
log
@sync to HEAD...
@
text
@d34 1
a34 1
 *	This software is Copyright (C) 1986-2004 by the United States Army.
d38 1
a38 1
static const char RCSid[] = "@@(#)$Header: /n/cad/c/CVS/brlcad/util/mac-pix.c,v 11.7 2004/02/02 17:39:45 morrison Exp $ (BRL)";
@


11.6.10.1
log
@merge from HEAD
@
text
@d34 1
a34 1
 *	This software is Copyright (C) 1986-2004 by the United States Army.
d38 1
a38 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/mac-pix.c,v 11.7 2004/02/02 17:39:45 morrison Exp $ (BRL)";
@


11.6.10.2
log
@merge from head
@
text
@d38 1
a38 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/mac-pix.c,v 11.6.10.1 2004/02/12 19:43:10 erikg Exp $ (BRL)";
@


11.6.2.1
log
@Initial ANSIfication
@
text
@d38 1
a38 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/mac-pix.c,v 11.6 2002/08/20 17:08:58 jra Exp $ (BRL)";
d83 2
a84 1
get_args(int argc, register char **argv)
d184 2
a185 1
getbits(register FILE *fp)
d212 3
a214 1
main(int argc, char **argv)
@


11.6.2.2
log
@sync branch with HEAD
@
text
@d34 1
a34 1
 *	This software is Copyright (C) 1986-2004 by the United States Army.
d38 1
a38 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
@


11.5
log
@Converted from K&R to ANSI C - RFH
@
text
@d83 2
a84 1
get_args(int argc, register char **argv)
d184 2
a185 1
getbits(register FILE *fp)
d212 3
a214 1
main(int argc, char **argv)
@


11.4
log
@Misc compiler warnings eliminated
@
text
@d38 1
a38 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/mac-pix.c,v 11.3 2000/09/01 03:23:50 mike Exp $ (BRL)";
d83 1
a83 2
get_args( argc, argv )
register char **argv;
d183 1
a183 2
getbits(fp)
register FILE *fp;
d210 1
a210 3
main(argc, argv)
int argc;
char **argv;
@


11.3
log
@
Lint fix
@
text
@d38 1
a38 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/mac-pix.c,v 11.2 2000/08/23 19:04:34 mike Exp $ (BRL)";
d82 1
d183 27
a330 26
getbits(fp)
register FILE *fp;
{
	static int count, rep, chr;
	register int c;

	if (rep) {
		rep--;
		return chr;
	}
	if (count) {
		count--;
		return getc(fp);
	}
	c = getc(fp);
	if (c & 0x80) {			/* repeated character count */
		rep = 0x100 - c;	/* byte length 2's comp + 1 */
					/* 	allow for this call */
		chr = getc(fp);		/* character to repeat */
		return chr;
	}
	else {
		count = c;		/* already counted this char */
		return getc(fp);
	}
}
@


11.2
log
@
const RCSid
@
text
@d38 1
a38 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/mac-pix.c,v 11.1 1995/01/04 10:12:07 mike Rel4_4 $ (BRL)";
d183 1
@


11.1
log
@Release_4.4
@
text
@d38 1
a38 1
static char RCSid[] = "@@(#)$Header: /m/cad/util/RCS/mac-pix.c,v 10.2 94/08/23 15:05:41 gdurf Exp $ (BRL)";
@


10.2
log
@Factored ifdefs
@
text
@d38 1
a38 1
static char RCSid[] = "@@(#)$Header: /m/cad/util/RCS/mac-pix.c,v 10.1 1991/10/12 06:48:17 mike Rel4_0 gdurf $ (BRL)";
@


10.1
log
@Release_4.0
@
text
@d38 1
a38 1
static char RCSid[] = "@@(#)$Header: /m/cad/util/RCS/mac-pix.c,v 9.1 89/05/19 06:09:38 mike Rel3_5 $ (BRL)";
d41 2
d45 2
a46 3
extern int	getopt();
extern char	*optarg;
extern int	optind;
@


9.1
log
@Release_3.5
@
text
@d38 1
a38 1
static char RCSid[] = "@@(#)$Header: mac-pix.c,v 8.1 88/10/05 00:42:07 mike Rel3_0 $ (BRL)";
@


8.1
log
@Release_3.0
@
text
@d38 1
a38 1
static char RCSid[] = "@@(#)$Header: mac-pix.c,v 7.3 88/09/02 15:10:32 phil Exp $ (BRL)";
@


7.3
log
@changed -R, -G, -B to -C r/g/b convention
@
text
@d38 1
a38 1
static char RCSid[] = "@@(#)$Header: mac-pix.c,v 7.2 88/08/11 14:25:42 phil Locked $ (BRL)";
@


7.2
log
@*** empty log message ***
@
text
@d38 1
a38 1
static char RCSid[] = "@@(#)$Header: mac-pix.c,v 7.1 87/11/03 00:07:54 mike Rel $ (BRL)";
d79 1
a79 1
	[-R #] [-G #] [-B #] [file.mac]\n";
d86 1
a86 1
	while ( (c = getopt( argc, argv, "clbs:w:n:x:y:X:Y:S:W:N:R:G:B:" )) != EOF )  {
d131 12
a142 8
		case 'R':
		        color[0] = atoi( optarg );
			break;
		case 'G':
		        color[1] = atoi( optarg );
			break;
		case 'B':
		        color[2] = atoi( optarg );
@


7.1
log
@Release 2.3
@
text
@d38 1
a38 1
static char RCSid[] = "@@(#)$Header: mac-pix.c,v 6.1 87/07/11 08:11:10 mike Rel $ (BRL)";
d78 2
a79 1
	[-S squareoutpsize] [-W outp_width] [-N outp_height] [file.mac]\n";
@


6.1
log
@Release 2.0
@
text
@d38 1
a38 1
static char RCSid[] = "@@(#)$Header: mac-pix.c,v 5.1 87/06/24 22:39:19 mike Rel $ (BRL)";
@


5.1
log
@Release 1.24
@
text
@d38 1
a38 1
static char RCSid[] = "@@(#)$Header: mac-pix.c,v 4.3 87/02/13 00:42:29 mike Exp $ (BRL)";
@


4.3
log
@Release 1.20 -- First Formal Release
@
text
@d38 1
a38 1
static char RCSid[] = "@@(#)$Header: mac-pix.c,v 4.2 87/01/13 17:06:08 phil Exp $ (BRL)";
@


4.2
log
@"regularized" argument letters
@
text
@d38 1
a38 1
static char RCSid[] = "@@(#)$Header: mac-pix.c,v 4.1 87/01/09 18:20:25 phil Locked $ (BRL)";
@


4.1
log
@Rel 1.15
@
text
@d38 1
a38 1
static char RCSid[] = "@@(#)$Header: mac-pix.c,v 1.2 87/01/05 08:37:22 mike Locked $ (BRL)";
d75 1
a75 1
Usage: mac-pix [-c -l -B]\n\
d85 1
a85 1
	while ( (c = getopt( argc, argv, "clBs:w:n:x:y:X:Y:S:W:N:r:g:b:" )) != EOF )  {
d92 1
a92 1
		case 'B':
d130 1
a130 1
		case 'r':
d133 1
a133 1
		case 'g':
d136 1
a136 1
		case 'b':
@


1.2
log
@hires output now default, added -c to center.
@
text
@d38 1
a38 1
static char RCSid[] = "@@(#)$Header: pix-fb.c,v 4.1 86/12/29 03:13:20 mike Rel1 $ (BRL)";
@


1.1
log
@Initial revision
@
text
@d65 2
a66 2
int	scr_width = 0;		/* "screen" tracks input file if not given */
int	scr_height = 0;
d75 1
a75 1
Usage: mac-pix [-h -B]\n\
d85 1
a85 1
	while ( (c = getopt( argc, argv, "Bhs:w:n:x:y:X:Y:S:W:N:r:g:b:" )) != EOF )  {
d87 5
d95 3
a97 6
		case 'h':
			/* high-res OUTPUT */
			scr_height = scr_width = 1024;
			/* overloading: also gets it centered */
			scr_xoff = (scr_width-MAC_WIDTH)/2;
			scr_yoff = (scr_height-MAC_HEIGHT)/2;
@
