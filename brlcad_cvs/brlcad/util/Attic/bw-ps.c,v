head	11.11;
access;
symbols
	ansi-20040405-merged:11.7.2.2
	postmerge-20040405-ansi:11.9
	premerge-20040404-ansi:11.8
	postmerge-autoconf:11.8
	autoconf-freeze:11.7.10.2
	premerge-autoconf:11.8
	postmerge-20040315-windows:11.8
	premerge-20040315-windows:11.8
	windows-20040315-freeze:11.7.4.1
	autoconf-20031203:11.7
	autoconf-20031202:11.7
	autoconf-branch:11.7.0.10
	phong-branch:11.7.0.8
	photonmap-branch:11.7.0.6
	rel-6-1-DP:11.7
	windows-branch:11.7.0.4
	rel-6-0-2:11.5
	ansi-branch:11.7.0.2
	rel-6-0-1-branch:11.5.0.2
	hartley-6-0-post:11.6
	hartley-6-0-pre:11.5
	rel-6-0-1:11.5
	rel-6-0:11.5
	rel-5-4:11.3
	offsite-5-3-pre:11.5
	rel-5-3:11.3
	rel-5-2:11.3
	rel-5-1-branch:11.3.0.2
	rel-5-1:11.3
	rel-5-0:11.2
	rel-5-0-beta:11.2
	rel-4-5:11.2
	ctj-4-5-post:11.2
	ctj-4-5-pre:11.2
	rel-4-4:11.1
	rel-4-0:10.1
	rel-3-5:9.1
	rel-3-0:8.1;
locks; strict;
comment	@ * @;


11.11
date	2004.05.21.14.57.33;	author morrison;	state dead;
branches;
next	11.10;

11.10
date	2004.05.10.15.30.50;	author erikg;	state Exp;
branches;
next	11.9;

11.9
date	2004.04.05.05.46.01;	author morrison;	state Exp;
branches;
next	11.8;

11.8
date	2004.02.02.17.39.44;	author morrison;	state Exp;
branches;
next	11.7;

11.7
date	2002.08.20.17.08.54;	author jra;	state Exp;
branches
	11.7.2.1
	11.7.4.1
	11.7.10.1;
next	11.6;

11.6
date	2002.08.15.20.56.07;	author hartley;	state Exp;
branches;
next	11.5;

11.5
date	2000.09.01.03.23.44;	author mike;	state Exp;
branches;
next	11.4;

11.4
date	2000.08.23.19.04.16;	author mike;	state Exp;
branches;
next	11.3;

11.3
date	2000.01.31.16.03.08;	author jra;	state Exp;
branches;
next	11.2;

11.2
date	96.07.16.22.56.03;	author jra;	state Exp;
branches;
next	11.1;

11.1
date	95.01.04.10.11.32;	author mike;	state Rel4_4;
branches;
next	10.3;

10.3
date	94.11.08.04.31.43;	author mike;	state Exp;
branches;
next	10.2;

10.2
date	94.08.23.15.05.30;	author gdurf;	state Exp;
branches;
next	10.1;

10.1
date	91.10.12.06.47.48;	author mike;	state Rel4_0;
branches;
next	9.3;

9.3
date	89.12.29.22.14.15;	author mike;	state Exp;
branches;
next	9.2;

9.2
date	89.08.28.21.37.53;	author phil;	state Exp;
branches;
next	9.1;

9.1
date	89.05.19.06.07.27;	author mike;	state Rel3_5;
branches;
next	8.3;

8.3
date	89.03.06.17.48.26;	author mike;	state Exp;
branches;
next	8.2;

8.2
date	88.12.06.17.01.14;	author phil;	state Exp;
branches;
next	8.1;

8.1
date	88.10.05.00.40.14;	author mike;	state Rel3_0;
branches;
next	1.1;

1.1
date	88.09.27.01.51.39;	author phil;	state Exp;
branches;
next	;

11.7.2.1
date	2002.09.19.18.02.34;	author morrison;	state Exp;
branches;
next	11.7.2.2;

11.7.2.2
date	2004.03.17.21.23.20;	author morrison;	state Exp;
branches;
next	;

11.7.4.1
date	2004.03.11.23.52.28;	author morrison;	state Exp;
branches;
next	;

11.7.10.1
date	2004.02.12.19.43.09;	author erikg;	state Exp;
branches;
next	11.7.10.2;

11.7.10.2
date	2004.03.15.14.08.11;	author erikg;	state Exp;
branches;
next	;


desc
@BW to PostScript image converter
@


11.11
log
@moved to src/util/
@
text
@/*
 *			B W - P S . C
 *
 *  Convert a black and white (bw) file to an 8-bit PostScript image.
 *
 *  Author -
 *	Phillip Dykstra
 *  
 *  Source -
 *	SECAD/VLD Computing Consortium, Bldg 394
 *	The U. S. Army Ballistic Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5066
 *  
 *  Copyright Notice -
 *	This software is Copyright (C) 1986-2004 by the United States Army.
 *	All rights reserved.
 */
#ifndef lint
static const char RCSid[] = "@@(#)$Header: /n/xoff/cvs/brlcad/util/bw-ps.c,v 11.10 2004/05/10 15:30:50 erikg Exp $ (BRL)";
#endif

#ifdef HAVE_CONFIG_H
# include "config.h"
#endif



#include <stdio.h>
#include <math.h>	/* for atof() */
#include <time.h>	/* for ctime() */

#include "machine.h"
#include "externs.h"	/* For getopt */

#define	DEFAULT_SIZE	6.75		/* default output size in inches */
#define	MAX_BYTES	(64*128)	/* max bytes per image chunk */

static int	encapsulated = 0;	/* encapsulated postscript */
static int	center = 0;		/* center output on 8.5 x 11 page */
static int	landscape = 0;		/* landscape mode */

static int	width = 512;		/* input size in pixels */
static int	height = 512;
static double	outwidth;		/* output image size in inches */
static double	outheight;
static int	xpoints;		/* output image size in points */
static int	ypoints;
static int	pagewidth = 612;	/* page size in points - 8.5 inches */
static int	pageheight = 792;	/* 11 inches */

static char	*file_name;
static FILE	*infp;

void prolog(FILE *fp, char *name, int width, int height);
void postlog(FILE *fp);

static char usage[] = "\
Usage: bw-ps [-e] [-c] [-L] [-h]\n\
        [-s input_squaresize] [-w input_width] [-n input_height]\n\
        [-S inches_square] [-W inches_width] [-N inches_height] [file.bw]\n";

int
get_args(int argc, register char **argv)
{
	register int c;

	while ( (c = getopt( argc, argv, "ehcLs:w:n:S:W:N:" )) != EOF )  {
		switch( c )  {
		case 'e':
			/* Encapsulated PostScript */
			encapsulated++;
			break;
		case 'h':
			/* high-res */
			height = width = 1024;
			break;
		case 'c':
			center = 1;
			break;
		case 'L':
			landscape = 1;
			break;
		case 's':
			/* square file size */
			height = width = atoi(optarg);
			break;
		case 'w':
			width = atoi(optarg);
			break;
		case 'n':
			height = atoi(optarg);
			break;
		case 'S':
			/* square file size */
			outheight = outwidth = atof(optarg);
			break;
		case 'W':
			outwidth = atof(optarg);
			break;
		case 'N':
			outheight = atof(optarg);
			break;

		default:		/* '?' */
			return(0);
		}
	}

	if( optind >= argc )  {
		if( isatty(fileno(stdin)) )
			return(0);
		file_name = "[stdin]";
		infp = stdin;
	} else {
		file_name = argv[optind];
		if( (infp = fopen(file_name, "r")) == NULL )  {
			(void)fprintf( stderr,
				"bw-ps: cannot open \"%s\" for reading\n",
				file_name );
			return(0);
		}
		/*fileinput++;*/
	}

	if ( argc > ++optind )
		(void)fprintf( stderr, "bw-ps: excess argument(s) ignored\n" );

	return(1);		/* OK */
}

int
main(int argc, char **argv)
{
	FILE	*ofp = stdout;
	int	num = 0;
	int	scans_per_patch, bytes_per_patch;
	int	y;

	outwidth = outheight = DEFAULT_SIZE;

	if ( !get_args( argc, argv ) )  {
		(void)fputs(usage, stderr);
		exit( 1 );
	}

	if( encapsulated ) {
		xpoints = width;
		ypoints = height;
	} else {
		xpoints = outwidth * 72 + 0.5;
		ypoints = outheight * 72 + 0.5;
	}
	prolog(ofp, file_name, xpoints, ypoints);

	scans_per_patch = MAX_BYTES / width;
	if( scans_per_patch > height )
		scans_per_patch = height;
	bytes_per_patch = scans_per_patch * width;

	for( y = 0; y < height; y += scans_per_patch ) {
		/* start a patch */
		fprintf(ofp, "save\n");
		fprintf(ofp, "%d %d 8 [%d 0 0 %d 0 %d] {<\n ",
			width, scans_per_patch,		/* patch size */
			width, height,			/* total size = 1.0 */
			-y );				/* patch y origin */

		/* data */
		num = 0;
		while( num < bytes_per_patch ) {
			fprintf( ofp, "%02x", getc(infp) );
			if( (++num % 32) == 0 )
				fprintf( ofp, "\n " );
		}

		/* close this patch */
		fprintf(ofp, ">} image\n");
		fprintf(ofp, "restore\n");
	}

	postlog( ofp );
	return 0;
}

void
prolog(FILE *fp, char *name, int width, int height)
    	    
    	      
   	              		/* in points */
{
	time_t	ltime;

	ltime = time(0);

	if( encapsulated ) {
		fputs( "%!PS-Adobe-2.0 EPSF-1.2\n", fp );
		fprintf(fp, "%%%%Title: %s\n", name );
		fputs( "%%Creator: BRL-CAD bw-ps\n", fp );
		fprintf(fp, "%%%%CreationDate: %s", ctime(&ltime) );
		fputs( "%%Pages: 0\n", fp );
	} else {
		fputs( "%!PS-Adobe-1.0\n", fp );
		fputs( "%begin(plot)\n", fp );
		fprintf(fp, "%%%%Title: %s\n", name );
		fputs( "%%Creator: BRL-CAD bw-ps\n", fp );
		fprintf(fp, "%%%%CreationDate: %s", ctime(&ltime) );
	}
	fprintf(fp, "%%%%BoundingBox: 0 0 %d %d\n", width, height );
	fputs( "%%EndComments\n\n", fp );

	if( !encapsulated && landscape ) {
		int	tmp;
		tmp = pagewidth;
		pagewidth = pageheight;
		pageheight = tmp;
		fprintf( fp, "90 rotate\n" );
		fprintf( fp, "0 -%d translate\n", pageheight );
	}
	if( !encapsulated && center ) {
		int	xtrans, ytrans;
		xtrans = (pagewidth - width)/2.0;
		ytrans = (pageheight - height)/2.0;
		fprintf( fp, "%d %d translate\n", xtrans, ytrans );
	}
	fprintf( fp, "%d %d scale\n\n", width, height );
}

void
postlog(FILE *fp)
{
	if( !encapsulated )
		fputs( "%end(plot)\n", fp );

	fputs( "\nshowpage\n", fp );
}
@


11.10
log
@change conf.h to a wrapped config.h
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/util/bw-ps.c,v 11.9 2004/04/05 05:46:01 morrison Exp $ (BRL)";
@


11.9
log
@merge of ansi-6-0-branch into head
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
d22 5
a26 1
#include "conf.h"
@


11.8
log
@update copyright to include span through 2003
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/bw-ps.c,v 11.7 2002/08/20 17:08:54 jra Exp $ (BRL)";
d50 2
a51 2
void prolog();
void postlog();
d59 1
a59 2
get_args( argc, argv )
register char **argv;
d128 1
a128 3
main( argc, argv )
int	argc;
char	**argv;
d182 4
a185 4
prolog( fp, name, width, height )
FILE	*fp;
char	*name;
int	width, height;		/* in points */
d225 1
a225 2
postlog( fp )
FILE	*fp;
@


11.7
log
@Restoration of entire source tree to Pre-Hartley state
@
text
@d15 1
a15 1
 *	This software is Copyright (C) 1986 by the United States Army.
d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/bw-ps.c,v 11.5 2000/09/01 03:23:44 mike Exp $ (BRL)";
@


11.7.4.1
log
@sync to HEAD...
@
text
@d15 1
a15 1
 *	This software is Copyright (C) 1986-2004 by the United States Army.
d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /n/cad/c/CVS/brlcad/util/bw-ps.c,v 11.8 2004/02/02 17:39:44 morrison Exp $ (BRL)";
@


11.7.10.1
log
@merge from HEAD
@
text
@d15 1
a15 1
 *	This software is Copyright (C) 1986-2004 by the United States Army.
d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/bw-ps.c,v 11.8 2004/02/02 17:39:44 morrison Exp $ (BRL)";
@


11.7.10.2
log
@merge from head
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/bw-ps.c,v 11.7.10.1 2004/02/12 19:43:09 erikg Exp $ (BRL)";
@


11.7.2.1
log
@Initial ANSIfication
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/bw-ps.c,v 11.7 2002/08/20 17:08:54 jra Exp $ (BRL)";
d50 2
a51 2
void prolog(FILE *fp, char *name, int width, int height);
void postlog(FILE *fp);
d59 2
a60 1
get_args(int argc, register char **argv)
d129 3
a131 1
main(int argc, char **argv)
d185 4
a188 4
prolog(FILE *fp, char *name, int width, int height)
    	    
    	      
   	              		/* in points */
d228 2
a229 1
postlog(FILE *fp)
@


11.7.2.2
log
@sync branch with HEAD
@
text
@d15 1
a15 1
 *	This software is Copyright (C) 1986-2004 by the United States Army.
d19 1
a19 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
@


11.6
log
@Converted from K&R to ANSI C - RFH
@
text
@d50 2
a51 2
void prolog(FILE *fp, char *name, int width, int height);
void postlog(FILE *fp);
d59 2
a60 1
get_args(int argc, register char **argv)
d129 3
a131 1
main(int argc, char **argv)
d185 4
a188 4
prolog(FILE *fp, char *name, int width, int height)
    	    
    	      
   	              		/* in points */
d228 2
a229 1
postlog(FILE *fp)
@


11.5
log
@
Lint fix
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/bw-ps.c,v 11.4 2000/08/23 19:04:16 mike Exp $ (BRL)";
d50 2
a51 2
void prolog();
void postlog();
d59 1
a59 2
get_args( argc, argv )
register char **argv;
d128 1
a128 3
main( argc, argv )
int	argc;
char	**argv;
d182 4
a185 4
prolog( fp, name, width, height )
FILE	*fp;
char	*name;
int	width, height;		/* in points */
d225 1
a225 2
postlog( fp )
FILE	*fp;
@


11.4
log
@
const RCSid
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/bw-ps.c,v 11.3 2000/01/31 16:03:08 jra Exp $ (BRL)";
d58 1
d128 1
d181 1
@


11.3
log
@Eliminated some unused variables
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/util/bw-ps.c,v 11.2 1996/07/16 22:56:03 jra Exp $ (BRL)";
@


11.2
log
@Minor mods for IRIX 6.2
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/util/RCS/bw-ps.c,v 11.1 1995/01/04 10:11:32 mike Rel4_4 jra $ (BRL)";
a34 1
static int	inverse = 0;		/* inverse video (RFU) */
d63 1
a63 1
	while ( (c = getopt( argc, argv, "ehicLs:w:n:S:W:N:" )) != EOF )  {
a71 3
			break;
		case 'i':
			inverse = 1;
@


11.1
log
@Release_4.4
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/util/RCS/bw-ps.c,v 10.3 94/11/08 04:31:43 mike Exp $ (BRL)";
d51 3
d185 1
d228 1
@


10.3
log
@Irix 6
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/util/RCS/bw-ps.c,v 10.2 94/08/23 15:05:30 gdurf Exp Locker: mike $ (BRL)";
@


10.2
log
@Factored ifdefs
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/util/RCS/bw-ps.c,v 10.1 1991/10/12 06:47:48 mike Rel4_0 gdurf $ (BRL)";
d187 1
a187 1
	long	ltime;
@


10.1
log
@Release_4.0
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/util/RCS/bw-ps.c,v 9.3 89/12/29 22:14:15 mike Exp $ (BRL)";
d22 2
d27 3
a29 1
#include "externs.h"
a32 4

extern int	getopt();
extern char	*optarg;
extern int	optind;
@


9.3
log
@Added "externs.h" for atof().
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: bw-ps.c,v 9.2 89/08/28 21:37:53 mike Locked $ (BRL)";
@


9.2
log
@Added a -L landscape flag.  Always output a showpage (Adobe spec
says encapsulated can also include one).
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: bw-ps.c,v 9.1 89/05/19 06:07:27 phil Locked $ (BRL)";
d25 1
@


9.1
log
@Release_3.5
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: bw-ps.c,v 8.3 89/03/06 17:48:26 mike Exp $ (BRL)";
d34 3
a36 2
static int	inverse = 0;	/* inverse video (RFU) */
static int	center = 0;	/* center output on 8.5 x 11 page */
d38 1
a38 1
static int	width = 512;	/* input size in pixels */
d40 1
a40 1
static double	outwidth;	/* output image size in inches */
d42 1
a42 1
static int	xpoints;	/* output image size in points */
d44 2
d51 3
a53 2
Usage: bw-ps [-e] [-c] [-h] [-s squareinsize] [-w in_width] [-n in_height]\n\
        [-S inches_square] [-W width_inches] [-N height_inches] [file.bw]\n";
d60 1
a60 1
	while ( (c = getopt( argc, argv, "ehics:w:n:S:W:N:" )) != EOF )  {
d76 3
d192 2
a193 1
		fputs( "%%Creator: bw-ps\n", fp );
a194 1
		fprintf(fp, "%%%%Title: %s\n", name );
a198 1
		/*fputs( "%%DocumentFonts:  Courier\n", fp );*/
d200 1
a200 1
		fputs( "%%Creator: bw-ps\n", fp );
d206 9
a214 1
	if( center ) {
d216 2
a217 2
		xtrans = (8.5*72 - width)/2.0;
		ytrans = (11*72 - height)/2.0;
d228 2
a229 2
	if( center )
		fputs( "\nshowpage\n", fp );	/*XXX*/
@


8.3
log
@ansii found minor error
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: bw-ps.c,v 8.2 88/12/06 17:01:14 mike Locked $ (BRL)";
@


8.2
log
@added encapsulated postscript option
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: bw-ps.c,v 8.1 88/10/05 00:40:14 mike Rel3_0 $ (BRL)";
d105 1
a105 1
		if( (infp = fopen(file_name, "r")) < 0 )  {
@


8.1
log
@Release_3.0
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: bw-ps.c,v 1.1 88/09/27 01:51:39 phil Exp $ (BRL)";
d24 1
d33 1
d48 1
a48 1
Usage: bw-ps [-c] [-h] [-s squareinsize] [-w in_width] [-n in_height]\n\
d56 1
a56 1
	while ( (c = getopt( argc, argv, "hics:w:n:S:W:N:" )) != EOF )  {
d58 4
a134 2
	xpoints = outwidth * 72 + 0.5;
	ypoints = outheight * 72 + 0.5;
d136 9
a149 2
	prolog(ofp, file_name, xpoints, ypoints);

d179 18
a196 5
	fputs( "%!PS-Adobe-1.0\n", fp );
	fputs( "%begin(plot)\n", fp );
	/*fputs( "%%DocumentFonts:  Courier\n", fp );*/
	fprintf(fp, "%%%%Title: %s\n", name );
	fputs( "%%Creator: bw-ps.c\n", fp );
d212 2
a213 1
	fputs( "%end(plot)\n", fp );
@


1.1
log
@Initial revision
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: bw-ps.c,v 7.3 88/09/26 22:59:07 phil Exp $ (BRL)";
@
