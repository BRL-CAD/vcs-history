head	1.15;
access;
symbols
	ansi-20040405-merged:1.11.2.3
	postmerge-20040405-ansi:1.13
	premerge-20040404-ansi:1.12
	postmerge-autoconf:1.12
	autoconf-freeze:1.11.10.2
	premerge-autoconf:1.12
	ansi-20040316-freeze:1.11.2.1
	postmerge-20040315-windows:1.12
	premerge-20040315-windows:1.12
	windows-20040315-freeze:1.11.4.1
	autoconf-20031203:1.11
	autoconf-20031202:1.11
	autoconf-branch:1.11.0.10
	phong-branch:1.11.0.8
	photonmap-branch:1.11.0.6
	rel-6-1-DP:1.11
	windows-branch:1.11.0.4
	rel-6-0-2:1.9
	ansi-branch:1.11.0.2
	rel-6-0-1-branch:1.9.0.2
	hartley-6-0-post:1.10
	hartley-6-0-pre:1.9
	rel-6-0-1:1.9
	rel-6-0:1.9
	rel-5-4:1.6
	offsite-5-3-pre:1.8
	rel-5-3:1.6
	rel-5-2:1.6
	rel-5-1-branch:1.6.0.2
	rel-5-1:1.6
	rel-5-0:1.5
	rel-5-0-beta:1.3
	rel-4-5:1.3
	ctj-4-5-post:1.3
	ctj-4-5-pre:1.3;
locks; strict;
comment	@ * @;


1.15
date	2004.05.21.18.06.23;	author morrison;	state dead;
branches;
next	1.14;

1.14
date	2004.05.10.15.30.44;	author erikg;	state Exp;
branches;
next	1.13;

1.13
date	2004.04.05.07.46.16;	author morrison;	state Exp;
branches;
next	1.12;

1.12
date	2004.02.02.17.39.07;	author morrison;	state Exp;
branches;
next	1.11;

1.11
date	2002.08.20.17.07.38;	author jra;	state Exp;
branches
	1.11.2.1
	1.11.4.1
	1.11.10.1;
next	1.10;

1.10
date	2002.08.15.20.54.50;	author hartley;	state Exp;
branches;
next	1.9;

1.9
date	2001.04.20.22.29.05;	author morrison;	state Exp;
branches;
next	1.8;

1.8
date	2000.07.07.05.21.20;	author cjohnson;	state Exp;
branches;
next	1.7;

1.7
date	2000.07.07.00.37.34;	author cjohnson;	state Exp;
branches;
next	1.6;

1.6
date	2000.03.28.18.55.06;	author mike;	state Exp;
branches;
next	1.5;

1.5
date	99.06.03.01.12.15;	author mike;	state Exp;
branches;
next	1.4;

1.4
date	99.06.03.01.05.39;	author mike;	state Exp;
branches;
next	1.3;

1.3
date	95.07.18.02.52.22;	author mike;	state Exp;
branches;
next	1.2;

1.2
date	95.07.18.02.48.39;	author mike;	state Exp;
branches;
next	1.1;

1.1
date	95.06.30.18.12.24;	author pjt;	state Exp;
branches;
next	;

1.11.2.1
date	2002.09.19.18.01.11;	author morrison;	state Exp;
branches;
next	1.11.2.2;

1.11.2.2
date	2004.03.17.21.16.48;	author morrison;	state Exp;
branches;
next	1.11.2.3;

1.11.2.3
date	2004.04.05.00.50.06;	author morrison;	state Exp;
branches;
next	;

1.11.4.1
date	2004.03.11.23.41.48;	author morrison;	state Exp;
branches;
next	;

1.11.10.1
date	2004.02.12.18.39.18;	author erikg;	state Exp;
branches;
next	1.11.10.2;

1.11.10.2
date	2004.03.15.14.06.17;	author erikg;	state Exp;
branches;
next	;


desc
@     Look up (in a file) the association for a specified value
@


1.15
log
@moved to src/
@
text
@/*
 *			A S S O C I A T I O N . C
 *
 *  Author -
 *	Paul Tanenbaum
 *  
 *  Source -
 *	The U. S. Army Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5068  USA
 *  
 *  Distribution Notice -
 *	Re-distribution of this software is restricted, as described in
 *	your "Statement of Terms and Conditions for the Release of
 *	The BRL-CAD Package" agreement.
 *
 *  Copyright Notice -
 *	This software is Copyright (C) 1995-2004 by the United States Army
 *	in all countries except the USA.  All rights reserved.
 */
#ifndef lint
static const char libbu_association_RCSid[] = "@@(#)$Header: /n/xoff/cvs/brlcad/libbu/association.c,v 1.14 2004/05/10 15:30:44 erikg Exp $ (ARL)";
#endif

#ifdef HAVE_CONFIG_H
# include "config.h"
#endif



#include <stdio.h>
#include <math.h>
#if HAVE_STRING_H
#include <string.h>
#endif
#include "machine.h"
#include "externs.h"
#include "bu.h"

/*
 *			 B U _ A S S O C I A T I O N
 *
 *	    Look up the association for a specified value
 *
 *	This function reads the specified file, searches for the
 *	first line of the form
 *
 *		    <value><field_sep>...
 *
 *	and returns the rest of the line beyond the field separator.
 */
struct bu_vls *bu_association (const char *fname, const char *value, int field_sep)
{
    char		*cp;
    FILE		*fp;
    size_t		len;
    struct bu_vls	*vp = 0;
    struct bu_vls	buffer;

	/* XXX NONPARALLEL */
	/* I'd prefer using "bu_open_mapped_file()" here instead, I think  -Mike */
    if ((fp = fopen(fname, "r")) == NULL)
    {
	/*	XXX
	 *	Should we be exiting here?
	 *	I don't want to just return 0,
	 *	because the application probably needs to distinguish
	 *	between ERROR_PERFORMING_THE_LOOKUP
	 *	and VALUE_NOT_FOUND.
	 */
	bu_log("bu_association:  Cannot open association file '%s'\n", fname);
	exit (1);
    }

    bu_vls_init(&buffer);
    len = strlen(value);

    do
    {
	bu_vls_trunc(&buffer, 0);
	if (bu_vls_gets(&buffer, fp) == -1)
	    goto wrap_up;
	cp = bu_vls_addr(&buffer);

    } while ((*cp != *value) || (*(cp + len) != field_sep)
	  || (strncmp(cp, value, len) != 0));

    vp = (struct bu_vls *)
	    bu_malloc(sizeof(struct bu_vls), "value of bu_association");
    bu_vls_init(vp);
    bu_vls_strcpy(vp, cp + len + 1);

wrap_up:
    bu_vls_trunc(&buffer, 0);
    fclose(fp);
    return (vp);
}
@


1.14
log
@change conf.h to a wrapped config.h
@
text
@d21 1
a21 1
static const char libbu_association_RCSid[] = "@@(#)$Header: /cvs/brlcad/libbu/association.c,v 1.13 2004/04/05 07:46:16 morrison Exp $ (ARL)";
@


1.13
log
@merge of ansi-6-0-branch into HEAD
@
text
@d21 1
a21 1
static const char libbu_association_RCSid[] = "@@(#)$Header$ (ARL)";
d24 5
a28 1
#include "conf.h"
@


1.12
log
@update copyright to include span through 2003
@
text
@d21 1
a21 1
static const char libbu_association_RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libbu/association.c,v 1.11 2002/08/20 17:07:38 jra Exp $ (ARL)";
d47 1
a47 6
struct bu_vls *bu_association (fname, value, field_sep)

const char	*fname;
const char	*value;
int	field_sep;

d51 1
a51 1
    int			len;
@


1.11
log
@Restoration of entire source tree to Pre-Hartley state
@
text
@d17 1
a17 1
 *	This software is Copyright (C) 1995 by the United States Army
d21 1
a21 1
static const char libbu_association_RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libbu/association.c,v 1.9 2001/04/20 22:29:05 morrison Exp $ (ARL)";
@


1.11.4.1
log
@sync to HEAD...
@
text
@d17 1
a17 1
 *	This software is Copyright (C) 1995-2004 by the United States Army
d21 1
a21 1
static const char libbu_association_RCSid[] = "@@(#)$Header: /n/cad/c/CVS/brlcad/libbu/association.c,v 1.12 2004/02/02 17:39:07 morrison Exp $ (ARL)";
@


1.11.10.1
log
@merge from HEAD
@
text
@d17 1
a17 1
 *	This software is Copyright (C) 1995-2004 by the United States Army
d21 1
a21 1
static const char libbu_association_RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libbu/association.c,v 1.12 2004/02/02 17:39:07 morrison Exp $ (ARL)";
@


1.11.10.2
log
@merge from head
@
text
@d21 1
a21 1
static const char libbu_association_RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libbu/association.c,v 1.11.10.1 2004/02/12 18:39:18 erikg Exp $ (ARL)";
@


1.11.2.1
log
@Initial ANSIfication
@
text
@d21 1
a21 1
static const char libbu_association_RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libbu/association.c,v 1.11 2002/08/20 17:07:38 jra Exp $ (ARL)";
d47 6
a52 1
struct bu_vls *bu_association (const char *fname, const char *value, int field_sep)
@


1.11.2.2
log
@sync branch with HEAD
@
text
@d17 1
a17 1
 *	This software is Copyright (C) 1995-2004 by the United States Army
d21 1
a21 1
static const char libbu_association_RCSid[] = "@@(#)$Header$ (ARL)";
@


1.11.2.3
log
@more quelling of lots of warnings
@
text
@d21 1
a21 1
static const char libbu_association_RCSid[] = "@@(#)$Header: /n/cad/c/CVS/brlcad/libbu/association.c,v 1.11.2.2 2004/03/17 21:16:48 morrison Exp $ (ARL)";
d51 1
a51 1
    size_t		len;
@


1.10
log
@Converted from K&R to ANSI C - RFH
@
text
@d47 6
a52 1
struct bu_vls *bu_association (const char *fname, const char *value, int field_sep)
@


1.9
log
@CONST to const
@
text
@d21 1
a21 1
static const char libbu_association_RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libbu/association.c,v 1.8 2000/07/07 05:21:20 cjohnson Exp $ (ARL)";
d47 1
a47 6
struct bu_vls *bu_association (fname, value, field_sep)

const char	*fname;
const char	*value;
int	field_sep;

@


1.8
log
@LINT plus minor bug fix in bu_tcl.c
@
text
@d21 1
a21 1
static const char libbu_association_RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libbu/association.c,v 1.7 2000/07/07 00:37:34 cjohnson Exp $ (ARL)";
d49 2
a50 2
CONST char	*fname;
CONST char	*value;
@


1.7
log
@LINT
@
text
@d21 1
a21 1
static char libbu_association_RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libbu/association.c,v 1.6 2000/03/28 18:55:06 mike Exp $ (ARL)";
@


1.6
log
@
Put libbu_filename_ prefixes on RCSid variables.
@
text
@d21 1
a21 1
static char libbu_association_RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libbu/association.c,v 1.5 1999/06/03 01:12:15 mike Exp $ (ARL)";
d28 3
@


1.5
log
@
rt_assoc became bu_association.  Nobody uses it.
@
text
@d21 1
a21 1
static char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libbu/association.c,v 1.4 1999/06/03 01:05:39 mike Exp $ (ARL)";
@


1.4
log
@
sed4
@
text
@d1 2
a2 1
/*		R T A S S O C . C
d21 1
a21 1
static char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/librt/rtassoc.c,v 1.3 1995/07/18 02:52:22 mike Exp $ (ARL)";
d30 1
a30 3
#include "vmath.h"
#include "rtstring.h"
#include "raytrace.h"
d33 1
a33 1
 *			 R T _ A S S O C ( )
d44 1
a44 1
struct bu_vls *rt_assoc (fname, value, field_sep)
d46 2
a47 2
char	*fname;
char	*value;
d68 1
a68 1
	bu_log("rt_assoc:  Cannot open association file '%s'\n", fname);
d86 1
a86 1
	    bu_malloc(sizeof(struct bu_vls), "value of rt_assoc");
d92 1
@


1.3
log
@Logged some reservations.
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: /m/cad/librt/RCS/rtassoc.c,v 1.2 1995/07/18 02:48:39 mike Exp mike $ (ARL)";
d45 1
a45 1
struct rt_vls *rt_assoc (fname, value, field_sep)
d55 2
a56 2
    struct rt_vls	*vp = 0;
    struct rt_vls	buffer;
d59 1
a59 1
	/* I'd prefer using "rt_open_mapped_file()" here instead, I think  -Mike */
d69 1
a69 1
	rt_log("rt_assoc:  Cannot open association file '%s'\n", fname);
d73 1
a73 1
    rt_vls_init(&buffer);
d78 2
a79 2
	rt_vls_trunc(&buffer, 0);
	if (rt_vls_gets(&buffer, fp) == -1)
d81 1
a81 1
	cp = rt_vls_addr(&buffer);
d86 4
a89 4
    vp = (struct rt_vls *)
	    rt_malloc(sizeof(struct rt_vls), "value of rt_assoc");
    rt_vls_init(vp);
    rt_vls_strcpy(vp, cp + len + 1);
d92 1
a92 1
    rt_vls_trunc(&buffer, 0);
@


1.2
log
@ANSI C doesn't like 'char' arguments to functions.
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: /m/cad/librt/RCS/rtassoc.c,v 1.1 1995/06/30 18:12:24 pjt Exp mike $ (ARL)";
d58 2
@


1.1
log
@Initial revision
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header$ (ARL)";
d49 1
a49 1
char	field_sep;
@
