head	11.11;
access;
symbols
	ansi-20040405-merged:11.8.2.1
	postmerge-20040405-ansi:11.9
	premerge-20040404-ansi:11.8
	postmerge-autoconf:11.8
	autoconf-freeze:11.8
	premerge-autoconf:11.8
	ansi-20040316-freeze:11.8.2.1
	postmerge-20040315-windows:11.8
	premerge-20040315-windows:11.8
	windows-20040315-freeze:11.8
	autoconf-20031203:11.8
	autoconf-20031202:11.8
	autoconf-branch:11.8.0.10
	phong-branch:11.8.0.8
	photonmap-branch:11.8.0.6
	rel-6-1-DP:11.8
	windows-branch:11.8.0.4
	rel-6-0-2:11.6
	ansi-branch:11.8.0.2
	rel-6-0-1-branch:11.6.0.2
	hartley-6-0-post:11.7
	hartley-6-0-pre:11.6
	rel-6-0-1:11.6
	rel-6-0:11.6
	offsite-5-3-pre:11.4;
locks; strict;
comment	@ * @;


11.11
date	2004.05.21.18.06.24;	author morrison;	state dead;
branches;
next	11.10;

11.10
date	2004.05.10.15.30.44;	author erikg;	state Exp;
branches;
next	11.9;

11.9
date	2004.04.05.07.46.16;	author morrison;	state Exp;
branches;
next	11.8;

11.8
date	2002.08.20.17.07.40;	author jra;	state Exp;
branches
	11.8.2.1;
next	11.7;

11.7
date	2002.08.15.20.54.53;	author hartley;	state Exp;
branches;
next	11.6;

11.6
date	2001.10.17.07.40.02;	author morrison;	state Exp;
branches;
next	11.5;

11.5
date	2001.04.20.22.29.06;	author morrison;	state Exp;
branches;
next	11.4;

11.4
date	2000.09.07.19.42.29;	author butler;	state Exp;
branches;
next	11.3;

11.3
date	2000.09.07.18.01.20;	author butler;	state Exp;
branches;
next	11.2;

11.2
date	2000.07.07.05.21.21;	author cjohnson;	state Exp;
branches;
next	11.1;

11.1
date	2000.06.29.20.47.54;	author mike;	state Exp;
branches;
next	;

11.8.2.1
date	2002.09.19.18.01.12;	author morrison;	state Exp;
branches;
next	;


desc
@@


11.11
log
@moved to src/
@
text
@/*
 *			H T O N F . C
 *
 *  Author -
 *	Michael John Muuss
 *  
 *  Source -
 *	SECAD/VLD Computing Consortium, Bldg 394
 *	The U. S. Army Ballistic Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5066
 *  
 *  Release Status -
 *	Public Domain, Distribution Unlimited
 */
#ifndef lint
static const char libbu_htond_RCSid[] = "@@(#)$Header: /n/xoff/cvs/brlcad/libbu/htonf.c,v 11.10 2004/05/10 15:30:44 erikg Exp $ (BRL)";
#endif

#ifdef HAVE_CONFIG_H
# include "config.h"
#endif


#include <stdio.h>
#include "machine.h"
#include "bu.h"

#ifdef HAVE_MEMORY_H
#  include <memory.h>
#endif
#include <stdio.h>

/*
 *			H T O N F
 *
 *  Host to Network Floats
 */
void
htonf(register unsigned char *out, register const unsigned char *in, int count)
{
#if	defined(NATURAL_IEEE)
	/*
	 *  First, the case where the system already operates in
	 *  IEEE format internally, using big-endian order.
	 *  These are the lucky ones.
	 */
#	ifdef HAVE_MEMORY_H
		memcpy( out, in, count*SIZEOF_NETWORK_FLOAT );
#	else
		bcopy( in, out, count*SIZEOF_NETWORK_FLOAT );
#	endif
	return;
#	define	HTONF	yes1
#endif

#if	defined(REVERSED_IEEE)
	/* This machine uses IEEE, but in little-endian byte order */
	register int	i;
	for( i=count-1; i >= 0; i-- )  {
		*out++ = in[3];
		*out++ = in[2];
		*out++ = in[1];
		*out++ = in[0];
		in += SIZEOF_NETWORK_FLOAT;
	}
	return;
#	define	HTONF	yes2
#endif

	/* Now, for the machine-specific stuff. */

#ifndef HTONF
# include "ntohf.c:  ERROR, no NtoHD conversion for this machine type"
#endif
}


/*
 *			N T O H F
 *
 *  Network to Host Floats
 */
void
ntohf(register unsigned char *out, register const unsigned char *in, int count)
{
#ifdef NATURAL_IEEE
	/*
	 *  First, the case where the system already operates in
	 *  IEEE format internally, using big-endian order.
	 *  These are the lucky ones.
	 */
	if( sizeof(float) != SIZEOF_NETWORK_FLOAT )
		bu_bomb("ntohf:  sizeof(float) != SIZEOF_NETWORK_FLOAT\n");
#	ifdef HAVE_MEMORY_H
		memcpy( out, in, count*SIZEOF_NETWORK_FLOAT );
#	else
		bcopy( in, out, count*SIZEOF_NETWORK_FLOAT );
#	endif
	return;
#	define	NTOHF	yes1
#endif
#if	defined(REVERSED_IEEE)
	/* This machine uses IEEE, but in little-endian byte order */
	register int	i;
	for( i=count-1; i >= 0; i-- )  {
		*out++ = in[3];
		*out++ = in[2];
		*out++ = in[1];
		*out++ = in[0];
		in += SIZEOF_NETWORK_FLOAT;
	}
	return;
#	define	NTOHF	yes2
#endif

#ifndef NTOHF
# include "ntohf.c:  ERROR, no NtoHD conversion for this machine type"
#endif
}
@


11.10
log
@change conf.h to a wrapped config.h
@
text
@d16 1
a16 1
static const char libbu_htond_RCSid[] = "@@(#)$Header: /cvs/brlcad/libbu/htonf.c,v 11.9 2004/04/05 07:46:16 morrison Exp $ (BRL)";
@


11.9
log
@merge of ansi-6-0-branch into HEAD
@
text
@d16 1
a16 1
static const char libbu_htond_RCSid[] = "@@(#)$Header$ (BRL)";
d19 5
a23 1
#include "conf.h"
@


11.8
log
@Restoration of entire source tree to Pre-Hartley state
@
text
@d16 1
a16 1
static const char libbu_htond_RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libbu/htonf.c,v 11.6 2001/10/17 07:40:02 morrison Exp $ (BRL)";
d35 1
a35 4
htonf( out, in, count )
register unsigned char	*out;
register const unsigned char	*in;
int			count;
d80 1
a80 4
ntohf( out, in, count )
register unsigned char	*out;
register const unsigned char	*in;
int			count;
@


11.8.2.1
log
@Initial ANSIfication
@
text
@d16 1
a16 1
static const char libbu_htond_RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libbu/htonf.c,v 11.8 2002/08/20 17:07:40 jra Exp $ (BRL)";
d35 4
a38 1
htonf(register unsigned char *out, register const unsigned char *in, int count)
d83 4
a86 1
ntohf(register unsigned char *out, register const unsigned char *in, int count)
@


11.7
log
@Converted from K&R to ANSI C - RFH
@
text
@d35 4
a38 1
htonf(register unsigned char *out, register const unsigned char *in, int count)
d83 4
a86 1
ntohf(register unsigned char *out, register const unsigned char *in, int count)
@


11.6
log
@Mac OS X warning and error fixes for non-production build
@
text
@d16 1
a16 1
static const char libbu_htond_RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libbu/htonf.c,v 11.5 2001/04/20 22:29:06 morrison Exp $ (BRL)";
d35 1
a35 4
htonf( out, in, count )
register unsigned char	*out;
register const unsigned char	*in;
int			count;
d80 1
a80 4
ntohf( out, in, count )
register unsigned char	*out;
register const unsigned char	*in;
int			count;
@


11.5
log
@CONST to const
@
text
@d16 1
a16 1
static const char libbu_htond_RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libbu/htonf.c,v 11.4 2000/09/07 19:42:29 butler Exp $ (BRL)";
d24 3
d46 3
a48 1
#	if BSD
a49 2
#	else
		memcpy( out, in, count*SIZEOF_NETWORK_FLOAT );
d96 3
a98 1
#	if BSD
a99 2
#	else
		memcpy( out, in, count*SIZEOF_NETWORK_FLOAT );
@


11.4
log
@More enhancements to the compilation of these two key functions
@
text
@d16 1
a16 1
static const char libbu_htond_RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libbu/htonf.c,v 11.3 2000/09/07 18:01:20 butler Exp $ (BRL)";
d34 1
a34 1
register CONST unsigned char	*in;
d82 1
a82 1
register CONST unsigned char	*in;
@


11.3
log
@REVERSED_IEEE machines were calling bu_bomb after correctly reading the data.
Inserted retrun statement to cause it to mimic NATURAL_IEEE function
behaviour.
@
text
@d16 1
a16 1
static const char libbu_htond_RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libbu/htonf.c,v 11.2 2000/07/07 05:21:21 cjohnson Exp $ (BRL)";
d68 3
a70 1
	bu_bomb("htonf() not yet supported on this architecture\n");
d99 1
a99 1
#	define	NTOHD	yes1
d112 1
a112 1
#	define	NTOHD	yes2
d115 3
a117 1
	bu_bomb("ntohf() not yet supported on this architecture\n");
@


11.2
log
@LINT plus minor bug fix in bu_tcl.c
@
text
@d16 1
a16 1
static const char libbu_htond_RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libbu/htonf.c,v 11.1 2000/06/29 20:47:54 mike Exp $ (BRL)";
d51 1
d62 1
d109 1
@


11.1
log
@
Added SIZEOF_NETWORK_FLOAT, htonf(), ntohf().
@
text
@d16 1
a16 1
static char libbu_htond_RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libbu/htond.c,v 11.3 2000/03/28 18:55:07 mike Exp $ (BRL)";
@

