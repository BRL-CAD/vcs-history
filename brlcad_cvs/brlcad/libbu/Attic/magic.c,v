head	1.24;
access;
symbols
	ansi-20040405-merged:1.21.2.1
	postmerge-20040405-ansi:1.22
	premerge-20040404-ansi:1.21
	postmerge-autoconf:1.21
	autoconf-freeze:1.21
	premerge-autoconf:1.21
	ansi-20040316-freeze:1.21.2.1
	postmerge-20040315-windows:1.21
	premerge-20040315-windows:1.21
	windows-20040315-freeze:1.21
	autoconf-20031203:1.21
	autoconf-20031202:1.21
	autoconf-branch:1.21.0.10
	phong-branch:1.21.0.8
	photonmap-branch:1.21.0.6
	rel-6-1-DP:1.21
	windows-branch:1.21.0.4
	rel-6-0-2:1.19
	ansi-branch:1.21.0.2
	rel-6-0-1-branch:1.19.0.2
	hartley-6-0-post:1.20
	hartley-6-0-pre:1.19
	rel-6-0-1:1.19
	rel-6-0:1.19
	rel-5-4:1.14
	offsite-5-3-pre:1.18
	rel-5-3:1.14
	rel-5-2:1.14
	rel-5-1-branch:1.14.0.2
	rel-5-1:1.14
	rel-5-0:1.10
	rel-5-0-beta:1.9
	rel-4-5:1.4
	ctj-4-5-post:1.4
	ctj-4-5-pre:1.4;
locks; strict;
comment	@ * @;


1.24
date	2004.05.21.18.06.24;	author morrison;	state dead;
branches;
next	1.23;

1.23
date	2004.05.10.15.30.44;	author erikg;	state Exp;
branches;
next	1.22;

1.22
date	2004.04.05.07.46.16;	author morrison;	state Exp;
branches;
next	1.21;

1.21
date	2002.08.20.17.07.41;	author jra;	state Exp;
branches
	1.21.2.1;
next	1.20;

1.20
date	2002.08.15.20.54.53;	author hartley;	state Exp;
branches;
next	1.19;

1.19
date	2001.04.20.22.29.06;	author morrison;	state Exp;
branches;
next	1.18;

1.18
date	2000.11.19.16.28.29;	author butler;	state Exp;
branches;
next	1.17;

1.17
date	2000.10.30.21.28.07;	author mike;	state Exp;
branches;
next	1.16;

1.16
date	2000.07.07.05.21.21;	author cjohnson;	state Exp;
branches;
next	1.15;

1.15
date	2000.06.29.14.26.09;	author mike;	state Exp;
branches;
next	1.14;

1.14
date	2000.05.24.00.01.46;	author mike;	state Exp;
branches;
next	1.13;

1.13
date	2000.04.12.18.11.42;	author mike;	state Exp;
branches;
next	1.12;

1.12
date	99.11.17.04.46.54;	author mike;	state Exp;
branches;
next	1.11;

1.11
date	99.10.30.04.11.40;	author mike;	state Exp;
branches;
next	1.10;

1.10
date	99.07.02.19.05.57;	author mike;	state Exp;
branches;
next	1.9;

1.9
date	99.05.27.21.20.59;	author mike;	state Exp;
branches;
next	1.8;

1.8
date	98.12.30.01.26.25;	author mike;	state Exp;
branches;
next	1.7;

1.7
date	98.12.11.21.15.29;	author mike;	state Exp;
branches;
next	1.6;

1.6
date	98.09.30.03.46.00;	author mike;	state Exp;
branches;
next	1.5;

1.5
date	98.06.22.13.37.16;	author pjt;	state Exp;
branches;
next	1.4;

1.4
date	96.10.02.23.48.24;	author mike;	state Exp;
branches;
next	1.3;

1.3
date	96.08.31.10.42.00;	author mike;	state Exp;
branches;
next	1.2;

1.2
date	96.08.28.09.50.46;	author mike;	state Exp;
branches;
next	1.1;

1.1
date	96.08.27.06.18.33;	author mike;	state Exp;
branches;
next	;

1.21.2.1
date	2002.09.19.18.01.12;	author morrison;	state Exp;
branches;
next	;


desc
@magic.c
@


1.24
log
@moved to src/
@
text
@/*
 *			M A G I C . C
 *
 *  Routines involved with handling "magic numbers" used to identify
 *  various in-memory data structures.
 *
 *  The one ugly thing about this strategy is that every BRL-CAD
 *  library needs to have it's magic numbers registered here.
 *  XXX What is needed is an extension mechanism.
 *  It is a shame that C does not provide a wextern (weak extern) declaration.
 *
 *  Authors -
 *	Lee A. Butler
 *	Michael John Muuss
 *  
 *  Source -
 *	SECAD/VLD Computing Consortium, Bldg 394
 *	The U. S. Army Ballistic Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5066
 *  
 *  Distribution Status -
 *	Public Domain, Distribution Unlimitied.
 */
#ifndef lint
static const char RCSmagic[] = "@@(#)$Header: /n/xoff/cvs/brlcad/libbu/magic.c,v 1.23 2004/05/10 15:30:44 erikg Exp $ (BRL)";
#endif

#ifdef HAVE_CONFIG_H
# include "config.h"
#endif



#include <stdio.h>
#include "machine.h"
#include "vmath.h"
#include "externs.h"
#include "nmg.h"
#include "bu.h"
#include "bn.h"
#include "raytrace.h"
#include "rtgeom.h"
#include "msr.h"
#include "wdb.h"
#include "spm.h"
#include "../libbu/rb_internals.h"

/*
 *			B U _ I D E N T I F Y _ M A G I C
 *
 *  Given a number which has been found in the magic number field of
 *  a structure (which is typically the first entry),
 *  determine what kind of structure this magic number pertains to.
 *  This is called by the macro BU_CK_MAGIC() to provide a "hint"
 *  as to what sort of pointer error might have been made.
 */
const char *
bu_identify_magic(register long int magic)
{
	switch(magic)  {
	case 0:
		return "Zero_Magic_Number";
	default:
		return "Unknown_Magic";
	/*
	 *  tabdata.h
	 */
	case BN_TABLE_MAGIC:
		return "bn_table";
	case BN_TABDATA_MAGIC:
		return "bn_tabdata";
	/*
	 *  bu.h
	 */
	case BU_LIST_HEAD_MAGIC:
		return "bu_list";
	case BU_BITV_MAGIC:
		return "bu_bitv";
	case BU_HIST_MAGIC:
		return "bu_hist";
	case BU_PTBL_MAGIC:
		return "bu_ptbl";
	case BU_MAPPED_FILE_MAGIC:
		return "bu_mapped_file";
	case BU_AVS_MAGIC:
		return "bu_attribute_value_set";
	case BU_VLS_MAGIC:
		return "bu_vls";
	case BU_EXTERNAL_MAGIC:
		return "bu_external";
	case BU_COLOR_MAGIC:
		return "bu_color";
	case BU_RB_TREE_MAGIC:
		return "bu_rb_tree";

	/*
	 *  bn.h
	 */
	case BN_TOL_MAGIC:
		return "bn_tol";
	case BN_POLY_MAGIC:
		return "bn_poly";
	case BN_UNIF_MAGIC:
		return "bn_unif";
	case BN_GAUSS_MAGIC:
		return "bn_gauss";
	case BN_VLIST_MAGIC:
		return("bn_vlist");
	case BN_VLBLOCK_MAGIC:
		return("bn_vlblock");

	/*
	 *  nmg.h:  NMG magic numbers
	 */
	case NMG_MODEL_MAGIC:
		return("model");
	case NMG_REGION_MAGIC:
		return("region");
	case NMG_REGION_A_MAGIC:
		return("region_a");
	case NMG_SHELL_MAGIC:
		return("shell");
	case NMG_SHELL_A_MAGIC:
		return("shell_a");
	case NMG_FACE_MAGIC:
		return("face");
	case NMG_FACE_G_PLANE_MAGIC:
		return("face_g_plane");
	case NMG_FACE_G_SNURB_MAGIC:
		return("face_g_snurb");
	case NMG_FACEUSE_MAGIC:
		return("faceuse");
	case NMG_LOOP_MAGIC:
		return("loop");
	case NMG_LOOP_G_MAGIC:
		return("loop_g");
	case NMG_LOOPUSE_MAGIC:
		return("loopuse");
	case NMG_EDGE_MAGIC:
		return("edge");
	case NMG_EDGE_G_LSEG_MAGIC:
		return("edge_g_lseg");
	case NMG_EDGE_G_CNURB_MAGIC:
		return("edge_g_cnurb");
	case NMG_KNOT_VECTOR_MAGIC:
		return("knot_vector");
	case NMG_EDGEUSE_MAGIC:
		return("edgeuse");
	case NMG_EDGEUSE2_MAGIC:
		return("edgeuse2 [midway into edgeuse]");
	case NMG_VERTEX_MAGIC:
		return("vertex");
	case NMG_VERTEX_G_MAGIC:
		return("vertex_g");
	case NMG_VERTEXUSE_MAGIC:
		return("vertexuse");
	case NMG_VERTEXUSE_A_PLANE_MAGIC:
		return("vertexuse_a_plane");
	case NMG_VERTEXUSE_A_CNURB_MAGIC:
		return("vertexuse_a_cnurb");
	/*
	 *  raytrace.h
	 */
	case RT_TESS_TOL_MAGIC:
		return("rt_tess_tol");
	case RT_DB_INTERNAL_MAGIC:
		return("rt_db_internal");
	case RT_RAY_MAGIC:
		return "librt xray";
	case RT_HIT_MAGIC:
		return "librt hit";
	case RT_SEG_MAGIC:
		return("librt seg");
	case RT_SOLTAB_MAGIC:
		return("librt soltab");
	case RT_REGION_MAGIC:
		return("librt region");
	case PT_MAGIC:
		return("librt partition");
	case DBI_MAGIC:
		return("librt db_i");
	case RT_DIR_MAGIC:
		return "librt directory";
	case DB_FULL_PATH_MAGIC:
		return "librt db_full_path";
	case RT_CTS_MAGIC:
		return "librt combined_tree_state";
	case RT_TREE_MAGIC:
		return "librt union tree";
	case RT_WDB_MAGIC:
		return "rt_wdb";
	case ANIMATE_MAGIC:
		return("librt animate");
	case RESOURCE_MAGIC:
		return("librt resource");
	case PIXEL_EXT_MAGIC:
		return "librt pixel_ext";
	case RT_AP_MAGIC:
		return "librt application";
	case RTI_MAGIC:
		return("rt_i");
	case RT_FUNCTAB_MAGIC:
		return "rt_functab";
	case RT_HTBL_MAGIC:
		return "rt_htbl";

	/*
	 *  rtgeom.h
	 */
	case RT_TOR_INTERNAL_MAGIC:
		return("rt_tor_internal");
	case RT_TGC_INTERNAL_MAGIC:
		return("rt_tgc_internal");
	case RT_ELL_INTERNAL_MAGIC:
		return("rt_ell_internal");
	case RT_ARB_INTERNAL_MAGIC:
		return("rt_arb_internal");
	case RT_ARS_INTERNAL_MAGIC:
		return("rt_ars_internal");
	case RT_HALF_INTERNAL_MAGIC:
		return("rt_half_internal");
	case RT_PG_INTERNAL_MAGIC:
		return("rt_pg_internal");
	case RT_EBM_INTERNAL_MAGIC:
		return("rt_ebm_internal");
	case RT_VOL_INTERNAL_MAGIC:
		return("rt_vol_internal");
	case RT_ARBN_INTERNAL_MAGIC:
		return("rt_arbn_internal");
	case RT_PIPE_INTERNAL_MAGIC:
		return("rt_pipe_internal");
	case RT_PART_INTERNAL_MAGIC:
		return("rt_part_internal");
	/*
	 * wdb.h
	 */
	case WMEMBER_MAGIC:
		return("wdb.h wmember_magic");
	case WDB_PIPESEG_MAGIC:
		return("wdb.h wdb_pipeseg_magic");

	/*
	 * fb.h -- not a good idea to include for real.
	 */
	case 0xfbfb00fb /* FB_MAGIC */:
		return("fb.h fb_magic");

	/*
	 *  spm.h
	 */
	case SPM_MAGIC:
		return "spm.h spm_map_t";

	/*
	 *  ../libbu/rb_internals.h
	 */
	case BU_RB_NODE_MAGIC:
		return "red-black node";
	case BU_RB_PKG_MAGIC:
		return "red-black package";

	}

}
@


1.23
log
@change conf.h to a wrapped config.h
@
text
@d25 1
a25 1
static const char RCSmagic[] = "@@(#)$Header: /cvs/brlcad/libbu/magic.c,v 1.22 2004/04/05 07:46:16 morrison Exp $ (BRL)";
@


1.22
log
@merge of ansi-6-0-branch into HEAD
@
text
@d25 1
a25 1
static const char RCSmagic[] = "@@(#)$Header$ (BRL)";
d28 5
a32 1
#include "conf.h"
@


1.21
log
@Restoration of entire source tree to Pre-Hartley state
@
text
@d25 1
a25 1
static const char RCSmagic[] = "@@(#)$Header: /c/CVS/brlcad/libbu/magic.c,v 1.19 2001/04/20 22:29:06 morrison Exp $ (BRL)";
d54 1
a54 2
bu_identify_magic( magic )
register long	magic;
@


1.21.2.1
log
@Initial ANSIfication
@
text
@d25 1
a25 1
static const char RCSmagic[] = "@@(#)$Header: /c/CVS/brlcad/libbu/magic.c,v 1.21 2002/08/20 17:07:41 jra Exp $ (BRL)";
d54 2
a55 1
bu_identify_magic(register long int magic)
@


1.20
log
@Converted from K&R to ANSI C - RFH
@
text
@d54 2
a55 1
bu_identify_magic(register long int magic)
@


1.19
log
@CONST to const
@
text
@d25 1
a25 1
static const char RCSmagic[] = "@@(#)$Header: /c/CVS/brlcad/libbu/magic.c,v 1.18 2000/11/19 16:28:29 butler Exp $ (BRL)";
d54 1
a54 2
bu_identify_magic( magic )
register long	magic;
@


1.18
log
@Removed some unnecessary symbols relating to partition structures.
@
text
@d25 1
a25 1
static const char RCSmagic[] = "@@(#)$Header: /c/CVS/brlcad/libbu/magic.c,v 1.17 2000/10/30 21:28:07 mike Exp $ (BRL)";
d53 1
a53 1
CONST char *
@


1.17
log
@
Clarified names of owning library.
Added RT_WDB_MAGIC.
Removed PT_HD_MAGIC, which is now BU_LIST_HEAD_MAGIC.
@
text
@d25 1
a25 1
static const char RCSmagic[] = "@@(#)$Header: /c/CVS/brlcad/libbu/magic.c,v 1.16 2000/07/07 05:21:21 cjohnson Exp $ (BRL)";
d175 1
a175 1
	case RT_PT_MAGIC:
@


1.16
log
@LINT plus minor bug fix in bu_tcl.c
@
text
@d25 1
a25 1
static const char RCSmagic[] = "@@(#)$Header: /c/CVS/brlcad/libbu/magic.c,v 1.15 2000/06/29 14:26:09 mike Exp $ (BRL)";
d166 1
a166 1
		return "rt xray";
d168 1
a168 1
		return "rt hit";
d170 1
a170 1
		return("rt seg");
d172 1
a172 1
		return("rt soltab");
d174 3
a176 5
		return("rt region");
	case PT_MAGIC:
		return("rt partition");
	case PT_HD_MAGIC:
		return "rt partition list head";
d178 1
a178 1
		return("rt db_i");
d180 1
a180 1
		return "(librt)directory";
d182 1
a182 1
		return "db_full_path";
d184 1
a184 1
		return "combined_tree_state";
d186 3
a188 1
		return "rt union tree";
d190 1
a190 1
		return("rt animate");
d192 1
a192 1
		return("rt resource");
d194 1
a194 1
		return "rt pixel_ext";
d196 1
a196 1
		return "rt application";
@


1.15
log
@
Reoranized BU_*_MAGIC numbers to appear in the order they're listed
in bu.h
Added BU_AVS_MAGIC
@
text
@d25 1
a25 1
static char RCSmagic[] = "@@(#)$Header: /c/CVS/brlcad/libbu/magic.c,v 1.14 2000/05/24 00:01:46 mike Exp $ (BRL)";
@


1.14
log
@
Added RT_HTBL_MAGIC
@
text
@d25 1
a25 1
static char RCSmagic[] = "@@(#)$Header: /c/CVS/brlcad/libbu/magic.c,v 1.13 2000/04/12 18:11:42 mike Exp $ (BRL)";
d72 2
a73 4
	case BU_VLS_MAGIC:
		return "bu_vls";
	case BU_PTBL_MAGIC:
		return "bu_ptbl";
a75 2
	case BU_LIST_HEAD_MAGIC:
		return "bu_list";
d78 2
d82 4
d88 2
d91 1
a91 1
		return "red-black tree";
@


1.13
log
@
The symbol NULL is confusing, a zero magic number is different.
@
text
@d25 1
a25 1
static char RCSmagic[] = "@@(#)$Header: /c/CVS/brlcad/libbu/magic.c,v 1.12 1999/11/17 04:46:54 mike Exp $ (BRL)";
d197 2
@


1.12
log
@
Added new magic number
@
text
@d25 1
a25 1
static char RCSmagic[] = "@@(#)$Header: /c/CVS/brlcad/libbu/magic.c,v 1.11 1999/10/30 04:11:40 mike Exp $ (BRL)";
d59 1
a59 1
		return "NULL";
@


1.11
log
@
Added new magic numbers:  seg, hit, application
@
text
@d25 1
a25 1
static char RCSmagic[] = "@@(#)$Header: /c/CVS/brlcad/libbu/magic.c,v 1.10 1999/07/02 19:05:57 mike Exp $ (BRL)";
d195 2
@


1.10
log
@
Removed dependency on compat4.h
@
text
@d25 1
a25 1
static char RCSmagic[] = "@@(#)$Header: /c/CVS/brlcad/libbu/magic.c,v 1.9 1999/05/27 21:20:59 mike Exp $ (BRL)";
d161 4
d189 4
@


1.9
log
@
vlist and vlblock moved from rt to bn.h
@
text
@d25 1
a25 1
static char RCSmagic[] = "@@(#)$Header: /c/CVS/brlcad/libbu/magic.c,v 1.8 1998/12/30 01:26:25 mike Exp $ (BRL)";
d35 2
a42 2
#include "bu.h"
#include "bn.h"
@


1.8
log
@LibRedBlack routines now in libbu with a bu_ prefix.
@
text
@d25 1
a25 1
static char RCSmagic[] = "@@(#)$Header: /c/CVS/brlcad/libbu/magic.c,v 1.7 1998/12/11 21:15:29 mike Exp $ (BRL)";
d100 4
d187 1
a187 4
	case RT_VLIST_MAGIC:
		return("rt_vlist");
	case RT_VLBLOCK_MAGIC:
		return("rt_vlblock");
@


1.7
log
@rt_tabdata stuff became bn_tabdata
@
text
@d25 1
a25 1
static char RCSmagic[] = "@@(#)$Header: /c/CVS/brlcad/libbu/magic.c,v 1.6 1998/09/30 03:46:00 mike Exp $ (BRL)";
d40 1
a40 2
#include "redblack.h"
#include "../libredblack/rb_internals.h"
d86 2
d235 1
a235 7
	 *  redblack.h
	 */
	case RB_TREE_MAGIC:
		return "red-black tree";

	/*
	 *  ../libredblack/rb_internals.h
d237 1
a237 1
	case RB_NODE_MAGIC:
d239 1
a239 1
	case RB_PKG_MAGIC:
@


1.6
log
@Added values from h/tabdata.h
@
text
@d25 1
a25 1
static char RCSmagic[] = "@@(#)$Header: /c/CVS/brlcad/libbu/magic.c,v 1.5 1998/06/22 13:37:16 pjt Exp $ (BRL)";
a43 1
#include "tabdata.h"
d66 4
a69 4
	case RT_TABLE_MAGIC:
		return "rt_table";
	case RT_TABDATA_MAGIC:
		return "rt_tabdata";
@


1.5
log
@This is a silly test to see what happens if I try copying a ,v file
from another RCS directory (doing it all in /c/CVS/brlcad) and then
somebody else (in this case me) commits stuff back into the directory.
@
text
@d25 1
a25 1
static char RCSmagic[] = "@@(#)$Header: /c/CVS/brlcad/libbu/magic.c,v 1.4 1996/10/02 23:48:24 mike Exp $ (BRL)";
d44 1
d64 7
@


1.4
log
@Things moved to bn.h
@
text
@d25 1
a25 1
static char RCSmagic[] = "@@(#)$Header: /m/cad/libbu/RCS/magic.c,v 1.3 1996/08/31 10:42:00 mike Exp $ (BRL)";
d241 1
@


1.3
log
@more libbu and libbn stuff
@
text
@d25 1
a25 1
static char RCSmagic[] = "@@(#)$Header: /m/cad/libbu/RCS/magic.c,v 1.2 1996/08/28 09:50:46 mike Exp mike $ (BRL)";
d84 2
d88 4
a144 2
	case RT_TOL_MAGIC:
		return("rt_tol");
a205 7
	/*
	 * msr.h
	 */
	case MSR_UNIF_MAGIC:
		return("msr_unif_magic");
	case MSR_GAUSS_MAGIC:
		return("msr_gauss_magic");
@


1.2
log
@Added bu_ptbl and bu_bitv
@
text
@d25 1
a25 1
static char RCSmagic[] = "@@(#)$Header: /m/cad/libbu/RCS/magic.c,v 1.1 1996/08/27 06:18:33 mike Exp mike $ (BRL)";
a33 1
#include "rtlist.h"
d43 1
d72 8
d82 6
a136 5
	 *  rtlist.h
	 */
	case RT_LIST_HEAD_MAGIC:
		return("rt_list");
	/*
a142 2
	case RT_EXTERNAL_MAGIC:
		return("rt_external");
@


1.1
log
@Initial revision
@
text
@d25 1
a25 1
static char RCSmagic[] = "@@(#)$Header: /m/cad/librt/RCS/magic.c,v 11.3 1995/06/16 17:50:47 pjt Exp $ (BRL)";
d68 4
a121 2
	case NMG_PTBL_MAGIC:
		return "nmg_ptbl";
@
