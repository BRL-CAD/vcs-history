head	1.2;
access;
symbols
	rel-6-1-DP:1.1.1.1
	rel-6-0-2:1.1.1.1
	rel-6-0-1-branch:1.1.1.1.0.4
	hartley-6-0-post:1.1.1.1
	hartley-6-0-pre:1.1.1.1
	rel-6-0-1:1.1.1.1
	rel-6-0:1.1.1.1
	rel-5-4:1.1.1.1
	offsite-5-3-pre:1.1.1.1
	rel-5-3:1.1.1.1
	rel-5-1-branch:1.1.1.1.0.2
	windows-6-0-branch:1.1.1.1.0.8
	ansi-6-0-branch:1.1.1.1.0.6
	tk8-3:1.1.1.1
	scriptics:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2003.03.13.19.14.07;	author jra;	state dead;
branches;
next	1.1;

1.1
date	2000.12.06.21.34.19;	author bparker;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.12.06.21.34.19;	author bparker;	state Exp;
branches
	1.1.1.1.6.1
	1.1.1.1.8.1;
next	;

1.1.1.1.6.1
date	2004.03.17.07.31.45;	author morrison;	state dead;
branches;
next	;

1.1.1.1.8.1
date	2004.03.15.17.37.24;	author morrison;	state dead;
branches;
next	;


desc
@@


1.2
log
@*** empty log message ***
@
text
@# This file is a Tcl script to test out the procedures in the file
# tkUtil.c.  It is organized in the standard fashion for Tcl tests.
#
# Copyright (c) 1994 The Regents of the University of California.
# Copyright (c) 1994 Sun Microsystems, Inc.
# Copyright (c) 1998-1999 by Scriptics Corporation.
# All rights reserved.
#
# RCS: @@(#) $Id: util.test,v 1.1 2000/12/06 21:34:19 bparker Exp $

if {[lsearch [namespace children] ::tcltest] == -1} {
    source [file join [pwd] [file dirname [info script]] defs.tcl]
}

foreach i [winfo children .] {
    destroy $i
}
wm geometry . {}
raise .

listbox .l -width 20 -height 5 -relief sunken -bd 2
pack .l
.l insert 0 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19
update
test util-1.1 {Tk_GetScrollInfo procedure} {
    list [catch {.l yview moveto a b} msg] $msg
} {1 {wrong # args: should be ".l yview moveto fraction"}}
test util-1.2 {Tk_GetScrollInfo procedure} {
    list [catch {.l yview moveto xyz} msg] $msg
} {1 {expected floating-point number but got "xyz"}}
test util-1.3 {Tk_GetScrollInfo procedure} {
    .l yview 0
    .l yview moveto .5
    .l yview
} {0.5 0.75}
test util-1.4 {Tk_GetScrollInfo procedure} {
    list [catch {.l yview scroll a} msg] $msg
} {1 {wrong # args: should be ".l yview scroll number units|pages"}}
test util-1.5 {Tk_GetScrollInfo procedure} {
    list [catch {.l yview scroll a b c} msg] $msg
} {1 {wrong # args: should be ".l yview scroll number units|pages"}}
test util-1.6 {Tk_GetScrollInfo procedure} {
    list [catch {.l yview scroll xyz units} msg] $msg
} {1 {expected integer but got "xyz"}}
test util-1.7 {Tk_GetScrollInfo procedure} {
    .l yview 0
    .l yview scroll 2 pages
    .l nearest 0
} {6}
test util-1.8 {Tk_GetScrollInfo procedure} {
    .l yview 15
    .l yview scroll -2 pages
    .l nearest 0
} {9}
test util-1.9 {Tk_GetScrollInfo procedure} {
    .l yview 0
    .l yview scroll 2 units
    .l nearest 0
} {2}
test util-1.10 {Tk_GetScrollInfo procedure} {
    .l yview 15
    .l yview scroll -2 units
    .l nearest 0
} {13}
test util-1.11 {Tk_GetScrollInfo procedure} {
    list [catch {.l yview scroll 3 zips} msg] $msg
} {1 {bad argument "zips": must be units or pages}}
test util-1.12 {Tk_GetScrollInfo procedure} {
    list [catch {.l yview dropdead 3 times} msg] $msg
} {1 {unknown option "dropdead": must be moveto or scroll}}

# cleanup
::tcltest::cleanupTests
return













@


1.1
log
@Initial revision
@
text
@d9 1
a9 1
# RCS: @@(#) $Id: util.test,v 1.3 1999/04/16 01:51:42 stanton Exp $
@


1.1.1.1
log
@Import tk8.3
@
text
@@


1.1.1.1.6.1
log
@sync branch with HEAD
@
text
@d9 1
a9 1
# RCS: @@(#) $Id: util.test,v 1.1.1.1 2000/12/06 21:34:19 bparker Exp $
@


1.1.1.1.8.1
log
@sync with HEAD -- libtk8.3 is now libtk8.4
@
text
@d9 1
a9 1
# RCS: @@(#) $Id: util.test,v 1.1.1.1 2000/12/06 21:34:19 bparker Exp $
@

