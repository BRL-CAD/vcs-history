head	1.3;
access;
symbols
	ansi-20040316-freeze:1.2
	rel-6-1-DP:1.2
	rel-6-0-2:1.2
	rel-6-0-1-branch:1.2.0.2
	hartley-6-0-post:1.2
	hartley-6-0-pre:1.2
	rel-6-0-1:1.2
	rel-6-0:1.2
	rel-5-4:1.1.1.1
	offsite-5-3-pre:1.1.1.1
	rel-5-3:1.1.1.1
	rel-5-1-branch:1.1.1.1.0.2
	windows-6-0-branch:1.2.0.6
	ansi-6-0-branch:1.2.0.4
	tk8-3:1.1.1.1
	scriptics:1.1.1;
locks; strict;
comment	@ * @;


1.3
date	2003.03.13.19.13.05;	author jra;	state dead;
branches;
next	1.2;

1.2
date	2001.04.20.22.30.37;	author morrison;	state Exp;
branches
	1.2.4.1
	1.2.6.1;
next	1.1;

1.1
date	2000.12.06.21.34.21;	author bparker;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.12.06.21.34.21;	author bparker;	state Exp;
branches;
next	;

1.2.4.1
date	2004.03.17.07.15.03;	author morrison;	state dead;
branches;
next	;

1.2.6.1
date	2004.03.11.23.45.12;	author morrison;	state dead;
branches;
next	;


desc
@@


1.3
log
@*** empty log message ***
@
text
@/*
 * stdlib.h --
 *
 *	Declares facilities exported by the "stdlib" portion of
 *	the C library.  This file isn't complete in the ANSI-C
 *	sense;  it only declares things that are needed by Tcl.
 *	This file is needed even on many systems with their own
 *	stdlib.h (e.g. SunOS) because not all stdlib.h files
 *	declare all the procedures needed here (such as strtod).
 *
 * Copyright (c) 1991 The Regents of the University of California.
 * Copyright (c) 1994-1998 Sun Microsystems, Inc.
 *
 * See the file "license.terms" for information on usage and redistribution
 * of this file, and for a DISCLAIMER OF ALL WARRANTIES.
 *
 * RCS: @@(#) $Id: stdlib.h,v 1.2 2001/04/20 22:30:37 morrison Exp $
 */

#ifndef _STDLIB
#define _STDLIB

#include <tcl.h>

extern void		abort _ANSI_ARGS_((void));
extern double		atof _ANSI_ARGS_((const char *string));
extern int		atoi _ANSI_ARGS_((const char *string));
extern long		atol _ANSI_ARGS_((const char *string));
extern char *		calloc _ANSI_ARGS_((unsigned int numElements,
			    unsigned int size));
extern void		exit _ANSI_ARGS_((int status));
extern int		free _ANSI_ARGS_((char *blockPtr));
extern char *		getenv _ANSI_ARGS_((const char *name));
extern char *		malloc _ANSI_ARGS_((unsigned int numBytes));
extern void		qsort _ANSI_ARGS_((VOID *base, int n, int size,
			    int (*compar)(const VOID *element1, const VOID
			    *element2)));
extern char *		realloc _ANSI_ARGS_((char *ptr, unsigned int numBytes));
extern double		strtod _ANSI_ARGS_((const char *string, char **endPtr));
extern long		strtol _ANSI_ARGS_((const char *string, char **endPtr,
			    int base));
extern unsigned long	strtoul _ANSI_ARGS_((const char *string,
			    char **endPtr, int base));

#endif /* _STDLIB */
@


1.2
log
@CONST to const
@
text
@d17 1
a17 1
 * RCS: @@(#) $Id: stdlib.h,v 1.1.1.1 2000/12/06 21:34:21 bparker Exp $
@


1.2.4.1
log
@sync branch with HEAD
@
text
@d17 1
a17 1
 * RCS: @@(#) $Id: stdlib.h,v 1.2 2001/04/20 22:30:37 morrison Exp $
@


1.2.6.1
log
@sync to HEAD...
@
text
@d17 1
a17 1
 * RCS: @@(#) $Id: stdlib.h,v 1.2 2001/04/20 22:30:37 morrison Exp $
@


1.1
log
@Initial revision
@
text
@d17 1
a17 1
 * RCS: @@(#) $Id: stdlib.h,v 1.3 1999/04/16 00:46:30 stanton Exp $
d26 3
a28 3
extern double		atof _ANSI_ARGS_((CONST char *string));
extern int		atoi _ANSI_ARGS_((CONST char *string));
extern long		atol _ANSI_ARGS_((CONST char *string));
d33 1
a33 1
extern char *		getenv _ANSI_ARGS_((CONST char *name));
d36 1
a36 1
			    int (*compar)(CONST VOID *element1, CONST VOID
d39 2
a40 2
extern double		strtod _ANSI_ARGS_((CONST char *string, char **endPtr));
extern long		strtol _ANSI_ARGS_((CONST char *string, char **endPtr,
d42 1
a42 1
extern unsigned long	strtoul _ANSI_ARGS_((CONST char *string,
@


1.1.1.1
log
@Import tk8.3
@
text
@@
