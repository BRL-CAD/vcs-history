head	14.2;
access;
symbols
	rel-7-10-4:14.2
	STABLE:14.2.0.2
	stable-branch:14.1
	rel-7-10-2:14.2
	rel-7-10-0:14.2
	rel-7-8-4:14.1
	rel-7-8-2:14.1
	rel-7-8-0:14.1
	trimnurbs-branch:14.1.0.8
	help:14.1
	temp_tag:14.1
	bobWinPort-20051223-freeze:14.1
	postmerge-20051223-bobWinPort:14.1
	premerge-20051223-bobWinPort:14.1
	rel-7-6-6:14.1
	rel-7-6-4:14.1
	rel-7-6-2:14.1
	rel-7-6-branch:14.1.0.6
	rel-7-6-0:14.1
	rel-7-4-2:14.1
	rel-7-4-branch:14.1.0.4
	bobWinPort:14.1.0.2
	rel-7-4-0:14.1
	rel-7-2-6:14.1
	rel-7-2-4:14.1
	rel-7-2-2:14.1
	rel-7-2-0:14.1
	rel-7-0-4:14.1
	rel-7-0-2:14.1
	rel-7-0-1:14.1
	opensource-post:14.1
	opensource-pre:1.1
	rel-7-0-branch:1.1.0.2
	rel-7-0:1.1
	postmerge-20040405-ansi:1.1
	premerge-20040404-ansi:1.1
	postmerge-autoconf:1.1
	premerge-autoconf:1.1;
locks; strict;
comment	@.\" @;


14.2
date	2007.02.08.06.32.35;	author brlcad;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.10;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.03.17.05.30.52;	author morrison;	state Exp;
branches;
next	;


desc
@@


14.2
log
@Joerg spelled CBW incorrectly -- the proper project name is the Crypt Breaker's Workbench (this mistake has been impressively spread around the world now).
@
text
@.\"
.\" enigma (aka. crypt) man page written by Joerg Wunsch.
.\"
.\" Since enigma itself is distributed in the Public Domain, this file
.\" is also.
.\"
.\" $FreeBSD: src/usr.bin/enigma/enigma.1,v 1.5 1999/08/28 01:00:38 peter Exp $
.\" "
.Dd October 30, 1998
.Os
.Dt ENIGMA 1
.Sh NAME
.Nm enigma ,
.Nm crypt
.Nd very simple file encryption
.Sh SYNOPSIS
.Nm
.Op Fl s
.Op Fl k
.Op Ar password
.Nm crypt
.Op Fl s
.Op Fl k
.Op Ar password
.Sh DESCRIPTION
.Nm Enigma ,
also known as
.Nm crypt
is a
.Em very
simple encryption program, working on a
.Dq secret-key
basis.  It operates as a filter, i. e. it encrypts or decrypts a
stream of data from standard input, and writes the result to standard
output.  It automatically detects whether the input data stream is
already encrypted, and switches into decryption mode in this case.
.Pp
There are several ways to provide the secret key to the program.  By
default, the program prompts the user on the controlling terminal for
the key, using
.Xr getpass 3 .
This is the only safe way of providing it.
.Pp
Alternatively, the key can be provided as the sole command-line
argument
.Ar password
when starting the program.  Obviously, this way the key can easily be
spotted by other users running
.Xr ps 1 .
As yet another alternative,
.Nm
can be given the option
.Fl k ,
and it will take the key from the environment variable
.Ev CrYpTkEy .
While this at a first glance seems to be more secure than the previous
option, it actually isn't since environment variables can also be
examined with
.Xr ps 1 .
Thus this option is mainly provided for compatibility with other
implementations of
.Nm enigma .
.Pp
When specifying the option
.Fl s ,
.Nm
modifies the encryption engine in a way that is supposed to make it a
little more secure, but incompatible with other implementations.
.Pp
.Ss Warning
The cryptographic value of
.Nm
is rather small.  This program is only provided here for compatibility
with other operating systems that also provide an implementation.  For
real encryption, refer to
.Xr bdes 1
(from the DES distribution package), or
.Xr pgp 1
(from the ports collection).  However, restrictions for exporting,
importing or using such tools might exist in some countries, so those
stronger programs are not being shipped as part of the operating
system by default.
.Sh ENVIRONMENT
.Bl -tag -offset indent -width "XXCrYpTkEy"
.It Ev CrYpTkEy
used to obtain the secret key when option
.Fl k
has been given
.El
.Sh EXAMPLES
.Bd -literal -offset indent
man enigma | enigma > encrypted
Enter key: (XXX \(em key not echoed)
.Ed
.Pp
This will create an encrypted form of this man page, and store it in
the file
.Ql encrypted .
.Bd -literal -offset indent
enigma XXX < encrypted
.Ed
.Pp
This displays the previously created file on the terminal.
.Sh SEE ALSO
.Xr bdes 1 ,
.Xr pgp 1 ,
.Xr ps 1 ,
.Xr getpass 3
.Sh HISTORY
Implementations of
.Nm crypt
are very common among
.Ux
operating systems.  This implementation has been taken from the
.Em Crypt Breaker's Workbench
which is in the public domain.
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d115 1
a115 1
.Em Cryptbreakers Workbench
@


1.1
log
@add enigma, the public domain crypt replacement to the distribution for convenience
@
text
@@

