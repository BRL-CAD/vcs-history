head	11.10;
access;
symbols
	ansi-20040405-merged:11.6.2.2
	postmerge-20040405-ansi:11.8
	premerge-20040404-ansi:11.7
	postmerge-autoconf:11.7
	autoconf-freeze:11.7
	premerge-autoconf:11.7
	postmerge-20040315-windows:11.7
	premerge-20040315-windows:11.7
	windows-20040315-freeze:11.6.4.1
	autoconf-20031203:11.7
	autoconf-20031202:11.7
	autoconf-branch:11.7.0.2
	phong-branch:11.6.0.8
	photonmap-branch:11.6.0.6
	rel-6-1-DP:11.6
	windows-branch:11.6.0.4
	rel-6-0-2:11.4
	ansi-branch:11.6.0.2
	rel-6-0-1-branch:11.4.0.2
	hartley-6-0-post:11.5
	hartley-6-0-pre:11.4
	rel-6-0-1:11.4
	rel-6-0:11.4
	rel-5-4:11.2
	offsite-5-3-pre:11.3
	rel-5-3:11.2
	rel-5-2:11.2
	rel-5-1-branch:11.2.0.2
	rel-5-1:11.2
	rel-5-0:11.2
	rel-5-0-beta:11.1
	rel-4-5:11.1
	ctj-4-5-post:11.1
	ctj-4-5-pre:11.1
	rel-4-4:11.1
	rel-4-0:10.1;
locks; strict;
comment	@ * @;


11.10
date	2004.05.21.16.38.50;	author morrison;	state dead;
branches;
next	11.9;

11.9
date	2004.05.10.15.30.50;	author erikg;	state Exp;
branches;
next	11.8;

11.8
date	2004.04.05.05.46.00;	author morrison;	state Exp;
branches;
next	11.7;

11.7
date	2003.09.26.22.35.12;	author morrison;	state Exp;
branches;
next	11.6;

11.6
date	2002.08.20.17.08.49;	author jra;	state Exp;
branches
	11.6.2.1
	11.6.4.1;
next	11.5;

11.5
date	2002.08.15.20.56.00;	author hartley;	state Exp;
branches;
next	11.4;

11.4
date	2001.10.11.23.35.48;	author butler;	state Exp;
branches;
next	11.3;

11.3
date	2000.08.24.22.46.19;	author mike;	state Exp;
branches;
next	11.2;

11.2
date	99.06.25.18.42.52;	author mike;	state Exp;
branches;
next	11.1;

11.1
date	95.01.04.10.20.47;	author mike;	state Rel4_4;
branches;
next	10.2;

10.2
date	94.08.11.20.08.57;	author gdurf;	state Exp;
branches;
next	10.1;

10.1
date	91.10.12.06.52.28;	author mike;	state Rel4_0;
branches;
next	1.2;

1.2
date	91.07.22.22.15.30;	author butler;	state Exp;
branches;
next	1.1;

1.1
date	91.01.03.20.45.17;	author butler;	state Exp;
branches;
next	;

11.6.2.1
date	2002.09.19.18.02.28;	author morrison;	state Exp;
branches;
next	11.6.2.2;

11.6.2.2
date	2004.03.17.21.23.18;	author morrison;	state Exp;
branches;
next	;

11.6.4.1
date	2004.03.11.23.52.27;	author morrison;	state Exp;
branches;
next	;


desc
@dist
@


11.10
log
@moved to src/tools/
@
text
@/*
 * This software is copyrighted as noted below.  It may be freely copied,
 * modified, and redistributed, provided that the copyright notice is 
 * preserved on all copies.
 * 
 * There is no warranty or other guarantee of fitness for this software,
 * it is provided solely "as is".  Bug reports or fixes may be sent
 * to the author, who may or may not act on them as he desires.
 *
 * You may not include this software in a program or other software product
 * without supplying the source, or without informing the end-user that the 
 * source is available for no extra charge.
 *
 * If you modify this software, you should include a notice giving the
 * name of the person performing the modification, the date of modification,
 * and the reason for such modification.
 */
/* 
 * rle_addcom.c - Add comment[s] to an RLE file.
 * 
 * Author:	Spencer W. Thomas
 * 		Computer Science Dept.
 * 		University of Utah
 * Date:	Sun Jan 25 1987
 * Copyright (c) 1987, University of Utah
 */

#ifdef HAVE_CONFIG_H
# include "config.h"
#endif



#include <stdio.h>
#ifdef USE_STRING_H
#include <string.h>
#else
#include <strings.h>
#endif

#include "machine.h"
#include "externs.h"
#include "rle.h"

/* AIX uses the same define to mean something else, disable it for this file */
#undef BIG_ENDIAN

#include <sys/types.h>
#undef BSD	/* /usr/include/sys/param.h redefines this */
#include <sys/param.h>			/* for MAXPATHLEN */
#include <sys/stat.h>

#ifdef S_IFSOCK				/* should work */
# define BSD42
#endif

#ifndef MAXPATHLEN
# define MAXPATHLEN BUFSIZ
#endif

static char temp[] = "intoXXXXXXXX";
static char buf[MAXPATHLEN+1];

/*****************************************************************
 * TAG( main )
 * 
 * Add one or more comments to an RLE file.
 *
 * Usage:
 *	rle_addcom [-d] [-i] [-o outfile] infile comments ...
 * Inputs:
 *	-d:		Delete matching comments instead of adding any.
 *	-i:		Do it "in place" -- replace the input file.
 * 	outfile:	Modified file with comments (defaults to stdout).
 * 	infile:		File to add comments to.
 *	comments:	One or more strings.  Each will be inserted as
 *			a separate comment.  They will usually be of the
 *			form "name=value".
 * Outputs:
 * 	Writes modified RLE file to standard output.
 * Assumptions:
 *	[None]
 * Algorithm:
 *	[None]
 */
int
main(int argc, char **argv)
{
    rle_hdr out_hdr;
    char * fname = NULL, * out_fname = NULL;
    char *i_fname = NULL;
    FILE *outfile = stdout;
    char ** comments = NULL;
    char *my_name;
    int oflag = 0, iflag = 0, delflag = 0, ncomment = 0;
    int is_pipe = 0;
    register int j;
    int rle_cnt, rle_err;

    my_name = cmd_name( argv );

    if ( scanargs( argc, argv, "% d%- i%- o%-outfile!s infile!s comments!*s",
		   &delflag, &iflag, &oflag, &out_fname, &fname,
                   &ncomment, &comments ) == 0 )
	exit( 1 );

    if ( iflag )
    {
	register char *cp;

	if ( oflag )
	    i_fname = out_fname;
	else
	    i_fname = fname;

	/* Recognize rle_open_f special cases. */
	if ( strcmp( i_fname, "-" ) == 0 )
	{
	    fprintf( stderr,
		     "%s: Can't add comments \"in place\" to standard %s.\n",
		     my_name, oflag ? "output" : "input" );
	    exit( 1 );
	}
#ifndef NO_OPEN_PIPES
	if ( *i_fname == '|' )
	{
	    fprintf( stderr,
		     "%s: Can't add comments \"in place\" to piped %s.\n",
		     my_name, oflag ? "output" : "input" );
	    exit( 1 );
	}
#endif
	strcpy( buf, i_fname );
	if ( (cp = strrchr( buf, '/' )) != NULL )
	{
	    *++cp = 0;
	    strcat( buf, temp );
	}
	else
	    strcpy( buf, temp );
	mkstemp( buf );
#ifndef NO_OPEN_PIPES
	/* Compressed file special case. */
	cp = i_fname + strlen( i_fname ) - 2;
	if ( cp > i_fname && *cp == '.' && *(cp + 1) == 'Z' )
	{
	    strcat( buf, ".Z" );
	    is_pipe = 1;
	}
#endif
	out_fname = buf;
    }

    rle_dflt_hdr.rle_file = rle_open_f(my_name, fname, "r");

    /* Read in header */
    for ( rle_cnt = 0;
	  (rle_err = rle_get_setup( &rle_dflt_hdr )) == RLE_SUCCESS;
	  rle_cnt++ )
    {
	out_hdr = rle_dflt_hdr;
	if ( rle_cnt == 0 )
	    outfile = rle_open_f( my_name, out_fname, "w" );
	out_hdr.rle_file = outfile;

	/* Copy input to the_hdr struct */
	for ( j = 0; j < ncomment; j++ )
	{
	    if ( ! delflag )
		rle_putcom( comments[j], &out_hdr );
	    else
		rle_delcom( comments[j], &out_hdr );
	}

	/* Start output file */
	rle_put_setup( &out_hdr );

	/* Copy rest of input to output */
	rle_cp( &rle_dflt_hdr, &out_hdr );
    }
    /* Check for an error.  EOF or EMPTY is ok if at least one image
     * has been read.  Otherwise, print an error message.
     */
    if ( rle_cnt == 0 || (rle_err != RLE_EOF && rle_err != RLE_EMPTY) )
    {
	rle_get_error( rle_err, my_name, fname );
	rle_err = 1;
    }
    else
	rle_err = 0;

    if ( iflag )
    {
	if ( rle_err )
	    fprintf( stderr, "%s: %s not replaced\n",
		     my_name, i_fname );
	else
	{
#ifndef NO_OPEN_PIPES
	    /* Have to call pclose, else file may not exist yet! */
	    if ( is_pipe )
		pclose( outfile );
	    else
#endif
		fclose( outfile );
	    if ( rename( buf, i_fname ) < 0 )
	    {
		fprintf( stderr, "%s: rename failed: ", my_name );
		perror( "" );
		unlink( buf );	/* Get rid of temp file. */
	    }
	}
    }

    exit( 0 );
}

#ifndef BSD42
rename( file1, file2 )
char *file1, *file2;
{
    struct stat st;

    if ( stat(file2, &st) >= 0 && unlink(file2) < 0 )
	return -1;
    if ( link(file1, file2) < 0 )
	return -1;
    return unlink( file1 );
}
#endif /* !BSD42 */
@


11.9
log
@change conf.h to a wrapped config.h
@
text
@@


11.8
log
@merge of ansi-6-0-branch into head
@
text
@d28 5
a32 1
#include "conf.h"
@


11.7
log
@AIX uses BIG_ENDIAN define so disable it for this file (it is unused here)
@
text
@d83 1
a83 3
main( argc, argv )
int argc;
char **argv;
@


11.6
log
@Restoration of entire source tree to Pre-Hartley state
@
text
@d41 3
@


11.6.4.1
log
@sync to HEAD...
@
text
@a40 3
/* AIX uses the same define to mean something else, disable it for this file */
#undef BIG_ENDIAN

@


11.6.2.1
log
@Initial ANSIfication
@
text
@d80 3
a82 1
main(int argc, char **argv)
@


11.6.2.2
log
@sync branch with HEAD
@
text
@a40 3
/* AIX uses the same define to mean something else, disable it for this file */
#undef BIG_ENDIAN

@


11.5
log
@Converted from K&R to ANSI C - RFH
@
text
@d80 3
a82 1
main(int argc, char **argv)
@


11.4
log
@converted mktemp to mkstemp
@
text
@d80 1
a80 3
main( argc, argv )
int argc;
char **argv;
@


11.3
log
@
lint
@
text
@d136 1
a136 1
	mktemp( buf );
@


11.2
log
@
Eliminated warning on FreeBSD
@
text
@d79 1
a79 1
void
@


11.1
log
@Release_4.4
@
text
@a41 1
#if defined(vax) && defined(BSD) && BSD < 44
a42 1
#endif
@


10.2
log
@Altered #defines and #includes to conform to BRL-CAD standards
@
text
@@


10.1
log
@Release_4.0
@
text
@d28 2
d31 10
a40 1
#include <rle.h>
a46 12
#ifdef USE_STDLIB_H
#include <stdlib.h>
#else

#ifdef USE_STRING_H
#include <string.h>
#define rindex strrchr
#else
#include <strings.h>
#endif

#endif /* USE_STDLIB_H */
d131 1
a131 1
	if ( (cp = rindex( buf, '/' )) != NULL )
@


1.2
log
@resolved problem with <sys/param.h> re-defining BSD on VAX
@
text
@@


1.1
log
@Initial revision
@
text
@d31 3
@
