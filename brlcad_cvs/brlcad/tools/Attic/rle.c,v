head	11.6;
access;
symbols
	ansi-20040405-merged:11.3.2.1
	postmerge-20040405-ansi:11.4
	premerge-20040404-ansi:11.3
	postmerge-autoconf:11.3
	autoconf-freeze:11.3
	premerge-autoconf:11.3
	postmerge-20040315-windows:11.3
	premerge-20040315-windows:11.3
	windows-20040315-freeze:11.3
	autoconf-20031203:11.3
	autoconf-20031202:11.3
	autoconf-branch:11.3.0.10
	phong-branch:11.3.0.8
	photonmap-branch:11.3.0.6
	rel-6-1-DP:11.3
	windows-branch:11.3.0.4
	rel-6-0-2:11.1
	ansi-branch:11.3.0.2
	rel-6-0-1-branch:11.1.0.4
	hartley-6-0-post:11.2
	hartley-6-0-pre:11.1
	rel-6-0-1:11.1
	rel-6-0:11.1
	rel-5-4:11.1
	offsite-5-3-pre:11.1
	rel-5-3:11.1
	rel-5-2:11.1
	rel-5-1-branch:11.1.0.2
	rel-5-1:11.1
	rel-5-0:11.1
	rel-5-0-beta:11.1
	rel-4-5:11.1
	ctj-4-5-post:11.1
	ctj-4-5-pre:11.1
	rel-4-4:11.1
	rel-4-0:10.1;
locks; strict;
comment	@ * @;


11.6
date	2004.05.21.16.38.49;	author morrison;	state dead;
branches;
next	11.5;

11.5
date	2004.05.10.15.30.50;	author erikg;	state Exp;
branches;
next	11.4;

11.4
date	2004.04.05.05.46.00;	author morrison;	state Exp;
branches;
next	11.3;

11.3
date	2002.08.20.17.08.48;	author jra;	state Exp;
branches
	11.3.2.1;
next	11.2;

11.2
date	2002.08.15.20.56.00;	author hartley;	state Exp;
branches;
next	11.1;

11.1
date	95.01.04.10.20.44;	author mike;	state Rel4_4;
branches;
next	10.2;

10.2
date	94.08.11.20.08.55;	author gdurf;	state Exp;
branches;
next	10.1;

10.1
date	91.10.12.06.52.25;	author mike;	state Rel4_0;
branches;
next	1.1;

1.1
date	91.01.24.21.18.06;	author butler;	state Exp;
branches;
next	;

11.3.2.1
date	2002.09.19.18.02.28;	author morrison;	state Exp;
branches;
next	;


desc
@Original Dist
@


11.6
log
@moved to src/tools/
@
text
@/*
 * Copyright (C) 1988 Research Institute for Advanced Computer Science.
 * All rights reserved.  The RIACS Software Policy contains specific
 * terms and conditions on the use of this software, and must be
 * distributed with any copies.  This file may be redistributed.  This
 * copyright and notice must be preserved in all copies made of this file.
 */

/*
 * Interface routines for Utah Raster Toolkit
 */

#ifdef HAVE_CONFIG_H
# include "config.h"
#endif



#include <stdio.h>

#include "machine.h"
#include "externs.h"
#include "rle.h"

/*
 * Globals are stored in a structure.
 */

static struct {
    int             width;
    int             height;
    unsigned char **scan;
    int		    row;
} Globals;

void
rasterInit(int fd, int width, int height)
{
    FILE           *rleFile;
    int             i;

    Globals.width = width;
    Globals.height = height;
    if (fd == 0) {
	rleFile = stdin;
    } else {
	rleFile = fdopen(fd, "r");
    }
    rle_dflt_hdr.rle_file = rleFile;
    rle_get_setup(&rle_dflt_hdr);

    if (rle_dflt_hdr.xmax > width) {
	fprintf(stderr, "Warning: RLE width (%d) exceeds maximum (%d)\n", 
	    rle_dflt_hdr.xmax, width);
    }
    if (rle_dflt_hdr.ymax > height) {
	fprintf(stderr, "Warning: RLE height (%d) exceeds maximum (%d)\n", 
	    rle_dflt_hdr.ymax, height);
    }
    Globals.row = 0;
    Globals.scan = (unsigned char **) malloc((rle_dflt_hdr.ncolors +
				      rle_dflt_hdr.alpha) *
				     sizeof(unsigned char *));
    for (i = 0; i < rle_dflt_hdr.ncolors + rle_dflt_hdr.alpha; i++)
	Globals.scan[i] = 
	    (unsigned char *)malloc(rle_dflt_hdr.xmax+1);

    if (rle_dflt_hdr.alpha) {
	Globals.scan++;
    }
}

void
rasterRowGet(unsigned char *red, unsigned char *green, unsigned char *blue)
{
    int             i, max;

    if (Globals.row < rle_dflt_hdr.ymin || Globals.row > rle_dflt_hdr.ymax) {
	for (i = 0; i < Globals.width; i++) {
	    red[i] = 0;
	    green[i] = 0;
	    blue[i] = 0;
	}
    } else {
	rle_getrow(&rle_dflt_hdr, Globals.scan);
	max = rle_dflt_hdr.xmax < Globals.width ?
	    rle_dflt_hdr.xmax : Globals.width;
	for (i = 0 ; i < max; i++) {
	    red[i] = Globals.scan[0][i];
	    green[i] = Globals.scan[1][i];
	    blue[i] = Globals.scan[2][i];
	}
	for (; i < Globals.width; i++) {
	    red[i] = green[i] = blue[i] = 0;
	}
    }
    Globals.row++;
}

void
rasterDone(void)
{
    rle_puteof(&rle_dflt_hdr);
}
@


11.5
log
@change conf.h to a wrapped config.h
@
text
@@


11.4
log
@merge of ansi-6-0-branch into head
@
text
@d13 5
a17 1
#include "conf.h"
@


11.3
log
@Restoration of entire source tree to Pre-Hartley state
@
text
@d33 1
a33 4
rasterInit(fd, width, height)
int fd;
int width;
int height;
d70 1
a70 2
rasterRowGet(red, green, blue)
unsigned char *red, *green, *blue;
d97 1
a97 1
rasterDone()
@


11.3.2.1
log
@Initial ANSIfication
@
text
@d33 4
a36 1
rasterInit(int fd, int width, int height)
d73 2
a74 1
rasterRowGet(unsigned char *red, unsigned char *green, unsigned char *blue)
d101 1
a101 1
rasterDone(void)
@


11.2
log
@Converted from K&R to ANSI C - RFH
@
text
@d33 4
a36 1
rasterInit(int fd, int width, int height)
d73 2
a74 1
rasterRowGet(unsigned char *red, unsigned char *green, unsigned char *blue)
d101 1
a101 1
rasterDone(void)
@


11.1
log
@Release_4.4
@
text
@d33 1
a33 4
rasterInit(fd, width, height)
int fd;
int width;
int height;
d70 1
a70 2
rasterRowGet(red, green, blue)
unsigned char *red, *green, *blue;
d97 1
a97 1
rasterDone()
@


10.2
log
@Altered #defines and #includes to conform to BRL-CAD standards
@
text
@@


10.1
log
@Release_4.0
@
text
@d13 2
d16 3
a19 13

#ifdef USE_STDLIB_H
#include <stdlib.h>
#else

#ifdef VOID_STAR
extern void *malloc();
#else
extern char *malloc();
#endif
extern void free();

#endif /* USE_STDLIB_H */
@


1.1
log
@Initial revision
@
text
@@
