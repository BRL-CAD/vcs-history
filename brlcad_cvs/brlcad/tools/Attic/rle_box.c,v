head	11.6;
access;
symbols
	ansi-20040405-merged:11.3.2.1
	postmerge-20040405-ansi:11.4
	premerge-20040404-ansi:11.3
	postmerge-autoconf:11.3
	autoconf-freeze:11.3
	premerge-autoconf:11.3
	postmerge-20040315-windows:11.3
	premerge-20040315-windows:11.3
	windows-20040315-freeze:11.3
	autoconf-20031203:11.3
	autoconf-20031202:11.3
	autoconf-branch:11.3.0.10
	phong-branch:11.3.0.8
	photonmap-branch:11.3.0.6
	rel-6-1-DP:11.3
	windows-branch:11.3.0.4
	rel-6-0-2:11.1
	ansi-branch:11.3.0.2
	rel-6-0-1-branch:11.1.0.4
	hartley-6-0-post:11.2
	hartley-6-0-pre:11.1
	rel-6-0-1:11.1
	rel-6-0:11.1
	rel-5-4:11.1
	offsite-5-3-pre:11.1
	rel-5-3:11.1
	rel-5-2:11.1
	rel-5-1-branch:11.1.0.2
	rel-5-1:11.1
	rel-5-0:11.1
	rel-5-0-beta:11.1
	rel-4-5:11.1
	ctj-4-5-post:11.1
	ctj-4-5-pre:11.1
	rel-4-4:11.1
	rel-4-0:10.1;
locks; strict;
comment	@ * @;


11.6
date	2004.05.21.16.38.50;	author morrison;	state dead;
branches;
next	11.5;

11.5
date	2004.05.10.15.30.50;	author erikg;	state Exp;
branches;
next	11.4;

11.4
date	2004.04.05.05.46.00;	author morrison;	state Exp;
branches;
next	11.3;

11.3
date	2002.08.20.17.08.49;	author jra;	state Exp;
branches
	11.3.2.1;
next	11.2;

11.2
date	2002.08.15.20.56.00;	author hartley;	state Exp;
branches;
next	11.1;

11.1
date	95.01.04.10.20.46;	author mike;	state Rel4_4;
branches;
next	10.2;

10.2
date	94.08.11.20.08.56;	author gdurf;	state Exp;
branches;
next	10.1;

10.1
date	91.10.12.06.52.27;	author mike;	state Rel4_0;
branches;
next	1.1;

1.1
date	91.01.03.20.45.16;	author butler;	state Exp;
branches;
next	;

11.3.2.1
date	2002.09.19.18.02.28;	author morrison;	state Exp;
branches;
next	;


desc
@dist
@


11.6
log
@moved to src/tools/
@
text
@/* 
 * rle_box.c - Common code between rlebox and crop.
 * 
 * Author:	Spencer W. Thomas
 * 		EECS Dept.
 * 		University of Michigan
 * Date:	Tue Jun  5 1990
 * Copyright (c) 1990, University of Michigan
 */

#ifdef HAVE_CONFIG_H
# include "config.h"
#endif



#include <stdio.h>


#include "machine.h"
#include "externs.h"
#include "rle.h"
#include "rle_code.h"
#include "rle_raw.h"

void
rle_box(rle_hdr *the_hdr, int *xminp, int *xmaxp, int *yminp, int *ymaxp)
{
    rle_op ** raw;
    register rle_op ** rawp;
    register int i;
    int y, * nrawp;
    int xmin, xmax, ymin, ymax;

    rle_raw_alloc( the_hdr, &raw, &nrawp );
    rawp = raw;

    ymax = -1;			/* smaller than it can ever be */
    ymin = 32768;		/* larger than it can ever be */
    xmax = -1;
    xmin = 32768;

    while ( ( y = rle_getraw( the_hdr, rawp, nrawp ) ) != 32768 )
    {
	if ( y < ymin )		/* found ymin yet? */
	{
	    /* Only count it if there is really some data */
	    for ( i = -the_hdr->alpha; i < the_hdr->ncolors; i++ )
		if ( nrawp[i] > 0 )
		    ymin = y;
	}
	if ( y > ymax )		/* update ymax? */
	{
	    /* Only count it if there is really some data */
	    for ( i = -the_hdr->alpha; i < the_hdr->ncolors; i++ )
		if ( nrawp[i] > 0 )
		    ymax = y;
	}

	/* Now do xmin and xmax */
	    for ( i = -the_hdr->alpha; i < the_hdr->ncolors; i++ )
		if ( nrawp[i] > 0 )
		{
		    if ( rawp[i][0].xloc < xmin )
			xmin = rawp[i][0].xloc;
		    if ( xmax < rawp[i][nrawp[i]-1].xloc +
			 rawp[i][nrawp[i]-1].length - 1 )
			xmax =  rawp[i][nrawp[i]-1].xloc +
			    rawp[i][nrawp[i]-1].length - 1;
		}
    }

    /* If no data, arbitrarily use (0,0)x(0,0) */
    if ( xmax < xmin )
    {
	xmax = xmin = ymax = ymin = 0;
    }

    *xminp = xmin;
    *xmaxp = xmax;
    *yminp = ymin;
    *ymaxp = ymax;

    rle_raw_free( the_hdr, raw, nrawp );
}
@


11.5
log
@change conf.h to a wrapped config.h
@
text
@@


11.4
log
@merge of ansi-6-0-branch into head
@
text
@d11 5
a15 1
#include "conf.h"
@


11.3
log
@Restoration of entire source tree to Pre-Hartley state
@
text
@d23 1
a23 3
rle_box( the_hdr, xminp, xmaxp, yminp, ymaxp )
rle_hdr *the_hdr;
int *xminp, *xmaxp, *yminp, *ymaxp;
@


11.3.2.1
log
@Initial ANSIfication
@
text
@d23 3
a25 1
rle_box(rle_hdr *the_hdr, int *xminp, int *xmaxp, int *yminp, int *ymaxp)
@


11.2
log
@Converted from K&R to ANSI C - RFH
@
text
@d23 3
a25 1
rle_box(rle_hdr *the_hdr, int *xminp, int *xmaxp, int *yminp, int *ymaxp)
@


11.1
log
@Release_4.4
@
text
@d23 1
a23 3
rle_box( the_hdr, xminp, xmaxp, yminp, ymaxp )
rle_hdr *the_hdr;
int *xminp, *xmaxp, *yminp, *ymaxp;
@


10.2
log
@Altered #defines and #includes to conform to BRL-CAD standards
@
text
@@


10.1
log
@Release_4.0
@
text
@d11 2
d14 7
a20 2
#include <rle.h>
#include <rle_raw.h>
@


1.1
log
@Initial revision
@
text
@@
