head	11.10;
access;
symbols
	ansi-20040405-merged:11.7.2.2
	postmerge-20040405-ansi:11.8
	premerge-20040404-ansi:11.7
	postmerge-autoconf:11.7
	autoconf-freeze:11.7
	premerge-autoconf:11.7
	ansi-20040316-freeze:11.7.2.2
	postmerge-20040315-windows:11.7
	premerge-20040315-windows:11.7
	windows-20040315-freeze:11.7
	autoconf-20031203:11.7
	autoconf-20031202:11.7
	autoconf-branch:11.7.0.10
	phong-branch:11.7.0.8
	photonmap-branch:11.7.0.6
	rel-6-1-DP:11.7
	windows-branch:11.7.0.4
	rel-6-0-2:11.4
	ansi-branch:11.7.0.2
	rel-6-0-1-branch:11.4.0.2
	hartley-6-0-post:11.6
	hartley-6-0-pre:11.4
	rel-6-0-1:11.4
	rel-6-0:11.4
	rel-5-4:11.1
	offsite-5-3-pre:11.3
	rel-5-3:11.1
	rel-5-2:11.1
	rel-5-1-branch:11.1.0.2
	rel-5-1:11.1
	rel-5-0:11.1
	rel-5-0-beta:11.1
	rel-4-5:11.1
	ctj-4-5-post:11.1
	ctj-4-5-pre:11.1
	rel-4-4:11.1
	rel-4-0:10.1
	rel-3-5:9.1
	rel-3-0:8.1
	rel-2-3:7.1
	rel-2-0:6.1
	rel-1-24:5.1
	rel-1-20:1.3;
locks; strict;
comment	@ * @;


11.10
date	2004.05.21.18.06.25;	author morrison;	state dead;
branches;
next	11.9;

11.9
date	2004.05.10.15.30.44;	author erikg;	state Exp;
branches;
next	11.8;

11.8
date	2004.04.05.07.45.17;	author morrison;	state Exp;
branches;
next	11.7;

11.7
date	2002.08.20.17.07.44;	author jra;	state Exp;
branches
	11.7.2.1;
next	11.6;

11.6
date	2002.08.16.17.37.15;	author morrison;	state Exp;
branches;
next	11.5;

11.5
date	2002.08.15.20.54.57;	author hartley;	state Exp;
branches;
next	11.4;

11.4
date	2001.10.17.07.40.02;	author morrison;	state Exp;
branches;
next	11.3;

11.3
date	2000.11.01.21.23.10;	author mike;	state Exp;
branches;
next	11.2;

11.2
date	2000.08.24.22.25.36;	author mike;	state Exp;
branches;
next	11.1;

11.1
date	95.01.04.10.04.10;	author mike;	state Rel4_4;
branches;
next	10.4;

10.4
date	94.11.04.05.34.09;	author mike;	state Exp;
branches;
next	10.3;

10.3
date	94.10.11.20.11.46;	author mike;	state Exp;
branches;
next	10.2;

10.2
date	94.08.25.15.54.24;	author gdurf;	state Exp;
branches;
next	10.1;

10.1
date	91.10.12.06.37.45;	author mike;	state Rel4_0;
branches;
next	9.1;

9.1
date	89.05.19.05.48.53;	author mike;	state Rel3_5;
branches;
next	8.1;

8.1
date	88.10.05.00.28.19;	author mike;	state Rel3_0;
branches;
next	7.3;

7.3
date	88.09.17.06.56.18;	author mike;	state Exp;
branches;
next	7.2;

7.2
date	88.05.13.21.53.03;	author mike;	state Exp;
branches;
next	7.1;

7.1
date	87.11.02.23.28.07;	author mike;	state Rel;
branches;
next	6.2;

6.2
date	87.10.28.23.34.42;	author phil;	state Exp;
branches;
next	6.1;

6.1
date	87.07.11.07.52.33;	author mike;	state Rel;
branches;
next	5.1;

5.1
date	87.06.24.21.52.44;	author mike;	state Rel;
branches;
next	1.5;

1.5
date	87.06.24.10.48.16;	author moss;	state Exp;
branches;
next	1.4;

1.4
date	87.04.03.14.55.59;	author moss;	state Exp;
branches;
next	1.3;

1.3
date	87.02.13.00.53.51;	author mike;	state Exp;
branches;
next	1.2;

1.2
date	87.02.07.05.59.52;	author moss;	state Exp;
branches;
next	1.1;

1.1
date	87.02.04.17.28.32;	author moss;	state Exp;
branches;
next	;

11.7.2.1
date	2002.09.19.18.01.16;	author morrison;	state Exp;
branches;
next	11.7.2.2;

11.7.2.2
date	2002.09.25.19.39.25;	author morrison;	state Exp;
branches;
next	;


desc
@Ready for distribution.
@


11.10
log
@moved to src/
@
text
@/*LINTLIBRARY*/
/*
	Author:		Gary S. Moss
			U. S. Army Ballistic Research Laboratory
			Aberdeen Proving Ground
			Maryland 21005-5066
			(301)278-6647 or AV-298-6647
*/
#ifndef lint
static const char RCSid[] = "@@(#)$Header: /n/xoff/cvs/brlcad/libcursor/cursor.c,v 11.9 2004/05/10 15:30:44 erikg Exp $ (BRL)";
#endif
/*
	Originally extracted from SCCS archive:
		SCCS id:	@@(#) libcursor.c	1.13
		Last edit: 	2/4/87 at 12:42:12
		Retrieved: 	2/4/87 at 12:42:39
		SCCS archive:	/v/src/libcursor/s.libcursor.c
 */

#ifdef HAVE_CONFIG_H
# include "config.h"
#endif

#include <stdio.h>

#ifdef USE_STRING_H
#include <string.h>
#else
#include <strings.h>
#endif

#ifdef HAVE_TERMCAP_H
#  include <termcap.h>
#else
extern char	*getenv(), *tgetstr(const char *, char **);
extern int	tgetent(void *, const char *);
#endif

#ifdef __ppc__
#  include <curses.h>
#endif

#include <sys/ioctl.h>
#define _winsize winsize	/* For compat with _ioctl.h. */

#define TBUFSIZ		1024
#define MAX_TERM_LEN	80


#if ! defined( BSD )
extern void	clr_Tabs(), save_Tty();
#endif

static FILE	*out_fp;		/* Output stream.	*/
static char	termCapBuf[TBUFSIZ];  	/* Termcap entry.	*/
static char	tstrings[TBUFSIZ];    	/* Individual TCS.	*/
static char	*tstr_addr = tstrings;	/* Used by tgetstr().	*/
#ifdef TIOCGWINSZ
static int	fd_stdout = 1;
#endif

static void	LoadTP(void), LoadTCS(void);


/* This is a global buffer for the name of the terminal.	*/
char		termName[MAX_TERM_LEN] = "UNKNOWN";

/* Individual terminal control strings (TCS).			*/
char		*BC, /* Backspace.				*/
		*UP, /* Cursor up one line.			*/
		*CS, /* Change scrolling region.		*/
		*SO, /* Begin standout mode.			*/
		*SE, /* End standout mode.			*/
		*CE, /* Clear to end of line.			*/
		*CL, /* Clear display and home cursor.		*/
		*HO, /* Home cursor.				*/
		*CM, /* Screen-relative cursor motion.		*/
		*TI, /* Initialize terminal.			*/
		*DL, /* Delete line.				*/
		*SR, /* Scroll text down.			*/
		*SF; /* Scroll text up.				*/

/* Individual terminal parameters.				*/
int		LI, /* Number of lines on screen.		*/
		CO; /* Number of columns on screen.		*/

/* This function must be called first to read the termcap database and
	to specify the output stream.
 */
int		InitTermCap(FILE *fp);

/* This function must be accessible to the termcap library, but will
	not necessarily be needed by the application.
 */
int		PutChr(char c);

/* These functions output terminal control strings to the file stream
	specified by the InitTermCap() call which must precede them.
	They return 0 if the capability is not described in the termcap
	database and 1 otherwise.  Of course if the database entry is
	wrong, the command will not do its job.
 */
int		ClrStandout(void), ClrEOL(void), ClrText(void),
		DeleteLn(void),
		HmCursor(void),
		MvCursor(int x, int y),
		ResetScrlReg(void),
		ScrollDn(void), ScrollUp(void),
		SetScrlReg(int top, int btm), SetStandout(void);


/*	I n i t T e r m C a p ( )
	Get terminal name from environent and leave in 'termName' for
	external reference.
	Read termcap entry into 'termCapBuf'.
	Get individual parameters and control strings.
	Initialize the terminal.
	Returns 1 for success, 0 for failure and prints
	appropriate diagnostic.
	Use 'fp' as output stream.
 */
int
InitTermCap(FILE *fp)
{	char	*term; /* Name of terminal from environment ($TERM).*/
	out_fp = fp;
#ifdef TIOCGWINSZ
	fd_stdout = fileno( out_fp );
#endif
	if( (term = getenv( "TERM" )) == NULL )
		{
		(void) fprintf( stderr, "TERM not set or exported!\n" );
		return	0;
		}
	else
		{
		(void) strncpy( termName, term, MAX_TERM_LEN-1 );
		}

	/* Get terminal entry.						*/
	switch( tgetent( termCapBuf, term ) )
		{
	case -1 :
		(void) fprintf( stderr, "Can't open termcap file!\n" );
		return	0;
	case  0 :
		(void) fprintf( stderr,
				"Terminal type not in termcap file!\n"
				);
		return	0;
		}

	/* Get individual terminal parameters and control strings.	*/
	LoadTP();
	LoadTCS();

	tputs( TI, 1, (void *)PutChr );	/* Initialize terminal.			*/
	return	1;		/* All is well.				*/
	}

/*	L o a d T P ( )
	Get the terminal parameters.
 */
static void
LoadTP(void)
{
#ifdef TIOCGWINSZ
	/* Get window size for DMD layers support.			*/
	struct _winsize		window;

	if(	ioctl( fd_stdout, TIOCGWINSZ, &window ) == 0
	    &&	window.ws_row != 0 && window.ws_col != 0
		)
		{
		LI = (int) window.ws_row;
		CO = (int) window.ws_col;
		}
	else
#endif
		{
		LI = tgetnum( "li" );
		CO = tgetnum( "co" );
		}
	return;
	}

/*	L o a d T C S ( )
	Get the terminal control strings.
 */
static void
LoadTCS(void)
{
	CS = tgetstr( "cs", &tstr_addr );
	SE = tgetstr( "se", &tstr_addr );
	SO = tgetstr( "so", &tstr_addr );
	CE = tgetstr( "ce", &tstr_addr );
	CL = tgetstr( "cl", &tstr_addr );
	HO = tgetstr( "ho", &tstr_addr );
	CM = tgetstr( "cm", &tstr_addr );
	BC = tgetstr( "bc", &tstr_addr );
	UP = tgetstr( "up", &tstr_addr );
	TI = tgetstr( "ti", &tstr_addr );
	DL = tgetstr( "dl", &tstr_addr );
	SR = tgetstr( "sr", &tstr_addr );
	SF = tgetstr( "sf", &tstr_addr );
	return;
	}

/*	H m C u r s o r ( )
	Home the cursor.
 */
int
HmCursor(void)
{
	if( HO != NULL )
		{
		tputs( HO, 1, (void *)PutChr );
		return	1;
		}
	else
		return	0;
	}

/*	S c r o l l U p ( )
	Forward scroll 1 line.
 */
int
ScrollUp(void)
{
	if( SF != NULL )
		{
		tputs( SF, 1, (void *)PutChr );
		return	1;
		}
	else
		return	0;
	}

/*	S c r o l l D n ( )
	Reverse scroll 1 line.
 */
int
ScrollDn(void)
{
	if( SR != NULL )
		{
		tputs( SR, 1, (void *)PutChr );
		return	1;
		}
	else
		return	0;
	}

/*	D e l e t e L n ( )
	Delete the current line.
 */
int
DeleteLn(void)
{
	if( DL != NULL )
		{
		tputs( DL, 1, (void *)PutChr );
		return	1;
		}
	else
		return	0;
	}

/*	M v C u r s o r ( )
	Move the cursor to screen coordinates x, y.
 */
int
MvCursor(int x, int y)
{
	--x; --y; /* Tgoto() adds 1 to each coordinate!?		*/
	if( CM != NULL )
		{
		tputs( tgoto( CM, x, y ), 1, (void *)PutChr );
		return	1;
		}
	else
		return	0;
	}

/*	C l r E O L ( )
	Clear from the cursor to end of line.
 */
int
ClrEOL(void)
{
	if( CE != NULL )
		{
		tputs( CE, 1, (void *)PutChr );
		return	1;
		}
	else
		return	0;
	}

/*	C l r T e x t ( )
	Clear screen and home cursor.
 */
int
ClrText(void)
{
	if( CL != NULL )
		{
		tputs( CL, LI, (void *)PutChr );
		return	1;
		}
	else
		return	0;
	}

/*	S e t S c r l R e g ( )
	Set the scrolling region to be from "top" to "btm".
 */
int
SetScrlReg(int top, int btm)
{
	if( CS != NULL )
		{
		tputs( tgoto( CS, btm-1, top-1 ), 1, (void *)PutChr );
		return	1;
		}
	else
		return	0;
	}

/*	R e s e t S c r l R e g ( )
	Reset the scrolling region to the entire screen.
 */
int
ResetScrlReg(void)
{
	if( CS != NULL )
		{
		tputs( tgoto( CS, LI-1, 0 ), 1, (void *)PutChr );
		return	1;
		}
	else
		return	0;
	}

/*	C l r S t a n d o u t ( )
	End standout mode.
 */
int
ClrStandout(void)
{
	if( SE != NULL )
		{
		tputs( SE, 1, (void *)PutChr );
		return	1;
		}
	else
		return	0;
	}

/*	S e t S t a n d o u t ( )
	Begin standout mode.
 */
int
SetStandout(void)
{
	if( SO != NULL )
		{
		tputs( SO, 1, (void *)PutChr );
		return	1;
		}
	else
		return	0;
	}

/*	P u t C h r ( )							*/
int
PutChr(char c)
{
	return	putc( c, out_fp );
	}
@


11.9
log
@change conf.h to a wrapped config.h
@
text
@d10 1
a10 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/libcursor/cursor.c,v 11.8 2004/04/05 07:45:17 morrison Exp $ (BRL)";
@


11.8
log
@merge of ansi-6-0-branch into HEAD
@
text
@d10 1
a10 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
d20 3
a22 1
#include "conf.h"
@


11.7
log
@Restoration of entire source tree to Pre-Hartley state
@
text
@d10 1
a10 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libcursor/cursor.c,v 11.4 2001/10/17 07:40:02 morrison Exp $ (BRL)";
d32 3
d36 1
d47 1
a47 2
extern char	*getenv(), *tgetstr();
extern int	tgetent();
d60 1
a60 1
static void	LoadTP(), LoadTCS();
d88 1
a88 1
int		InitTermCap();
d93 1
a93 1
int		PutChr();
d101 7
a107 7
int		ClrStandout(), ClrEOL(), ClrText(),
		DeleteLn(),
		HmCursor(),
		MvCursor(),
		ResetScrlReg(),
		ScrollDn(), ScrollUp(),
		SetScrlReg(), SetStandout();
d121 2
a122 3
InitTermCap( fp )
FILE	*fp;
	{	char	*term; /* Name of terminal from environment ($TERM).*/
d162 2
a163 2
LoadTP()
	{
d188 2
a189 2
LoadTCS()
	{
d210 2
a211 2
HmCursor()
	{
d225 2
a226 2
ScrollUp()
	{
d240 2
a241 2
ScrollDn()
	{
d255 2
a256 2
DeleteLn()
	{
d270 2
a271 3
MvCursor( x, y )
int	x, y;
	{
d286 2
a287 2
ClrEOL()
	{
d301 2
a302 2
ClrText()
	{
d316 2
a317 3
SetScrlReg( top, btm )
int	top, btm;
	{
d331 2
a332 2
ResetScrlReg()
	{
d346 2
a347 2
ClrStandout()
	{
d361 2
a362 2
SetStandout()
	{
d374 2
a375 3
PutChr( c )
char	c;
	{
@


11.7.2.1
log
@Initial ANSIfication
@
text
@d10 1
a10 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libcursor/cursor.c,v 11.7 2002/08/20 17:07:44 jra Exp $ (BRL)";
d43 2
a44 2
extern char	*getenv(), *tgetstr(const char *, char **);
extern int	tgetent(void *, const char *);
d57 1
a57 1
static void	LoadTP(void), LoadTCS(void);
d85 1
a85 1
int		InitTermCap(FILE *fp);
d90 1
a90 1
int		PutChr(char c);
d98 7
a104 7
int		ClrStandout(void), ClrEOL(void), ClrText(void),
		DeleteLn(void),
		HmCursor(void),
		MvCursor(int x, int y),
		ResetScrlReg(void),
		ScrollDn(void), ScrollUp(void),
		SetScrlReg(int top, int btm), SetStandout(void);
d118 3
a120 2
InitTermCap(FILE *fp)
{	char	*term; /* Name of terminal from environment ($TERM).*/
d160 2
a161 2
LoadTP(void)
{
d186 2
a187 2
LoadTCS(void)
{
d208 2
a209 2
HmCursor(void)
{
d223 2
a224 2
ScrollUp(void)
{
d238 2
a239 2
ScrollDn(void)
{
d253 2
a254 2
DeleteLn(void)
{
d268 3
a270 2
MvCursor(int x, int y)
{
d285 2
a286 2
ClrEOL(void)
{
d300 2
a301 2
ClrText(void)
{
d315 3
a317 2
SetScrlReg(int top, int btm)
{
d331 2
a332 2
ResetScrlReg(void)
{
d346 2
a347 2
ClrStandout(void)
{
d361 2
a362 2
SetStandout(void)
{
d374 3
a376 2
PutChr(char c)
{
@


11.7.2.2
log
@fixed compiler type consistency errors being reported
@
text
@d10 1
a10 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libcursor/cursor.c,v 11.7.2.1 2002/09/19 18:01:16 morrison Exp $ (BRL)";
a31 3
#else
extern char	*getenv(), *tgetstr(const char *, char **);
extern int	tgetent(void *, const char *);
a32 1

d43 2
a44 1

@


11.6
log
@fixed function declaration mismatch (from ansifying)
@
text
@d10 1
a10 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libcursor/cursor.c,v 11.5 2002/08/15 20:54:57 hartley Exp $ (BRL)";
a22 1
#include <stdlib.h> /* for getenv() */
d33 1
a33 1
#ifdef __ppc__  /* this should be a check ifdef HAVE_CURSES */
d35 1
a35 4
#else /* not __ppc__ */
extern char	*getenv(), *tgetstr(const char *, char **);
extern int	tgetent(void *, const char *);
#endif  /* end check ifdef __ppc__ */
d43 2
d57 1
a57 1
static void	LoadTP(void), LoadTCS(void);
d85 1
a85 1
int		InitTermCap(FILE *fp);
d90 1
a90 1
int		PutChr(char c);
d98 7
a104 7
int		ClrStandout(void), ClrEOL(void), ClrText(void),
		DeleteLn(void),
		HmCursor(void),
		MvCursor(int x, int y),
		ResetScrlReg(void),
		ScrollDn(void), ScrollUp(void),
		SetScrlReg(int top, int btm), SetStandout(void);
d118 3
a120 2
InitTermCap(FILE *fp)
{	char	*term; /* Name of terminal from environment ($TERM).*/
d160 2
a161 2
LoadTP(void)
{
d186 2
a187 2
LoadTCS(void)
{
d208 2
a209 2
HmCursor(void)
{
d223 2
a224 2
ScrollUp(void)
{
d238 2
a239 2
ScrollDn(void)
{
d253 2
a254 2
DeleteLn(void)
{
d268 3
a270 2
MvCursor(int x, int y)
{
d285 2
a286 2
ClrEOL(void)
{
d300 2
a301 2
ClrText(void)
{
d315 3
a317 2
SetScrlReg(int top, int btm)
{
d331 2
a332 2
ResetScrlReg(void)
{
d346 2
a347 2
ClrStandout(void)
{
d361 2
a362 2
SetStandout(void)
{
d374 3
a376 2
PutChr(char c)
{
@


11.5
log
@Converted from K&R to ANSI C - RFH
@
text
@d10 1
a10 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libcursor/cursor.c,v 11.4 2001/10/17 07:40:02 morrison Exp $ (BRL)";
d23 1
d34 1
a34 1
#ifdef __ppc__
d36 4
a39 1
#endif
a46 2
extern char	*getenv(), *tgetstr(const char *, char **);
extern int	tgetent(void *, const char *);
@


11.4
log
@Mac OS X warning and error fixes for non-production build
@
text
@d10 1
a10 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libcursor/cursor.c,v 11.3 2000/11/01 21:23:10 mike Exp $ (BRL)";
d43 2
a44 2
extern char	*getenv(), *tgetstr();
extern int	tgetent();
d57 1
a57 1
static void	LoadTP(), LoadTCS();
d85 1
a85 1
int		InitTermCap();
d90 1
a90 1
int		PutChr();
d98 7
a104 7
int		ClrStandout(), ClrEOL(), ClrText(),
		DeleteLn(),
		HmCursor(),
		MvCursor(),
		ResetScrlReg(),
		ScrollDn(), ScrollUp(),
		SetScrlReg(), SetStandout();
d118 2
a119 3
InitTermCap( fp )
FILE	*fp;
	{	char	*term; /* Name of terminal from environment ($TERM).*/
d159 2
a160 2
LoadTP()
	{
d185 2
a186 2
LoadTCS()
	{
d207 2
a208 2
HmCursor()
	{
d222 2
a223 2
ScrollUp()
	{
d237 2
a238 2
ScrollDn()
	{
d252 2
a253 2
DeleteLn()
	{
d267 2
a268 3
MvCursor( x, y )
int	x, y;
	{
d283 2
a284 2
ClrEOL()
	{
d298 2
a299 2
ClrText()
	{
d313 2
a314 3
SetScrlReg( top, btm )
int	top, btm;
	{
d328 2
a329 2
ResetScrlReg()
	{
d343 2
a344 2
ClrStandout()
	{
d358 2
a359 2
SetStandout()
	{
d371 2
a372 3
PutChr( c )
char	c;
	{
@


11.3
log
@
Added symbol HAVE_TERMCAP_H
@
text
@d10 1
a10 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libcursor/cursor.c,v 11.2 2000/08/24 22:25:36 mike Exp $ (BRL)";
d31 4
a34 1
# include <termcap.h>
d152 1
a152 1
	tputs( TI, 1, PutChr );	/* Initialize terminal.			*/
d212 1
a212 1
		tputs( HO, 1, PutChr );
d227 1
a227 1
		tputs( SF, 1, PutChr );
d242 1
a242 1
		tputs( SR, 1, PutChr );
d257 1
a257 1
		tputs( DL, 1, PutChr );
d274 1
a274 1
		tputs( tgoto( CM, x, y ), 1, PutChr );
d289 1
a289 1
		tputs( CE, 1, PutChr );
d304 1
a304 1
		tputs( CL, LI, PutChr );
d320 1
a320 1
		tputs( tgoto( CS, btm-1, top-1 ), 1, PutChr );
d335 1
a335 1
		tputs( tgoto( CS, LI-1, 0 ), 1, PutChr );
d350 1
a350 1
		tputs( SE, 1, PutChr );
d365 1
a365 1
		tputs( SO, 1, PutChr );
@


11.2
log
@
Lint
@
text
@d10 1
a10 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libcursor/cursor.c,v 11.1 1995/01/04 10:04:10 mike Rel4_4 $ (BRL)";
d30 4
a33 1
#ifndef CRAY
a35 1
#endif
@


11.1
log
@Release_4.4
@
text
@d10 1
a10 1
static char RCSid[] = "@@(#)$Header: /m/cad/libcursor/RCS/cursor.c,v 10.4 94/11/04 05:34:09 mike Exp $ (BRL)";
d112 1
d368 1
@


10.4
log
@Irix 6
@
text
@d10 1
a10 1
static char RCSid[] = "@@(#)$Header: /m/cad/libcursor/RCS/cursor.c,v 10.4 94/11/04 05:33:15 mike Exp $ (BRL)";
@


10.3
log
@Eliminated PC, as it conflicts with a SunOS variable of the same name.
@
text
@d10 1
a10 1
static char RCSid[] = "@@(#)$Header: /m/cad/libcursor/RCS/cursor.c,v 10.2 94/08/25 15:54:24 gdurf Exp Locker: mike $ (BRL)";
d48 1
d50 1
d116 1
d118 1
@


10.2
log
@Factored some ifdefs
@
text
@d10 1
a10 1
static char RCSid[] = "@@(#)$Header: /m/cad/libcursor/RCS/cursor.c,v 10.1 1991/10/12 06:37:45 mike Rel4_0 gdurf $ (BRL)";
a57 1
		*PC, /* Padding character.			*/
a185 1
	PC = tgetstr( "pc", &tstr_addr );
@


10.1
log
@Release_4.0
@
text
@d10 1
a10 1
static char RCSid[] = "@@(#)$Header: cursor.c,v 9.1 89/05/19 05:48:53 mike Rel3_5 $ (BRL)";
d20 2
d23 3
a25 2
#ifdef BSD
#	include <strings.h>
d27 1
a27 1
#	include <string.h>
d29 1
d31 2
a32 6
#	if defined( VLDSYSV )
#		include <sys/_ioctl.h>
#	else
#		include <sys/ioctl.h>
#		define _winsize winsize	/* For compat with _ioctl.h. */
#	endif
d34 1
@


9.1
log
@Release_3.5
@
text
@d10 1
a10 1
static char RCSid[] = "@@(#)$Header: cursor.c,v 8.1 88/10/05 00:28:19 mike Rel3_0 $ (BRL)";
@


8.1
log
@Release_3.0
@
text
@d10 1
a10 1
static char RCSid[] = "@@(#)$Header: cursor.c,v 7.3 88/09/17 06:56:18 mike Exp $ (BRL)";
@


7.3
log
@cray-->CRAY
@
text
@d10 1
a10 1
static char RCSid[] = "@@(#)$Header: cursor.c,v 7.2 88/05/13 21:53:03 mike Locked $ (BRL)";
@


7.2
log
@Lint fix:  added return code to ClrText
@
text
@d10 1
a10 1
static char RCSid[] = "@@(#)$Header: cursor.c,v 7.1 87/11/02 23:28:07 mike Locked $ (BRL)";
d22 1
a22 8
#include <strings.h>
#endif
#ifdef SYSV
#include <string.h>
#endif
#ifndef cray
#if defined( VLDSYSV )
#include <sys/_ioctl.h>
d24 1
a24 2
#include <sys/ioctl.h>
#define _winsize winsize	/* For compatibility with _ioctl.h.	*/
d26 7
@


7.1
log
@Release 2.3
@
text
@d10 1
a10 1
static char RCSid[] = "@@(#)$Header: cursor.c,v 6.2 87/10/28 23:34:42 phil Exp $ (BRL)";
d295 1
d297 4
a300 1
	return;
@


6.2
log
@string(s).h ifdef
@
text
@d10 1
a10 1
static char RCSid[] = "@@(#)$Header: cursor.c,v 6.1 87/07/11 07:52:33 phil Locked $ (BRL)";
@


6.1
log
@Release 2.0
@
text
@d10 1
a10 1
static char RCSid[] = "@@(#)$Header: cursor.c,v 5.1 87/06/24 21:52:44 mike Rel $ (BRL)";
d21 4
d26 1
@


5.1
log
@Release 1.24
@
text
@d10 1
a10 1
static char RCSid[] = "@@(#)$Header: cursor.c,v 1.5 87/06/24 10:48:16 moss Exp $ (BRL)";
@


1.5
log
@Changed #ifdef appropriately for Doug Gwyn's SysV emulation when including
_ioctl.h rather than ioctl.h.
@
text
@d10 1
a10 1
static char RCSid[] = "@@(#)$Header: cursor.c,v 1.4 87/04/03 14:55:59 moss Locked $ (BRL)";
@


1.4
log
@Change in module name to avoid problems with Cray SEGLDR.
Minor Cray porting changes.
@
text
@d10 1
a10 1
static char RCSid[] = "@@(#)$Header: libcursor.c,v 1.3 87/02/13 00:53:51 mike Exp $ (BRL)";
d23 1
a23 1
#if ! defined( BSD ) && ! defined( SYSV )
@


1.3
log
@Release 1.20 -- First Formal Release
@
text
@d10 1
a10 1
static char RCSid[] = "@@(#)$Header: libcursor.c,v 1.2 87/02/07 05:59:52 moss Exp $ (BRL)";
d22 2
a23 1
#if ! defined( BSD ) && ! defined( sgi )
d28 1
@


1.2
log
@Added SGI case
@
text
@d10 1
a10 1
static char RCSid[] = "@@(#)$Header: libcursor.c,v 1.1 87/02/04 17:28:32 moss Locked $ (BRL)";
@


1.1
log
@Initial revision
@
text
@d10 1
a10 1
static char RCSid[] = "@@(#)$Header$ (BRL)";
d22 1
a22 1
#if ! defined( BSD )
@
