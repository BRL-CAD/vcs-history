head	11.15;
access;
symbols
	ansi-20040405-merged:11.11.2.2
	postmerge-20040405-ansi:11.13
	premerge-20040404-ansi:11.12
	postmerge-autoconf:11.12
	autoconf-freeze:11.11.10.2
	premerge-autoconf:11.12
	postmerge-20040315-windows:11.12
	premerge-20040315-windows:11.12
	windows-20040315-freeze:11.11.4.1
	autoconf-20031203:11.11
	autoconf-20031202:11.11
	autoconf-branch:11.11.0.10
	phong-branch:11.11.0.8
	photonmap-branch:11.11.0.6
	rel-6-1-DP:11.11
	windows-branch:11.11.0.4
	rel-6-0-2:11.9
	ansi-branch:11.11.0.2
	rel-6-0-1-branch:11.9.0.2
	hartley-6-0-post:11.10
	hartley-6-0-pre:11.9
	rel-6-0-1:11.9
	rel-6-0:11.9
	rel-5-4:11.8
	offsite-5-3-pre:11.9
	rel-5-3:11.8
	rel-5-2:11.8
	rel-5-1-branch:11.8.0.2
	rel-5-1:11.8
	rel-5-0:11.8
	rel-5-0-beta:11.7
	rel-4-5:11.4
	ctj-4-5-post:11.4
	ctj-4-5-pre:11.4
	rel-4-4:11.1
	rel-4-0:10.1
	rel-3-5:9.1
	rel-3-0:8.1
	rel-2-3:7.1
	rel-2-0:6.1
	rel-1-24:5.1
	rel-1-20:4.2
	rel-1-10:4.1
	rt-2:2.1;
locks; strict;
comment	@ * @;


11.15
date	2004.05.21.17.31.10;	author morrison;	state dead;
branches;
next	11.14;

11.14
date	2004.05.10.15.30.49;	author erikg;	state Exp;
branches;
next	11.13;

11.13
date	2004.04.05.05.45.59;	author morrison;	state Exp;
branches;
next	11.12;

11.12
date	2004.02.02.17.39.39;	author morrison;	state Exp;
branches;
next	11.11;

11.11
date	2002.08.20.17.08.39;	author jra;	state Exp;
branches
	11.11.2.1
	11.11.4.1
	11.11.10.1;
next	11.10;

11.10
date	2002.08.15.20.55.50;	author hartley;	state Exp;
branches;
next	11.9;

11.9
date	2000.08.17.02.41.40;	author mike;	state Exp;
branches;
next	11.8;

11.8
date	99.07.02.22.19.46;	author mike;	state Exp;
branches;
next	11.7;

11.7
date	99.05.28.01.19.30;	author mike;	state Exp;
branches;
next	11.6;

11.6
date	98.09.22.00.21.02;	author mike;	state Exp;
branches;
next	11.5;

11.5
date	98.03.19.04.01.18;	author mike;	state Exp;
branches;
next	11.4;

11.4
date	96.08.30.00.08.21;	author butler;	state Exp;
branches;
next	11.3;

11.3
date	96.03.29.23.20.55;	author mike;	state Exp;
branches;
next	11.2;

11.2
date	95.12.06.17.57.53;	author pjt;	state Exp;
branches;
next	11.1;

11.1
date	95.01.04.10.01.28;	author mike;	state Rel4_4;
branches;
next	10.2;

10.2
date	94.08.11.02.46.55;	author gdurf;	state Exp;
branches;
next	10.1;

10.1
date	91.10.12.06.42.21;	author mike;	state Rel4_0;
branches;
next	9.6;

9.6
date	91.07.06.00.35.31;	author mike;	state Exp;
branches;
next	9.5;

9.5
date	91.02.20.00.51.34;	author mike;	state Exp;
branches;
next	9.4;

9.4
date	91.01.05.03.09.27;	author mike;	state Exp;
branches;
next	9.3;

9.3
date	90.12.12.16.35.20;	author butler;	state Exp;
branches;
next	9.2;

9.2
date	90.11.14.15.43.41;	author mike;	state Exp;
branches;
next	9.1;

9.1
date	89.05.19.05.59.59;	author mike;	state Rel3_5;
branches;
next	8.4;

8.4
date	89.04.04.05.02.32;	author mike;	state Exp;
branches;
next	8.3;

8.3
date	88.12.27.16.37.08;	author mike;	state Exp;
branches;
next	8.2;

8.2
date	88.12.15.03.45.00;	author phil;	state Exp;
branches;
next	8.1;

8.1
date	88.10.05.00.33.40;	author mike;	state Rel3_0;
branches;
next	7.5;

7.5
date	88.08.23.02.34.04;	author mike;	state Exp;
branches;
next	7.4;

7.4
date	88.05.21.01.15.39;	author phil;	state Exp;
branches;
next	7.3;

7.3
date	88.05.20.03.22.46;	author mike;	state Exp;
branches;
next	7.2;

7.2
date	88.05.14.02.28.35;	author mike;	state Exp;
branches;
next	7.1;

7.1
date	87.11.02.23.56.51;	author mike;	state Rel;
branches;
next	6.1;

6.1
date	87.07.11.07.59.38;	author mike;	state Rel;
branches;
next	5.1;

5.1
date	87.06.24.22.15.43;	author mike;	state Rel;
branches;
next	4.4;

4.4
date	87.05.30.07.04.22;	author mike;	state Exp;
branches;
next	4.3;

4.3
date	87.03.24.00.03.42;	author mike;	state Exp;
branches;
next	4.2;

4.2
date	87.02.13.00.03.02;	author mike;	state Exp;
branches;
next	4.1;

4.1
date	86.12.29.03.49.01;	author mike;	state Rel1;
branches;
next	3.8;

3.8
date	86.12.18.16.02.24;	author mike;	state Exp;
branches;
next	3.7;

3.7
date	86.11.25.03.37.44;	author mike;	state Exp;
branches;
next	3.6;

3.6
date	86.11.07.01.47.38;	author mike;	state Exp;
branches;
next	3.5;

3.5
date	86.08.12.05.51.09;	author mike;	state Exp;
branches;
next	3.4;

3.4
date	86.07.30.03.56.58;	author mike;	state Exp;
branches;
next	3.3;

3.3
date	86.07.24.17.03.40;	author mike;	state Exp;
branches;
next	3.2;

3.2
date	86.07.24.03.41.33;	author mike;	state Exp;
branches;
next	3.1;

3.1
date	86.07.17.18.44.00;	author mike;	state Exp;
branches;
next	3.0;

3.0
date	86.06.10.01.32.45;	author mike;	state Exp;
branches;
next	2.3;

2.3
date	86.06.09.21.50.04;	author mike;	state Exp;
branches;
next	2.2;

2.2
date	85.09.15.09.18.48;	author mike;	state Exp;
branches;
next	2.1;

2.1
date	85.08.31.06.08.27;	author mike;	state Exp;
branches;
next	;

11.11.2.1
date	2002.09.19.18.02.17;	author morrison;	state Exp;
branches;
next	11.11.2.2;

11.11.2.2
date	2004.03.17.21.23.01;	author morrison;	state Exp;
branches;
next	;

11.11.4.1
date	2004.03.11.23.48.08;	author morrison;	state Exp;
branches;
next	;

11.11.10.1
date	2004.02.12.19.37.14;	author erikg;	state Exp;
branches;
next	11.11.10.2;

11.11.10.2
date	2004.03.15.14.08.08;	author erikg;	state Exp;
branches;
next	;


desc
@Back-end for rtpp, to make GIFT-style Pretty Pictures.
@


11.15
log
@moved to src/rt/
@
text
@/*
 *			V I E W P P
 *
 *  Ray Tracing program RTPP bottom half.
 *
 *  This module takes the first hit from rt_shootray(), and produces
 *  GIFT format .PP (pretty picture) files
 *
 *  To make a picture out of a .PP file, use:
 *	pp-ik or
 *	pp-fb
 *
 *  Author -
 *	Michael John Muuss
 *  
 *  Source -
 *	SECAD/VLD Computing Consortium, Bldg 394
 *	The U. S. Army Ballistic Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005
 *  
 *  Copyright Notice -
 *	This software is Copyright (C) 1985-2004 by the United States Army.
 *	All rights reserved.
 */
#ifndef lint
static const char RCSppview[] = "@@(#)$Header: /n/xoff/cvs/brlcad/rt/viewpp.c,v 11.14 2004/05/10 15:30:49 erikg Exp $ (BRL)";
#endif

#ifdef HAVE_CONFIG_H
# include "config.h"
#endif



#include <stdio.h>
#include "machine.h"
#include "vmath.h"
#include "raytrace.h"

int		use_air = 0;		/* Handling of air in librt */

char usage[] = "\
Usage:  rtpp [options] model.g objects... >file.pp\n\
Options:\n\
 -s #		Grid size in pixels, default 512, max 1024\n\
 -a Az		Azimuth in degrees	(conflicts with -M)\n\
 -e Elev	Elevation in degrees	(conflicts with -M)\n\
 -M		Read model2view matrix on stdin (conflicts with -a, -e)\n\
 -x #		Set librt debug flags\n\
";

extern int	width;
extern int	height;

int		using_mlib = 0;		/* Material routines NOT used */

/* Viewing module specific "set" variables */
struct bu_structparse view_parse[] = {
	{"",	0, (char *)0,	0,	BU_STRUCTPARSE_FUNC_NULL }
};

/* Stuff for pretty-picture output format */
static struct soltab *last_solidp;	/* pointer to last solid hit */
static int last_item;			/* item number of last region hit */
static int last_ihigh;			/* last inten_high */
static int ntomiss;			/* number of pixels to miss */
static int col;				/* column; for PP 75 char/line crap */

void	view_pixel(void) {}
void	pknum(int arg);

/* Support for pretty-picture files */
int
pphit(register struct application *ap, struct partition *PartHeadp, struct seg *segHeadp)
{
	register struct partition *pp;
	register struct hit *hitp;
	LOCAL double cosI0;
	register int i,j;
	vect_t		normal;

	for( pp=PartHeadp->pt_forw; pp != PartHeadp; pp = pp->pt_forw )
		if( pp->pt_outhit->hit_dist >= 0.0 )  break;
	if( pp == PartHeadp )  {
		bu_log("pphit:  no hit out front?\n");
		return(0);
	}
	hitp = pp->pt_inhit;
	RT_HIT_NORMAL( normal, hitp, pp->pt_inseg->seg_stp, &(ap->a_ray), pp->pt_inflip );

#define pchar(c) {putc(c,stdout);if(col++==74){putc('\n',stdout);col=0;}}

	cosI0 = -VDOT(normal, ap->a_ray.r_dir);
	if( pp->pt_inflip )
		cosI0 = -cosI0;
	if( cosI0 <= 0.0 )  {
		ntomiss++;
		return(0);
	}
	if( ntomiss > 0 )  {
		pchar(' ');	/* miss target cmd */
		pknum( ntomiss );
		ntomiss = 0;
		last_solidp = SOLTAB_NULL;
	}
	if( last_item != pp->pt_regionp->reg_regionid )  {
		last_item = pp->pt_regionp->reg_regionid;
		pchar( '#' );	/* new item cmd */
		pknum( last_item );
		last_solidp = SOLTAB_NULL;
	}
	if( last_solidp != pp->pt_inseg->seg_stp )  {
		last_solidp = pp->pt_inseg->seg_stp;
		pchar( '!' );		/* new solid cmd */
	}
	i = cosI0 * 255.0;		/* integer angle */
	j = (i>>5) & 07;
	if( j != last_ihigh )  {
		last_ihigh = j;
		pchar( '0'+j );		/* new inten high */
	}
	j = i & 037;
	pchar( '@@'+j );			/* low bits of pixel */
	return(1);
}

int
ppmiss(struct application *ap)
{
	last_solidp = SOLTAB_NULL;
	ntomiss++;
	return(0);
}

void
view_eol(void)
{
	pchar( '.' );		/* End of scanline */
	last_solidp = SOLTAB_NULL;
	ntomiss = 0;
}

/*
 *  Called when the picture is finally done.
 */
void
view_end(void)
{
	fprintf( stdout, "/\n" );	/* end of view */
	fflush( stdout );
}

/*
 *  			P K N U M
 *  
 *  Oddball 5-bits in a char ('@@', 'A', ... on up) number packing.
 *  Number is written 5 bits at a time, right to left (low to high)
 *  until there are no more non-zero bits remaining.
 */
void
pknum(int arg)
{
	register long i = arg;

	do {
		pchar( (int)('@@'+(i & 037)) );
		i >>= 5;
	} while( i > 0 );
}

/*
 *  			V I E W _ I N I T
 */
int
view_init(register struct application *ap, char *file, char *obj, int minus_o)
{
	extern double azimuth, elevation;

	ap->a_hit = pphit;
	ap->a_miss = ppmiss;
	ap->a_onehit = 1;

	if( !minus_o )
		fprintf(stderr,"Warning:  -o ignored, .PP goes to stdout\n");

	fprintf(stdout, "%s: %s (RT)\n", file, obj );
	fprintf(stdout, "%10d%10d", (int)azimuth, (int)elevation );
	fprintf(stdout, "%10d%10d\n", width, height );
	return(0);		/* no framebuffer needed */
}

void	view_2init(void) {;}

void	view_setup(void) {}
void	view_cleanup(void) {}

void application_init (void) {}
@


11.14
log
@change conf.h to a wrapped config.h
@
text
@d26 1
a26 1
static const char RCSppview[] = "@@(#)$Header: /cvs/brlcad/rt/viewpp.c,v 11.13 2004/04/05 05:45:59 morrison Exp $ (BRL)";
@


11.13
log
@merge of ansi-6-0-branch into head
@
text
@d26 1
a26 1
static const char RCSppview[] = "@@(#)$Header$ (BRL)";
d29 5
a33 1
#include "conf.h"
@


11.12
log
@update copyright to include span through 2003
@
text
@d26 1
a26 1
static const char RCSppview[] = "@@(#)$Header: /c/CVS/brlcad/rt/viewpp.c,v 11.11 2002/08/20 17:08:39 jra Exp $ (BRL)";
d65 2
a66 2
void	view_pixel() {}
void	pknum();
d70 1
a70 4
pphit( ap, PartHeadp, segHeadp )
register struct application *ap;
struct partition *PartHeadp;
struct seg	*segHeadp;
d124 1
a124 2
ppmiss(ap)
struct application *ap;
d132 1
a132 1
view_eol()
d143 1
a143 1
view_end()
d157 1
a157 2
pknum( arg )
int arg;
d171 1
a171 3
view_init( ap, file, obj, minus_o )
register struct application *ap;
char *file, *obj;
d188 1
a188 1
void	view_2init()  {;}
d190 2
a191 2
void	view_setup() {}
void	view_cleanup() {}
d193 1
a193 1
void application_init () {}
@


11.11
log
@Restoration of entire source tree to Pre-Hartley state
@
text
@d22 1
a22 1
 *	This software is Copyright (C) 1985 by the United States Army.
d26 1
a26 1
static const char RCSppview[] = "@@(#)$Header: /c/CVS/brlcad/rt/viewpp.c,v 11.9 2000/08/17 02:41:40 mike Exp $ (BRL)";
@


11.11.4.1
log
@sync to HEAD...
@
text
@d22 1
a22 1
 *	This software is Copyright (C) 1985-2004 by the United States Army.
d26 1
a26 1
static const char RCSppview[] = "@@(#)$Header: /n/cad/c/CVS/brlcad/rt/viewpp.c,v 11.12 2004/02/02 17:39:39 morrison Exp $ (BRL)";
@


11.11.10.1
log
@merge from HEAD
@
text
@d22 1
a22 1
 *	This software is Copyright (C) 1985-2004 by the United States Army.
d26 1
a26 1
static const char RCSppview[] = "@@(#)$Header: /c/CVS/brlcad/rt/viewpp.c,v 11.12 2004/02/02 17:39:39 morrison Exp $ (BRL)";
@


11.11.10.2
log
@merge from head
@
text
@d26 1
a26 1
static const char RCSppview[] = "@@(#)$Header: /c/CVS/brlcad/rt/viewpp.c,v 11.11.10.1 2004/02/12 19:37:14 erikg Exp $ (BRL)";
@


11.11.2.1
log
@Initial ANSIfication
@
text
@d26 1
a26 1
static const char RCSppview[] = "@@(#)$Header: /c/CVS/brlcad/rt/viewpp.c,v 11.11 2002/08/20 17:08:39 jra Exp $ (BRL)";
d65 2
a66 2
void	view_pixel(void) {}
void	pknum(int arg);
d70 4
a73 1
pphit(register struct application *ap, struct partition *PartHeadp, struct seg *segHeadp)
d127 2
a128 1
ppmiss(struct application *ap)
d136 1
a136 1
view_eol(void)
d147 1
a147 1
view_end(void)
d161 2
a162 1
pknum(int arg)
d176 3
a178 1
view_init(register struct application *ap, char *file, char *obj, int minus_o)
d195 1
a195 1
void	view_2init(void) {;}
d197 2
a198 2
void	view_setup(void) {}
void	view_cleanup(void) {}
d200 1
a200 1
void application_init (void) {}
@


11.11.2.2
log
@sync branch with HEAD
@
text
@d22 1
a22 1
 *	This software is Copyright (C) 1985-2004 by the United States Army.
d26 1
a26 1
static const char RCSppview[] = "@@(#)$Header$ (BRL)";
@


11.10
log
@Converted from K&R to ANSI C - RFH
@
text
@d65 2
a66 2
void	view_pixel(void) {}
void	pknum(int arg);
d70 4
a73 1
pphit(register struct application *ap, struct partition *PartHeadp, struct seg *segHeadp)
d127 2
a128 1
ppmiss(struct application *ap)
d136 1
a136 1
view_eol(void)
d147 1
a147 1
view_end(void)
d161 2
a162 1
pknum(int arg)
d176 3
a178 1
view_init(register struct application *ap, char *file, char *obj, int minus_o)
d195 1
a195 1
void	view_2init(void) {;}
d197 2
a198 2
void	view_setup(void) {}
void	view_cleanup(void) {}
d200 1
a200 1
void application_init (void) {}
@


11.9
log
@
Added "const" to RCSid, to quiet Gnu C compilers.
@
text
@d26 1
a26 1
static const char RCSppview[] = "@@(#)$Header: /c/CVS/brlcad/rt/viewpp.c,v 11.8 1999/07/02 22:19:46 mike Exp $ (BRL)";
d65 2
a66 2
void	view_pixel() {}
void	pknum();
d70 1
a70 4
pphit( ap, PartHeadp, segHeadp )
register struct application *ap;
struct partition *PartHeadp;
struct seg	*segHeadp;
d124 1
a124 2
ppmiss(ap)
struct application *ap;
d132 1
a132 1
view_eol()
d143 1
a143 1
view_end()
d157 1
a157 2
pknum( arg )
int arg;
d171 1
a171 3
view_init( ap, file, obj, minus_o )
register struct application *ap;
char *file, *obj;
d188 1
a188 1
void	view_2init()  {;}
d190 2
a191 2
void	view_setup() {}
void	view_cleanup() {}
d193 1
a193 1
void application_init () {}
@


11.8
log
@
Removed dependence on compat4.h
@
text
@d26 1
a26 1
static char RCSppview[] = "@@(#)$Header: /c/CVS/brlcad/rt/viewpp.c,v 11.7 1999/05/28 01:19:30 mike Exp $ (BRL)";
@


11.7
log
@
sed4
@
text
@d26 1
a26 1
static char RCSppview[] = "@@(#)$Header: /c/CVS/brlcad/rt/viewpp.c,v 11.6 1998/09/22 00:21:02 mike Exp $ (BRL)";
d55 1
a55 1
	{"",	0, (char *)0,	0,	FUNC_NULL }
@


11.6
log
@Doesn't need material.h
@
text
@d26 1
a26 1
static char RCSppview[] = "@@(#)$Header: /c/CVS/brlcad/rt/viewpp.c,v 11.5 1998/03/19 04:01:18 mike Exp $ (BRL)";
d84 1
a84 1
		rt_log("pphit:  no hit out front?\n");
@


11.5
log
@Fixed a_hit, a_miss args
@
text
@d26 1
a26 1
static char RCSppview[] = "@@(#)$Header: /m/cad/rt/RCS/viewpp.c,v 11.4 1996/08/30 00:08:21 butler Exp mike $ (BRL)";
a34 1
#include "./material.h"
@


11.4
log
@structparse moved to libbu
@
text
@d26 1
a26 1
static char RCSppview[] = "@@(#)$Header: /m/cad/rt/RCS/viewpp.c,v 11.3 1996/03/29 23:20:55 mike Exp butler $ (BRL)";
d71 1
a71 1
pphit( ap, PartHeadp )
d74 1
d128 3
a130 1
ppmiss()  {
@


11.3
log
@Changed from RT_HIT_NORM() to RT_HIT_NORMAL().
Now pt_inflip stuff is always handled correctly.
@
text
@d26 1
a26 1
static char RCSppview[] = "@@(#)$Header: /m/cad/rt/RCS/viewpp.c,v 11.2 1995/12/06 17:57:53 pjt Exp mike $ (BRL)";
d55 1
a55 1
struct structparse view_parse[] = {
@


11.2
log
@Added a stub for application_init()
@
text
@d26 1
a26 1
static char RCSppview[] = "@@(#)$Header: /m/cad/rt/RCS/viewpp.c,v 11.1 1995/01/04 10:01:28 mike Rel4_4 pjt $ (BRL)";
d79 1
d88 1
a88 1
	RT_HIT_NORM( hitp, pp->pt_inseg->seg_stp, &(ap->a_ray) );
d92 1
a92 1
	cosI0 = -VDOT(hitp->hit_normal, ap->a_ray.r_dir);
@


11.1
log
@Release_4.4
@
text
@d26 1
a26 1
static char RCSppview[] = "@@(#)$Header: /m/cad/rt/RCS/viewpp.c,v 10.2 94/08/11 02:46:55 gdurf Exp $ (BRL)";
d196 2
@


10.2
log
@Added include of conf.h
@
text
@d26 1
a26 1
static char RCSppview[] = "@@(#)$Header: /m/cad/rt/RCS/viewpp.c,v 10.1 1991/10/12 06:42:21 mike Rel4_0 gdurf $ (BRL)";
@


10.1
log
@Release_4.0
@
text
@d26 1
a26 1
static char RCSppview[] = "@@(#)$Header: /m/cad/rt/RCS/viewpp.c,v 9.6 91/07/06 00:35:31 mike Exp $ (BRL)";
d28 2
@


9.6
log
@ANSI structure initialization
@
text
@d26 1
a26 1
static char RCSppview[] = "@@(#)$Header: /m/cad/rt/RCS/viewpp.c,v 9.5 91/02/20 00:51:34 mike Exp $ (BRL)";
@


9.5
log
@Added new view-module interface called view_setup() which is used
for initializing material properties, lights, etc.
It compliments view_cleanup(), and finally removed knowledge of
the view.c materials (and all the shaders) from the RT "top half".
@
text
@d26 1
a26 1
static char RCSppview[] = "@@(#)$Header: /m/cad/rt/RCS/viewpp.c,v 9.4 91/01/05 03:09:27 mike Exp $ (BRL)";
d54 1
a54 1
	"",	0, (char *)0,	0,	FUNC_NULL
@


9.4
log
@Converted to new format for fmt entry in structparse
@
text
@d26 1
a26 1
static char RCSppview[] = "@@(#)$Header: /m/cad/rt/RCS/viewpp.c,v 9.3 90/12/12 16:35:20 butler Exp $ (BRL)";
d192 1
@


9.3
log
@modified to reflect changes in structparse format
@
text
@d26 1
a26 1
static char RCSppview[] = "@@(#)$Header: /m/cad/rt/RCS/viewpp.c,v 9.2 90/11/14 15:43:41 mike Exp $ (BRL)";
d54 1
a54 1
	(char *)0, 0, (char *)0,	0,	FUNC_NULL
@


9.2
log
@As part of "clean" command, call "view_cleanup()", to allow
viewing module the opportunity to clean up things like implicit
light sources, etc.
@
text
@d26 1
a26 1
static char RCSppview[] = "@@(#)$Header: /m/cad/rt/RCS/viewpp.c,v 9.1 89/05/19 05:59:59 mike Rel3_5 $ (BRL)";
d54 1
a54 1
	(char *)0,(char *)0,	0,			FUNC_NULL
@


9.1
log
@Release_3.5
@
text
@d26 1
a26 1
static char RCSppview[] = "@@(#)$Header: viewpp.c,v 8.4 89/04/04 05:02:32 mike Exp $ (BRL)";
d191 2
@


8.4
log
@Converted to new way of representing structure offsets.
@
text
@d26 1
a26 1
static char RCSppview[] = "@@(#)$Header: viewpp.c,v 8.3 88/12/27 16:37:08 mike Locked $ (BRL)";
@


8.3
log
@Converted matparse --> structparse
@
text
@d26 1
a26 1
static char RCSppview[] = "@@(#)$Header: viewpp.c,v 8.2 88/12/15 03:45:00 mike Locked $ (BRL)";
d54 1
a54 1
	(char *)0,(char *)0,	(stroff_t)0,				FUNC_NULL
@


8.2
log
@removed ireflect, bounce stubs.  put in view_parse stub instead.
@
text
@d26 1
a26 1
static char RCSppview[] = "@@(#)$Header: viewpp.c,v 8.2 88/12/15 03:31:02 phil Exp $ (BRL)";
d53 2
a54 2
struct matparse view_parse[] = {
	(char *)0,	(mp_off_ty)0,				(char *)0
@


8.1
log
@Release_3.0
@
text
@d26 1
a26 1
static char RCSppview[] = "@@(#)$Header: viewpp.c,v 7.5 88/08/23 02:34:04 mike Exp $ (BRL)";
d33 1
d51 5
a55 2
int		max_bounces;		/* stub for "set" cmd */
int		max_ireflect;		/* stub for "set" cmd */
@


7.5
log
@Added declarations of using_mlib=0,
added max_bounces stub variables, to keep "set" command happy,
deleted stub mlib_setup(), mlib_free() stubs.
@
text
@d26 1
a26 1
static char RCSppview[] = "@@(#)$Header: viewpp.c,v 7.4 88/05/21 01:15:39 mike Locked $ (BRL)";
@


7.4
log
@expunged the -f flag
@
text
@d26 1
a26 1
static char RCSppview[] = "@@(#)$Header: viewpp.c,v 7.3 88/05/20 03:22:46 phil Locked $ (BRL)";
d49 4
a186 4

int	mlib_setup() { return(1); }

void	mlib_free() { ; }
@


7.3
log
@Added use_air variable.
@
text
@d26 1
a26 1
static char RCSppview[] = "@@(#)$Header: viewpp.c,v 7.2 88/05/14 02:28:35 mike Locked $ (BRL)";
d39 1
a39 1
 -f #		Grid size in pixels, default 512, max 1024\n\
@


7.2
log
@lint fixes
@
text
@d26 1
a26 1
static char RCSppview[] = "@@(#)$Header: viewpp.c,v 7.1 87/11/02 23:56:51 mike Locked $ (BRL)";
d33 2
@


7.1
log
@Release 2.3
@
text
@d26 1
a26 1
static char RCSppview[] = "@@(#)$Header: viewpp.c,v 6.1 87/07/11 07:59:38 mike Rel $ (BRL)";
d54 2
a55 1
view_pixel() {}
d120 1
d131 1
d145 1
d160 1
d180 1
a180 1
view_2init()  {;}
d182 1
a182 1
mlib_setup() { return(1); }
d184 1
a184 1
mlib_free() { ; }
@


6.1
log
@Release 2.0
@
text
@d26 1
a26 1
static char RCSppview[] = "@@(#)$Header: viewpp.c,v 5.1 87/06/24 22:15:43 mike Rel $ (BRL)";
@


5.1
log
@Release 1.24
@
text
@d26 1
a26 1
static char RCSppview[] = "@@(#)$Header: viewpp.c,v 4.4 87/05/30 07:04:22 mike Exp $ (BRL)";
@


4.4
log
@Added code for non-square views, single pixel (-b) debugging.
@
text
@d26 1
a26 1
static char RCSppview[] = "@@(#)$Header: viewpp.c,v 4.3 87/03/24 00:03:42 mike Locked $ (BRL)";
@


4.3
log
@Added stub
@
text
@d26 1
a26 1
static char RCSppview[] = "@@(#)$Header: viewpp.c,v 4.2 87/02/13 00:03:02 mike Locked $ (BRL)";
d44 3
d156 1
a156 1
view_init( ap, file, obj, npts, minus_o )
d171 1
a171 1
	fprintf(stdout, "%10d%10d\n", npts, npts );
@


4.2
log
@Release 1.20 -- First Formal Release
@
text
@d26 1
a26 1
static char RCSppview[] = "@@(#)$Header: viewpp.c,v 4.1 86/12/29 03:49:01 mike Rel1 $ (BRL)";
d175 2
@


4.1
log
@BRL CAD Distribution Release 1.10
@
text
@d26 1
a26 1
static char RCSppview[] = "@@(#)$Header: viewpp.c,v 3.8 86/12/18 16:02:24 mike Locked $ (BRL)";
@


3.8
log
@rdebug.h separated from librt/debug.h
@
text
@d26 1
a26 1
static char RCSppview[] = "@@(#)$Header: viewpp.c,v 3.7 86/11/25 03:37:44 mike Locked $ (BRL)";
@


3.7
log
@Updated usage message,
fb_open moved to rt.c
@
text
@d26 1
a26 1
static char RCSppview[] = "@@(#)$Header: viewpp.c,v 3.6 86/11/07 01:47:38 mike Locked $ (BRL)";
d41 1
a41 1
 -x #		Set debug flags\n\
@


3.6
log
@Changed to perform RT_HIT_NORM() macros where hit_point and hit_norm
are needed.
@
text
@d26 1
a26 1
static char RCSppview[] = "@@(#)$Header: viewpp.c,v 3.5 86/08/12 05:51:09 mike Exp $ (BRL)";
d37 3
a39 3
 -f#		Grid size in pixels, default 512, max 1024\n\
 -aAz		Azimuth in degrees	(conflicts with -M)\n\
 -eElev		Elevation in degrees	(conflicts with -M)\n\
d41 1
a41 1
 -x#		Set debug flags\n\
d169 1
@


3.5
log
@Changed to find #include files with CC -I../h
@
text
@d26 1
a26 1
static char RCSppview[] = "@@(#)$Header: viewpp.c,v 3.4 86/07/30 03:56:58 mike Exp $ (BRL)";
d71 1
@


3.4
log
@Added stub for mlib_setup()
@
text
@d26 1
a26 1
static char RCSppview[] = "@@(#)$Header: viewpp.c,v 3.3 86/07/24 17:03:40 mike Exp $ (BRL)";
d30 3
a32 3
#include "../h/machine.h"
#include "../h/vmath.h"
#include "../h/raytrace.h"
@


3.3
log
@Added return codes.
@
text
@d26 1
a26 1
static char RCSppview[] = "@@(#)$Header: viewpp.c,v 3.2 86/07/24 03:41:33 mike Exp $ (BRL)";
d171 2
@


3.2
log
@Added checking for partitions which end behind the eye.
@
text
@d26 1
a26 1
static char RCSppview[] = "@@(#)$Header: viewpp.c,v 3.1 86/07/17 18:44:00 mike Exp $ (BRL)";
d54 1
d79 1
a79 1
		return;
d105 1
d108 1
d112 1
@


3.1
log
@Changed RCSid symbol to be unique, for Cray bulk-loading.
@
text
@d26 1
a26 1
static char RCSppview[] = "@@(#)$Header: viewpp.c,v 3.0 86/06/10 01:32:45 mike Exp $ (BRL)";
d58 2
a59 2
	register struct partition *pp = PartHeadp->pt_forw;
	register struct hit *hitp= pp->pt_inhit;
d62 8
@


3.0
log
@rt/ and librt/ separated,
global datastructures simplified.
@
text
@d26 1
a26 1
static char RCSid[] = "@@(#)$Header: viewpp.c,v 2.3 86/06/09 21:50:04 mike Exp $ (BRL)";
@


2.3
log
@rt and librt separated
@
text
@d6 1
a6 1
 *  This module takes the first hit from shootray(), and produces
d26 1
a26 1
static char RCSid[] = "@@(#)$Header: viewpp.c,v 2.2 85/09/15 09:18:48 mike Exp $ (BRL)";
@


2.2
log
@Modified handling of "-o" so that each frame of a multi-frame
sequence is stored in a separate file.
@
text
@d26 1
a26 1
static char RCSid[] = "@@(#)$Header: viewpp.c,v 2.1 85/08/31 06:08:27 mike Exp $ (BRL)";
d32 1
a32 2
#include "raytrace.h"
#include "debug.h"
@


2.1
log
@Version 2 of RT
@
text
@d26 1
a26 1
static char RCSid[] = "@@(#)$Header: view.c,v 1.26 85/07/30 05:56:34 mike Exp $ (BRL)";
d141 1
a141 1
view_init( ap, file, obj, npts, outfd )
d151 1
a151 1
	if( outfd > 0 )
@
