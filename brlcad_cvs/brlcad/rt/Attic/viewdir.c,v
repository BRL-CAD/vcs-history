head	11.14;
access;
symbols
	ansi-20040405-merged:11.10.2.2
	postmerge-20040405-ansi:11.12
	premerge-20040404-ansi:11.11
	postmerge-autoconf:11.11
	autoconf-freeze:11.10.10.2
	premerge-autoconf:11.11
	postmerge-20040315-windows:11.11
	premerge-20040315-windows:11.11
	windows-20040315-freeze:11.10.4.1
	autoconf-20031203:11.10
	autoconf-20031202:11.10
	autoconf-branch:11.10.0.10
	phong-branch:11.10.0.8
	photonmap-branch:11.10.0.6
	rel-6-1-DP:11.10
	windows-branch:11.10.0.4
	rel-6-0-2:11.8
	ansi-branch:11.10.0.2
	rel-6-0-1-branch:11.8.0.2
	hartley-6-0-post:11.9
	hartley-6-0-pre:11.8
	rel-6-0-1:11.8
	rel-6-0:11.8
	rel-5-4:11.6
	offsite-5-3-pre:11.8
	rel-5-3:11.6
	rel-5-2:11.6
	rel-5-1-branch:11.6.0.2
	rel-5-1:11.6
	rel-5-0:11.6
	rel-5-0-beta:11.5
	rel-4-5:11.3
	ctj-4-5-post:11.3
	ctj-4-5-pre:11.3
	rel-4-4:11.1;
locks; strict;
comment	@ * @;


11.14
date	2004.05.21.17.31.09;	author morrison;	state dead;
branches;
next	11.13;

11.13
date	2004.05.10.15.30.49;	author erikg;	state Exp;
branches;
next	11.12;

11.12
date	2004.04.05.05.45.59;	author morrison;	state Exp;
branches;
next	11.11;

11.11
date	2004.02.02.17.39.39;	author morrison;	state Exp;
branches;
next	11.10;

11.10
date	2002.08.20.17.08.39;	author jra;	state Exp;
branches
	11.10.2.1
	11.10.4.1
	11.10.10.1;
next	11.9;

11.9
date	2002.08.15.20.55.50;	author hartley;	state Exp;
branches;
next	11.8;

11.8
date	2000.08.17.02.41.39;	author mike;	state Exp;
branches;
next	11.7;

11.7
date	2000.07.25.16.39.48;	author butler;	state Exp;
branches;
next	11.6;

11.6
date	99.07.02.22.19.46;	author mike;	state Exp;
branches;
next	11.5;

11.5
date	99.05.28.01.19.28;	author mike;	state Exp;
branches;
next	11.4;

11.4
date	98.09.22.00.21.29;	author mike;	state Exp;
branches;
next	11.3;

11.3
date	96.08.30.00.08.21;	author butler;	state Exp;
branches;
next	11.2;

11.2
date	95.12.06.17.57.53;	author pjt;	state Exp;
branches;
next	11.1;

11.1
date	95.01.04.10.01.24;	author mike;	state Rel4_4;
branches;
next	1.1;

1.1
date	94.08.11.02.45.30;	author gdurf;	state Exp;
branches;
next	;

11.10.2.1
date	2002.09.19.18.02.16;	author morrison;	state Exp;
branches;
next	11.10.2.2;

11.10.2.2
date	2004.03.17.21.23.01;	author morrison;	state Exp;
branches;
next	;

11.10.4.1
date	2004.03.11.23.48.07;	author morrison;	state Exp;
branches;
next	;

11.10.10.1
date	2004.02.12.19.37.14;	author erikg;	state Exp;
branches;
next	11.10.10.2;

11.10.10.2
date	2004.03.15.14.08.07;	author erikg;	state Exp;
branches;
next	;


desc
@Added include of conf.h
@


11.14
log
@moved to src/rt/
@
text
@/*
 *			V I E W_ R A Y_D I R E C T I O N
 *
 *  RT-View-Module for printing out the hit point of a ray and the ray's
 *  direction on a user-specified grid.
 *  
 *  
 *  
 *  
 *  Author -
 *	Susanne L. Muuss, J.D.
 *  
 *  Source -
 *	SECAD/VLD Computing Consortium, Bldg 394
 *	The U. S. Army Ballistic Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005
 *  
 *  Copyright Notice -
 *	This software is Copyright (C) 1993-2004 by the United States Army.
 *	All rights reserved.
 */


#ifndef lint
static const char RCSraydir[] = "@@(#)$Header: /n/xoff/cvs/brlcad/rt/viewdir.c,v 11.13 2004/05/10 15:30:49 erikg Exp $";
#endif

#ifdef HAVE_CONFIG_H
# include "config.h"
#endif



#include <stdio.h>
#include <math.h>

#include "machine.h"
#include "vmath.h"
#include "raytrace.h"
#include "./ext.h"
#include "rtprivate.h"


extern	int	width;			/* # of pixels in X; picture width */
extern int	npsw;			/* number of worker PSWs to run */



int		use_air = 0;		/* Internal air recognition is off */

int		using_mlib = 0;		/* Material routines NOT used */

/* Viewing module specific "set" variables */
struct bu_structparse view_parse[] = {
	{"",	0, (char *)0,	0,	BU_STRUCTPARSE_FUNC_NULL }
};


char usage[] = "\
Usage:  rtrange [options] model.g objects... >file.ray\n\
Options:\n\
 -s #		Grid size in pixels, default 512\n\
 -a Az		Azimuth in degrees	(conflicts with -M)\n\
 -e Elev	Elevation in degrees	(conflicts with -M)\n\
 -M		Read model2view matrix on stdin (conflicts with -a, -e)\n\
 -o model.g	Specify output file (default=stdout)\n\
 -U #		Set use_air boolean to # (default=1)\n\
 -x #		Set librt debug flags\n\
";

int	rayhit(register struct application *ap, struct partition *PartHeadp), raymiss(register struct application *ap);

/*
 *  			V I E W _ I N I T
 *
 *  This routine is called by main().  It initializes the entire run, i.e.,
 *  it does things such as opening files, etc., which must be done before
 *  any other computations take place.  It is called only once per run.
 *  Pointers to rayhit() and raymiss() are set up and are later called from
 *  do_run().
 *  
 */

int
view_init(register struct application *ap, char *file, char *obj, int minus_o)
{

	ap->a_hit = rayhit;
	ap->a_miss = raymiss;
	ap->a_onehit = 1;		/* only the first hit is considered */

	output_is_binary = 0;		/* output is not binary */

	return(0);			/* No framebuffer needed */
}

/*
 *			V I E W _ 2 I N I T
 *
 *  A null-function.
 *  View_2init is called by do_frame(), which in turn is called by
 *  main() in rt.c.  This routine is called once per frame.  Static
 *  images only have one frame.  Animations have MANY frames, and bounding
 *  boxes, for example, need to be computed once per frame.
 *  Never preclude a new and nifty animation: rule: if it's a variable, it can
 *  change from frame to frame ( frame/picture width; angle between surface
 *  normals triggering shading.... etc).
 */

void
view_2init(struct application *ap)
{
	if( outfp == NULL )
		rt_bomb("outfp is NULL\n");

	/*
	 *  For now, RTVIEWDIR does not operate in parallel, while ray-tracing.
	 *  However, not dropping out of parallel mode here permits
	 *  tree walking and database prepping to still be done in parallel.
	 */
	if( npsw >= 1 )  {
		bu_log("Note: changing from %d cpus to 1 cpu\n", npsw );
		npsw = 1;		/* Disable parallel processing */
	}


}


/*
 *			R A Y M I S S
 *
 *  This function is called by rt_shootray(), which is called by
 *  do_frame(). Records coordinates where a miss is detected.
 */

int
raymiss(register struct application *ap)
{

	struct	cell	*posp;		/* store the current cell position */

	/* Getting defensive.... just in case. */
	if(ap->a_x > width)  {
		rt_bomb("raymiss: pixels exceed width\n");
	}



	return(0);
}

/*
 *			V I E W _ P I X E L
 *
 *  This routine is called from do_run(), and in this case does nothing.
 */

void
view_pixel(void)
{
	return;
}

void view_setup(void) {}
void view_cleanup(void) {}


/*
 *			R A Y H I T
 *
 *  Rayhit() is called by rt_shootray() when a hit is detected.  It
 *  computes the hit distance, the distance traveled by the
 *  ray, and the direction vector.
 *  
 */

 int
rayhit(struct application *ap, register struct partition *PartHeadp)
{
	register struct partition *pp = PartHeadp->pt_forw;

	if( pp == PartHeadp )
		return(0);		/* nothing was actually hit?? */


	/* Getting defensive.... just in case. */
	if(ap->a_x > width)  {
		rt_bomb("rayhit: pixels exceed width\n");
	}


	/* Calculate the hit distance and the direction vector.  This is done
	 * by VJOIN1(hitp->hit_point, rp->r_pt, hitp->hit_dist, rp->r_dir).
	 */

	VJOIN1(pp->pt_inhit->hit_point, ap->a_ray.r_pt,
		pp->pt_inhit->hit_dist, ap->a_ray.r_dir);

	/* Print the information onto stdout.  The first three numbers are
	 * ray impact coordinates, and the next three numbers are the ray
	 * direction.  The line must be semi-colon terminated so that
	 * the output can be read by "miss" for use with PCAVAM.
	 */

	fprintf(stdout, "%g %g %g %g %g %g;\n", 
	    pp->pt_inhit->hit_point[0], pp->pt_inhit->hit_point[1], pp->pt_inhit->hit_point[2], 
            ap->a_ray.r_dir[0], ap->a_ray.r_dir[1], ap->a_ray.r_dir[2]);



	return(0);
}

/*
 *			V I E W _ E O L
 *
 *  View_eol() is called by rt_shootray() in do_run().
 *  This routine is called by worker.c whenever there is a full scanline.
 *  worker.c figures out what is a full scanline.  Whenever there
 *  is a full buffer in memory, the hit distances ar plotted.
 */

void	view_eol(struct application *ap)
{
 

}


/*
 *			V I E W _ E N D
 *
 *  View_end() is called by rt_shootray in do_run().
 */

void
view_end(struct application *ap)
{

	fflush(outfp);
}


void application_init (void) {}
@


11.13
log
@change conf.h to a wrapped config.h
@
text
@d25 1
a25 1
static const char RCSraydir[] = "@@(#)$Header: /cvs/brlcad/rt/viewdir.c,v 11.12 2004/04/05 05:45:59 morrison Exp $";
@


11.12
log
@merge of ansi-6-0-branch into head
@
text
@d25 1
a25 1
static const char RCSraydir[] = "@@(#)$Header$";
d28 5
a32 1
#include "conf.h"
@


11.11
log
@update copyright to include span through 2003
@
text
@d25 1
a25 1
static const char RCSraydir[] = "@@(#)$Header: /c/CVS/brlcad/rt/viewdir.c,v 11.10 2002/08/20 17:08:39 jra Exp $";
d67 1
a67 1
int	rayhit(), raymiss();
d81 1
a81 3
view_init( ap, file, obj, minus_o )
register struct application *ap;
char *file, *obj;
d107 1
a107 2
view_2init( ap )
struct application	*ap;
d134 1
a134 2
raymiss( ap )
register struct application	*ap;
d156 1
a156 1
view_pixel()
d161 2
a162 2
void view_setup() {}
void view_cleanup() {}
d175 1
a175 3
rayhit( ap, PartHeadp )
struct application *ap;
register struct partition *PartHeadp;
d220 1
a220 3
void	view_eol(ap)
struct application *ap;

d234 1
a234 2
view_end(ap)
struct application *ap;
d241 1
a241 1
void application_init () {}
@


11.10
log
@Restoration of entire source tree to Pre-Hartley state
@
text
@d19 1
a19 1
 *	This software is Copyright (C) 1993 by the United States Army.
d25 1
a25 1
static const char RCSraydir[] = "@@(#)$Header: /c/CVS/brlcad/rt/viewdir.c,v 11.8 2000/08/17 02:41:39 mike Exp $";
@


11.10.4.1
log
@sync to HEAD...
@
text
@d19 1
a19 1
 *	This software is Copyright (C) 1993-2004 by the United States Army.
d25 1
a25 1
static const char RCSraydir[] = "@@(#)$Header: /n/cad/c/CVS/brlcad/rt/viewdir.c,v 11.11 2004/02/02 17:39:39 morrison Exp $";
@


11.10.10.1
log
@merge from HEAD
@
text
@d19 1
a19 1
 *	This software is Copyright (C) 1993-2004 by the United States Army.
d25 1
a25 1
static const char RCSraydir[] = "@@(#)$Header: /c/CVS/brlcad/rt/viewdir.c,v 11.11 2004/02/02 17:39:39 morrison Exp $";
@


11.10.10.2
log
@merge from head
@
text
@d25 1
a25 1
static const char RCSraydir[] = "@@(#)$Header: /c/CVS/brlcad/rt/viewdir.c,v 11.10.10.1 2004/02/12 19:37:14 erikg Exp $";
@


11.10.2.1
log
@Initial ANSIfication
@
text
@d25 1
a25 1
static const char RCSraydir[] = "@@(#)$Header: /c/CVS/brlcad/rt/viewdir.c,v 11.10 2002/08/20 17:08:39 jra Exp $";
d67 1
a67 1
int	rayhit(register struct application *ap, struct partition *PartHeadp), raymiss(register struct application *ap);
d81 3
a83 1
view_init(register struct application *ap, char *file, char *obj, int minus_o)
d109 2
a110 1
view_2init(struct application *ap)
d137 2
a138 1
raymiss(register struct application *ap)
d160 1
a160 1
view_pixel(void)
d165 2
a166 2
void view_setup(void) {}
void view_cleanup(void) {}
d179 3
a181 1
rayhit(struct application *ap, register struct partition *PartHeadp)
d226 3
a228 1
void	view_eol(struct application *ap)
d242 2
a243 1
view_end(struct application *ap)
d250 1
a250 1
void application_init (void) {}
@


11.10.2.2
log
@sync branch with HEAD
@
text
@d19 1
a19 1
 *	This software is Copyright (C) 1993-2004 by the United States Army.
d25 1
a25 1
static const char RCSraydir[] = "@@(#)$Header$";
@


11.9
log
@Converted from K&R to ANSI C - RFH
@
text
@d67 1
a67 1
int	rayhit(register struct application *ap, struct partition *PartHeadp), raymiss(register struct application *ap);
d81 3
a83 1
view_init(register struct application *ap, char *file, char *obj, int minus_o)
d109 2
a110 1
view_2init(struct application *ap)
d137 2
a138 1
raymiss(register struct application *ap)
d160 1
a160 1
view_pixel(void)
d165 2
a166 2
void view_setup(void) {}
void view_cleanup(void) {}
d179 3
a181 1
rayhit(struct application *ap, register struct partition *PartHeadp)
d226 3
a228 1
void	view_eol(struct application *ap)
d242 2
a243 1
view_end(struct application *ap)
d250 1
a250 1
void application_init (void) {}
@


11.8
log
@
Added "const" to RCSid, to quiet Gnu C compilers.
@
text
@d25 1
a25 1
static const char RCSraydir[] = "@@(#)$Header: /c/CVS/brlcad/rt/viewdir.c,v 11.7 2000/07/25 16:39:48 butler Exp $";
d67 1
a67 1
int	rayhit(), raymiss();
d81 1
a81 3
view_init( ap, file, obj, minus_o )
register struct application *ap;
char *file, *obj;
d107 1
a107 2
view_2init( ap )
struct application	*ap;
d134 1
a134 2
raymiss( ap )
register struct application	*ap;
d156 1
a156 1
view_pixel()
d161 2
a162 2
void view_setup() {}
void view_cleanup() {}
d175 1
a175 3
rayhit( ap, PartHeadp )
struct application *ap;
register struct partition *PartHeadp;
d220 1
a220 3
void	view_eol(ap)
struct application *ap;

d234 1
a234 2
view_end(ap)
struct application *ap;
d241 1
a241 1
void application_init () {}
@


11.7
log
@Many patches for warning-free compilation on Linux.
Moved rdebug.h to h/rtprivate.h
@
text
@d25 1
a25 1
static char RCSraydir[] = "@@(#)$Header: /c/CVS/brlcad/rt/viewdir.c,v 11.6 1999/07/02 22:19:46 mike Exp $";
@


11.6
log
@
Removed dependence on compat4.h
@
text
@d25 1
a25 1
static char RCSraydir[] = "@@(#)$Header: /c/CVS/brlcad/rt/viewdir.c,v 11.5 1999/05/28 01:19:28 mike Exp $";
d37 1
a37 1
#include "./rdebug.h"
@


11.5
log
@
sed4
@
text
@d25 1
a25 1
static char RCSraydir[] = "@@(#)$Header: /c/CVS/brlcad/rt/viewdir.c,v 11.4 1998/09/22 00:21:29 mike Exp $";
d51 1
a51 1
	{"",	0, (char *)0,	0,	FUNC_NULL }
@


11.4
log
@Doesn't need material.h
@
text
@d25 1
a25 1
static char RCSraydir[] = "@@(#)$Header: /c/CVS/brlcad/rt/viewdir.c,v 11.3 1996/08/30 00:08:21 butler Exp $";
d121 1
a121 1
		rt_log("Note: changing from %d cpus to 1 cpu\n", npsw );
@


11.3
log
@structparse moved to libbu
@
text
@d25 1
a25 1
static char RCSraydir[] = "@@(#)$Header: /m/cad/rt/RCS/viewdir.c,v 11.2 1995/12/06 17:57:53 pjt Exp butler $";
a35 1
#include "./material.h"
d37 1
a37 1
#include "rdebug.h"
@


11.2
log
@Added a stub for application_init()
@
text
@d25 1
a25 1
static char RCSraydir[] = "@@(#)$Header: /m/cad/rt/RCS/viewdir.c,v 11.1 1995/01/04 10:01:24 mike Rel4_4 pjt $";
d51 1
a51 1
struct structparse view_parse[] = {
@


11.1
log
@Release_4.4
@
text
@d25 1
a25 1
static char RCSraydir[] = "@@(#)$Header: /m/cad/rt/RCS/viewdir.c,v 1.1 94/08/11 02:45:30 gdurf Exp $";
d251 1
@


1.1
log
@Initial revision
@
text
@d25 1
a25 1
static char RCSraydir[] = "@@(#)$Header:$";
@
