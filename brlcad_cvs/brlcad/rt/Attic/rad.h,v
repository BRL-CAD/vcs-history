head	11.2;
access;
symbols
	ansi-20040405-merged:11.1
	postmerge-20040405-ansi:11.1
	premerge-20040404-ansi:11.1
	postmerge-autoconf:11.1
	autoconf-freeze:11.1
	premerge-autoconf:11.1
	postmerge-20040315-windows:11.1
	premerge-20040315-windows:11.1
	windows-20040315-freeze:11.1
	autoconf-20031203:11.1
	autoconf-20031202:11.1
	autoconf-branch:11.1.0.14
	phong-branch:11.1.0.12
	photonmap-branch:11.1.0.10
	rel-6-1-DP:11.1
	windows-branch:11.1.0.8
	rel-6-0-2:11.1
	ansi-branch:11.1.0.6
	rel-6-0-1-branch:11.1.0.4
	hartley-6-0-post:11.1
	hartley-6-0-pre:11.1
	rel-6-0-1:11.1
	rel-6-0:11.1
	rel-5-4:11.1
	offsite-5-3-pre:11.1
	rel-5-3:11.1
	rel-5-2:11.1
	rel-5-1-branch:11.1.0.2
	rel-5-1:11.1
	rel-5-0:11.1
	rel-5-0-beta:11.1
	rel-4-5:11.1
	ctj-4-5-post:11.1
	ctj-4-5-pre:11.1
	rel-4-4:11.1
	rel-4-0:10.1
	rel-3-5:9.1
	rel-3-0:8.1
	rel-2-3:7.1
	rel-2-0:6.1
	rel-1-24:5.1
	rel-1-20:1.1;
locks; strict;
comment	@ * @;


11.2
date	2004.05.21.17.31.04;	author morrison;	state dead;
branches;
next	11.1;

11.1
date	95.01.04.10.00.46;	author mike;	state Rel4_4;
branches;
next	10.1;

10.1
date	91.10.12.06.41.50;	author mike;	state Rel4_0;
branches;
next	9.1;

9.1
date	89.05.19.05.59.07;	author mike;	state Rel3_5;
branches;
next	8.1;

8.1
date	88.10.05.00.33.00;	author mike;	state Rel3_0;
branches;
next	7.1;

7.1
date	87.11.02.23.55.59;	author mike;	state Rel;
branches;
next	6.1;

6.1
date	87.07.11.07.58.53;	author mike;	state Rel;
branches;
next	5.1;

5.1
date	87.06.24.22.14.57;	author mike;	state Rel;
branches;
next	1.1;

1.1
date	87.02.13.00.01.43;	author mike;	state Exp;
branches;
next	;


desc
@Radar info
@


11.2
log
@moved to src/rt/
@
text
@/*
 *  GIFT/SRIM Radfile record format
 *
 *  Five kinds of records, each 72 (18*4) bytes long consisting of
 *  a four character identifier and 17 single precision (32bits) floats.
 *
 * 	Header		"head"	followed by two additional records
 *	Firing		"fire"	one per ray fired (if it intersected)
 *	Reflection	"refl"	one per intersection point
 *	Escape		"escp"	one per escaped ray (after last intersection)
 *	End
 */
union radrec {
	/* Header Record */
	struct {
		char	head[4];
		float	id;		/* idrun */
		float	miview;		/* - iview */
		float	cx, cy, cz;	/* aimpoint: tcenter(1,2,3) */
		float	back;		/* backoff */
		float	e, a;		/* elevation, azimuth (deg) */
		float	vert, horz;	/* height, width of Em plane */
		float	nvert, nhorz;	/* num rays each direction */
		float	maxrfl;		/* maximum number of reflections */
		float	iview;
		float	pad1, pad2, pad3;
	} h;

	/* Firing Record */
	struct {
		char	head[4];
		float	pad1;		/* always zero */
		float	irf;		/* number of ray segments */
		float	ox, oy, oz;	/* firing point: xb(1,2,3) */
		float	h, v;		/* Em plane coordinates */
		float	ih, iv;		/* Em plane cell number */
		float	pad2[8];
	} f;

	/* Reflection Record */
	struct {
		char	head[4];
		float	packedid;	/* never zero */
		float	sight;		/* 1 = line of sight, else 0 */
		float	ix, iy, iz;	/* intersection: xb(1,2,3) */
		float	nx, ny, nz;	/* normal: wb(1,2,3) */
		float	px, py, pz;	/* principal: pdir(1,2,3) */
		float	rc1, rc2;	/* curvature */
		float	dfirst;		/* path length */
		float	ireg;		/* region */
		float	isol;		/* solid */
		float	isurf;		/* surface */
	} r;

	/* Escape record */
	struct {
		char	head[4];
		float	zero;		/* always zero */
		float	sight;		/* -2 yes, -3 no */
		float	pad1[6];
		float	dx, dy, dz;	/* dir cosines of Em vector */
		float	pad2[6];
	} e;

	/* End record */
	struct {
		char	head[4];
		float	zero[2];	/* always zero */
		float	pad[15];
	} end;

	/* raw data */
	struct {
		char	head[4];
		float	pad[17];
	} p;
};
@


11.1
log
@Release_4.4
@
text
@@


10.1
log
@Release_4.0
@
text
@@


9.1
log
@Release_3.5
@
text
@@


8.1
log
@Release_3.0
@
text
@@


7.1
log
@Release 2.3
@
text
@@


6.1
log
@Release 2.0
@
text
@@


5.1
log
@Release 1.24
@
text
@@


1.1
log
@Release 1.20 -- First Formal Release
@
text
@@
