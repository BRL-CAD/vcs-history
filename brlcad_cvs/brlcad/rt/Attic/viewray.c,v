head	11.15;
access;
symbols
	ansi-20040405-merged:11.11.2.2
	postmerge-20040405-ansi:11.13
	premerge-20040404-ansi:11.12
	postmerge-autoconf:11.12
	autoconf-freeze:11.11.10.2
	premerge-autoconf:11.12
	postmerge-20040315-windows:11.12
	premerge-20040315-windows:11.12
	windows-20040315-freeze:11.11.4.1
	autoconf-20031203:11.11
	autoconf-20031202:11.11
	autoconf-branch:11.11.0.10
	phong-branch:11.11.0.8
	photonmap-branch:11.11.0.6
	rel-6-1-DP:11.11
	windows-branch:11.11.0.4
	rel-6-0-2:11.9
	ansi-branch:11.11.0.2
	rel-6-0-1-branch:11.9.0.2
	hartley-6-0-post:11.10
	hartley-6-0-pre:11.9
	rel-6-0-1:11.9
	rel-6-0:11.9
	rel-5-4:11.7
	offsite-5-3-pre:11.9
	rel-5-3:11.7
	rel-5-2:11.7
	rel-5-1-branch:11.7.0.2
	rel-5-1:11.7
	rel-5-0:11.7
	rel-5-0-beta:11.6
	rel-4-5:11.4
	ctj-4-5-post:11.4
	ctj-4-5-pre:11.4
	rel-4-4:11.1
	rel-4-0:10.1
	rel-3-5:9.1
	rel-3-0:8.1
	rel-2-3:7.1
	rel-2-0:6.1
	rel-1-24:5.1
	rel-1-20:4.2
	rel-1-10:4.1
	rt-2:2.1;
locks; strict;
comment	@ * @;


11.15
date	2004.05.21.17.31.10;	author morrison;	state dead;
branches;
next	11.14;

11.14
date	2004.05.10.15.30.49;	author erikg;	state Exp;
branches;
next	11.13;

11.13
date	2004.04.05.05.45.59;	author morrison;	state Exp;
branches;
next	11.12;

11.12
date	2004.02.02.17.39.39;	author morrison;	state Exp;
branches;
next	11.11;

11.11
date	2002.08.20.17.08.40;	author jra;	state Exp;
branches
	11.11.2.1
	11.11.4.1
	11.11.10.1;
next	11.10;

11.10
date	2002.08.15.20.55.51;	author hartley;	state Exp;
branches;
next	11.9;

11.9
date	2000.08.17.02.41.41;	author mike;	state Exp;
branches;
next	11.8;

11.8
date	2000.07.25.16.39.49;	author butler;	state Exp;
branches;
next	11.7;

11.7
date	99.07.02.22.19.46;	author mike;	state Exp;
branches;
next	11.6;

11.6
date	98.09.22.00.20.29;	author mike;	state Exp;
branches;
next	11.5;

11.5
date	98.03.19.04.04.48;	author mike;	state Exp;
branches;
next	11.4;

11.4
date	96.08.30.00.08.21;	author butler;	state Exp;
branches;
next	11.3;

11.3
date	96.03.29.23.20.55;	author mike;	state Exp;
branches;
next	11.2;

11.2
date	95.12.06.17.57.53;	author pjt;	state Exp;
branches;
next	11.1;

11.1
date	95.01.04.10.01.31;	author mike;	state Rel4_4;
branches;
next	10.4;

10.4
date	94.11.05.03.03.52;	author mike;	state Exp;
branches;
next	10.3;

10.3
date	94.08.11.02.47.27;	author gdurf;	state Exp;
branches;
next	10.2;

10.2
date	92.05.04.15.55.56;	author mike;	state Exp;
branches;
next	10.1;

10.1
date	91.10.12.06.42.23;	author mike;	state Rel4_0;
branches;
next	9.6;

9.6
date	91.07.06.00.35.33;	author mike;	state Exp;
branches;
next	9.5;

9.5
date	91.02.20.00.51.35;	author mike;	state Exp;
branches;
next	9.4;

9.4
date	91.01.05.03.09.29;	author mike;	state Exp;
branches;
next	9.3;

9.3
date	90.12.12.16.35.22;	author butler;	state Exp;
branches;
next	9.2;

9.2
date	90.11.14.15.43.43;	author mike;	state Exp;
branches;
next	9.1;

9.1
date	89.05.19.06.00.03;	author mike;	state Rel3_5;
branches;
next	8.8;

8.8
date	89.04.24.08.53.00;	author mike;	state Exp;
branches;
next	8.7;

8.7
date	89.04.04.05.02.34;	author mike;	state Exp;
branches;
next	8.6;

8.6
date	89.02.13.08.57.19;	author mike;	state Exp;
branches;
next	8.5;

8.5
date	89.01.19.22.17.57;	author mike;	state Exp;
branches;
next	8.4;

8.4
date	89.01.11.09.09.45;	author mike;	state Exp;
branches;
next	8.3;

8.3
date	88.12.27.16.38.34;	author mike;	state Exp;
branches;
next	8.2;

8.2
date	88.12.15.03.45.24;	author phil;	state Exp;
branches;
next	8.1;

8.1
date	88.10.05.00.33.44;	author mike;	state Rel3_0;
branches;
next	7.7;

7.7
date	88.08.23.02.34.00;	author mike;	state Exp;
branches;
next	7.6;

7.6
date	88.07.14.21.05.24;	author mike;	state Exp;
branches;
next	7.5;

7.5
date	88.05.20.05.35.33;	author mike;	state Exp;
branches;
next	7.4;

7.4
date	88.05.20.03.48.14;	author mike;	state Exp;
branches;
next	7.3;

7.3
date	88.05.14.02.28.48;	author mike;	state Exp;
branches;
next	7.2;

7.2
date	88.05.13.21.22.28;	author mike;	state Exp;
branches;
next	7.1;

7.1
date	87.11.02.23.56.58;	author mike;	state Rel;
branches;
next	6.1;

6.1
date	87.07.11.07.59.45;	author mike;	state Rel;
branches;
next	5.1;

5.1
date	87.06.24.22.15.51;	author mike;	state Rel;
branches;
next	4.4;

4.4
date	87.05.30.07.04.57;	author mike;	state Exp;
branches;
next	4.3;

4.3
date	87.03.24.00.05.16;	author mike;	state Exp;
branches;
next	4.2;

4.2
date	87.02.13.00.03.14;	author mike;	state Exp;
branches;
next	4.1;

4.1
date	86.12.29.03.49.05;	author mike;	state Rel1;
branches;
next	3.6;

3.6
date	86.12.18.16.02.29;	author mike;	state Exp;
branches;
next	3.5;

3.5
date	86.11.25.03.37.49;	author mike;	state Exp;
branches;
next	3.4;

3.4
date	86.11.07.01.47.44;	author mike;	state Exp;
branches;
next	3.3;

3.3
date	86.08.12.05.51.12;	author mike;	state Exp;
branches;
next	3.2;

3.2
date	86.07.30.03.57.11;	author mike;	state Exp;
branches;
next	3.1;

3.1
date	86.07.17.18.44.31;	author mike;	state Exp;
branches;
next	3.0;

3.0
date	86.06.10.01.32.49;	author mike;	state Exp;
branches;
next	2.3;

2.3
date	86.06.09.21.50.08;	author mike;	state Exp;
branches;
next	2.2;

2.2
date	85.09.15.09.18.40;	author mike;	state Exp;
branches;
next	2.1;

2.1
date	85.08.31.06.08.48;	author mike;	state Exp;
branches;
next	;

11.11.2.1
date	2002.09.19.18.02.17;	author morrison;	state Exp;
branches;
next	11.11.2.2;

11.11.2.2
date	2004.03.17.21.23.01;	author morrison;	state Exp;
branches;
next	;

11.11.4.1
date	2004.03.11.23.48.08;	author morrison;	state Exp;
branches;
next	;

11.11.10.1
date	2004.02.12.19.37.14;	author erikg;	state Exp;
branches;
next	11.11.10.2;

11.11.10.2
date	2004.03.15.14.08.08;	author erikg;	state Exp;
branches;
next	;


desc
@Back-end for rtray, to write VLD-Standard ray files.
@


11.15
log
@moved to src/rt/
@
text
@/*
 *			V I E W R A Y
 *
 *  Ray Tracing program RTRAY bottom half.
 *
 *  This module turns RT library partition lists into VLD Standard Format
 *  ray files, as defined by /vld/include/ray.h.  A variety of VLD programs
 *  exist to manipulate these files, including rayvect.
 *
 *  To obtain a UNIX-plot of a ray file, the procedure is:
 *	/vld/bin/rayvect -mMM < file.ray > file.vect
 *	/vld/bin/vectplot -mMM < file.vect > file.plot
 *	tplot -Tmeg file.plot		# or equivalent
 *
 *  Author -
 *	Michael John Muuss
 *  
 *  Source -
 *	SECAD/VLD Computing Consortium, Bldg 394
 *	The U. S. Army Ballistic Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005
 *  
 *  Copyright Notice -
 *	This software is Copyright (C) 1985-2004 by the United States Army.
 *	All rights reserved.
 */
#ifndef lint
static const char RCSrayview[] = "@@(#)$Header: /n/xoff/cvs/brlcad/rt/viewray.c,v 11.14 2004/05/10 15:30:49 erikg Exp $ (BRL)";
#endif

#ifdef HAVE_CONFIG_H
# include "config.h"
#endif



#include <stdio.h>

#include "machine.h"
#include "vmath.h"
#include "raytrace.h"

#include "rtprivate.h"

int		use_air = 1;		/* Handling of air in librt */

int		using_mlib = 0;		/* Material routines NOT used */

/* Viewing module specific "set" variables */
struct bu_structparse view_parse[] = {
	{"",	0, (char *)0,	0,	BU_STRUCTPARSE_FUNC_NULL }
};

extern FILE	*outfp;			/* optional output file */

char usage[] = "\
Usage:  rtray [options] model.g objects... >file.ray\n\
Options:\n\
 -s #		Grid size in pixels, default 512\n\
 -a Az		Azimuth in degrees	(conflicts with -M)\n\
 -e Elev	Elevation in degrees	(conflicts with -M)\n\
 -M		Read model2view matrix on stdin (conflicts with -a, -e)\n\
 -o model.ray	Specify output file, ray(5V) format (default=stdout)\n\
 -U #		Set use_air boolean to #\n\
 -x #		Set librt debug flags\n\
";

void	view_pixel(void) {}

void	view_setup(void) {}
void	view_cleanup(void) {}

/* "paint" types are negative ==> interpret as "special" air codes */
#define PAINT_FIRST_ENTRY	(-999)
#define PAINT_INTERN_EXIT	(-998)
#define PAINT_INTERN_ENTRY	(-997)
#define PAINT_FINAL_EXIT	(-996)
#define PAINT_AIR		(-1)

/* Handle a miss */
int
raymiss(struct application *ap)
{
	return(0);
}

/*
 *			R A Y H I T
 *
 *  Write a hit to the ray file.
 *  Also generate various forms of "paint".
 */
int
rayhit(struct application *ap, register struct partition *PartHeadp, struct seg *segHeadp)
{
	register struct partition *pp = PartHeadp->pt_forw;
	struct partition	*np;	/* next partition */
	vect_t		inormal;
	vect_t		onormal;
	vect_t		inormal2;

	if( pp == PartHeadp )
		return(0);		/* nothing was actually hit?? */

	/* "1st entry" paint */
	RT_HIT_NORMAL( inormal, pp->pt_inhit, pp->pt_inseg->seg_stp, &(ap->a_ray), pp->pt_inflip );
	wraypaint( pp->pt_inhit->hit_point, inormal,
		PAINT_FIRST_ENTRY, ap, outfp );

	for( ; pp != PartHeadp; pp = pp->pt_forw )  {
		/* Write the ray for this partition */
		RT_HIT_NORMAL( inormal, pp->pt_inhit, pp->pt_inseg->seg_stp, &(ap->a_ray), pp->pt_inflip );

		if( pp->pt_outhit->hit_dist < INFINITY )  {
			/* next macro must be on one line for 3d compiler */
			RT_HIT_NORMAL( onormal, pp->pt_outhit, pp->pt_outseg->seg_stp, &(ap->a_ray), pp->pt_outflip );
		}
		wray( pp, ap, outfp, inormal );

		/*
		 * If there is a subsequent partition that does not
		 * directly join this one, output an invented
		 * "air" partition between them.
		 */
		if( (np = pp->pt_forw) == PartHeadp )
			break;		/* end of list */

		/* Obtain next inhit normals & hit point, for code below */
		RT_HIT_NORMAL( inormal2, np->pt_inhit, np->pt_inseg->seg_stp, &(ap->a_ray), np->pt_inflip );

		if( rt_fdiff( pp->pt_outhit->hit_dist,
			      np->pt_inhit->hit_dist) >= 0 )  {
			/*
			 *  The two partitions touch (or overlap!).
			 *  If both are air, or both are solid, then don't
			 *  output any paint.
			 */
			if( pp->pt_regionp->reg_regionid > 0 )  {
				/* Exiting a solid */
				if( np->pt_regionp->reg_regionid > 0 )
					continue;	/* both are solid */
				/* output "internal exit" paint */
				wraypaint( pp->pt_outhit->hit_point,
					onormal,
					PAINT_INTERN_EXIT, ap, outfp );
			} else {
				/* Exiting air */
				if( np->pt_regionp->reg_regionid <= 0 )
					continue;	/* both are air */
				/* output "internal entry" paint */
				wraypaint( np->pt_inhit->hit_point,
					inormal2,
					PAINT_INTERN_ENTRY, ap, outfp );
			}
			continue;
		}

		/*
		 *  The two partitions do not touch.
		 *  Put "internal exit" paint on out point,
		 *  Install "general air" in between,
		 *  and put "internal entry" paint on in point.
		 */
		wraypaint( pp->pt_outhit->hit_point,
			onormal,
			PAINT_INTERN_EXIT, ap, outfp );

		wraypts( pp->pt_outhit->hit_point,
			onormal,
			np->pt_inhit->hit_point,
			PAINT_AIR, ap, outfp );

		wraypaint( np->pt_inhit->hit_point,
			inormal2,
			PAINT_INTERN_ENTRY, ap, outfp );
	}

	/* "final exit" paint -- ray va(r)nishes off into the sunset */
	pp = PartHeadp->pt_back;
	if( pp->pt_outhit->hit_dist < INFINITY )  {
		RT_HIT_NORMAL( inormal, pp->pt_inhit, pp->pt_inseg->seg_stp, &(ap->a_ray), pp->pt_inflip );
		wraypaint( pp->pt_outhit->hit_point,
			inormal,
			PAINT_FINAL_EXIT, ap, outfp );
	}
	return(0);
}

/*
 *  			V I E W _ I N I T
 */
int
view_init(register struct application *ap, char *file, char *obj, int minus_o)
{
	ap->a_hit = rayhit;
	ap->a_miss = raymiss;
	ap->a_onehit = 0;

	return(0);		/* No framebuffer needed */
}

void	view_eol(void) {;}

void
view_end(void)
{
	fflush(outfp);
}

void
view_2init(struct application *ap)
{

	if( outfp == NULL )
		rt_bomb("outfp is NULL\n");
}

void application_init (void) {}
@


11.14
log
@change conf.h to a wrapped config.h
@
text
@d28 1
a28 1
static const char RCSrayview[] = "@@(#)$Header: /cvs/brlcad/rt/viewray.c,v 11.13 2004/04/05 05:45:59 morrison Exp $ (BRL)";
@


11.13
log
@merge of ansi-6-0-branch into head
@
text
@d28 1
a28 1
static const char RCSrayview[] = "@@(#)$Header$ (BRL)";
d31 5
a35 1
#include "conf.h"
@


11.12
log
@update copyright to include span through 2003
@
text
@d28 1
a28 1
static const char RCSrayview[] = "@@(#)$Header: /c/CVS/brlcad/rt/viewray.c,v 11.11 2002/08/20 17:08:40 jra Exp $ (BRL)";
d64 1
a64 1
void	view_pixel() {}
d66 2
a67 2
void	view_setup() {}
void	view_cleanup() {}
d78 1
a78 2
raymiss(ap)
struct application *ap;
d90 1
a90 4
rayhit( ap, PartHeadp, segHeadp )
struct application *ap;
register struct partition *PartHeadp;
struct seg		*segHeadp;
d189 1
a189 3
view_init( ap, file, obj, minus_o )
register struct application *ap;
char *file, *obj;
d198 1
a198 1
void	view_eol() {;}
d201 1
a201 1
view_end()
d207 1
a207 2
view_2init( ap )
struct application	*ap;
d214 1
a214 1
void application_init () {}
@


11.11
log
@Restoration of entire source tree to Pre-Hartley state
@
text
@d24 1
a24 1
 *	This software is Copyright (C) 1985 by the United States Army.
d28 1
a28 1
static const char RCSrayview[] = "@@(#)$Header: /c/CVS/brlcad/rt/viewray.c,v 11.9 2000/08/17 02:41:41 mike Exp $ (BRL)";
@


11.11.4.1
log
@sync to HEAD...
@
text
@d24 1
a24 1
 *	This software is Copyright (C) 1985-2004 by the United States Army.
d28 1
a28 1
static const char RCSrayview[] = "@@(#)$Header: /n/cad/c/CVS/brlcad/rt/viewray.c,v 11.12 2004/02/02 17:39:39 morrison Exp $ (BRL)";
@


11.11.10.1
log
@merge from HEAD
@
text
@d24 1
a24 1
 *	This software is Copyright (C) 1985-2004 by the United States Army.
d28 1
a28 1
static const char RCSrayview[] = "@@(#)$Header: /c/CVS/brlcad/rt/viewray.c,v 11.12 2004/02/02 17:39:39 morrison Exp $ (BRL)";
@


11.11.10.2
log
@merge from head
@
text
@d28 1
a28 1
static const char RCSrayview[] = "@@(#)$Header: /c/CVS/brlcad/rt/viewray.c,v 11.11.10.1 2004/02/12 19:37:14 erikg Exp $ (BRL)";
@


11.11.2.1
log
@Initial ANSIfication
@
text
@d28 1
a28 1
static const char RCSrayview[] = "@@(#)$Header: /c/CVS/brlcad/rt/viewray.c,v 11.11 2002/08/20 17:08:40 jra Exp $ (BRL)";
d64 1
a64 1
void	view_pixel(void) {}
d66 2
a67 2
void	view_setup(void) {}
void	view_cleanup(void) {}
d78 2
a79 1
raymiss(struct application *ap)
d91 4
a94 1
rayhit(struct application *ap, register struct partition *PartHeadp, struct seg *segHeadp)
d193 3
a195 1
view_init(register struct application *ap, char *file, char *obj, int minus_o)
d204 1
a204 1
void	view_eol(void) {;}
d207 1
a207 1
view_end(void)
d213 2
a214 1
view_2init(struct application *ap)
d221 1
a221 1
void application_init (void) {}
@


11.11.2.2
log
@sync branch with HEAD
@
text
@d24 1
a24 1
 *	This software is Copyright (C) 1985-2004 by the United States Army.
d28 1
a28 1
static const char RCSrayview[] = "@@(#)$Header$ (BRL)";
@


11.10
log
@Converted from K&R to ANSI C - RFH
@
text
@d64 1
a64 1
void	view_pixel(void) {}
d66 2
a67 2
void	view_setup(void) {}
void	view_cleanup(void) {}
d78 2
a79 1
raymiss(struct application *ap)
d91 4
a94 1
rayhit(struct application *ap, register struct partition *PartHeadp, struct seg *segHeadp)
d193 3
a195 1
view_init(register struct application *ap, char *file, char *obj, int minus_o)
d204 1
a204 1
void	view_eol(void) {;}
d207 1
a207 1
view_end(void)
d213 2
a214 1
view_2init(struct application *ap)
d221 1
a221 1
void application_init (void) {}
@


11.9
log
@
Added "const" to RCSid, to quiet Gnu C compilers.
@
text
@d28 1
a28 1
static const char RCSrayview[] = "@@(#)$Header: /c/CVS/brlcad/rt/viewray.c,v 11.8 2000/07/25 16:39:49 butler Exp $ (BRL)";
d64 1
a64 1
void	view_pixel() {}
d66 2
a67 2
void	view_setup() {}
void	view_cleanup() {}
d78 1
a78 2
raymiss(ap)
struct application *ap;
d90 1
a90 4
rayhit( ap, PartHeadp, segHeadp )
struct application *ap;
register struct partition *PartHeadp;
struct seg		*segHeadp;
d189 1
a189 3
view_init( ap, file, obj, minus_o )
register struct application *ap;
char *file, *obj;
d198 1
a198 1
void	view_eol() {;}
d201 1
a201 1
view_end()
d207 1
a207 2
view_2init( ap )
struct application	*ap;
d214 1
a214 1
void application_init () {}
@


11.8
log
@Many patches for warning-free compilation on Linux.
Moved rdebug.h to h/rtprivate.h
@
text
@d28 1
a28 1
static char RCSrayview[] = "@@(#)$Header: /c/CVS/brlcad/rt/viewray.c,v 11.7 1999/07/02 22:19:46 mike Exp $ (BRL)";
@


11.7
log
@
Removed dependence on compat4.h
@
text
@d28 1
a28 1
static char RCSrayview[] = "@@(#)$Header: /c/CVS/brlcad/rt/viewray.c,v 11.6 1998/09/22 00:20:29 mike Exp $ (BRL)";
d39 1
a39 1
#include "rdebug.h"
@


11.6
log
@Doesn't need material.h
@
text
@d28 1
a28 1
static char RCSrayview[] = "@@(#)$Header: /c/CVS/brlcad/rt/viewray.c,v 11.5 1998/03/19 04:04:48 mike Exp $ (BRL)";
d47 1
a47 1
	{"",	0, (char *)0,	0,	FUNC_NULL }
@


11.5
log
@a_hit and a_miss arg fix
@
text
@d28 1
a28 1
static char RCSrayview[] = "@@(#)$Header: /m/cad/rt/RCS/viewray.c,v 11.4 1996/08/30 00:08:21 butler Exp mike $ (BRL)";
a37 1
#include "./material.h"
@


11.4
log
@structparse moved to libbu
@
text
@d28 1
a28 1
static char RCSrayview[] = "@@(#)$Header: /m/cad/rt/RCS/viewray.c,v 11.3 1996/03/29 23:20:55 mike Exp butler $ (BRL)";
a64 3
/* Null function -- handle a miss */
int	raymiss() { return(0); }

d77 8
d92 1
a92 1
rayhit( ap, PartHeadp )
d95 1
@


11.3
log
@Changed from RT_HIT_NORM() to RT_HIT_NORMAL().
Now pt_inflip stuff is always handled correctly.
@
text
@d28 1
a28 1
static char RCSrayview[] = "@@(#)$Header: /m/cad/rt/RCS/viewray.c,v 11.2 1995/12/06 17:57:53 pjt Exp mike $ (BRL)";
d47 1
a47 1
struct structparse view_parse[] = {
@


11.2
log
@Added a stub for application_init()
@
text
@d28 1
a28 1
static char RCSrayview[] = "@@(#)$Header: /m/cad/rt/RCS/viewray.c,v 11.1 1995/01/04 10:01:31 mike Rel4_4 pjt $ (BRL)";
d93 3
d101 2
a102 6
	RT_HIT_NORM( pp->pt_inhit, pp->pt_inseg->seg_stp, &(ap->a_ray) );
	if( pp->pt_inflip )  {
		VREVERSE( pp->pt_inhit->hit_normal, pp->pt_inhit->hit_normal );
		pp->pt_inflip = 0;
	}
	wraypaint( pp->pt_inhit->hit_point, pp->pt_inhit->hit_normal,
d107 1
a107 6
		RT_HIT_NORM( pp->pt_inhit, pp->pt_inseg->seg_stp, &(ap->a_ray) );
		if( pp->pt_inflip )  {
			VREVERSE( pp->pt_inhit->hit_normal,
				  pp->pt_inhit->hit_normal );
			pp->pt_inflip = 0;
		}
d111 1
a111 6
			RT_HIT_NORM( pp->pt_outhit, pp->pt_outseg->seg_stp, &(ap->a_ray) );
			if( pp->pt_outflip )  {
				VREVERSE( pp->pt_outhit->hit_normal,
					  pp->pt_outhit->hit_normal );
				pp->pt_outflip = 0;
			}
d113 1
a113 1
		wray( pp, ap, outfp );
d124 1
a124 6
		RT_HIT_NORM( np->pt_inhit, np->pt_inseg->seg_stp, &(ap->a_ray) );
		if( np->pt_inflip )  {
			VREVERSE( np->pt_inhit->hit_normal,
				  np->pt_inhit->hit_normal );
			np->pt_inflip = 0;
		}
d139 1
a139 1
					pp->pt_outhit->hit_normal,
d147 1
a147 1
					np->pt_inhit->hit_normal,
d160 1
a160 1
			pp->pt_outhit->hit_normal,
d164 1
a164 1
			pp->pt_outhit->hit_normal,
d169 1
a169 1
			np->pt_inhit->hit_normal,
d176 1
d178 1
a178 1
			pp->pt_outhit->hit_normal,
@


11.1
log
@Release_4.4
@
text
@d28 1
a28 1
static char RCSrayview[] = "@@(#)$Header: /m/cad/rt/RCS/viewray.c,v 10.4 94/11/05 03:03:52 mike Exp $ (BRL)";
d230 2
@


10.4
log
@Irix 6
@
text
@d28 1
a28 1
static char RCSrayview[] = "@@(#)$Header: /m/cad/rt/RCS/viewray.c,v 10.3 94/08/11 02:47:27 gdurf Exp Locker: mike $ (BRL)";
@


10.3
log
@Added include of conf.h
@
text
@d28 1
a28 1
static char RCSrayview[] = "@@(#)$Header: /m/cad/rt/RCS/viewray.c,v 10.2 1992/05/04 15:55:56 mike Exp gdurf $ (BRL)";
a92 1
	struct partition	air;
@


10.2
log
@regionfix is now in librt, automaticly invoked on rt_prep().
@
text
@d28 1
a28 1
static char RCSrayview[] = "@@(#)$Header: /m/cad/rt/RCS/viewray.c,v 10.1 91/10/12 06:42:23 mike Rel4_0 Locker: mike $ (BRL)";
d30 2
@


10.1
log
@Release_4.0
@
text
@d28 1
a28 1
static char RCSrayview[] = "@@(#)$Header: /m/cad/rt/RCS/viewray.c,v 9.6 91/07/06 00:35:33 mike Exp $ (BRL)";
a227 2

	regionfix( ap, "rtray.regexp" );		/* XXX */
@


9.6
log
@ANSI structure initialization
@
text
@d28 1
a28 1
static char RCSrayview[] = "@@(#)$Header: /m/cad/rt/RCS/viewray.c,v 9.5 91/02/20 00:51:35 mike Exp $ (BRL)";
@


9.5
log
@Added new view-module interface called view_setup() which is used
for initializing material properties, lights, etc.
It compliments view_cleanup(), and finally removed knowledge of
the view.c materials (and all the shaders) from the RT "top half".
@
text
@d28 1
a28 1
static char RCSrayview[] = "@@(#)$Header: /m/cad/rt/RCS/viewray.c,v 9.4 91/01/05 03:09:29 mike Exp $ (BRL)";
d46 1
a46 1
	"",	0, (char *)0,	0,	FUNC_NULL
@


9.4
log
@Converted to new format for fmt entry in structparse
@
text
@d28 1
a28 1
static char RCSrayview[] = "@@(#)$Header: /m/cad/rt/RCS/viewray.c,v 9.3 90/12/12 16:35:22 butler Exp $ (BRL)";
d68 1
@


9.3
log
@modified to reflect changes in structparse format
@
text
@d28 1
a28 1
static char RCSrayview[] = "@@(#)$Header: /m/cad/rt/RCS/viewray.c,v 9.2 90/11/14 15:43:43 mike Exp $ (BRL)";
d46 1
a46 1
	(char *)0, 0, (char *)0,	0,	FUNC_NULL
@


9.2
log
@As part of "clean" command, call "view_cleanup()", to allow
viewing module the opportunity to clean up things like implicit
light sources, etc.
@
text
@d28 1
a28 1
static char RCSrayview[] = "@@(#)$Header: /m/cad/rt/RCS/viewray.c,v 9.1 89/05/19 06:00:03 mike Rel3_5 $ (BRL)";
d46 1
a46 1
	(char *)0,(char *)0,	0,			FUNC_NULL
@


9.1
log
@Release_3.5
@
text
@d28 1
a28 1
static char RCSrayview[] = "@@(#)$Header: viewray.c,v 8.8 89/04/24 08:53:00 mike Exp $ (BRL)";
d67 2
@


8.8
log
@RT_HIT_NORM macro invocation had to be placed all on one line to
satisfy the sgi 3D compiler (ugh).
@
text
@d28 1
a28 1
static char RCSrayview[] = "@@(#)$Header: viewray.c,v 8.7 89/04/04 05:02:34 mike Locked $ (BRL)";
@


8.7
log
@Converted to new way of representing structure offsets.
@
text
@d28 1
a28 1
static char RCSrayview[] = "@@(#)$Header: viewray.c,v 8.6 89/02/13 08:57:19 mike Locked $ (BRL)";
d112 2
a113 2
			RT_HIT_NORM( pp->pt_outhit,
				pp->pt_outseg->seg_stp, &(ap->a_ray) );
@


8.6
log
@Moved region-id fixing code to regionfix.c
@
text
@d28 1
a28 1
static char RCSrayview[] = "@@(#)$Header: viewray.c,v 8.5 89/01/19 22:17:57 mike Locked $ (BRL)";
d46 1
a46 1
	(char *)0,(char *)0,	(stroff_t)0,				FUNC_NULL
@


8.5
log
@declared strchr()
@
text
@d28 1
a28 1
static char RCSrayview[] = "@@(#)$Header: viewray.c,v 8.4 89/01/11 09:09:45 mike Locked $ (BRL)";
a31 6
#include <ctype.h>
#ifdef BSD
#include <strings.h>
#else
#include <string.h>
#endif
a39 4
extern char	*strchr();
extern char	*re_comp();
extern int	re_exec();

a221 10
	char	*file = "rtray.regexp";			/* XXX */
	FILE	*fp;
	char	*line;
	char	*tabp;
	int	linenum = 0;
	char	*err;
	register struct region	*rp;
	int	ret;
	int	oldid;
	int	newid;
d226 1
a226 70
	/*
	 *  Apply any deltas to reg_regionid values
	 *  to allow old applications that use the reg_regionid number
	 *  to distinguish between different instances of the same
	 *  prototype region.
	 */
	if( (fp = fopen( file, "r" )) == NULL )	 {
		perror(file);
		return;
	}

	while( (line = rt_read_cmd( fp )) != (char *) 0 )  {
		linenum++;
		/*  For now, establish a simple format:
		 *  regexp TAB formula SEMICOLON
		 */
		if( (tabp = strchr( line, '\t' )) == (char *)0 )  {
			rt_log("%s: missing TAB on line %d:\n%s\n", file, linenum, line );
			continue;		/* just ignore it */
		}
		*tabp++ = '\0';
		while( *tabp && isspace( *tabp ) )  tabp++;
		if( (err = re_comp(line)) != (char *)0 )  {
			rt_log("%s: line %d, re_comp error '%s'\n", file, line, err );
			continue;		/* just ignore it */
		}
		
		rp = ap->a_rt_i->HeadRegion;
		for( ; rp != REGION_NULL; rp = rp->reg_forw )  {
			ret = re_exec(rp->reg_name);
			if(rdebug&RDEBUG_INSTANCE)  {
				rt_log("'%s' %s '%s'\n", line,
					ret==1 ? "==" : "!=",
					rp->reg_name);
			}
			if( (ret) == 0  )
				continue;	/* didn't match */
			if( ret == -1 )  {
				rt_log("%s: line %d, invalid regular expression\n", file, linenum);
				break;		/* on to next RE */
			}
			/*
			 *  RE matched this name, perform indicated operation
			 *  For now, choices are limited.  Later this might
			 *  become an interpreted expression.  For now:
			 *	99	replace old region id with "num"
			 *	+99	increment old region id with "num"
			 *		(which may itself be a negative number)
			 *	+uses	increment old region id by the
			 *		current instance (use) count.
			 */
			oldid = rp->reg_regionid;
			if( strcmp( tabp, "+uses" ) == 0  )  {
				newid = oldid + rp->reg_instnum;
			} else if( *tabp == '+' )  {
				newid = oldid + atoi( tabp+1 );
			} else {
				newid = atoi( tabp );
				if( newid == 0 )  rt_log("%s, line %d Warning:  new id = 0\n", file, linenum );
			}
			if(rdebug&RDEBUG_INSTANCE)  {
				rt_log("%s instance %d:  region id changed from %d to %d\n",
					rp->reg_name, rp->reg_instnum,
					oldid, newid );
			}
			rp->reg_regionid = newid;
		}
		rt_free( line, "reg_expr line");
	}
	fclose( fp );
@


8.4
log
@Prototype code to allow altering region IDs of instanced regions.
@
text
@d28 1
a28 1
static char RCSrayview[] = "@@(#)$Header: viewray.c,v 8.3 88/12/27 16:38:34 mike Locked $ (BRL)";
d46 1
@


8.3
log
@Converted matparse --> structparse
@
text
@d28 1
a28 1
static char RCSrayview[] = "@@(#)$Header: viewray.c,v 8.2 88/12/15 03:45:24 mike Locked $ (BRL)";
d32 7
d44 5
d119 9
a127 5
		RT_HIT_NORM( pp->pt_outhit, pp->pt_outseg->seg_stp, &(ap->a_ray) );
		if( pp->pt_outflip )  {
			VREVERSE( pp->pt_outhit->hit_normal,
				  pp->pt_outhit->hit_normal );
			pp->pt_outflip = 0;
d196 5
a200 3
	wraypaint( pp->pt_outhit->hit_point,
		pp->pt_outhit->hit_normal,
		PAINT_FINAL_EXIT, ap, outfp );
d228 2
a229 1
view_2init()
d231 11
d244 71
@


8.2
log
@removed ireflect, bounce stubs.  put in view_parse stub instead.
@
text
@d28 1
a28 1
static char RCSrayview[] = "@@(#)$Header: viewray.c,v 8.2 88/12/15 03:31:06 phil Exp $ (BRL)";
d42 2
a43 2
struct matparse view_parse[] = {
	(char *)0,	(mp_off_ty)0,				(char *)0
@


8.1
log
@Release_3.0
@
text
@d28 1
a28 1
static char RCSrayview[] = "@@(#)$Header: viewray.c,v 7.7 88/08/23 02:34:00 mike Exp $ (BRL)";
d35 1
d40 5
a44 2
int		max_bounces;		/* stub for "set" cmd */
int		max_ireflect;		/* stub for "set" cmd */
@


7.7
log
@Added declarations of using_mlib=0,
added max_bounces stub variables, to keep "set" command happy,
deleted stub mlib_setup(), mlib_free() stubs.
@
text
@d28 1
a28 1
static char RCSrayview[] = "@@(#)$Header: viewray.c,v 7.6 88/07/14 21:05:24 mike Locked $ (BRL)";
@


7.6
log
@VLD convention for handling air regions is clarified:
if reg_regionid is > 0, region is solid.
if reg_regionid is <=0, region is air, and code comes from reg_aircode.
@
text
@d28 1
a28 1
static char RCSrayview[] = "@@(#)$Header: viewray.c,v 7.5 88/05/20 05:35:33 mike Locked $ (BRL)";
d37 5
a210 4

int	mlib_setup() { return(1); }

void	mlib_free() { ; }
@


7.5
log
@added -o flag
@
text
@d28 1
a28 1
static char RCSrayview[] = "@@(#)$Header: viewray.c,v 7.4 88/05/20 03:48:14 mike Locked $ (BRL)";
d129 1
a129 1
			if( pp->pt_regionp->reg_regionid >= 0 )  {
d131 1
a131 1
				if( np->pt_regionp->reg_regionid >= 0 )
d139 1
a139 1
				if( np->pt_regionp->reg_regionid < 0 )
@


7.4
log
@Added "internal air" between partitions, and four kinds
of VLD-standard "paint" on the entry and exit to partitions.
@
text
@d28 1
a28 1
static char RCSrayview[] = "@@(#)$Header: viewray.c,v 7.3 88/05/14 02:28:48 mike Locked $ (BRL)";
d37 1
d42 1
a42 1
 -f #		Grid size in pixels, default 512\n\
d46 2
d88 1
a88 1
		PAINT_FIRST_ENTRY, ap, stdout );
d104 1
a104 1
		wray( pp, ap, stdout );
d136 1
a136 1
					PAINT_INTERN_EXIT, ap, stdout );
d144 1
a144 1
					PAINT_INTERN_ENTRY, ap, stdout );
d157 1
a157 1
			PAINT_INTERN_EXIT, ap, stdout );
d162 1
a162 1
			PAINT_AIR, ap, stdout );
d166 1
a166 1
			PAINT_INTERN_ENTRY, ap, stdout );
d173 1
a173 1
		PAINT_FINAL_EXIT, ap, stdout );
a188 2
	if( minus_o )
		fprintf(stderr,"Warning:  -o ignored, rays go to stdout\n");
d197 1
a197 1
	fflush(stdout);
d200 6
a205 1
void	view_2init()  {;}
@


7.3
log
@lint fixes
@
text
@d28 1
a28 1
static char RCSrayview[] = "@@(#)$Header: viewray.c,v 7.2 88/05/13 21:22:28 mike Locked $ (BRL)";
d36 2
d53 13
a65 1
/* Write a hit to the ray file */
d72 2
d75 12
d88 1
d90 5
d96 5
d102 62
d165 6
@


7.2
log
@Removed "max 1024" from usage message.
@
text
@d28 1
a28 1
static char RCSrayview[] = "@@(#)$Header: viewray.c,v 7.1 87/11/02 23:56:58 mike Locked $ (BRL)";
d47 1
a47 1
raymiss() { ; }
d49 1
a49 1
view_pixel() {}
d52 1
d64 1
d70 1
d84 1
a84 2
view_eol() {
}
d86 1
d92 1
a92 1
view_2init()  {;}
d94 1
a94 1
mlib_setup() { return(1); }
d96 1
a96 1
mlib_free() { ; }
@


7.1
log
@Release 2.3
@
text
@d28 1
a28 1
static char RCSrayview[] = "@@(#)$Header: viewray.c,v 6.1 87/07/11 07:59:45 mike Rel $ (BRL)";
d39 1
a39 1
 -f #		Grid size in pixels, default 512, max 1024\n\
@


6.1
log
@Release 2.0
@
text
@d28 1
a28 1
static char RCSrayview[] = "@@(#)$Header: viewray.c,v 5.1 87/06/24 22:15:51 mike Rel $ (BRL)";
@


5.1
log
@Release 1.24
@
text
@d28 1
a28 1
static char RCSrayview[] = "@@(#)$Header: viewray.c,v 4.4 87/05/30 07:04:57 mike Exp $ (BRL)";
@


4.4
log
@Added code for non-square views, single pixel (-b) debugging.
@
text
@d28 1
a28 1
static char RCSrayview[] = "@@(#)$Header: viewray.c,v 4.3 87/03/24 00:05:16 mike Locked $ (BRL)";
@


4.3
log
@Added stub
@
text
@d28 1
a28 1
static char RCSrayview[] = "@@(#)$Header: viewray.c,v 4.2 87/02/13 00:03:14 mike Locked $ (BRL)";
d68 1
a68 1
view_init( ap, file, obj, npts, minus_o )
@


4.2
log
@Release 1.20 -- First Formal Release
@
text
@d28 1
a28 1
static char RCSrayview[] = "@@(#)$Header: viewray.c,v 4.1 86/12/29 03:49:05 mike Rel1 $ (BRL)";
d92 2
@


4.1
log
@BRL CAD Distribution Release 1.10
@
text
@d28 1
a28 1
static char RCSrayview[] = "@@(#)$Header: viewray.c,v 3.6 86/12/18 16:02:29 mike Locked $ (BRL)";
@


3.6
log
@rdebug.h separated from librt/debug.h
@
text
@d28 1
a28 1
static char RCSrayview[] = "@@(#)$Header: viewray.c,v 3.5 86/11/25 03:37:49 mike Locked $ (BRL)";
@


3.5
log
@Updated usage message,
fb_open moved to rt.c
@
text
@d28 1
a28 1
static char RCSrayview[] = "@@(#)$Header: viewray.c,v 3.4 86/11/07 01:47:44 mike Locked $ (BRL)";
d43 1
a43 1
 -x #		Set debug flags\n\
@


3.4
log
@Changed to perform RT_HIT_NORM() macros where hit_point and hit_norm
are needed.
@
text
@d28 1
a28 1
static char RCSrayview[] = "@@(#)$Header: viewray.c,v 3.3 86/08/12 05:51:12 mike Exp $ (BRL)";
d39 3
a41 3
 -f#		Grid size in pixels, default 512, max 1024\n\
 -aAz		Azimuth in degrees	(conflicts with -M)\n\
 -eElev		Elevation in degrees	(conflicts with -M)\n\
d43 1
a43 1
 -x#		Set debug flags\n\
d78 1
@


3.3
log
@Changed to find #include files with CC -I../h
@
text
@d28 1
a28 1
static char RCSrayview[] = "@@(#)$Header: viewray.c,v 3.2 86/07/30 03:57:11 mike Exp $ (BRL)";
d59 2
@


3.2
log
@Added stub for mlib_setup()
@
text
@d28 1
a28 1
static char RCSrayview[] = "@@(#)$Header: viewray.c,v 3.1 86/07/17 18:44:31 mike Exp $ (BRL)";
d32 3
a34 3
#include "../h/machine.h"
#include "../h/vmath.h"
#include "../h/raytrace.h"
@


3.1
log
@Changed RCSid symbol to be unique, for Cray bulk-loading.
@
text
@d28 1
a28 1
static char RCSrayview[] = "@@(#)$Header: viewray.c,v 3.0 86/06/10 01:32:49 mike Exp $ (BRL)";
d87 2
@


3.0
log
@rt/ and librt/ separated,
global datastructures simplified.
@
text
@d28 1
a28 1
static char RCSid[] = "@@(#)$Header: viewray.c,v 2.3 86/06/09 21:50:08 mike Exp $ (BRL)";
@


2.3
log
@rt and librt separated
@
text
@d28 1
a28 1
static char RCSid[] = "@@(#)$Header: viewray.c,v 2.2 85/09/15 09:18:40 mike Exp $ (BRL)";
@


2.2
log
@Modified handling of "-o" so that each frame of a multi-frame
sequence is stored in a separate file.
@
text
@d28 1
a28 1
static char RCSid[] = "@@(#)$Header: viewray.c,v 2.1 85/08/31 06:08:48 mike Exp $ (BRL)";
d34 1
a34 1
#include "raytrace.h"
@


2.1
log
@Version 2 of RT
@
text
@d28 1
a28 1
static char RCSid[] = "@@(#)$Header: view.c,v 1.26 85/07/30 05:56:34 mike Exp $ (BRL)";
d66 1
a66 1
view_init( ap, file, obj, npts, outfd )
d74 1
a74 1
	if( outfd > 0 )
@
