head	11.20;
access;
symbols
	ansi-20040405-merged:11.16.2.2
	postmerge-20040405-ansi:11.18
	premerge-20040404-ansi:11.17
	postmerge-autoconf:11.17
	autoconf-freeze:11.16.10.2
	premerge-autoconf:11.17
	postmerge-20040315-windows:11.17
	premerge-20040315-windows:11.17
	windows-20040315-freeze:11.16.4.1
	autoconf-20031203:11.16
	autoconf-20031202:11.16
	autoconf-branch:11.16.0.10
	phong-branch:11.16.0.8
	photonmap-branch:11.16.0.6
	rel-6-1-DP:11.16
	windows-branch:11.16.0.4
	rel-6-0-2:11.14
	ansi-branch:11.16.0.2
	rel-6-0-1-branch:11.14.0.2
	hartley-6-0-post:11.15
	hartley-6-0-pre:11.14
	rel-6-0-1:11.14
	rel-6-0:11.14
	rel-5-4:11.10
	offsite-5-3-pre:11.12
	rel-5-3:11.10
	rel-5-2:11.10
	rel-5-1-branch:11.10.0.2
	rel-5-1:11.10
	rel-5-0:11.9
	rel-5-0-beta:11.8
	rel-4-5:11.6
	ctj-4-5-post:11.6
	ctj-4-5-pre:11.6
	rel-4-4:11.1
	rel-4-0:10.1;
locks; strict;
comment	@ * @;


11.20
date	2004.05.21.17.31.08;	author morrison;	state dead;
branches;
next	11.19;

11.19
date	2004.05.10.15.30.49;	author erikg;	state Exp;
branches;
next	11.18;

11.18
date	2004.04.05.05.45.59;	author morrison;	state Exp;
branches;
next	11.17;

11.17
date	2004.02.02.17.39.39;	author morrison;	state Exp;
branches;
next	11.16;

11.16
date	2002.08.20.17.08.38;	author jra;	state Exp;
branches
	11.16.2.1
	11.16.4.1
	11.16.10.1;
next	11.15;

11.15
date	2002.08.15.20.55.50;	author hartley;	state Exp;
branches;
next	11.14;

11.14
date	2001.04.02.21.38.30;	author morrison;	state Exp;
branches;
next	11.13;

11.13
date	2001.04.02.15.05.14;	author jra;	state Exp;
branches;
next	11.12;

11.12
date	2000.08.17.02.41.38;	author mike;	state Exp;
branches;
next	11.11;

11.11
date	2000.07.25.16.39.48;	author butler;	state Exp;
branches;
next	11.10;

11.10
date	99.11.24.22.17.07;	author mike;	state Exp;
branches;
next	11.9;

11.9
date	99.07.02.22.19.46;	author mike;	state Exp;
branches;
next	11.8;

11.8
date	99.05.28.01.19.28;	author mike;	state Exp;
branches;
next	11.7;

11.7
date	98.09.22.00.21.52;	author mike;	state Exp;
branches;
next	11.6;

11.6
date	97.01.02.21.06.04;	author jra;	state Exp;
branches;
next	11.5;

11.5
date	96.08.30.00.08.21;	author butler;	state Exp;
branches;
next	11.4;

11.4
date	96.07.29.22.16.47;	author mike;	state Exp;
branches;
next	11.3;

11.3
date	96.03.29.23.20.55;	author mike;	state Exp;
branches;
next	11.2;

11.2
date	95.12.06.17.57.53;	author pjt;	state Exp;
branches;
next	11.1;

11.1
date	95.01.04.10.01.23;	author mike;	state Rel4_4;
branches;
next	10.3;

10.3
date	94.11.05.03.07.42;	author mike;	state Exp;
branches;
next	10.2;

10.2
date	94.08.11.02.45.11;	author gdurf;	state Exp;
branches;
next	10.1;

10.1
date	91.10.12.06.42.17;	author mike;	state Rel4_0;
branches;
next	1.3;

1.3
date	91.07.06.00.35.26;	author mike;	state Exp;
branches;
next	1.2;

1.2
date	91.06.26.00.13.14;	author mike;	state Exp;
branches;
next	1.1;

1.1
date	91.06.23.23.45.07;	author mike;	state Exp;
branches;
next	;

11.16.2.1
date	2002.09.19.18.02.16;	author morrison;	state Exp;
branches;
next	11.16.2.2;

11.16.2.2
date	2004.03.17.21.23.01;	author morrison;	state Exp;
branches;
next	;

11.16.4.1
date	2004.03.11.23.48.07;	author morrison;	state Exp;
branches;
next	;

11.16.10.1
date	2004.02.12.19.37.13;	author erikg;	state Exp;
branches;
next	11.16.10.2;

11.16.10.2
date	2004.03.15.14.08.07;	author erikg;	state Exp;
branches;
next	;


desc
@Program to generate test cell-by-cell plots using LIBRT
@


11.20
log
@moved to src/rt/
@
text
@/*
 *			V I E W C E L L
 *
 *  Ray Tracing program RTCELL bottom half.
 *
 *  Author -
 *	Michael John Muuss
 *  
 *  Source -
 *	SECAD/VLD Computing Consortium, Bldg 394
 *	The U. S. Army Ballistic Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005
 *  
 *  Copyright Notice -
 *	This software is Copyright (C) 1989-2004 by the United States Army.
 *	All rights reserved.
 */
#ifndef lint
static const char RCScell[] = "@@(#)$Header: /n/xoff/cvs/brlcad/rt/viewcell.c,v 11.19 2004/05/10 15:30:49 erikg Exp $ (BRL)";
#endif

#ifdef HAVE_CONFIG_H
# include "config.h"
#endif



#include <stdio.h>
#include <math.h>

#ifdef USE_STRING_H
#include <string.h>
#else
#include <strings.h>
#endif

#include "machine.h"
#include "vmath.h"
#include "raytrace.h"
#include "./ext.h"

#include "rtprivate.h"

#define	MM2IN	0.03937008		/* mm times MM2IN gives inches */


extern fastf_t	gift_grid_rounding;
extern point_t	viewbase_model;

extern int	npsw;			/* number of worker PSWs to run */

int		use_air = 0;		/* Handling of air in librt */

/* Viewing module specific "set" variables */
struct bu_structparse view_parse[] = {
	{"",	0, (char *)0,	0,		BU_STRUCTPARSE_FUNC_NULL }
};

static mat_t	model2hv;		/* model coords to GIFT h,v in inches */

char usage[] = "\
Usage:  rtcell [options] model.g objects... >file.cell\n\
Options:\n\
 -s #		Grid size in pixels, default 512\n\
 -a Az		Azimuth in degrees	(conflicts with -M)\n\
 -e Elev	Elevation in degrees	(conflicts with -M)\n\
 -M		Read model2view matrix on stdin (conflicts with -a, -e)\n\
 -g #		Grid cell width in millimeters (conflicts with -s\n\
 -G #		Grid cell height in millimeters (conflicts with -s\n\
 -J #		Jitter.  Default is off.  Any non-zero number is on\n\
 -o model.cell	Specify output file (default=stdout)\n\
 -U #		Set use_air boolean to # (default=1)\n\
 -x #		Set librt debug flags\n\
";

int	rayhit(register struct application *ap, struct partition *PartHeadp);
int     raymiss(register struct application *ap);

/*
 *  			V I E W _ I N I T
 *
 *  This routine is called by main().  It prints the overall shotline
 *  header. Furthermore, pointers to rayhit() and raymiss() are set up
 *  and are later called from do_run().
 */
int
view_init(register struct application *ap, char *file, char *obj, int minus_o)
{

	if( !minus_o )
		outfp = stdout;
	
	/*
	 *  Cause grid_setup() to align the grid on one inch boundaries,
	 *  or cell_width boundaries, if it is given.
	 */
	if( cell_width > 0 )
		gift_grid_rounding = cell_width;
	else
		gift_grid_rounding = 25.4;		/* one inch */

	ap->a_hit = rayhit;
	ap->a_miss = raymiss;
	ap->a_onehit = 0;

	output_is_binary = 0;		/* output is printable ascii */

	return(0);		/* No framebuffer needed */
}

/*
 *			V I E W _ 2 I N I T
 *
 *  View_2init is called by do_frame(), which in turn is called by
 *  main() in rt.c.
 * 
 */
void
view_2init(struct application *ap)
{

	if( outfp == NULL )
		rt_bomb("outfp is NULL\n");

	/*
	 *  Not dropping out of parallel mode until here permits
	 *  tree walking and database prepping to still be done in parallel.
	 */
	if( npsw >= 1 )  {
		bu_log("Note: changing from %d cpus to 1 cpu\n", npsw );
		npsw = 1;		/* Disable parallel processing */
	}

	/*
	 *  GIFT uses an H,V coordinate system that is anchored at the
	 *  model origin, but rotated according to the view.
	 *  For convenience later, build a matrix that will take
	 *  a point in model space (with units of mm), and convert it
	 *  to a point in HV space, with units of inches.
	 */
	MAT_COPY( model2hv, Viewrotscale );
	model2hv[15] = 1/MM2IN;
}

/*
 *			R A Y M I S S
 *
 *  Null function -- handle a miss
 *  This function is called by rt_shootray(), which is called by
 *  do_frame().
 */
int
raymiss(register struct application *ap)
{
	return(0);
}

/*
 *			V I E W _ P I X E L
 *
 *  This routine is called from do_run(), and in this case does nothing.
 */
void
view_pixel(void)
{
	return;
}

/*
 *			R A Y H I T
 *
 *  Rayhit() is called by rt_shootray() when the ray hits one or more objects.
 *  Write information about this "cell".
 */
int
rayhit(struct application *ap, register struct partition *PartHeadp)
{
	register struct partition *pp = PartHeadp->pt_forw;
	point_t			hv;		/* GIFT h,v coords, in inches */
	fastf_t			dot;
	vect_t			normal;

	if( pp == PartHeadp )
		return(0);		/* nothing was actually hit?? */

	if( jitter & JITTER_CELL )  {
		/*
		 *  Find exact h,v coordinates of actual ray start by
		 *  projecting start point into GIFT h,v coordinates.
		 */
		MAT4X3PNT( hv, model2hv, ap->a_ray.r_pt );
	} else {
		/*
		 *  Find the H,V coordinates of the grid cell _center_,
		 *  for GIFT compatible behavior.
		 *  RT uses the lower left _corner_ of each cell.
		 */
		point_t		center;
		fastf_t		dx;
		fastf_t		dy;

		dx = ap->a_x + 0.5;
		dy = ap->a_y + 0.5;
		VJOIN2( center, viewbase_model, dx, dx_model, dy, dy_model );
		MAT4X3PNT( hv, model2hv, center );
	}

	RT_HIT_NORMAL( normal, pp->pt_inhit, pp->pt_inseg->seg_stp, &(ap->a_ray), pp->pt_inflip );
	dot = -VDOT( normal, ap->a_ray.r_dir );
	if( dot < 0 )  dot = 0;
	fprintf( outfp, "%g %g %g\n",
		hv[0], hv[1], dot );

	return(0);
}

/*
 *			V I E W _ E O L
 *
 *  View_eol() is called by rt_shootray() in do_run().  In this case,
 *  it does nothing.
 */
void	view_eol(void)
{
}

/*
 *			V I E W _ E N D
 *
 *  View_end() is called by rt_shootray in do_run().
 */
void
view_end(void)
{
	fflush(outfp);
}

void view_setup(void) {}
void view_cleanup(void) {}

void application_init (void) {}
@


11.19
log
@change conf.h to a wrapped config.h
@
text
@d19 1
a19 1
static const char RCScell[] = "@@(#)$Header: /cvs/brlcad/rt/viewcell.c,v 11.18 2004/04/05 05:45:59 morrison Exp $ (BRL)";
@


11.18
log
@merge of ansi-6-0-branch into head
@
text
@d19 1
a19 1
static const char RCScell[] = "@@(#)$Header$ (BRL)";
d22 5
a26 1
#include "conf.h"
@


11.17
log
@update copyright to include span through 2003
@
text
@d19 1
a19 1
static const char RCScell[] = "@@(#)$Header: /c/CVS/brlcad/rt/viewcell.c,v 11.16 2002/08/20 17:08:38 jra Exp $ (BRL)";
d72 2
a73 1
int	rayhit(), raymiss();
d83 1
a83 3
view_init( ap, file, obj, minus_o )
register struct application *ap;
char *file, *obj;
d115 1
a115 2
view_2init( ap )
struct application	*ap;
d149 1
a149 1
raymiss()
d160 1
a160 1
view_pixel()
d172 1
a172 3
rayhit( ap, PartHeadp )
struct application *ap;
register struct partition *PartHeadp;
d219 1
a219 1
void	view_eol()
d229 1
a229 1
view_end()
d234 2
a235 2
void view_setup() {}
void view_cleanup() {}
d237 1
a237 1
void application_init () {}
@


11.16
log
@Restoration of entire source tree to Pre-Hartley state
@
text
@d15 1
a15 1
 *	This software is Copyright (C) 1989 by the United States Army.
d19 1
a19 1
static const char RCScell[] = "@@(#)$Header: /c/CVS/brlcad/rt/viewcell.c,v 11.14 2001/04/02 21:38:30 morrison Exp $ (BRL)";
@


11.16.4.1
log
@sync to HEAD...
@
text
@d15 1
a15 1
 *	This software is Copyright (C) 1989-2004 by the United States Army.
d19 1
a19 1
static const char RCScell[] = "@@(#)$Header: /n/cad/c/CVS/brlcad/rt/viewcell.c,v 11.17 2004/02/02 17:39:39 morrison Exp $ (BRL)";
@


11.16.10.1
log
@merge from HEAD
@
text
@d15 1
a15 1
 *	This software is Copyright (C) 1989-2004 by the United States Army.
d19 1
a19 1
static const char RCScell[] = "@@(#)$Header: /c/CVS/brlcad/rt/viewcell.c,v 11.17 2004/02/02 17:39:39 morrison Exp $ (BRL)";
@


11.16.10.2
log
@merge from head
@
text
@d19 1
a19 1
static const char RCScell[] = "@@(#)$Header: /c/CVS/brlcad/rt/viewcell.c,v 11.16.10.1 2004/02/12 19:37:13 erikg Exp $ (BRL)";
@


11.16.2.1
log
@Initial ANSIfication
@
text
@d19 1
a19 1
static const char RCScell[] = "@@(#)$Header: /c/CVS/brlcad/rt/viewcell.c,v 11.16 2002/08/20 17:08:38 jra Exp $ (BRL)";
d72 1
a72 2
int	rayhit(register struct application *ap, struct partition *PartHeadp);
int     raymiss(register struct application *ap);
d82 3
a84 1
view_init(register struct application *ap, char *file, char *obj, int minus_o)
d116 2
a117 1
view_2init(struct application *ap)
d151 1
a151 1
raymiss(register struct application *ap)
d162 1
a162 1
view_pixel(void)
d174 3
a176 1
rayhit(struct application *ap, register struct partition *PartHeadp)
d223 1
a223 1
void	view_eol(void)
d233 1
a233 1
view_end(void)
d238 2
a239 2
void view_setup(void) {}
void view_cleanup(void) {}
d241 1
a241 1
void application_init (void) {}
@


11.16.2.2
log
@sync branch with HEAD
@
text
@d15 1
a15 1
 *	This software is Copyright (C) 1989-2004 by the United States Army.
d19 1
a19 1
static const char RCScell[] = "@@(#)$Header$ (BRL)";
@


11.15
log
@Converted from K&R to ANSI C - RFH
@
text
@d72 1
a72 2
int	rayhit(register struct application *ap, struct partition *PartHeadp);
int     raymiss(register struct application *ap);
d82 3
a84 1
view_init(register struct application *ap, char *file, char *obj, int minus_o)
d116 2
a117 1
view_2init(struct application *ap)
d151 1
a151 1
raymiss(register struct application *ap)
d162 1
a162 1
view_pixel(void)
d174 3
a176 1
rayhit(struct application *ap, register struct partition *PartHeadp)
d223 1
a223 1
void	view_eol(void)
d233 1
a233 1
view_end(void)
d238 2
a239 2
void view_setup(void) {}
void view_cleanup(void) {}
d241 1
a241 1
void application_init (void) {}
@


11.14
log
@Deprecated bn_mat_copy() for new performance version of MAT_COPY() macro in h/vmath.h.
@
text
@d19 1
a19 1
static const char RCScell[] = "@@(#)$Header: /c/CVS/brlcad/rt/viewcell.c,v 11.13 2001/04/02 15:05:14 jra Exp $ (BRL)";
d72 2
a73 1
int	rayhit(), raymiss();
d83 1
a83 3
view_init( ap, file, obj, minus_o )
register struct application *ap;
char *file, *obj;
d115 1
a115 2
view_2init( ap )
struct application	*ap;
d149 1
a149 1
raymiss()
d160 1
a160 1
view_pixel()
d172 1
a172 3
rayhit( ap, PartHeadp )
struct application *ap;
register struct partition *PartHeadp;
d219 1
a219 1
void	view_eol()
d229 1
a229 1
view_end()
d234 2
a235 2
void view_setup() {}
void view_cleanup() {}
d237 1
a237 1
void application_init () {}
@


11.13
log
@Lint
@
text
@d19 1
a19 1
static const char RCScell[] = "@@(#)$Header: /c/CVS/brlcad/rt/viewcell.c,v 11.12 2000/08/17 02:41:38 mike Exp $ (BRL)";
d139 1
a139 1
	bn_mat_copy( model2hv, Viewrotscale );
@


11.12
log
@
Added "const" to RCSid, to quiet Gnu C compilers.
@
text
@d19 1
a19 1
static const char RCScell[] = "@@(#)$Header: /c/CVS/brlcad/rt/viewcell.c,v 11.11 2000/07/25 16:39:48 butler Exp $ (BRL)";
d26 6
@


11.11
log
@Many patches for warning-free compilation on Linux.
Moved rdebug.h to h/rtprivate.h
@
text
@d19 1
a19 1
static char RCScell[] = "@@(#)$Header: /c/CVS/brlcad/rt/viewcell.c,v 11.10 1999/11/24 22:17:07 mike Exp $ (BRL)";
@


11.10
log
@
Removed obsolete header files
@
text
@d19 1
a19 1
static char RCScell[] = "@@(#)$Header: /c/CVS/brlcad/rt/viewcell.c,v 11.9 1999/07/02 22:19:46 mike Exp $ (BRL)";
d32 1
a32 1
#include "rdebug.h"
@


11.9
log
@
Removed dependence on compat4.h
@
text
@d19 1
a19 1
static char RCScell[] = "@@(#)$Header: /c/CVS/brlcad/rt/viewcell.c,v 11.8 1999/05/28 01:19:28 mike Exp $ (BRL)";
a28 1
#include "rtstring.h"
@


11.8
log
@
sed4
@
text
@d19 1
a19 1
static char RCScell[] = "@@(#)$Header: /c/CVS/brlcad/rt/viewcell.c,v 11.7 1998/09/22 00:21:52 mike Exp $ (BRL)";
d47 1
a47 1
	{"",	0, (char *)0,	0,		FUNC_NULL }
@


11.7
log
@Doesn't need material.h
@
text
@d19 1
a19 1
static char RCScell[] = "@@(#)$Header: /c/CVS/brlcad/rt/viewcell.c,v 11.6 1997/01/02 21:06:04 jra Exp $ (BRL)";
d123 1
a123 1
		rt_log("Note: changing from %d cpus to 1 cpu\n", npsw );
d134 1
a134 1
	mat_copy( model2hv, Viewrotscale );
@


11.6
log
@removed extra "extern double mat_radtodeg".
@
text
@d19 1
a19 1
static char RCScell[] = "@@(#)$Header: /m/cad/rt/RCS/viewcell.c,v 11.5 1996/08/30 00:08:21 butler Exp jra $ (BRL)";
a30 1
#include "./material.h"
@


11.5
log
@structparse moved to libbu
@
text
@d19 1
a19 1
static char RCScell[] = "@@(#)$Header: /m/cad/rt/RCS/viewcell.c,v 11.4 1996/07/29 22:16:47 mike Exp butler $ (BRL)";
a41 1
extern double	mat_radtodeg;
@


11.4
log
@jitter is now a bit vector
@
text
@d19 1
a19 1
static char RCScell[] = "@@(#)$Header: /m/cad/rt/RCS/viewcell.c,v 11.3 1996/03/29 23:20:55 mike Exp mike $ (BRL)";
d48 1
a48 1
struct structparse view_parse[] = {
@


11.3
log
@Changed from RT_HIT_NORM() to RT_HIT_NORMAL().
Now pt_inflip stuff is always handled correctly.
@
text
@d19 1
a19 1
static char RCScell[] = "@@(#)$Header: /m/cad/rt/RCS/viewcell.c,v 11.2 1995/12/06 17:57:53 pjt Exp mike $ (BRL)";
d183 1
a183 1
	if( jitter )  {
d191 3
a193 2
		 *  Find the H,V coordinates of the grid cell center.
		 *  RT uses the lower left corner of each cell.
@


11.2
log
@Added a stub for application_init()
@
text
@d19 1
a19 1
static char RCScell[] = "@@(#)$Header: /m/cad/rt/RCS/viewcell.c,v 11.1 1995/01/04 10:01:23 mike Rel4_4 pjt $ (BRL)";
d204 1
a204 7
	/* next macro must be on one line for 3d compiler */
	RT_HIT_NORM( pp->pt_inhit, pp->pt_inseg->seg_stp, &(ap->a_ray) );
	if( pp->pt_inflip )  {
		VREVERSE( normal, pp->pt_inhit->hit_normal );
	} else {
		VMOVE( normal, pp->pt_inhit->hit_normal );
	}
@


11.1
log
@Release_4.4
@
text
@d19 1
a19 1
static char RCScell[] = "@@(#)$Header: /m/cad/rt/RCS/viewcell.c,v 10.3 94/11/05 03:07:42 mike Exp $ (BRL)";
d242 2
@


10.3
log
@Irix 6
@
text
@d19 1
a19 1
static char RCScell[] = "@@(#)$Header: /m/cad/rt/RCS/viewcell.c,v 10.2 94/08/11 02:45:11 gdurf Exp Locker: mike $ (BRL)";
@


10.2
log
@Added include of conf.h
@
text
@d19 1
a19 1
static char RCScell[] = "@@(#)$Header: /m/cad/rt/RCS/viewcell.c,v 10.1 1991/10/12 06:42:17 mike Rel4_0 gdurf $ (BRL)";
a77 4

static char * save_file;
static char * save_obj;

a86 3
	save_file = file;
	save_obj = obj;

@


10.1
log
@Release_4.0
@
text
@d19 1
a19 1
static char RCScell[] = "@@(#)$Header: /m/cad/rt/RCS/viewcell.c,v 1.3 91/07/06 00:35:26 mike Exp $ (BRL)";
d21 2
@


1.3
log
@ANSI structure initialization
@
text
@d19 1
a19 1
static char RCScell[] = "@@(#)$Header: /m/cad/rt/RCS/viewcell.c,v 1.2 91/06/26 00:13:14 mike Exp $ (BRL)";
@


1.2
log
@Changed to take into account differences between RT and GIFT conventions.
@
text
@d19 1
a19 1
static char RCScell[] = "@@(#)$Header: /m/cad/rt/RCS/viewcell.c,v 1.1 91/06/23 23:45:07 mike Exp $ (BRL)";
d47 1
a47 1
	"",	0, (char *)0,	0,		FUNC_NULL
@


1.1
log
@Initial revision
@
text
@d19 1
a19 1
static char RCScell[] = "@@(#)$Header: /m/cad/rt/RCS/viewg3.c,v 9.18 91/06/19 20:55:47 mike Exp $ (BRL)";
d188 20
a207 5
	/*
	 *  Find exact h,v coordinates of actual ray start by
	 *  projecting start point into GIFT h,v coordinates.
	 */
	MAT4X3PNT( hv, model2hv, ap->a_ray.r_pt );
@
