head	11.2;
access;
symbols
	ansi-20040405-merged:11.1
	postmerge-20040405-ansi:11.1
	premerge-20040404-ansi:11.1
	postmerge-autoconf:11.1
	autoconf-freeze:11.1
	premerge-autoconf:11.1
	postmerge-20040315-windows:11.1
	premerge-20040315-windows:11.1
	windows-20040315-freeze:11.1
	autoconf-20031203:11.1
	autoconf-20031202:11.1
	autoconf-branch:11.1.0.14
	phong-branch:11.1.0.12
	photonmap-branch:11.1.0.10
	rel-6-1-DP:11.1
	windows-branch:11.1.0.8
	rel-6-0-2:11.1
	ansi-branch:11.1.0.6
	rel-6-0-1-branch:11.1.0.4
	hartley-6-0-post:11.1
	hartley-6-0-pre:11.1
	rel-6-0-1:11.1
	rel-6-0:11.1
	rel-5-4:11.1
	offsite-5-3-pre:11.1
	rel-5-3:11.1
	rel-5-2:11.1
	rel-5-1-branch:11.1.0.2
	rel-5-1:11.1
	rel-5-0:11.1
	rel-5-0-beta:11.1
	rel-4-5:11.1
	ctj-4-5-post:11.1
	ctj-4-5-pre:11.1
	rel-4-4:11.1
	rel-4-0:10.1;
locks; strict;
comment	@ * @;


11.2
date	2004.05.21.17.31.08;	author morrison;	state dead;
branches;
next	11.1;

11.1
date	95.01.04.10.01.03;	author mike;	state Rel4_4;
branches;
next	10.1;

10.1
date	91.10.12.06.42.06;	author mike;	state Rel4_0;
branches;
next	1.1;

1.1
date	91.07.02.01.37.10;	author mike;	state Exp;
branches;
next	;


desc
@scat.h
@


11.2
log
@moved to src/rt/
@
text
@/*
 *  GIFT/SRIM Radfile record format
 *
 *  Five kinds of records, each 72 (18*4) bytes long consisting of
 *  a four character identifier and 17 single precision (32bits) floats.
 *
 * 	Header		"head"	followed by two additional records
 *	Firing		"fire"	one per ray fired (if it intersected)
 *	Reflection	"refl"	one per intersection point
 *	Escape		"escp"	one per escaped ray (after last intersection)
 *	End
 */

#define	MAXREFLECT	16
#define	DEFAULTREFLECT	16

static struct rayinfo {
	int	sight;
	int	x,y;		/* x y corrdintaes of the grid */
	vect_t	ip;		/* intersection point */
	vect_t	norm;		/* normal vector */
	vect_t	spec;		/* specular direction */
	struct	curvature curvature;
	fastf_t	dist;
	vect_t	dir;		/* incoming direction vector */
	int	reg, sol, surf;
};

struct physics {
	int cpu;
	int rflt_ptr;
	fastf_t cdist;
	fastf_t ampl[2];
	fastf_t phase[2];
	vect_t pvec1;
	vect_t pvec2;
	vect_t dircv;
	fastf_t rcvhph;
	fastf_t rcvvph;
	fastf_t hrcv;
	fastf_t vrcv;
	int caustic;
	fastf_t r1;
	fastf_t r2;
	vect_t anext;
	vect_t bnext;
};


/* radar specific values */
extern fastf_t r_reflections;	/* Number of maximum reflections */
extern fastf_t wavelength;	/* Radar wavelength */
extern fastf_t xhpol;	/* Transmitter vertical polarization */
extern fastf_t xvpol;	/* Transmitter horizontal polarization */ 
extern fastf_t rhpol;	/* Receiver vertical polarization */
extern fastf_t rvpol;	/* Receiver horizontal polarization */
extern vect_t uhoriz;	/* horizontal emanation plane unit vector. */
extern vect_t unorml;	/* normal unit vector to emanation plane. */
extern vect_t cemant;	/* center vector of emanation plane. */
extern vect_t uvertp;	/* vertical emanation plane unit vector. */
extern fastf_t epsilon;
extern fastf_t totali;
extern fastf_t totalq;

extern struct rayinfo rayinfo[MAX_PSW][MAXREFLECT];

#undef M_PI

#define M_PI 3.14159265
@


11.1
log
@Release_4.4
@
text
@@


10.1
log
@Release_4.0
@
text
@@


1.1
log
@Initial revision
@
text
@@
