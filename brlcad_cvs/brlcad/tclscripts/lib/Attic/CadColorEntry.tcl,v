head	1.3;
access;
symbols;
locks; strict;
comment	@# @;


1.3
date	2000.07.13.13.24.45;	author bparker;	state dead;
branches;
next	1.2;

1.2
date	2000.07.12.22.04.24;	author bparker;	state Exp;
branches;
next	1.1;

1.1
date	2000.07.12.15.27.57;	author bparker;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Moved to file with the same name, except Cad is removed.
@
text
@##                 C A D C O L O R E N T R Y . T C L
#
# Author -
#	Bob Parker
#
# Source -
#	The U. S. Army Research Laboratory
#	Aberdeen Proving Ground, Maryland  21005
#
# Distribution Notice -
#	Re-distribution of this software is restricted, as described in
#       your "Statement of Terms and Conditions for the Release of
#       The BRL-CAD Package" agreement.
#
# Copyright Notice -
#       This software is Copyright (C) 1998 by the United States Army
#       in all countries except the USA.  All rights reserved.
#
# Description -
#	CadColorEntry instances are used to specify colors.
#

class CadColorEntry {
    inherit CadComboBox

    constructor {args} {}
    destructor {}

    public method rgbvalid {r g b}

    private method chooser {}
    private method setcolor {r g b}
    private method setMBcolor {}
    private method colorok {}
}

body CadColorEntry::constructor {args} {
    $itk_component(menu) add command -label black \
	    -command [code $this setcolor 0 0 0]
    $itk_component(menu) add command -label white \
	    -command [code $this setcolor 255 255 255]
    $itk_component(menu) add command -label red \
	    -command [code $this setcolor 255 0 0]
    $itk_component(menu) add command -label green \
	    -command [code $this setcolor 0 255 0]
    $itk_component(menu) add command -label blue\
	    -command [code $this setcolor 0 0 255]
    $itk_component(menu) add command -label yellow \
	    -command [code $this setcolor 255 255 0]
    $itk_component(menu) add command -label cyan \
	    -command [code $this setcolor 0 255 255]
    $itk_component(menu) add command -label magenta \
	    -command [code $this setcolor 255 0 255]
    $itk_component(menu) add separator
    $itk_component(menu) add command -label "Color Tool..." \
	    -command [code $this chooser]

    eval itk_initialize $args
    bind $itk_component(entry) <Return> [code $this setMBcolor]
}

body CadColorEntry::chooser {} {
    cadColorWidget dialog $itk_interior color \
	    -title "Color Chooser" \
	    -initialcolor [$itk_component(menubutton) cget -background] \
	    -ok [code $this colorok] \
	    -cancel "cadColorWidget_destroy $itk_interior.color"
}

body CadColorEntry::setcolor {r g b} {
    if {![rgbvalid $r $g $b]} {
	error "Improper color specification - $r $g $b"
    }

    settext "$r $g $b"
    $itk_component(menubutton) configure \
	    -bg [format "#%02x%02x%02x" $r $g $b]
}

body CadColorEntry::setMBcolor {} {
    eval setcolor [gettext]
}

body CadColorEntry::colorok {} {
    upvar #0 $itk_interior.color data
    setcolor $data(red) $data(green) $data(blue)
    cadColorWidget_destroy $itk_interior.color
}

body CadColorEntry::rgbvalid {r g b} {
    if {![string is integer $r]} {
	    return 0
    }
    if {![string is integer $g]} {
	    return 0
    }
    if {![string is integer $b]} {
	    return 0
    }
    if {$r < 0 || 255 < $r} {
	return 0
    }
    if {$g < 0 || 255 < $g} {
	return 0
    }
    if {$b < 0 || 255 < $b} {
	return 0
    }

    return 1
}
@


1.2
log
@Added new method (rgbvalid).
Mods to setcolor.
@
text
@@


1.1
log
@Mega-widget for specifying colors.
@
text
@d29 2
d32 1
a32 1
    private method setcolor {rgb}
d39 1
a39 1
	    -command [code $this setcolor {0 0 0}]
d41 1
a41 1
	    -command [code $this setcolor {255 255 255}]
d43 1
a43 1
	    -command [code $this setcolor {255 0 0}]
d45 1
a45 1
	    -command [code $this setcolor {0 255 0}]
d47 1
a47 1
	    -command [code $this setcolor {0 0 255}]
d49 1
a49 1
	    -command [code $this setcolor {255 255 0}]
d51 1
a51 1
	    -command [code $this setcolor {0 255 255}]
d53 1
a53 1
	    -command [code $this setcolor {255 0 255}]
d70 3
a72 9
body CadColorEntry::setcolor {rgb} {
    if {$rgb != ""} {
	set result [regexp "^(\[0-9\]+)\[ \]+(\[0-9\]+)\[ \]+(\[0-9\]+)\[ \]*$" \
		$rgb cmatch red green blue]
	if {!$result} {
	    error "Improper color specification - $rgb"
	}
    } else {
	return
d75 3
a77 2
    entryset $rgb
    $itk_component(menubutton) configure -bg [format "#%02x%02x%02x" $red $green $blue]
d81 1
a81 1
    setcolor [entryget]
d86 1
a86 1
    setcolor "$data(red) $data(green) $data(blue)"
d88 23
@

