head	1.20;
access;
symbols
	ansi-20040405-merged:1.17.4.1
	postmerge-20040405-ansi:1.18
	premerge-20040404-ansi:1.18
	postmerge-autoconf:1.18
	autoconf-freeze:1.17.12.1
	premerge-autoconf:1.18
	postmerge-20040315-windows:1.18
	premerge-20040315-windows:1.18
	windows-20040315-freeze:1.17.6.1
	autoconf-20031203:1.17
	autoconf-20031202:1.17
	autoconf-branch:1.17.0.12
	phong-branch:1.17.0.10
	photonmap-branch:1.17.0.8
	rel-6-1-DP:1.17
	windows-branch:1.17.0.6
	rel-6-0-2:1.17
	ansi-branch:1.17.0.4
	rel-6-0-1-branch:1.17.0.2
	hartley-6-0-post:1.17
	hartley-6-0-pre:1.17
	rel-6-0-1:1.17
	rel-6-0:1.14
	rel-5-4:1.7.2.3
	offsite-5-3-pre:1.10
	rel-5-3:1.7.2.3
	rel-5-2:1.7.2.1
	rel-5-1-branch:1.7.0.2
	rel-5-1:1.7;
locks; strict;
comment	@# @;


1.20
date	2004.05.21.16.41.20;	author morrison;	state dead;
branches;
next	1.19;

1.19
date	2004.05.10.15.25.29;	author morrison;	state Exp;
branches;
next	1.18;

1.18
date	2004.02.02.17.39.43;	author morrison;	state Exp;
branches;
next	1.17;

1.17
date	2002.07.10.18.06.42;	author rbowers;	state Exp;
branches
	1.17.4.1
	1.17.6.1
	1.17.12.1;
next	1.16;

1.16
date	2002.07.10.17.21.11;	author rbowers;	state Exp;
branches;
next	1.15;

1.15
date	2002.06.19.20.17.26;	author butler;	state Exp;
branches;
next	1.14;

1.14
date	2001.11.29.17.20.04;	author bparker;	state Exp;
branches;
next	1.13;

1.13
date	2001.11.27.17.55.45;	author bparker;	state Exp;
branches;
next	1.12;

1.12
date	2001.10.03.15.32.32;	author bparker;	state Exp;
branches;
next	1.11;

1.11
date	2001.05.02.22.28.10;	author bparker;	state Exp;
branches;
next	1.10;

1.10
date	2001.01.11.23.20.25;	author bparker;	state Exp;
branches;
next	1.9;

1.9
date	2000.11.08.18.13.32;	author bparker;	state Exp;
branches;
next	1.8;

1.8
date	2000.07.21.21.08.16;	author bparker;	state Exp;
branches;
next	1.7;

1.7
date	2000.05.26.20.11.53;	author bparker;	state Exp;
branches
	1.7.2.1;
next	1.6;

1.6
date	2000.05.12.21.51.59;	author bparker;	state Exp;
branches;
next	1.5;

1.5
date	2000.05.02.20.53.57;	author bparker;	state Exp;
branches;
next	1.4;

1.4
date	2000.03.07.22.21.32;	author bparker;	state Exp;
branches;
next	1.3;

1.3
date	2000.02.25.21.48.20;	author bparker;	state Exp;
branches;
next	1.2;

1.2
date	2000.02.22.17.32.35;	author bparker;	state Exp;
branches;
next	1.1;

1.1
date	2000.02.18.21.37.53;	author bparker;	state Exp;
branches;
next	;

1.7.2.1
date	2000.08.16.17.02.25;	author bparker;	state Exp;
branches;
next	1.7.2.2;

1.7.2.2
date	2000.11.08.15.46.56;	author bparker;	state Exp;
branches;
next	1.7.2.3;

1.7.2.3
date	2001.01.11.23.12.55;	author bparker;	state Exp;
branches;
next	;

1.17.4.1
date	2004.03.17.21.23.05;	author morrison;	state Exp;
branches;
next	;

1.17.6.1
date	2004.03.11.23.48.52;	author morrison;	state Exp;
branches;
next	;

1.17.12.1
date	2004.02.12.18.34.48;	author erikg;	state Exp;
branches;
next	;


desc
@@


1.20
log
@moved to src/tclscripts/
@
text
@##                 D R A W A B L E . T C L
#
# Author -
#	Bob Parker
#
# Source -
#	The U. S. Army Research Laboratory
#	Aberdeen Proving Ground, Maryland  21005
#
# Distribution Notice -
#	Re-distribution of this software is restricted, as described in
#       your "Statement of Terms and Conditions for the Release of
#       The BRL-CAD Package" agreement.
#
# Copyright Notice -
#       This software is Copyright (C) 1998-2004 by the United States Army
#       in all countries except the USA.  All rights reserved.
#
# Description -
#	The Drawable class wraps LIBRT's drawable geometry object.
#
class Drawable {
    protected variable dg ""

    constructor {db} {}
    destructor {}
    
    public {
	method assoc {args}
	method autoview {args}
	method blast {args}
	method clear {args}
	method draw {args}
	method E {args}
	method erase {args}
	method erase_all {args}
	method ev {args}
	method get_autoview {}
	method get_eyemodel {viewObj}
	method get_dgname {}
	method how {args}
	method illum {args}
	method label {args}
	method nirt {args}
	method observer {args}
	method overlay {args}
	method report {args}
	method qray {args}
	method rt {args}
	method rtabort {args}
	method rtcheck {args}
	method rtedge {args}
	method set_transparency {args}
	method shaded_mode {args}
	method vdraw {args}
	method who {args}
	method zap {args}

	method ? {}
	method apropos {key}
	method help {args}
	method getUserCmds {}
    }

    private {
	method help_init {}
	variable help
    }
}

body Drawable::constructor {db} {
    set dg [subst $this]_dg
    dg_open $dg $db
    Drawable::help_init
}

body Drawable::destructor {} {
    rename $dg ""
    catch {delete object $help}
}

body Drawable::assoc {args} {
    eval $dg assoc $args
}

body Drawable::autoview {args} {
    eval $dg autoview $args
}

body Drawable::blast {args} {
    eval $dg blast $args
}

body Drawable::clear {args} {
    eval $dg clear $args
}

body Drawable::draw {args} {
    eval $dg draw $args
}

body Drawable::E {args} {
    eval $dg E $args
}

body Drawable::erase {args} {
    eval $dg erase $args
}

body Drawable::erase_all {args} {
    eval $dg erase_all $args
}

body Drawable::ev {args} {
    eval $dg ev $args
}

body Drawable::get_autoview {} {
    $dg get_autoview
}

body Drawable::get_dgname {} {
    return $dg
}

body Drawable::get_eyemodel {viewObj} {
    return [$dg get_eyemodel $viewObj]
}

body Drawable::how {args} {
    eval $dg how $args
}

body Drawable::illum {args} {
    eval $dg illum $args
}

body Drawable::label {args} {
    eval $dg label $args
}

body Drawable::nirt {args} {
    eval $dg nirt $args
}

body Drawable::observer {args} {
    eval $dg observer $args
}

body Drawable::overlay {args} {
    eval $dg overlay $args
}

body Drawable::report {args} {
    eval $dg report $args
}

body Drawable::qray {args} {
    eval $dg qray $args
}

body Drawable::rt {args} {
    eval $dg rt $args
}

body Drawable::rtabort {} {
    $dg rtabort
}

body Drawable::rtcheck {args} {
    eval $dg rtcheck $args
}

body Drawable::rtedge {args} {
    eval $dg rtedge $args
}

body Drawable::set_transparency {args} {
    eval $dg set_transparency $args
}

body Drawable::shaded_mode {args} {
    eval $dg shaded_mode $args
}

body Drawable::vdraw {args} {
    eval $dg vdraw $args
}

body Drawable::who {args} {
    eval $dg who $args
}

body Drawable::zap {args} {
    eval $dg zap $args
}

body Drawable::help {args} {
    return [eval $help get $args]
}

body Drawable::? {} {
    return [$help ? 20 4]
}

body Drawable::apropos {key} {
    return [$help apropos $key]
}

body Drawable::getUserCmds {} {
    return [$help getCmds]
}

body Drawable::help_init {} {
    set help [cadwidgets::Help #auto]

    $help add autoview		{{view_obj} {set the view object's size and center}}
    $help add E			{{[-s] <objects>} {evaluated edit of objects. Option 's' provides a slower,
        but better fidelity evaluation}}
    $help add blast		{{-C#/#/# <objects>} {clear screen, draw objects}}
    $help add clear		{{} {clear screen}}
    $help add draw		{{-C#/#/# <objects>} {draw objects}}
    $help add erase		{{<objects>} {remove objects from the screen}}
    $help add erase_all		{{<objects>} {remove all occurrences of object(s) from the screen}}
    $help add ev		{{[-dfnqstuvwT] [-P #] <objects>} {evaluate objects via NMG tessellation}}
    $help add get_autoview	{{} {get view parameters that shows drawn geometry}}
    $help add how		{{obj} {returns how an object is being displayed}}
    $help add illum		{{name} {illuminate object}}
    $help add label		{{[-n] obj} {label objects}}
    $help add nirt		{{[nirt(1) options] [x y z]}	{trace a single ray from current view}}
    $help add overlay		{{file.plot [name]} {read UNIX-Plot as named overlay}}
    $help add qray		{{subcommand}	{get/set query_ray characteristics}}
    $help add report		{{[lvl]} {print solid table & vector list}}
    $help add rt		{{[options] [-- objects]} {do raytrace of view or specified objects}}
    $help add rtabort		{{} {abort the associated raytraces}}
    $help add rtcheck		{{[options]} {check for overlaps in current view}}
    $help add rtedge		{{[options] [-- objects]} {do raytrace of view or specified objects yielding only edges}}
    $help add shaded_mode	{{[0|1|2]}	{get/set shaded mode}}
    $help add vdraw		{{write|insert|delete|read|length|show [args]} {vector drawing (cnuzman)}}
    $help add who		{{[r(eal)|p(hony)|b(oth)]} {list the top-level objects currently being displayed}}
    $help add zap		{{} {clear screen}}
}
@


1.19
log
@Bob Parker's view modifications, png framebuffer support, shaded drawing mode
@
text
@@


1.18
log
@update copyright to include span through 2003
@
text
@d41 3
a43 2
	method illum {obj}
	method label {obj}
d53 1
d130 4
d178 4
d227 1
@


1.17
log
@-* added support for get_eyemodel
@
text
@d16 1
a16 1
#       This software is Copyright (C) 1998 by the United States Army
@


1.17.4.1
log
@sync branch with HEAD
@
text
@d16 1
a16 1
#       This software is Copyright (C) 1998-2004 by the United States Army
@


1.17.6.1
log
@sync to HEAD...
@
text
@d16 1
a16 1
#       This software is Copyright (C) 1998-2004 by the United States Army
@


1.17.12.1
log
@merge from HEAD
@
text
@d16 1
a16 1
#       This software is Copyright (C) 1998-2004 by the United States Army
@


1.16
log
@-*  added get_eyemodel
@
text
@d52 1
@


1.15
log
@SURVICE mods
@
text
@d27 39
a65 36

    public method assoc {args}
    public method autoview {args}
    public method blast {args}
    public method clear {args}
    public method draw {args}
    public method E {args}
    public method erase {args}
    public method erase_all {args}
    public method ev {args}
    public method get_autoview {}
    public method get_dgname {}
    public method illum {obj}
    public method label {obj}
    public method nirt {args}
    public method observer {args}
    public method overlay {args}
    public method report {args}
    public method qray {args}
    public method rt {args}
    public method rtabort {args}
    public method rtcheck {args}
    public method rtedge {args}
    public method shaded_mode {args}
    public method vdraw {args}
    public method who {args}
    public method zap {args}

    public method ? {}
    public method apropos {key}
    public method help {args}
    public method getUserCmds {}

    private method help_init {}

    private variable help
d121 4
@


1.14
log
@*- add "args" parameter to the "clear" method
*- use eval in the "zap" method
*- add nirt and qray to the set of user commands
@
text
@d50 1
d164 4
d219 1
@


1.13
log
@*- add qray and nirt methods
@
text
@d31 1
a31 1
    public method clear {}
d87 2
a88 2
body Drawable::clear {} {
    $dg clear
d172 1
a172 1
    $dg zap $args
d206 1
d208 1
@


1.12
log
@Added the following methods:
	autoview E rtedge
@
text
@d41 1
d45 1
d127 4
d141 4
@


1.11
log
@*- use rename instead of calling the embedded
   object's close command
@
text
@d29 1
d33 1
d47 1
d50 1
a50 1
    public method zap {}
d73 10
a82 2
body Drawable::observer {args} {
    eval $dg observer $args
d85 2
a86 2
body Drawable::assoc {args} {
    eval $dg assoc $args
d93 4
d101 6
a106 2
body Drawable::zap {} {
    $dg zap
d109 2
a110 2
body Drawable::who {args} {
    eval $dg who $args
d113 2
a114 2
body Drawable::blast {args} {
    eval $dg blast $args
d117 2
a118 2
body Drawable::clear {} {
    $dg clear
d121 2
a122 2
body Drawable::ev {args} {
    eval $dg ev $args
d125 2
a126 2
body Drawable::erase_all {args} {
    eval $dg erase_all $args
d149 4
d157 2
a158 6
body Drawable::get_autoview {} {
    $dg get_autoview
}

body Drawable::get_dgname {} {
    return $dg
d161 2
a162 6
body Drawable::illum {args} {
    eval $dg illum $args
}

body Drawable::label {args} {
    eval $dg label $args
d184 3
d195 1
a195 1
    $help add label		{{} {}}
d197 1
a197 1
    $help add report		{{} {}}
d199 1
d201 1
@


1.10
log
@*- added rtabort
@
text
@d66 2
a67 2
    $dg close
    delete object $help
@


1.9
log
@Remove unnecessary use of eval.
@
text
@d43 1
d120 4
@


1.8
log
@Add help methods.
@
text
@d98 1
a98 1
    eval $dg clear
d130 1
a130 1
    eval $dg get_autoview
@


1.7
log
@*- add report method
@
text
@d47 9
d61 1
d66 1
d143 37
@


1.7.2.1
log
@Make use of Help object.
@
text
@a46 9

    public method ? {}
    public method apropos {key}
    public method help {args}
    public method getUserCmds {}

    private method help_init {}

    private variable help
a51 1
    Drawable::help_init
a55 1
    delete object $help
a131 37
}

body Drawable::help {args} {
    return [eval $help get $args]
}

body Drawable::? {} {
    return [$help ? 20 4]
}

body Drawable::apropos {key} {
    return [$help apropos $key]
}

body Drawable::getUserCmds {} {
    return [$help getCmds]
}

body Drawable::help_init {} {
    set help [cadwidgets::Help #auto]

    $help add blast		{{-C#/#/# <objects>} {clear screen, draw objects}}
    $help add clear		{{} {clear screen}}
    $help add draw		{{-C#/#/# <objects>} {draw objects}}
    $help add erase		{{<objects>} {remove objects from the screen}}
    $help add erase_all		{{<objects>} {remove all occurrences of object(s) from the screen}}
    $help add ev		{{[-dfnqstuvwT] [-P #] <objects>} {evaluate objects via NMG tessellation}}
    $help add get_autoview	{{} {get view parameters that shows drawn geometry}}
    $help add illum		{{name} {illuminate object}}
    $help add label		{{} {}}
    $help add overlay		{{file.plot [name]} {read UNIX-Plot as named overlay}}
    $help add report		{{} {}}
    $help add rt		{{[options] [-- objects]} {do raytrace of view or specified objects}}
    $help add rtcheck		{{[options]} {check for overlaps in current view}}
    $help add vdraw		{{write|insert|delete|read|length|show [args]} {vector drawing (cnuzman)}}
    $help add who		{{[r(eal)|p(hony)|b(oth)]} {list the top-level objects currently being displayed}}
    $help add zap		{{} {clear screen}}
@


1.7.2.2
log
@Remove unnecessary use of eval.
@
text
@d98 1
a98 1
    $dg clear
d130 1
a130 1
    $dg get_autoview
@


1.7.2.3
log
@*- added rtabort
@
text
@a42 1
    public method rtabort {args}
a118 4
}

body Drawable::rtabort {} {
    $dg rtabort
@


1.6
log
@*- alphabetized method names
*- changed get_name to get_dgname
@
text
@d41 1
d100 4
@


1.5
log
@*- moved constructor implementation outside of
   class body
@
text
@a27 1
    public method observer {args}
d29 2
d33 1
a33 4
    public method zap {}
    public method who {args}
    public method blast {args}
    public method clear {}
d35 5
a39 1
    public method erase_all {args}
d44 2
a45 4
    public method get_autoview {}
    public method get_name {}
    public method illum {obj}
    public method label {obj}
d117 1
a117 1
body Drawable::get_name {} {
@


1.4
log
@*- add methods: illum, label
@
text
@d25 2
a26 8
    constructor {db} {
	set dg [subst $this]_dg
	dg_open $dg $db
    }

    destructor {
	$dg close
    }
d46 9
@


1.3
log
@*- add method: get_name
@
text
@d50 2
d116 8
@


1.2
log
@*- add get_autoview
@
text
@d49 1
d110 4
@


1.1
log
@*- [incr Tcl] class that wraps dg_obj
@
text
@d48 1
d105 4
@

