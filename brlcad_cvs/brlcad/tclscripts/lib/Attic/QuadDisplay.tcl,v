head	1.24;
access;
symbols
	ansi-20040405-merged:1.21.4.1
	postmerge-20040405-ansi:1.22
	premerge-20040404-ansi:1.22
	postmerge-autoconf:1.22
	autoconf-freeze:1.21.12.1
	premerge-autoconf:1.22
	postmerge-20040315-windows:1.22
	premerge-20040315-windows:1.22
	windows-20040315-freeze:1.21.6.1
	autoconf-20031203:1.21
	autoconf-20031202:1.21
	autoconf-branch:1.21.0.12
	phong-branch:1.21.0.10
	photonmap-branch:1.21.0.8
	rel-6-1-DP:1.21
	windows-branch:1.21.0.6
	rel-6-0-2:1.21
	ansi-branch:1.21.0.4
	rel-6-0-1-branch:1.21.0.2
	hartley-6-0-post:1.21
	hartley-6-0-pre:1.21
	rel-6-0-1:1.21
	rel-6-0:1.20
	rel-5-4:1.12.2.2
	offsite-5-3-pre:1.15
	rel-5-3:1.12.2.2
	rel-5-2:1.12.2.1
	rel-5-1-branch:1.12.0.2
	rel-5-1:1.12;
locks; strict;
comment	@# @;


1.24
date	2004.05.21.16.41.20;	author morrison;	state dead;
branches;
next	1.23;

1.23
date	2004.05.10.15.25.29;	author morrison;	state Exp;
branches;
next	1.22;

1.22
date	2004.02.02.17.39.43;	author morrison;	state Exp;
branches;
next	1.21;

1.21
date	2002.06.19.20.17.26;	author butler;	state Exp;
branches
	1.21.4.1
	1.21.6.1
	1.21.12.1;
next	1.20;

1.20
date	2001.12.03.23.14.15;	author bparker;	state Exp;
branches;
next	1.19;

1.19
date	2001.11.27.17.55.45;	author bparker;	state Exp;
branches;
next	1.18;

1.18
date	2001.10.03.21.37.06;	author bparker;	state Exp;
branches;
next	1.17;

1.17
date	2001.10.03.15.35.08;	author bparker;	state Exp;
branches;
next	1.16;

1.16
date	2001.08.14.16.56.15;	author bparker;	state Exp;
branches;
next	1.15;

1.15
date	2001.03.09.15.42.37;	author bparker;	state Exp;
branches;
next	1.14;

1.14
date	2001.01.11.23.20.25;	author bparker;	state Exp;
branches;
next	1.13;

1.13
date	2000.07.21.21.09.11;	author bparker;	state Exp;
branches;
next	1.12;

1.12
date	2000.05.19.20.57.46;	author bparker;	state Exp;
branches
	1.12.2.1;
next	1.11;

1.11
date	2000.05.19.18.50.13;	author bparker;	state Exp;
branches;
next	1.10;

1.10
date	2000.05.18.21.43.17;	author bparker;	state Exp;
branches;
next	1.9;

1.9
date	2000.05.12.21.56.55;	author bparker;	state Exp;
branches;
next	1.8;

1.8
date	2000.05.05.18.27.20;	author bparker;	state Exp;
branches;
next	1.7;

1.7
date	2000.05.05.13.27.08;	author bparker;	state Exp;
branches;
next	1.6;

1.6
date	2000.05.03.18.17.38;	author bparker;	state Exp;
branches;
next	1.5;

1.5
date	2000.05.02.20.58.12;	author bparker;	state Exp;
branches;
next	1.4;

1.4
date	2000.03.16.21.47.13;	author bparker;	state Exp;
branches;
next	1.3;

1.3
date	2000.03.02.23.03.52;	author bparker;	state Exp;
branches;
next	1.2;

1.2
date	2000.02.29.22.21.56;	author bparker;	state Exp;
branches;
next	1.1;

1.1
date	2000.02.28.21.14.39;	author bparker;	state Exp;
branches;
next	;

1.12.2.1
date	2000.08.16.17.02.25;	author bparker;	state Exp;
branches;
next	1.12.2.2;

1.12.2.2
date	2001.01.11.23.12.31;	author bparker;	state Exp;
branches;
next	;

1.21.4.1
date	2004.03.17.21.23.09;	author morrison;	state Exp;
branches;
next	;

1.21.6.1
date	2004.03.11.23.48.52;	author morrison;	state Exp;
branches;
next	;

1.21.12.1
date	2004.02.12.18.34.48;	author erikg;	state Exp;
branches;
next	;


desc
@@


1.24
log
@moved to src/tclscripts/
@
text
@#                 Q U A D D I S P L A Y . T C L
#
# Author -
#	Bob Parker
#
# Source -
#	The U. S. Army Research Laboratory
#	Aberdeen Proving Ground, Maryland  21005
#
# Distribution Notice -
#	Re-distribution of this software is restricted, as described in
#       your "Statement of Terms and Conditions for the Release of
#       The BRL-CAD Package" agreement.
#
# Copyright Notice -
#       This software is Copyright (C) 1998-2004 by the United States Army
#       in all countries except the USA.  All rights reserved.
#
# Description -
#	The QuadDisplay class is comprised of four Display objects. This class
#       keeps track of the current Display object and provides the means to toggle
#       between showing all four Display objects or just the current one.
#

option add *Pane*margin 0 widgetDefault
option add *QuadDisplay.width 400 widgetDefault
option add *QuadDisplay.height 400 widgetDefault

class QuadDisplay {
    inherit iwidgets::Panedwindow

    itk_option define -pane pane Pane ur
    itk_option define -multi_pane multi_pane Multi_pane 0
    itk_option define -paneCallback paneCallback PaneCallback ""

    constructor {args} {}
    destructor {}

    public method pane {args}
    public method multi_pane {args}
    public method refresh {}
    public method refreshAll {}

    # methods for controlling the view object
    public method ae {args}
    public method arot {args}
    public method base2local {}
    public method center {args}
    public method coord {args}
    public method eye {args}
    public method eye_pos {args}
    public method invSize {args}
    public method keypoint {args}
    public method local2base {}
    public method lookat {args}
    public method model2view {args}
    public method mrot {args}
    public method orientation {args}
    public method pmat {args}
    public method pmodel2view {args}
    public method pov {args}
    public method rmat {args}
    public method rot {args}
    public method rotate_about {args}
    public method sca {args}
    public method setview {args}
    public method size {args}
    public method slew {args}
    public method tra {args}
    public method units {args}
    public method view2model {args}
    public method vrot {args}
    public method vtra {args}
    public method zoom {args}

    public method autoview {{gindex 0}}
    public method autoviewAll {{gindex 0}}

    public method add {glist}
    public method addAll {glist}
    public method remove {glist}
    public method removeAll {glist}
    public method contents {}

    public method bg {args}
    public method bgAll {args}
    public method bounds {args}
    public method boundsAll {args}
    public method fb_active {args}
    public method fb_observe {args}
    public method depthMask {args}
    public method light {args}
    public method linestyle {args}
    public method linewidth {args}
    public method listen {args}
    public method perspective {args}
    public method perspective_angle {args}
    public method sync {}
    public method png {args}
    public method mouse_nirt {x y}
    public method nirt {args}
    public method vnirt {vx vy}
    public method qray {args}
    public method rt {args}
    public method rtabort {{gi 0}}
    public method rtcheck {args}
    public method rtedge {args}
    public method transparency {args}
    public method zbuffer {args}
    public method zclip {args}

    public method toggle_modelAxesEnable {args}
    public method toggle_modelAxesEnableAll {}
    public method toggle_modelAxesTickEnable {args}
    public method toggle_modelAxesTickEnableAll {}
    public method toggle_viewAxesEnable {args}
    public method toggle_viewAxesEnableAll {}
    public method toggle_centerDotEnable {args}
    public method toggle_centerDotEnableAll {}

    public method resetAll {}
    public method default_views {}
    public method attach_view {}
    public method attach_viewAll {}
    public method attach_drawable {dg}
    public method attach_drawableAll {dg}
    public method detach_view {}
    public method detach_viewAll {}
    public method detach_drawable {dg}
    public method detach_drawableAll {dg}

    public method lightAll {args}
    public method transparencyAll {args}
    public method zbufferAll {args}
    public method zclipAll {args}

    public method setCenterDotEnable {args}
    public method setViewAxesEnable {args}
    public method setModelAxesEnable {args}
    public method setViewAxesPosition {args}
    public method setModelAxesPosition {args}
    public method setModelAxesTickEnable {args}
    public method setModelAxesTickInterval {args}
    public method setModelAxesTicksPerMajor {args}

    public method rotate_mode {x y}
    public method translate_mode {x y}
    public method scale_mode {x y}

    public method resetBindings {}
    public method resetBindingsAll {}

    public method ? {}
    public method apropos {key}
    public method getUserCmds {}
    public method help {args}

    protected method toggle_multi_pane {}

    private variable priv_pane ur
    private variable priv_multi_pane 1
}

body QuadDisplay::constructor {args} {
    iwidgets::Panedwindow::add upper
    iwidgets::Panedwindow::add lower

    # create two more panedwindows
    itk_component add upw {
	::iwidgets::Panedwindow [childsite upper].pw -orient vertical
    } {
	usual
	keep -sashwidth -sashheight -sashborderwidth
	keep -sashindent -thickness
    }

    itk_component add lpw {
	::iwidgets::Panedwindow [childsite lower].pw -orient vertical
    } {
	usual
	keep -sashwidth -sashheight -sashborderwidth
	keep -sashindent -thickness
    }

    $itk_component(upw) add ulp
    $itk_component(upw) add urp
    $itk_component(lpw) add llp
    $itk_component(lpw) add lrp

    # create four instances of Display
    itk_component add ul {
	Display [$itk_component(upw) childsite ulp].display
    } {
	usual
    }

    itk_component add ur {
	Display [$itk_component(upw) childsite urp].display
    } {
	usual
    }

    itk_component add ll {
	Display [$itk_component(lpw) childsite llp].display
    } {
	usual
    }

    itk_component add lr {
	Display [$itk_component(lpw) childsite lrp].display
    } {
	usual
    }

    # initialize the views
    default_views

    pack $itk_component(ul) -fill both -expand yes
    pack $itk_component(ur) -fill both -expand yes
    pack $itk_component(ll) -fill both -expand yes
    pack $itk_component(lr) -fill both -expand yes

    pack $itk_component(upw) -fill both -expand yes
    pack $itk_component(lpw) -fill both -expand yes

    catch {eval itk_initialize $args}
}

configbody QuadDisplay::pane {
    pane $itk_option(-pane)
}

configbody QuadDisplay::multi_pane {
    multi_pane $itk_option(-multi_pane)
}

body QuadDisplay::pane {args} {
    # get the active pane
    if {$args == ""} {
	return $itk_option(-pane)
    }

    # set the active pane
    switch $args {
	ul -
	ur -
	ll -
	lr {
	    set itk_option(-pane) $args
	}
	default {
	    return -code error "pane: bad value - $args"
	}
    }

    if {!$itk_option(-multi_pane)} {
	# nothing to do
	if {$priv_pane == $itk_option(-pane)} {
	    return
	}

	switch $priv_pane {
	    ul {
		switch $itk_option(-pane) {
		    ur {
			$itk_component(upw) hide ulp
			$itk_component(upw) show urp
		    }
		    ll {
			iwidgets::Panedwindow::hide upper
			$itk_component(upw) show urp
			iwidgets::Panedwindow::show lower
			$itk_component(lpw) show llp
			$itk_component(lpw) hide lrp
		    }
		    lr {
			iwidgets::Panedwindow::hide upper
			$itk_component(upw) show urp
			iwidgets::Panedwindow::show lower
			$itk_component(lpw) hide llp
			$itk_component(lpw) show lrp
		    }
		}
	    }
	    ur {
		switch $itk_option(-pane) {
		    ul {
			$itk_component(upw) hide urp
			$itk_component(upw) show ulp
		    }
		    ll {
			iwidgets::Panedwindow::hide upper
			$itk_component(upw) show ulp
			iwidgets::Panedwindow::show lower
			$itk_component(lpw) show llp
			$itk_component(lpw) hide lrp
		    }
		    lr {
			iwidgets::Panedwindow::hide upper
			$itk_component(upw) show ulp
			iwidgets::Panedwindow::show lower
			$itk_component(lpw) hide llp
			$itk_component(lpw) show lrp
		    }
		}
	    }
	    ll {
		switch $itk_option(-pane) {
		    ul {
			iwidgets::Panedwindow::hide lower
			$itk_component(lpw) show lrp
			iwidgets::Panedwindow::show upper
			$itk_component(upw) hide urp
			$itk_component(upw) show ulp
		    }
		    ur {
			iwidgets::Panedwindow::hide lower
			$itk_component(lpw) show lrp
			iwidgets::Panedwindow::show upper
			$itk_component(upw) hide ulp
			$itk_component(upw) show urp
		    }
		    lr {
			$itk_component(lpw) hide llp
			$itk_component(lpw) show lrp
		    }
		}
	    }
	    lr {
		switch $itk_option(-pane) {
		    ul {
			iwidgets::Panedwindow::hide lower
			$itk_component(lpw) show llp
			iwidgets::Panedwindow::show upper
			$itk_component(upw) hide urp
			$itk_component(upw) show ulp
		    }
		    ur {
			iwidgets::Panedwindow::hide lower
			$itk_component(lpw) show llp
			iwidgets::Panedwindow::show upper
			$itk_component(upw) hide ulp
			$itk_component(upw) show urp
		    }
		    ll {
			$itk_component(lpw) hide lrp
			$itk_component(lpw) show llp
		    }
		}
	    }
	}
    }

	set priv_pane $itk_option(-pane)

    if {$itk_option(-paneCallback) != ""} {
	catch {eval $itk_option(-paneCallback) $args}
    }
}

body QuadDisplay::multi_pane {args} {
    # get multi_pane
    if {$args == ""} {
	return $itk_option(-multi_pane)
    }

    # nothing to do
    if {$args == $priv_multi_pane} {
	return
    }

    switch $args {
	0 -
	1 {
	    toggle_multi_pane
	}
	default {
	    return -code error "mult_pane: bad value - $args"
	}
    }
}

body QuadDisplay::refresh {} {
    $itk_component($itk_option(-pane)) refresh
}

body QuadDisplay::refreshAll {} {
    $itk_component(ul) refresh
    $itk_component(ur) refresh
    $itk_component(ll) refresh
    $itk_component(lr) refresh
}

body QuadDisplay::ae {args} {
    eval $itk_component($itk_option(-pane)) ae $args
}

body QuadDisplay::arot {args} {
    eval $itk_component($itk_option(-pane)) arot $args
}

body QuadDisplay::base2local {} {
    $itk_component($itk_option(-pane)) base2local
}

body QuadDisplay::center {args} {
    eval $itk_component($itk_option(-pane)) center $args
}

body QuadDisplay::coord {args} {
    eval $itk_component($itk_option(-pane)) coord $args
}

body QuadDisplay::eye {args} {
    eval $itk_component($itk_option(-pane)) eye $args
}

body QuadDisplay::eye_pos {args} {
    eval $itk_component($itk_option(-pane)) eye_pos $args
}

body QuadDisplay::invSize {args} {
    eval $itk_component($itk_option(-pane)) invSize $args
}

body QuadDisplay::keypoint {args} {
    eval $itk_component($itk_option(-pane)) keypoint $args
}

body QuadDisplay::local2base {} {
    $itk_component($itk_option(-pane)) local2base
}

body QuadDisplay::lookat {args} {
    eval $itk_component($itk_option(-pane)) lookat $args
}

body QuadDisplay::model2view {args} {
    eval $itk_component($itk_option(-pane)) model2view $args
}

body QuadDisplay::mrot {args} {
    eval $itk_component($itk_option(-pane)) mrot $args
}

body QuadDisplay::orientation {args} {
    eval $itk_component($itk_option(-pane)) orientation $args
}

body QuadDisplay::pmat {args} {
    eval $itk_component($itk_option(-pane)) pmat $args
}

body QuadDisplay::pmodel2view {args} {
    eval $itk_component($itk_option(-pane)) pmodel2view $args
}

body QuadDisplay::pov {args} {
    eval $itk_component($itk_option(-pane)) pov $args
}

body QuadDisplay::rmat {args} {
    eval $itk_component($itk_option(-pane)) rmat $args
}

body QuadDisplay::rot {args} {
    eval $itk_component($itk_option(-pane)) rot $args
}

body QuadDisplay::rotate_about {args} {
    eval $itk_component($itk_option(-pane)) rotate_about $args
}

body QuadDisplay::slew {args} {
    eval $itk_component($itk_option(-pane)) slew $args
}

body QuadDisplay::sca {args} {
    eval $itk_component($itk_option(-pane)) sca $args
}

body QuadDisplay::setview {args} {
    eval $itk_component($itk_option(-pane)) setview $args
}

body QuadDisplay::size {args} {
    eval $itk_component($itk_option(-pane)) size $args
}

body QuadDisplay::tra {args} {
    eval $itk_component($itk_option(-pane)) tra $args
}

body QuadDisplay::units {args} {
    eval $itk_component(ul) units $args
    eval $itk_component(ur) units $args
    eval $itk_component(ll) units $args
    eval $itk_component(lr) units $args
}

body QuadDisplay::view2model {args} {
    eval $itk_component($itk_option(-pane)) view2model $args
}

body QuadDisplay::vrot {args} {
    eval $itk_component($itk_option(-pane)) vrot $args
}

body QuadDisplay::vtra {args} {
    eval $itk_component($itk_option(-pane)) vtra $args
}

body QuadDisplay::zoom {args} {
    eval $itk_component($itk_option(-pane)) zoom $args
}

body QuadDisplay::autoview {{gindex 0}} {
    $itk_component($itk_option(-pane)) autoview $gindex
}

body QuadDisplay::autoviewAll {{gindex 0}} {
    $itk_component(ul) autoview $gindex
    $itk_component(ur) autoview $gindex
    $itk_component(ll) autoview $gindex
    $itk_component(lr) autoview $gindex
}

body QuadDisplay::add {glist} {
    $itk_component($itk_option(-pane)) add $glist
}

body QuadDisplay::addAll {glist} {
    $itk_component(ul) add $glist
    $itk_component(ur) add $glist
    $itk_component(ll) add $glist
    $itk_component(lr) add $glist
}

body QuadDisplay::remove {glist} {
    $itk_component($itk_option(-pane)) remove $glist
}

body QuadDisplay::removeAll {glist} {
    $itk_component(ul) remove $glist
    $itk_component(ur) remove $glist
    $itk_component(ll) remove $glist
    $itk_component(lr) remove $glist
}

body QuadDisplay::contents {} {
    $itk_component($itk_option(-pane)) contents
}

body QuadDisplay::listen {args} {
    eval $itk_component($itk_option(-pane)) listen $args
}

body QuadDisplay::linewidth {args} {
    set result [eval $itk_component($itk_option(-pane)) linewidth $args]
    if {$args != ""} {
	refresh
	return
    }
    return $result
}

body QuadDisplay::linestyle {args} {
    eval $itk_component($itk_option(-pane)) linestyle $args
}

body QuadDisplay::zclip {args} {
    eval $itk_component($itk_option(-pane)) zclip $args
}

body QuadDisplay::toggle_modelAxesEnable {args} {
    switch -- $args {
	ul -
	ur -
	ll -
	lr {
	    eval $itk_component($args) toggle_modelAxesEnable
	}
	default {
	    eval $itk_component($itk_option(-pane)) toggle_modelAxesEnable
	}
    }
}

body QuadDisplay::toggle_modelAxesEnableAll {} {
    eval $itk_component(ul) toggle_modelAxesEnable
    eval $itk_component(ur) toggle_modelAxesEnable
    eval $itk_component(ll) toggle_modelAxesEnable
    eval $itk_component(lr) toggle_modelAxesEnable
}

body QuadDisplay::toggle_modelAxesTickEnable {args} {
    switch -- $args {
	ul -
	ur -
	ll -
	lr {
	    eval $itk_component($args) toggle_modelAxesTickEnable
	}
	default {
	    eval $itk_component($itk_option(-pane)) toggle_modelAxesTickEnable
	}
    }
}

body QuadDisplay::toggle_modelAxesTickEnableAll {} {
    eval $itk_component(ul) toggle_modelAxesTickEnable
    eval $itk_component(ur) toggle_modelAxesTickEnable
    eval $itk_component(ll) toggle_modelAxesTickEnable
    eval $itk_component(lr) toggle_modelAxesTickEnable
}

body QuadDisplay::toggle_viewAxesEnable {args} {
    switch -- $args {
	ul -
	ur -
	ll -
	lr {
	    eval $itk_component($args) toggle_viewAxesEnable
	}
	default {
	    eval $itk_component($itk_option(-pane)) toggle_viewAxesEnable
	}
    }
}

body QuadDisplay::toggle_viewAxesEnableAll {} {
    eval $itk_component(ul) toggle_viewAxesEnable
    eval $itk_component(ur) toggle_viewAxesEnable
    eval $itk_component(ll) toggle_viewAxesEnable
    eval $itk_component(lr) toggle_viewAxesEnable
}

body QuadDisplay::toggle_centerDotEnable {args} {
    switch -- $args {
	ul -
	ur -
	ll -
	lr {
	    eval $itk_component($args) toggle_centerDotEnable
	}
	default {
	    eval $itk_component($itk_option(-pane)) toggle_centerDotEnable
	}
    }
}

body QuadDisplay::toggle_centerDotEnableAll {} {
    eval $itk_component(ul) toggle_centerDotEnable
    eval $itk_component(ur) toggle_centerDotEnable
    eval $itk_component(ll) toggle_centerDotEnable
    eval $itk_component(lr) toggle_centerDotEnable
}

body QuadDisplay::zclipAll {args} {
    eval $itk_component(ul) zclip $args
    eval $itk_component(ur) zclip $args
    eval $itk_component(ll) zclip $args
    eval $itk_component(lr) zclip $args
}

body QuadDisplay::setCenterDotEnable {args} {
    set ve [eval $itk_component($itk_option(-pane)) configure -centerDotEnable $args]

    # we must be doing a "get"
    if {$ve != ""} {
	return [lindex $ve 4]
    }
}

body QuadDisplay::setViewAxesEnable {args} {
    set ve [eval $itk_component($itk_option(-pane)) configure -viewAxesEnable $args]

    # we must be doing a "get"
    if {$ve != ""} {
	return [lindex $ve 4]
    }
}

body QuadDisplay::setModelAxesEnable {args} {
    set me [eval $itk_component($itk_option(-pane)) configure -modelAxesEnable $args]

    # we must be doing a "get"
    if {$me != ""} {
	return [lindex $me 4]
    }
}

body QuadDisplay::setViewAxesPosition {args} {
    set vap [eval $itk_component($itk_option(-pane)) configure -viewAxesPosition $args]

    # we must be doing a "get"
    if {$vap != ""} {
	return [lindex $vap 4]
    }
}

body QuadDisplay::setModelAxesPosition {args} {
    set map [eval $itk_component($itk_option(-pane)) configure -modelAxesPosition $args]

    # we must be doing a "get"
    if {$map != ""} {
	set mm2local [$itk_component($itk_option(-pane)) base2local]
	set map [lindex $map 4]
	set x [lindex $map 0]
	set y [lindex $map 1]
	set z [lindex $map 2]

	return [list [expr {$x * $mm2local}] \
		     [expr {$y * $mm2local}] \
		     [expr {$z * $mm2local}]]
    }
}

body QuadDisplay::setModelAxesTickEnable {args} {
    set te [eval $itk_component($itk_option(-pane)) configure -modelAxesTickEnable $args]

    # we must be doing a "get"
    if {$te != ""} {
	return [lindex $te 4]
    }
}

body QuadDisplay::setModelAxesTickInterval {args} {
    set ti [eval $itk_component($itk_option(-pane)) configure -modelAxesTickInterval $args]

    # we must be doing a "get"
    if {$ti != ""} {
	set ti [lindex $ti 4]
	return [expr {$ti * [$itk_component($itk_option(-pane)) base2local]}]
    }
}

body QuadDisplay::setModelAxesTicksPerMajor {args} {
    set tpm [eval $itk_component($itk_option(-pane)) configure -modelAxesTicksPerMajor $args]

    # we must be doing a "get"
    if {$tpm != ""} {
	return [lindex $tpm 4]
    }
}

body QuadDisplay::rotate_mode {x y} {
    eval $itk_component($itk_option(-pane)) rotate_mode $x $y
}

body QuadDisplay::translate_mode {x y} {
    eval $itk_component($itk_option(-pane)) translate_mode $x $y
}

body QuadDisplay::scale_mode {x y} {
    eval $itk_component($itk_option(-pane)) scale_mode $x $y
}

body QuadDisplay::transparency {args} {
    eval $itk_component($itk_option(-pane)) transparency $args
}

body QuadDisplay::transparencyAll {args} {
    eval $itk_component(ul) transparency $args
    eval $itk_component(ur) transparency $args
    eval $itk_component(ll) transparency $args
    eval $itk_component(lr) transparency $args
}

body QuadDisplay::zbuffer {args} {
    eval $itk_component($itk_option(-pane)) zbuffer $args
}

body QuadDisplay::zbufferAll {args} {
    eval $itk_component(ul) zbuffer $args
    eval $itk_component(ur) zbuffer $args
    eval $itk_component(ll) zbuffer $args
    eval $itk_component(lr) zbuffer $args
}

body QuadDisplay::depthMask {args} {
    eval $itk_component($itk_option(-pane)) depthMask $args
}

body QuadDisplay::light {args} {
    eval $itk_component($itk_option(-pane)) light $args
}

body QuadDisplay::lightAll {args} {
    eval $itk_component(ul) light $args
    eval $itk_component(ur) light $args
    eval $itk_component(ll) light $args
    eval $itk_component(lr) light $args
}

body QuadDisplay::perspective {args} {
    eval $itk_component($itk_option(-pane)) perspective $args
}

body QuadDisplay::perspective_angle {args} {
    eval $itk_component($itk_option(-pane)) perspective_angle $args
}

body QuadDisplay::sync {} {
    $itk_component($itk_option(-pane)) sync
}

body QuadDisplay::png {args} {
    eval $itk_component($itk_option(-pane)) png $args
}

body QuadDisplay::bg {args} {
    set result [eval $itk_component($itk_option(-pane)) bg $args]
    if {$args != ""} {
	refresh
	return
    }
    return $result
}

body QuadDisplay::bgAll {args} {
    set result [eval $itk_component(ul) bg $args]
    eval $itk_component(ur) bg $args
    eval $itk_component(ll) bg $args
    eval $itk_component(lr) bg $args

    if {$args != ""} {
	refreshAll
	return
    }

    return $result
}

body QuadDisplay::bounds {args} {
    eval $itk_component($itk_option(-pane)) bounds $args
}

body QuadDisplay::boundsAll {args} {
    eval $itk_component(ul) bounds $args
    eval $itk_component(ur) bounds $args
    eval $itk_component(ll) bounds $args
    eval $itk_component(lr) bounds $args
}

body QuadDisplay::fb_active {args} {
    eval $itk_component($itk_option(-pane)) fb_active $args
}

body QuadDisplay::fb_observe {args} {
    eval $itk_component($itk_option(-pane)) fb_observe $args
}

body QuadDisplay::mouse_nirt {x y} {
    eval $itk_component($itk_option(-pane)) mouse_nirt $x $y
}

body QuadDisplay::nirt {args} {
    eval $itk_component($itk_option(-pane)) nirt $args
}

body QuadDisplay::vnirt {vx vy} {
    eval $itk_component($itk_option(-pane)) vnirt $vx $vy
}

body QuadDisplay::qray {args} {
    eval $itk_component($itk_option(-pane)) qray $args
}

body QuadDisplay::rt {args} {
    eval $itk_component($itk_option(-pane)) rt $args
}

body QuadDisplay::rtabort {{gi 0}} {
    $itk_component($itk_option(-pane)) rtabort $gi
}

body QuadDisplay::rtcheck {args} {
    eval $itk_component($itk_option(-pane)) rtcheck $args
}

body QuadDisplay::rtedge {args} {
    eval $itk_component($itk_option(-pane)) rtedge $args
}

body QuadDisplay::resetAll {} {
    reset
    $itk_component(upw) reset
    $itk_component(lpw) reset
}

body QuadDisplay::default_views {} {
    $itk_component(ul) ae 0 90 0
    $itk_component(ur) ae 35 25 0
    $itk_component(ll) ae 0 0 0
    $itk_component(lr) ae 90 0 0
}

body QuadDisplay::attach_view {} {
    $itk_component($itk_option(-pane)) attach_view
}

body QuadDisplay::attach_viewAll {} {
    $itk_component(ul) attach_view
    $itk_component(ur) attach_view
    $itk_component(ll) attach_view
    $itk_component(lr) attach_view
}

body QuadDisplay::attach_drawable {dg} {
    $itk_component($itk_option(-pane)) attach_drawable $dg
}

body QuadDisplay::attach_drawableAll {dg} {
    $itk_component(ul) attach_drawable $dg
    $itk_component(ur) attach_drawable $dg
    $itk_component(ll) attach_drawable $dg
    $itk_component(lr) attach_drawable $dg
}

body QuadDisplay::detach_view {} {
    $itk_component($itk_option(-pane)) detach_view
}

body QuadDisplay::detach_viewAll {} {
    $itk_component(ul) detach_view
    $itk_component(ur) detach_view
    $itk_component(ll) detach_view
    $itk_component(lr) detach_view
}

body QuadDisplay::detach_drawable {dg} {
    $itk_component($itk_option(-pane)) detach_drawable $dg
}

body QuadDisplay::detach_drawableAll {dg} {
    $itk_component(ul) detach_drawable $dg
    $itk_component(ur) detach_drawable $dg
    $itk_component(ll) detach_drawable $dg
    $itk_component(lr) detach_drawable $dg
}

body QuadDisplay::toggle_multi_pane {} {
    if {$priv_multi_pane} {
	set itk_option(-multi_pane) 0
	set priv_multi_pane 0

	switch $itk_option(-pane) {
	    ul {
		iwidgets::Panedwindow::hide lower
		$itk_component(upw) hide urp
	    }
	    ur {
		iwidgets::Panedwindow::hide lower
		$itk_component(upw) hide ulp
	    }
	    ll {
		iwidgets::Panedwindow::hide upper
		$itk_component(lpw) hide lrp
	    }
	    lr {
		iwidgets::Panedwindow::hide upper
		$itk_component(lpw) hide llp
	    }
	}
    } else {
	set itk_option(-multi_pane) 1
	set priv_multi_pane 1

	switch $itk_option(-pane) {
	    ul {
		iwidgets::Panedwindow::show lower
		$itk_component(upw) show urp
	    }
	    ur {
		iwidgets::Panedwindow::show lower
		$itk_component(upw) show ulp
	    }
	    ll {
		iwidgets::Panedwindow::show upper
		$itk_component(lpw) show lrp
	    }
	    lr {
		iwidgets::Panedwindow::show upper
		$itk_component(lpw) show llp
	    }
	}
    }
}

body QuadDisplay::resetBindings {} {
    $itk_component($itk_option(-pane)) resetBindings
}

body QuadDisplay::resetBindingsAll {} {
    $itk_component(ul) resetBindings
    $itk_component(ur) resetBindings
    $itk_component(ll) resetBindings
    $itk_component(lr) resetBindings
}

body QuadDisplay::? {} {
    return [$itk_component(ur) ?]
}

body QuadDisplay::apropos {key} {
    return [$itk_component(ur) apropos $key]
}

body QuadDisplay::getUserCmds {} {
    return [$itk_component(ur) getUserCmds]
}

body QuadDisplay::help {args} {
    return [eval $itk_component(ur) help $args]
}

@


1.23
log
@Bob Parker's view modifications, png framebuffer support, shaded drawing mode
@
text
@@


1.22
log
@update copyright to include span through 2003
@
text
@d1 1
a1 1
##                 Q U A D D I S P L A Y . T C L
d33 2
a34 1
    itk_option define -multi_pane multi_pane Multi_pane 1
d42 1
a42 1
    public method refreshall {}
d47 1
d54 1
d70 1
d77 1
a77 1
    public method autoviewall {{gindex 0}}
d80 1
a80 1
    public method addall {glist}
d82 1
a82 1
    public method removeall {glist}
d86 3
d91 1
a95 1
    public method mouse_nirt {x y}
d98 3
d102 1
d108 1
d112 10
a121 1
    public method resetall {}
d124 1
a124 1
    public method attach_viewall {}
d126 1
a126 1
    public method attach_drawableall {dg}
d128 1
a128 1
    public method detach_viewall {}
d130 19
a148 1
    public method detach_drawableall {dg}
d150 2
a151 3
    public method lightall {args}
    public method zbufferall {args}
    public method zclipall {args}
d352 1
d355 3
d378 1
a378 1
	    return -code error "mult_mode: bad value - $args"
d387 1
a387 1
body QuadDisplay::refreshall {} {
d402 4
d430 4
d494 7
d521 1
a521 1
body QuadDisplay::autoviewall {{gindex 0}} {
d532 1
a532 1
body QuadDisplay::addall {glist} {
d543 1
a543 1
body QuadDisplay::removeall {glist} {
d575 85
a659 1
body QuadDisplay::zclipall {args} {
d666 104
d774 1
a774 1
body QuadDisplay::zbufferall {args} {
d781 4
d789 1
a789 1
body QuadDisplay::lightall {args} {
d804 8
d821 25
d862 4
d886 1
a886 1
body QuadDisplay::resetall {} {
d903 1
a903 1
body QuadDisplay::attach_viewall {} {
d914 1
a914 1
body QuadDisplay::attach_drawableall {dg} {
d925 1
a925 1
body QuadDisplay::detach_viewall {} {
d936 1
a936 1
body QuadDisplay::detach_drawableall {dg} {
d989 11
@


1.21
log
@SURVICE mods
@
text
@d16 1
a16 1
#       This software is Copyright (C) 1998 by the United States Army
@


1.21.4.1
log
@sync branch with HEAD
@
text
@d16 1
a16 1
#       This software is Copyright (C) 1998-2004 by the United States Army
@


1.21.6.1
log
@sync to HEAD...
@
text
@d16 1
a16 1
#       This software is Copyright (C) 1998-2004 by the United States Army
@


1.21.12.1
log
@merge from HEAD
@
text
@d16 1
a16 1
#       This software is Copyright (C) 1998-2004 by the United States Army
@


1.20
log
@*- added mouse_nirt method
@
text
@d111 4
d518 7
d529 7
d538 7
@


1.19
log
@*- add qray and nirt methods
@
text
@d88 1
d545 4
@


1.18
log
@*- changed zoom's arguments
@
text
@d90 2
d544 8
@


1.17
log
@Added the following methods:
   arot eye eye_pos invSize lookat model2view mrot orientation
   pmat pmodel2view pov rmat sca setview view2model vrot vtra rtedge
@
text
@d70 1
a70 1
    public method zoom {sf}
@


1.16
log
@*- add new method called perspective_angle
@
text
@d44 2
a45 1
    public method aet {args}
d48 3
d52 8
d62 2
d67 3
d93 1
d225 1
a225 1
			hide upper
d227 1
a227 1
			show lower
d232 1
a232 1
			hide upper
d234 1
a234 1
			show lower
d247 1
a247 1
			hide upper
d249 1
a249 1
			show lower
d254 1
a254 1
			hide upper
d256 1
a256 1
			show lower
d265 1
a265 1
			hide lower
d267 1
a267 1
			show upper
d272 1
a272 1
			hide lower
d274 1
a274 1
			show upper
d287 1
a287 1
			hide lower
d289 1
a289 1
			show upper
d294 1
a294 1
			hide lower
d296 1
a296 1
			show upper
d345 6
a350 2
body QuadDisplay::aet {args} {
    eval $itk_component($itk_option(-pane)) aet $args
d361 12
d377 32
d421 12
d437 10
a446 2
body QuadDisplay::size {args} {
    eval $itk_component($itk_option(-pane)) size $args
d556 4
d567 4
a570 4
    $itk_component(ul) aet 0 90 0
    $itk_component(ur) aet 35 25 0
    $itk_component(ll) aet 0 0 0
    $itk_component(lr) aet 90 0 0
d624 1
a624 1
		hide lower
d628 1
a628 1
		hide lower
d632 1
a632 1
		hide upper
d636 1
a636 1
		hide upper
d646 1
a646 1
		show lower
d650 1
a650 1
		show lower
d654 1
a654 1
		show upper
d658 1
a658 1
		show upper
@


1.15
log
@*- add new member functions: coord, keypoint, and rotate_about
@
text
@d72 1
d435 4
@


1.14
log
@*- added rtabort
@
text
@d46 2
d49 1
d334 8
d344 4
@


1.13
log
@Add help methods.
@
text
@d26 2
d70 1
d440 4
@


1.12
log
@*- remove type from constructors parameter list
@
text
@d83 5
d547 17
@


1.12.2.1
log
@Make use of Help object.
@
text
@a82 5
    public method ? {}
    public method apropos {key}
    public method getUserCmds {}
    public method help {args}

a541 17

body QuadDisplay::? {} {
    return [$itk_component(ur) ?]
}

body QuadDisplay::apropos {key} {
    return [$itk_component(ur) apropos $key]
}

body QuadDisplay::getUserCmds {} {
    return [$itk_component(ur) getUserCmds]
}

body QuadDisplay::help {args} {
    return [eval $itk_component(ur) help $args]
}

@


1.12.2.2
log
@*- added rtabort
*- set a few options
@
text
@a25 2
option add *QuadDisplay.width 400 widgetDefault
option add *QuadDisplay.height 400 widgetDefault
a67 1
    public method rtabort {{gi 0}}
a436 4
}

body QuadDisplay::rtabort {{gi 0}} {
    $itk_component($itk_option(-pane)) rtabort $gi
@


1.11
log
@*- add optional parameter to autoview and autoviewall
@
text
@d33 1
a33 1
    constructor {{type X} args} {}
d89 1
a89 1
body QuadDisplay::constructor {{type X} args} {
d117 1
a117 1
	Display [$itk_component(upw) childsite ulp].display $type
d123 1
a123 1
	Display [$itk_component(upw) childsite urp].display $type
d129 1
a129 1
	Display [$itk_component(lpw) childsite llp].display $type
d135 1
a135 1
	Display [$itk_component(lpw) childsite lrp].display $type
@


1.10
log
@*- alphabetize method names (easier to document)
@
text
@d50 2
a51 2
    public method autoview {}
    public method autoviewall {}
d343 2
a344 2
body QuadDisplay::autoview {} {
    $itk_component($itk_option(-pane)) autoview
d347 5
a351 5
body QuadDisplay::autoviewall {} {
    $itk_component(ul) autoview
    $itk_component(ur) autoview
    $itk_component(ll) autoview
    $itk_component(lr) autoview
@


1.9
log
@*- made toggle_multi_pane protected
*- changed fb_update to fb_observe
@
text
@d45 1
a47 4
    public method size {args}
if 0 {
    public method scale {args}
}
d49 1
a58 7
    public method listen {args}
    public method linewidth {args}
    public method linestyle {args}
    public method zclip {args}
    public method zbuffer {args}
    public method light {args}
    public method perspective {args}
d62 5
d69 2
a336 6
}

if 0 {
body QuadDisplay::scale {args} {
    eval $itk_component($itk_option(-pane)) scale $args
}
@


1.8
log
@*- apparently its a no-no to have an object
   be a component of more than one mega-widget
*- don't need the destructor
@
text
@a37 1
    public method toggle_multi_pane {}
d48 1
d50 1
d70 1
a70 1
    public method fb_update {args}
d85 2
a305 48
body QuadDisplay::toggle_multi_pane {} {
    if {$priv_multi_pane} {
	set itk_option(-multi_pane) 0
	set priv_multi_pane 0

	switch $itk_option(-pane) {
	    ul {
		hide lower
		$itk_component(upw) hide urp
	    }
	    ur {
		hide lower
		$itk_component(upw) hide ulp
	    }
	    ll {
		hide upper
		$itk_component(lpw) hide lrp
	    }
	    lr {
		hide upper
		$itk_component(lpw) hide llp
	    }
	}
    } else {
	set itk_option(-multi_pane) 1
	set priv_multi_pane 1

	switch $itk_option(-pane) {
	    ul {
		show lower
		$itk_component(upw) show urp
	    }
	    ur {
		show lower
		$itk_component(upw) show ulp
	    }
	    ll {
		show upper
		$itk_component(lpw) show lrp
	    }
	    lr {
		show upper
		$itk_component(lpw) show llp
	    }
	}
    }
}

d341 1
d345 1
d434 2
a435 2
body QuadDisplay::fb_update {args} {
    eval $itk_component($itk_option(-pane)) fb_update $args
d501 48
@


1.7
log
@*- catch itk_initialize to hide problem/bug
   that arises from doing a keep with the
   Panedwindow components
*- add more components to mega-widget
@
text
@a91 3
    itk_option add upper.margin
    itk_option add lower.margin

d109 4
a112 23
    itk_component add ulp {
	$itk_component(upw) add ulp
    } {
	keep -margin
    }

    itk_component add urp {
	$itk_component(upw) add urp
    } {
	keep -margin
    }

    itk_component add llp {
	$itk_component(lpw) add llp
    } {
	keep -margin
    }

    itk_component add lrp {
	$itk_component(lpw) add lrp
    } {
	keep -margin
    }
d116 1
a116 1
	Display [$itk_component(ulp) childSite].display $type
d122 1
a122 1
	Display [$itk_component(urp) childSite].display $type
d128 1
a128 1
	Display [$itk_component(llp) childSite].display $type
d134 1
a134 1
	Display [$itk_component(lrp) childSite].display $type
a150 10
}

body QuadDisplay::destructor {} {
    ::delete object $itk_component(ul)
    ::delete object $itk_component(ur)
    ::delete object $itk_component(ll)
    ::delete object $itk_component(lr)

    ::delete object $itk_component(upw)
    ::delete object $itk_component(lpw)
@


1.6
log
@*- reintroduce type as an argument to the constructor
*- use "itk_component add" to add components
@
text
@d24 3
a31 1
    itk_option define -margin margin Margin 0
a71 1
    public method get_dm_name {}
a72 1
    public method margin {val}
d89 5
a93 2
    Panedwindow::add upper
    Panedwindow::add lower
d96 2
a97 2
    itk_component add upperpane {
	panedwindow [childsite upper].pane -orient vertical
d104 2
a105 2
    itk_component add lowerpane {
	panedwindow [childsite lower].pane -orient vertical
d112 23
a134 4
    $itk_component(upperpane) add left
    $itk_component(upperpane) add right
    $itk_component(lowerpane) add left
    $itk_component(lowerpane) add right
d138 1
a138 1
	Display [$itk_component(upperpane) childsite left].ul $type
d140 1
a140 1
	keep -rscale -sscale -type
d144 1
a144 1
	Display [$itk_component(upperpane) childsite right].ur $type
d146 1
a146 1
	keep -rscale -sscale -type
d150 1
a150 1
	Display [$itk_component(lowerpane) childsite left].ll $type
d152 1
a152 1
	keep -rscale -sscale -type
d156 1
a156 1
	Display [$itk_component(lowerpane) childsite right].lr $type
d158 1
a158 1
	keep -rscale -sscale -type
d169 2
a170 4
    pack $itk_component(upperpane) -fill both -expand yes
    pack $itk_component(lowerpane) -fill both -expand yes

    eval itk_initialize $args
d172 1
a172 2
    # set the margins
    margin $itk_option(-margin)
d181 2
a182 2
    ::delete object $itk_component(upperpane)
    ::delete object $itk_component(lowerpane)
a192 4
configbody QuadDisplay::margin {
    margin $itk_option(-margin)
}

d222 2
a223 2
			$itk_component(upperpane) hide left
			$itk_component(upperpane) show right
d227 1
a227 1
			$itk_component(upperpane) show right
d229 2
a230 2
			$itk_component(lowerpane) show left
			$itk_component(lowerpane) hide right
d234 1
a234 1
			$itk_component(upperpane) show right
d236 2
a237 2
			$itk_component(lowerpane) hide left
			$itk_component(lowerpane) show right
d244 2
a245 2
			$itk_component(upperpane) hide right
			$itk_component(upperpane) show left
d249 1
a249 1
			$itk_component(upperpane) show left
d251 2
a252 2
			$itk_component(lowerpane) show left
			$itk_component(lowerpane) hide right
d256 1
a256 1
			$itk_component(upperpane) show left
d258 2
a259 2
			$itk_component(lowerpane) hide left
			$itk_component(lowerpane) show right
d267 1
a267 1
			$itk_component(lowerpane) show right
d269 2
a270 2
			$itk_component(upperpane) hide right
			$itk_component(upperpane) show left
d274 1
a274 1
			$itk_component(lowerpane) show right
d276 2
a277 2
			$itk_component(upperpane) hide left
			$itk_component(upperpane) show right
d280 2
a281 2
			$itk_component(lowerpane) hide left
			$itk_component(lowerpane) show right
d289 1
a289 1
			$itk_component(lowerpane) show left
d291 2
a292 2
			$itk_component(upperpane) hide right
			$itk_component(upperpane) show left
d296 1
a296 1
			$itk_component(lowerpane) show left
d298 2
a299 2
			$itk_component(upperpane) hide left
			$itk_component(upperpane) show right
d302 2
a303 2
			$itk_component(lowerpane) hide right
			$itk_component(lowerpane) show left
d343 1
a343 1
		$itk_component(upperpane) hide right
d347 1
a347 1
		$itk_component(upperpane) hide left
d351 1
a351 1
		$itk_component(lowerpane) hide right
d355 1
a355 1
		$itk_component(lowerpane) hide left
d365 1
a365 1
		$itk_component(upperpane) show right
d369 1
a369 1
		$itk_component(upperpane) show left
d373 1
a373 1
		$itk_component(lowerpane) show right
d377 1
a377 1
		$itk_component(lowerpane) show left
a520 14
body QuadDisplay::get_dm_name {} {
    eval $itk_component($itk_option(-pane)) Dm::get_name
}

body QuadDisplay::margin {margin} {
    set itk_option(-margin) $margin
    paneconfigure 0 -margin $margin
    paneconfigure 1 -margin $margin
    $itk_component(upperpane) paneconfigure 0 -margin $margin
    $itk_component(upperpane) paneconfigure 1 -margin $margin
    $itk_component(lowerpane) paneconfigure 0 -margin $margin
    $itk_component(lowerpane) paneconfigure 1 -margin $margin
}

d523 2
a524 2
    $itk_component(upperpane) reset
    $itk_component(lowerpane) reset
@


1.5
log
@*- simplified constructor's signature
*- added more methods and itk_options from Display
@
text
@d31 1
a31 5
    itk_option define -rscale rscale Rscale 0.4
    itk_option define -sscale sscale Sscale 2.0
    itk_option define -type type Type X

    constructor {args} {}
a83 1
    private variable initializing 1
a85 6
    private variable upper ""
    private variable lower ""
    private variable ul ""
    private variable ur ""
    private variable ll ""
    private variable lr ""
d88 1
a88 1
body QuadDisplay::constructor {args} {
d92 21
a112 2
    set upper [childsite upper].pane
    set lower [childsite lower].pane
d114 6
a119 3
    # create two more panedwindows
    panedwindow $upper -orient vertical
    panedwindow $lower -orient vertical
d121 5
a125 9
    $upper Panedwindow::add left
    $upper Panedwindow::add right
    $lower Panedwindow::add left
    $lower Panedwindow::add right

    set ul [$upper childsite left].ul
    set ur [$upper childsite right].ur
    set ll [$lower childsite left].ll
    set lr [$lower childsite right].lr
d127 5
a131 2
    eval itk_initialize $args
    set initializing 0
d133 5
a137 9
    # create four instances of Display
    Display $ul -type $itk_option(-type) \
	    -rscale $itk_option(-rscale) -sscale $itk_option(-sscale)
    Display $ur -type $itk_option(-type) \
	    -rscale $itk_option(-rscale) -sscale $itk_option(-sscale)
    Display $ll -type $itk_option(-type) \
	    -rscale $itk_option(-rscale) -sscale $itk_option(-sscale)
    Display $lr -type $itk_option(-type) \
	    -rscale $itk_option(-rscale) -sscale $itk_option(-sscale)
d142 4
a145 4
    pack $ul -fill both -expand yes
    pack $ur -fill both -expand yes
    pack $ll -fill both -expand yes
    pack $lr -fill both -expand yes
d147 4
a150 2
    pack $upper -fill both -expand yes
    pack $lower -fill both -expand yes
a152 2
    paneconfigure 0 -margin $itk_option(-margin)
    paneconfigure 1 -margin $itk_option(-margin)
d157 4
a160 4
    ::delete object $ul
    ::delete object $ur
    ::delete object $ll
    ::delete object $lr
d162 2
a163 2
    ::delete object $upper
    ::delete object $lower
a177 24
configbody QuadDisplay::rscale {
    if {!$initializing} {
	$ul configure -rscale $itk_option(-rscale)
	$ur configure -rscale $itk_option(-rscale)
	$ll configure -rscale $itk_option(-rscale)
	$lr configure -rscale $itk_option(-rscale)
    }
}

configbody QuadDisplay::sscale {
    if {!$initializing} {
	$ul configure -sscale $itk_option(-sscale)
	$ur configure -sscale $itk_option(-sscale)
	$ll configure -sscale $itk_option(-sscale)
	$lr configure -sscale $itk_option(-sscale)
    }
}

configbody QuadDisplay::type {
    if {!$initializing} {
	error "type is read-only"
    }
}

d207 2
a208 2
			$upper hide left
			$upper show right
d212 1
a212 1
			$upper show right
d214 2
a215 2
			$lower show left
			$lower hide right
d219 1
a219 1
			$upper show right
d221 2
a222 2
			$lower hide left
			$lower show right
d229 2
a230 2
			$upper hide right
			$upper show left
d234 1
a234 1
			$upper show left
d236 2
a237 2
			$lower show left
			$lower hide right
d241 1
a241 1
			$upper show left
d243 2
a244 2
			$lower hide left
			$lower show right
d252 1
a252 1
			$lower show right
d254 2
a255 2
			$upper hide right
			$upper show left
d259 1
a259 1
			$lower show right
d261 2
a262 2
			$upper hide left
			$upper show right
d265 2
a266 2
			$lower hide left
			$lower show right
d274 1
a274 1
			$lower show left
d276 2
a277 2
			$upper hide right
			$upper show left
d281 1
a281 1
			$lower show left
d283 2
a284 2
			$upper hide left
			$upper show right
d287 2
a288 2
			$lower hide right
			$lower show left
d328 1
a328 1
		$upper hide right
d332 1
a332 1
		$upper hide left
d336 1
a336 1
		$lower hide right
d340 1
a340 1
		$lower hide left
d350 1
a350 1
		$upper show right
d354 1
a354 1
		$upper show left
d358 1
a358 1
		$lower show right
d362 1
a362 1
		$lower show left
d369 1
a369 1
    [subst $[subst $itk_option(-pane)]] refresh
d373 4
a376 4
    $ul refresh
    $ur refresh
    $ll refresh
    $lr refresh
d380 1
a380 1
    eval [subst $[subst $itk_option(-pane)]] aet $args
d384 1
a384 1
    eval [subst $[subst $itk_option(-pane)]] center $args
d388 1
a388 1
    eval [subst $[subst $itk_option(-pane)]] rot $args
d392 1
a392 1
    eval [subst $[subst $itk_option(-pane)]] slew $args
d396 1
a396 1
    eval [subst $[subst $itk_option(-pane)]] tra $args
d400 1
a400 1
    eval [subst $[subst $itk_option(-pane)]] size $args
d404 1
a404 1
    eval [subst $[subst $itk_option(-pane)]] scale $args
d408 1
a408 1
    eval [subst $[subst $itk_option(-pane)]] zoom $args
d412 1
a412 1
    [subst $[subst $itk_option(-pane)]] autoview
d416 4
a419 4
    $ul autoview
    $ur autoview
    $ll autoview
    $lr autoview
d423 1
a423 1
    [subst $[subst $itk_option(-pane)]] add $glist
d427 4
a430 4
    $ul add $glist
    $ur add $glist
    $ll add $glist
    $lr add $glist
d434 1
a434 1
    [subst $[subst $itk_option(-pane)]] remove $glist
d438 4
a441 4
    $ul remove $glist
    $ur remove $glist
    $ll remove $glist
    $lr remove $glist
d445 1
a445 1
    [subst $[subst $itk_option(-pane)]] contents
d449 1
a449 1
    eval [subst $[subst $itk_option(-pane)]] listen $args
d453 1
a453 1
    set result [eval [subst $[subst $itk_option(-pane)]] linewidth $args]
d462 1
a462 1
    eval [subst $[subst $itk_option(-pane)]] linestyle $args
d466 1
a466 1
    eval [subst $[subst $itk_option(-pane)]] zclip $args
d470 1
a470 1
    eval [subst $[subst $itk_option(-pane)]] zbuffer $args
d474 1
a474 1
    eval [subst $[subst $itk_option(-pane)]] light $args
d478 1
a478 1
    eval [subst $[subst $itk_option(-pane)]] perspective $args
d482 1
a482 1
    set result [eval [subst $[subst $itk_option(-pane)]] bg $args]
d491 1
a491 1
    eval eval [subst $[subst $itk_option(-pane)]] fb_active $args
d495 1
a495 1
    eval [subst $[subst $itk_option(-pane)]] fb_update $args
d499 1
a499 1
    eval [subst $[subst $itk_option(-pane)]] rt $args
d503 1
a503 1
    eval [subst $[subst $itk_option(-pane)]] rtcheck $args
d507 1
a507 1
    eval [subst $[subst $itk_option(-pane)]] Dm::get_name
d511 7
a517 4
    $upper paneconfigure 0 -margin $margin
    $upper paneconfigure 1 -margin $margin
    $lower paneconfigure 0 -margin $margin
    $lower paneconfigure 1 -margin $margin
d522 2
a523 2
    $upper reset
    $lower reset
d527 4
a530 4
    $ul aet 0 90 0
    $ur aet 35 25 0
    $ll aet 0 0 0
    $lr aet 90 0 0
d534 1
a534 1
    [subst $[subst $itk_option(-pane)]] attach_view
d538 4
a541 4
    $ul attach_view
    $ur attach_view
    $ll attach_view
    $lr attach_view
d545 1
a545 1
    [subst $[subst $itk_option(-pane)]] attach_drawable $dg
d549 4
a552 4
    $ul attach_drawable $dg
    $ur attach_drawable $dg
    $ll attach_drawable $dg
    $lr attach_drawable $dg
d556 1
a556 1
    [subst $[subst $itk_option(-pane)]] detach_view
d560 4
a563 4
    $ul detach_view
    $ur detach_view
    $ll detach_view
    $lr detach_view
d567 1
a567 1
    [subst $[subst $itk_option(-pane)]] detach_drawable $dg
d571 4
a574 4
    $ul detach_drawable $dg
    $ur detach_drawable $dg
    $ll detach_drawable $dg
    $lr detach_drawable $dg
@


1.4
log
@*- provide default for display manager type
@
text
@d22 1
a22 1
#       between showing all four Display objects or just the current Display object.
a26 3
    constructor {{type X} args} {}
    destructor {}

d31 7
d63 7
d74 1
a75 2
    public method dm_size {args}
    public method dm_name {}
d89 2
a90 1
    private variable priv_multi_pane 0
d99 1
a99 1
body QuadDisplay::constructor {{type X} args} {
d120 3
d124 8
a131 4
    Display $ul $type
    Display $ur $type
    Display $ll $type
    Display $lr $type
a143 3
    set initializing 0
    eval itk_initialize $args

d165 1
a165 5
    if {$initializing} {
	set priv_multi_pane $itk_option(-multi_pane)
    } else {
	multi_pane $itk_option(-multi_pane)
    }
d172 24
a201 2
    set prev_pane $itk_option(-pane)

d215 1
a215 1
    if {!$initializing && !$itk_option(-multi_pane)} {
d217 1
a217 1
	if {$prev_pane == $itk_option(-pane)} {
d221 1
a221 1
	switch $prev_pane {
d311 2
d470 38
d524 1
a524 5
body QuadDisplay::dm_size {args} {
    eval [subst $[subst $itk_option(-pane)]] Dm::size $args
}

body QuadDisplay::dm_name {} {
@


1.3
log
@*- new methods: default_views, attach_view, attach_viewall,
   attach_drawable, attach_drawableall, detach_view, detach_viewall,
   detach_drawable, detach_drawableall, refresh, refreshall
@
text
@d27 1
a27 1
    constructor {type args} {}
d88 1
a88 1
body QuadDisplay::constructor {type args} {
@


1.2
log
@*- add method rtcheck
@
text
@d37 2
d68 9
d116 1
a116 4
    $ul aet 0 90 0
    $ur aet 35 25 0
    $ll aet 0 0 0
    $lr aet 90 0 0
d351 11
d470 51
@


1.1
log
@The QuadDisplay Class.
@
text
@d60 1
d426 4
@

