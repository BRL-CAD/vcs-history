head	1.6;
access;
symbols
	ansi-20040405-merged:1.4.4.1
	postmerge-20040405-ansi:1.5
	premerge-20040404-ansi:1.5
	postmerge-autoconf:1.5
	autoconf-freeze:1.4.12.1
	premerge-autoconf:1.5
	postmerge-20040315-windows:1.5
	premerge-20040315-windows:1.5
	windows-20040315-freeze:1.4.6.1
	autoconf-20031203:1.4
	autoconf-20031202:1.4
	autoconf-branch:1.4.0.12
	phong-branch:1.4.0.10
	photonmap-branch:1.4.0.8
	rel-6-1-DP:1.4
	windows-branch:1.4.0.6
	rel-6-0-2:1.4
	ansi-branch:1.4.0.4
	rel-6-0-1-branch:1.4.0.2
	hartley-6-0-post:1.4
	hartley-6-0-pre:1.4
	rel-6-0-1:1.4
	rel-6-0:1.4
	rel-5-4:1.3.2.1
	offsite-5-3-pre:1.3
	rel-5-3:1.3.2.1
	rel-5-2:1.3.2.1
	rel-5-1-branch:1.3.0.2;
locks; strict;
comment	@# @;


1.6
date	2004.05.21.16.41.19;	author morrison;	state dead;
branches;
next	1.5;

1.5
date	2004.02.02.17.39.43;	author morrison;	state Exp;
branches;
next	1.4;

1.4
date	2001.04.30.22.13.36;	author bparker;	state Exp;
branches
	1.4.4.1
	1.4.6.1
	1.4.12.1;
next	1.3;

1.3
date	2000.08.16.14.23.00;	author bparker;	state Exp;
branches
	1.3.2.1;
next	1.2;

1.2
date	2000.07.20.12.59.07;	author bparker;	state Exp;
branches;
next	1.1;

1.1
date	2000.07.18.21.09.05;	author bparker;	state Exp;
branches;
next	;

1.3.2.1
date	2000.08.16.16.56.03;	author bparker;	state Exp;
branches;
next	;

1.4.4.1
date	2004.03.17.21.23.04;	author morrison;	state Exp;
branches;
next	;

1.4.6.1
date	2004.03.11.23.48.51;	author morrison;	state Exp;
branches;
next	;

1.4.12.1
date	2004.02.12.18.34.48;	author erikg;	state Exp;
branches;
next	;


desc
@@


1.6
log
@moved to src/tclscripts/
@
text
@##                 C E L L P L O T . T C L
#
# Author -
#	Bob Parker
#
# Source -
#	The U. S. Army Research Laboratory
#	Aberdeen Proving Ground, Maryland  21005
#
# Distribution Notice -
#	Re-distribution of this software is restricted, as described in
#       your "Statement of Terms and Conditions for the Release of
#       The BRL-CAD Package" agreement.
#
# Copyright Notice -
#       This software is Copyright (C) 1998-2004 by the United States Army
#       in all countries except the USA.  All rights reserved.
#
# Description -
#	As the name indicates, instances of CellPlot are intended
#       to be used for cell plots. This widget provide methods for
#       creating transformed (scaled and translated) cells.
#

#
# Usual options.
#
itk::usual CellPlot {
    keep -range -plotWidth -plotHeight
}

class cadwidgets::CellPlot {
    inherit iwidgets::Scrolledcanvas

    constructor {args} {}
    destructor {}

    # range of cell data
    itk_option define -range range Range {0.0 1.0}

    itk_option define -plotWidth plotWidth PlotWidth 512
    itk_option define -plotHeight plotHeight PlotHeight 512

    public method createCell {x1 y1 x2 y2 args}
    public method createCellInCanvas {c x1 y1 x2 y2 args}

    private method transform {x1 y1 x2 y2}

    private variable min 0.0
    private variable max 1.0
    private variable sf 1.0
}

configbody cadwidgets::CellPlot::range {
    if {[llength $itk_option(-range)] != 2} {
	error "range: two arguments are required"
    }

    set _min [lindex $itk_option(-range) 0]
    set _max [lindex $itk_option(-range) 1]

    if {![string is double $_min]} {
	error "range: values must be doubles"
    }

    if {![string is double $_max]} {
	error "range: values must be doubles"
    }

    if {$_max <= $_min} {
	error "range: bad values, max <= min"
    }

    set min $_min
    set max $_max
    set sf [expr {1.0 / double($max - $min)}]
}

body cadwidgets::CellPlot::constructor {args} {
    eval itk_initialize $args
    ::bind [childsite] <Configure> \
	    [code $this configure -width %w -height %h]
}

## - createCell
#
# Transform the data coodinates into canvas coordinates,
# then draw the cell in the specified color.
#
body cadwidgets::CellPlot::createCell {x1 y1 x2 y2 args} {
    eval cadwidgets::CellPlot::createCellInCanvas $this $x1 $y1 $x2 $y2 $args
}

body cadwidgets::CellPlot::createCellInCanvas {c x1 y1 x2 y2 args} {
    eval $c create rectangle [transform $x1 $y1 $x2 $y2] $args
}

## - transform
#
# Transform data coordinates into canvas coordinates.
#
body cadwidgets::CellPlot::transform {x1 y1 x2 y2} {
    set tx1 [expr {($x1 - $min) * $sf * $itk_option(-plotWidth)}]
    set tx2 [expr {($x2 - $min) * $sf * $itk_option(-plotWidth)}]
    set ty1 [expr {$itk_option(-plotHeight) - \
	    (($y1 - $min) * $sf * $itk_option(-plotWidth))}]
    set ty2 [expr {$itk_option(-plotHeight) - \
	    (($y2 - $min) * $sf * $itk_option(-plotWidth))}]
    return "$tx1 $ty1 $tx2 $ty2"
}
@


1.5
log
@update copyright to include span through 2003
@
text
@@


1.4
log
@*- comments
@
text
@d16 1
a16 1
#       This software is Copyright (C) 1998 by the United States Army
@


1.4.4.1
log
@sync branch with HEAD
@
text
@d16 1
a16 1
#       This software is Copyright (C) 1998-2004 by the United States Army
@


1.4.6.1
log
@sync to HEAD...
@
text
@d16 1
a16 1
#       This software is Copyright (C) 1998-2004 by the United States Army
@


1.4.12.1
log
@merge from HEAD
@
text
@d16 1
a16 1
#       This software is Copyright (C) 1998-2004 by the United States Army
@


1.3
log
@Add -plotWidth and -plotHeight.
@
text
@d21 2
a22 1
#       to be used for cell plots.
d38 1
d40 1
@


1.3.2.1
log
@Adding classes from main branch of source tree.
@
text
@@


1.2
log
@Remove unnecessary method (configureWinCB).
@
text
@d23 8
d38 2
d42 1
d88 5
a92 1
    eval create rectangle [transform $x1 $y1 $x2 $y2] $args
d100 6
a105 6
    set tx1 [expr {($x1 - $min) * $sf * $itk_option(-width)}]
    set tx2 [expr {($x2 - $min) * $sf * $itk_option(-width)}]
    set ty1 [expr {$itk_option(-height) - \
	    (($y1 - $min) * $sf * $itk_option(-width))}]
    set ty2 [expr {$itk_option(-height) - \
	    (($y2 - $min) * $sf * $itk_option(-width))}]
@


1.1
log
@A mega-widget for doing cell plots.
@
text
@a33 1
    private method configureWinCB {width height}
d67 2
a68 1
    ::bind [childsite] <Configure> [code $this configureWinCB %w %h]
a91 9
}

## - configureWinCB
#
# Keep width and height options in sync
# with actual window size.
#
body cadwidgets::CellPlot::configureWinCB {width height} {
    configure -width $width -height $height
@

