head	1.19;
access;
symbols
	ansi-20040405-merged:1.16.4.1
	postmerge-20040405-ansi:1.17
	premerge-20040404-ansi:1.17
	postmerge-autoconf:1.17
	autoconf-freeze:1.16.12.1
	premerge-autoconf:1.17
	postmerge-20040315-windows:1.17
	premerge-20040315-windows:1.17
	windows-20040315-freeze:1.16.6.1
	autoconf-20031203:1.16
	autoconf-20031202:1.16
	autoconf-branch:1.16.0.12
	phong-branch:1.16.0.10
	photonmap-branch:1.16.0.8
	rel-6-1-DP:1.16
	windows-branch:1.16.0.6
	rel-6-0-2:1.16
	ansi-branch:1.16.0.4
	rel-6-0-1-branch:1.16.0.2
	hartley-6-0-post:1.16
	hartley-6-0-pre:1.16
	rel-6-0-1:1.16
	rel-6-0:1.16
	rel-5-4:1.6.2.5
	offsite-5-3-pre:1.10
	rel-5-3:1.6.2.5
	rel-5-2:1.6.2.1
	rel-5-1-branch:1.6.0.2
	rel-5-1:1.6;
locks; strict;
comment	@# @;


1.19
date	2004.05.21.16.41.19;	author morrison;	state dead;
branches;
next	1.18;

1.18
date	2004.05.10.15.25.29;	author morrison;	state Exp;
branches;
next	1.17;

1.17
date	2004.02.02.17.39.43;	author morrison;	state Exp;
branches;
next	1.16;

1.16
date	2002.02.05.03.17.37;	author jra;	state Exp;
branches
	1.16.4.1
	1.16.6.1
	1.16.12.1;
next	1.15;

1.15
date	2001.11.29.17.17.47;	author bparker;	state Exp;
branches;
next	1.14;

1.14
date	2001.11.16.21.37.15;	author bparker;	state Exp;
branches;
next	1.13;

1.13
date	2001.10.03.15.31.58;	author bparker;	state Exp;
branches;
next	1.12;

1.12
date	2001.05.02.22.28.10;	author bparker;	state Exp;
branches;
next	1.11;

1.11
date	2001.04.27.20.41.56;	author bparker;	state Exp;
branches;
next	1.10;

1.10
date	2001.02.27.19.12.41;	author bparker;	state Exp;
branches;
next	1.9;

1.9
date	2001.02.16.22.34.12;	author bparker;	state Exp;
branches;
next	1.8;

1.8
date	2000.11.08.18.13.32;	author bparker;	state Exp;
branches;
next	1.7;

1.7
date	2000.07.21.21.08.16;	author bparker;	state Exp;
branches;
next	1.6;

1.6
date	2000.05.12.21.50.40;	author bparker;	state Exp;
branches
	1.6.2.1;
next	1.5;

1.5
date	2000.05.02.20.53.14;	author bparker;	state Exp;
branches;
next	1.4;

1.4
date	2000.02.29.22.26.02;	author bparker;	state Exp;
branches;
next	1.3;

1.3
date	2000.02.29.19.50.27;	author bparker;	state Exp;
branches;
next	1.2;

1.2
date	2000.02.25.21.47.45;	author bparker;	state Exp;
branches;
next	1.1;

1.1
date	2000.02.18.21.37.24;	author bparker;	state Exp;
branches;
next	;

1.6.2.1
date	2000.08.16.17.02.25;	author bparker;	state Exp;
branches;
next	1.6.2.2;

1.6.2.2
date	2000.11.08.15.46.56;	author bparker;	state Exp;
branches;
next	1.6.2.3;

1.6.2.3
date	2001.02.05.18.20.46;	author bparker;	state Exp;
branches;
next	1.6.2.4;

1.6.2.4
date	2001.02.05.21.05.17;	author bparker;	state Exp;
branches;
next	1.6.2.5;

1.6.2.5
date	2001.02.27.16.15.10;	author bparker;	state Exp;
branches;
next	;

1.16.4.1
date	2004.03.17.21.23.05;	author morrison;	state Exp;
branches;
next	;

1.16.6.1
date	2004.03.11.23.48.51;	author morrison;	state Exp;
branches;
next	;

1.16.12.1
date	2004.02.12.18.34.48;	author erikg;	state Exp;
branches;
next	;


desc
@@


1.19
log
@moved to src/tclscripts/
@
text
@##                 D B . T C L
#
# Author -
#	Bob Parker
#
# Source -
#	The U. S. Army Research Laboratory
#	Aberdeen Proving Ground, Maryland  21005
#
# Distribution Notice -
#	Re-distribution of this software is restricted, as described in
#       your "Statement of Terms and Conditions for the Release of
#       The BRL-CAD Package" agreement.
#
# Copyright Notice -
#       This software is Copyright (C) 1998-2004 by the United States Army
#       in all countries except the USA.  All rights reserved.
#
# Description -
#	The Db class wraps LIBRT's database object.
#
class Db {
    protected variable db ""
    public variable dbfile ""

    constructor {filename} {}
    destructor {}

    public method adjust {args}
    public method attr {args}
    public method binary {args}
    public method c {args}
    public method cat {args}
    public method color {args}
    public method comb {args}
    public method concat {args}
    public method copyeval {args}
    public method cp {args}
    public method dbip {args}
    public method dump {args}
    public method dup {args}
    public method expand {args}
    public method find {args}
    public method form {args}
    public method g {args}
    public method get {args}
    public method get_dbname {}
    public method hide {args}
    public method i {args}
    public method keep {args}
    public method kill {args}
    public method killall {args}
    public method killtree {args}
    public method l {args}
    public method listeval {args}
    public method ls {args}
    public method lt {args}
    public method make_bb {name args}
    public method make_name {args}
    public method match {args}
    public method mv {args}
    public method mvall {args}
    public method nmg_collapse {args}
    public method nmg_simplify {args}
    public method observer {args}
    public method open {args}
    public method pathlist {args}
    public method paths {args}
    public method prcolor {args}
    public method push {args}
    public method put {args}
    public method r {args}
    public method rm {args}
    public method rt_gettrees {args}
    public method shells {args}
    public method showmats {args}
    public method summary {args}
    public method title {args}
    public method tol {args}
    public method tops {args}
    public method track {args}
    public method tree {args}
    public method unhide {args}
    public method units {args}
    public method version {args}
    public method whatid {args}
    public method whichair {args}
    public method whichid {args}
    public method xpush {args}

    public method ? {}
    public method apropos {key}
    public method help {args}
    public method getUserCmds {}

    private method help_init {}

    private variable help
}

configbody Db::dbfile {
    Db::open $dbfile
}

body Db::constructor {filename} {
    set dbfile $filename
    set db [subst $this]_db
    wdb_open $db $dbfile
    Db::help_init
}

body Db::destructor {} {
    rename $db ""
    catch {delete object $help}
}

body Db::open {args} {
    set dbfile [eval $db open $args]
}

body Db::observer {args} {
    eval $db observer $args
}

body Db::match {args} {
    eval $db match $args
}

body Db::get {args} {
    eval $db get $args
}

body Db::put {args} {
    eval $db put $args
}

body Db::adjust {args} {
    eval $db adjust $args
}

body Db::form {args} {
    eval $db form $args
}

body Db::rt_gettrees {args} {
    eval $db rt_gettrees $args
}

body Db::shells {args} {
    eval $db shells $args
}

body Db::showmats {args} {
    eval $db showmats $args
}

body Db::summary {args} {
    eval $db summary $args
}

body Db::tops {args} {
    eval $db tops $args
}

body Db::dump {args} {
    eval $db dump $args
}

body Db::dbip {args} {
    eval $db dbip $args
}

body Db::l {args} {
    eval $db l $args
}

body Db::listeval {args} {
    eval $db listeval $args
}

body Db::ls {args} {
    eval $db ls $args
}

body Db::lt {args} {
    eval $db lt $args
}

body Db::pathlist {args} {
    eval $db pathlist $args
}

body Db::paths {args} {
    eval $db paths $args
}

body Db::expand {args} {
    eval $db expand $args
}

body Db::kill {args} {
    eval $db kill $args
}

body Db::killall {args} {
    eval $db killall $args
}

body Db::killtree {args} {
    eval $db killtree $args
}

body Db::cp {args} {
    eval $db cp $args
}

body Db::mv {args} {
    eval $db mv $args
}

body Db::mvall {args} {
    eval $db mvall $args
}

body Db::nmg_collapse {args} {
    eval $db nmg_collapse $args
}

body Db::nmg_simplify {args} {
    eval $db nmg_simplify $args
}

body Db::concat {args} {
    eval $db concat $args
}

body Db::copyeval {args} {
    eval $db copyeval $args
}

body Db::dup {args} {
    eval $db dup $args
}

body Db::g {args} {
    eval $db g $args
}

body Db::rm {args} {
    eval $db rm $args
}

body Db::r {args} {
    eval $db r $args
}

body Db::c {args} {
    eval $db c $args
}

body Db::comb {args} {
    eval $db comb $args
}

body Db::find {args} {
    eval $db find $args
}

body Db::whichair {args} {
    eval $db whichair $args
}

body Db::whichid {args} {
    eval $db whichid $args
}

body Db::xpush {args} {
    eval $db xpush $args
}

body Db::title {args} {
    eval $db title $args
}

body Db::track {args} {
    eval $db track $args
}

body Db::tree {args} {
    eval $db tree $args
}

body Db::unhide {args} {
    eval $db unhide $args
}

body Db::units {args} {
    eval $db units $args
}

body Db::color {args} {
    eval $db color $args
}

body Db::prcolor {args} {
    eval $db prcolor $args
}

body Db::tol {args} {
    eval $db tol $args
}

body Db::push {args} {
    eval $db push $args
}

body Db::whatid {args} {
    eval $db whatid $args
}

body Db::keep {args} {
    eval $db keep $args
}

body Db::cat {args} {
    eval $db cat $args
}

body Db::hide {args} {
    eval $db hide $args
}

body Db::i {args} {
    eval $db i $args
}

body Db::get_dbname {} {
    return $db
}

body Db::make_bb {name args} {
    eval $db make_bb $name $args
}

body Db::make_name {args} {
    eval $db make_name $args
}

body Db::attr {args} {
    eval $db attr $args
}

body Db::version {args} {
    eval $db version $args
}

body Db::binary {args} {
    eval $db binary $args
}

body Db::help {args} {
    return [eval $help get $args]
}

body Db::? {} {
    return [$help ? 20 4]
}

body Db::apropos {key} {
    return [$help apropos $key]
}

body Db::getUserCmds {} {
    return [$help getCmds]
}

body Db::help_init {} {
    set help [cadwidgets::Help #auto]

    $help add adjust	{{} {adjust database object parameters}}
    $help add attr      {{ {set|get|rm|append} object [args]}
	      {set, get, remove or append to attribute values for the specified object.
         for the "set" subcommand, the arguments are attribute name/value pairs
         for the "get" subcommand, the arguments are attribute names
         for the "rm" subcommand, the arguments are attribute names
         for the "append" subcommand, the arguments are attribute name/value pairs } }

    $help add c		{{[-gr] comb_name [boolean_expr]} {create or extend a combination using standard notation}}
    $help add cat	{{<objects>} {list attributes (brief)}}
    $help add color	{{low high r g b str} {make color entry}}
    $help add comb	{{comb_name <operation solid>} {create or extend combination w/booleans}}
    $help add concat	{{file [prefix]} {concatenate 'file' onto end of present database.  Run 'dup file' first.}}
    $help add copyeval	{{new_solid path_to_old_solid}	{copy an 'evaluated' path solid}}
    $help add cp	{{from to} {copy [duplicate] object}}
    $help add dbip	{{} {get dbip}}
    $help add dump	{{file} {write current state of database object to file}}
    $help add dup	{{file [prefix]} {check for dup names in 'file'}}
    $help add expand	{{expression} {globs expression against database objects}}
    $help add find	{{[-s] <objects>} {find all references to objects}}
    $help add form	{{objType} {returns form of objType}}
    $help add g		{{groupname <objects>} {group objects}}
    $help add get	{{obj ?attr?} {get obj attributes}}
    $help add hide	{{[objects]} {set the "hidden" flag for the specified objects so they do not appear in a "t" or "ls" command output}}
    $help add i		{{obj combination [operation]} {add instance of obj to comb}}
    $help add keep	{{keep_file object(s)} {save named objects in specified file}}
    $help add kill	{{[-f] <objects>} {delete object[s] from file}}
    $help add killall	{{<objects>} {kill object[s] and all references}}
    $help add killtree	{{<object>} {kill complete tree[s] - BE CAREFUL}}
    $help add l		{{[-r] <object(s)>} {list attributes (verbose). Objects may be paths}}
    $help add listeval	{{} {lists 'evaluated' path solids}}
    $help add ls	{{[-a -c -r -s]} {table of contents}}
    $help add lt	{{object} {return first level tree as list of operator/member pairs}}
    $help add match	{{exp} {returns all database objects matching the given expression}}
    $help add mv	{{old new} {rename object}}
    $help add mvall	{{old new} {rename object everywhere}}
    $help add nmg_collapse    {{nmg_solid new_solid maximum_error_distance [minimum_allowed_angle]}	{decimate NMG solid via edge collapse}}
    $help add nmg_simplify    {{[arb|tgc|ell|poly] new_solid nmg_solid}	{simplify nmg_solid, if possible}}
    $help add open	{{?dbfile?} {open a database}}
    $help add pathlist	{{name(s)}	{list all paths from name(s) to leaves}}
    $help add paths	{{pattern} {lists all paths matching input path}}
    $help add prcolor	{{} {print color&material table}}
    $help add push	{{object[s]} {pushes object's path transformations to solids}}
    $help add put	{{object data} {creates an object}}
    $help add r		{{region <operation solid>} {create or extend a Region combination}}
    $help add rm	{{comb <members>} {remove members from comb}}
    $help add rt_gettrees      {{} {}}
    $help add shells	{{nmg_model}	{breaks model into seperate shells}}
    $help add showmats	{{path}	{show xform matrices along path}}
    $help add summary	{{[s r g]}	{count/list solid/reg/groups}}
    $help add title	{{?string?} {print or change the title}}
    $help add tol	{{[abs #] [rel #] [norm #] [dist #] [perp #]} {show/set tessellation and calculation tolerances}}
    $help add tops	{{} {find all top level objects}}
    $help add tree	{{[-c] [-i n] [-o outfile] object(s)} {print out a tree of all members of an object}}
    $help add unhide	{{[objects]} {unset the "hidden" flag for the specified objects so they will appear in a "t" or "ls" command output}}
    $help add units	{{[mm|cm|m|in|ft|...]}	{change units}}
    $help add version	{{} {return the database version}}
    $help add whatid	{{region_name} {display ident number for region}}
    $help add whichair	{{air_codes(s)} {lists all regions with given air code}}
    $help add whichid	{{[-s] ident(s)} {lists all regions with given ident code}}
    $help add xpush	{{object} {Experimental Push Command}}
}
@


1.18
log
@Bob Parker's view modifications, png framebuffer support, shaded drawing mode
@
text
@@


1.17
log
@update copyright to include span through 2003
@
text
@d81 1
d283 4
@


1.16
log
@mods to reflect chnages in "attr" command (elimination of attr_rm)
@
text
@d16 1
a16 1
#       This software is Copyright (C) 1998 by the United States Army
@


1.16.4.1
log
@sync branch with HEAD
@
text
@d16 1
a16 1
#       This software is Copyright (C) 1998-2004 by the United States Army
@


1.16.6.1
log
@sync to HEAD...
@
text
@d16 1
a16 1
#       This software is Copyright (C) 1998-2004 by the United States Army
@


1.16.12.1
log
@merge from HEAD
@
text
@d16 1
a16 1
#       This software is Copyright (C) 1998-2004 by the United States Army
@


1.15
log
@*- add "args" parameter to dbip method. This moves
   all error checking into wdb_obj's dbip method
   and is done in order to get an error message from
   the wdb_obj instead of from Tcl.
@
text
@a30 1
    public method attr_rm {args}
a347 4
body Db::attr_rm {args} {
    eval $db attr_rm $args
}

d376 7
a382 10
    $help add attr	{{object [attr_name [attr_value]] [attr_name attr_value ...]}
	      {get, assign or adjust attribute values for the specified object.
              with only an object specified,
                    displays all the attributes of that object.
              with an object and an attribute name specified,
                    displays the value of that attribute.
              with an object and attribute value pairs specified,
                    it sets the value of the specified attributes for that object}   }
    $help add attr_rm  {{object attr_name [attr_name attr_name ...]}
	      {delete attributes for the specified object}}
@


1.14
log
@*- add binary method
@
text
@d40 1
a40 1
    public method dbip {}
d169 2
a170 2
body Db::dbip {} {
    $db dbip
@


1.13
log
@Added the following methods:
   attr attr_rm copyeval hide lt nmg_collapse nmg_simplify
   pathlist shells showmats summary unhide version xpush
@
text
@d32 1
d355 4
@


1.12
log
@*- use rename instead of calling the embedded
   object's close command
@
text
@d30 2
d37 1
d48 1
d57 1
d63 3
d67 1
a67 1
    public method observer {args}
d75 3
d82 1
d84 1
d88 1
d144 16
a163 4
body Db::rt_gettrees {args} {
    eval $db rt_gettrees $args
}

d184 8
d217 1
a217 1
    eval $db mvall $args
d224 8
d236 4
d276 4
d288 4
d324 4
d344 12
d376 10
d391 1
d401 1
d410 1
d414 2
d417 1
d424 4
d432 3
d438 1
@


1.11
log
@*- remove type from wdb_open (rely on default being db)
@
text
@d98 2
a99 2
    $db close
    delete object $help
@


1.10
log
@*- add "units" method
@
text
@d93 1
a93 1
    wdb_open $db db $dbfile
@


1.9
log
@*- add make_bb and make_name methods to
   the wdb_obj
@
text
@d71 1
d236 4
@


1.8
log
@Remove unnecessary use of eval.
@
text
@d53 2
a144 4
body Db::ls {args} {
    eval $db ls $args
}

d153 4
d271 8
@


1.7
log
@Add help methods.
@
text
@d140 1
a140 1
    eval $db dbip
@


1.6
log
@*- alphabetized method names
*- changed name to dbfile
*- changed get_name to get_dbname
@
text
@d72 9
d91 1
d96 1
d269 61
@


1.6.2.1
log
@Make use of Help object.
@
text
@a71 9

    public method ? {}
    public method apropos {key}
    public method help {args}
    public method getUserCmds {}

    private method help_init {}

    private variable help
a81 1
    Db::help_init
a85 1
    delete object $help
a257 61
}

body Db::help {args} {
    return [eval $help get $args]
}

body Db::? {} {
    return [$help ? 20 4]
}

body Db::apropos {key} {
    return [$help apropos $key]
}

body Db::getUserCmds {} {
    return [$help getCmds]
}

body Db::help_init {} {
    set help [cadwidgets::Help #auto]

    $help add adjust	{{} {adjust database object parameters}}
    $help add c		{{[-gr] comb_name [boolean_expr]} {create or extend a combination using standard notation}}
    $help add cat	{{<objects>} {list attributes (brief)}}
    $help add color	{{low high r g b str} {make color entry}}
    $help add comb	{{comb_name <operation solid>} {create or extend combination w/booleans}}
    $help add concat	{{file [prefix]} {concatenate 'file' onto end of present database.  Run 'dup file' first.}}
    $help add cp	{{from to} {copy [duplicate] object}}
    $help add dbip	{{} {get dbip}}
    $help add dump	{{file} {write current state of database object to file}}
    $help add dup	{{file [prefix]} {check for dup names in 'file'}}
    $help add expand	{{expression} {globs expression against database objects}}
    $help add find	{{[-s] <objects>} {find all references to objects}}
    $help add form	{{objType} {returns form of objType}}
    $help add g		{{groupname <objects>} {group objects}}
    $help add get	{{obj ?attr?} {get obj attributes}}
    $help add i		{{obj combination [operation]} {add instance of obj to comb}}
    $help add keep	{{keep_file object(s)} {save named objects in specified file}}
    $help add kill	{{[-f] <objects>} {delete object[s] from file}}
    $help add killall	{{<objects>} {kill object[s] and all references}}
    $help add killtree	{{<object>} {kill complete tree[s] - BE CAREFUL}}
    $help add l		{{[-r] <object(s)>} {list attributes (verbose). Objects may be paths}}
    $help add listeval	{{} {lists 'evaluated' path solids}}
    $help add ls	{{[-a -c -r -s]} {table of contents}}
    $help add match	{{exp} {returns all database objects matching the given expression}}
    $help add mv	{{old new} {rename object}}
    $help add mvall	{{old new} {rename object everywhere}}
    $help add open	{{?dbfile?} {open a database}}
    $help add paths	{{pattern} {lists all paths matching input path}}
    $help add prcolor	{{} {print color&material table}}
    $help add push	{{object[s]} {pushes object's path transformations to solids}}
    $help add put	{{object data} {creates an object}}
    $help add r		{{region <operation solid>} {create or extend a Region combination}}
    $help add rm	{{comb <members>} {remove members from comb}}
    $help add title	{{?string?} {print or change the title}}
    $help add tol	{{[abs #] [rel #] [norm #] [dist #] [perp #]} {show/set tessellation and calculation tolerances}}
    $help add tops	{{} {find all top level objects}}
    $help add tree	{{[-c] [-i n] [-o outfile] object(s)} {print out a tree of all members of an object}}
    $help add whatid	{{region_name} {display ident number for region}}
    $help add whichair	{{air_codes(s)} {lists all regions with given air code}}
    $help add whichid	{{[-s] ident(s)} {lists all regions with given ident code}}
@


1.6.2.2
log
@Remove unnecessary use of eval.
@
text
@d140 1
a140 1
    $db dbip
@


1.6.2.3
log
@Add make_bb method.
@
text
@a52 1
    public method make_bb {name args}
d143 4
a154 4
body Db::ls {args} {
    eval $db ls $args
}

a268 4
}

body Db::make_bb {name args} {
    eval $db make_bb $name $args
@


1.6.2.4
log
@Add make_name method (imported and modified from MGED).
@
text
@a53 1
    public method make_name {args}
a273 4
}

body Db::make_name {args} {
    eval $db make_name $args
@


1.6.2.5
log
@*- add units member function
@
text
@a70 1
    public method units {args}
a234 4
}

body Db::units {args} {
    eval $db units $args
@


1.5
log
@*- moved constructor implementation outside of
   class body
@
text
@d24 1
a24 2
    private variable initializing 1
    public variable name ""
a28 5
    public method open {args}
    public method observer {args}
    public method match {args}
    public method get {args}
    public method put {args}
d30 7
a36 3
    public method form {args}
    public method tops {args}
    public method rt_gettrees {args}
d38 1
a38 5
    public method dbip {}
    public method ls {args}
    public method l {args}
    public method listeval {args}
    public method paths {args}
d40 7
d50 4
a53 1
    public method cp {args}
d56 7
a62 3
    public method concat {args}
    public method dup {args}
    public method g {args}
d64 1
a64 6
    public method r {args}
    public method c {args}
    public method comb {args}
    public method find {args}
    public method whichair {args}
    public method whichid {args}
d66 2
a68 4
    public method color {args}
    public method prcolor {args}
    public method tol {args}
    public method push {args}
d70 2
a71 4
    public method keep {args}
    public method cat {args}
    public method i {args}
    public method get_name {}
d74 2
a75 4
configbody Db::name {
    if {!$initializing} {
	Db::open $name
    }
d79 1
a79 1
    set name $filename
d81 1
a81 2
    wdb_open $db db $name
    set initializing 0
d89 1
a89 1
    set name [eval $db open $args]
d256 1
a256 1
body Db::get_name {} {
@


1.4
log
@*- change parameters to dbip method
@
text
@d27 2
a28 10
    constructor {filename} {
	set name $filename
	set db [subst $this]_db
	wdb_open $db db $name
	set initializing 0
    }

    destructor {
	$db close
    }
d79 11
@


1.3
log
@*- simplify Db::open
@
text
@d48 1
a48 1
    public method dbip {args}
@


1.2
log
@*- add methods: open, get_name
@
text
@d90 1
a90 6
    if {$args == ""} {
	return $name
    } else {
	$db open $args
	set name $args
    }
@


1.1
log
@*- [incr Tcl] class that wraps wdb_obj
@
text
@d24 2
a25 1
    protected variable name ""
d31 1
d38 1
d80 16
d260 4
@

