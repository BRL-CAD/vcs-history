head	1.5;
access;
symbols
	ansi-20040405-merged:1.3.4.1
	postmerge-20040405-ansi:1.4
	premerge-20040404-ansi:1.4
	postmerge-autoconf:1.4
	autoconf-freeze:1.3.12.1
	premerge-autoconf:1.4
	postmerge-20040315-windows:1.4
	premerge-20040315-windows:1.4
	windows-20040315-freeze:1.3.6.1
	autoconf-20031203:1.3
	autoconf-20031202:1.3
	autoconf-branch:1.3.0.12
	phong-branch:1.3.0.10
	photonmap-branch:1.3.0.8
	rel-6-1-DP:1.3
	windows-branch:1.3.0.6
	rel-6-0-2:1.3
	ansi-branch:1.3.0.4
	rel-6-0-1-branch:1.3.0.2
	hartley-6-0-post:1.3
	hartley-6-0-pre:1.3
	rel-6-0-1:1.3
	rel-6-0:1.3
	rel-5-4:1.2.2.2
	offsite-5-3-pre:1.3
	rel-5-3:1.2.2.2
	rel-5-2:1.2.2.1
	rel-5-1-branch:1.2.0.2;
locks; strict;
comment	@# @;


1.5
date	2004.05.21.16.41.19;	author morrison;	state dead;
branches;
next	1.4;

1.4
date	2004.02.02.17.39.43;	author morrison;	state Exp;
branches;
next	1.3;

1.3
date	2001.01.19.22.18.58;	author bparker;	state Exp;
branches
	1.3.4.1
	1.3.6.1
	1.3.12.1;
next	1.2;

1.2
date	2000.07.18.21.08.19;	author bparker;	state Exp;
branches
	1.2.2.1;
next	1.1;

1.1
date	2000.07.13.13.27.39;	author bparker;	state Exp;
branches;
next	;

1.2.2.1
date	2000.08.16.16.56.03;	author bparker;	state Exp;
branches;
next	1.2.2.2;

1.2.2.2
date	2001.01.19.21.59.32;	author bparker;	state Exp;
branches;
next	;

1.3.4.1
date	2004.03.17.21.23.04;	author morrison;	state Exp;
branches;
next	;

1.3.6.1
date	2004.03.11.23.48.51;	author morrison;	state Exp;
branches;
next	;

1.3.12.1
date	2004.02.12.18.34.48;	author erikg;	state Exp;
branches;
next	;


desc
@@


1.5
log
@moved to src/tclscripts/
@
text
@##                 C O L O R E N T R Y . T C L
#
# Author -
#	Bob Parker
#
# Source -
#	The U. S. Army Research Laboratory
#	Aberdeen Proving Ground, Maryland  21005
#
# Distribution Notice -
#	Re-distribution of this software is restricted, as described in
#       your "Statement of Terms and Conditions for the Release of
#       The BRL-CAD Package" agreement.
#
# Copyright Notice -
#       This software is Copyright (C) 1998-2004 by the United States Army
#       in all countries except the USA.  All rights reserved.
#
# Description -
#	ColorEntry instances are used to specify colors.
#

itk::usual ColorEntry {
    keep -tearoff
}

class cadwidgets::ColorEntry {
    inherit cadwidgets::ComboBox

    constructor {args} {}
    destructor {}

    public method rgbValid {r g b}
    public method getColor {}
    public method setColor {r g b}

    private method chooser {}
    private method updateColor {}
    private method colorOK {}
}

body cadwidgets::ColorEntry::constructor {args} {
    $itk_component(menu) add command -label black \
	    -command [code $this setColor 0 0 0]
    $itk_component(menu) add command -label white \
	    -command [code $this setColor 255 255 255]
    $itk_component(menu) add command -label red \
	    -command [code $this setColor 255 0 0]
    $itk_component(menu) add command -label green \
	    -command [code $this setColor 0 255 0]
    $itk_component(menu) add command -label blue\
	    -command [code $this setColor 0 0 255]
    $itk_component(menu) add command -label yellow \
	    -command [code $this setColor 255 255 0]
    $itk_component(menu) add command -label cyan \
	    -command [code $this setColor 0 255 255]
    $itk_component(menu) add command -label magenta \
	    -command [code $this setColor 255 0 255]
    $itk_component(menu) add separator
    $itk_component(menu) add command -label "Color Tool..." \
	    -command [code $this chooser]

    eval itk_initialize $args
    bind $itk_component(entry) <Return> [code $this updateColor]
}

body cadwidgets::ColorEntry::chooser {} {
    cadColorWidget dialog $itk_interior color \
	    -title "Color Chooser" \
	    -initialcolor [$itk_component(menubutton) cget -background] \
	    -ok [code $this colorOK] \
	    -cancel "cadColorWidget_destroy $itk_interior.color"
}

body cadwidgets::ColorEntry::getColor {} {
    return [getText]
}

body cadwidgets::ColorEntry::setColor {r g b} {
    if {![rgbValid $r $g $b]} {
	error "Improper color specification - $r $g $b"
    }

    setText "$r $g $b"
    $itk_component(menubutton) configure \
	    -bg [format "#%02x%02x%02x" $r $g $b]
}

body cadwidgets::ColorEntry::updateColor {} {
    eval setColor [getText]
}

body cadwidgets::ColorEntry::colorOK {} {
    upvar #0 $itk_interior.color data
    setColor $data(red) $data(green) $data(blue)
    cadColorWidget_destroy $itk_interior.color
}

body cadwidgets::ColorEntry::rgbValid {r g b} {
    if {![string is integer $r]} {
	    return 0
    }
    if {![string is integer $g]} {
	    return 0
    }
    if {![string is integer $b]} {
	    return 0
    }
    if {$r < 0 || 255 < $r} {
	return 0
    }
    if {$g < 0 || 255 < $g} {
	return 0
    }
    if {$b < 0 || 255 < $b} {
	return 0
    }

    return 1
}
@


1.4
log
@update copyright to include span through 2003
@
text
@@


1.3
log
@Add -tearoff to master options list
@
text
@d16 1
a16 1
#       This software is Copyright (C) 1998 by the United States Army
@


1.3.4.1
log
@sync branch with HEAD
@
text
@d16 1
a16 1
#       This software is Copyright (C) 1998-2004 by the United States Army
@


1.3.6.1
log
@sync to HEAD...
@
text
@d16 1
a16 1
#       This software is Copyright (C) 1998-2004 by the United States Army
@


1.3.12.1
log
@merge from HEAD
@
text
@d16 1
a16 1
#       This software is Copyright (C) 1998-2004 by the United States Army
@


1.2
log
@A few method names changed.
@
text
@d23 4
@


1.2.2.1
log
@Adding classes from main branch of source tree.
@
text
@@


1.2.2.2
log
@Make -tearoff a "usual" option.
@
text
@a22 4
itk::usual ColorEntry {
    keep -tearoff
}

@


1.1
log
@Inherits from cadwidgets::ComboBox and used
for entering colors (i.e. r g b).
@
text
@d29 3
a31 1
    public method rgbvalid {r g b}
d34 2
a35 3
    private method setcolor {r g b}
    private method setMBcolor {}
    private method colorok {}
d40 1
a40 1
	    -command [code $this setcolor 0 0 0]
d42 1
a42 1
	    -command [code $this setcolor 255 255 255]
d44 1
a44 1
	    -command [code $this setcolor 255 0 0]
d46 1
a46 1
	    -command [code $this setcolor 0 255 0]
d48 1
a48 1
	    -command [code $this setcolor 0 0 255]
d50 1
a50 1
	    -command [code $this setcolor 255 255 0]
d52 1
a52 1
	    -command [code $this setcolor 0 255 255]
d54 1
a54 1
	    -command [code $this setcolor 255 0 255]
d60 1
a60 1
    bind $itk_component(entry) <Return> [code $this setMBcolor]
d67 1
a67 1
	    -ok [code $this colorok] \
d71 6
a76 2
body cadwidgets::ColorEntry::setcolor {r g b} {
    if {![rgbvalid $r $g $b]} {
d80 1
a80 1
    settext "$r $g $b"
d85 2
a86 2
body cadwidgets::ColorEntry::setMBcolor {} {
    eval setcolor [gettext]
d89 1
a89 1
body cadwidgets::ColorEntry::colorok {} {
d91 1
a91 1
    setcolor $data(red) $data(green) $data(blue)
d95 1
a95 1
body cadwidgets::ColorEntry::rgbvalid {r g b} {
@

