head	1.4;
access;
symbols
	ansi-20040405-merged:1.3
	postmerge-20040405-ansi:1.3
	premerge-20040404-ansi:1.3
	postmerge-autoconf:1.3
	autoconf-freeze:1.3
	premerge-autoconf:1.3
	postmerge-20040315-windows:1.3
	premerge-20040315-windows:1.3
	windows-20040315-freeze:1.3
	autoconf-20031203:1.3
	autoconf-20031202:1.3
	autoconf-branch:1.3.0.14
	phong-branch:1.3.0.12
	photonmap-branch:1.3.0.10
	rel-6-1-DP:1.3
	windows-branch:1.3.0.8
	rel-6-0-2:1.3
	ansi-branch:1.3.0.6
	rel-6-0-1-branch:1.3.0.4
	hartley-6-0-post:1.3
	hartley-6-0-pre:1.3
	rel-6-0-1:1.3
	rel-6-0:1.3
	rel-5-4:1.3
	offsite-5-3-pre:1.3
	rel-5-3:1.3
	rel-5-2:1.3
	rel-5-1-branch:1.3.0.2
	rel-5-1:1.3
	rel-5-0:1.3
	rel-5-0-beta:1.3
	rel-4-5:1.2
	ctj-4-5-post:1.1
	ctj-4-5-pre:1.1;
locks; strict;
comment	@# @;


1.4
date	2004.05.21.16.41.18;	author morrison;	state dead;
branches;
next	1.3;

1.3
date	98.03.09.15.36.25;	author bparker;	state Exp;
branches;
next	1.2;

1.2
date	97.11.21.21.12.46;	author bparker;	state Exp;
branches;
next	1.1;

1.1
date	97.04.18.12.41.40;	author bparker;	state Exp;
branches;
next	;


desc
@common help functions
@


1.4
log
@moved to src/tclscripts/
@
text
@#
#			H E L P C O M M . T C L
#
# Authors -
#	Lee Butler
#	Robert G. Parker
#
# Source -
#	The U. S. Army Research Laboratory
#	Aberdeen Proving Ground, Maryland  21005
#
# Distribution Notice -
#	Re-distribution of this software is restricted, as described in
#       your "Statement of Terms and Conditions for the Release of
#       The BRL-CAD Package" agreement.
#
# Description -
#	Routines common to the BRL-CAD help system.
#

proc help_comm {data args} {
	global $data

	if {[llength $args] > 0}	{
		set cmd [lindex $args 0]
		if [info exists [subst $data]($cmd)] {
		    return "Usage: $cmd [lindex [subst $[subst $data]($cmd)] 0]\n\t([lindex [subst $[subst $data]($cmd)] 1])"
		} else {
			return "No help found for $cmd"
		}
	} else {
		foreach cmd [lsort [array names [subst $data]]] {
			append info "$cmd [lindex [subst $[subst $data]($cmd)] 0]\n\t[lindex [subst $[subst $data]($cmd)] 1]\n"
		}

		return $info
	}
}


proc ?_comm {data min ncol} {
    global $data

    set i 1
    foreach cmd [lsort [array names [subst $data]]] {
	append info [format "%-[subst $min]s" $cmd]
	if { ![expr $i % [subst $ncol]] } {
	    append info "\n"
	}
	incr i
    }
    return $info
}


proc apropos_comm {data key} {
    global $data

    set info ""
    foreach cmd [lsort [array names [subst $data]]] {
	if {[string first $key $cmd] != -1} {
	    append info "$cmd "
	} elseif {[string first $key [lindex [subst $[subst $data]($cmd)] 0]] != -1} {
	    append info "$cmd "
	} elseif {[string first $key [lindex [subst $[subst $data]($cmd)] 1]] != -1} {
	    append info "$cmd "
	}
    }

    return $info
}@


1.3
log
@added credits
@
text
@@


1.2
log
@change return message
@
text
@d1 20
@


1.1
log
@Initial revision
@
text
@d9 1
a9 1
			return "Command not found: $cmd"
@
