head	1.4;
access;
symbols
	ansi-20040405-merged:1.3
	postmerge-20040405-ansi:1.3
	premerge-20040404-ansi:1.3
	postmerge-autoconf:1.3
	autoconf-freeze:1.3
	premerge-autoconf:1.3
	postmerge-20040315-windows:1.3
	premerge-20040315-windows:1.3
	windows-20040315-freeze:1.3
	autoconf-20031203:1.3
	autoconf-20031202:1.3
	autoconf-branch:1.3.0.12
	phong-branch:1.3.0.10
	photonmap-branch:1.3.0.8
	rel-6-1-DP:1.3
	windows-branch:1.3.0.6
	rel-6-0-2:1.3
	ansi-branch:1.3.0.4
	rel-6-0-1-branch:1.3.0.2
	hartley-6-0-post:1.3
	hartley-6-0-pre:1.3
	rel-6-0-1:1.3
	rel-6-0:1.3
	rel-5-4:1.2
	offsite-5-3-pre:1.2
	rel-5-3:1.2
	rel-5-2:1.2
	rel-5-1-branch:1.2.0.2
	rel-5-1:1.2
	rel-5-0:1.2
	rel-5-0-beta:1.2
	rel-4-5:1.1;
locks; strict;
comment	@# @;


1.4
date	2004.05.21.16.41.23;	author morrison;	state dead;
branches;
next	1.3;

1.3
date	2001.07.25.14.17.39;	author jra;	state Exp;
branches;
next	1.2;

1.2
date	98.06.15.19.28.22;	author bparker;	state Exp;
branches;
next	1.1;

1.1
date	97.01.27.21.09.39;	author pjt;	state Exp;
branches;
next	;


desc
@     TCL macros for MGED(1) to specify an object for editing
     from among those currently being displayed
@


1.4
log
@moved to src/tclscripts/
@
text
@#
#			E O B J M E N U . T C L
#
#	TCL macros for MGED(1) to specify an object for editing
#	from among those currently being displayed
#
#	Author - Paul Tanenbaum
#
#	Grab the output of MGED's 'x' command, and use it to build a menu

#
#	Ensure that all commands that this script uses without defining
#	are provided by the calling application
#
check_externs "_mged_x _mged_press _mged_aip _mged_M"

proc eobjmenu {} {

    if {![llength [_mged_x -1]]} {
	puts "No objects are currently being displayed"
	return
    }

    #
    #	Define a local proc: illum
    #
    proc illum {flag} {

	#	flag = 0	==>	Go only as far as solid illuminate
	#	flag = 1	==>	Go all the way to solid edit

	set pointery [winfo pointery .om.meat.objects]
	set rooty [winfo rooty .om.meat.objects]
	set rely [expr $pointery - $rooty]
	set index [.om.meat.objects nearest $rely]
	.om.meat.objects selection clear 0 end
	.om.meat.objects selection set $index

	_mged_press oill
	for {set i 0} {$i < $index} {incr i} {
	    _mged_aip f
	}
	if {$flag != 0} {
	    _mged_M 1 0 0
	}
    }

    toplevel .om 
    wm title .om "Object-edit selection menu"

    frame .om.meat
    listbox .om.meat.objects -yscrollcommand {.om.meat.slider set}
    set i 0
    foreach word [_mged_x -1] {
	.om.meat.objects insert end $word
	incr i
    }

    bind .om <Leave> {
	if {[info vars omready] == "omready"} {
	    unset omready
	    destroy .om
	    delete_procs illum
	}
	break
    }
    bind .om.meat.objects <ButtonPress-1> {illum 1; break}
    bind .om.meat.objects <ButtonRelease-1> {set omready 1; break}
    bind .om.meat.objects <ButtonPress-2> {illum 0; break}
    bind .om.meat.objects <ButtonRelease-2> {
	.om.meat.objects selection clear 0 end
	_mged_press reject
	break
    }
    .om.meat.objects configure -width 0
    scrollbar .om.meat.slider -command ".om.meat.objects yview"
    
    pack .om.meat.objects -in .om.meat -side left
    pack .om.meat.slider -in .om.meat -side right -fill y
    pack .om.meat -in .om -side top

    button .om.abort -text "Abort object-edit selection" \
	-command {destroy .om; delete_procs illum}
    pack .om.abort -in .om -side bottom
}
@


1.3
log
@Removed bogus "ll" proc
@
text
@@


1.2
log
@*- append "break" to bindings to prevent further processing
@
text
@a16 3
#	XXX	kludge for edit-test cycle
proc ll {} { source /m/cad/tclscripts/eobjmenu.tcl }

@


1.1
log
@Initial revision
@
text
@d68 1
d70 3
a72 3
    bind .om.meat.objects <ButtonPress-1> {illum 1}
    bind .om.meat.objects <ButtonRelease-1> {set omready 1}
    bind .om.meat.objects <ButtonPress-2> {illum 0}
d76 1
@
