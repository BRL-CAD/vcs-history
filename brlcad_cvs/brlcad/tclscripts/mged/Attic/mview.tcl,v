head	1.21;
access;
symbols
	ansi-20040405-merged:1.18.6.1
	postmerge-20040405-ansi:1.20
	premerge-20040404-ansi:1.20
	postmerge-autoconf:1.20
	autoconf-freeze:1.20
	premerge-autoconf:1.20
	postmerge-20040315-windows:1.20
	premerge-20040315-windows:1.20
	windows-20040315-freeze:1.18.8.1
	autoconf-20031203:1.20
	autoconf-20031202:1.20
	autoconf-branch:1.20.0.6
	phong-branch:1.20.0.4
	photonmap-branch:1.20.0.2
	rel-6-1-DP:1.18
	windows-branch:1.18.0.8
	rel-6-0-2:1.18
	ansi-branch:1.18.0.6
	rel-6-0-1-branch:1.18.0.4
	hartley-6-0-post:1.18
	hartley-6-0-pre:1.18
	rel-6-0-1:1.18
	rel-6-0:1.18
	rel-5-4:1.18
	offsite-5-3-pre:1.18
	rel-5-3:1.18
	rel-5-2:1.18
	rel-5-1-branch:1.18.0.2
	rel-5-1:1.18
	rel-5-0:1.17
	rel-5-0-beta:1.15
	rel-4-5:1.2;
locks; strict;
comment	@# @;


1.21
date	2004.05.21.16.41.29;	author morrison;	state dead;
branches;
next	1.20;

1.20
date	2003.01.03.16.34.49;	author jra;	state Exp;
branches;
next	1.19;

1.19
date	2003.01.03.15.29.49;	author jra;	state Exp;
branches;
next	1.18;

1.18
date	2000.03.13.22.05.39;	author bparker;	state Exp;
branches
	1.18.6.1
	1.18.8.1;
next	1.17;

1.17
date	99.09.01.18.41.56;	author bparker;	state Exp;
branches;
next	1.16;

1.16
date	99.08.03.16.17.06;	author bparker;	state Exp;
branches;
next	1.15;

1.15
date	99.04.20.20.33.22;	author bparker;	state Exp;
branches;
next	1.14;

1.14
date	99.01.21.18.43.46;	author bparker;	state Exp;
branches;
next	1.13;

1.13
date	99.01.19.22.31.30;	author bparker;	state Exp;
branches;
next	1.12;

1.12
date	98.12.29.20.52.05;	author bparker;	state Exp;
branches;
next	1.11;

1.11
date	98.06.15.19.28.26;	author bparker;	state Exp;
branches;
next	1.10;

1.10
date	98.05.26.14.40.01;	author bparker;	state Exp;
branches;
next	1.9;

1.9
date	98.05.18.19.36.04;	author bparker;	state Exp;
branches;
next	1.8;

1.8
date	98.05.15.14.49.25;	author bparker;	state Exp;
branches;
next	1.7;

1.7
date	98.05.07.15.25.21;	author bparker;	state Exp;
branches;
next	1.6;

1.6
date	98.04.28.15.26.59;	author bparker;	state Exp;
branches;
next	1.5;

1.5
date	98.04.23.13.19.24;	author bparker;	state Exp;
branches;
next	1.4;

1.4
date	98.03.06.22.50.31;	author bparker;	state Exp;
branches;
next	1.3;

1.3
date	98.02.20.23.26.22;	author bparker;	state Exp;
branches;
next	1.2;

1.2
date	97.11.04.20.01.40;	author bparker;	state Exp;
branches;
next	1.1;

1.1
date	97.04.18.12.48.33;	author bparker;	state Exp;
branches;
next	;

1.18.6.1
date	2004.03.17.21.23.12;	author morrison;	state Exp;
branches;
next	;

1.18.8.1
date	2004.03.11.23.48.59;	author morrison;	state Exp;
branches;
next	;


desc
@support routines for managing groups of 4 display manager windows
@


1.21
log
@moved to src/tclscripts/
@
text
@# Author - Bob Parker

check_externs "_mged_attach"

if ![info exists mged_default(bd)] {
    set mged_default(bd) 2
}

proc openmv { id w wc dpy dtype } {
    global win_to_id
    global mged_default
    global faceplate
    global orig_gui
    global perspective_mode

    frame $wc.ulF -relief sunken -borderwidth $mged_default(bd)
    frame $wc.urF -relief sunken -borderwidth $mged_default(bd)
    frame $wc.llF -relief sunken -borderwidth $mged_default(bd)
    frame $wc.lrF -relief sunken -borderwidth $mged_default(bd)

    attach -d $dpy -t 0 -n $w.ul $dtype
    dm set zclip $mged_default(zclip)
    if { $dtype == "ogl" } {
	dm set zbuffer $mged_default(zbuffer)
	dm set lighting $mged_default(lighting)
    }
    set faceplate $mged_default(faceplate)
    set orig_gui $mged_default(orig_gui)
    set perspective_mode $mged_default(perspective_mode)

    attach -d $dpy -t 0 -n $w.ur $dtype
    dm set zclip $mged_default(zclip)
    if { $dtype == "ogl" } {
	dm set zbuffer $mged_default(zbuffer)
	dm set lighting $mged_default(lighting)
    }
    set faceplate $mged_default(faceplate)
    set orig_gui $mged_default(orig_gui)
    set perspective_mode $mged_default(perspective_mode)

    attach -d $dpy -t 0 -n $w.ll $dtype
    dm set zclip $mged_default(zclip)
    if { $dtype == "ogl" } {
	dm set zbuffer $mged_default(zbuffer)
	dm set lighting $mged_default(lighting)
    }
    set faceplate $mged_default(faceplate)
    set orig_gui $mged_default(orig_gui)
    set perspective_mode $mged_default(perspective_mode)

    attach -d $dpy -t 0 -n $w.lr $dtype
    dm set zclip $mged_default(zclip)
    if { $dtype == "ogl" } {
	dm set zbuffer $mged_default(zbuffer)
	dm set lighting $mged_default(lighting)
    }
    set faceplate $mged_default(faceplate)
    set orig_gui $mged_default(orig_gui)
    set perspective_mode $mged_default(perspective_mode)

    set win_to_id($w.ul) $id
    set win_to_id($w.ur) $id
    set win_to_id($w.ll) $id
    set win_to_id($w.lr) $id

    grid $w.ul -in $wc.ulF -sticky "nsew" -row 0 -column 0
    grid $w.ur -in $wc.urF -sticky "nsew" -row 0 -column 0
    grid $w.ll -in $wc.llF -sticky "nsew" -row 0 -column 0
    grid $w.lr -in $wc.lrF -sticky "nsew" -row 0 -column 0

    grid rowconfigure $wc.ulF 0 -weight 1
    grid columnconfigure $wc.ulF 0 -weight 1
    grid rowconfigure $wc.urF 0 -weight 1
    grid columnconfigure $wc.urF 0 -weight 1
    grid rowconfigure $wc.llF 0 -weight 1
    grid columnconfigure $wc.llF 0 -weight 1
    grid rowconfigure $wc.lrF 0 -weight 1
    grid columnconfigure $wc.lrF 0 -weight 1
}

proc mview_build_menubar { id } {
    global mged_gui

    set w $mged_gui($id,top)

    if {$mged_gui($id,top) == $mged_gui($id,dmc)} {
	.$id.menubar clone $w.menubar menubar
	$w configure -menu $w.menubar

	menu_accelerator_bindings_for_clone $id $w $w.ul ul
	menu_accelerator_bindings_for_clone $id $w $w.ur ur
	menu_accelerator_bindings_for_clone $id $w $w.ll ll
	menu_accelerator_bindings_for_clone $id $w $w.lr lr
    } else {
	menu_accelerator_bindings $id $w.ul ul
	menu_accelerator_bindings $id $w.ur ur
	menu_accelerator_bindings $id $w.ll ll
	menu_accelerator_bindings $id $w.lr lr
    }
}

proc menu_accelerator_bindings_for_clone { id parent w pos } {
    bind $w <Alt-ButtonPress-1> "set mged_gui($id,dm_loc) $pos; set_active_dm $id;\
	    tk_popup $parent.menubar.#$id#menubar#settings %X %Y; break"
    bind $w <Alt-ButtonPress-2> "set mged_gui($id,dm_loc) $pos; set_active_dm $id;\
	    tk_popup $parent.menubar.#$id#menubar#modes %X %Y; break"
    bind $w <Alt-F> "set mged_gui($id,dm_loc) $pos; set_active_dm $id;\
	    tk_popup $parent.menubar.#$id#menubar#file %X %Y; break"
    bind $w <Alt-f> "set mged_gui($id,dm_loc) $pos; set_active_dm $id;\
	    tk_popup $parent.menubar.#$id#menubar#file %X %Y; break"
    bind $w <Alt-E> "set mged_gui($id,dm_loc) $pos; set_active_dm $id;\
	    tk_popup $parent.menubar.#$id#menubar#edit %X %Y; break"
    bind $w <Alt-e> "set mged_gui($id,dm_loc) $pos; set_active_dm $id;\
	    tk_popup $parent.menubar.#$id#menubar#edit %X %Y; break"
    bind $w <Alt-C> "set mged_gui($id,dm_loc) $pos; set_active_dm $id;\
	    tk_popup $parent.menubar.#$id#menubar#create %X %Y; break"
    bind $w <Alt-c> "set mged_gui($id,dm_loc) $pos; set_active_dm $id;\
	    tk_popup $parent.menubar.#$id#menubar#create %X %Y; break"
    bind $w <Alt-V> "set mged_gui($id,dm_loc) $pos; set_active_dm $id;\
	    tk_popup $parent.menubar.#$id#menubar#view %X %Y; break"
    bind $w <Alt-v> "set mged_gui($id,dm_loc) $pos; set_active_dm $id;\
	    tk_popup $parent.menubar.#$id#menubar#view %X %Y; break"
    bind $w <Alt-R> "set mged_gui($id,dm_loc) $pos; set_active_dm $id;\
	    tk_popup $parent.menubar.#$id#menubar#viewring %X %Y; break"
    bind $w <Alt-r> "set mged_gui($id,dm_loc) $pos; set_active_dm $id;\
	    tk_popup $parent.menubar.#$id#menubar#viewring %X %Y; break"
    bind $w <Alt-S> "set mged_gui($id,dm_loc) $pos; set_active_dm $id;\
	    tk_popup $parent.menubar.#$id#menubar#settings %X %Y; break"
    bind $w <Alt-s> "set mged_gui($id,dm_loc) $pos; set_active_dm $id;\
	    tk_popup $parent.menubar.#$id#menubar#settings %X %Y; break"
    bind $w <Alt-M> "set mged_gui($id,dm_loc) $pos; set_active_dm $id;\
	    tk_popup $parent.menubar.#$id#menubar#modes %X %Y; break"
    bind $w <Alt-m> "set mged_gui($id,dm_loc) $pos; set_active_dm $id;\
	    tk_popup $parent.menubar.#$id#menubar#modes %X %Y; break"
    bind $w <Alt-I> "set mged_gui($id,dm_loc) $pos; set_active_dm $id;\
	    tk_popup $parent.menubar.#$id#menubar#misc %X %Y; break"
    bind $w <Alt-i> "set mged_gui($id,dm_loc) $pos; set_active_dm $id;\
	    tk_popup $parent.menubar.#$id#menubar#misc %X %Y; break"
    bind $w <Alt-T> "set mged_gui($id,dm_loc) $pos; set_active_dm $id;\
	    tk_popup $parent.menubar.#$id#menubar#tools %X %Y; break"
    bind $w <Alt-t> "set mged_gui($id,dm_loc) $pos; set_active_dm $id;\
	    tk_popup $parent.menubar.#$id#menubar#tools %X %Y; break"
    bind $w <Alt-H> "set mged_gui($id,dm_loc) $pos; set_active_dm $id;\
	    tk_popup $parent.menubar.#$id#menubar#help %X %Y; break"
    bind $w <Alt-h> "set mged_gui($id,dm_loc) $pos; set_active_dm $id;\
	    tk_popup $parent.menubar.#$id#menubar#help %X %Y; break"
}

proc menu_accelerator_bindings { id w pos } {
    bind $w <Alt-ButtonPress-1> "set mged_gui($id,dm_loc) $pos; set_active_dm $id;\
	    tk_popup .$id.menubar.settings %X %Y; break"
    bind $w <Alt-ButtonPress-2> "set mged_gui($id,dm_loc) $pos; set_active_dm $id;\
	    tk_popup .$id.menubar.modes %X %Y; break"
    bind $w <Alt-F> "set mged_gui($id,dm_loc) $pos; set_active_dm $id;\
	    tk_popup .$id.menubar.file %X %Y; break"
    bind $w <Alt-f> "set mged_gui($id,dm_loc) $pos; set_active_dm $id;\
	    tk_popup .$id.menubar.file %X %Y; break"
    bind $w <Alt-E> "set mged_gui($id,dm_loc) $pos; set_active_dm $id;\
	    tk_popup .$id.menubar.edit %X %Y; break"
    bind $w <Alt-e> "set mged_gui($id,dm_loc) $pos; set_active_dm $id;\
	    tk_popup .$id.menubar.edit %X %Y; break"
    bind $w <Alt-C> "set mged_gui($id,dm_loc) $pos; set_active_dm $id;\
	    tk_popup .$id.menubar.create %X %Y; break"
    bind $w <Alt-c> "set mged_gui($id,dm_loc) $pos; set_active_dm $id;\
	    tk_popup .$id.menubar.create %X %Y; break"
    bind $w <Alt-V> "set mged_gui($id,dm_loc) $pos; set_active_dm $id;\
	    tk_popup .$id.menubar.view %X %Y; break"
    bind $w <Alt-v> "set mged_gui($id,dm_loc) $pos; set_active_dm $id;\
	    tk_popup .$id.menubar.view %X %Y; break"
    bind $w <Alt-R> "set mged_gui($id,dm_loc) $pos; set_active_dm $id;\
	    tk_popup .$id.menubar.viewring %X %Y; break"
    bind $w <Alt-r> "set mged_gui($id,dm_loc) $pos; set_active_dm $id;\
	    tk_popup .$id.menubar.viewring %X %Y; break"
    bind $w <Alt-S> "set mged_gui($id,dm_loc) $pos; set_active_dm $id;\
	    tk_popup .$id.menubar.settings %X %Y; break"
    bind $w <Alt-s> "set mged_gui($id,dm_loc) $pos; set_active_dm $id;\
	    tk_popup .$id.menubar.settings %X %Y; break"
    bind $w <Alt-M> "set mged_gui($id,dm_loc) $pos; set_active_dm $id;\
	    tk_popup .$id.menubar.modes %X %Y; break"
    bind $w <Alt-m> "set mged_gui($id,dm_loc) $pos; set_active_dm $id;\
	    tk_popup .$id.menubar.modes %X %Y; break"
    bind $w <Alt-T> "set mged_gui($id,dm_loc) $pos; set_active_dm $id;\
	    tk_popup .$id.menubar.tools %X %Y; break"
    bind $w <Alt-t> "set mged_gui($id,dm_loc) $pos; set_active_dm $id;\
	    tk_popup .$id.menubar.tools %X %Y; break"
    bind $w <Alt-H> "set mged_gui($id,dm_loc) $pos; set_active_dm $id;\
	    tk_popup .$id.menubar.help %X %Y; break"
    bind $w <Alt-h> "set mged_gui($id,dm_loc) $pos; set_active_dm $id;\
	    tk_popup .$id.menubar.help %X %Y; break"
}

proc packmv { id } {
    global mged_gui

    grid $mged_gui($id,dmc).ulF -sticky "nsew" -row 0 -column 0
    grid $mged_gui($id,dmc).urF -sticky "nsew" -row 0 -column 1
    grid $mged_gui($id,dmc).llF -sticky "nsew" -row 1 -column 0
    grid $mged_gui($id,dmc).lrF -sticky "nsew" -row 1 -column 1
}

proc unpackmv { id } {
    global mged_gui

    catch { eval grid forget [grid slaves $mged_gui($id,dmc)] }
}

proc releasemv { id } {
    global mged_gui

    catch  { release $mged_gui($id,top).ul }
    catch  { release $mged_gui($id,top).ur }
    catch  { release $mged_gui($id,top).ll }
    catch  { release $mged_gui($id,top).lr }
}

proc closemv { id } {
    global mged_gui

    releasemv $id
    catch { destroy $mged_gui($id,dmc) }
}

proc setupmv { id } {
    global mged_gui
    global mged_default
    global faceplate

    set_default_views $id
#    mged_apply_local $id "set faceplate $mged_default(faceplate)"

    grid columnconfigure $mged_gui($id,dmc) 0 -weight 1
    grid columnconfigure $mged_gui($id,dmc) 1 -weight 1
    grid rowconfigure $mged_gui($id,dmc) 0 -weight 1
    grid rowconfigure $mged_gui($id,dmc) 1 -weight 1
}

proc set_default_views { id } {
    global mged_gui

    winset $mged_gui($id,top).ul
    _mged_press reset
    catch {ae 0 90}

    winset $mged_gui($id,top).ur
    _mged_press reset
    catch {press 35,25}

    winset $mged_gui($id,top).ll
    _mged_press reset
    catch {press front}

    winset $mged_gui($id,top).lr
    _mged_press reset
    catch {press left}
}

proc setmv { id } {
    global mged_gui

    if { $mged_gui($id,multi_pane) } {
	# insure that the weight is not exaggerated
	grid columnconfigure $mged_gui($id,dmc) 0 -weight 1

	unpackmv $id
	packmv $id
    } else {
	# exaggerate the weight so that the single display manager window 
	# will grow to completely fill the container window
	grid columnconfigure $mged_gui($id,dmc) 0 -weight 1000

	unpackmv $id
	grid $mged_gui($id,dmc).$mged_gui($id,dm_loc)\F -in $mged_gui($id,dmc) \
		-sticky "nsew" -row 0 -column 0
    }
}
@


1.20
log
@"zbuffer" and "lighting" are now only set for "ogl" display type
@
text
@@


1.19
log
@Added "zbuffer" and "lighting" to the values remembered in .mgedrc
@
text
@d23 4
a26 2
    dm set zbuffer $mged_default(zbuffer)
    dm set lighting $mged_default(lighting)
d33 4
a36 2
    dm set zbuffer $mged_default(zbuffer)
    dm set lighting $mged_default(lighting)
d43 4
a46 2
    dm set zbuffer $mged_default(zbuffer)
    dm set lighting $mged_default(lighting)
d53 4
a56 2
    dm set zbuffer $mged_default(zbuffer)
    dm set lighting $mged_default(lighting)
@


1.18
log
@*- add more mged_default's
@
text
@d23 2
d31 2
d39 2
d47 2
@


1.18.6.1
log
@sync branch with HEAD
@
text
@a22 4
    if { $dtype == "ogl" } {
	dm set zbuffer $mged_default(zbuffer)
	dm set lighting $mged_default(lighting)
    }
a28 4
    if { $dtype == "ogl" } {
	dm set zbuffer $mged_default(zbuffer)
	dm set lighting $mged_default(lighting)
    }
a34 4
    if { $dtype == "ogl" } {
	dm set zbuffer $mged_default(zbuffer)
	dm set lighting $mged_default(lighting)
    }
a40 4
    if { $dtype == "ogl" } {
	dm set zbuffer $mged_default(zbuffer)
	dm set lighting $mged_default(lighting)
    }
@


1.18.8.1
log
@sync to HEAD...
@
text
@a22 4
    if { $dtype == "ogl" } {
	dm set zbuffer $mged_default(zbuffer)
	dm set lighting $mged_default(lighting)
    }
a28 4
    if { $dtype == "ogl" } {
	dm set zbuffer $mged_default(zbuffer)
	dm set lighting $mged_default(lighting)
    }
a34 4
    if { $dtype == "ogl" } {
	dm set zbuffer $mged_default(zbuffer)
	dm set lighting $mged_default(lighting)
    }
a40 4
    if { $dtype == "ogl" } {
	dm set zbuffer $mged_default(zbuffer)
	dm set lighting $mged_default(lighting)
    }
@


1.17
log
@*- mods to run more robustly without an open database
@
text
@d12 3
d22 5
d28 5
d34 5
d40 4
d209 1
d213 1
a213 1
    mged_apply_local $id "set faceplate 0"
@


1.16
log
@*- add bindings to pop up the "Misc" menu in
   the geometry window
@
text
@d203 1
a203 1
    ae 0 90
d207 1
a207 1
    press 35,25
d211 1
a211 1
    press front
d215 1
a215 1
    press left
@


1.15
log
@*-
@
text
@d97 4
@


1.14
log
@*- redo geometry management of display manager windows
*- get rid of code left over from the days when "pack" was
   used for geometry management
@
text
@d217 1
a217 1
    if { $mged_gui($id,multi_view) } {
@


1.13
log
@*- cleanup variables
@
text
@d9 1
a9 1
proc openmv { id w wc dpy dtype S } {
d13 9
a21 11
    frame $wc.u
    frame $wc.l
    frame $wc.u.l -relief sunken -borderwidth $mged_default(bd)
    frame $wc.u.r -relief sunken -borderwidth $mged_default(bd)
    frame $wc.l.l -relief sunken -borderwidth $mged_default(bd)
    frame $wc.l.r -relief sunken -borderwidth $mged_default(bd)

    attach -d $dpy -t 0 -S $S -n $w.ul $dtype
    attach -d $dpy -t 0 -S $S -n $w.ur $dtype
    attach -d $dpy -t 0 -S $S -n $w.ll $dtype
    attach -d $dpy -t 0 -S $S -n $w.lr $dtype
d28 13
a40 23
    grid $w.ul -in $wc.u.l -sticky "nsew" -row 0 -column 0
    grid $w.ur -in $wc.u.r -sticky "nsew" -row 0 -column 0
    grid $w.ll -in $wc.l.l -sticky "nsew" -row 0 -column 0
    grid $w.lr -in $wc.l.r -sticky "nsew" -row 0 -column 0
    grid $wc.u.l -sticky "nsew" -row 0 -column 0
    grid $wc.u.r -sticky "nsew" -row 0 -column 1
    grid $wc.l.l -sticky "nsew" -row 0 -column 0
    grid $wc.l.r -sticky "nsew" -row 0 -column 1

    grid columnconfigure $wc.u.l 0 -weight 1
    grid rowconfigure $wc.u.l 0 -weight 1
    grid columnconfigure $wc.u.r 0 -weight 1
    grid rowconfigure $wc.u.r 0 -weight 1
    grid columnconfigure $wc.l.l 0 -weight 1
    grid rowconfigure $wc.l.l 0 -weight 1
    grid columnconfigure $wc.l.r 0 -weight 1
    grid rowconfigure $wc.l.r 0 -weight 1
    grid columnconfigure $wc.u 0 -weight 1
    grid columnconfigure $wc.u 1 -weight 1
    grid rowconfigure $wc.u 0 -weight 1
    grid columnconfigure $wc.l 0 -weight 1
    grid columnconfigure $wc.l 1 -weight 1
    grid rowconfigure $wc.l 0 -weight 1
d153 4
a156 5
    grid $mged_gui($id,dmc).u -sticky "nsew" -row 0 -column 0
    grid $mged_gui($id,dmc).l -sticky "nsew" -row 1 -column 0
    grid columnconfigure $mged_gui($id,dmc) 0 -weight 1
    grid rowconfigure $mged_gui($id,dmc) 0 -weight 1
    grid rowconfigure $mged_gui($id,dmc) 1 -weight 1
a158 1

d162 1
a162 1
    grid forget $mged_gui($id,dmc).u $mged_gui($id,dmc).l
d187 5
a191 9
    set height [expr [winfo screenheight $mged_gui($id,top)] - 50]
    set width $height
    wm geometry $mged_gui($id,top) $width\x$height
#    setmv $id

#    bind $mged_gui($id,top).ul m "togglemv $id; break"
#    bind $mged_gui($id,top).ur m "togglemv $id; break"
#    bind $mged_gui($id,top).ll m "togglemv $id; break"
#    bind $mged_gui($id,top).lr m "togglemv $id; break"
a215 3
    global mged_default

    set border_offset [expr $mged_default(bd) * 2]
d218 2
a219 25
	set width [expr ([winfo width $mged_gui($id,top)] - $border_offset) / 2]
	set height [expr ([winfo height $mged_gui($id,top)] - $border_offset) / 2]

	if {$mged_gui($id,comb)} {
	    if {$mged_gui($id,show_cmd)} {
		set height [expr $height - [get_cmd_win_height $id]]
#		set height [expr $height - [winfo height .$id.tf]]
	    }

	    if {$mged_gui($id,show_status)} {
		set height [expr $height - [winfo height .$id.status]]
	    }
	}

	# In case of resize/reconfiguration --- resize everybody
	winset $mged_gui($id,top).ul
	dm size $width $height
	winset $mged_gui($id,top).ur
	dm size $width $height
	winset $mged_gui($id,top).ll
	dm size $width $height
	winset $mged_gui($id,top).lr
	dm size $width $height

	grid $mged_gui($id,active_dm) -in $mged_gui($id,small_dmc) -sticky "nsew" -row 0 -column 0
d221 1
d224 7
a230 32
	winset $mged_gui($id,active_dm)
	catch { unpackmv $id }

	set width [expr [winfo width $mged_gui($id,top)] - $border_offset]
	set height [expr [winfo height $mged_gui($id,top)] - $border_offset]

	if {$mged_gui($id,comb)} {
	    if {$mged_gui($id,show_cmd)} {
		set height [expr $height - [get_cmd_win_height $id]]
#		set height [expr $height - [winfo height .$id.tf]]
	    }

	    if {$mged_gui($id,show_status)} {
		set height [expr $height - [winfo height .$id.status]]
	    }
	}

	dm size $width $height

	grid $mged_gui($id,active_dm) -in $mged_gui($id,dmc) -sticky "nsew" -row 0 -column 0
	grid columnconfigure $mged_gui($id,dmc) 0 -weight 1
	grid rowconfigure $mged_gui($id,dmc) 0 -weight 1
    }
}

proc togglemv { id } {
    global mged_gui

    if $mged_gui($id,multi_view) {
	set mged_gui($id,multi_view) 0
    } else {
	set mged_gui($id,multi_view) 1
a231 2

    setmv $id
a232 1

@


1.12
log
@*- some clean up
@
text
@d5 2
a6 2
if ![info exists debug_setmv] {
    set debug_setmv 0
a8 2
set mged_default_bd 2

d11 1
a11 1
    global mged_default_bd
d15 4
a18 4
    frame $wc.u.l -relief sunken -borderwidth $mged_default_bd
    frame $wc.u.r -relief sunken -borderwidth $mged_default_bd
    frame $wc.l.l -relief sunken -borderwidth $mged_default_bd
    frame $wc.l.r -relief sunken -borderwidth $mged_default_bd
d56 1
a56 2
    global mged_top
    global mged_dmc
d58 1
a58 1
    set w $mged_top($id)
d60 1
a60 1
    if {$mged_top($id) == $mged_dmc($id)} {
d77 1
a77 1
    bind $w <Alt-ButtonPress-1> "set mged_dm_loc($id) $pos; set_active_dm $id;\
d79 1
a79 1
    bind $w <Alt-ButtonPress-2> "set mged_dm_loc($id) $pos; set_active_dm $id;\
d81 1
a81 1
    bind $w <Alt-F> "set mged_dm_loc($id) $pos; set_active_dm $id;\
d83 1
a83 1
    bind $w <Alt-f> "set mged_dm_loc($id) $pos; set_active_dm $id;\
d85 1
a85 1
    bind $w <Alt-E> "set mged_dm_loc($id) $pos; set_active_dm $id;\
d87 1
a87 1
    bind $w <Alt-e> "set mged_dm_loc($id) $pos; set_active_dm $id;\
d89 1
a89 1
    bind $w <Alt-C> "set mged_dm_loc($id) $pos; set_active_dm $id;\
d91 1
a91 1
    bind $w <Alt-c> "set mged_dm_loc($id) $pos; set_active_dm $id;\
d93 1
a93 1
    bind $w <Alt-V> "set mged_dm_loc($id) $pos; set_active_dm $id;\
d95 1
a95 1
    bind $w <Alt-v> "set mged_dm_loc($id) $pos; set_active_dm $id;\
d97 1
a97 1
    bind $w <Alt-R> "set mged_dm_loc($id) $pos; set_active_dm $id;\
d99 1
a99 1
    bind $w <Alt-r> "set mged_dm_loc($id) $pos; set_active_dm $id;\
d101 1
a101 1
    bind $w <Alt-S> "set mged_dm_loc($id) $pos; set_active_dm $id;\
d103 1
a103 1
    bind $w <Alt-s> "set mged_dm_loc($id) $pos; set_active_dm $id;\
d105 1
a105 1
    bind $w <Alt-M> "set mged_dm_loc($id) $pos; set_active_dm $id;\
d107 1
a107 1
    bind $w <Alt-m> "set mged_dm_loc($id) $pos; set_active_dm $id;\
d109 1
a109 1
    bind $w <Alt-T> "set mged_dm_loc($id) $pos; set_active_dm $id;\
d111 1
a111 1
    bind $w <Alt-t> "set mged_dm_loc($id) $pos; set_active_dm $id;\
d113 1
a113 1
    bind $w <Alt-H> "set mged_dm_loc($id) $pos; set_active_dm $id;\
d115 1
a115 1
    bind $w <Alt-h> "set mged_dm_loc($id) $pos; set_active_dm $id;\
d120 1
a120 1
    bind $w <Alt-ButtonPress-1> "set mged_dm_loc($id) $pos; set_active_dm $id;\
d122 1
a122 1
    bind $w <Alt-ButtonPress-2> "set mged_dm_loc($id) $pos; set_active_dm $id;\
d124 1
a124 1
    bind $w <Alt-F> "set mged_dm_loc($id) $pos; set_active_dm $id;\
d126 1
a126 1
    bind $w <Alt-f> "set mged_dm_loc($id) $pos; set_active_dm $id;\
d128 1
a128 1
    bind $w <Alt-E> "set mged_dm_loc($id) $pos; set_active_dm $id;\
d130 1
a130 1
    bind $w <Alt-e> "set mged_dm_loc($id) $pos; set_active_dm $id;\
d132 1
a132 1
    bind $w <Alt-C> "set mged_dm_loc($id) $pos; set_active_dm $id;\
d134 1
a134 1
    bind $w <Alt-c> "set mged_dm_loc($id) $pos; set_active_dm $id;\
d136 1
a136 1
    bind $w <Alt-V> "set mged_dm_loc($id) $pos; set_active_dm $id;\
d138 1
a138 1
    bind $w <Alt-v> "set mged_dm_loc($id) $pos; set_active_dm $id;\
d140 1
a140 1
    bind $w <Alt-R> "set mged_dm_loc($id) $pos; set_active_dm $id;\
d142 1
a142 1
    bind $w <Alt-r> "set mged_dm_loc($id) $pos; set_active_dm $id;\
d144 1
a144 1
    bind $w <Alt-S> "set mged_dm_loc($id) $pos; set_active_dm $id;\
d146 1
a146 1
    bind $w <Alt-s> "set mged_dm_loc($id) $pos; set_active_dm $id;\
d148 1
a148 1
    bind $w <Alt-M> "set mged_dm_loc($id) $pos; set_active_dm $id;\
d150 1
a150 1
    bind $w <Alt-m> "set mged_dm_loc($id) $pos; set_active_dm $id;\
d152 1
a152 1
    bind $w <Alt-T> "set mged_dm_loc($id) $pos; set_active_dm $id;\
d154 1
a154 1
    bind $w <Alt-t> "set mged_dm_loc($id) $pos; set_active_dm $id;\
d156 1
a156 1
    bind $w <Alt-H> "set mged_dm_loc($id) $pos; set_active_dm $id;\
d158 1
a158 1
    bind $w <Alt-h> "set mged_dm_loc($id) $pos; set_active_dm $id;\
d163 1
a163 1
    global mged_dmc
d165 5
a169 5
    grid $mged_dmc($id).u -sticky "nsew" -row 0 -column 0
    grid $mged_dmc($id).l -sticky "nsew" -row 1 -column 0
    grid columnconfigure $mged_dmc($id) 0 -weight 1
    grid rowconfigure $mged_dmc($id) 0 -weight 1
    grid rowconfigure $mged_dmc($id) 1 -weight 1
d174 1
a174 1
    global mged_dmc
d176 1
a176 1
    grid forget $mged_dmc($id).u $mged_dmc($id).l
d180 1
a180 1
    global mged_top
d182 4
a185 4
    catch  { release $mged_top($id).ul }
    catch  { release $mged_top($id).ur }
    catch  { release $mged_top($id).ll }
    catch  { release $mged_top($id).lr }
d189 1
a189 1
    global mged_dmc
d192 1
a192 1
    catch { destroy $mged_dmc($id) }
d196 1
a196 1
    global mged_top
d201 1
a201 1
    set height [expr [winfo screenheight $mged_top($id)] - 50]
d203 1
a203 1
    wm geometry $mged_top($id) $width\x$height
d206 4
a209 4
#    bind $mged_top($id).ul m "togglemv $id; break"
#    bind $mged_top($id).ur m "togglemv $id; break"
#    bind $mged_top($id).ll m "togglemv $id; break"
#    bind $mged_top($id).lr m "togglemv $id; break"
d213 1
a213 1
    global mged_top
d215 1
a215 1
    winset $mged_top($id).ul
d219 1
a219 1
    winset $mged_top($id).ur
d223 1
a223 1
    winset $mged_top($id).ll
d227 1
a227 1
    winset $mged_top($id).lr
d233 8
a240 19
    global mged_top
    global mged_dmc
    global mged_comb
    global mged_show_cmd
    global mged_show_status
    global win_size
    global mged_multi_view
    global mged_active_dm
    global mged_small_dmc
    global mged_default_bd
    global debug_setmv

    incr debug_setmv

    set border_offset [expr $mged_default_bd * 2]

    if { $mged_multi_view($id) } {
	set width [expr ([winfo width $mged_top($id)] - $border_offset) / 2]
	set height [expr ([winfo height $mged_top($id)] - $border_offset) / 2]
d242 2
a243 2
	if {$mged_comb($id)} {
	    if {$mged_show_cmd($id)} {
d248 1
a248 1
	    if {$mged_show_status($id)} {
d254 1
a254 1
	winset $mged_top($id).ul
d256 1
a256 1
	winset $mged_top($id).ur
d258 1
a258 1
	winset $mged_top($id).ll
d260 1
a260 1
	winset $mged_top($id).lr
d263 1
a263 1
	grid $mged_active_dm($id) -in $mged_small_dmc($id) -sticky "nsew" -row 0 -column 0
d267 1
a267 1
	winset $mged_active_dm($id)
d270 2
a271 2
	set width [expr [winfo width $mged_top($id)] - $border_offset]
	set height [expr [winfo height $mged_top($id)] - $border_offset]
d273 2
a274 2
	if {$mged_comb($id)} {
	    if {$mged_show_cmd($id)} {
d279 1
a279 1
	    if {$mged_show_status($id)} {
d286 3
a288 3
	grid $mged_active_dm($id) -in $mged_dmc($id) -sticky "nsew" -row 0 -column 0
	grid columnconfigure $mged_dmc($id) 0 -weight 1
	grid rowconfigure $mged_dmc($id) 0 -weight 1
d293 1
a293 1
    global mged_multi_view
d295 2
a296 2
    if $mged_multi_view($id) {
	set mged_multi_view($id) 0
d298 1
a298 1
	set mged_multi_view($id) 1
@


1.11
log
@*- append "break" to bindings to prevent further processing
@
text
@a4 4
if ![info exists use_grid_gm] {
    set use_grid_gm 1
}

a12 1
    global use_grid_gm
d32 23
a54 32
    if { $use_grid_gm } {
	grid $w.ul -in $wc.u.l -sticky "nsew" -row 0 -column 0
	grid $w.ur -in $wc.u.r -sticky "nsew" -row 0 -column 0
	grid $w.ll -in $wc.l.l -sticky "nsew" -row 0 -column 0
	grid $w.lr -in $wc.l.r -sticky "nsew" -row 0 -column 0
	grid $wc.u.l -sticky "nsew" -row 0 -column 0
	grid $wc.u.r -sticky "nsew" -row 0 -column 1
	grid $wc.l.l -sticky "nsew" -row 0 -column 0
	grid $wc.l.r -sticky "nsew" -row 0 -column 1

	grid columnconfigure $wc.u.l 0 -weight 1
	grid rowconfigure $wc.u.l 0 -weight 1
	grid columnconfigure $wc.u.r 0 -weight 1
	grid rowconfigure $wc.u.r 0 -weight 1
	grid columnconfigure $wc.l.l 0 -weight 1
	grid rowconfigure $wc.l.l 0 -weight 1
	grid columnconfigure $wc.l.r 0 -weight 1
	grid rowconfigure $wc.l.r 0 -weight 1
	grid columnconfigure $wc.u 0 -weight 1
	grid columnconfigure $wc.u 1 -weight 1
	grid rowconfigure $wc.u 0 -weight 1
	grid columnconfigure $wc.l 0 -weight 1
	grid columnconfigure $wc.l 1 -weight 1
	grid rowconfigure $wc.l 0 -weight 1
    } else {
	pack $w.ul -in $wc.u.l -expand 1 -fill both
	pack $w.ur -in $wc.u.r -expand 1 -fill both
	pack $w.ll -in $wc.l.l -expand 1 -fill both
	pack $w.lr -in $wc.l.r -expand 1 -fill both
	pack $wc.u.l $wc.u.r -side left -anchor w -expand 1 -fill both
	pack $wc.l.l $wc.l.r -side left -anchor w -expand 1 -fill both
    }
a166 1
    global use_grid_gm
d168 5
a172 9
    if { $use_grid_gm } {
	grid $mged_dmc($id).u -sticky "nsew" -row 0 -column 0
	grid $mged_dmc($id).l -sticky "nsew" -row 1 -column 0
	grid columnconfigure $mged_dmc($id) 0 -weight 1
	grid rowconfigure $mged_dmc($id) 0 -weight 1
	grid rowconfigure $mged_dmc($id) 1 -weight 1
    } else {
	pack $mged_dmc($id).u $mged_dmc($id).l -expand 1 -fill both
    }
a177 1
    global use_grid_gm
d179 1
a179 5
    if { $use_grid_gm } {
	grid forget $mged_dmc($id).u $mged_dmc($id).l
    } else {
	pack forget $mged_dmc($id).u $mged_dmc($id).l
    }
a245 1
    global use_grid_gm
d253 7
a259 13
	if { $use_grid_gm } {
	    set width [expr ([winfo width $mged_top($id)] - $border_offset) / 2]
	    set height [expr ([winfo height $mged_top($id)] - $border_offset) / 2]

	    if {$mged_comb($id)} {
		if {$mged_show_cmd($id)} {
		    set height [expr $height - [get_cmd_win_height $id]]
#		    set height [expr $height - [winfo height .$id.tf]]
		}

		if {$mged_show_status($id)} {
		    set height [expr $height - [winfo height .$id.status]]
		}
d262 14
a275 25
	    # In case of resize/reconfiguration --- resize everybody
	    winset $mged_top($id).ul
	    dm size $width $height
	    winset $mged_top($id).ur
	    dm size $width $height
	    winset $mged_top($id).ll
	    dm size $width $height
	    winset $mged_top($id).lr
	    dm size $width $height

	    grid $mged_active_dm($id) -in $mged_small_dmc($id) -sticky "nsew" -row 0 -column 0
	} else {
	    unpackmv $id

	    set mv_size [expr $win_size($id) / 2 - $border_offset]

	    # In case of resize/reconfiguration --- resize everybody
	    winset $mged_top($id).ul
	    dm size $mv_size $mv_size
	    winset $mged_top($id).ur
	    dm size $mv_size $mv_size
	    winset $mged_top($id).ll
	    dm size $mv_size $mv_size
	    winset $mged_top($id).lr
	    dm size $mv_size $mv_size
d277 1
a277 2
	    pack $mged_active_dm($id) -in $mged_small_dmc($id) -expand 1 -fill both
	}
d284 11
a294 13
	if { $use_grid_gm } {
	    set width [expr [winfo width $mged_top($id)] - $border_offset]
	    set height [expr [winfo height $mged_top($id)] - $border_offset]

	    if {$mged_comb($id)} {
		if {$mged_show_cmd($id)} {
		    set height [expr $height - [get_cmd_win_height $id]]
#		    set height [expr $height - [winfo height .$id.tf]]
		}

		if {$mged_show_status($id)} {
		    set height [expr $height - [winfo height .$id.status]]
		}
d296 1
d298 1
a298 1
	    dm size $width $height
d300 3
a302 7
	    grid $mged_active_dm($id) -in $mged_dmc($id) -sticky "nsew" -row 0 -column 0
	    grid columnconfigure $mged_dmc($id) 0 -weight 1
	    grid rowconfigure $mged_dmc($id) 0 -weight 1
	} else {
	    dm size $win_size($id) $win_size($id)
	    pack $mged_active_dm($id) -in $mged_dmc($id)
	}
@


1.10
log
@*** empty log message ***
@
text
@d233 4
a236 4
#    bind $mged_top($id).ul m "togglemv $id"
#    bind $mged_top($id).ur m "togglemv $id"
#    bind $mged_top($id).ll m "togglemv $id"
#    bind $mged_top($id).lr m "togglemv $id"
@


1.9
log
@*- mods for pjt demo
@
text
@d6 1
a6 1
    set use_grid_gm 0
@


1.8
log
@checkin for pjt/jra demo
@
text
@d5 2
a6 2
if ![info exists bob_testing] {
    set bob_testing 0
d17 1
a17 1
    global bob_testing
d37 1
a37 1
    if { $bob_testing } {
d181 1
a181 1
    global bob_testing
d183 1
a183 1
    if { $bob_testing } {
d197 1
a197 1
    global bob_testing
d199 1
a199 1
    if { $bob_testing } {
d270 1
a270 1
    global bob_testing
d278 1
a278 1
	if { $bob_testing } {
d284 2
a285 1
		    set height [expr $height - [winfo height .$id.tf]]
d325 1
a325 1
	unpackmv $id
d327 1
a327 1
	if { $bob_testing } {
d333 2
a334 1
		    set height [expr $height - [winfo height .$id.tf]]
@


1.7
log
@*- make a clone of the menu system for each set of geometry windows
*- provide accelerators to access the cloned menu system
@
text
@d9 6
d18 1
d22 4
a25 4
    frame $wc.u.l -relief sunken -borderwidth 2
    frame $wc.u.r -relief sunken -borderwidth 2
    frame $wc.l.l -relief sunken -borderwidth 2
    frame $wc.l.r -relief sunken -borderwidth 2
d38 8
a45 15
	grid $w.ul -in $wc.u.l -sticky "nsew"
	grid $w.ur -in $wc.u.r -sticky "nsew"
	grid $w.ll -in $wc.l.l -sticky "nsew"
	grid $w.lr -in $wc.l.r -sticky "nsew"
	grid $w.u.l $wc.u.r -sticky "nsew"
	grid $w.l.l $wc.l.r -sticky "nsew"

	grid columnconfigure $w.ul 0 -weight 1
	grid rowconfigure $w.ul 0 -weight 1
	grid columnconfigure $w.ur 0 -weight 1
	grid rowconfigure $w.ur 0 -weight 1
	grid columnconfigure $w.ll 0 -weight 1
	grid rowconfigure $w.ll 0 -weight 1
	grid columnconfigure $w.lr 0 -weight 1
	grid rowconfigure $w.lr 0 -weight 1
d184 5
a188 2
	grid $mged_dmc($id).u -sticky "nsew"
	grid $mged_dmc($id).l -sticky "nsew"
d228 4
d243 1
d247 1
d251 1
d255 1
d262 3
d266 1
a266 1
    global multi_view
d269 1
d271 1
d273 3
a275 2
    if $multi_view($id) {
	unpackmv $id
d277 4
a280 1
	set mv_size [expr $win_size($id) / 2 - 4]
d282 19
a300 9
# In case of resize/reconfiguration --- resize everybody
	winset $mged_top($id).ul
	dm size $mv_size $mv_size
	winset $mged_top($id).ur
	dm size $mv_size $mv_size
	winset $mged_top($id).ll
	dm size $mv_size $mv_size
	winset $mged_top($id).lr
	dm size $mv_size $mv_size
d302 1
a302 2
	if { $bob_testing } {
	    grid $mged_active_dm($id) -in $mged_small_dmc($id) -sticky "nsew"
d304 14
a324 1
	dm size $win_size($id) $win_size($id)
d327 18
a344 1
	    grid $mged_active_dm($id) -in $mged_dmc($id) -sticky "nsew"
d346 1
d353 1
a353 1
    global multi_view
d355 2
a356 2
    if $multi_view($id) {
	set multi_view($id) 0
d358 1
a358 1
	set multi_view($id) 1
d363 1
@


1.6
log
@mods to menu names
@
text
@d69 7
d77 57
a133 4
    menu_accelerator_bindings $id $w.ul ul
    menu_accelerator_bindings $id $w.ur ur
    menu_accelerator_bindings $id $w.ll ll
    menu_accelerator_bindings $id $w.lr lr
d140 1
a140 1
	    tk_popup .$id.menubar.settings.mouse_behavior %X %Y; break"
d161 4
a168 4
    bind $w <Alt-S> "set mged_dm_loc($id) $pos; set_active_dm $id;\
	    tk_popup .$id.menubar.settings %X %Y; break"
    bind $w <Alt-s> "set mged_dm_loc($id) $pos; set_active_dm $id;\
	    tk_popup .$id.menubar.settings %X %Y; break"
a172 4
    bind $w <Alt-O> "set mged_dm_loc($id) $pos; set_active_dm $id;\
	    tk_popup .$id.menubar.other %X %Y; break"
    bind $w <Alt-o> "set mged_dm_loc($id) $pos; set_active_dm $id;\
	    tk_popup .$id.menubar.other %X %Y; break"
d226 4
a229 4
    bind $mged_top($id).ul m "togglemv $id"
    bind $mged_top($id).ur m "togglemv $id"
    bind $mged_top($id).ll m "togglemv $id"
    bind $mged_top($id).lr m "togglemv $id"
@


1.5
log
@*- added proc menu_accelerator_bindings
@
text
@d78 1
a78 1
	    tk_popup .$id.settings.m %X %Y; break"
d80 1
a80 1
	    tk_popup .$id.settings.m.cm_mb %X %Y; break"
d82 1
a82 1
	    tk_popup .$id.file.m %X %Y; break"
d84 1
a84 1
	    tk_popup .$id.file.m %X %Y; break"
d86 1
a86 1
	    tk_popup .$id.edit.m %X %Y; break"
d88 1
a88 1
	    tk_popup .$id.edit.m %X %Y; break"
d90 1
a90 1
	    tk_popup .$id.create.m %X %Y; break"
d92 1
a92 1
	    tk_popup .$id.create.m %X %Y; break"
d94 1
a94 1
	    tk_popup .$id.view.m %X %Y; break"
d96 1
a96 1
	    tk_popup .$id.view.m %X %Y; break"
d98 1
a98 1
	    tk_popup .$id.viewring.m %X %Y; break"
d100 1
a100 1
	    tk_popup .$id.viewring.m %X %Y; break"
d102 1
a102 1
	    tk_popup .$id.modes.m %X %Y; break"
d104 1
a104 1
	    tk_popup .$id.modes.m %X %Y; break"
d106 1
a106 1
	    tk_popup .$id.settings.m %X %Y; break"
d108 1
a108 1
	    tk_popup .$id.settings.m %X %Y; break"
d110 1
a110 1
	    tk_popup .$id.tools.m %X %Y; break"
d112 1
a112 1
	    tk_popup .$id.tools.m %X %Y; break"
d114 1
a114 1
	    tk_popup .$id.other.m %X %Y; break"
d116 1
a116 1
	    tk_popup .$id.other.m %X %Y; break"
d118 1
a118 1
	    tk_popup .$id.help.m %X %Y; break"
d120 1
a120 1
	    tk_popup .$id.help.m %X %Y; break"
@


1.4
log
@*- use "ae 0 90" instead of "press top"
	to initial the upper left panes view
@
text
@d5 4
d11 1
d30 91
a120 6
    pack $w.ul -in $wc.u.l -expand 1 -fill both
    pack $w.ur -in $wc.u.r -expand 1 -fill both
    pack $w.ll -in $wc.l.l -expand 1 -fill both
    pack $w.lr -in $wc.l.r -expand 1 -fill both
    pack $wc.u.l $wc.u.r -side left -anchor w -expand 1 -fill both
    pack $wc.l.l $wc.l.r -side left -anchor w -expand 1 -fill both
a122 1

d125 1
d127 6
a132 1
    pack $mged_dmc($id).u $mged_dmc($id).l -expand 1 -fill both
d138 1
d140 5
a144 1
    pack forget $mged_dmc($id).u $mged_dmc($id).l
a146 1

a155 1

a162 1

d166 12
a177 1
    global mged_faceplate
a180 1
    set faceplate 0
a183 1
    set faceplate 0
a186 1
    set faceplate 0
a189 6
    set faceplate 0

    bind $mged_top($id).ul m "togglemv $id"
    bind $mged_top($id).ur m "togglemv $id"
    bind $mged_top($id).ll m "togglemv $id"
    bind $mged_top($id).lr m "togglemv $id"
a191 1

d199 1
d216 5
a220 1
	pack $mged_active_dm($id) -in $mged_small_dmc($id) -expand 1 -fill both
d227 6
a232 1
	pack $mged_active_dm($id) -in $mged_dmc($id)
a234 1

@


1.3
log
@modified openmv() to take dpy parameter
@
text
@d72 1
a72 1
    press top
d84 1
a84 1
    press right
@


1.2
log
@*** empty log message ***
@
text
@d5 3
a7 1
proc openmv { w wc dtype S } {
d15 9
a23 4
    attach -t 0 -S $S -n $w.ul $dtype
    attach -t 0 -S $S -n $w.ur $dtype
    attach -t 0 -S $S -n $w.ll $dtype
    attach -t 0 -S $S -n $w.lr $dtype
a67 1
    global mged_dmc
d69 1
@


1.1
log
@Initial revision
@
text
@d1 23
a23 27
set extern_commands "attach"
foreach cmd $extern_commands {
    if {[string compare [info command $cmd] $cmd] != 0} {
	puts stderr "Application fails to provide command '$cmd'"
	return
    }
}

proc openmv { w id dtype S } {
#puts "openmv $w $id $dtype $S"
    frame $w.u
    frame $w.l
    frame $w.u.l -relief sunken -borderwidth 2
    frame $w.u.r -relief sunken -borderwidth 2
    frame $w.l.l -relief sunken -borderwidth 2
    frame $w.l.r -relief sunken -borderwidth 2

    attach -t 0 -S $S -n $w.u.l.ul$id $dtype
    attach -t 0 -S $S -n $w.u.r.ur$id $dtype
    attach -t 0 -S $S -n $w.l.l.ll$id $dtype
#    attach -t 0 -W $S -N $S -n $w.l.r.lr$id $dtype

#    pack $w.u.l.ul$id $w.u.r.ur$id $w.l.l.ll$id $w.l.r.lr$id -expand 1 -fill both
    pack $w.u.l.ul$id $w.u.r.ur$id $w.l.l.ll$id -expand 1 -fill both
    pack $w.u.l $w.u.r -side left -anchor w -expand 1 -fill both
    pack $w.l.l $w.l.r -side left -anchor w -expand 1 -fill both
#puts "openmv: leave"
d42 1
a42 1
    global mged_dmc
d44 4
a47 4
    catch { release $mged_dmc($id).u.l.ul$id }
    catch { release $mged_dmc($id).u.r.ur$id }
    catch { release $mged_dmc($id).l.l.ll$id }
#    catch { release $mged_dmc($id).l.r.lr$id }
d64 2
a65 2
    winset $mged_dmc($id).u.l.ul$id
    press 35,25
d68 2
a69 2
    winset $mged_dmc($id).u.r.ur$id
    press right
d72 1
a72 1
    winset $mged_dmc($id).l.l.ll$id
d76 2
a77 1
    winset $mged_top($id).$id
d80 4
a83 4
    bind $mged_top($id).$id m "togglemv $id"
    bind $mged_dmc($id).u.l.ul$id m "togglemv $id"
    bind $mged_dmc($id).u.r.ur$id m "togglemv $id"
    bind $mged_dmc($id).l.l.ll$id m "togglemv $id"
d92 2
a94 1
    winset $mged_top($id).$id
d96 2
d99 5
a103 1
	pack forget $mged_top($id).$id
d105 7
a111 1
	pack $mged_top($id).$id -in $mged_dmc($id).l.r
d114 1
d117 1
a117 1
	pack $mged_top($id).$id -in $mged_dmc($id)
@
