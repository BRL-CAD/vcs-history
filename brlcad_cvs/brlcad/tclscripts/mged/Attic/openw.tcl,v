head	1.136;
access;
symbols
	ansi-20040405-merged:1.126.2.1
	postmerge-20040405-ansi:1.135
	premerge-20040404-ansi:1.135
	postmerge-autoconf:1.135
	autoconf-freeze:1.133.4.2
	premerge-autoconf:1.135
	postmerge-20040315-windows:1.135
	premerge-20040315-windows:1.135
	windows-20040315-freeze:1.126.4.4
	autoconf-20031203:1.133
	autoconf-20031202:1.133
	autoconf-branch:1.133.0.4
	phong-branch:1.133.0.2
	photonmap-branch:1.130.0.2
	rel-6-1-DP:1.127
	windows-branch:1.126.0.4
	rel-6-0-2:1.121
	ansi-branch:1.126.0.2
	rel-6-0-1-branch:1.121.0.2
	hartley-6-0-post:1.124
	hartley-6-0-pre:1.123
	rel-6-0-1:1.121
	rel-6-0:1.121
	rel-5-4:1.85.2.18
	offsite-5-3-pre:1.102
	rel-5-3:1.85.2.18
	rel-5-2:1.85
	rel-5-1-branch:1.85.0.2
	rel-5-1:1.85
	rel-5-0:1.78
	rel-5-0-beta:1.65
	rel-4-5:1.6;
locks; strict;
comment	@# @;


1.136
date	2004.05.21.16.41.29;	author morrison;	state dead;
branches;
next	1.135;

1.135
date	2004.03.15.14.48.38;	author morrison;	state Exp;
branches;
next	1.134;

1.134
date	2004.02.02.17.39.44;	author morrison;	state Exp;
branches;
next	1.133;

1.133
date	2003.09.10.18.31.23;	author jra;	state Exp;
branches
	1.133.4.1;
next	1.132;

1.132
date	2003.09.05.14.54.38;	author jra;	state Exp;
branches;
next	1.131;

1.131
date	2003.09.05.14.17.18;	author jra;	state Exp;
branches;
next	1.130;

1.130
date	2003.03.13.19.45.32;	author jra;	state Exp;
branches;
next	1.129;

1.129
date	2003.01.03.15.29.49;	author jra;	state Exp;
branches;
next	1.128;

1.128
date	2002.12.27.01.31.07;	author jra;	state Exp;
branches;
next	1.127;

1.127
date	2002.10.21.22.51.41;	author morrison;	state Exp;
branches;
next	1.126;

1.126
date	2002.08.23.12.16.22;	author morrison;	state Exp;
branches
	1.126.2.1
	1.126.4.1;
next	1.125;

1.125
date	2002.08.20.17.08.47;	author jra;	state Exp;
branches;
next	1.124;

1.124
date	2002.08.15.20.55.59;	author hartley;	state Exp;
branches;
next	1.123;

1.123
date	2002.08.12.18.26.54;	author morrison;	state Exp;
branches;
next	1.122;

1.122
date	2002.08.11.02.25.26;	author morrison;	state Exp;
branches;
next	1.121;

1.121
date	2002.03.19.23.57.10;	author morrison;	state Exp;
branches;
next	1.120;

1.120
date	2002.02.05.03.19.30;	author jra;	state Exp;
branches;
next	1.119;

1.119
date	2001.12.19.22.09.25;	author bparker;	state Exp;
branches;
next	1.118;

1.118
date	2001.12.13.17.43.40;	author bparker;	state Exp;
branches;
next	1.117;

1.117
date	2001.11.14.17.11.20;	author bparker;	state Exp;
branches;
next	1.116;

1.116
date	2001.10.29.19.28.48;	author butler;	state Exp;
branches;
next	1.115;

1.115
date	2001.10.26.20.51.33;	author bparker;	state Exp;
branches;
next	1.114;

1.114
date	2001.10.25.16.08.20;	author bparker;	state Exp;
branches;
next	1.113;

1.113
date	2001.10.16.21.25.14;	author bparker;	state Exp;
branches;
next	1.112;

1.112
date	2001.10.12.17.01.32;	author bparker;	state Exp;
branches;
next	1.111;

1.111
date	2001.10.09.21.13.57;	author bparker;	state Exp;
branches;
next	1.110;

1.110
date	2001.10.09.21.09.26;	author bparker;	state Exp;
branches;
next	1.109;

1.109
date	2001.10.04.21.55.11;	author bparker;	state Exp;
branches;
next	1.108;

1.108
date	2001.09.19.22.18.00;	author bparker;	state Exp;
branches;
next	1.107;

1.107
date	2001.09.17.13.43.15;	author bparker;	state Exp;
branches;
next	1.106;

1.106
date	2001.09.05.20.55.07;	author bparker;	state Exp;
branches;
next	1.105;

1.105
date	2001.08.20.18.55.56;	author jra;	state Exp;
branches;
next	1.104;

1.104
date	2001.06.26.21.35.40;	author bparker;	state Exp;
branches;
next	1.103;

1.103
date	2001.04.03.22.33.03;	author bparker;	state Exp;
branches;
next	1.102;

1.102
date	2001.02.16.22.23.44;	author bparker;	state Exp;
branches;
next	1.101;

1.101
date	2001.01.29.19.46.06;	author bparker;	state Exp;
branches;
next	1.100;

1.100
date	2000.12.22.00.35.15;	author bparker;	state Exp;
branches;
next	1.99;

1.99
date	2000.11.29.17.11.26;	author bparker;	state Exp;
branches;
next	1.98;

1.98
date	2000.11.20.20.26.54;	author bparker;	state Exp;
branches;
next	1.97;

1.97
date	2000.11.17.15.38.37;	author bparker;	state Exp;
branches;
next	1.96;

1.96
date	2000.11.16.20.36.36;	author bparker;	state Exp;
branches;
next	1.95;

1.95
date	2000.11.14.22.40.26;	author bparker;	state Exp;
branches;
next	1.94;

1.94
date	2000.11.14.22.07.19;	author bparker;	state Exp;
branches;
next	1.93;

1.93
date	2000.11.14.20.41.50;	author bparker;	state Exp;
branches;
next	1.92;

1.92
date	2000.11.14.19.37.53;	author bparker;	state Exp;
branches;
next	1.91;

1.91
date	2000.11.14.19.12.41;	author bparker;	state Exp;
branches;
next	1.90;

1.90
date	2000.11.09.23.29.13;	author bparker;	state Exp;
branches;
next	1.89;

1.89
date	2000.11.06.21.29.49;	author bparker;	state Exp;
branches;
next	1.88;

1.88
date	2000.11.03.19.54.31;	author bparker;	state Exp;
branches;
next	1.87;

1.87
date	2000.11.01.16.44.46;	author bparker;	state Exp;
branches;
next	1.86;

1.86
date	2000.10.23.21.41.21;	author bparker;	state Exp;
branches;
next	1.85;

1.85
date	2000.06.12.20.38.19;	author bparker;	state Exp;
branches
	1.85.2.1;
next	1.84;

1.84
date	2000.06.06.21.02.11;	author bparker;	state Exp;
branches;
next	1.83;

1.83
date	2000.03.13.22.05.39;	author bparker;	state Exp;
branches;
next	1.82;

1.82
date	99.12.10.14.57.01;	author bparker;	state Exp;
branches;
next	1.81;

1.81
date	99.10.26.19.21.57;	author bparker;	state Exp;
branches;
next	1.80;

1.80
date	99.10.08.21.45.34;	author bparker;	state Exp;
branches;
next	1.79;

1.79
date	99.09.20.15.21.29;	author jra;	state Exp;
branches;
next	1.78;

1.78
date	99.09.10.23.07.07;	author bparker;	state Exp;
branches;
next	1.77;

1.77
date	99.09.01.18.38.02;	author bparker;	state Exp;
branches;
next	1.76;

1.76
date	99.08.31.15.49.52;	author bparker;	state Exp;
branches;
next	1.75;

1.75
date	99.08.05.17.38.55;	author bparker;	state Exp;
branches;
next	1.74;

1.74
date	99.08.03.16.15.54;	author bparker;	state Exp;
branches;
next	1.73;

1.73
date	99.07.26.15.22.37;	author bparker;	state Exp;
branches;
next	1.72;

1.72
date	99.07.23.20.58.06;	author jra;	state Exp;
branches;
next	1.71;

1.71
date	99.06.25.17.25.27;	author bparker;	state Exp;
branches;
next	1.70;

1.70
date	99.06.22.22.25.50;	author bparker;	state Exp;
branches;
next	1.69;

1.69
date	99.06.11.22.02.51;	author bparker;	state Exp;
branches;
next	1.68;

1.68
date	99.06.11.20.08.29;	author bparker;	state Exp;
branches;
next	1.67;

1.67
date	99.06.11.18.40.59;	author bparker;	state Exp;
branches;
next	1.66;

1.66
date	99.06.11.13.10.17;	author bparker;	state Exp;
branches;
next	1.65;

1.65
date	99.05.06.17.36.43;	author bparker;	state Exp;
branches;
next	1.64;

1.64
date	99.05.03.19.13.06;	author bparker;	state Exp;
branches;
next	1.63;

1.63
date	99.05.03.17.28.07;	author bparker;	state Exp;
branches;
next	1.62;

1.62
date	99.05.03.16.45.55;	author bparker;	state Exp;
branches;
next	1.61;

1.61
date	99.04.30.20.45.30;	author bparker;	state Exp;
branches;
next	1.60;

1.60
date	99.04.29.21.33.11;	author bparker;	state Exp;
branches;
next	1.59;

1.59
date	99.04.29.21.07.54;	author bparker;	state Exp;
branches;
next	1.58;

1.58
date	99.04.27.15.35.54;	author bparker;	state Exp;
branches;
next	1.57;

1.57
date	99.04.23.21.17.44;	author bparker;	state Exp;
branches;
next	1.56;

1.56
date	99.04.21.18.04.19;	author bparker;	state Exp;
branches;
next	1.55;

1.55
date	99.04.20.20.33.09;	author bparker;	state Exp;
branches;
next	1.54;

1.54
date	99.04.16.18.15.25;	author bparker;	state Exp;
branches;
next	1.53;

1.53
date	99.04.13.19.34.22;	author bparker;	state Exp;
branches;
next	1.52;

1.52
date	99.04.07.16.56.20;	author bparker;	state Exp;
branches;
next	1.51;

1.51
date	99.03.12.19.42.14;	author bparker;	state Exp;
branches;
next	1.50;

1.50
date	99.03.09.22.07.38;	author bparker;	state Exp;
branches;
next	1.49;

1.49
date	99.02.17.19.47.06;	author bparker;	state Exp;
branches;
next	1.48;

1.48
date	99.02.09.15.20.33;	author bparker;	state Exp;
branches;
next	1.47;

1.47
date	99.01.26.19.04.02;	author bparker;	state Exp;
branches;
next	1.46;

1.46
date	99.01.21.18.39.59;	author bparker;	state Exp;
branches;
next	1.45;

1.45
date	99.01.19.22.31.30;	author bparker;	state Exp;
branches;
next	1.44;

1.44
date	99.01.12.19.15.47;	author bparker;	state Exp;
branches;
next	1.43;

1.43
date	98.12.30.22.05.14;	author bparker;	state Exp;
branches;
next	1.42;

1.42
date	98.12.29.20.50.55;	author bparker;	state Exp;
branches;
next	1.41;

1.41
date	98.12.18.21.59.20;	author bparker;	state Exp;
branches;
next	1.40;

1.40
date	98.11.24.21.48.48;	author bparker;	state Exp;
branches;
next	1.39;

1.39
date	98.11.13.22.14.21;	author bparker;	state Exp;
branches;
next	1.38;

1.38
date	98.11.06.21.03.32;	author bparker;	state Exp;
branches;
next	1.37;

1.37
date	98.10.21.17.38.58;	author bparker;	state Exp;
branches;
next	1.36;

1.36
date	98.08.13.12.36.36;	author bparker;	state Exp;
branches;
next	1.35;

1.35
date	98.07.15.18.43.19;	author bparker;	state Exp;
branches;
next	1.34;

1.34
date	98.07.15.16.03.40;	author bparker;	state Exp;
branches;
next	1.33;

1.33
date	98.07.06.19.23.05;	author bparker;	state Exp;
branches;
next	1.32;

1.32
date	98.06.24.18.41.25;	author bparker;	state Exp;
branches;
next	1.31;

1.31
date	98.06.16.18.43.49;	author bparker;	state Exp;
branches;
next	1.30;

1.30
date	98.06.16.17.58.55;	author bparker;	state Exp;
branches;
next	1.29;

1.29
date	98.06.15.19.26.01;	author bparker;	state Exp;
branches;
next	1.28;

1.28
date	98.06.09.17.58.46;	author bparker;	state Exp;
branches;
next	1.27;

1.27
date	98.05.26.14.36.24;	author bparker;	state Exp;
branches;
next	1.26;

1.26
date	98.05.18.19.52.13;	author bparker;	state Exp;
branches;
next	1.25;

1.25
date	98.05.18.19.45.45;	author bparker;	state Exp;
branches;
next	1.24;

1.24
date	98.05.18.19.36.04;	author bparker;	state Exp;
branches;
next	1.23;

1.23
date	98.05.15.14.49.25;	author bparker;	state Exp;
branches;
next	1.22;

1.22
date	98.05.07.15.14.12;	author bparker;	state Exp;
branches;
next	1.21;

1.21
date	98.05.07.14.40.57;	author bparker;	state Exp;
branches;
next	1.20;

1.20
date	98.05.01.21.10.10;	author bparker;	state Exp;
branches;
next	1.19;

1.19
date	98.04.24.20.27.19;	author bparker;	state Exp;
branches;
next	1.18;

1.18
date	98.04.23.12.57.40;	author bparker;	state Exp;
branches;
next	1.17;

1.17
date	98.04.09.21.30.58;	author bparker;	state Exp;
branches;
next	1.16;

1.16
date	98.04.08.14.20.31;	author bparker;	state Exp;
branches;
next	1.15;

1.15
date	98.04.07.14.52.05;	author bparker;	state Exp;
branches;
next	1.14;

1.14
date	98.04.07.14.45.54;	author bparker;	state Exp;
branches;
next	1.13;

1.13
date	98.04.06.21.49.06;	author bparker;	state Exp;
branches;
next	1.12;

1.12
date	98.04.01.22.21.11;	author bparker;	state Exp;
branches;
next	1.11;

1.11
date	98.04.01.18.04.30;	author bparker;	state Exp;
branches;
next	1.10;

1.10
date	98.03.20.22.41.29;	author bparker;	state Exp;
branches;
next	1.9;

1.9
date	98.03.13.22.48.19;	author bparker;	state Exp;
branches;
next	1.8;

1.8
date	98.03.06.22.49.37;	author bparker;	state Exp;
branches;
next	1.7;

1.7
date	98.02.20.23.24.15;	author bparker;	state Exp;
branches;
next	1.6;

1.6
date	97.11.06.19.57.51;	author bparker;	state Exp;
branches;
next	1.5;

1.5
date	97.11.04.19.56.46;	author bparker;	state Exp;
branches;
next	1.4;

1.4
date	97.09.29.16.22.17;	author bparker;	state Exp;
branches;
next	1.3;

1.3
date	97.09.17.21.11.21;	author bparker;	state Exp;
branches;
next	1.2;

1.2
date	97.07.17.20.40.31;	author bparker;	state Exp;
branches;
next	1.1;

1.1
date	97.04.18.13.06.41;	author bparker;	state Exp;
branches;
next	;

1.85.2.1
date	2000.10.23.21.37.46;	author bparker;	state Exp;
branches;
next	1.85.2.2;

1.85.2.2
date	2000.11.01.16.41.50;	author bparker;	state Exp;
branches;
next	1.85.2.3;

1.85.2.3
date	2000.11.03.19.53.45;	author bparker;	state Exp;
branches;
next	1.85.2.4;

1.85.2.4
date	2000.11.06.21.28.49;	author bparker;	state Exp;
branches;
next	1.85.2.5;

1.85.2.5
date	2000.11.09.21.28.33;	author bparker;	state Exp;
branches;
next	1.85.2.6;

1.85.2.6
date	2000.11.14.18.55.24;	author bparker;	state Exp;
branches;
next	1.85.2.7;

1.85.2.7
date	2000.11.14.19.36.06;	author bparker;	state Exp;
branches;
next	1.85.2.8;

1.85.2.8
date	2000.11.14.20.37.31;	author bparker;	state Exp;
branches;
next	1.85.2.9;

1.85.2.9
date	2000.11.14.22.04.34;	author bparker;	state Exp;
branches;
next	1.85.2.10;

1.85.2.10
date	2000.11.14.22.38.09;	author bparker;	state Exp;
branches;
next	1.85.2.11;

1.85.2.11
date	2000.11.16.20.25.58;	author bparker;	state Exp;
branches;
next	1.85.2.12;

1.85.2.12
date	2000.11.17.15.23.16;	author bparker;	state Exp;
branches;
next	1.85.2.13;

1.85.2.13
date	2000.11.20.20.25.38;	author bparker;	state Exp;
branches;
next	1.85.2.14;

1.85.2.14
date	2000.11.29.16.37.17;	author bparker;	state Exp;
branches;
next	1.85.2.15;

1.85.2.15
date	2000.12.22.00.02.27;	author bparker;	state Exp;
branches;
next	1.85.2.16;

1.85.2.16
date	2001.01.29.19.42.33;	author bparker;	state Exp;
branches;
next	1.85.2.17;

1.85.2.17
date	2001.02.08.21.58.15;	author bparker;	state Exp;
branches;
next	1.85.2.18;

1.85.2.18
date	2001.02.16.22.18.30;	author bparker;	state Exp;
branches;
next	;

1.126.2.1
date	2004.03.17.21.23.12;	author morrison;	state Exp;
branches;
next	;

1.126.4.1
date	2002.09.26.23.04.20;	author morrison;	state Exp;
branches;
next	1.126.4.2;

1.126.4.2
date	2003.08.14.08.07.27;	author morrison;	state Exp;
branches;
next	1.126.4.3;

1.126.4.3
date	2004.03.11.23.48.59;	author morrison;	state Exp;
branches;
next	1.126.4.4;

1.126.4.4
date	2004.03.15.20.17.09;	author morrison;	state Exp;
branches;
next	;

1.133.4.1
date	2004.02.12.18.34.49;	author erikg;	state Exp;
branches;
next	1.133.4.2;

1.133.4.2
date	2004.03.18.18.10.33;	author erikg;	state Exp;
branches;
next	;


desc
@tools for managing an alternative mged user interface
@


1.136
log
@moved to src/tclscripts/
@
text
@# Author -
#	Bob Parker
#
# Source -
#	The U. S. Army Research Laboratory
#	Aberdeen Proving Ground, Maryland	 21005
#
# Distribution Notice -
#	Re-distribution of this software is restricted, as described in
#				your "Statement of Terms and Conditions for the Release of
#				The BRL-CAD Package" agreement.
#
# Copyright Notice -
#				This software is Copyright (C) 1998-2004 by the United States Army
#				in all countries except the USA.	All rights reserved.
#
# Description -
#	MGED's default Tcl/Tk interface.
#
# $Revision:
#

check_externs "_mged_attach _mged_tie _mged_view_ring"

set mged_Priv(arb8) {arb8 arb7 arb6 arb5 arb4 rpp}
set mged_Priv(cones) {rcc rec rhc rpc tec tgc trc}
set mged_Priv(ellipsoids) {ehy ell ell1 epa sph}

# grip is purposely not a part of the other_prims list or any
# other prim list because it's not considered geometry
set mged_Priv(other_prims) {ars dsp eto extrude half part pipe sketch tor}

# weak edit support for these primitives
set mged_Priv(weak_prims) {bot nmg}

if {![info exists tk_version]} {
	loadtk
}

if {![info exists mged_default(max_views)]} {
	set mged_default(max_views) 10
}

if {![info exists mged_default(rot_factor)]} {
	set mged_default(rot_factor) 1
}

if {![info exists mged_default(tran_factor)]} {
	set mged_default(tran_factor) 0.01
}

if {![info exists mged_default(html_dir)]} {
	set mged_default(html_dir) [bu_brlcad_path html/manuals/mged]
}

if {![info exists mged_default(web_browser)]} {
	set mged_default(web_browser) /usr/bin/netscape
}

if {![info exists mged_color_scheme]} {
	color_scheme_init
}

if {![info exists mged_players]} {
	set mged_players {}
}

if {![info exists mged_collaborators]} {
	set mged_collaborators {}
}

if {![info exists mged_default(ggeom)]} {
	set mged_default(ggeom) -0+0
}

if {![info exists mged_default(geom)]} {
	# Position command window in upper left corner
	set mged_default(geom) +8+32
}

if {![info exists mged_default(id)]} {
	set mged_default(id) "id"
}

if {![info exists mged_default(pane)]} {
	set mged_default(pane) "ur"
}

if {![info exists mged_default(multi_pane)]} {
	set mged_default(multi_pane) 0
}

if {![info exists mged_default(config)]} {
	set mged_default(config) b
}

if {[info exists env(DISPLAY)]} {
	set mged_default(display) $env(DISPLAY)
} else {
	if {![info exists mged_default(display)]} {
		set mged_default(display) :0
	}
	set env(DISPLAY) $mged_default(display)
}

if {![info exists mged_default(gdisplay)]} {
	set mged_default(gdisplay) $mged_default(display)
}

if {![info exists mged_default(dm_type)]} {
	set mged_default(dm_type) [dm_bestXType $mged_default(gdisplay)]
}

if {![info exists mged_default(comb)]} {
	set mged_default(comb) 0
}

if {![info exists mged_default(edit_style)]} {
	set mged_default(edit_style) emacs
}

if {![info exists mged_default(num_lines)]} {
	set mged_default(num_lines) 10
}

# XXX For the moment, disable tearoff menus
if {![info exists mged_default(tearoff_menus)]} {
	set mged_default(tearoff_menus) 0
} else {
	set mged_default(tearoff_menus) 0
}

if {![info exists mged_gui(mged,screen)]} {
	set mged_gui(mged,screen) $mged_default(display)
}

if {![info exists mged_gui(databaseDir)]} {
	set mged_gui(databaseDir) [pwd]
}

if {![info exists mged_gui(loadScriptDir)]} {
	set mged_gui(loadScriptDir) [pwd]
}

if {[font names] == ""} {
	font_init
}

if {![info exists mged_default(faceplate)]} {
	set mged_default(faceplate) 0
}

if {![info exists mged_default(orig_gui)]} {
	set mged_default(orig_gui) 0
}

if {![info exists mged_default(zclip)]} {
	set mged_default(zclip) 1
}

if {![info exists mged_default(zbuffer)]} {
	set mged_default(zbuffer) 1
}

if {![info exists mged_default(lighting)]} {
	set mged_default(lighting) 0
}

if {![info exists mged_default(perspective_mode)]} {
	set mged_default(perspective_mode) 0
}

if {![info exists mged_default(max_text_lines)]} {
	set mged_default(max_text_lines) 1000
}

if {![info exists mged_default(doubleClickTol)]} {
	set mged_default(doubleClickTol) 500
}

if {[info exists env(MGED_HTML_DIR)]} {
	set mged_html_dir $env(MGED_HTML_DIR)
} else {
	set mged_html_dir $mged_default(html_dir)
}

if {[info exists env(WEB_BROWSER)]} {
	if {[file exists $env(WEB_BROWSER)]} {
		set mged_browser $env(WEB_BROWSER)
	}
}

if {![info exists mged_browser]} {
	if {[file exists $mged_default(web_browser)]} {
		set mged_browser $mged_default(web_browser)
	} else {
		if {[info exists env(PATH)]} {
			set pathlist [split $env(PATH) :]
			foreach path $pathlist {
				if {[file exists $path/netscape]} {
					set mged_browser $path/netscape
					break;
				} elseif { [file exists $path/mozilla] } {
					set mged_browser $path/mozilla
					break;
				} elseif { ($::tcl_platform(os) == "Darwin") && [file exists $path/open] } {
				        set mged_browser $path/open
				        break
				}
			}
		}
		
		if {![info exists mged_browser]} {
			set mged_browser "Browser not found, check your PATH"
		}
	}
}

# Call this routine to initialize the "solid_data" array
solid_data_init

##
# Set the class bindings for use with help. This requires the
# widget to register its data using hoc_register_data. Also, for now,
# the Menu class binding is being handled in tclscripts/menu_override.tcl.
#
bind Entry <ButtonPress-3><ButtonRelease-3> "hoc_callback %W %X %Y"
bind Label <ButtonPress-3><ButtonRelease-3> "hoc_callback %W %X %Y"
bind Text <ButtonPress-3><ButtonRelease-3> "hoc_callback %W %X %Y"
bind Button <ButtonPress-3><ButtonRelease-3> "hoc_callback %W %X %Y"
bind Checkbutton <ButtonPress-3><ButtonRelease-3> "hoc_callback %W %X %Y"
bind Menubutton <ButtonPress-3><ButtonRelease-3> "hoc_callback %W %X %Y"
bind Radiobutton <ButtonPress-3><ButtonRelease-3> "hoc_callback %W %X %Y"
bind Canvas <ButtonPress-3><ButtonRelease-3> "hoc_callback %W %X %Y"
bind Frame <ButtonPress-3><ButtonRelease-3> "hoc_callback %W %X %Y"
bind Listbox <ButtonPress-3><ButtonRelease-3> "hoc_callback %W %X %Y"
bind Scale <ButtonPress-3><ButtonRelease-3> "hoc_callback %W %X %Y"

# This causes cad_dialog to use mged_wait instead of tkwait
set ::tk::Priv(wait_cmd) mged_wait

# Used throughout the GUI as the dialog window name.
# This helps prevent window clutter.
set ::tk::Priv(cad_dialog) .mged_dialog

proc gui { args } {
	global tmp_hoc
	global mged_gui
	global mged_default
	global mged_html_dir
	global mged_browser
	global mged_players
	global mged_collaborators
	global mged_display
	global env
	global view_ring
	global vi_state
	global mged_color_scheme
	global mged_Priv

        # configure the stdout chanel for this platform
        # this is supposedly done automatically by Tcl, but not
        switch $::tcl_platform(platform) {
	    "macintosh" -
	    "unix" {
		fconfigure stdout -translation lf
	    }
	    "windows" {
		fconfigure stdout -translation crlf
	    }
	}

	# set defaults
	set save_id [cmd_win get]
	set comb $mged_default(comb)
	set join_c 0
	set dtype $mged_default(dm_type)
	set id ""
	set scw 0
	set sgw 0
	set i 0

	set screen $mged_default(display)
	set gscreen $mged_default(gdisplay)

	if {$mged_default(config) == "b"} {
		set scw 1
		set sgw 1
	} elseif {$mged_default(config) == "c"} {
		set scw 1
		set sgw 0
	} elseif {$mged_default(config) == "g"} {
		set scw 0
		set sgw 1
	}

	#==============================================================================
	# PHASE 0: Process options
	#==============================================================================
	set argc [llength $args]
	set dtype_set 0
	set screen_set 0
	set gscreen_set 0

	for {set i 0} {$i < $argc} {incr i} {
		set arg [lindex $args $i]
		if {$arg == "-config"} {
			incr i

			if {$i >= $argc} {
				return [help gui]
			}

			set arg [lindex $args $i]
			if {$arg == "b"} {
				# show both command and graphics windows
				set scw 1
				set sgw 1
			} elseif { $arg == "c"} {
				set scw 1
				set sgw 0
			} elseif {$arg == "g"} {
				# show display manager window
				set scw 0
				set sgw 1
			} else {
				return [help gui]
			}
		} elseif {$arg == "-d" || $arg == "-display"} {
			# display string for everything
			incr i

			if {$i >= $argc} {
				return [help gui]
			}

			set screen [lindex $args $i]
			set screen_set 1
			if {!$gscreen_set} {
				set gscreen $screen

				if {!$dtype_set} {
					set dtype [dm_bestXType $gscreen]
				}
			}
		} elseif {$arg == "-gd" || $arg == "-gdisplay"} {
			# display string for graphics window
			incr i

			if {$i >= $argc} {
				return [help gui]
			}

			set gscreen [lindex $args $i]
			set gscreen_set 1
			if {!$screen_set} {
				set screen $gscreen
			}

			if {!$dtype_set} {
				set dtype [dm_bestXType $gscreen]
			}
		} elseif {$arg == "-dt"} {
			incr i

			if {$i >= $argc} {
				return [help gui]
			}

			set dtype [lindex $args $i]
			set dtype_set 1
		} elseif {$arg == "-id"} {
			incr i

			if {$i >= $argc} {
				return [help gui]
			}

			set id [lindex $args $i]
		} elseif {$arg == "-j" || $arg == "-join"} { 
			set join_c 1
		} elseif {$arg == "-h" || $arg == "-help"} {
			return [help gui]
		} elseif {$arg == "-s" || $arg == "-sep"} {
			set comb 0
		} elseif {$arg == "-c" || $arg == "-comb"} {
			set comb 1
		} else {
			return [help gui]
		}
	}

	if {$comb} {
		set gscreen $screen
	}

	if {$id == "mged"} {
		return "gui: not allowed to use \"mged\" as id"
	}

	if {$id == ""} {
		for {set i 0} {1} {incr i} {
			set id [subst $mged_default(id)]_$i
			if {[lsearch -exact $mged_players $id] == -1} {
				break;
			}
		}
	}

	if {$scw == 0 && $sgw == 0} {
		set sgw 1
	}

	set mged_gui($id,comb) $comb
	set mged_gui($id,show_cmd) $scw
	set mged_gui($id,show_dm) $sgw
	set mged_gui($id,show_status) 1
	set mged_gui($id,apply_to) 0
	set mged_gui($id,edit_info_pos) "+0+0"
	set mged_gui($id,num_lines) $mged_default(num_lines)
	set mged_gui($id,multi_pane) $mged_default(multi_pane)
	set mged_gui($id,dm_loc) $mged_default(pane)
	set mged_gui($id,dtype) $dtype
	set mged_gui($id,lastButtonPress) 0
	set mged_gui($id,lastItem) ""

	if {![dm_validXType $gscreen $dtype]} {
		set dtype [dm_bestXType $gscreen]
	}

	if { [info exists tk_strictMotif] == 0 } {
		loadtk $screen
	}

	#==============================================================================
	# PHASE 1: Creation of main window
	#==============================================================================
	if {[ winfo exists .$id ]} {
		return "A session with the id \"$id\" already exists!"
	}
	
	toplevel .$id -screen $screen -menu .$id.menubar

	lappend mged_players $id
	set mged_gui($id,screen) $screen

	#==============================================================================
	# Create display manager window and menu
	#==============================================================================
	if {$comb} {
		set mged_gui($id,top) .$id
		set mged_gui($id,dmc) .$id.dmf

		frame $mged_gui($id,dmc) -relief sunken -borderwidth 2

		if {[catch { openmv $id $mged_gui($id,top) $mged_gui($id,dmc) $screen $dtype } result]} {
			gui_destroy $id
			return $result
		}
	} else {
		set mged_gui($id,top) .top$id
		set mged_gui($id,dmc) $mged_gui($id,top)

		toplevel $mged_gui($id,dmc) -screen $gscreen -relief sunken -borderwidth 2

		if {[catch { openmv $id $mged_gui($id,top) $mged_gui($id,dmc) $gscreen $dtype } result]} {
			gui_destroy $id
			return $result
		}
	}

	set mged_gui($id,active_dm) $mged_gui($id,top).$mged_default(pane)
	set mged_gui($id,apply_list) $mged_gui($id,active_dm)

	#==============================================================================
	# PHASE 2: Construction of menu bar
	#==============================================================================
	menu .$id.menubar -tearoff $mged_default(tearoff_menus)
	.$id.menubar add cascade -label "File" -underline 0 -menu .$id.menubar.file
	.$id.menubar add cascade -label "Edit" -underline 0 -menu .$id.menubar.edit
	.$id.menubar add cascade -label "Create" -underline 0 -menu .$id.menubar.create
	.$id.menubar add cascade -label "View" -underline 0 -menu .$id.menubar.view
	.$id.menubar add cascade -label "ViewRing" -underline 4 -menu .$id.menubar.viewring
	.$id.menubar add cascade -label "Settings" -underline 0 -menu .$id.menubar.settings
	.$id.menubar add cascade -label "Modes" -underline 0 -menu .$id.menubar.modes
	.$id.menubar add cascade -label "Misc" -underline 1 -menu .$id.menubar.misc
	.$id.menubar add cascade -label "Tools" -underline 0 -menu .$id.menubar.tools
	.$id.menubar add cascade -label "Help" -underline 0 -menu .$id.menubar.help

	menu .$id.menubar.file -title "File" -tearoff $mged_default(tearoff_menus)
	.$id.menubar.file add command -label "New..." -underline 0 -command "do_New $id"
	hoc_register_menu_data "File" "New..." "New Database"\
			{ { summary "Open a new database. Note - the database\nmust not already exist." }
	{ see_also opendb} }
	.$id.menubar.file add command -label "Open..." -underline 0 -command "do_Open $id"
	hoc_register_menu_data "File" "Open..." "Open Database"\
			{ { summary "Open an existing database." }
	{ see_also opendb } }
	.$id.menubar.file add separator
	.$id.menubar.file add cascade -label "Import" -underline 0 -menu .$id.menubar.file.import
	.$id.menubar.file add cascade -label "Export" -underline 0 -menu .$id.menubar.file.export

	.$id.menubar.file add separator
	.$id.menubar.file add command -label "Load Script..." -underline 0 \
			-command "do_LoadScript $id"
	hoc_register_menu_data "File" "Load Script..." "Load Script"\
			{ { summary "Browse directories for a Tcl script file to load." } { see_also "loadview, source" } }
	.$id.menubar.file add separator
	.$id.menubar.file add command -label "Raytrace" -underline 0 -command "init_Raytrace $id"
	hoc_register_menu_data "File" "Raytrace" "Raytrace View"\
			{ { summary "Tool for raytracing the current view." }
	{ see_also rt } }
	.$id.menubar.file add cascade -label "Render View" -underline 0 -menu .$id.menubar.file.renderview
	.$id.menubar.file add separator
	.$id.menubar.file add cascade -label "Preferences" -underline 0 -menu .$id.menubar.file.pref
	.$id.menubar.file add separator
	.$id.menubar.file add command -label "Create/Update .mgedrc" -underline 0 \
			-command "update_mgedrc"
	hoc_register_menu_data "File" "Create/Update .mgedrc" "Create/Update .mgedrc"\
			{ { summary "Create the .mgedrc startup file with default variable settings, or update to current settings." }
	{ see_also } }
        .$id.menubar.file add command -label "Clear Command Window" -underline 14 \
	    -command ".$id.t delete 1.0 end; mged_print_prompt .$id.t {mged> }"
        hoc_register_menu_data "File" "Clear Command Window" "Delete all text from command window"\
	    { { summary "Delete all text from command window" } see_also }
	.$id.menubar.file add command -label "Exit" -underline 1 -command _mged_quit
	hoc_register_menu_data "File" "Exit" "Exit MGED"\
			{ { summary "Exit MGED." }
	{ see_also "exit q quit" } }

	menu .$id.menubar.file.import -title "Import" -tearoff $mged_default(tearoff_menus)
	.$id.menubar.file.import add command -label "Ascii Database" -underline 0 -command "init_asc2g $id"
	hoc_register_menu_data "Import" "Ascii Database" "g2asc Ascii Database" { { summary "Import a database in ascii format using asc2g" } { see_also asc2g } }
	.$id.menubar.file.import add command -label "Binary Database" -underline 0 -command "do_Concat $id"
	hoc_register_menu_data "Import" "Insert Database" "Insert Database"	{ { summary "Insert another database into the current database." }	{ see_also dbconcat } }

	menu .$id.menubar.file.export -title "Export" -tearoff $mged_default(tearoff_menus)
	.$id.menubar.file.export add command -label "Ascii Database" -underline 0 -command "init_g2asc $id"
	hoc_register_menu_data "Export" "Ascii Database" "g2asc Ascii Database" { { summary "Export the current database in ascii format using g2asc" } { see_also g2asc } }
	.$id.menubar.file.export add command -label "Database Objects" -underline 0 -command "init_extractTool $id"
	hoc_register_menu_data "Export" "Extract Objects" "Extract Objects" { { summary "Tool for extracting objects out of the current database." } { see_also keep } }

	menu .$id.menubar.file.renderview -title "Render View" -tearoff $mged_default(tearoff_menus)
	.$id.menubar.file.renderview add command -label "RT Script..." -underline 0\
			-command "init_rtScriptTool $id"
	hoc_register_menu_data "Render View" "RT Script..." "RT Script File"\
			{ { summary "Save the current view as an RT script file." }
	{ see_also saveview } }
	.$id.menubar.file.renderview add command -label "Plot..." -underline 1\
			-command "init_plotTool $id"
	hoc_register_menu_data "Render View As" "Plot..." "Plot File"\
			{ { summary "Render the current view to a Plot file." }
	{ see_also pl } }
	.$id.menubar.file.renderview add command -label "PostScript..." -underline 0\
			-command "init_psTool $id"
	hoc_register_menu_data "Render View As" "PostScript..." "PostScript File"\
			{ { summary "Render the current view to a PostScript file." }
	{ see_also ps } }

	menu .$id.menubar.file.pref -title "Preferences" -tearoff $mged_default(tearoff_menus)
	.$id.menubar.file.pref add cascade -label "Units" -underline 0\
			-menu .$id.menubar.file.pref.units
	.$id.menubar.file.pref add cascade -label "Command Line Edit" -underline 13\
			-menu .$id.menubar.file.pref.cle
	.$id.menubar.file.pref add cascade -label "Special Characters" -underline 0\
			-menu .$id.menubar.file.pref.special_chars
	.$id.menubar.file.pref add command -label "Color Schemes" -underline 0\
			-command "color_scheme_build $id \"Color Schemes\" [list $mged_color_scheme(primary_map)]\
			\"Faceplate Colors\" [list $mged_color_scheme(secondary_map)]"
	hoc_register_menu_data "Preferences" "Color Schemes" "Color Schemes"\
			{ { summary "Tool for setting colors." }
	{ see_also "rset" } }
	.$id.menubar.file.pref add command -label "Fonts" -underline 0 \
			-command "font_scheme_init $id"
	hoc_register_menu_data "Preferences" "Fonts" "Fonts" \
			{ { summary "Tool for creating/configuring named fonts." }
	{ see_also "font" } }

	menu .$id.menubar.file.pref.units -title "Units" -tearoff $mged_default(tearoff_menus)
	.$id.menubar.file.pref.units add radiobutton -value um -variable mged_display(units)\
			-label "Micrometers" -underline 4 -command "do_Units $id"
	hoc_register_menu_data "Units" "Micrometers" "Unit of Measure - Micrometers"\
			{ { summary "Set the unit of measure to micrometers.\n1 micrometer = 1/1,000,000 meters" }
	{ see_also "units" } }
	.$id.menubar.file.pref.units add radiobutton -value mm -variable mged_display(units)\
			-label "Millimeters" -underline 2 -command "do_Units $id"
	hoc_register_menu_data "Units" "Millimeters" "Unit of Measure - Millimeters"\
			{ { summary "Set the unit of measure to millimeters.\n1 millimeter = 1/1000 meters" }
	{ see_also "units" } }
	.$id.menubar.file.pref.units add radiobutton -value cm -variable mged_display(units)\
			-label "Centimeters" -underline 0 -command "do_Units $id"
	hoc_register_menu_data "Units" "Centimeters" "Unit of Measure - Centimeters"\
			{ { summary "Set the unit of measure to centimeters.\n\t1 centimeter = 1/100 meters" }
	{ see_also "units" } }
	.$id.menubar.file.pref.units add radiobutton -value m -variable mged_display(units)\
			-label "Meters" -underline 0 -command "do_Units $id"
	hoc_register_menu_data "Units" "Meters" "Unit of Measure - Meters"\
			{ { summary "Set the unit of measure to meters." }
	{ see_also "units" } }
	.$id.menubar.file.pref.units add radiobutton -value km -variable mged_display(units)\
			-label "Kilometers" -underline 0 -command "do_Units $id"
	hoc_register_menu_data "Units" "Kilometers" "Unit of Measure - Kilometers"\
			{ { summary "Set the unit of measure to kilometers.\n 1 kilometer = 1000 meters" }
	{ see_also "units" } }
	.$id.menubar.file.pref.units add separator
	.$id.menubar.file.pref.units add radiobutton -value in -variable mged_display(units)\
			-label "Inches" -underline 0 -command "do_Units $id"
	hoc_register_menu_data "Units" "Inches" "Unit of Measure - Inches"\
			{ { summary "Set the unit of measure to inches.\n 1 inch = 25.4 mm" }
	{ see_also "units" } }
	.$id.menubar.file.pref.units add radiobutton -value ft -variable mged_display(units)\
			-label "Feet" -underline 0 -command "do_Units $id"
	hoc_register_menu_data "Units" "Feet" "Unit of Measure - Feet"\
			{ { summary "Set the unit of measure to feet.\n 1 foot = 12 inches" }
	{ see_also "units" } }
	.$id.menubar.file.pref.units add radiobutton -value yd -variable mged_display(units)\
			-label "Yards" -underline 0 -command "do_Units $id"
	hoc_register_menu_data "Units" "Yards" "Unit of Measure - Yards"\
			{ { summary "Set the unit of measure to yards.\n 1 yard = 36 inches" }
	{ see_also "" } }
	.$id.menubar.file.pref.units add radiobutton -value mi -variable mged_display(units)\
			-label "Miles" -underline 3 -command "do_Units $id"
	hoc_register_menu_data "Units" "Miles" "Unit of Measure - Miles"\
			{ { summary "Set the unit of measure to miles.\n 1 mile = 5280 feet" }
	{ see_also "units" } }

	menu .$id.menubar.file.pref.cle -title "Command Line Edit" -tearoff $mged_default(tearoff_menus)
	.$id.menubar.file.pref.cle add radiobutton -value emacs -variable mged_gui($id,edit_style)\
			-label "Emacs" -underline 0 -command "set_text_key_bindings $id"
	hoc_register_menu_data "Command Line Edit" "Emacs" "Command Line Edit - Emacs"\
			{ { synopsis "Set the command line edit mode to emacs." }
	{ description "
	\tBackSpace\tbackward delete char
	\tDelete\t\tbackward delete char
	\tLeft\t\tbackward char
	\tRight\t\tforward char
	\tUp\t\tprevious command
	\tDown\t\tnext command
	\tHome\t\tbeginning of line
	\tEnd\t\tend of line
	\tControl-a\tbeginning of line
	\tControl-b\tbackward char
	\tControl-c\tinterrupt command
	\tControl-d\tdelete char
	\tControl-e\tend of line
	\tControl-f\t\tforward char
	\tControl-h\tbackward delete char
	\tControl-k\tdelete end of line
	\tControl-n\tnext command
	\tControl-p\tprevious command
	\tControl-t\t\ttranspose
	\tControl-u\tdelete line
	\tControl-w\tbackward delete word" }
}
.$id.menubar.file.pref.cle add radiobutton -value vi -variable mged_gui($id,edit_style)\
		-label "Vi" -underline 0 -command "set_text_key_bindings $id"
hoc_register_menu_data "Command Line Edit" "Vi" "Command Line Edit - Vi"\
		{ { synopsis "Set the command line edit mode to vi." }
{ description "
	\t************ VI Insert Mode ************
	\tEscape\t\tcommand
	\tLeft\t\tbackward char, command
	\tRight\t\tforward char, command
	\tBackSpace\tbackward delete char

	\t************ VI Command Mode ************
	\tLeft\t\tbackward char
	\tRight\t\tforward char
	\tBackSpace\tbackward char
	\tSpace\t\tforward char
	\tA\t\tend of line, insert (i.e. append to end of line)
	\tC\t\tdelete to end of line, insert
	\tD\t\tdelete to end of line
	\tF\t\tsearch backward char
	\tI\t\tbeginning of line, insert
	\tR\t\toverwrite
	\tX\t\tbackward delete char
	\t0\t\tbeginning of line
	\t$\t\tend of line
	\t;\t\tcontinue search in same direction
	\t,\t\tcontinue search in opposite direction
	\ta\t\tforward char, insert (i.e. append)
	\tb\t\tbackward word
	\tc\t\tchange
	\td\t\tdelete
	\te\t\tend of word
	\tf\t\tsearch forward char
	\th\t\tbackward char
	\ti\t\tinsert
	\tj\t\tnext command
	\tk\t\tprevious command
	\tl\t\tforward char
	\tr\t\treplace char
	\ts\t\tdelete char, insert
	\tw\t\tforward word
	\tx\t\tdelete char

	\t************ Both ************
	\tDelete\t\tbackward delete char
	\tUp\t\tprevious command
	\tDown\t\tnext command
	\tHome\t\tbeginning of line
	\tEnd\t\tend of line
	\tControl-a\tbeginning of line
	\tControl-b\tbackward char
	\tControl-c\tinterrupt command
	\tControl-e\tend of line
	\tControl-f\t\tforward char
	\tControl-h\tbackward delete char
	\tControl-k\tdelete end of line
	\tControl-n\tnext command
	\tControl-p\tprevious command
	\tControl-t\t\ttranspose
	\tControl-u\tdelete to beginning of line
	\tControl-w\tbackward delete word" }
}

menu .$id.menubar.file.pref.special_chars -title "Special Characters" -tearoff $mged_default(tearoff_menus)
.$id.menubar.file.pref.special_chars add radiobutton -value 0 -variable glob_compat_mode\
		-label "Tcl Evaluation" -underline 0
hoc_register_menu_data "Special Characters" "Tcl Evaluation" "Tcl Evaluation"\
		{ { summary "Set the command interpretation mode to Tcl mode.
In this mode, globbing is not performed against
MGED database objects. Rather, the command string
is passed, unmodified, to the Tcl interpreter." } }
.$id.menubar.file.pref.special_chars add radiobutton -value 1 -variable glob_compat_mode\
		-label "Object Name Matching" -underline 0
hoc_register_menu_data "Special Characters" "Object Name Matching" "Object Name Matching"\
		{ { summary "Set the command interpretation mode to MGED object
name matching. In this mode, globbing is performed
against MGED database objects."\
} }

menu .$id.menubar.edit -title "Edit" -tearoff $mged_default(tearoff_menus)
.$id.menubar.edit add command -label "Prim Selection..." -underline 0 \
		-command "winset \$mged_gui($id,active_dm); build_edit_menu_all s1"
hoc_register_menu_data "Edit" "Prim Selection..." "Prim Selection"\
		{ { summary "A tool for selecting a primitive to edit." } }
.$id.menubar.edit add command -label "Matrix Selection..." -underline 0 \
		-command "winset \$mged_gui($id,active_dm); build_edit_menu_all o"
hoc_register_menu_data "Edit" "Matrix Selection..." "Matrix Selection"\
		{ { summary "A tool for selecting a matrix to edit." } }
.$id.menubar.edit add separator
.$id.menubar.edit add command -label "Prim Editor" -underline 6 \
		-command "init_edit_solid $id"
hoc_register_menu_data "Edit" "Prim Editor" "Prim Editor"\
		{ { summary "A tool for editing/creating primitives." } }
.$id.menubar.edit add command -label "Combination Editor" -underline 0 \
		-command "init_comb $id"
hoc_register_menu_data "Edit" "Combination Editor" "Combination Editor"\
		{ { summary "A tool for editing/creating combinations." } }
.$id.menubar.edit add command -label "Attribute Editor" -underline 0 \
		-command "Attr_editor::start_editor $id"
.$id.menubar.edit add command -label "Browse Geometry" -underline 0 -command "geometree"

menu .$id.menubar.create -title "Create" -tearoff $mged_default(tearoff_menus)

.$id.menubar.create add cascade\
		-label "Arbs" -underline 0 -menu .$id.menubar.create.arb8
.$id.menubar.create add cascade\
		-label "Cones & Cylinders" -underline 0 -menu .$id.menubar.create.cones
.$id.menubar.create add cascade\
		-label "Ellipsoids" -underline 0 -menu .$id.menubar.create.ell
.$id.menubar.create add separator

menu .$id.menubar.create.arb8 -title "Arb8" -tearoff $mged_default(tearoff_menus)
menu .$id.menubar.create.cones -title "Cones & Cyls" -tearoff $mged_default(tearoff_menus)
menu .$id.menubar.create.ell -title "Ellipses" -tearoff $mged_default(tearoff_menus)

# populate Arb8 menu
foreach ptype $mged_Priv(arb8) {
	.$id.menubar.create.arb8 add command -label "$ptype..."\
			-command "init_solid_create $id $ptype"

	set ksl {}
	lappend ksl "summary \"Make an $ptype.\"" "see_also \"make, in\""
	hoc_register_menu_data "Arb8" "$ptype..." "Make an $ptype" $ksl
}

.$id.menubar.create.arb8 add separator

# separate the arbn from the other arb representations
set ptype arbn

.$id.menubar.create.arb8 add command -foreground firebrick4 -label "$ptype..."\
		-command "init_solid_create $id $ptype"
set ksl {}
lappend ksl "summary \"Make an $ptype (limited edit capabilities).\"" "see_also \"make, in\""
hoc_register_menu_data "Arb8" "$ptype..." "Make an $ptype" $ksl


# populate "Cones & Cyls" menu
foreach ptype $mged_Priv(cones) {
	.$id.menubar.create.cones add command -label "$ptype..."\
			-command "init_solid_create $id $ptype"

	set ksl {}
	lappend ksl "summary \"Make a $ptype.\"" "see_also \"make, in\""
	hoc_register_menu_data "Cones & Cyls" "$ptype..." "Make a $ptype" $ksl
}

# populate Ellipses menu
foreach ptype $mged_Priv(ellipsoids) {
	.$id.menubar.create.ell add command -label "$ptype..."\
			-command "init_solid_create $id $ptype"

	set ksl {}
	lappend ksl "summary \"Make a $ptype.\"" "see_also \"make, in\""
	hoc_register_menu_data "Ellipses" "$ptype..." "Make a $ptype" $ksl
}

# populate the Create menu with other_prims
foreach ptype $mged_Priv(other_prims) {
	if {$ptype == "dsp"} {
		.$id.menubar.create add command -label "dsp..."\
				-command "dsp_create $id"

		set ksl {}
		lappend ksl "summary \"Make a $ptype.\"" "see_also \"make, in\""
		hoc_register_menu_data "Create" "dsp..." "Make a dsp solid" $ksl
	} else {
		.$id.menubar.create add command -label "$ptype..."\
				-command "init_solid_create $id $ptype"

		set ksl {}
		lappend ksl "summary \"Make a $ptype.\"" "see_also \"make, in\""
		hoc_register_menu_data "Create" "$ptype..." "Make a $ptype" $ksl
	}
}

# separate weak prims from other entries
.$id.menubar.create add separator

# populate the remainder of the Create menu with weak_prims
foreach ptype $mged_Priv(weak_prims) {
	.$id.menubar.create add command -foreground firebrick4 -label "$ptype..."\
			-command "init_solid_create $id $ptype"

	set ksl {}
	lappend ksl "summary \"Make a $ptype (limited edit capability).\"" "see_also \"make, in\""
	hoc_register_menu_data "Create" "$ptype..." "Make a $ptype" $ksl
}

menu .$id.menubar.view -title "View" -tearoff $mged_default(tearoff_menus)
.$id.menubar.view add command -label "Top" -underline 0\
		-command "mged_apply $id \"press top\""
hoc_register_menu_data "View" "Top" "Top View"\
		{ { summary "View of the top (i.e. azimuth = 270, elevation = 90)." }
{ accelerator "t" }
{ see_also "press, ae, view" } }
.$id.menubar.view add command -label "Bottom" -underline 0\
		-command "mged_apply $id \"press bottom\""
hoc_register_menu_data "View" "Bottom" "Bottom View"\
		{ { summary "View of the bottom (i.e. azimuth = 270 , elevation = -90)." }
{ accelerator "b" }
{ see_also "press, ae, view" } }
.$id.menubar.view add command -label "Right" -underline 0\
		-command "mged_apply $id \"press right\""
hoc_register_menu_data "View" "Right" "Right View"\
		{ { summary "View of the right side (i.e. azimuth = 270, elevation = 0)." }
{ accelerator "r" }
{ see_also "press, ae, view" } }
.$id.menubar.view add command -label "Left" -underline 0\
		-command "mged_apply $id \"press left\""
hoc_register_menu_data "View" "Left" "Left View"\
		{ { summary "View of the left side (i.e. azimuth = 90, elevation = 0)." }
{ accelerator "l" }
{ see_also "press, ae, view" } }
.$id.menubar.view add command -label "Front" -underline 0\
		-command "mged_apply $id \"press front\""
hoc_register_menu_data "View" "Front" "Front View"\
		{ { summary "View of the front (i.e. azimuth = 0, elevation = 0)." }
{ accelerator "f" }
{ see_also "press, ae, view" } }
.$id.menubar.view add command -label "Rear" -underline 1\
		-command "mged_apply $id \"press rear\""
hoc_register_menu_data "View" "Rear" "Rear View"\
		{ { summary "View of the rear (i.e. azimuth = 180, elevation = 0)." }
{ accelerator "R" }
{ see_also "press, ae, view" } }
.$id.menubar.view add command -label "az35,el25" -underline 2\
		-command "mged_apply $id \"press 35,25\""
hoc_register_menu_data "View" "az35,el25" "View - 35,25"\
		{ { summary "View with an azimuth of 35 and an elevation of 25." }
{ accelerator "3" }
{ see_also "press, ae, view" } }
.$id.menubar.view add command -label "az45,el45" -underline 2\
		-command "mged_apply $id \"press 45,45\""
hoc_register_menu_data "View" "az45,el45" "View - 45,45"\
		{ { summary "View with an azimuth of 45 and an elevation of 45." }
{ accelerator "4" }
{ see_also "press, ae, view" } }
.$id.menubar.view add separator
.$id.menubar.view add command -label "Zoom In" -underline 5\
		-command "mged_apply $id \"zoom 2\""
hoc_register_menu_data "View" "Zoom In" "Zoom In"\
		{ { summary "Zoom in by a factor of 2." }
{ see_also "sca, zoom" } }
.$id.menubar.view add command -label "Zoom Out" -underline 5\
		-command "mged_apply $id \"zoom 0.5\""
hoc_register_menu_data "View" "Zoom Out" "Zoom Out"\
		{ { summary "Zoom out by a factor of 2." }
{ see_also "sca, zoom" } }
.$id.menubar.view add separator
.$id.menubar.view add command -label "Default"\
		-underline 0 -command "mged_apply $id \"press reset\""
hoc_register_menu_data "View" "Default" "Default View"\
		{ { summary "Same as top (i.e. azimuth = 270, elevation = 90)." }
{ see_also "press, ae, view" } }
.$id.menubar.view add command -label "Multipane Defaults"\
		-underline 0 -command "set_default_views $id"
hoc_register_menu_data "View" "Multipane Defaults" "Multipane Default Views"\
		{ { summary "Sets the view of all four panes to their defaults.\n
\tupper left\taz = 90, el = 0
\tupper right\taz = 35, el = 25
\tlower left\taz = 0, el = 0
\tlower right\taz = 90, el = 0" }
{ see_also "press, ae, view" } }
.$id.menubar.view add command -label "Zero" -underline 0\
		-command "mged_apply $id \"knob zero\""
hoc_register_menu_data "View" "Zero" "Zero Knobs"\
		{ { summary "Stop all rate transformations." }
{ accelerator "0" }
{ see_also "knob, press" } }

menu .$id.menubar.viewring -title "ViewRing" -tearoff $mged_default(tearoff_menus)
.$id.menubar.viewring add command -label "Add View" -underline 0 -command "view_ring_add $id"
hoc_register_menu_data "ViewRing" "Add View" "Add View"\
		{ { synopsis "Add a view to the view ring." }
{ description "A view ring is a mechanism for managing multiple
	views within a single pane or display manager. Each pane
	has its own view ring where any number of views can be stored.
	The stored views can be removed or traversed." } }
	.$id.menubar.viewring add cascade -label "Select View" -underline 0 -menu .$id.menubar.viewring.select
	.$id.menubar.viewring add cascade -label "Delete View" -underline 0 -menu .$id.menubar.viewring.delete
	.$id.menubar.viewring add command -label "Next View" -underline 0 -command "view_ring_next $id"
	hoc_register_menu_data "ViewRing" "Next View" "Next View"\
			{ { synopsis "Go to the next view on the view ring." }
	{ accelerator "Control-n" } }
	.$id.menubar.viewring add command -label "Prev View" -underline 0 -command "view_ring_prev $id"
	hoc_register_menu_data "ViewRing" "Prev View" "Previous View"\
			{ { synopsis "Go to the previous view on the view ring." }
	{ accelerator "Control-p" } }
	.$id.menubar.viewring add command -label "Last View" -underline 0 -command "view_ring_toggle $id"
	hoc_register_menu_data "ViewRing" "Last View" "Last View"\
			{ { synopsis "Go to the last view. This can be used to toggle
	between two views." }
	{ accelerator "Control-t" } }

	#menu .$id.menubar.viewring.select -title "Select View" -tearoff $mged_default(tearoff_menus)\
			-postcommand "update_view_ring_labels $id"
	menu .$id.menubar.viewring.select -title "Select View" -tearoff $mged_default(tearoff_menus) \
			-postcommand "view_ring_save_curr $id"

	update_view_ring_entries $id s

	set mged_gui($id,views) ""
	set view_ring($id) 0
	set view_ring($id,curr) 0
	set view_ring($id,prev) 0
	#menu .$id.menubar.viewring.delete -title "Delete View" -tearoff $mged_default(tearoff_menus)\
			-postcommand "update_view_ring_labels $id"
	menu .$id.menubar.viewring.delete -title "Delete View" -tearoff $mged_default(tearoff_menus)

	update_view_ring_entries $id d

	menu .$id.menubar.settings -title "Settings" -tearoff $mged_default(tearoff_menus)
	.$id.menubar.settings add cascade -label "Mouse Behavior" -underline 0\
			-menu .$id.menubar.settings.mouse_behavior
	.$id.menubar.settings add cascade -label "Transform" -underline 0\
			-menu .$id.menubar.settings.transform
	.$id.menubar.settings add cascade -label "Constraint Coords" -underline 0\
			-menu .$id.menubar.settings.coord
	.$id.menubar.settings add cascade -label "Rotate About" -underline 0\
			-menu .$id.menubar.settings.origin
	.$id.menubar.settings add cascade -label "Active Pane" -underline 0\
			-menu .$id.menubar.settings.mpane
	.$id.menubar.settings add cascade -label "Apply To" -underline 1\
			-menu .$id.menubar.settings.applyTo
	.$id.menubar.settings add cascade -label "Query Ray Effects" -underline 0\
			-menu .$id.menubar.settings.qray
	.$id.menubar.settings add cascade -label "Grid" -underline 0\
			-menu .$id.menubar.settings.grid
	.$id.menubar.settings add cascade -label "Grid Spacing" -underline 5\
			-menu .$id.menubar.settings.grid_spacing
	.$id.menubar.settings add cascade -label "Framebuffer" -underline 0\
			-menu .$id.menubar.settings.fb
	.$id.menubar.settings add cascade -label "View Axes Position" -underline 0\
			-menu .$id.menubar.settings.vap

	menu .$id.menubar.settings.applyTo -title "Apply To" -tearoff $mged_default(tearoff_menus)
	.$id.menubar.settings.applyTo add radiobutton -value 0 -variable mged_gui($id,apply_to)\
			-label "Active Pane" -underline 0
	hoc_register_menu_data "Apply To" "Active Pane" "Active Pane"\
			{ { summary "Set the \"Apply To\" mode such that the user's
	interaction with the GUI is applied to the active pane." } }
	.$id.menubar.settings.applyTo add radiobutton -value 1 -variable mged_gui($id,apply_to)\
			-label "Local Panes" -underline 0
	hoc_register_menu_data "Apply To" "Local Panes" "Local Panes"\
			{ { summary "Set the \"Apply To\" mode such that the user's
	interaction with the GUI is applied to all panes
	local to this instance of the GUI." } }
	.$id.menubar.settings.applyTo add radiobutton -value 2 -variable mged_gui($id,apply_to)\
			-label "Listed Panes" -underline 1
	hoc_register_menu_data "Apply To" "Listed Panes" "Listed Panes"\
			{ { summary "Set the \"Apply To\" mode such that the user's
	interaction with the GUI is applied to all panes
	listed in the Tcl variable mged_gui(id,apply_list)
	(Note - id refers to the GUI's id)." } }
	.$id.menubar.settings.applyTo add radiobutton -value 3 -variable mged_gui($id,apply_to)\
			-label "All Panes" -underline 4
	hoc_register_menu_data "Apply To" "All Panes" "All Panes"\
			{ { summary "Set the \"Apply To\" mode such that the user's
	interaction with the GUI is applied to all panes." } }

	menu .$id.menubar.settings.mouse_behavior -title "Mouse Behavior" -tearoff $mged_default(tearoff_menus)
	.$id.menubar.settings.mouse_behavior add radiobutton -value d -variable mged_gui($id,mouse_behavior)\
			-label "Default" -underline 0\
			-command "set_mouse_behavior $id"
	hoc_register_menu_data "Mouse Behavior" "Default" "Default Mouse Behavior"\
			{ { synopsis "Enter the default MGED mouse behavior mode." }
	{ description "In this mode, the user gets mouse behavior that is
	the same as MGED 4.5 and earlier. See the table below.\n\n
	\tMouse Button\t\t\tBehavior
	\t\t1\t\tZoom out by a factor of 2
	\t\t2\t\tCenter View
	\t\t3\t\tZoom in by a factor of 2" }
	{ see_also "rset, vars" } }
	.$id.menubar.settings.mouse_behavior add separator
	.$id.menubar.settings.mouse_behavior add radiobutton -value s -variable mged_gui($id,mouse_behavior)\
			-label "Pick Edit-Prim" -underline 10\
			-command "set_mouse_behavior $id"
	hoc_register_menu_data "Mouse Behavior" "Pick Edit-Prim" "Pick Edit-Prim"\
			{ { synopsis "Enter pick edit-solid mode." }
	{ description "In this mode, the mouse is used to fire rays for selecting
	a solid to edit. If more than one solid is hit, a listbox of the hit
	solids is presented. The user then selects a solid to edit from
	this listbox. If a single solid is hit, it is selected for editing.
	If no solids were hit, a dialog is popped up saying that nothing
	was hit. The user must then fire another ray to continue selecting
	a solid. When a solid is finally selected, solid edit mode is
	entered. When this happens, the mouse behavior mode is set to
	default mode. Note - When selecting items from a listbox, a left
	buttonpress highlights the solid in question until the button is
	released. To select a solid, double click with the left mouse button.\n
	\tMouse Button\t\t\tBehavior
	\t\t1\t\tZoom out by a factor of 2
	\t\t2\t\tFire edit-solid ray
	\t\t3\t\tZoom in by a factor of 2" }
	{ see_also "nirt, qray, rset, sed, vars" } }
	.$id.menubar.settings.mouse_behavior add radiobutton -value m -variable mged_gui($id,mouse_behavior)\
			-label "Pick Edit-Matrix" -underline 10\
			-command "set_mouse_behavior $id"
	hoc_register_menu_data "Mouse Behavior" "Pick Edit-Matrix" "Pick Edit-Matrix"\
			{ { synopsis "Enter pick edit-matrix mode." }
	{ description "In this mode, the mouse is used to fire rays for selecting
	a matrix to edit. If more than one solid is hit, a listbox of the
	hit solids is presented. The user then selects a solid
	from this listbox. If a single solid is hit, that solid is selected.
	If no solids were hit, a dialog is popped up saying that nothing was hit.
	The user must then fire another ray to continue selecting a matrix to edit.
	When a solid is finally selected, the user is presented with a listbox consisting
	of the path components of the selected solid. From this lisbox, the
	user selects a path component. This component determines which
	matrix will be edited. After selecting the path component, object/matrix
	edit mode is entered. When this happens, the mouse behavior mode
	is set to default mode. Note - When selecting items
	from a listbox, a left buttonpress highlights the solid/matrix in question
	until the button is released. To select a solid/matrix, double click with
	the left mouse button.\n
	\tMouse Button\t\t\tBehavior
	\t\t1\t\tZoom out by a factor of 2
	\t\t2\t\tFire edit-matrix ray
	\t\t3\t\tZoom in by a factor of 2" }
	{ see_also "rset, vars" } }
	.$id.menubar.settings.mouse_behavior add radiobutton -value c -variable mged_gui($id,mouse_behavior)\
			-label "Pick Edit-Combination" -underline 10\
			-command "set_mouse_behavior $id"
	hoc_register_menu_data "Mouse Behavior" "Pick Edit-Combination" "Pick Edit-Combination"\
			{ { synopsis "Enter pick edit-combination mode." }
	{ description "In this mode, the mouse is used to fire rays for selecting
	a combination to edit. If more than one combination is hit, a listbox of the
	hit combinations is presented. The user then selects a combination
	from this menu. If a single combination is hit, that combination is selected.
	If no combinations were hit, a dialog is popped up saying that nothing was hit.
	The user must then fire another ray to continue selecting a combination to edit.
	When a combination is finally selected, the combination edit tool is presented
	and initialized with the values of the selected combination. When this happens,
	the mouse behavior mode is set to default mode. Note - When selecting items
	from a menu, a left buttonpress highlights the combination in question
	until the button is released. To select a combination, double click with
	the left mouse button.\n
	\tMouse Button\t\t\tBehavior
	\t\t1\t\tZoom out by a factor of 2
	\t\t2\t\tFire edit-combination ray
	\t\t3\t\tZoom in by a factor of 2" }
	{ see_also "rset, vars" } }
	.$id.menubar.settings.mouse_behavior add separator
	.$id.menubar.settings.mouse_behavior add radiobutton -value r -variable mged_gui($id,mouse_behavior)\
			-label "Sweep Raytrace-Rectangle" -underline 6\
			-command "set_mouse_behavior $id"
	hoc_register_menu_data "Mouse Behavior" "Sweep Raytrace-Rectangle" "Sweep Raytrace-Rectangle"\
			{ { synopsis "Enter sweep raytrace-rectangle mode." }
	{ description "If the framebuffer is active, the rectangular area as
	specified by the user is raytraced. The rectangular area is
	also painted with the current contents of the framebuffer. Otherwise,
	only the rectangle is drawn.\n
	\tMouse Button\t\t\tBehavior
	\t\t1\t\tZoom out by a factor of 2
	\t\t2\t\tDraw raytrace-rectangle
	\t\t3\t\tZoom in by a factor of 2" }
	{ see_also "rset, vars" } }
	.$id.menubar.settings.mouse_behavior add radiobutton -value o -variable mged_gui($id,mouse_behavior)\
			-label "Pick Raytrace-Object(s)" -underline 14\
			-command "set_mouse_behavior $id"
	hoc_register_menu_data "Mouse Behavior" "Pick Raytrace-Object(s)" "Pick Raytrace-Object(s)"\
			{ { synopsis "Enter pick raytrace-object mode." }
	{ description "Pick an object for raytracing or for adding to the
	list of objects to be raytraced." }
	{ see_also "rset, vars" } }
	.$id.menubar.settings.mouse_behavior add separator
	.$id.menubar.settings.mouse_behavior add radiobutton -value q -variable mged_gui($id,mouse_behavior)\
			-label "Query Ray" -underline 0\
			-command "set_mouse_behavior $id"
	hoc_register_menu_data "Mouse Behavior" "Query Ray" "Query Ray"\
			{ { synopsis "Enter query ray mode." }
	{ description "In this mode, the mouse is used to fire rays. The data
	from the fired rays can be viewed textually, graphically
	or both.\n
	\tMouse Button\t\t\tBehavior
	\t\t1\t\tZoom out by a factor of 2
	\t\t2\t\tFire query ray
	\t\t3\t\tZoom in by a factor of 2" }
	{ see_also "nirt, qray, rset, vars" } }
	.$id.menubar.settings.mouse_behavior add radiobutton -value p -variable mged_gui($id,mouse_behavior)\
			-label "Sweep Paint-Rectangle" -underline 6\
			-command "set_mouse_behavior $id"
	hoc_register_menu_data "Mouse Behavior" "Sweep Paint-Rectangle" "Sweep Paint-Rectangle"\
			{ { synopsis "Enter sweep paint-rectangle mode." }
	{ description "If the framebuffer is active, the rectangular area
	as specified by the user is painted with the current contents of the
	framebuffer. Otherwise, only the rectangle is drawn.\n
	\tMouse Button\t\t\tBehavior
	\t\t1\t\tZoom out by a factor of 2
	\t\t2\t\tDraw paint rectangle
	\t\t3\t\tZoom in by a factor of 2" }
	{ see_also "rset, vars" } }
	.$id.menubar.settings.mouse_behavior add radiobutton -value z -variable mged_gui($id,mouse_behavior)\
			-label "Sweep Zoom-Rectangle" -underline 6\
			-command "set_mouse_behavior $id"
	hoc_register_menu_data "Mouse Behavior" "Sweep Zoom-Rectangle" "Sweep Zoom-Rectangle"\
			{ { synopsis "Enter sweep zoom-rectangle mode." }
	{ description "The rectangular area as specified by the user is used
	to zoom the view. Note - as the user stretches out the zoom
	rectangle, the rectangle is constrained to be the same shape as the
	window. This insures that the user gets what he or she sees.\n
	\tMouse Button\t\t\tBehavior
	\t\t1\t\tZoom out by a factor of 2
	\t\t2\t\tDraw zoom rectangle
	\t\t3\t\tZoom in by a factor of 2" }
	{ see_also "rset, vars" } }

	menu .$id.menubar.settings.qray -title "Query Ray Effects" -tearoff $mged_default(tearoff_menus)
	.$id.menubar.settings.qray add radiobutton -value t -variable mged_gui($id,qray_effects)\
			-label "Text" -underline 0\
			-command "mged_apply $id \"qray effects \$mged_gui($id,qray_effects)\""
	hoc_register_menu_data "Query Ray Effects" "Text" "Query Ray Effects - Text"\
			{ { summary "Set qray effects mode to 'text'. In this mode,
	only textual output is used to represent the results
	of firing a query ray." }
	{ see_also "qray" } }
	.$id.menubar.settings.qray add radiobutton -value g -variable mged_gui($id,qray_effects)\
			-label "Graphics" -underline 0\
			-command "mged_apply $id \"qray effects \$mged_gui($id,qray_effects)\""
	hoc_register_menu_data "Query Ray Effects" "Graphics" "Query Ray Effects - Graphics"\
			{ { summary "Set qray effects mode to 'graphics'. In this mode,
	only graphical output is used to represent the results
	of firing a query ray." }
	{ see_also "qray" } }
	.$id.menubar.settings.qray add radiobutton -value b -variable mged_gui($id,qray_effects)\
			-label "Both" -underline 0\
			-command "mged_apply $id \"qray effects \$mged_gui($id,qray_effects)\""
	hoc_register_menu_data "Query Ray Effects" "Both" "Query Ray Effects - Both"\
			{ { summary "Set qray effects mode to 'both'. In this mode,
	both textual and graphical output is used to
	represent the results of firing a query ray." }
	{ see_also "qray" } }

	set tmp_summary "Set the active pane to be the upper left pane. Any interaction with the GUI that affects a pane
	(display manager) will be directed at the upper left pane.

	The following is a list of default key bindings for panes:

	$mged_default(dm_key_bindings)"
	set tmp_hoc [list [list summary $tmp_summary]]
	menu .$id.menubar.settings.mpane -title "Active Pane" -tearoff $mged_default(tearoff_menus)
	.$id.menubar.settings.mpane add radiobutton -value ul -variable mged_gui($id,dm_loc)\
			-label "Upper Left" -underline 6\
			-command "set_active_dm $id"
	hoc_register_menu_data "Active Pane" "Upper Left" "Active Pane - Upper Left" $tmp_hoc

	set tmp_summary "Set the active pane to be the upper right pane. Any interaction with the GUI that affects a pane
	(display manager) will be directed at the upper right pane.

	The following is a list of default key bindings for panes:

	$mged_default(dm_key_bindings)"
	set tmp_hoc [list [list summary $tmp_summary]]
	.$id.menubar.settings.mpane add radiobutton -value ur -variable mged_gui($id,dm_loc)\
			-label "Upper Right" -underline 6\
			-command "set_active_dm $id"
	hoc_register_menu_data "Active Pane" "Upper Right" "Active Pane - Upper Right" $tmp_hoc

	set tmp_summary "Set the active pane to be the lower left pane. Any interaction with the GUI that affects a pane
	(display manager) will be directed at the lower left pane.

	The following is a list of default key bindings for panes:

	$mged_default(dm_key_bindings)"
	set tmp_hoc [list [list summary $tmp_summary]]
	.$id.menubar.settings.mpane add radiobutton -value ll -variable mged_gui($id,dm_loc)\
			-label "Lower Left" -underline 2\
			-command "set_active_dm $id"
	hoc_register_menu_data "Active Pane" "Lower Left" "Active Pane - Lower Left" $tmp_hoc

	set tmp_summary "Set the active pane to be the lower right pane. Any interaction with the GUI that affects a pane
	(display manager) will be directed at the lower right pane.

	The following is a list of default key bindings for panes:

	$mged_default(dm_key_bindings)"
	set tmp_hoc [list [list summary $tmp_summary]]
	.$id.menubar.settings.mpane add radiobutton -value lr -variable mged_gui($id,dm_loc)\
			-label "Lower Right" -underline 3\
			-command "set_active_dm $id"
	hoc_register_menu_data "Active Pane" "Lower Right" "Active Pane - Lower Right" $tmp_hoc

	menu .$id.menubar.settings.fb -title "Framebuffer" -tearoff $mged_default(tearoff_menus)
	.$id.menubar.settings.fb add radiobutton -value 1 -variable mged_gui($id,fb_all)\
			-label "All" -underline 0\
			-command "mged_apply $id \"set fb_all \$mged_gui($id,fb_all)\"; rt_update_dest $id"
	hoc_register_menu_data "Framebuffer" "All" "Framebuffer - All"\
			{ { summary "Use the entire pane for the framebuffer." }
	{ see_also "rset, vars" } }
	.$id.menubar.settings.fb add radiobutton -value 0 -variable mged_gui($id,fb_all)\
			-label "Rectangle Area" -underline 0\
			-command "mged_apply $id \"set fb_all \$mged_gui($id,fb_all)\"; rt_update_dest $id"
	hoc_register_menu_data "Framebuffer" "Rectangle Area" "Framebuffer - Rectangle Area"\
			{ { summary "Use the rectangle area for the framebuffer." }
	{ see_also "rset, vars" } }
	.$id.menubar.settings.fb add separator
	.$id.menubar.settings.fb add radiobutton -value 2 -variable mged_gui($id,fb_overlay)\
			-label "Overlay" -underline 0\
			-command "mged_apply $id \"set fb_overlay \$mged_gui($id,fb_overlay)\"; rt_update_dest $id"
	hoc_register_menu_data "Framebuffer" "Overlay" "Framebuffer - Overlay"\
			{ { summary "Put the framebuffer in overlay mode. In this mode,
	the framebuffer data is placed above everything.
	(i.e. above the geometry and faceplate" }
	{ see_also "rset, vars" } }
	.$id.menubar.settings.fb add radiobutton -value 1 -variable mged_gui($id,fb_overlay)\
			-label "Interlay" -underline 0\
			-command "mged_apply $id \"set fb_overlay \$mged_gui($id,fb_overlay)\"; rt_update_dest $id"
	hoc_register_menu_data "Framebuffer" "Interlay" "Framebuffer - Interlay"\
			{ { summary "Put the framebuffer in interlay mode. In this mode,
	the framebuffer data is placed above the geometry
	and below the faceplate." }
	{ see_also "rset, vars" } }
	.$id.menubar.settings.fb add radiobutton -value 0 -variable mged_gui($id,fb_overlay)\
			-label "Underlay" -underline 0\
			-command "mged_apply $id \"set fb_overlay \$mged_gui($id,fb_overlay)\"; rt_update_dest $id"
	hoc_register_menu_data "Framebuffer" "Underlay" "Framebuffer - Underlay"\
			{ { summary "Put the framebuffer in underlay mode. In this mode,
	the framebuffer data is placed under everything.
	(i.e. faceplate and geometry is drawn on top of
	the framebuffer data)." }
	{ see_also "rset, vars" } }
	.$id.menubar.settings.fb add separator
	.$id.menubar.settings.fb add checkbutton -offvalue 0 -onvalue 1 -variable mged_gui($id,fb)\
			-label "Framebuffer Active" -underline 0\
			-command "set_fb $id"
	hoc_register_menu_data "Framebuffer" "Framebuffer Active" "Framebuffer Active"\
			{ { summary "This activates/deactivates the framebuffer." }
	{ see_also "rset, vars" } }
	.$id.menubar.settings.fb add checkbutton -offvalue 0 -onvalue 1 -variable mged_gui($id,listen)\
			-label "Listen For Clients" -underline 0\
			-command "set_listen $id"
	hoc_register_menu_data "Framebuffer" "Listen For Clients" "Listen For Clients"\
			{ { summary "This activates/deactivates listening for clients.
	If the framebuffer is listening for clients, new
	data can be passed into the framebuffer. Otherwise,
	the framebuffer is write protected. Actually, it is
	also read protected. The one exception is that MGED
	can still read the framebuffer data." }
	{ see_also "rset, vars" } }

	menu .$id.menubar.settings.vap -title "View Axes Position" -tearoff $mged_default(tearoff_menus)
	.$id.menubar.settings.vap add radiobutton -value 0 -variable mged_gui($id,view_pos)\
			-label "Center" -underline 0\
			-command "mged_apply $id \"rset ax view_pos 0 0\""
	hoc_register_menu_data "View Axes Position" "Center" "View Axes Position - Center"\
			{ { summary "Place the view axes in the center of the active pane." }
	{ see_also "rset" } }
	.$id.menubar.settings.vap add radiobutton -value 1 -variable mged_gui($id,view_pos)\
			-label "Lower Left" -underline 2\
			-command "mged_apply $id \"rset ax view_pos -1750 -1750\""
	hoc_register_menu_data "View Axes Position" "Lower Left" "View Axes Position - Lower Left"\
			{ { summary "Place the view axes in the lower left corner of the active pane." }
	{ see_also "rset" } }
	.$id.menubar.settings.vap add radiobutton -value 2 -variable mged_gui($id,view_pos)\
			-label "Upper Left" -underline 6\
			-command "mged_apply $id \"rset ax view_pos -1750 1750\""
	hoc_register_menu_data "View Axes Position" "Upper Left" "View Axes Position - Upper Left"\
			{ { summary "Place the view axes in the upper left corner of the active pane." }
	{ see_also "rset" } }
	.$id.menubar.settings.vap add radiobutton -value 3 -variable mged_gui($id,view_pos)\
			-label "Upper Right" -underline 6\
			-command "mged_apply $id \"rset ax view_pos 1750 1750\""
	hoc_register_menu_data "View Axes Position" "Upper Right" "View Axes Position - Upper Right"\
			{ { summary "Place the view axes in the upper right corner of the active pane." }
	{ see_also "rset" } }
	.$id.menubar.settings.vap add radiobutton -value 4 -variable mged_gui($id,view_pos)\
			-label "Lower Right" -underline 3\
			-command "mged_apply $id \"rset ax view_pos 1750 -1750\""
	hoc_register_menu_data "View Axes Position" "Lower Right" "View Axes Position - Lower Right"\
			{ { summary "Place the view axes in the lower right corner of the active pane." }
	{ see_also "rset" } }

	menu .$id.menubar.settings.grid -title "Grid" -tearoff $mged_default(tearoff_menus)
	.$id.menubar.settings.grid add command -label "Anchor" -underline 0\
			-command "do_grid_anchor $id"
	hoc_register_menu_data "Grid" "Anchor" "Grid Anchor"\
			{ { summary "Pops up the grid anchor entry dialog." }
	{ see_also "rset" } }
	.$id.menubar.settings.grid add cascade -label "Spacing" -underline 1\
			-menu .$id.menubar.settings.grid.spacing
	.$id.menubar.settings.grid add separator
	.$id.menubar.settings.grid add checkbutton -offvalue 0 -onvalue 1 -variable mged_gui($id,grid_draw)\
			-label "Draw Grid" -underline 0\
			-command "mged_draw_grid $id"
	hoc_register_menu_data "Grid" "Draw Grid" "Draw Grid"\
			{ { summary "Toggle drawing the grid. The grid is a lattice
	of points over the pane (geometry window). The
	regular spacing between the points gives the user
	accurate visual cues regarding dimension. This
	spacing can be set by the user." }
	{ see_also "rset" } }
	.$id.menubar.settings.grid add checkbutton -offvalue 0 -onvalue 1 -variable mged_gui($id,draw_snap)\
			-label "Snap To Grid" -underline 0\
			-command "mged_apply $id \"rset grid snap \$mged_gui($id,draw_snap)\""
	hoc_register_menu_data "Grid" "Snap To Grid" "Snap To Grid"\
			{ { summary "Toggle grid snapping. When snapping to grid,
	the internal routines that use the mouse pointer
	location, move/snap that location to the nearest
	grid point. This gives the user high accuracy with
	the mouse for transforming the view or editing
	solids/matrices." }
	{ see_also "rset" } }

	menu .$id.menubar.settings.grid.spacing -title "Grid Spacing" -tearoff $mged_default(tearoff_menus)
	.$id.menubar.settings.grid.spacing add command -label "Autosize" -underline 0\
			-command "grid_spacing_autosize $id; grid_spacing_apply $id b"
	hoc_register_menu_data "Grid Spacing" "Autosize" "Grid Spacing - Autosize"\
			{ { summary "Set the grid spacing according to the current view size.
	The number of ticks will be between 20 and 200 in user units.
	The major spacing will be set to 10 ticks per major." }
	{ see_also "rset" } }
	.$id.menubar.settings.grid.spacing add command -label "Arbitrary" -underline 1\
			-command "do_grid_spacing $id b"
	hoc_register_menu_data "Grid Spacing" "Arbitrary" "Grid Spacing - Arbitrary"\
			{ { summary "Pops up the grid spacing entry dialog. The user
	can use this to set both the horizontal and
	vertical tick spacing." }
	{ see_also "rset" } }
	.$id.menubar.settings.grid.spacing add separator
	.$id.menubar.settings.grid.spacing add command -label "Micrometer" -underline 4\
			-command "set_grid_spacing $id micrometer 1"
	hoc_register_menu_data "Grid Spacing" "Micrometer" "Grid Spacing - Micrometer"\
			{ { summary "Set the horizontal and vertical tick
	spacing to 1 micrometer." }
	{ see_also "rset" } }
	.$id.menubar.settings.grid.spacing add command -label "Millimeter" -underline 2\
			-command "set_grid_spacing $id millimeter 1"
	hoc_register_menu_data "Grid Spacing" "Millimeter" "Grid Spacing - Millimeter"\
			{ { summary "Set the horizontal and vertical tick
	spacing to 1 millimeter." }
	{ see_also "rset" } }
	.$id.menubar.settings.grid.spacing add command -label "Centimeter" -underline 0\
			-command "set_grid_spacing $id centimeter 1"
	hoc_register_menu_data "Grid Spacing" "Centimeter" "Grid Spacing - Centimeter"\
			{ { summary "Set the horizontal and vertical tick
	spacing to 1 centimeter." }
	{ see_also "rset" } }
	.$id.menubar.settings.grid.spacing add command -label "Decimeter" -underline 0\
			-command "set_grid_spacing $id decimeter 1"
	hoc_register_menu_data "Grid Spacing" "Decimeter" "Grid Spacing - Decimeter"\
			{ { summary "Set the horizontal and vertical tick
	spacing to 1 decimeter." }
	{ see_also "rset" } }
	.$id.menubar.settings.grid.spacing add command -label "Meter" -underline 0\
			-command "set_grid_spacing $id meter 1"
	hoc_register_menu_data "Grid Spacing" "Meter" "Grid Spacing - Meter"\
			{ { summary "Set the horizontal and vertical tick
	spacing to 1 meter." }
	{ see_also "rset" } }
	.$id.menubar.settings.grid.spacing add command -label "Kilometer" -underline 0\
			-command "set_grid_spacing $id kilometer 1"
	hoc_register_menu_data "Grid Spacing" "Kilometer" "Grid Spacing - Kilometer"\
			{ { summary "Set the horizontal and vertical tick
	spacing to 1 kilometer." }
	{ see_also "rset" } }
	.$id.menubar.settings.grid.spacing add separator
	.$id.menubar.settings.grid.spacing add command -label "1/10 Inch" -underline 0\
			-command "set_grid_spacing $id \"1/10 inch\" 1"
	hoc_register_menu_data "Grid Spacing" "1/10 Inch" "Grid Spacing - 1/10 Inch"\
			{ { summary "Set the horizontal and vertical tick
	spacing to 1/10 inches." }
	{ see_also "rset" } }
	.$id.menubar.settings.grid.spacing add command -label "1/4 Inch" -underline 2\
			-command "set_grid_spacing $id \"1/4 inch\" 1"
	hoc_register_menu_data "Grid Spacing" "1/4 Inch" "Grid Spacing - 1/4 Inch"\
			{ { summary "Set the horizontal and vertical tick
	spacing to 1/4 inches." }
	{ see_also "rset" } }
	.$id.menubar.settings.grid.spacing add command -label "1/2 Inch" -underline 2\
			-command "set_grid_spacing $id \"1/2 inch\" 1"
	hoc_register_menu_data "Grid Spacing" "1/2 Inch" "Grid Spacing - 1/2 Inch"\
			{ { summary "Set the horizontal and vertical tick
	spacing to 1/2 inches." }
	{ see_also "rset" } }
	.$id.menubar.settings.grid.spacing add command -label "Inch" -underline 0\
			-command "set_grid_spacing $id inch 1"
	hoc_register_menu_data "Grid Spacing" "Inch" "Grid Spacing - Inch"\
			{ { summary "Set the horizontal and vertical tick
	spacing to 1 inch." }
	{ see_also "rset" } }
	.$id.menubar.settings.grid.spacing add command -label "Foot" -underline 0\
			-command "set_grid_spacing $id foot 1"
	hoc_register_menu_data "Grid Spacing" "Foot" "Grid Spacing - Foot"\
			{ { summary "Set the horizontal and vertical tick
	spacing to 1 foot." }
	{ see_also "rset" } }
	.$id.menubar.settings.grid.spacing add command -label "Yard" -underline 0\
			-command "set_grid_spacing $id yard 1"
	hoc_register_menu_data "Grid Spacing" "Yard" "Grid Spacing - Yard"\
			{ { summary "Set the horizontal and vertical tick
	spacing to 1 yard." }
	{ see_also "rset" } }
	.$id.menubar.settings.grid.spacing add command -label "Mile" -underline 3\
			-command "set_grid_spacing $id mile 1"
	hoc_register_menu_data "Grid Spacing" "Mile" "Grid Spacing - Mile"\
			{ { summary "Set the horizontal and vertical tick
	spacing to 1 mile." }
	{ see_also "rset" } }

	#
	# Don't need to register menu data here. Already being done above.
	#
	menu .$id.menubar.settings.grid_spacing -title "Grid Spacing" -tearoff $mged_default(tearoff_menus)
	.$id.menubar.settings.grid_spacing add command -label "Autosize" -underline 0\
			-command "grid_spacing_autosize $id; grid_spacing_apply $id b"
	.$id.menubar.settings.grid_spacing add command -label "Arbitrary" -underline 1\
			-command "do_grid_spacing $id b"
	.$id.menubar.settings.grid_spacing add separator
	.$id.menubar.settings.grid_spacing add command -label "Micrometer" -underline 4\
			-command "set_grid_spacing $id micrometer 1"
	.$id.menubar.settings.grid_spacing add command -label "Millimeter" -underline 2\
			-command "set_grid_spacing $id millimeter 1"
	.$id.menubar.settings.grid_spacing add command -label "Centimeter" -underline 0\
			-command "set_grid_spacing $id centimeter 1"
	.$id.menubar.settings.grid_spacing add command -label "Decimeter" -underline 0\
			-command "set_grid_spacing $id decimeter 1"
	.$id.menubar.settings.grid_spacing add command -label "Meter" -underline 0\
			-command "set_grid_spacing $id meter 1"
	.$id.menubar.settings.grid_spacing add command -label "Kilometer" -underline 0\
			-command "set_grid_spacing $id kilometer 1"
	.$id.menubar.settings.grid_spacing add separator
	.$id.menubar.settings.grid_spacing add command -label "1/10 Inch" -underline 0\
			-command "set_grid_spacing $id \"1/10 inch\" 1"
	.$id.menubar.settings.grid_spacing add command -label "1/4 Inch" -underline 2\
			-command "set_grid_spacing $id \"1/4 inch\" 1"
	.$id.menubar.settings.grid_spacing add command -label "1/2 Inch" -underline 2\
			-command "set_grid_spacing $id \"1/2 inch\" 1"
	.$id.menubar.settings.grid_spacing add command -label "Inch" -underline 0\
			-command "set_grid_spacing $id inch 1"
	.$id.menubar.settings.grid_spacing add command -label "Foot" -underline 0\
			-command "set_grid_spacing $id foot 1"
	.$id.menubar.settings.grid_spacing add command -label "Yard" -underline 0\
			-command "set_grid_spacing $id yard 1"
	.$id.menubar.settings.grid_spacing add command -label "Mile" -underline 3\
			-command "set_grid_spacing $id mile 1"

	menu .$id.menubar.settings.coord -title "Constraint Coords" -tearoff $mged_default(tearoff_menus)
	.$id.menubar.settings.coord add radiobutton -value m -variable mged_gui($id,coords)\
			-label "Model" -underline 0\
			-command "mged_apply $id \"set coords \$mged_gui($id,coords)\""
	hoc_register_menu_data "Constraint Coords" "Model" "Constraint Coords - Model"\
			{ { summary "Constrained transformations will use model coordinates." }
	{ see_also "rset, vars" } }
	.$id.menubar.settings.coord add radiobutton -value v -variable mged_gui($id,coords)\
			-label "View" -underline 0\
			-command "mged_apply $id \"set coords \$mged_gui($id,coords)\""
	hoc_register_menu_data "Constraint Coords" "View" "Constraint Coords - View"\
			{ { summary "Constrained transformations will use view coordinates." }
	{ see_also "rset, vars" } }
	.$id.menubar.settings.coord add radiobutton -value o -variable mged_gui($id,coords)\
			-label "Object" -underline 0\
			-command "mged_apply $id \"set coords \$mged_gui($id,coords)\"" -state disabled
	hoc_register_menu_data "Constraint Coords" "Object" "Constraint Coords - Object"\
			{ { summary "Constrained transformations will use object coordinates." }
	{ see_also "rset, vars" } }

	menu .$id.menubar.settings.origin -title "Rotate About" -tearoff $mged_default(tearoff_menus)
	.$id.menubar.settings.origin add radiobutton -value v -variable mged_gui($id,rotate_about)\
			-label "View Center" -underline 0\
			-command "mged_apply $id \"set rotate_about \$mged_gui($id,rotate_about)\""
	hoc_register_menu_data "Rotate About" "View Center" "Rotate About - View Center"\
			{ { summary "Set the center of rotation to be about the view center." }
	{ see_also "rset, vars" } }
	.$id.menubar.settings.origin add radiobutton -value e -variable mged_gui($id,rotate_about)\
			-label "Eye" -underline 0\
			-command "mged_apply $id \"set rotate_about \$mged_gui($id,rotate_about)\""
	hoc_register_menu_data "Rotate About" "Eye" "Rotate About - Eye"\
			{ { summary "Set the center of rotation to be about the eye." }
	{ see_also "rset, vars" } }
	.$id.menubar.settings.origin add radiobutton -value m -variable mged_gui($id,rotate_about)\
			-label "Model Origin" -underline 0\
			-command "mged_apply $id \"set rotate_about \$mged_gui($id,rotate_about)\""
	hoc_register_menu_data "Rotate About" "Model Origin" "Rotate About - Model Origin"\
			{ { summary "Set the center of rotation to be about the model origin." }
	{ see_also "rset, vars" } }
	.$id.menubar.settings.origin add radiobutton -value k -variable mged_gui($id,rotate_about)\
			-label "Key Point" -underline 0\
			-command "mged_apply $id \"set rotate_about \$mged_gui($id,rotate_about)\"" -state disabled
	hoc_register_menu_data "Rotate About" "Key Point" "Rotate About - Key Point"\
			{ { summary "Set the center of rotation to be about the key point." }
	{ see_also "rset, vars" } }

	menu .$id.menubar.settings.transform -title "Transform" -tearoff $mged_default(tearoff_menus)
	.$id.menubar.settings.transform add radiobutton -value v -variable mged_gui($id,transform)\
			-label "View" -underline 0\
			-command "set_transform $id"
	hoc_register_menu_data "Transform" "View" "Transform - View"\
			{ { summary "Set the transform mode to VIEW. When in VIEW mode, the mouse
	can be used to transform the view. This is the default." }
	{ see_also "rset, vars" } }
	.$id.menubar.settings.transform add radiobutton -value a -variable mged_gui($id,transform)\
			-label "ADC" -underline 0\
			-command "set_transform $id"
	hoc_register_menu_data "Transform" "ADC" "Transform - ADC"\
			{ { summary "Set the transform mode to ADC. When in ADC mode, the mouse
	can be used to transform the angle distance cursor while the
	angle distance cursor is being displayed. If the angle distance
	cursor is not being displayed, the behavior is the same as VIEW
	mode." }
	{ see_also "rset, vars" } }
	.$id.menubar.settings.transform add radiobutton -value e -variable mged_gui($id,transform)\
			-label "Model Params" -underline 0\
			-command "set_transform $id" -state disabled
	hoc_register_menu_data "Transform" "Model Params" "Transform - Model Params"\
			{ { summary "Set the transform mode to Model Params. When in Model Params
	mode, the mouse can be used to transform the model parameters." }
	{ see_also "rset, vars" } }

	menu .$id.menubar.modes -title "Modes" -tearoff $mged_default(tearoff_menus)
	.$id.menubar.modes add checkbutton -offvalue 0 -onvalue 1 -variable mged_gui($id,grid_draw)\
			-label "Draw Grid" -underline 0\
			-command "mged_draw_grid $id"
	hoc_register_menu_data "Modes" "Draw Grid" "Draw Grid"\
			{ { summary "Toggle drawing the grid. The grid is a lattice
	of points over the pane (geometry window). The
	regular spacing between the points gives the user
	accurate visual cues regarding dimension. This
	spacing can be set by the user." }
	{ see_also "rset" } }
	.$id.menubar.modes add checkbutton -offvalue 0 -onvalue 1 -variable mged_gui($id,draw_snap)\
			-label "Snap To Grid" -underline 0\
			-command "mged_apply $id \"rset grid snap \$mged_gui($id,draw_snap)\""
	hoc_register_menu_data "Modes" "Snap To Grid" "Snap To Grid"\
			{ { summary "Toggle grid snapping. When snapping to grid,
	the internal routines that use the mouse pointer
	location, move/snap that location to the nearest
	grid point. This gives the user high accuracy with
	the mouse for transforming the view or editing
	solids/matrices." }
	{ see_also "rset" } }
	.$id.menubar.modes add separator
	.$id.menubar.modes add checkbutton -offvalue 0 -onvalue 1 -variable mged_gui($id,fb)\
			-label "Framebuffer Active" -underline 0 \
			-command "set_fb $id"
	hoc_register_menu_data "Modes" "Framebuffer Active" "Framebuffer Active"\
			{ { summary "This activates/deactivates the framebuffer." }
	{ see_also "rset, vars" } }
	.$id.menubar.modes add checkbutton -offvalue 0 -onvalue 1 -variable mged_gui($id,listen)\
			-label "Listen For Clients" -underline 0\
			-command "set_listen $id"
	hoc_register_menu_data "Modes" "Listen For Clients" "Listen For Clients"\
			{ { summary "
	This activates/deactivates listening for clients. If
	the framebuffer is listening for clients, new data can
	be passed into the framebuffer. Otherwise, the framebuffer
	is write protected. Actually, it is also read protected
	with one exception. MGED can still read the framebuffer
	data." }
	{ see_also "rset, vars" } }
	.$id.menubar.modes add separator
	.$id.menubar.modes add checkbutton -offvalue 0 -onvalue 1 -variable mged_gui($id,rubber_band)\
			-label "Persistent Sweep Rectangle" -underline 0\
			-command "mged_apply $id \"rset rb draw \$mged_gui($id,rubber_band)\""
	hoc_register_menu_data "Modes" "Persistent sweep rectangle" "Persistent Rubber Band"\
			{ { summary "Toggle drawing the rectangle while idle." }
	{ see_also "rset" } }
	.$id.menubar.modes add checkbutton -offvalue 0 -onvalue 1 -variable mged_gui($id,adc_draw)\
			-label "Angle/Dist Cursor" -underline 0 \
			-command "adc_CBHandler $id"
	hoc_register_menu_data "Modes" "Angle/Dist Cursor" "Angle/Dist Cursor"\
			{ { summary "Toggle drawing the angle distance cursor." }
	{ see_also "adc" } }
	.$id.menubar.modes add checkbutton -offvalue 0 -onvalue 1 -variable mged_gui($id,faceplate)\
			-label "Faceplate" -underline 7\
			-command "mged_apply $id \"set faceplate \$mged_gui($id,faceplate)\""
	hoc_register_menu_data "Modes" "Faceplate" "Faceplate"\
			{ { summary "Toggle drawing the MGED faceplate." }
	{ see_also "rset, vars" } }
	.$id.menubar.modes add cascade -label "Axes" -underline 1\
			-menu .$id.menubar.modes.axes
	.$id.menubar.modes add separator
	.$id.menubar.modes add checkbutton -offvalue 0 -onvalue 1 -variable mged_gui($id,multi_pane)\
			-label "Multipane" -underline 0 -command "setmv $id"
	hoc_register_menu_data "Modes" "Multipane" "Multipane"\
			{ { summary "
	Toggle between multipane and single pane mode.
	In multipane mode there are four panes, each
	with its own state." } }
	.$id.menubar.modes add checkbutton -offvalue 0 -onvalue 1 -variable mged_gui($id,show_edit_info)\
			-label "Edit Info" -underline 0\
			-command "toggle_edit_info $id"
	hoc_register_menu_data "Modes" "Edit Info" "Edit Info"\
			{ { summary "
	Toggle display of edit information. If in
	solid edit state, the edit information is
	displayed in the internal solid editor. This
	editor, as its name implies, can be used to
	edit the solid as well as to view its contents.
	If in object edit state, the object information
	is displayed in a dialog box." } }
	.$id.menubar.modes add checkbutton -offvalue 0 -onvalue 1 -variable mged_gui($id,show_status)\
			-label "Status Bar" -underline 7\
			-command "toggle_status_bar $id"
	hoc_register_menu_data "Modes" "Status Bar" "Status Bar"\
			{ { summary "Toggle display of the command window's status bar." } }
	if {$comb} {
		.$id.menubar.modes add checkbutton -offvalue 0 -onvalue 1 -variable mged_gui($id,show_cmd)\
				-label "Command Window" -underline 0\
				-command "set_cmd_win $id"
		hoc_register_menu_data "Modes" "Command Window" "Command Window"\
				{ { summary "Toggle display of the command window." } }
		.$id.menubar.modes add checkbutton -offvalue 0 -onvalue 1 -variable mged_gui($id,show_dm)\
				-label "Graphics Window" -underline 0\
				-command "set_dm_win $id"
		hoc_register_menu_data "Modes" "Graphics Window" "Graphics Window"\
				{ { summary "Toggle display of the graphics window." } }
	} 
	.$id.menubar.modes add separator
	.$id.menubar.modes add checkbutton -offvalue 0 -onvalue 1 -variable mged_gui($id,collaborate)\
			-label "Collaborate" -underline 0\
			-command "collab_doit $id"
	hoc_register_menu_data "Modes" "Collaborate" "Collaborate"\
			{ { summary "Toggle collaborate mode. When in collaborate
	mode, the upper right pane's view can be shared
	with other instances of MGED's new GUI that are
	also collaborating." } }
	.$id.menubar.modes add checkbutton -offvalue 0 -onvalue 1 -variable mged_gui($id,rateknobs)\
			-label "Rateknobs" -underline 0\
			-command "mged_apply $id \"set rateknobs \$mged_gui($id,rateknobs)\""
	hoc_register_menu_data "Modes" "Rateknobs" "Rate Knobs"\
			{ { summary "Toggle rate knob mode. When in rate knob mode,
	transformation with the mouse becomes rate based.
	For example, if the user rotates the view about
	the X axis, the view continues to rotate about the
	X axis until the rate rotation is stopped." }
	{ see_also "knob" } }
	.$id.menubar.modes add checkbutton -offvalue 0 -onvalue 1 -variable mged_gui($id,dlist)\
			-label "Display Lists" -underline 8\
			-command "mged_apply $id \"set dlist \$mged_gui($id,dlist)\""
	hoc_register_menu_data "Modes" "Display Lists" "Display Lists"\
			{ { summary "Toggle the use of display lists. This currently affects
	only Ogl display managers. When using display lists the
	screen update time is significantly faster. This is especially
	noticable when running MGED remotely. Use of display lists
	is encouraged unless the geometry being viewed is bigger
	than the Ogl server can handle (i.e. the server runs out
	of available memory for storing display lists). When this
	happens the machine will begin to swap (and little else).
	If huge pieces of geometry need to be viewed, consider
	toggling off display lists. Note that using display lists
	while viewing geometry of any significant size will incur
	noticable compute time up front to create the display lists."} }

	menu .$id.menubar.modes.axes -title "Axes" -tearoff $mged_default(tearoff_menus)
	.$id.menubar.modes.axes add checkbutton -offvalue 0 -onvalue 1\
			-variable mged_gui($id,view_draw) -label "View" -underline 0\
			-command "mged_apply $id \"rset ax view_draw \$mged_gui($id,view_draw)\""
	hoc_register_menu_data "Axes" "View" "View Axes"\
			{ { summary "Toggle display of the view axes. The view axes
	are used to give the user visual cues indicating
	the current view of model space. These axes are
	drawn the same as the model axes, except that the
	view axes' position is fixed in view space. This
	position as well as other characteristics can be
	set by the user." }
	{ see_also "rset" } }
	.$id.menubar.modes.axes add checkbutton -offvalue 0 -onvalue 1\
			-variable mged_gui($id,model_draw) -label "Model" -underline 0\
			-command "mged_apply $id \"rset ax model_draw \$mged_gui($id,model_draw)\""
	hoc_register_menu_data "Axes" "Model" "Model Axes"\
			{ { summary "Toggle display of the model axes. The model axes
	are used to give the user visual cues indicating
	the current view of model space. The model axes
	are by default located at the model origin and are
	fixed in model space. So, if the user transforms
	the view, the model axes will move with respect to
	the view. The model axes position as well as other
	characteristics can be set by the user." }
	{ see_also "rset" } }
	.$id.menubar.modes.axes add checkbutton -offvalue 0 -onvalue 1\
			-variable mged_gui($id,edit_draw) -label "Edit" -underline 0\
			-command "mged_apply $id \"rset ax edit_draw \$mged_gui($id,edit_draw)\""
	hoc_register_menu_data "Axes" "Edit" "Edit Axes"\
			{ { summary "Toggle display of the edit axes. The edit axes
	are used to give the user visual cues indicating
	how the edit is progressing. They consist of a
	pair of axes. One remains unmoved, while the other
	moves to indicate how things have changed." }
	{ see_also "rset" } }

	menu .$id.menubar.misc -title "Misc" -tearoff $mged_default(tearoff_menus)
	.$id.menubar.misc add checkbutton -offvalue 0 -onvalue 1\
			-variable mged_gui($id,zclip) -label "Z Clipping" -underline 0\
			-command "mged_apply $id \"dm set zclip \$mged_gui($id,zclip)\""
	hoc_register_menu_data "Misc" "Z Clipping" "Z Clipping"\
			{ { summary "Toggle zclipping. When zclipping is active, the Z value
	of each point is checked against the min and max Z values
	of the viewing cube. If the Z value of the point is found
	to be outside this range, it is clipped (i.e. not drawn).
	Zclipping can be used to remove geometric detail that may
	be occluding geometry of greater interest." }
	{ see_also "dm" } }
	.$id.menubar.misc add checkbutton -offvalue 0 -onvalue 1\
			-variable mged_gui($id,perspective_mode) -label "Perspective" -underline 0\
			-command "mged_apply $id \"set perspective_mode \$mged_gui($id,perspective_mode)\""
	hoc_register_menu_data "Misc" "Perspective" "Perspective"\
			{ { summary "Toggle perspective_mode."}
	{ see_also "rset, vars" } }
	.$id.menubar.misc add checkbutton -offvalue 0 -onvalue 1\
			-variable mged_gui($id,faceplate) -label "Faceplate" -underline 0\
			-command "mged_apply $id \"set faceplate \$mged_gui($id,faceplate)\""
	hoc_register_menu_data "Misc" "Faceplate" "Faceplate"\
			{ { summary "Toggle drawing the MGED faceplate." }
	{ see_also "rset, vars" } }
	.$id.menubar.misc add checkbutton -offvalue 0 -onvalue 1\
			-variable mged_gui($id,orig_gui) -label "Faceplate GUI" -underline 10\
			-command "mged_apply $id \"set orig_gui \$mged_gui($id,orig_gui)\""
	hoc_register_menu_data "Misc" "Faceplate GUI" "Faceplate GUI"\
			{ { summary "Toggle drawing the MGED faceplate GUI. The faceplate GUI
	consists of the faceplate menu and sliders." }
	{ see_also "rset, vars" } }
	.$id.menubar.misc add checkbutton -offvalue 0 -onvalue 1\
			-variable mged_gui($id,forward_keys) -label "Keystroke Forwarding" -underline 0\
			-command "mged_apply $id \"set_forward_keys \\\[winset\\\] \$mged_gui($id,forward_keys)\""
	hoc_register_menu_data "Misc" "Keystroke Forwarding" "Keystroke Forwarding"\
			{ { summary "Toggle keystroke forwarding. When forwarding keystrokes, each
	key event within the drawing window is forwarded to the command
	window. Drawing window specific commands (i.e. commands that
	modify the state of the drawing window) will apply only to the
	drawing window wherein the user typed. This feature is provided
	to lessen the need to use the mouse." } }
	if {$mged_gui($id,dtype) == "ogl"} {
		.$id.menubar.misc add checkbutton -offvalue 0 -onvalue 1\
				-variable mged_gui($id,depthcue) -label "Depth Cueing" -underline 0\
				-command "mged_apply $id \"dm set depthcue \$mged_gui($id,depthcue)\""
		hoc_register_menu_data "Misc" "Depth Cueing" "Depth Cueing"\
				{ { summary "Toggle depth cueing. When depth cueing is active,
		lines that are farther away appear more faint." } 
		{ see_also "dm" } }
		.$id.menubar.misc add checkbutton -offvalue 0 -onvalue 1\
				-variable mged_gui($id,zbuffer) -label "Z Buffer" -underline 2\
				-command "mged_apply $id \"dm set zbuffer \$mged_gui($id,zbuffer)\""
		hoc_register_menu_data "Misc" "Z Buffer" "Z Buffer"\
				{ { summary "Toggle Z buffer." }
		{ see_also "dm" } }
		.$id.menubar.misc add checkbutton -offvalue 0 -onvalue 1\
				-variable mged_gui($id,lighting) -label "Lighting" -underline 0\
				-command "mged_apply $id \"dm set lighting \$mged_gui($id,lighting)\""
		hoc_register_menu_data "Misc" "Lighting" "Lighting"\
				{ { summary "Toggle lighting." }
		{ see_also "dm" } }
	}

	# BEGIN TOOLS MENU

	# BEGIN CONTROL PANELS (control behavior and settings)

	menu .$id.menubar.tools -title "Tools" -tearoff $mged_default(tearoff_menus)
	.$id.menubar.tools add command -label "ADC Control Panel" -underline 0\
			-command "init_adc_control $id"
	hoc_register_menu_data "Tools" "ADC Control Panel" "ADC Control Panel"\
			{ { summary "Tool for controlling the angle distance cursor." }
	{ see_also "adc" } }

	.$id.menubar.tools add command -label "AnimMate Control Panel" -underline 1\
			-command "animmate $id .$id"
	hoc_register_menu_data "Tools" "AnimMate Control Panel" "AnimMate Control Panel"\
			{ { summary "Tool for building animation scripts." }
	{ see_also animmate } }

	.$id.menubar.tools add command -label "Grid Control Panel" -underline 0\
			-command "init_grid_control $id"
	hoc_register_menu_data "Tools" "Grid Control Panel" "Grid Control Panel"\
			{ { summary "Tool for setting grid parameters." }
	{ see_also "rset" } }

	.$id.menubar.tools add command -label "Query Ray Control Panel" -underline 0\
			-command "init_qray_control $id"
	hoc_register_menu_data "Tools" "Query Ray Control Panel" "Query Ray Control Panel"\
			{ { summary "Tool for setting query ray parameters." }
	{ see_also "qray" } }

	.$id.menubar.tools add command -label "Raytrace Control Panel" -underline 0\
			-command "init_Raytrace $id"
	hoc_register_menu_data "Tools" "Raytrace Control Panel" "Raytrace Control Panel"\
			{ { summary "Tool for raytracing." }
	{ see_also rt } }

	# BEGIN TOOLS (perform operation (subtle (bogus) difference))

	.$id.menubar.tools add separator

	.$id.menubar.tools add command -label "Build Pattern Tool" -underline 0\
			-command "pattern_control .#auto"
	hoc_register_menu_data "Tools" "Build Pattern Tool" "Build Pattern Tool"\
			{ { summary "A tool for building a repetitive pattern from an existing object." } }

	.$id.menubar.tools add command -label "Color Selector" -underline 1\
			-command "cadColorWidget tool .$id colorEditTool\
			-title \"Color Selector\"\
			-initialcolor black"
	hoc_register_menu_data "Tools" "Color Selector" "Color Selector"\
			{ { summary "Tool for creating, displaying, and selecting colors." } }

	.$id.menubar.tools add command -label "Geometry Browser" -underline 0\
			-command "geometree"
	hoc_register_menu_data "Tools" "Geometry Browser" "Geometry Browser"\
			{ { summary "Tool for browsing the geometry in a database." } }

	.$id.menubar.tools add command -label "Overlap Tool" -underline 0\
			-command "overlap_tool $id"
	hoc_register_menu_data "Tools" "Overlap Tool" "Overlap Tool"\
			{ { summary "A tool for discovering and correcting overlapping regions." } }

	# BEGIN ACTIONS (perform some operation (subtle (bogus) difference))

	.$id.menubar.tools add separator

	.$id.menubar.tools add command -label "Upgrade Database..." -underline 1\
			-command "dbupgrade"
	hoc_register_menu_data "Tools" "Upgrade Database..." "Upgrade Database..."\
			{ { summary "Upgrade to the current database format." }
	{ see_also dbupgrade } }

# XXX These are already included on the edit menu! -- csm
#	.$id.menubar.tools add separator
#	.$id.menubar.tools add command -label "Prim Editor" -underline 0\
#			-command "init_edit_solid $id"
#	hoc_register_menu_data "Tools" "Prim Editor" "Prim Editor"\
#			{ { summary "Tool for creating/editing primitives." } }
#	.$id.menubar.tools add command -label "Combination Editor" -underline 0\
#			-command "init_comb $id"
#	hoc_register_menu_data "Tools" "Combination Editor" "Combination Editor"\
#			{ { summary "Tool for creating/editing combinations." } }

	# BEGIN WINDOWS (display main windows)

	.$id.menubar.tools add separator

	.$id.menubar.tools add command -label "Command Window" -underline 6\
			-command "raise .$id"
	hoc_register_menu_data "Tools" "Command Window" "Command Window"\
			{ { summary "Raise the command window." } }
	.$id.menubar.tools add command -label "Graphics Window" -underline 7\
			-command "raise $mged_gui($id,top)"
	hoc_register_menu_data "Tools" "Graphics Window" "Graphics Window"\
			{ { summary "Raise the geometry window." } }

	# END TOOLS MENU

	menu .$id.menubar.help -title "Help" -tearoff $mged_default(tearoff_menus)
	.$id.menubar.help add command -label "Dedication" -underline 0\
			-command "mike_dedication $id"
	.$id.menubar.help add command -label "About MGED" -underline 0\
			-command "do_About_MGED $id"
	hoc_register_menu_data "Help" "About MGED" "About MGED"\
			{ { summary "Information about MGED" } }
	.$id.menubar.help add command -label "Help On Context" -underline 0\
			-command "hoc_dialog .$id.menubar.help \"Help,Help On Context\""
	hoc_register_menu_data "Help" "Help On Context" "Help On Context"\
			{ { summary "The new GUI provides \"Help On Context\". This is always available via
	the right mouse button (i.e. button 3). The user can right mouse click
	on some feature of the GUI and a message window pops up with information
	about the feature. This behavior works everywhere except in the drawing
	panes (i.e. display manager windows) where a right mouse button is bound
	to \"zoom 2.0\"." } }
	.$id.menubar.help add command -label "Getting Started" -underline 0\
			-command "hoc_dialog .$id.menubar.help \"Help,Getting Started Document\""
	hoc_register_menu_data "Help" "Getting Started" "Getting Started"\
			{ { summary "This document contains information to help the user
	quickly get started using MGED." } }
	hoc_register_menu_data "Help" "Getting Started Document" "Getting Started"\
			{ { synopsis "mged \[-c\] \[-d display\] \[-h\] \[-r\] \[-x#\] \[-X#\]\
			\[database \[command\]\]" }
	{ description "The -c (Classic MGED) option causes MGED to start in the style of
	previous versions of MGED, that is, by prompting the user to select
	a display manager to attach and by remaining attached to the tty.
	Without this option MGED will detach itself from the tty and bring
	up the new GUI. The -d option provides a way to specify a display
	string. This string is expected to be in the same format as the X
	DISPLAY environment variable. The -h option causes the help message
	to print out. The -r option causes the database to be read-only (i.e.
	no editing allowed). The -x and -X options provide a way for the user
	to specify the debug level of librt and libbu, respectively. Note that
	if MGED is started by redirecting stdin or stdout, MGED will not enter
	interactive mode. Similarly, if MGED is started with a command, that
	command will be executed and MGED will exit. If the user starts MGED in
	\"Classic\" mode, the new GUI is still available. See the \"gui\" command.
	There can be many instances of the GUI running at the same time. Each
	instance of the GUI owns four display manager windows (panes) and by
	default each of these panes has its view initialized as follows:

	\t\tPane\t\tAzimuth and Elevation
	\t\tupper left\t\t0 90
	\t\tupper right\t\t35 25
	\t\tlower left\t\t0 0
	\t\tlower right\t\t90 0.

	All four panes can be displayed simultaneously, or a single large pane
	containing the active pane can be displayed (look in the \"Modes\" menu).
	The active pane is the pane that is controlled by the GUI. The active pane
	can be changed from the \"Settings\" menu, or by certain key or mouse button
	actions. Essentially, any key sequence or mouse button action that will pop
	up an MGED menu in the pane will cause the active pane to move to the pane
	wherein this action occurred. For example, alt-f will pop up the file menu
	and make this pane the active pane. Similarly, alt-Button1 will pop up the
	\"Settings\" menu and alt-Button2 will pop up the \"Modes\" menu.
	The new GUI also provides \"Help on Context\". This is always
	available via the right mouse button (i.e. button 3). The user can right
	mouse click on some feature of the GUI and a message window pops up with
	information about the feature. This behavior works everywhere except in the
	drawing panes (i.e. display manager windows) where a right mouse click is
	bound to \"zoom 2.0\".
	There are many new features and improvements in MGED providing greater
	access to its underlying power. The single greatest improvement to MGED is
	the incorporation of Tcl/Tk. Tcl (tool command language) is an interpreted
	command language that can be imbedded into an application providing the
	application with an interpreter as well as a built-in command language. Tk is
	an extension to Tcl for building GUI's. Incorporating Tcl/Tk into MGED gives
	the user the ability to develop their own commands and GUI's. Other new
	features are: command line editing similar to tcsh, multiple display managers
	opened simultaneously, shareable resources among display managers, view axes,
	model axes, edit axes, rubber banding for zoom or raytracing, support for
	color schemes, frame buffer support for display managers, snap to grid for
	accuracy with the mouse, query rays for interrogating the geometry, and
	improved solid/object/combination selection from among displayed geometry." } }
	.$id.menubar.help add command -label "Shift Grips" -underline 0\
			-command "hoc_dialog .$id.menubar.help \"Help,Shift Grips\""
	hoc_register_menu_data "Help" "Shift Grips" "Shift Grips"\
			{ { summary "			MGED offers the user a unified mouse-based interface for \"grabbing\"
	things and manipulating them.	 Since it was built for compatibility on
	top of the older interface:

	----------------------------------------
	Mouse button	View operation
	----------------------------------------
	Button-1		Zoom out
	Button-2		Recenter view at
	the specified point
	Button-3		Zoom in
	----------------------------------------

	it uses the modifier keys:	Shift, Control, and Alt.	This use of modified
	mouse clicks to grab things is called the \"shift-grip\" interface.	 The Shift
	and Control keys are assigned in combinations to the three basic transformation
	operations as follows:

	-----------------------------------------
	Modifier key	Transformation operation
	-----------------------------------------
	Shift			Translate
	Ctrl			Rotate
	Shift & Ctrl		Scale
	-----------------------------------------

	and the Alt key is assigned the meaning \"constrained transformation,\" which
	is described below.	 Thus, in general, holding the Shift key and a mouse
	button down and moving the mouse drags things around on the screen.	 The
	Control key and a mouse button allow one to rotate things, and the combination
	of Shift, Control, and a mouse button allow one to expand and contract things.
	These general functionalities are consistent throughout MGED, providing a
	unified interface.	The precise meanings of \"drag things around,\" \"rotate
	things,\" and \"expand and contract things\" depends on the operating context.
	When one is merely viewing geometry the shift grips apply by default to
	the view itself.	Thus they amount to panning, rotating, and zooming the
	eye relative to the geometry being displayed.	 When one is in solid-edit
	or matrix-edit mode (what used to be called object-edit mode), the shift
	grips apply by default to the model parameters.	 In this case, they modify
	the location, orientation, or size of object features or entire objects in
	the database.
	The default behaviors in the viewing and editing modes may be overridden
	by the \"Transform\" item in the \"Settings\" menu.	 This allows the user to
	specify that the shift grips should transform the view, the model parameters
	(if one is currently editing a solid or matrix) or the angle-distance cursor
	(in which case the mouse may be used to position the ADC, to change its angles,
	and to expand and contract its distance ticks).	 The behavior of the shift
	grips may be further changed by the \"Rotate About\" item in the \"Settings\"
	menu, which allows the user to specify the point about which shift-grip
	rotations should be performed.	The choices include the view center, the eye,
	the model origin, and an object's key point.

	CONSTRAINED TRANSFORMATIONS

	When the Alt key is held down along with either of the Shift and Control keys
	the transformations are constrained to a particular axis.	 For such
	constrained transformations the mouse buttons have the following meanings:

	------------------------
	Mouse button	Axis
	------------------------
	Button-1		 x
	Button-2		 y
	Button-3		 z
	------------------------

	Thus, if the view is being transformed, Alt-Shift-Button-1 allows one to drag
	the objects being viewed left to right along the view-x axis.	 Similarly, if
	the model parameters are being transformed, Alt-Ctrl-Button-2 allows one to
	rotate the object about a line passing through the rotate-about point (as
	described above) and parallel to a y-axis.	The coordinate system to which
	these transformations are constrained may be specified by the \"Constraint
	Coords\" item in the \"Settings\" menu, which allows the selection of any one of
	the model, view, and object coordinate systems.
	" } }
	.$id.menubar.help add command -label "Commands" -underline 0\
			-command "command_help $id"
	hoc_register_menu_data "Help" "Commands" "Commands"\
			{ { summary "Tool for getting information on MGED's commands." }
	{ see_also "?, help" } }
	.$id.menubar.help add command -label "Apropos" -underline 1\
			-command "ia_apropos .$id $screen"
	hoc_register_menu_data "Help" "Apropos" "Apropos"\
			{ { summary "Tool for searching for information about
	MGED's commands." }
	{ see_also "apropos" } }

	set web_cmd "exec \$mged_browser -display $screen \
			\$mged_html_dir/index.html 2> /dev/null &"

	.$id.menubar.help add command -label "Manual" -underline 0 -command $web_cmd
	hoc_register_menu_data "Help" "Manual" "Manual"\
			{ { summary "Start a tool for browsing the online MGED manual.
	The web browser that gets started is dependent, first, on the
	WEB_BROWSER environment variable. If this variable exists and
	the browser identified by this variable exists, then that browser
	is used. Failing that the browser specified by the
	mged_default(web_browser) Tcl variable is tried. As a last
	resort the existence of /usr/bin/netscape, /usr/local/bin/netscape
	and /usr/X11/bin/netscape is checked. If a browser has still not
	been located, the built-in Tcl browser is used." } }

	#==============================================================================
	# PHASE 3: Bottom-row display
	#==============================================================================
	frame .$id.status
	frame .$id.status.dpy
	frame .$id.status.illum

	label .$id.status.cent -textvar mged_display($mged_gui($id,active_dm),center) -anchor w
	hoc_register_data .$id.status.cent "View Center"\
			{ { summary "These numbers indicate the view center in\nmodel coordinates (local units)." }
	{ see_also "center, view" } }
	label .$id.status.size -textvar mged_display($mged_gui($id,active_dm),size) -anchor w
	hoc_register_data .$id.status.size "View Size"\
			{ { summary "This number indicates the view size (local units)." }
	{ see_also size} }
	label .$id.status.units -textvar mged_display(units) -anchor w -padx 4
	hoc_register_data .$id.status.units "Units"\
			{ { summary "This indicates the local units.		 " }
	{ see_also units} }
	label .$id.status.aet -textvar mged_display($mged_gui($id,active_dm),aet) -anchor w
	hoc_register_data .$id.status.aet "View Orientation"\
			{ { summary "These numbers indicate the view orientation using azimuth,\nelevation and twist." }
	{ see_also "ae, view" } }
	label .$id.status.ang -textvar mged_display($mged_gui($id,active_dm),ang) -anchor w -padx 4
	hoc_register_data .$id.status.ang "Rateknobs"\
			{ { summary "These numbers give some indication of\nrate of rotation about the x,y,z axes." }
	{ see_also knob} }
	label .$id.status.illum.label -textvar mged_gui($id,illum_label)
	hoc_register_data .$id.status.illum.label "Status Area"\
			{ { summary "This area is for displaying either the frames per second,
	the illuminated path, the keypoint during an edit
	or the ADC attributes." } }

	#==============================================================================
	# PHASE 4: Text widget for interaction
	#==============================================================================
	frame .$id.tf
	if {$comb} {
		text .$id.t -height $mged_gui($id,num_lines) \
				-relief sunken -bd 2 -yscrollcommand ".$id.s set"
	} else {
		text .$id.t -relief sunken -bd 2 -yscrollcommand ".$id.s set"
	}
	scrollbar .$id.s -relief flat -command ".$id.t yview"

        if { $::tcl_platform(platform) != "windows" && $::tcl_platform(os) != "Darwin" } {
            bind .$id.t <Enter> "focus .$id.t; break"
        } else {
             # some platforms should not be forced window activiation
            focus .$id.t
        }

	hoc_register_data .$id.t "Command Window"\
			{ { summary "This is MGED's default command window. Its main
	function is to allow the user to enter commands.
	The command window supports command line editing
	and command history. The two supported command line
	edit modes are emacs and vi. Look under File/
	Preferences/Command_Line_Edit to change the edit mode.

	There are also two command interpretation modes. One
	is where MGED performs object name matching (i.e. globbing
	against the database) before passing the command line to MGED's
	built-in Tcl interpreter. This is the same behavior seen
	in previous releases. The other command interpretation
	mode (Tcl Evaluation) passes the command line directly to
	the Tcl interpreter. Look under File/Preferences/
	Special_Characters to change the interpetation mode.

	The command window also supports cut and paste as well
	as text scrolling. The default bindings for these operations
	are similar to those found in typical X Window applications
	such as xterm. For example:

	ButtonPress-1						begin text selection
	ButtonRelease-1					end text selection
	Button1-Motion				 add to text selection
	Shift-Button1						 modify text selection
	Double-Button-1				 select word
	Triple-Button-1					select line
	ButtonPress-2						begin text operation
	ButtonRelease-2				 paste text
	Button2-Motion				 scroll text

	Note - If motion was detected while Button2 was
	being pressed, no text will be pasted. In this case,
	it is assumed that scrolling was the intended operation.
	The user can also scroll the window using the scrollbar." } }

	set mged_gui($id,edit_style) $mged_default(edit_style)
	set mged_gui(.$id.t,insert_char_flag) 0
	set_text_key_bindings $id
	set_text_button_bindings .$id.t

	set mged_gui($id,cmd_prefix) ""
	set mged_gui($id,more_default) ""
	mged_print_prompt .$id.t "mged> "
	.$id.t insert insert " "
	beginning_of_line .$id.t
	set mged_gui(.$id.t,moveView) 0
	set mged_gui(.$id.t,freshline) 1
	set mged_gui(.$id.t,scratchline) ""
	set vi_state(.$id.t,overwrite_flag) 0
	set vi_state(.$id.t,change_flag) 0
	set vi_state(.$id.t,delete_flag) 0
	set vi_state(.$id.t,search_flag) 0
	set vi_state(.$id.t,search_char) ""
	set vi_state(.$id.t,search_dir) ""

	.$id.t tag configure sel -background #fefe8e
	.$id.t tag configure result -foreground blue3
	.$id.t tag configure oldcmd -foreground red3
	.$id.t tag configure prompt -foreground red1

	#==============================================================================
	# Pack windows
	#==============================================================================
	setupmv $id
	setmv $id

	if { $comb } {
		if { $mged_gui($id,show_dm) } {
			grid $mged_gui($id,dmc) -sticky nsew -row 0 -column 0
		}
	}

	grid .$id.t .$id.s -in .$id.tf -sticky "nsew"
	grid columnconfigure .$id.tf 0 -weight 1
	grid rowconfigure .$id.tf 0 -weight 1

	if { !$comb || ($comb && $mged_gui($id,show_cmd)) } {
		grid .$id.tf -sticky "nsew" -row 1 -column 0
	}

	grid .$id.status.cent .$id.status.size .$id.status.units .$id.status.aet\
			.$id.status.ang x -in .$id.status.dpy -sticky "ew"
	grid columnconfigure .$id.status.dpy 5 -weight 1
	grid .$id.status.dpy -sticky "ew"
	grid .$id.status.illum.label x -sticky "ew"
	grid columnconfigure .$id.status.illum 1 -weight 1
	grid .$id.status.illum -sticky "w"
	grid columnconfigure .$id.status 0 -weight 1

	if { $mged_gui($id,show_status) } {
		grid .$id.status -sticky "ew" -row 2 -column 0
	}

	grid columnconfigure .$id 0 -weight 1
	if { $comb } {
		# let only the display manager window grow
		grid rowconfigure .$id 0 -weight 1
	} else {
		# let only the text window (i.e. enter commands here) grow
		grid rowconfigure .$id 1 -weight 1
	}

	#==============================================================================
	# PHASE 5: Creation of other auxilary windows
	#==============================================================================
	mview_build_menubar $id

	#==============================================================================
	# PHASE 6: Further setup
	#==============================================================================
	if {[info procs cad_MenuFirstEntry] == ""} {
		# trigger the Tcl source file to be loaded
		cad_MenuFirstEntry ""
	}

	cmd_win open $id
	_mged_tie $id $mged_gui($id,active_dm)
	reconfig_gui_default $id

	# Force display manager windows to update their respective color schemes
	mged_apply_local $id "rset cs mode 0"
	rset cs mode 1

	if { $join_c } {
		collaborate join $id
	}

	trace variable mged_display($mged_gui($id,active_dm),fps) w "ia_changestate $id"
	update_mged_vars $id
	set mged_gui($id,qray_effects) [qray effects]

	# reset current_cmd_list so that its cur_hist gets updated
	cmd_win set $save_id

	# cause all 4 windows to share menu state
	share m $mged_gui($id,top).ul $mged_gui($id,top).ur
	share m $mged_gui($id,top).ul $mged_gui($id,top).ll
	share m $mged_gui($id,top).ul $mged_gui($id,top).lr

	do_rebind_keys $id

	# Throw away key events
	bind $mged_gui($id,top) <KeyPress> { break }
	bind $mged_gui($id,top) <Configure> "mged_handle_configure $id"

	set dbname [_mged_opendb]
	set_wm_title $id $dbname

	# set the size here in case the user didn't specify it in mged_default(ggeom)
	set height [expr [winfo screenheight $mged_gui($id,top)] - 70]
	set width $height
	wm geometry $mged_gui($id,top) $width\x$height

	# set geometry (i.e. size and position) according to mged_default(ggeom)
	wm geometry $mged_gui($id,top) $mged_default(ggeom)

	wm protocol $mged_gui($id,top) WM_DELETE_WINDOW "gui_destroy $id"

	if { $comb } {
		if { !$mged_gui($id,show_dm) } {
			update
			set_dm_win $id
		}
	} else {
		wm geometry .$id $mged_default(geom)
		update

		# Prevent command window from resizing itself as labels change
		set geometry [wm geometry .$id]
		wm geometry .$id $geometry
	}
}

proc gui_destroy args {
	global mged_gui
	global mged_players
	global mged_collaborators

	if { [llength $args] != 1 } {
		return [help gui_destroy]
	}

	set id [lindex $args 0]

	set i [lsearch -exact $mged_players $id]
	if { $i == -1 } {
		return "gui_destroy: bad id - $id"
	}
	set mged_players [lreplace $mged_players $i $i]

	if { [lsearch -exact $mged_collaborators $id] != -1 } {
		collaborate quit $id
	}

	set mged_gui($id,multi_pane) 0
	set mged_gui($id,show_edit_info) 0

	releasemv $id
	catch { cmd_win close $id }
	catch { destroy .mmenu$id }
	catch { destroy .sliders$id }
	catch { destroy $mged_gui($id,top) }
	catch { destroy .$id }
}

proc reconfig_gui_default { id } {
	global mged_display

	cmd_win set $id
	set dm_id [_mged_tie $id]
	if { [llength $dm_id] != 1 } {
		return
	}

	.$id.status.cent configure -textvar mged_display($dm_id,center)
	.$id.status.size configure -textvar mged_display($dm_id,size)
	.$id.status.units configure -textvar mged_display(units)

	.$id.status.aet configure -textvar mged_display($dm_id,aet)
	.$id.status.ang configure -textvar mged_display($dm_id,ang)

	#		 update_view_ring_entries $id s
	#		 update_view_ring_entries $id d
	#		 reconfig_mmenu $id
}

proc reconfig_all_gui_default {} {
	global mged_collaborators

	foreach id $mged_collaborators {
		reconfig_gui_default $id
	}
}

proc update_mged_vars { id } {
	global mged_gui
	global forwarding_key
	global rateknobs
	global use_air
	global listen
	global fb
	global fb_all
	global fb_overlay
	global dlist
	global mouse_behavior
	global coords
	global rotate_about
	global transform
	global faceplate
	global perspective_mode
	global orig_gui

	winset $mged_gui($id,active_dm)
	set mged_gui($id,rateknobs) $rateknobs
	if {![catch {adc draw} result]} {
		set mged_gui($id,adc_draw) $result
	}
	set mged_gui($id,model_draw) [rset ax model_draw]
	set mged_gui($id,view_draw) [rset ax view_draw]
	set mged_gui($id,edit_draw) [rset ax edit_draw]
	set mged($id,use_air) $use_air
	set mged_gui($id,fb) $fb
	set mged_gui($id,fb_all) $fb_all
	set mged_gui($id,fb_overlay) $fb_overlay
	set mged_gui($id,dlist) $dlist
	set mged_gui($id,rubber_band) [rset rb draw]
	set mged_gui($id,mouse_behavior) $mouse_behavior
	set mged_gui($id,coords) $coords
	set mged_gui($id,rotate_about) $rotate_about
	set mged_gui($id,transform) $transform
	set mged_gui($id,grid_draw) [rset grid draw]
	set mged_gui($id,draw_snap) [rset grid snap]
	set mged_gui($id,faceplate) $faceplate
	set mged_gui($id,zclip) [dm set zclip]
	set mged_gui($id,perspective_mode) $perspective_mode
	set mged_gui($id,orig_gui) $orig_gui
	set mged_gui($id,forward_keys) $forwarding_key($mged_gui($id,active_dm))

	if {$mged_gui($id,dtype) == "ogl"} {
		set mged_gui($id,depthcue) [dm set depthcue]
		set mged_gui($id,zbuffer) [dm set zbuffer]
		set mged_gui($id,lighting) [dm set lighting]
	}

	set mged_gui($id,listen) $listen
	set_mged_v_axes_pos $id
}

proc set_mged_v_axes_pos { id } {
	global mged_gui

	set view_pos [rset ax view_pos]
	set hpos [lindex $view_pos 0]
	set vpos [lindex $view_pos 1]

	if {$hpos == 0 && $vpos == 0} {
		set mged_gui($id,view_pos) 0
	} elseif {$hpos < 0 && $vpos < 0} {
		set mged_gui($id,view_pos) 1
	} elseif {$hpos < 0 && $vpos > 0} {
		set mged_gui($id,view_pos) 2
	} elseif {$hpos > 0 && $vpos > 0} {
		set mged_gui($id,view_pos) 3
	} else {
		set mged_gui($id,view_pos) 4
	}
}

proc toggle_button_menu { id } {
	global mged_gui

	if {[ winfo exists .mmenu$id ]} {
		destroy .mmenu$id
		set mged_gui($id,classic_buttons) 0
		return
	}

	mmenu_init $id
}

proc toggle_edit_info { id } {
	global mged_gui
	global mged_display

	if {$mged_gui($id,show_edit_info)} {
		if {$mged_display(state) == "SOL EDIT"} {
			init_edit_solid_int $id
		} elseif {$mged_display(state) == "OBJ EDIT"} {
			build_edit_info $id
		}
	} else {
		if {$mged_display(state) == "SOL EDIT"} {
			esolint_destroy $id
		} elseif {$mged_display(state) == "OBJ EDIT"} {
			destroy_edit_info $id
		}
	}
}

proc build_edit_info { id } {
	global mged_gui

	if {[winfo exists .sei$id]} {
		raise .sei$id
		return
	}

	if {$mged_gui($id,show_edit_info)} {
		toplevel .sei$id -screen $mged_gui($id,screen)
		label .sei$id.l -bg black -fg yellow -textvar edit_info
		pack .sei$id.l -expand 1 -fill both

		wm title .sei$id "$id\'s Edit Info"
		wm protocol .sei$id WM_DELETE_WINDOW "destroy_edit_info $id"
		wm geometry .sei$id $mged_gui($id,edit_info_pos)
	}
}

proc destroy_edit_info { id } {
	global mged_gui

	if {![winfo exists .sei$id]} {
		return
	}

	regexp "\[-+\]\[0-9\]+\[-+\]\[0-9\]+" [wm geometry .sei$id] match
	set mged_gui($id,edit_info_pos) $match
	destroy .sei$id
}

# Print Mged Players
proc pmp {} {
	global mged_players

	return $mged_players
}

proc set_active_dm { id } {
	global mged_gui
	global mged_display
	global view_ring

	set new_dm $mged_gui($id,top).$mged_gui($id,dm_loc)

	# Nothing to do
	if { $new_dm == $mged_gui($id,active_dm) } {
		return
	}

	trace vdelete mged_display($mged_gui($id,active_dm),fps) w "ia_changestate $id"

	# make inactive
	winset $mged_gui($id,active_dm)
	rset cs mode 0

	set mged_gui($id,active_dm) $new_dm

	# make active
	winset $mged_gui($id,active_dm)
	rset cs mode 1

	trace variable mged_display($mged_gui($id,active_dm),fps) w "ia_changestate $id"

	update_mged_vars $id
	#		 set view_ring($id) [view_ring get]

	_mged_tie $id $mged_gui($id,active_dm)
	reconfig_gui_default $id

	if {!$mged_gui($id,multi_pane)} {
		setmv $id
	}

	# XXXX this is already done in the call to reconfig_gui_default above
	# update view_ring entries
	#		 update_view_ring_entries $id s
	#		 update_view_ring_entries $id d

	# update adc control panel
	adc_load $id

	# update grid control panel
	grid_control_reset $id

	# update query ray control panel
	qray_reset $id

	set dbname [_mged_opendb]
	set_wm_title $id $dbname
}

proc set_wm_title { id dbname } {
	global mged_gui
	global version

	set ver [lindex $version 2]

	if {$mged_gui($id,top) == $mged_gui($id,dmc)} {
		if {$mged_gui($id,dm_loc) == "ul"} {
			wm title $mged_gui($id,top) "MGED $ver Graphics Window ($id) - $dbname - Upper Left"
			wm title .$id "MGED $ver Command Window ($id) - $dbname - Upper Left"
		} elseif {$mged_gui($id,dm_loc) == "ur"} {
			wm title $mged_gui($id,top) "MGED $ver Graphics Window ($id) - $dbname - Upper Right"
			wm title .$id "MGED $ver Command Window ($id) - $dbname - Upper Right"
		} elseif {$mged_gui($id,dm_loc) == "ll"} {
			wm title $mged_gui($id,top) "MGED $ver Graphics Window ($id) - $dbname - Lower Left"
			wm title .$id "MGED $ver Command Window ($id) - $dbname - Lower Left"
		} elseif {$mged_gui($id,dm_loc) == "lr"} {
			wm title $mged_gui($id,top) "MGED $ver Graphics Window ($id) - $dbname - Lower Right"
			wm title .$id "MGED $ver Command Window ($id) - $dbname - Lower Right"
		}
	} else {
		if {$mged_gui($id,dm_loc) == "ul"} {
			wm title $mged_gui($id,top) "MGED $ver Command Window ($id) - $dbname - Upper Left"
		} elseif {$mged_gui($id,dm_loc) == "ur"} {
			wm title $mged_gui($id,top) "MGED $ver Command Window ($id) - $dbname - Upper Right"
		} elseif {$mged_gui($id,dm_loc) == "ll"} {
			wm title $mged_gui($id,top) "MGED $ver Command Window ($id) - $dbname - Lower Left"
		} elseif {$mged_gui($id,dm_loc) == "lr"} {
			wm title $mged_gui($id,top) "MGED $ver Command Window ($id) - $dbname - Lower Right"
		}
	}
}

proc set_cmd_win { id } {
	global mged_gui

	if { $mged_gui($id,show_cmd) } {
		if { $mged_gui($id,show_dm) } {
			.$id.t configure -height $mged_gui($id,num_lines)
			grid .$id.tf -sticky nsew -row 1 -column 0
		} else {
			grid .$id.tf -sticky nsew -row 0 -column 0
		}
	} else {
		grid forget .$id.tf

		if { !$mged_gui($id,show_dm) } {
			set mged_gui($id,show_dm) 1
			grid $mged_gui($id,dmc) -sticky nsew -row 0 -column 0
			update
			setmv $id
		}
	}
}

proc set_dm_win { id } {
	global mged_gui

	if { $mged_gui($id,show_dm) } {
		if { $mged_gui($id,show_cmd) } {
			grid forget .$id.tf
			.$id.t configure -height $mged_gui($id,num_lines)
			update
		}

		grid $mged_gui($id,dmc) -sticky nsew -row 0 -column 0

		if { $mged_gui($id,show_cmd) } {
			grid .$id.tf -sticky nsew -row 1 -column 0
			update
			.$id.t see end
		}

		setmv $id
	} else {
		grid forget $mged_gui($id,dmc)
		
		set mged_gui($id,show_cmd) 1
		set_cmd_win $id
		set fh [get_font_height .$id.t]
		set h [winfo height $mged_gui($id,top)]

		if { $mged_gui($id,show_status) } {
			set h [expr $h - [winfo height .$id.status]]
		}

		set nlines [expr $h / $fh]
		.$id.t configure -height $nlines
	}
}

proc view_ring_add {id} {
	global mged_gui
	global mged_default
	global view_ring
	global mged_collaborators

	winset $mged_gui($id,active_dm)

	# already have 10 views in the view ring, ignore add
	if {$mged_default(max_views) <= [llength $mged_gui($id,views)]} {
		return
	}

	# calculate a view id for the new view
	set vid [.$id.menubar.viewring.select entrycget end -value]
	if {$vid == ""} {
		set vid 0
	} else {
		incr vid
	}

	# get view parameters
	set aet [_mged_ae]
	set center [_mged_center]
	set size [_mged_size]

	# save view commands
	set vcmds "_mged_ae $aet; _mged_center $center; _mged_size $size"

	# format view parameters for display in menu
	set aet [format "az=%.2f el=%.2f tw=%.2f" \
			[lindex $aet 0] [lindex $aet 1] [lindex $aet 2]]
	set center [format "cent=(%.3f %.3f %.3f)" \
			[lindex $center 0] [lindex $center 1] [lindex $center 2]]
	set size [format "size=%.3f" $size]

	if {[lsearch -exact $mged_collaborators $id] != -1} {
		foreach cid $mged_collaborators {
			# append view commands to view list
			lappend mged_gui($cid,views) $vcmds

			.$cid.menubar.viewring.select add radiobutton -value $vid -variable view_ring($cid) \
					-label "$center $size $aet" -command "view_ring_goto $cid $vid"
			.$cid.menubar.viewring.delete add command -label "$center $size $aet" \
					-command "view_ring_delete $cid $vid"

			# remember the last selected radiobutton
			set view_ring($cid,prev) $view_ring($cid)

			# update radio buttons
			set view_ring($cid) $vid
		}
	} else {
		# append view commands to view list
		lappend mged_gui($id,views) $vcmds

		.$id.menubar.viewring.select add radiobutton -value $vid -variable view_ring($id) \
				-label "$center $size $aet" -command "view_ring_goto $id $vid"
		.$id.menubar.viewring.delete add command -label "$center $size $aet" \
				-command "view_ring_delete $id $vid"

		# remember the last selected radiobutton
		set view_ring($id,prev) $view_ring($id)

		# update radio buttons
		set view_ring($id) $vid
	}
}

proc find_view_index {vid vi_in m} {
	global mged_default
	upvar $vi_in vi

	# find view index of menu entry whose value is $vid
	for {set vi 0} {$vi < $mged_default(max_views)} {incr vi} {
		if {[$m entrycget $vi -value] == $vid} {
			return 1
		}
	}

	return 0
}

#
# Note - the view index (vi) corresponds to both the menu entry
#				 and the view command list (mged_gui($id,views)) entry.
#				 The view id (vid) is a value that corresponds to one of
#				 the radiobutton entries.
#
proc view_ring_set_view {id vid vi} {
	global mged_gui
	global mged_collaborators
	global view_ring

	# we're collaborating, so update collaborators
	if {[lsearch -exact $mged_collaborators $id] != -1 && \
			"$mged_gui($id,top).ur" == "$mged_gui($id,active_dm)"} {
		foreach cid $mged_collaborators {
			if {"$mged_gui($cid,top).ur" == "$mged_gui($cid,active_dm)"} {
				set view_ring($cid,prev) $view_ring($cid)
				set view_ring($cid) $vid
				winset $mged_gui($cid,active_dm)
				eval [lindex $mged_gui($cid,views) $vi]
			}
		}
	} else {
		set view_ring($id,prev) $view_ring($id)
		set view_ring($id) $vid
		winset $mged_gui($id,active_dm)
		eval [lindex $mged_gui($id,views) $vi]
	}
}

proc view_ring_delete {id vid} {
	global mged_gui
	global mged_default
	global view_ring
	global mged_collaborators

	#		 winset $mged_gui($id,active_dm)

	if {![find_view_index $vid vi .$id.menubar.viewring.select]} {
		return
	}

	# we're collaborating, so update collaborators
	if {[lsearch -exact $mged_collaborators $id] != -1} {
		foreach cid $mged_collaborators {
			.$cid.menubar.viewring.select delete $vi
			.$cid.menubar.viewring.delete delete $vi
			set mged_gui($cid,views) [lreplace $mged_gui($cid,views) $vi $vi]
			set view_ring($cid) 0
			set view_ring($cid,prev) 0
		}
	} else {
		.$id.menubar.viewring.select delete $vi
		.$id.menubar.viewring.delete delete $vi
		set mged_gui($id,views) [lreplace $mged_gui($id,views) $vi $vi]
		set view_ring($id) 0
		set view_ring($id,prev) 0
	}
}

#
# This gets called when the .$id.menubar.viewring.select menu is posted
# to capture the current value of view_ring($id) before it gets
# modified by selecting one of the entries (i.e. view_ring($id) is tied
# to the radiobuttons).
#
proc view_ring_save_curr {id} {
	global view_ring

	set view_ring($id,curr) $view_ring($id)
}

proc view_ring_goto {id vid} {
	global mged_gui
	global mged_default
	global view_ring
	global mged_collaborators

	#		 winset $mged_gui($id,active_dm)

	if {![find_view_index $vid vi .$id.menubar.viewring.select]} {
		return
	}

	# Since view_ring(id) has been modified by the radiobutton, we'll put
	# it back the way it was for now. view_ring_set_view will restore it again.
	# This is done so that view_ring(id,prev) gets updated properly.
	set view_ring($id) $view_ring($id,curr)
	view_ring_set_view $id $vid $vi
}

proc view_ring_next {id} {
	global mged_gui
	global view_ring

	#		 winset $mged_gui($id,active_dm)

	# find view index of menu entry whose value is $view_ring($id)
	if {![find_view_index $view_ring($id) vi .$id.menubar.viewring.select]} {
		return
	}

	# advance view index to next
	incr vi

	# see if we have to wrap
	if {[.$id.menubar.viewring.select index end] < $vi} {
		set vi 0
	}

	set vid [.$id.menubar.viewring.select entrycget $vi -value]
	view_ring_set_view $id $vid $vi
}

proc view_ring_prev {id} {
	global mged_gui
	global view_ring

	#		 winset $mged_gui($id,active_dm)

	# find view index of menu entry whose value is $view_ring($id)
	if {![find_view_index $view_ring($id) vi .$id.menubar.viewring.select]} {
		return
	}

	# advance view index to next
	incr vi -1

	# see if we have to wrap
	if {$vi < 0} {
		set vi [.$id.menubar.viewring.select index end]
	}

	set vid [.$id.menubar.viewring.select entrycget $vi -value]
	view_ring_set_view $id $vid $vi
}

proc view_ring_toggle {id} {
	global mged_gui
	global view_ring

	# validate view_ring(id)
	if {![find_view_index $view_ring($id) vi .$id.menubar.viewring.select]} {
		return
	}

	# validate view_ring(id,prev) and find its corresponding menu view index 
	if {![find_view_index $view_ring($id,prev) vi_prev .$id.menubar.viewring.select]} {
		return
	}

	view_ring_set_view $id $view_ring($id,prev) $vi_prev
}

proc view_ring_copy {from to} {
	global mged_gui
	global view_ring

	# first, delete all menu entries in select and delete menus
	.$to.menubar.viewring.select delete 0 end
	.$to.menubar.viewring.delete delete 0 end

	# update list of views
	set mged_gui($to,views) $mged_gui($from,views)

	# redo the select and delete menus
	set len [llength $mged_gui($to,views)]
	for {set i 0} {$i < $len} {incr i} {
		# get the label from the from_menu
		set label [.$from.menubar.viewring.select entrycget $i -label]

		# get the value/view_id from the from_menu
		set vid [.$from.menubar.viewring.select entrycget $i -value]

		# recreate the entries for the select and delete menus
		.$to.menubar.viewring.select add radiobutton -value $vid -variable view_ring($to) \
				-label $label -command "view_ring_goto $to $vid"
		.$to.menubar.viewring.delete add command -label $label \
				-command "view_ring_delete $to $vid"
	}
}

proc update_view_ring_entries { id m } {
	global view_ring

	if {0} {
		set views [view_ring get -a]
		set llen [llength $views]

		if {$m == "s"} {
			set w .$id.menubar.viewring.select
			$w delete 0 end
			for {set i 0} {$i < $llen} {incr i} {
				$w add radiobutton -value [lindex $views $i] -variable view_ring($id)\
						-label [lindex $views $i] -command "view_ring_goto $id [lindex $views $i]"
			}
		} elseif {$m == "d"} {
			set w .$id.menubar.viewring.delete
			$w delete 0 end
			for {set i 0} {$i < $llen} {incr i} {
				$w add command -label [lindex $views $i]\
						-command "view_ring_delete $id [lindex $views $i]"
			}
		} else {
			puts "Usage: update_view_ring_entries w s|d"
		}
	}
}

proc update_view_ring_labels { id } {
	global mged_gui
	global view_ring

	if {0} {
		if {[_mged_opendb] == ""} {
			error "No database has been opened!"
		}

		winset $mged_gui($id,active_dm)
		set view_ring($id) [view_ring get]
		set views [view_ring get -a]
		set llen [llength $views]

		# we need to also save the previous view so that
		# toggle will continue to work
		view_ring toggle
		set prev [view_ring get]

		set ws .$id.menubar.viewring.select
		set wd .$id.menubar.viewring.delete
		for {set i 0} {$i < $llen} {incr i} {
			view_ring goto [lindex $views $i]
			set aet [view aet]
			set aet [format "az=%.2f el=%.2f tw=%.2f"\
					[lindex $aet 0] [lindex $aet 1] [lindex $aet 2]]
			set center [view center]
			set center [format "cent=(%.3f %.3f %.3f)"\
					[lindex $center 0] [lindex $center 1] [lindex $center 2]]
			set size [format "size=%.3f" [view size]]
			$ws entryconfigure $i -label "$center $size $aet"
			$wd entryconfigure $i -label "$center $size $aet"
		}

		# restore both previous and current views
		view_ring goto $prev
		view_ring goto $view_ring($id)
	}
}

proc toggle_status_bar { id } {
	global mged_gui

	if {$mged_gui($id,show_status)} {
		grid .$id.status -sticky ew -row 2 -column 0
	} else {
		grid forget .$id.status
	}
}

proc set_transform { id } {
	global mged_gui
	global transform

	winset $mged_gui($id,top).ul
	set transform $mged_gui($id,transform)
	default_mouse_bindings $mged_gui($id,top).ul

	winset $mged_gui($id,top).ur
	set transform $mged_gui($id,transform)
	default_mouse_bindings $mged_gui($id,top).ur

	winset $mged_gui($id,top).ll
	set transform $mged_gui($id,transform)
	default_mouse_bindings $mged_gui($id,top).ll

	winset $mged_gui($id,top).lr
	set transform $mged_gui($id,transform)
	default_mouse_bindings $mged_gui($id,top).lr

	winset $mged_gui($id,active_dm)
}

proc do_rebind_keys { id } {
	global mged_gui

	bind $mged_gui($id,top).ul <Control-n> "winset $mged_gui($id,top).ul; view_ring_next $id; break" 
	bind $mged_gui($id,top).ur <Control-n> "winset $mged_gui($id,top).ur; view_ring_next $id; break" 
	bind $mged_gui($id,top).ll <Control-n> "winset $mged_gui($id,top).ll; view_ring_next $id; break" 
	bind $mged_gui($id,top).lr <Control-n> "winset $mged_gui($id,top).lr; view_ring_next $id; break" 

	bind $mged_gui($id,top).ul <Control-p> "winset $mged_gui($id,top).ul; view_ring_prev $id; break" 
	bind $mged_gui($id,top).ur <Control-p> "winset $mged_gui($id,top).ur; view_ring_prev $id; break" 
	bind $mged_gui($id,top).ll <Control-p> "winset $mged_gui($id,top).ll; view_ring_prev $id; break" 
	bind $mged_gui($id,top).lr <Control-p> "winset $mged_gui($id,top).lr; view_ring_prev $id; break" 

	bind $mged_gui($id,top).ul <Control-t> "winset $mged_gui($id,top).ul; view_ring_toggle $id; break" 
	bind $mged_gui($id,top).ur <Control-t> "winset $mged_gui($id,top).ur; view_ring_toggle $id; break" 
	bind $mged_gui($id,top).ll <Control-t> "winset $mged_gui($id,top).ll; view_ring_toggle $id; break" 
	bind $mged_gui($id,top).lr <Control-t> "winset $mged_gui($id,top).lr; view_ring_toggle $id; break" 
}

proc adc { args } {
	global mged_gui
	global transform

	set result [eval _mged_adc $args]

	# toggling ADC on/off
	if { ![llength $args] } {
		set dm_id [winset]
		set tie_list [_mged_tie]
		set id mged

		# see if dm_id is tied to a command window
		foreach pair $tie_list {
			if { [lindex $pair 1] == $dm_id } {
				set id [lindex $pair 0]
				break
			}
		}

		if {[info exists mged_gui($id,adc_draw)]} {
			set mged_gui($id,adc_draw) [_mged_adc draw]
		}

		default_mouse_bindings [winset]
	}

	return $result
}

proc set_listen { id } {
	global mged_gui
	global listen

	mged_apply $id "set listen \$mged_gui($id,listen)"

	# In case things didn't work.
	set mged_gui($id,listen) $listen
}

proc set_fb { id } {
	global mged_gui
	global fb
	global listen

	mged_apply $id "set fb \$mged_gui($id,fb)"
	if {$fb && !$listen} {
		mged_apply $id "set listen 1"
	}

	set mged_gui($id,listen) $listen

	# update raytrace control panel
	rt_update_dest $id
}

proc set_mouse_behavior { id } {
	global mged_gui

	mged_apply $id "set mouse_behavior $mged_gui($id,mouse_behavior); refresh"

	switch $mged_gui($id,mouse_behavior) {
		"o" {
			# use the entire framebuffer
			set mged_gui($id,fb_all) 1
			mged_apply $id "set fb_all 1"
		}
		"p" -
		"r" {
			# use only the area of the framebuffer specified by the rectangle
			set mged_gui($id,fb_all) 0
			mged_apply $id "set fb_all 0"

			# activate the framebuffer
			set mged_gui($id,fb) 1
			set_fb $id
		}
	}

	# update raytrace control panel
	rt_update_src $id
}

proc get_font_height { w } {
	if { [winfo class $w] != "Text" } {
		return 0
	}

	set tmp_font [$w cget -font]

	return [font metrics $tmp_font -linespace]
}

proc get_cmd_win_height { id } {
	global mged_gui

	set fh [get_font_height .$id.t]

	return [expr $fh * $mged_gui($id,num_lines)]
}

proc mged_handle_configure { id } {
	if {[winfo exists .$id.rt]} {
		rt_handle_configure $id
	}
}

proc mged_draw_grid {id} {
	global mged_gui

	winset $mged_gui($id,active_dm)
	mged_apply $id "rset grid draw $mged_gui($id,grid_draw)"

	# Reconcile the Tcl grid_draw with the internal grid_draw.
	# Note - the internal grid_draw cannot be set to 1 if a database
	#				 is not currently open (i.e. dbip == DBI_NULL).
	set mged_gui($id,grid_draw) [rset grid draw]
}
@


1.135
log
@do not do focus-follows-mouse when we are on windows or mac
@
text
@@


1.134
log
@update copyright to include span through 2003
@
text
@d206 1
a206 1
				} elseif { ($tcl_platform(os) == "Darwin") && [file exists $path/open] } {
d2122 7
a2128 1
	bind .$id.t <Enter> "focus .$id.t; break"
@


1.133
log
@Added "fconfigure" for stdout to get correct EOL translation
@
text
@d14 1
a14 1
#				This software is Copyright (C) 1998 by the United States Army
@


1.133.4.1
log
@merge from HEAD
@
text
@d14 1
a14 1
#				This software is Copyright (C) 1998-2004 by the United States Army
@


1.133.4.2
log
@merge from head
@
text
@d206 1
a206 1
				} elseif { ($::tcl_platform(os) == "Darwin") && [file exists $path/open] } {
d2122 1
a2122 7
        if { $::tcl_platform(platform) != "windows" && $::tcl_platform(os) != "Darwin" } {
            bind .$id.t <Enter> "focus .$id.t; break"
        } else {
             # some platforms should not be forced window activiation
            focus .$id.t
        }

@


1.132
log
@Corrected conflict in shortcut for "Clear Command Window" menu item
@
text
@d261 12
@


1.131
log
@Added "Clear Command Window" menu item and eliminated "Close" item
@
text
@d510 1
a510 1
        .$id.menubar.file add command -label "Clear Command Window" -underline 1 \
@


1.130
log
@*** empty log message ***
@
text
@d510 4
a513 5
	.$id.menubar.file add command -label "Close" -underline 0 \
			-command "closedb"
	hoc_register_menu_data "File" "Close" "Close Database"\
			{ { summary "Close any presently open database." }
	{ see_also opendb } }
a2283 11

	set num_players [llength $mged_players]
	switch $num_players {
		1 {
			.$id.menubar.file entryconfigure 14 -state disabled
		}
		2 {
			set id [lindex $mged_players 0]
			.$id.menubar.file entryconfigure 14 -state normal
		}
	}
a2315 10

# this will disable the File->Close option
# XXX this should be disabled initially, and then enabled during an opendb or
# a file->open action.
#
	if { [llength $mged_players] == 1 } {
		set id [lindex $mged_players 0]
		.$id.menubar.file entryconfigure 14 -state disabled
	}

@


1.129
log
@Added "zbuffer" and "lighting" to the values remembered in .mgedrc
@
text
@a202 4
				} elseif { [file exists $path/open] } {
					# open is the Darwin command equivalent to double-clicking a file icon (an open the file with the system default browser)
					set mged_browser $path/open
					break;
d206 3
d240 1
a240 1
set tkPriv(wait_cmd) mged_wait
d244 1
a244 1
set tkPriv(cad_dialog) .mged_dialog
@


1.128
log
@The "Create/Update .mgedrc" menu item now really does update to current settings
@
text
@d161 8
@


1.127
log
@Added geometree command to Edit menu
@
text
@d498 1
a498 1
	.$id.menubar.file add command -label "Create/Initialize .mgedrc" -underline 0 \
d500 2
a501 2
	hoc_register_menu_data "File" "Create/Initialize .mgedrc" "Create/Initialize .mgedrc"\
			{ { summary "Create or initialize the .mgedrc startup file with default variable settings." }
@


1.126
log
@reorganized the Tools menu and added the Geometry Browser.  also added comments for readability around sections of tools menu
@
text
@d736 1
a736 1

@


1.126.2.1
log
@sync branch with HEAD
@
text
@d14 1
a14 1
#				This software is Copyright (C) 1998-2004 by the United States Army
a160 8
if {![info exists mged_default(zbuffer)]} {
	set mged_default(zbuffer) 1
}

if {![info exists mged_default(lighting)]} {
	set mged_default(lighting) 0
}

d195 4
a201 3
				} elseif { ($::tcl_platform(os) == "Darwin") && [file exists $path/open] } {
				        set mged_browser $path/open
				        break
d233 1
a233 1
set ::tk::Priv(wait_cmd) mged_wait
d237 1
a237 1
set ::tk::Priv(cad_dialog) .mged_dialog
a253 12
        # configure the stdout chanel for this platform
        # this is supposedly done automatically by Tcl, but not
        switch $::tcl_platform(platform) {
	    "macintosh" -
	    "unix" {
		fconfigure stdout -translation lf
	    }
	    "windows" {
		fconfigure stdout -translation crlf
	    }
	}

d498 1
a498 1
	.$id.menubar.file add command -label "Create/Update .mgedrc" -underline 0 \
d500 2
a501 2
	hoc_register_menu_data "File" "Create/Update .mgedrc" "Create/Update .mgedrc"\
			{ { summary "Create the .mgedrc startup file with default variable settings, or update to current settings." }
d503 5
a507 4
        .$id.menubar.file add command -label "Clear Command Window" -underline 14 \
	    -command ".$id.t delete 1.0 end; mged_print_prompt .$id.t {mged> }"
        hoc_register_menu_data "File" "Clear Command Window" "Delete all text from command window"\
	    { { summary "Delete all text from command window" } see_also }
d736 1
a736 1
.$id.menubar.edit add command -label "Browse Geometry" -underline 0 -command "geometree"
d2104 1
a2104 7
        if { $::tcl_platform(platform) != "windows" && $::tcl_platform(os) != "Darwin" } {
            bind .$id.t <Enter> "focus .$id.t; break"
        } else {
             # some platforms should not be forced window activiation
            focus .$id.t
        }

d2278 11
d2321 10
@


1.126.4.1
log
@Modifications (on a 6.0 source distribution) for initial port to windows (merged with sources close to 6.0.2)
@
text
@d233 1
a233 1
set ::tk::Priv(wait_cmd) mged_wait
d237 1
a237 1
set ::tk::Priv(cad_dialog) .mged_dialog
@


1.126.4.2
log
@Survice Engineering patch to clean up the build environment and several runtime issues
@
text
@d2104 1
a2104 9
	if { $tcl_platform(os) != "Windows NT" } {
    bind .$id.t <Enter> "focus .$id.t; break"
	} else {
		# focus binding under windows platform causes
		# window "bring-to-front" behavior which is 
    # unexpected and undesireable for that platform
		focus .$id.t
	}

@


1.126.4.3
log
@sync to HEAD...
@
text
@d14 1
a14 1
#				This software is Copyright (C) 1998-2004 by the United States Army
a160 8
if {![info exists mged_default(zbuffer)]} {
	set mged_default(zbuffer) 1
}

if {![info exists mged_default(lighting)]} {
	set mged_default(lighting) 0
}

d195 4
a201 3
				} elseif { ($tcl_platform(os) == "Darwin") && [file exists $path/open] } {
				        set mged_browser $path/open
				        break
a253 12
        # configure the stdout chanel for this platform
        # this is supposedly done automatically by Tcl, but not
        switch $::tcl_platform(platform) {
	    "macintosh" -
	    "unix" {
		fconfigure stdout -translation lf
	    }
	    "windows" {
		fconfigure stdout -translation crlf
	    }
	}

d498 1
a498 1
	.$id.menubar.file add command -label "Create/Update .mgedrc" -underline 0 \
d500 2
a501 2
	hoc_register_menu_data "File" "Create/Update .mgedrc" "Create/Update .mgedrc"\
			{ { summary "Create the .mgedrc startup file with default variable settings, or update to current settings." }
d503 5
a507 4
        .$id.menubar.file add command -label "Clear Command Window" -underline 14 \
	    -command ".$id.t delete 1.0 end; mged_print_prompt .$id.t {mged> }"
        hoc_register_menu_data "File" "Clear Command Window" "Delete all text from command window"\
	    { { summary "Delete all text from command window" } see_also }
a735 1
.$id.menubar.edit add command -label "Browse Geometry" -underline 0 -command "geometree"
d2286 11
d2329 10
@


1.126.4.4
log
@merge from head
@
text
@d206 1
a206 1
				} elseif { ($::tcl_platform(os) == "Darwin") && [file exists $path/open] } {
d2123 8
a2130 6
        if { $::tcl_platform(platform) != "windows" && $::tcl_platform(os) != "Darwin" } {
            bind .$id.t <Enter> "focus .$id.t; break"
        } else {
             # some platforms should not be forced window activiation
            focus .$id.t
        }
@


1.125
log
@Restoration of entire source tree to Pre-Hartley state
@
text
@d1781 4
d1791 7
d1803 1
d1809 1
d1816 4
d1825 12
d1842 3
a1844 5
	.$id.menubar.tools add command -label "AnimMate Control Panel" -underline 1\
			-command "animmate $id .$id"
	hoc_register_menu_data "Tools" "AnimMate Control Panel" "AnimMate Control Panel"\
			{ { summary "Tool for building animation scripts." }
	{ see_also animmate } }
d1852 13
d1866 1
a1866 15
	.$id.menubar.tools add command -label "Prim Editor" -underline 0\
			-command "init_edit_solid $id"
	hoc_register_menu_data "Tools" "Prim Editor" "Prim Editor"\
			{ { summary "Tool for creating/editing primitives." } }
	.$id.menubar.tools add command -label "Combination Editor" -underline 0\
			-command "init_comb $id"
	hoc_register_menu_data "Tools" "Combination Editor" "Combination Editor"\
			{ { summary "Tool for creating/editing combinations." } }
	.$id.menubar.tools add command -label "Color Editor" -underline 1\
			-command "cadColorWidget tool .$id colorEditTool\
			-title \"Color Editor\"\
			-initialcolor black"
	hoc_register_menu_data "Tools" "Color Editor" "Color Editor"\
			{ { summary "Tool for creating/displaying colors." } }
	.$id.menubar.tools add separator
d1871 1
a1871 1
	.$id.menubar.tools add command -label "Geometry Window" -underline 7\
d1873 1
a1873 1
	hoc_register_menu_data "Tools" "Geometry Window" "Geometry Window"\
d1876 2
d2322 4
d2330 1
@


1.124
log
@Converted from K&R to ANSI C - RFH
@
text
@d480 4
a483 11
	.$id.menubar.file add command -label "Insert..." -underline 0 -command "do_Concat $id"
	hoc_register_menu_data "File" "Insert..." "Insert Database"\
			{ { summary "Insert another database into the current database." }
	{ see_also dbconcat } }
	.$id.menubar.file add command -label "Extract..." -underline 0 -command "init_extractTool $id"
	hoc_register_menu_data "File" "Extract..." "Extract Objects"\
			{ { summary "Tool for extracting objects out of the current database." }
	{ see_also keep } }
	.$id.menubar.file add command -label "G2asc..." -underline 0 -command "init_g2asc $id"
	hoc_register_menu_data "File" "G2asc..." "Convert to Ascii"\
			{ { summary "Convert the current database into an ascii file." } }
d488 1
a488 1
			{ { summary "Browse directories for a Tcl script file to load." } }
d494 1
a494 1
	.$id.menubar.file add cascade -label "Save View As" -underline 0 -menu .$id.menubar.file.saveview
d498 1
a498 1
	.$id.menubar.file add command -label "Update/Create .mgedrc" -underline 0 \
d500 2
a501 2
	hoc_register_menu_data "File" "Update/Create .mgedrc" "Update/Create .mgedrc"\
			{ { summary "Update or create the .mgedrc startup file." }
d504 4
a507 4
			-command "gui_destroy $id"
	hoc_register_menu_data "File" "Close" "Close Window"\
			{ { summary "Close this graphical user interface." }
	{ see_also } }
d513 14
a526 2
	menu .$id.menubar.file.saveview -title "Save View As" -tearoff $mged_default(tearoff_menus)
	.$id.menubar.file.saveview add command -label "RT Script..." -underline 0\
d528 1
a528 1
	hoc_register_menu_data "Save View As" "RT Script..." "RT Script File"\
d531 1
a531 1
	.$id.menubar.file.saveview add command -label "Plot..." -underline 1\
d533 2
a534 2
	hoc_register_menu_data "Save View As" "Plot..." "Plot File"\
			{ { summary "Save the current view as a Plot file." }
d536 1
a536 1
	.$id.menubar.file.saveview add command -label "PostScript..." -underline 0\
d538 2
a539 2
	hoc_register_menu_data "Save View As" "PostScript..." "PostScript File"\
			{ { summary "Save the current view as a PostScript file." }
@


1.123
log
@made File->Close close the current database instead of closing a window
@
text
@d480 11
a490 4
	.$id.menubar.file add separator
	.$id.menubar.file add cascade -label "Import" -underline 0 -menu .$id.menubar.file.import
	.$id.menubar.file add cascade -label "Export" -underline 0 -menu .$id.menubar.file.export

d495 1
a495 1
			{ { summary "Browse directories for a Tcl script file to load." } { see_also "loadview, source" } }
d501 1
a501 1
	.$id.menubar.file add cascade -label "Render View" -underline 0 -menu .$id.menubar.file.renderview
d505 1
a505 1
	.$id.menubar.file add command -label "Create/Initialize .mgedrc" -underline 0 \
d507 2
a508 2
	hoc_register_menu_data "File" "Create/Initialize .mgedrc" "Create/Initialize .mgedrc"\
			{ { summary "Create or initialize the .mgedrc startup file with default variable settings." }
d511 4
a514 4
			-command "closedb"
	hoc_register_menu_data "File" "Close" "Close Database"\
			{ { summary "Close any presently open database." }
	{ see_also opendb } }
d520 2
a521 14
	menu .$id.menubar.file.import -title "Import" -tearoff $mged_default(tearoff_menus)
	.$id.menubar.file.import add command -label "Ascii Database" -underline 0 -command "init_asc2g $id"
	hoc_register_menu_data "Import" "Ascii Database" "g2asc Ascii Database" { { summary "Import a database in ascii format using asc2g" } { see_also asc2g } }
	.$id.menubar.file.import add command -label "Binary Database" -underline 0 -command "do_Concat $id"
	hoc_register_menu_data "Import" "Insert Database" "Insert Database"	{ { summary "Insert another database into the current database." }	{ see_also dbconcat } }

	menu .$id.menubar.file.export -title "Export" -tearoff $mged_default(tearoff_menus)
	.$id.menubar.file.export add command -label "Ascii Database" -underline 0 -command "init_g2asc $id"
	hoc_register_menu_data "Export" "Ascii Database" "g2asc Ascii Database" { { summary "Export the current database in ascii format using g2asc" } { see_also g2asc } }
	.$id.menubar.file.export add command -label "Database Objects" -underline 0 -command "init_extractTool $id"
	hoc_register_menu_data "Export" "Extract Objects" "Extract Objects" { { summary "Tool for extracting objects out of the current database." } { see_also keep } }

	menu .$id.menubar.file.renderview -title "Render View" -tearoff $mged_default(tearoff_menus)
	.$id.menubar.file.renderview add command -label "RT Script..." -underline 0\
d523 1
a523 1
	hoc_register_menu_data "Render View" "RT Script..." "RT Script File"\
d526 1
a526 1
	.$id.menubar.file.renderview add command -label "Plot..." -underline 1\
d528 2
a529 2
	hoc_register_menu_data "Render View As" "Plot..." "Plot File"\
			{ { summary "Render the current view to a Plot file." }
d531 1
a531 1
	.$id.menubar.file.renderview add command -label "PostScript..." -underline 0\
d533 2
a534 2
	hoc_register_menu_data "Render View As" "PostScript..." "PostScript File"\
			{ { summary "Render the current view to a PostScript file." }
@


1.122
log
@restructured and reorganized the file menu. added support to import ascii databases.
@
text
@d504 4
a507 4
			-command "gui_destroy $id"
	hoc_register_menu_data "File" "Close" "Close Window"\
			{ { summary "Close this graphical user interface." }
	{ see_also } }
@


1.121
log
@Added support for Darwin and other systems that may not have netscape installed for the "mged_browser".  We also look for `open` (Darwin equivalent to double-clicking) and `mozilla`.
@
text
@d480 4
a483 11
	.$id.menubar.file add command -label "Insert..." -underline 0 -command "do_Concat $id"
	hoc_register_menu_data "File" "Insert..." "Insert Database"\
			{ { summary "Insert another database into the current database." }
	{ see_also dbconcat } }
	.$id.menubar.file add command -label "Extract..." -underline 0 -command "init_extractTool $id"
	hoc_register_menu_data "File" "Extract..." "Extract Objects"\
			{ { summary "Tool for extracting objects out of the current database." }
	{ see_also keep } }
	.$id.menubar.file add command -label "G2asc..." -underline 0 -command "init_g2asc $id"
	hoc_register_menu_data "File" "G2asc..." "Convert to Ascii"\
			{ { summary "Convert the current database into an ascii file." } }
d488 1
a488 1
			{ { summary "Browse directories for a Tcl script file to load." } }
d494 1
a494 1
	.$id.menubar.file add cascade -label "Save View As" -underline 0 -menu .$id.menubar.file.saveview
d498 1
a498 1
	.$id.menubar.file add command -label "Update/Create .mgedrc" -underline 0 \
d500 2
a501 2
	hoc_register_menu_data "File" "Update/Create .mgedrc" "Update/Create .mgedrc"\
			{ { summary "Update or create the .mgedrc startup file." }
d513 14
a526 2
	menu .$id.menubar.file.saveview -title "Save View As" -tearoff $mged_default(tearoff_menus)
	.$id.menubar.file.saveview add command -label "RT Script..." -underline 0\
d528 1
a528 1
	hoc_register_menu_data "Save View As" "RT Script..." "RT Script File"\
d531 1
a531 1
	.$id.menubar.file.saveview add command -label "Plot..." -underline 1\
d533 2
a534 2
	hoc_register_menu_data "Save View As" "Plot..." "Plot File"\
			{ { summary "Save the current view as a Plot file." }
d536 1
a536 1
	.$id.menubar.file.saveview add command -label "PostScript..." -underline 0\
d538 2
a539 2
	hoc_register_menu_data "Save View As" "PostScript..." "PostScript File"\
			{ { summary "Save the current view as a PostScript file." }
@


1.120
log
@Mods to reflect changes in "attr" command
@
text
@d6 1
a6 1
#	Aberdeen Proving Ground, Maryland  21005
d10 2
a11 2
#       your "Statement of Terms and Conditions for the Release of
#       The BRL-CAD Package" agreement.
d14 2
a15 2
#       This software is Copyright (C) 1998 by the United States Army
#       in all countries except the USA.  All rights reserved.
d37 1
a37 1
    loadtk
d41 1
a41 1
    set mged_default(max_views) 10
d45 1
a45 1
    set mged_default(rot_factor) 1
d49 1
a49 1
    set mged_default(tran_factor) 0.01
d53 1
a53 1
    set mged_default(html_dir) [bu_brlcad_path html/manuals/mged]
d57 1
a57 1
    set mged_default(web_browser) /usr/bin/netscape
d61 1
a61 1
    color_scheme_init
d65 1
a65 1
    set mged_players {}
d69 1
a69 1
    set mged_collaborators {}
d73 1
a73 1
    set mged_default(ggeom) -0+0
d77 2
a78 2
    # Position command window in upper left corner
    set mged_default(geom) +8+32
d82 1
a82 1
    set mged_default(id) "id"
d86 1
a86 1
    set mged_default(pane) "ur"
d90 1
a90 1
    set mged_default(multi_pane) 0
d94 1
a94 1
    set mged_default(config) b
d98 1
a98 1
    set mged_default(display) $env(DISPLAY)
d100 4
a103 4
    if {![info exists mged_default(display)]} {
	set mged_default(display) :0
    }
    set env(DISPLAY) $mged_default(display)
d107 1
a107 1
    set mged_default(gdisplay) $mged_default(display)
d111 1
a111 1
    set mged_default(dm_type) [dm_bestXType $mged_default(gdisplay)]
d115 1
a115 1
    set mged_default(comb) 0
d119 1
a119 1
    set mged_default(edit_style) emacs
d123 1
a123 1
    set mged_default(num_lines) 10
d128 1
a128 1
    set mged_default(tearoff_menus) 0
d130 1
a130 1
    set mged_default(tearoff_menus) 0
d134 1
a134 1
    set mged_gui(mged,screen) $mged_default(display)
d138 1
a138 1
    set mged_gui(databaseDir) [pwd]
d142 1
a142 1
    set mged_gui(loadScriptDir) [pwd]
d146 1
a146 1
    font_init
d150 1
a150 1
    set mged_default(faceplate) 0
d154 1
a154 1
    set mged_default(orig_gui) 0
d158 1
a158 1
    set mged_default(zclip) 1
d162 1
a162 1
    set mged_default(perspective_mode) 0
d166 1
a166 1
    set mged_default(max_text_lines) 1000
d170 1
a170 1
    set mged_default(doubleClickTol) 500
d174 1
a174 1
        set mged_html_dir $env(MGED_HTML_DIR)
d176 1
a176 1
        set mged_html_dir $mged_default(html_dir)
d180 3
a182 3
    if {[file exists $env(WEB_BROWSER)]} {
	set mged_browser $env(WEB_BROWSER)
    }
d186 22
a207 9
    if {[file exists $mged_default(web_browser)]} {
	set mged_browser $mged_default(web_browser)
    } else {
	if {[info exists env(PATH)]} {
	    set pathlist [split $env(PATH) :]
	    foreach path $pathlist {
		if {[file exists $path/netscape]} {
		    set mged_browser $path/netscape
		    break;
a208 1
	    }
a209 5

	if {![info exists mged_browser]} {
	    set mged_browser "Browser not found, check your PATH"
	}
    }
d240 21
a260 32
    global tmp_hoc
    global mged_gui
    global mged_default
    global mged_html_dir
    global mged_browser
    global mged_players
    global mged_collaborators
    global mged_display
    global env
    global view_ring
    global vi_state
    global mged_color_scheme
    global mged_Priv

# set defaults
    set save_id [cmd_win get]
    set comb $mged_default(comb)
    set join_c 0
    set dtype $mged_default(dm_type)
    set id ""
    set scw 0
    set sgw 0
    set i 0

    set screen $mged_default(display)
    set gscreen $mged_default(gdisplay)

    if {$mged_default(config) == "b"} {
	set scw 1
	set sgw 1
    } elseif {$mged_default(config) == "c"} {
	set scw 1
d262 4
a265 4
    } elseif {$mged_default(config) == "g"} {
	set scw 0
	set sgw 1
    }
d267 105
a371 31
#==============================================================================
# PHASE 0: Process options
#==============================================================================
    set argc [llength $args]
    set dtype_set 0
    set screen_set 0
    set gscreen_set 0

for {set i 0} {$i < $argc} {incr i} {
    set arg [lindex $args $i]
    if {$arg == "-config"} {
	incr i

	if {$i >= $argc} {
	    return [help gui]
	}

	set arg [lindex $args $i]
	if {$arg == "b"} {
# show both command and graphics windows
	    set scw 1
	    set sgw 1
	} elseif { $arg == "c"} {
	    set scw 1
	    set sgw 0
	} elseif {$arg == "g"} {
# show display manager window
	    set scw 0
	    set sgw 1
	} else {
	    return [help gui]
a372 3
    } elseif {$arg == "-d" || $arg == "-display"} {
# display string for everything
	incr i
d374 2
a375 2
	if {$i >= $argc} {
	    return [help gui]
d378 2
a379 8
	set screen [lindex $args $i]
	set screen_set 1
	if {!$gscreen_set} {
	    set gscreen $screen

	    if {!$dtype_set} {
		set dtype [dm_bestXType $gscreen]
	    }
a380 3
    } elseif {$arg == "-gd" || $arg == "-gdisplay"} {
# display string for graphics window
	incr i
d382 7
a388 2
	if {$i >= $argc} {
	    return [help gui]
d391 2
a392 4
	set gscreen [lindex $args $i]
	set gscreen_set 1
	if {!$screen_set} {
	    set screen $gscreen
d395 12
a406 5
	if {!$dtype_set} {
	    set dtype [dm_bestXType $gscreen]
	}
    } elseif {$arg == "-dt"} {
	incr i
d408 2
a409 2
	if {$i >= $argc} {
	    return [help gui]
d412 2
a413 7
	set dtype [lindex $args $i]
	set dtype_set 1
    } elseif {$arg == "-id"} {
	incr i

	if {$i >= $argc} {
	    return [help gui]
d416 5
a420 27
	set id [lindex $args $i]
    } elseif {$arg == "-j" || $arg == "-join"} { 
	set join_c 1
    } elseif {$arg == "-h" || $arg == "-help"} {
	return [help gui]
    } elseif {$arg == "-s" || $arg == "-sep"} {
	set comb 0
    } elseif {$arg == "-c" || $arg == "-comb"} {
	set comb 1
    } else {
	return [help gui]
    }
}

if {$comb} {
    set gscreen $screen
}

if {$id == "mged"} {
    return "gui: not allowed to use \"mged\" as id"
}

if {$id == ""} {
    for {set i 0} {1} {incr i} {
	set id [subst $mged_default(id)]_$i
	if {[lsearch -exact $mged_players $id] == -1} {
	    break;
a421 34
    }
}

if {$scw == 0 && $sgw == 0} {
    set sgw 1
}

set mged_gui($id,comb) $comb
set mged_gui($id,show_cmd) $scw
set mged_gui($id,show_dm) $sgw
set mged_gui($id,show_status) 1
set mged_gui($id,apply_to) 0
set mged_gui($id,edit_info_pos) "+0+0"
set mged_gui($id,num_lines) $mged_default(num_lines)
set mged_gui($id,multi_pane) $mged_default(multi_pane)
set mged_gui($id,dm_loc) $mged_default(pane)
set mged_gui($id,dtype) $dtype
set mged_gui($id,lastButtonPress) 0
set mged_gui($id,lastItem) ""

if {![dm_validXType $gscreen $dtype]} {
    set dtype [dm_bestXType $gscreen]
}

if { [info exists tk_strictMotif] == 0 } {
    loadtk $screen
}

#==============================================================================
# PHASE 1: Creation of main window
#==============================================================================
if {[ winfo exists .$id ]} {
    return "A session with the id \"$id\" already exists!"
}
d423 1
a423 1
toplevel .$id -screen $screen -menu .$id.menubar
d425 2
a426 2
lappend mged_players $id
set mged_gui($id,screen) $screen
d428 16
a443 6
#==============================================================================
# Create display manager window and menu
#==============================================================================
if {$comb} {
    set mged_gui($id,top) .$id
    set mged_gui($id,dmc) .$id.dmf
d445 1
a445 1
    frame $mged_gui($id,dmc) -relief sunken -borderwidth 2
d447 5
a451 7
    if {[catch { openmv $id $mged_gui($id,top) $mged_gui($id,dmc) $screen $dtype } result]} {
	gui_destroy $id
	return $result
    }
} else {
    set mged_gui($id,top) .top$id
    set mged_gui($id,dmc) $mged_gui($id,top)
d453 2
a454 1
    toplevel $mged_gui($id,dmc) -screen $gscreen -relief sunken -borderwidth 2
d456 175
a630 4
    if {[catch { openmv $id $mged_gui($id,top) $mged_gui($id,dmc) $gscreen $dtype } result]} {
	gui_destroy $id
	return $result
    }
a631 180

set mged_gui($id,active_dm) $mged_gui($id,top).$mged_default(pane)
set mged_gui($id,apply_list) $mged_gui($id,active_dm)

#==============================================================================
# PHASE 2: Construction of menu bar
#==============================================================================
menu .$id.menubar -tearoff $mged_default(tearoff_menus)
.$id.menubar add cascade -label "File" -underline 0 -menu .$id.menubar.file
.$id.menubar add cascade -label "Edit" -underline 0 -menu .$id.menubar.edit
.$id.menubar add cascade -label "Create" -underline 0 -menu .$id.menubar.create
.$id.menubar add cascade -label "View" -underline 0 -menu .$id.menubar.view
.$id.menubar add cascade -label "ViewRing" -underline 4 -menu .$id.menubar.viewring
.$id.menubar add cascade -label "Settings" -underline 0 -menu .$id.menubar.settings
.$id.menubar add cascade -label "Modes" -underline 0 -menu .$id.menubar.modes
.$id.menubar add cascade -label "Misc" -underline 1 -menu .$id.menubar.misc
.$id.menubar add cascade -label "Tools" -underline 0 -menu .$id.menubar.tools
.$id.menubar add cascade -label "Help" -underline 0 -menu .$id.menubar.help

menu .$id.menubar.file -title "File" -tearoff $mged_default(tearoff_menus)
.$id.menubar.file add command -label "New..." -underline 0 -command "do_New $id"
hoc_register_menu_data "File" "New..." "New Database"\
	{ { summary "Open a new database. Note - the database\nmust not already exist." }
          { see_also opendb} }
.$id.menubar.file add command -label "Open..." -underline 0 -command "do_Open $id"
hoc_register_menu_data "File" "Open..." "Open Database"\
	{ { summary "Open an existing database." }
          { see_also opendb } }
.$id.menubar.file add command -label "Insert..." -underline 0 -command "do_Concat $id"
hoc_register_menu_data "File" "Insert..." "Insert Database"\
	{ { summary "Insert another database into the current database." }
          { see_also dbconcat } }
.$id.menubar.file add command -label "Extract..." -underline 0 -command "init_extractTool $id"
hoc_register_menu_data "File" "Extract..." "Extract Objects"\
	{ { summary "Tool for extracting objects out of the current database." }
          { see_also keep } }
.$id.menubar.file add command -label "G2asc..." -underline 0 -command "init_g2asc $id"
hoc_register_menu_data "File" "G2asc..." "Convert to Ascii"\
	{ { summary "Convert the current database into an ascii file." } }
.$id.menubar.file add separator
.$id.menubar.file add command -label "Load Script..." -underline 0 \
	-command "do_LoadScript $id"
hoc_register_menu_data "File" "Load Script..." "Load Script"\
	{ { summary "Browse directories for a Tcl script file to load." } }
.$id.menubar.file add separator
.$id.menubar.file add command -label "Raytrace" -underline 0 -command "init_Raytrace $id"
hoc_register_menu_data "File" "Raytrace" "Raytrace View"\
	{ { summary "Tool for raytracing the current view." }
          { see_also rt } }
.$id.menubar.file add cascade -label "Save View As" -underline 0 -menu .$id.menubar.file.saveview
.$id.menubar.file add separator
.$id.menubar.file add cascade -label "Preferences" -underline 0 -menu .$id.menubar.file.pref
.$id.menubar.file add separator
.$id.menubar.file add command -label "Update/Create .mgedrc" -underline 0 \
	-command "update_mgedrc"
hoc_register_menu_data "File" "Update/Create .mgedrc" "Update/Create .mgedrc"\
	{ { summary "Update or create the .mgedrc startup file." }
          { see_also } }
.$id.menubar.file add command -label "Close" -underline 0 \
	-command "gui_destroy $id"
hoc_register_menu_data "File" "Close" "Close Window"\
	{ { summary "Close this graphical user interface." }
          { see_also } }
.$id.menubar.file add command -label "Exit" -underline 1 -command _mged_quit
hoc_register_menu_data "File" "Exit" "Exit MGED"\
	{ { summary "Exit MGED." }
          { see_also "exit q quit" } }

menu .$id.menubar.file.saveview -title "Save View As" -tearoff $mged_default(tearoff_menus)
.$id.menubar.file.saveview add command -label "RT Script..." -underline 0\
	-command "init_rtScriptTool $id"
hoc_register_menu_data "Save View As" "RT Script..." "RT Script File"\
	{ { summary "Save the current view as an RT script file." }
          { see_also saveview } }
.$id.menubar.file.saveview add command -label "Plot..." -underline 1\
	-command "init_plotTool $id"
hoc_register_menu_data "Save View As" "Plot..." "Plot File"\
	{ { summary "Save the current view as a Plot file." }
          { see_also pl } }
.$id.menubar.file.saveview add command -label "PostScript..." -underline 0\
	-command "init_psTool $id"
hoc_register_menu_data "Save View As" "PostScript..." "PostScript File"\
	{ { summary "Save the current view as a PostScript file." }
          { see_also ps } }

menu .$id.menubar.file.pref -title "Preferences" -tearoff $mged_default(tearoff_menus)
.$id.menubar.file.pref add cascade -label "Units" -underline 0\
	-menu .$id.menubar.file.pref.units
.$id.menubar.file.pref add cascade -label "Command Line Edit" -underline 13\
	-menu .$id.menubar.file.pref.cle
.$id.menubar.file.pref add cascade -label "Special Characters" -underline 0\
	-menu .$id.menubar.file.pref.special_chars
.$id.menubar.file.pref add command -label "Color Schemes" -underline 0\
	-command "color_scheme_build $id \"Color Schemes\" [list $mged_color_scheme(primary_map)]\
	\"Faceplate Colors\" [list $mged_color_scheme(secondary_map)]"
hoc_register_menu_data "Preferences" "Color Schemes" "Color Schemes"\
	{ { summary "Tool for setting colors." }
          { see_also "rset" } }
.$id.menubar.file.pref add command -label "Fonts" -underline 0 \
	-command "font_scheme_init $id"
hoc_register_menu_data "Preferences" "Fonts" "Fonts" \
	{ { summary "Tool for creating/configuring named fonts." }
          { see_also "font" } }

menu .$id.menubar.file.pref.units -title "Units" -tearoff $mged_default(tearoff_menus)
.$id.menubar.file.pref.units add radiobutton -value um -variable mged_display(units)\
	-label "Micrometers" -underline 4 -command "do_Units $id"
hoc_register_menu_data "Units" "Micrometers" "Unit of Measure - Micrometers"\
	{ { summary "Set the unit of measure to micrometers.\n1 micrometer = 1/1,000,000 meters" }
          { see_also "units" } }
.$id.menubar.file.pref.units add radiobutton -value mm -variable mged_display(units)\
	-label "Millimeters" -underline 2 -command "do_Units $id"
hoc_register_menu_data "Units" "Millimeters" "Unit of Measure - Millimeters"\
	{ { summary "Set the unit of measure to millimeters.\n1 millimeter = 1/1000 meters" }
          { see_also "units" } }
.$id.menubar.file.pref.units add radiobutton -value cm -variable mged_display(units)\
	-label "Centimeters" -underline 0 -command "do_Units $id"
hoc_register_menu_data "Units" "Centimeters" "Unit of Measure - Centimeters"\
	{ { summary "Set the unit of measure to centimeters.\n\t1 centimeter = 1/100 meters" }
          { see_also "units" } }
.$id.menubar.file.pref.units add radiobutton -value m -variable mged_display(units)\
	-label "Meters" -underline 0 -command "do_Units $id"
hoc_register_menu_data "Units" "Meters" "Unit of Measure - Meters"\
	{ { summary "Set the unit of measure to meters." }
          { see_also "units" } }
.$id.menubar.file.pref.units add radiobutton -value km -variable mged_display(units)\
	-label "Kilometers" -underline 0 -command "do_Units $id"
hoc_register_menu_data "Units" "Kilometers" "Unit of Measure - Kilometers"\
	{ { summary "Set the unit of measure to kilometers.\n 1 kilometer = 1000 meters" }
          { see_also "units" } }
.$id.menubar.file.pref.units add separator
.$id.menubar.file.pref.units add radiobutton -value in -variable mged_display(units)\
	-label "Inches" -underline 0 -command "do_Units $id"
hoc_register_menu_data "Units" "Inches" "Unit of Measure - Inches"\
	{ { summary "Set the unit of measure to inches.\n 1 inch = 25.4 mm" }
          { see_also "units" } }
.$id.menubar.file.pref.units add radiobutton -value ft -variable mged_display(units)\
	-label "Feet" -underline 0 -command "do_Units $id"
hoc_register_menu_data "Units" "Feet" "Unit of Measure - Feet"\
	{ { summary "Set the unit of measure to feet.\n 1 foot = 12 inches" }
          { see_also "units" } }
.$id.menubar.file.pref.units add radiobutton -value yd -variable mged_display(units)\
	-label "Yards" -underline 0 -command "do_Units $id"
hoc_register_menu_data "Units" "Yards" "Unit of Measure - Yards"\
	{ { summary "Set the unit of measure to yards.\n 1 yard = 36 inches" }
          { see_also "" } }
.$id.menubar.file.pref.units add radiobutton -value mi -variable mged_display(units)\
	-label "Miles" -underline 3 -command "do_Units $id"
hoc_register_menu_data "Units" "Miles" "Unit of Measure - Miles"\
	{ { summary "Set the unit of measure to miles.\n 1 mile = 5280 feet" }
          { see_also "units" } }

menu .$id.menubar.file.pref.cle -title "Command Line Edit" -tearoff $mged_default(tearoff_menus)
.$id.menubar.file.pref.cle add radiobutton -value emacs -variable mged_gui($id,edit_style)\
	-label "Emacs" -underline 0 -command "set_text_key_bindings $id"
hoc_register_menu_data "Command Line Edit" "Emacs" "Command Line Edit - Emacs"\
	{ { synopsis "Set the command line edit mode to emacs." }
          { description "
\tBackSpace\tbackward delete char
\tDelete\t\tbackward delete char
\tLeft\t\tbackward char
\tRight\t\tforward char
\tUp\t\tprevious command
\tDown\t\tnext command
\tHome\t\tbeginning of line
\tEnd\t\tend of line
\tControl-a\tbeginning of line
\tControl-b\tbackward char
\tControl-c\tinterrupt command
\tControl-d\tdelete char
\tControl-e\tend of line
\tControl-f\t\tforward char
\tControl-h\tbackward delete char
\tControl-k\tdelete end of line
\tControl-n\tnext command
\tControl-p\tprevious command
\tControl-t\t\ttranspose
\tControl-u\tdelete line
\tControl-w\tbackward delete word" }
        }
d633 1
a633 1
	-label "Vi" -underline 0 -command "set_text_key_bindings $id"
d635 59
a693 59
	{ { synopsis "Set the command line edit mode to vi." }
          { description "
\t************ VI Insert Mode ************
\tEscape\t\tcommand
\tLeft\t\tbackward char, command
\tRight\t\tforward char, command
\tBackSpace\tbackward delete char

\t************ VI Command Mode ************
\tLeft\t\tbackward char
\tRight\t\tforward char
\tBackSpace\tbackward char
\tSpace\t\tforward char
\tA\t\tend of line, insert (i.e. append to end of line)
\tC\t\tdelete to end of line, insert
\tD\t\tdelete to end of line
\tF\t\tsearch backward char
\tI\t\tbeginning of line, insert
\tR\t\toverwrite
\tX\t\tbackward delete char
\t0\t\tbeginning of line
\t$\t\tend of line
\t;\t\tcontinue search in same direction
\t,\t\tcontinue search in opposite direction
\ta\t\tforward char, insert (i.e. append)
\tb\t\tbackward word
\tc\t\tchange
\td\t\tdelete
\te\t\tend of word
\tf\t\tsearch forward char
\th\t\tbackward char
\ti\t\tinsert
\tj\t\tnext command
\tk\t\tprevious command
\tl\t\tforward char
\tr\t\treplace char
\ts\t\tdelete char, insert
\tw\t\tforward word
\tx\t\tdelete char

\t************ Both ************
\tDelete\t\tbackward delete char
\tUp\t\tprevious command
\tDown\t\tnext command
\tHome\t\tbeginning of line
\tEnd\t\tend of line
\tControl-a\tbeginning of line
\tControl-b\tbackward char
\tControl-c\tinterrupt command
\tControl-e\tend of line
\tControl-f\t\tforward char
\tControl-h\tbackward delete char
\tControl-k\tdelete end of line
\tControl-n\tnext command
\tControl-p\tprevious command
\tControl-t\t\ttranspose
\tControl-u\tdelete to beginning of line
\tControl-w\tbackward delete word" }
        }
d697 1
a697 1
	-label "Tcl Evaluation" -underline 0
d699 1
a699 1
	{ { summary "Set the command interpretation mode to Tcl mode.
d704 1
a704 1
	-label "Object Name Matching" -underline 0
d706 1
a706 1
	{ { summary "Set the command interpretation mode to MGED object
d709 1
a709 1
        } }
d713 1
a713 1
	-command "winset \$mged_gui($id,active_dm); build_edit_menu_all s1"
d715 1
a715 1
	{ { summary "A tool for selecting a primitive to edit." } }
d717 1
a717 1
	-command "winset \$mged_gui($id,active_dm); build_edit_menu_all o"
d719 1
a719 1
	{ { summary "A tool for selecting a matrix to edit." } }
d722 1
a722 1
	-command "init_edit_solid $id"
d724 1
a724 1
	{ { summary "A tool for editing/creating primitives." } }
d726 1
a726 1
	-command "init_comb $id"
d728 1
a728 1
	{ { summary "A tool for editing/creating combinations." } }
d730 1
a730 1
	-command "Attr_editor::start_editor $id"
d736 1
a736 1
	-label "Arbs" -underline 0 -menu .$id.menubar.create.arb8
d738 1
a738 1
	-label "Cones & Cylinders" -underline 0 -menu .$id.menubar.create.cones
d740 1
a740 1
	-label "Ellipsoids" -underline 0 -menu .$id.menubar.create.ell
d742 1
a742 1
   
d749 2
a750 2
    .$id.menubar.create.arb8 add command -label "$ptype..."\
	    -command "init_solid_create $id $ptype"
d752 3
a754 3
    set ksl {}
    lappend ksl "summary \"Make an $ptype.\"" "see_also \"make, in\""
    hoc_register_menu_data "Arb8" "$ptype..." "Make an $ptype" $ksl
d757 1
a757 1
    .$id.menubar.create.arb8 add separator
d760 1
a760 1
    set ptype arbn
d762 5
a766 5
    .$id.menubar.create.arb8 add command -foreground firebrick4 -label "$ptype..."\
	    -command "init_solid_create $id $ptype"
    set ksl {}
    lappend ksl "summary \"Make an $ptype (limited edit capabilities).\"" "see_also \"make, in\""
    hoc_register_menu_data "Arb8" "$ptype..." "Make an $ptype" $ksl
d771 2
a772 2
    .$id.menubar.create.cones add command -label "$ptype..."\
	    -command "init_solid_create $id $ptype"
d774 3
a776 3
    set ksl {}
    lappend ksl "summary \"Make a $ptype.\"" "see_also \"make, in\""
    hoc_register_menu_data "Cones & Cyls" "$ptype..." "Make a $ptype" $ksl
d781 2
a782 2
    .$id.menubar.create.ell add command -label "$ptype..."\
	    -command "init_solid_create $id $ptype"
d784 3
a786 3
    set ksl {}
    lappend ksl "summary \"Make a $ptype.\"" "see_also \"make, in\""
    hoc_register_menu_data "Ellipses" "$ptype..." "Make a $ptype" $ksl
d791 10
a800 3
    if {$ptype == "dsp"} {
	.$id.menubar.create add command -label "dsp..."\
		-command "dsp_create $id"
d802 4
a805 11
	set ksl {}
	lappend ksl "summary \"Make a $ptype.\"" "see_also \"make, in\""
	hoc_register_menu_data "Create" "dsp..." "Make a dsp solid" $ksl
    } else {
	.$id.menubar.create add command -label "$ptype..."\
		-command "init_solid_create $id $ptype"

	set ksl {}
	lappend ksl "summary \"Make a $ptype.\"" "see_also \"make, in\""
	hoc_register_menu_data "Create" "$ptype..." "Make a $ptype" $ksl
    }
d813 2
a814 2
    .$id.menubar.create add command -foreground firebrick4 -label "$ptype..."\
	    -command "init_solid_create $id $ptype"
d816 3
a818 3
    set ksl {}
    lappend ksl "summary \"Make a $ptype (limited edit capability).\"" "see_also \"make, in\""
    hoc_register_menu_data "Create" "$ptype..." "Make a $ptype" $ksl
d823 1
a823 1
	-command "mged_apply $id \"press top\""
d825 3
a827 3
	{ { summary "View of the top (i.e. azimuth = 270, elevation = 90)." }
          { accelerator "t" }
          { see_also "press, ae, view" } }
d829 1
a829 1
	-command "mged_apply $id \"press bottom\""
d831 3
a833 3
	{ { summary "View of the bottom (i.e. azimuth = 270 , elevation = -90)." }
          { accelerator "b" }
          { see_also "press, ae, view" } }
d835 1
a835 1
	-command "mged_apply $id \"press right\""
d837 3
a839 3
	{ { summary "View of the right side (i.e. azimuth = 270, elevation = 0)." }
          { accelerator "r" }
          { see_also "press, ae, view" } }
d841 1
a841 1
	-command "mged_apply $id \"press left\""
d843 3
a845 3
	{ { summary "View of the left side (i.e. azimuth = 90, elevation = 0)." }
          { accelerator "l" }
          { see_also "press, ae, view" } }
d847 1
a847 1
	-command "mged_apply $id \"press front\""
d849 3
a851 3
	{ { summary "View of the front (i.e. azimuth = 0, elevation = 0)." }
          { accelerator "f" }
          { see_also "press, ae, view" } }
d853 1
a853 1
	-command "mged_apply $id \"press rear\""
d855 3
a857 3
	{ { summary "View of the rear (i.e. azimuth = 180, elevation = 0)." }
          { accelerator "R" }
          { see_also "press, ae, view" } }
d859 1
a859 1
	-command "mged_apply $id \"press 35,25\""
d861 3
a863 3
	{ { summary "View with an azimuth of 35 and an elevation of 25." }
          { accelerator "3" }
          { see_also "press, ae, view" } }
d865 1
a865 1
	-command "mged_apply $id \"press 45,45\""
d867 3
a869 3
	{ { summary "View with an azimuth of 45 and an elevation of 45." }
          { accelerator "4" }
          { see_also "press, ae, view" } }
d872 1
a872 1
	-command "mged_apply $id \"zoom 2\""
d874 2
a875 2
	{ { summary "Zoom in by a factor of 2." }
          { see_also "sca, zoom" } }
d877 1
a877 1
	-command "mged_apply $id \"zoom 0.5\""
d879 2
a880 2
	{ { summary "Zoom out by a factor of 2." }
          { see_also "sca, zoom" } }
d883 1
a883 1
	-underline 0 -command "mged_apply $id \"press reset\""
d885 2
a886 2
	{ { summary "Same as top (i.e. azimuth = 270, elevation = 90)." }
          { see_also "press, ae, view" } }
d888 1
a888 1
	-underline 0 -command "set_default_views $id"
d890 1
a890 1
	{ { summary "Sets the view of all four panes to their defaults.\n
d895 1
a895 1
          { see_also "press, ae, view" } }
d897 1
a897 1
	-command "mged_apply $id \"knob zero\""
d899 3
a901 3
	{ { summary "Stop all rate transformations." }
          { accelerator "0" }
          { see_also "knob, press" } }
d906 1239
a2144 525
	{ { synopsis "Add a view to the view ring." }
          { description "A view ring is a mechanism for managing multiple
views within a single pane or display manager. Each pane
has its own view ring where any number of views can be stored.
The stored views can be removed or traversed." } }
.$id.menubar.viewring add cascade -label "Select View" -underline 0 -menu .$id.menubar.viewring.select
.$id.menubar.viewring add cascade -label "Delete View" -underline 0 -menu .$id.menubar.viewring.delete
.$id.menubar.viewring add command -label "Next View" -underline 0 -command "view_ring_next $id"
hoc_register_menu_data "ViewRing" "Next View" "Next View"\
	{ { synopsis "Go to the next view on the view ring." }
          { accelerator "Control-n" } }
.$id.menubar.viewring add command -label "Prev View" -underline 0 -command "view_ring_prev $id"
hoc_register_menu_data "ViewRing" "Prev View" "Previous View"\
	{ { synopsis "Go to the previous view on the view ring." }
          { accelerator "Control-p" } }
.$id.menubar.viewring add command -label "Last View" -underline 0 -command "view_ring_toggle $id"
hoc_register_menu_data "ViewRing" "Last View" "Last View"\
	{ { synopsis "Go to the last view. This can be used to toggle
between two views." }
          { accelerator "Control-t" } }

#menu .$id.menubar.viewring.select -title "Select View" -tearoff $mged_default(tearoff_menus)\
	-postcommand "update_view_ring_labels $id"
menu .$id.menubar.viewring.select -title "Select View" -tearoff $mged_default(tearoff_menus) \
	-postcommand "view_ring_save_curr $id"

update_view_ring_entries $id s

set mged_gui($id,views) ""
set view_ring($id) 0
set view_ring($id,curr) 0
set view_ring($id,prev) 0
#menu .$id.menubar.viewring.delete -title "Delete View" -tearoff $mged_default(tearoff_menus)\
	-postcommand "update_view_ring_labels $id"
menu .$id.menubar.viewring.delete -title "Delete View" -tearoff $mged_default(tearoff_menus)

update_view_ring_entries $id d

menu .$id.menubar.settings -title "Settings" -tearoff $mged_default(tearoff_menus)
.$id.menubar.settings add cascade -label "Mouse Behavior" -underline 0\
	-menu .$id.menubar.settings.mouse_behavior
.$id.menubar.settings add cascade -label "Transform" -underline 0\
	-menu .$id.menubar.settings.transform
.$id.menubar.settings add cascade -label "Constraint Coords" -underline 0\
	-menu .$id.menubar.settings.coord
.$id.menubar.settings add cascade -label "Rotate About" -underline 0\
	-menu .$id.menubar.settings.origin
.$id.menubar.settings add cascade -label "Active Pane" -underline 0\
	-menu .$id.menubar.settings.mpane
.$id.menubar.settings add cascade -label "Apply To" -underline 1\
	-menu .$id.menubar.settings.applyTo
.$id.menubar.settings add cascade -label "Query Ray Effects" -underline 0\
	-menu .$id.menubar.settings.qray
.$id.menubar.settings add cascade -label "Grid" -underline 0\
	-menu .$id.menubar.settings.grid
.$id.menubar.settings add cascade -label "Grid Spacing" -underline 5\
	-menu .$id.menubar.settings.grid_spacing
.$id.menubar.settings add cascade -label "Framebuffer" -underline 0\
	-menu .$id.menubar.settings.fb
.$id.menubar.settings add cascade -label "View Axes Position" -underline 0\
	-menu .$id.menubar.settings.vap

menu .$id.menubar.settings.applyTo -title "Apply To" -tearoff $mged_default(tearoff_menus)
.$id.menubar.settings.applyTo add radiobutton -value 0 -variable mged_gui($id,apply_to)\
	-label "Active Pane" -underline 0
hoc_register_menu_data "Apply To" "Active Pane" "Active Pane"\
	{ { summary "Set the \"Apply To\" mode such that the user's
interaction with the GUI is applied to the active pane." } }
.$id.menubar.settings.applyTo add radiobutton -value 1 -variable mged_gui($id,apply_to)\
	-label "Local Panes" -underline 0
hoc_register_menu_data "Apply To" "Local Panes" "Local Panes"\
	{ { summary "Set the \"Apply To\" mode such that the user's
interaction with the GUI is applied to all panes
local to this instance of the GUI." } }
.$id.menubar.settings.applyTo add radiobutton -value 2 -variable mged_gui($id,apply_to)\
	-label "Listed Panes" -underline 1
hoc_register_menu_data "Apply To" "Listed Panes" "Listed Panes"\
	{ { summary "Set the \"Apply To\" mode such that the user's
interaction with the GUI is applied to all panes
listed in the Tcl variable mged_gui(id,apply_list)
(Note - id refers to the GUI's id)." } }
.$id.menubar.settings.applyTo add radiobutton -value 3 -variable mged_gui($id,apply_to)\
	-label "All Panes" -underline 4
hoc_register_menu_data "Apply To" "All Panes" "All Panes"\
	{ { summary "Set the \"Apply To\" mode such that the user's
interaction with the GUI is applied to all panes." } }

menu .$id.menubar.settings.mouse_behavior -title "Mouse Behavior" -tearoff $mged_default(tearoff_menus)
.$id.menubar.settings.mouse_behavior add radiobutton -value d -variable mged_gui($id,mouse_behavior)\
	-label "Default" -underline 0\
	-command "set_mouse_behavior $id"
hoc_register_menu_data "Mouse Behavior" "Default" "Default Mouse Behavior"\
	{ { synopsis "Enter the default MGED mouse behavior mode." }
          { description "In this mode, the user gets mouse behavior that is
the same as MGED 4.5 and earlier. See the table below.\n\n
\tMouse Button\t\t\tBehavior
\t\t1\t\tZoom out by a factor of 2
\t\t2\t\tCenter View
\t\t3\t\tZoom in by a factor of 2" }
          { see_also "rset, vars" } }
.$id.menubar.settings.mouse_behavior add separator
.$id.menubar.settings.mouse_behavior add radiobutton -value s -variable mged_gui($id,mouse_behavior)\
	-label "Pick Edit-Prim" -underline 10\
	-command "set_mouse_behavior $id"
hoc_register_menu_data "Mouse Behavior" "Pick Edit-Prim" "Pick Edit-Prim"\
	{ { synopsis "Enter pick edit-solid mode." }
          { description "In this mode, the mouse is used to fire rays for selecting
a solid to edit. If more than one solid is hit, a listbox of the hit
solids is presented. The user then selects a solid to edit from
this listbox. If a single solid is hit, it is selected for editing.
If no solids were hit, a dialog is popped up saying that nothing
was hit. The user must then fire another ray to continue selecting
a solid. When a solid is finally selected, solid edit mode is
entered. When this happens, the mouse behavior mode is set to
default mode. Note - When selecting items from a listbox, a left
buttonpress highlights the solid in question until the button is
released. To select a solid, double click with the left mouse button.\n
\tMouse Button\t\t\tBehavior
\t\t1\t\tZoom out by a factor of 2
\t\t2\t\tFire edit-solid ray
\t\t3\t\tZoom in by a factor of 2" }
          { see_also "nirt, qray, rset, sed, vars" } }
.$id.menubar.settings.mouse_behavior add radiobutton -value m -variable mged_gui($id,mouse_behavior)\
	-label "Pick Edit-Matrix" -underline 10\
	-command "set_mouse_behavior $id"
hoc_register_menu_data "Mouse Behavior" "Pick Edit-Matrix" "Pick Edit-Matrix"\
	{ { synopsis "Enter pick edit-matrix mode." }
          { description "In this mode, the mouse is used to fire rays for selecting
a matrix to edit. If more than one solid is hit, a listbox of the
hit solids is presented. The user then selects a solid
from this listbox. If a single solid is hit, that solid is selected.
If no solids were hit, a dialog is popped up saying that nothing was hit.
The user must then fire another ray to continue selecting a matrix to edit.
When a solid is finally selected, the user is presented with a listbox consisting
of the path components of the selected solid. From this lisbox, the
user selects a path component. This component determines which
matrix will be edited. After selecting the path component, object/matrix
edit mode is entered. When this happens, the mouse behavior mode
is set to default mode. Note - When selecting items
from a listbox, a left buttonpress highlights the solid/matrix in question
until the button is released. To select a solid/matrix, double click with
the left mouse button.\n
\tMouse Button\t\t\tBehavior
\t\t1\t\tZoom out by a factor of 2
\t\t2\t\tFire edit-matrix ray
\t\t3\t\tZoom in by a factor of 2" }
          { see_also "rset, vars" } }
.$id.menubar.settings.mouse_behavior add radiobutton -value c -variable mged_gui($id,mouse_behavior)\
	-label "Pick Edit-Combination" -underline 10\
	-command "set_mouse_behavior $id"
hoc_register_menu_data "Mouse Behavior" "Pick Edit-Combination" "Pick Edit-Combination"\
	{ { synopsis "Enter pick edit-combination mode." }
        { description "In this mode, the mouse is used to fire rays for selecting
a combination to edit. If more than one combination is hit, a listbox of the
hit combinations is presented. The user then selects a combination
from this menu. If a single combination is hit, that combination is selected.
If no combinations were hit, a dialog is popped up saying that nothing was hit.
The user must then fire another ray to continue selecting a combination to edit.
When a combination is finally selected, the combination edit tool is presented
and initialized with the values of the selected combination. When this happens,
the mouse behavior mode is set to default mode. Note - When selecting items
from a menu, a left buttonpress highlights the combination in question
until the button is released. To select a combination, double click with
the left mouse button.\n
\tMouse Button\t\t\tBehavior
\t\t1\t\tZoom out by a factor of 2
\t\t2\t\tFire edit-combination ray
\t\t3\t\tZoom in by a factor of 2" }
          { see_also "rset, vars" } }
.$id.menubar.settings.mouse_behavior add separator
.$id.menubar.settings.mouse_behavior add radiobutton -value r -variable mged_gui($id,mouse_behavior)\
	-label "Sweep Raytrace-Rectangle" -underline 6\
	-command "set_mouse_behavior $id"
hoc_register_menu_data "Mouse Behavior" "Sweep Raytrace-Rectangle" "Sweep Raytrace-Rectangle"\
	{ { synopsis "Enter sweep raytrace-rectangle mode." }
          { description "If the framebuffer is active, the rectangular area as
specified by the user is raytraced. The rectangular area is
also painted with the current contents of the framebuffer. Otherwise,
only the rectangle is drawn.\n
\tMouse Button\t\t\tBehavior
\t\t1\t\tZoom out by a factor of 2
\t\t2\t\tDraw raytrace-rectangle
\t\t3\t\tZoom in by a factor of 2" }
          { see_also "rset, vars" } }
.$id.menubar.settings.mouse_behavior add radiobutton -value o -variable mged_gui($id,mouse_behavior)\
	-label "Pick Raytrace-Object(s)" -underline 14\
	-command "set_mouse_behavior $id"
hoc_register_menu_data "Mouse Behavior" "Pick Raytrace-Object(s)" "Pick Raytrace-Object(s)"\
	{ { synopsis "Enter pick raytrace-object mode." }
          { description "Pick an object for raytracing or for adding to the
list of objects to be raytraced." }
          { see_also "rset, vars" } }
.$id.menubar.settings.mouse_behavior add separator
.$id.menubar.settings.mouse_behavior add radiobutton -value q -variable mged_gui($id,mouse_behavior)\
	-label "Query Ray" -underline 0\
	-command "set_mouse_behavior $id"
hoc_register_menu_data "Mouse Behavior" "Query Ray" "Query Ray"\
	{ { synopsis "Enter query ray mode." }
          { description "In this mode, the mouse is used to fire rays. The data
from the fired rays can be viewed textually, graphically
or both.\n
\tMouse Button\t\t\tBehavior
\t\t1\t\tZoom out by a factor of 2
\t\t2\t\tFire query ray
\t\t3\t\tZoom in by a factor of 2" }
          { see_also "nirt, qray, rset, vars" } }
.$id.menubar.settings.mouse_behavior add radiobutton -value p -variable mged_gui($id,mouse_behavior)\
	-label "Sweep Paint-Rectangle" -underline 6\
	-command "set_mouse_behavior $id"
hoc_register_menu_data "Mouse Behavior" "Sweep Paint-Rectangle" "Sweep Paint-Rectangle"\
	{ { synopsis "Enter sweep paint-rectangle mode." }
          { description "If the framebuffer is active, the rectangular area
as specified by the user is painted with the current contents of the
framebuffer. Otherwise, only the rectangle is drawn.\n
\tMouse Button\t\t\tBehavior
\t\t1\t\tZoom out by a factor of 2
\t\t2\t\tDraw paint rectangle
\t\t3\t\tZoom in by a factor of 2" }
          { see_also "rset, vars" } }
.$id.menubar.settings.mouse_behavior add radiobutton -value z -variable mged_gui($id,mouse_behavior)\
	-label "Sweep Zoom-Rectangle" -underline 6\
	-command "set_mouse_behavior $id"
hoc_register_menu_data "Mouse Behavior" "Sweep Zoom-Rectangle" "Sweep Zoom-Rectangle"\
	{ { synopsis "Enter sweep zoom-rectangle mode." }
          { description "The rectangular area as specified by the user is used
to zoom the view. Note - as the user stretches out the zoom
rectangle, the rectangle is constrained to be the same shape as the
window. This insures that the user gets what he or she sees.\n
\tMouse Button\t\t\tBehavior
\t\t1\t\tZoom out by a factor of 2
\t\t2\t\tDraw zoom rectangle
\t\t3\t\tZoom in by a factor of 2" }
          { see_also "rset, vars" } }

menu .$id.menubar.settings.qray -title "Query Ray Effects" -tearoff $mged_default(tearoff_menus)
.$id.menubar.settings.qray add radiobutton -value t -variable mged_gui($id,qray_effects)\
	-label "Text" -underline 0\
	-command "mged_apply $id \"qray effects \$mged_gui($id,qray_effects)\""
hoc_register_menu_data "Query Ray Effects" "Text" "Query Ray Effects - Text"\
	{ { summary "Set qray effects mode to 'text'. In this mode,
only textual output is used to represent the results
of firing a query ray." }
          { see_also "qray" } }
.$id.menubar.settings.qray add radiobutton -value g -variable mged_gui($id,qray_effects)\
	-label "Graphics" -underline 0\
	-command "mged_apply $id \"qray effects \$mged_gui($id,qray_effects)\""
hoc_register_menu_data "Query Ray Effects" "Graphics" "Query Ray Effects - Graphics"\
	{ { summary "Set qray effects mode to 'graphics'. In this mode,
only graphical output is used to represent the results
of firing a query ray." }
          { see_also "qray" } }
.$id.menubar.settings.qray add radiobutton -value b -variable mged_gui($id,qray_effects)\
	-label "Both" -underline 0\
	-command "mged_apply $id \"qray effects \$mged_gui($id,qray_effects)\""
hoc_register_menu_data "Query Ray Effects" "Both" "Query Ray Effects - Both"\
	{ { summary "Set qray effects mode to 'both'. In this mode,
both textual and graphical output is used to
represent the results of firing a query ray." }
          { see_also "qray" } }

set tmp_summary "Set the active pane to be the upper left pane. Any interaction with the GUI that affects a pane
(display manager) will be directed at the upper left pane.

The following is a list of default key bindings for panes:

$mged_default(dm_key_bindings)"
set tmp_hoc [list [list summary $tmp_summary]]
menu .$id.menubar.settings.mpane -title "Active Pane" -tearoff $mged_default(tearoff_menus)
.$id.menubar.settings.mpane add radiobutton -value ul -variable mged_gui($id,dm_loc)\
	-label "Upper Left" -underline 6\
	-command "set_active_dm $id"
hoc_register_menu_data "Active Pane" "Upper Left" "Active Pane - Upper Left" $tmp_hoc

set tmp_summary "Set the active pane to be the upper right pane. Any interaction with the GUI that affects a pane
(display manager) will be directed at the upper right pane.

The following is a list of default key bindings for panes:

$mged_default(dm_key_bindings)"
set tmp_hoc [list [list summary $tmp_summary]]
.$id.menubar.settings.mpane add radiobutton -value ur -variable mged_gui($id,dm_loc)\
	-label "Upper Right" -underline 6\
	-command "set_active_dm $id"
hoc_register_menu_data "Active Pane" "Upper Right" "Active Pane - Upper Right" $tmp_hoc

set tmp_summary "Set the active pane to be the lower left pane. Any interaction with the GUI that affects a pane
(display manager) will be directed at the lower left pane.

The following is a list of default key bindings for panes:

$mged_default(dm_key_bindings)"
set tmp_hoc [list [list summary $tmp_summary]]
.$id.menubar.settings.mpane add radiobutton -value ll -variable mged_gui($id,dm_loc)\
	-label "Lower Left" -underline 2\
	-command "set_active_dm $id"
hoc_register_menu_data "Active Pane" "Lower Left" "Active Pane - Lower Left" $tmp_hoc

set tmp_summary "Set the active pane to be the lower right pane. Any interaction with the GUI that affects a pane
(display manager) will be directed at the lower right pane.

The following is a list of default key bindings for panes:

$mged_default(dm_key_bindings)"
set tmp_hoc [list [list summary $tmp_summary]]
.$id.menubar.settings.mpane add radiobutton -value lr -variable mged_gui($id,dm_loc)\
	-label "Lower Right" -underline 3\
	-command "set_active_dm $id"
hoc_register_menu_data "Active Pane" "Lower Right" "Active Pane - Lower Right" $tmp_hoc

menu .$id.menubar.settings.fb -title "Framebuffer" -tearoff $mged_default(tearoff_menus)
.$id.menubar.settings.fb add radiobutton -value 1 -variable mged_gui($id,fb_all)\
	-label "All" -underline 0\
	-command "mged_apply $id \"set fb_all \$mged_gui($id,fb_all)\"; rt_update_dest $id"
hoc_register_menu_data "Framebuffer" "All" "Framebuffer - All"\
	{ { summary "Use the entire pane for the framebuffer." }
          { see_also "rset, vars" } }
.$id.menubar.settings.fb add radiobutton -value 0 -variable mged_gui($id,fb_all)\
	-label "Rectangle Area" -underline 0\
	-command "mged_apply $id \"set fb_all \$mged_gui($id,fb_all)\"; rt_update_dest $id"
hoc_register_menu_data "Framebuffer" "Rectangle Area" "Framebuffer - Rectangle Area"\
	{ { summary "Use the rectangle area for the framebuffer." }
          { see_also "rset, vars" } }
.$id.menubar.settings.fb add separator
.$id.menubar.settings.fb add radiobutton -value 2 -variable mged_gui($id,fb_overlay)\
	-label "Overlay" -underline 0\
	-command "mged_apply $id \"set fb_overlay \$mged_gui($id,fb_overlay)\"; rt_update_dest $id"
hoc_register_menu_data "Framebuffer" "Overlay" "Framebuffer - Overlay"\
	{ { summary "Put the framebuffer in overlay mode. In this mode,
the framebuffer data is placed above everything.
(i.e. above the geometry and faceplate" }
          { see_also "rset, vars" } }
.$id.menubar.settings.fb add radiobutton -value 1 -variable mged_gui($id,fb_overlay)\
	-label "Interlay" -underline 0\
	-command "mged_apply $id \"set fb_overlay \$mged_gui($id,fb_overlay)\"; rt_update_dest $id"
hoc_register_menu_data "Framebuffer" "Interlay" "Framebuffer - Interlay"\
	{ { summary "Put the framebuffer in interlay mode. In this mode,
the framebuffer data is placed above the geometry
and below the faceplate." }
          { see_also "rset, vars" } }
.$id.menubar.settings.fb add radiobutton -value 0 -variable mged_gui($id,fb_overlay)\
	-label "Underlay" -underline 0\
	-command "mged_apply $id \"set fb_overlay \$mged_gui($id,fb_overlay)\"; rt_update_dest $id"
hoc_register_menu_data "Framebuffer" "Underlay" "Framebuffer - Underlay"\
	{ { summary "Put the framebuffer in underlay mode. In this mode,
the framebuffer data is placed under everything.
(i.e. faceplate and geometry is drawn on top of
the framebuffer data)." }
          { see_also "rset, vars" } }
.$id.menubar.settings.fb add separator
.$id.menubar.settings.fb add checkbutton -offvalue 0 -onvalue 1 -variable mged_gui($id,fb)\
	-label "Framebuffer Active" -underline 0\
	-command "set_fb $id"
hoc_register_menu_data "Framebuffer" "Framebuffer Active" "Framebuffer Active"\
	{ { summary "This activates/deactivates the framebuffer." }
          { see_also "rset, vars" } }
.$id.menubar.settings.fb add checkbutton -offvalue 0 -onvalue 1 -variable mged_gui($id,listen)\
	-label "Listen For Clients" -underline 0\
	-command "set_listen $id"
hoc_register_menu_data "Framebuffer" "Listen For Clients" "Listen For Clients"\
	{ { summary "This activates/deactivates listening for clients.
If the framebuffer is listening for clients, new
data can be passed into the framebuffer. Otherwise,
the framebuffer is write protected. Actually, it is
also read protected. The one exception is that MGED
can still read the framebuffer data." }
          { see_also "rset, vars" } }

menu .$id.menubar.settings.vap -title "View Axes Position" -tearoff $mged_default(tearoff_menus)
.$id.menubar.settings.vap add radiobutton -value 0 -variable mged_gui($id,view_pos)\
	-label "Center" -underline 0\
	-command "mged_apply $id \"rset ax view_pos 0 0\""
hoc_register_menu_data "View Axes Position" "Center" "View Axes Position - Center"\
	{ { summary "Place the view axes in the center of the active pane." }
          { see_also "rset" } }
.$id.menubar.settings.vap add radiobutton -value 1 -variable mged_gui($id,view_pos)\
	-label "Lower Left" -underline 2\
	-command "mged_apply $id \"rset ax view_pos -1750 -1750\""
hoc_register_menu_data "View Axes Position" "Lower Left" "View Axes Position - Lower Left"\
	{ { summary "Place the view axes in the lower left corner of the active pane." }
          { see_also "rset" } }
.$id.menubar.settings.vap add radiobutton -value 2 -variable mged_gui($id,view_pos)\
	-label "Upper Left" -underline 6\
	-command "mged_apply $id \"rset ax view_pos -1750 1750\""
hoc_register_menu_data "View Axes Position" "Upper Left" "View Axes Position - Upper Left"\
	{ { summary "Place the view axes in the upper left corner of the active pane." }
          { see_also "rset" } }
.$id.menubar.settings.vap add radiobutton -value 3 -variable mged_gui($id,view_pos)\
	-label "Upper Right" -underline 6\
	-command "mged_apply $id \"rset ax view_pos 1750 1750\""
hoc_register_menu_data "View Axes Position" "Upper Right" "View Axes Position - Upper Right"\
	{ { summary "Place the view axes in the upper right corner of the active pane." }
          { see_also "rset" } }
.$id.menubar.settings.vap add radiobutton -value 4 -variable mged_gui($id,view_pos)\
	-label "Lower Right" -underline 3\
	-command "mged_apply $id \"rset ax view_pos 1750 -1750\""
hoc_register_menu_data "View Axes Position" "Lower Right" "View Axes Position - Lower Right"\
	{ { summary "Place the view axes in the lower right corner of the active pane." }
          { see_also "rset" } }

menu .$id.menubar.settings.grid -title "Grid" -tearoff $mged_default(tearoff_menus)
.$id.menubar.settings.grid add command -label "Anchor" -underline 0\
	-command "do_grid_anchor $id"
hoc_register_menu_data "Grid" "Anchor" "Grid Anchor"\
	{ { summary "Pops up the grid anchor entry dialog." }
          { see_also "rset" } }
.$id.menubar.settings.grid add cascade -label "Spacing" -underline 1\
	-menu .$id.menubar.settings.grid.spacing
.$id.menubar.settings.grid add separator
.$id.menubar.settings.grid add checkbutton -offvalue 0 -onvalue 1 -variable mged_gui($id,grid_draw)\
	-label "Draw Grid" -underline 0\
	-command "mged_draw_grid $id"
hoc_register_menu_data "Grid" "Draw Grid" "Draw Grid"\
	{ { summary "Toggle drawing the grid. The grid is a lattice
of points over the pane (geometry window). The
regular spacing between the points gives the user
accurate visual cues regarding dimension. This
spacing can be set by the user." }
          { see_also "rset" } }
.$id.menubar.settings.grid add checkbutton -offvalue 0 -onvalue 1 -variable mged_gui($id,draw_snap)\
	-label "Snap To Grid" -underline 0\
	-command "mged_apply $id \"rset grid snap \$mged_gui($id,draw_snap)\""
hoc_register_menu_data "Grid" "Snap To Grid" "Snap To Grid"\
	{ { summary "Toggle grid snapping. When snapping to grid,
the internal routines that use the mouse pointer
location, move/snap that location to the nearest
grid point. This gives the user high accuracy with
the mouse for transforming the view or editing
solids/matrices." }
          { see_also "rset" } }

menu .$id.menubar.settings.grid.spacing -title "Grid Spacing" -tearoff $mged_default(tearoff_menus)
.$id.menubar.settings.grid.spacing add command -label "Autosize" -underline 0\
	-command "grid_spacing_autosize $id; grid_spacing_apply $id b"
hoc_register_menu_data "Grid Spacing" "Autosize" "Grid Spacing - Autosize"\
	{ { summary "Set the grid spacing according to the current view size.
The number of ticks will be between 20 and 200 in user units.
The major spacing will be set to 10 ticks per major." }
          { see_also "rset" } }
.$id.menubar.settings.grid.spacing add command -label "Arbitrary" -underline 1\
	-command "do_grid_spacing $id b"
hoc_register_menu_data "Grid Spacing" "Arbitrary" "Grid Spacing - Arbitrary"\
	{ { summary "Pops up the grid spacing entry dialog. The user
can use this to set both the horizontal and
vertical tick spacing." }
          { see_also "rset" } }
.$id.menubar.settings.grid.spacing add separator
.$id.menubar.settings.grid.spacing add command -label "Micrometer" -underline 4\
	-command "set_grid_spacing $id micrometer 1"
hoc_register_menu_data "Grid Spacing" "Micrometer" "Grid Spacing - Micrometer"\
	{ { summary "Set the horizontal and vertical tick
spacing to 1 micrometer." }
          { see_also "rset" } }
.$id.menubar.settings.grid.spacing add command -label "Millimeter" -underline 2\
	-command "set_grid_spacing $id millimeter 1"
hoc_register_menu_data "Grid Spacing" "Millimeter" "Grid Spacing - Millimeter"\
	{ { summary "Set the horizontal and vertical tick
spacing to 1 millimeter." }
          { see_also "rset" } }
.$id.menubar.settings.grid.spacing add command -label "Centimeter" -underline 0\
	-command "set_grid_spacing $id centimeter 1"
hoc_register_menu_data "Grid Spacing" "Centimeter" "Grid Spacing - Centimeter"\
	{ { summary "Set the horizontal and vertical tick
spacing to 1 centimeter." }
          { see_also "rset" } }
.$id.menubar.settings.grid.spacing add command -label "Decimeter" -underline 0\
	-command "set_grid_spacing $id decimeter 1"
hoc_register_menu_data "Grid Spacing" "Decimeter" "Grid Spacing - Decimeter"\
	{ { summary "Set the horizontal and vertical tick
spacing to 1 decimeter." }
          { see_also "rset" } }
.$id.menubar.settings.grid.spacing add command -label "Meter" -underline 0\
	-command "set_grid_spacing $id meter 1"
hoc_register_menu_data "Grid Spacing" "Meter" "Grid Spacing - Meter"\
	{ { summary "Set the horizontal and vertical tick
spacing to 1 meter." }
          { see_also "rset" } }
.$id.menubar.settings.grid.spacing add command -label "Kilometer" -underline 0\
	-command "set_grid_spacing $id kilometer 1"
hoc_register_menu_data "Grid Spacing" "Kilometer" "Grid Spacing - Kilometer"\
	{ { summary "Set the horizontal and vertical tick
spacing to 1 kilometer." }
          { see_also "rset" } }
.$id.menubar.settings.grid.spacing add separator
.$id.menubar.settings.grid.spacing add command -label "1/10 Inch" -underline 0\
	-command "set_grid_spacing $id \"1/10 inch\" 1"
hoc_register_menu_data "Grid Spacing" "1/10 Inch" "Grid Spacing - 1/10 Inch"\
	{ { summary "Set the horizontal and vertical tick
spacing to 1/10 inches." }
          { see_also "rset" } }
.$id.menubar.settings.grid.spacing add command -label "1/4 Inch" -underline 2\
	-command "set_grid_spacing $id \"1/4 inch\" 1"
hoc_register_menu_data "Grid Spacing" "1/4 Inch" "Grid Spacing - 1/4 Inch"\
	{ { summary "Set the horizontal and vertical tick
spacing to 1/4 inches." }
          { see_also "rset" } }
.$id.menubar.settings.grid.spacing add command -label "1/2 Inch" -underline 2\
	-command "set_grid_spacing $id \"1/2 inch\" 1"
hoc_register_menu_data "Grid Spacing" "1/2 Inch" "Grid Spacing - 1/2 Inch"\
	{ { summary "Set the horizontal and vertical tick
spacing to 1/2 inches." }
          { see_also "rset" } }
.$id.menubar.settings.grid.spacing add command -label "Inch" -underline 0\
	-command "set_grid_spacing $id inch 1"
hoc_register_menu_data "Grid Spacing" "Inch" "Grid Spacing - Inch"\
	{ { summary "Set the horizontal and vertical tick
spacing to 1 inch." }
          { see_also "rset" } }
.$id.menubar.settings.grid.spacing add command -label "Foot" -underline 0\
	-command "set_grid_spacing $id foot 1"
hoc_register_menu_data "Grid Spacing" "Foot" "Grid Spacing - Foot"\
	{ { summary "Set the horizontal and vertical tick
spacing to 1 foot." }
          { see_also "rset" } }
.$id.menubar.settings.grid.spacing add command -label "Yard" -underline 0\
	-command "set_grid_spacing $id yard 1"
hoc_register_menu_data "Grid Spacing" "Yard" "Grid Spacing - Yard"\
	{ { summary "Set the horizontal and vertical tick
spacing to 1 yard." }
          { see_also "rset" } }
.$id.menubar.settings.grid.spacing add command -label "Mile" -underline 3\
	-command "set_grid_spacing $id mile 1"
hoc_register_menu_data "Grid Spacing" "Mile" "Grid Spacing - Mile"\
	{ { summary "Set the horizontal and vertical tick
spacing to 1 mile." }
          { see_also "rset" } }
d2146 20
a2165 638
#
# Don't need to register menu data here. Already being done above.
#
menu .$id.menubar.settings.grid_spacing -title "Grid Spacing" -tearoff $mged_default(tearoff_menus)
.$id.menubar.settings.grid_spacing add command -label "Autosize" -underline 0\
	-command "grid_spacing_autosize $id; grid_spacing_apply $id b"
.$id.menubar.settings.grid_spacing add command -label "Arbitrary" -underline 1\
	-command "do_grid_spacing $id b"
.$id.menubar.settings.grid_spacing add separator
.$id.menubar.settings.grid_spacing add command -label "Micrometer" -underline 4\
	-command "set_grid_spacing $id micrometer 1"
.$id.menubar.settings.grid_spacing add command -label "Millimeter" -underline 2\
	-command "set_grid_spacing $id millimeter 1"
.$id.menubar.settings.grid_spacing add command -label "Centimeter" -underline 0\
	-command "set_grid_spacing $id centimeter 1"
.$id.menubar.settings.grid_spacing add command -label "Decimeter" -underline 0\
	-command "set_grid_spacing $id decimeter 1"
.$id.menubar.settings.grid_spacing add command -label "Meter" -underline 0\
	-command "set_grid_spacing $id meter 1"
.$id.menubar.settings.grid_spacing add command -label "Kilometer" -underline 0\
	-command "set_grid_spacing $id kilometer 1"
.$id.menubar.settings.grid_spacing add separator
.$id.menubar.settings.grid_spacing add command -label "1/10 Inch" -underline 0\
	-command "set_grid_spacing $id \"1/10 inch\" 1"
.$id.menubar.settings.grid_spacing add command -label "1/4 Inch" -underline 2\
	-command "set_grid_spacing $id \"1/4 inch\" 1"
.$id.menubar.settings.grid_spacing add command -label "1/2 Inch" -underline 2\
	-command "set_grid_spacing $id \"1/2 inch\" 1"
.$id.menubar.settings.grid_spacing add command -label "Inch" -underline 0\
	-command "set_grid_spacing $id inch 1"
.$id.menubar.settings.grid_spacing add command -label "Foot" -underline 0\
	-command "set_grid_spacing $id foot 1"
.$id.menubar.settings.grid_spacing add command -label "Yard" -underline 0\
	-command "set_grid_spacing $id yard 1"
.$id.menubar.settings.grid_spacing add command -label "Mile" -underline 3\
	-command "set_grid_spacing $id mile 1"

menu .$id.menubar.settings.coord -title "Constraint Coords" -tearoff $mged_default(tearoff_menus)
.$id.menubar.settings.coord add radiobutton -value m -variable mged_gui($id,coords)\
	-label "Model" -underline 0\
	-command "mged_apply $id \"set coords \$mged_gui($id,coords)\""
hoc_register_menu_data "Constraint Coords" "Model" "Constraint Coords - Model"\
	{ { summary "Constrained transformations will use model coordinates." }
          { see_also "rset, vars" } }
.$id.menubar.settings.coord add radiobutton -value v -variable mged_gui($id,coords)\
	-label "View" -underline 0\
	-command "mged_apply $id \"set coords \$mged_gui($id,coords)\""
hoc_register_menu_data "Constraint Coords" "View" "Constraint Coords - View"\
	{ { summary "Constrained transformations will use view coordinates." }
          { see_also "rset, vars" } }
.$id.menubar.settings.coord add radiobutton -value o -variable mged_gui($id,coords)\
	-label "Object" -underline 0\
	-command "mged_apply $id \"set coords \$mged_gui($id,coords)\"" -state disabled
hoc_register_menu_data "Constraint Coords" "Object" "Constraint Coords - Object"\
	{ { summary "Constrained transformations will use object coordinates." }
          { see_also "rset, vars" } }

menu .$id.menubar.settings.origin -title "Rotate About" -tearoff $mged_default(tearoff_menus)
.$id.menubar.settings.origin add radiobutton -value v -variable mged_gui($id,rotate_about)\
	-label "View Center" -underline 0\
	-command "mged_apply $id \"set rotate_about \$mged_gui($id,rotate_about)\""
hoc_register_menu_data "Rotate About" "View Center" "Rotate About - View Center"\
	{ { summary "Set the center of rotation to be about the view center." }
          { see_also "rset, vars" } }
.$id.menubar.settings.origin add radiobutton -value e -variable mged_gui($id,rotate_about)\
	-label "Eye" -underline 0\
	-command "mged_apply $id \"set rotate_about \$mged_gui($id,rotate_about)\""
hoc_register_menu_data "Rotate About" "Eye" "Rotate About - Eye"\
	{ { summary "Set the center of rotation to be about the eye." }
          { see_also "rset, vars" } }
.$id.menubar.settings.origin add radiobutton -value m -variable mged_gui($id,rotate_about)\
	-label "Model Origin" -underline 0\
	-command "mged_apply $id \"set rotate_about \$mged_gui($id,rotate_about)\""
hoc_register_menu_data "Rotate About" "Model Origin" "Rotate About - Model Origin"\
	{ { summary "Set the center of rotation to be about the model origin." }
          { see_also "rset, vars" } }
.$id.menubar.settings.origin add radiobutton -value k -variable mged_gui($id,rotate_about)\
	-label "Key Point" -underline 0\
	-command "mged_apply $id \"set rotate_about \$mged_gui($id,rotate_about)\"" -state disabled
hoc_register_menu_data "Rotate About" "Key Point" "Rotate About - Key Point"\
	{ { summary "Set the center of rotation to be about the key point." }
          { see_also "rset, vars" } }

menu .$id.menubar.settings.transform -title "Transform" -tearoff $mged_default(tearoff_menus)
.$id.menubar.settings.transform add radiobutton -value v -variable mged_gui($id,transform)\
	-label "View" -underline 0\
	-command "set_transform $id"
hoc_register_menu_data "Transform" "View" "Transform - View"\
	{ { summary "Set the transform mode to VIEW. When in VIEW mode, the mouse
can be used to transform the view. This is the default." }
          { see_also "rset, vars" } }
.$id.menubar.settings.transform add radiobutton -value a -variable mged_gui($id,transform)\
	-label "ADC" -underline 0\
	-command "set_transform $id"
hoc_register_menu_data "Transform" "ADC" "Transform - ADC"\
	{ { summary "Set the transform mode to ADC. When in ADC mode, the mouse
can be used to transform the angle distance cursor while the
angle distance cursor is being displayed. If the angle distance
cursor is not being displayed, the behavior is the same as VIEW
mode." }
          { see_also "rset, vars" } }
.$id.menubar.settings.transform add radiobutton -value e -variable mged_gui($id,transform)\
	-label "Model Params" -underline 0\
	-command "set_transform $id" -state disabled
hoc_register_menu_data "Transform" "Model Params" "Transform - Model Params"\
	{ { summary "Set the transform mode to Model Params. When in Model Params
mode, the mouse can be used to transform the model parameters." }
          { see_also "rset, vars" } }

menu .$id.menubar.modes -title "Modes" -tearoff $mged_default(tearoff_menus)
.$id.menubar.modes add checkbutton -offvalue 0 -onvalue 1 -variable mged_gui($id,grid_draw)\
	-label "Draw Grid" -underline 0\
	-command "mged_draw_grid $id"
hoc_register_menu_data "Modes" "Draw Grid" "Draw Grid"\
	{ { summary "Toggle drawing the grid. The grid is a lattice
of points over the pane (geometry window). The
regular spacing between the points gives the user
accurate visual cues regarding dimension. This
spacing can be set by the user." }
          { see_also "rset" } }
.$id.menubar.modes add checkbutton -offvalue 0 -onvalue 1 -variable mged_gui($id,draw_snap)\
	-label "Snap To Grid" -underline 0\
	-command "mged_apply $id \"rset grid snap \$mged_gui($id,draw_snap)\""
hoc_register_menu_data "Modes" "Snap To Grid" "Snap To Grid"\
	{ { summary "Toggle grid snapping. When snapping to grid,
the internal routines that use the mouse pointer
location, move/snap that location to the nearest
grid point. This gives the user high accuracy with
the mouse for transforming the view or editing
solids/matrices." }
          { see_also "rset" } }
.$id.menubar.modes add separator
.$id.menubar.modes add checkbutton -offvalue 0 -onvalue 1 -variable mged_gui($id,fb)\
	-label "Framebuffer Active" -underline 0 \
	-command "set_fb $id"
hoc_register_menu_data "Modes" "Framebuffer Active" "Framebuffer Active"\
	{ { summary "This activates/deactivates the framebuffer." }
          { see_also "rset, vars" } }
.$id.menubar.modes add checkbutton -offvalue 0 -onvalue 1 -variable mged_gui($id,listen)\
	-label "Listen For Clients" -underline 0\
	-command "set_listen $id"
hoc_register_menu_data "Modes" "Listen For Clients" "Listen For Clients"\
	{ { summary "
This activates/deactivates listening for clients. If
the framebuffer is listening for clients, new data can
be passed into the framebuffer. Otherwise, the framebuffer
is write protected. Actually, it is also read protected
with one exception. MGED can still read the framebuffer
data." }
          { see_also "rset, vars" } }
.$id.menubar.modes add separator
.$id.menubar.modes add checkbutton -offvalue 0 -onvalue 1 -variable mged_gui($id,rubber_band)\
	-label "Persistent Sweep Rectangle" -underline 0\
	-command "mged_apply $id \"rset rb draw \$mged_gui($id,rubber_band)\""
hoc_register_menu_data "Modes" "Persistent sweep rectangle" "Persistent Rubber Band"\
	{ { summary "Toggle drawing the rectangle while idle." }
          { see_also "rset" } }
.$id.menubar.modes add checkbutton -offvalue 0 -onvalue 1 -variable mged_gui($id,adc_draw)\
	-label "Angle/Dist Cursor" -underline 0 \
	-command "adc_CBHandler $id"
hoc_register_menu_data "Modes" "Angle/Dist Cursor" "Angle/Dist Cursor"\
	{ { summary "Toggle drawing the angle distance cursor." }
          { see_also "adc" } }
.$id.menubar.modes add checkbutton -offvalue 0 -onvalue 1 -variable mged_gui($id,faceplate)\
	-label "Faceplate" -underline 7\
	-command "mged_apply $id \"set faceplate \$mged_gui($id,faceplate)\""
hoc_register_menu_data "Modes" "Faceplate" "Faceplate"\
	{ { summary "Toggle drawing the MGED faceplate." }
          { see_also "rset, vars" } }
.$id.menubar.modes add cascade -label "Axes" -underline 1\
	-menu .$id.menubar.modes.axes
.$id.menubar.modes add separator
.$id.menubar.modes add checkbutton -offvalue 0 -onvalue 1 -variable mged_gui($id,multi_pane)\
	-label "Multipane" -underline 0 -command "setmv $id"
hoc_register_menu_data "Modes" "Multipane" "Multipane"\
	{ { summary "
Toggle between multipane and single pane mode.
In multipane mode there are four panes, each
with its own state." } }
.$id.menubar.modes add checkbutton -offvalue 0 -onvalue 1 -variable mged_gui($id,show_edit_info)\
	-label "Edit Info" -underline 0\
	-command "toggle_edit_info $id"
hoc_register_menu_data "Modes" "Edit Info" "Edit Info"\
	{ { summary "
Toggle display of edit information. If in
solid edit state, the edit information is
displayed in the internal solid editor. This
editor, as its name implies, can be used to
edit the solid as well as to view its contents.
If in object edit state, the object information
is displayed in a dialog box." } }
.$id.menubar.modes add checkbutton -offvalue 0 -onvalue 1 -variable mged_gui($id,show_status)\
	-label "Status Bar" -underline 7\
	-command "toggle_status_bar $id"
hoc_register_menu_data "Modes" "Status Bar" "Status Bar"\
	{ { summary "Toggle display of the command window's status bar." } }
if {$comb} {
.$id.menubar.modes add checkbutton -offvalue 0 -onvalue 1 -variable mged_gui($id,show_cmd)\
	-label "Command Window" -underline 0\
	-command "set_cmd_win $id"
hoc_register_menu_data "Modes" "Command Window" "Command Window"\
	{ { summary "Toggle display of the command window." } }
.$id.menubar.modes add checkbutton -offvalue 0 -onvalue 1 -variable mged_gui($id,show_dm)\
	-label "Graphics Window" -underline 0\
	-command "set_dm_win $id"
hoc_register_menu_data "Modes" "Graphics Window" "Graphics Window"\
	{ { summary "Toggle display of the graphics window." } }
} 
.$id.menubar.modes add separator
.$id.menubar.modes add checkbutton -offvalue 0 -onvalue 1 -variable mged_gui($id,collaborate)\
	-label "Collaborate" -underline 0\
	-command "collab_doit $id"
hoc_register_menu_data "Modes" "Collaborate" "Collaborate"\
	{ { summary "Toggle collaborate mode. When in collaborate
mode, the upper right pane's view can be shared
with other instances of MGED's new GUI that are
also collaborating." } }
.$id.menubar.modes add checkbutton -offvalue 0 -onvalue 1 -variable mged_gui($id,rateknobs)\
	-label "Rateknobs" -underline 0\
	-command "mged_apply $id \"set rateknobs \$mged_gui($id,rateknobs)\""
hoc_register_menu_data "Modes" "Rateknobs" "Rate Knobs"\
	{ { summary "Toggle rate knob mode. When in rate knob mode,
transformation with the mouse becomes rate based.
For example, if the user rotates the view about
the X axis, the view continues to rotate about the
X axis until the rate rotation is stopped." }
          { see_also "knob" } }
.$id.menubar.modes add checkbutton -offvalue 0 -onvalue 1 -variable mged_gui($id,dlist)\
	-label "Display Lists" -underline 8\
	-command "mged_apply $id \"set dlist \$mged_gui($id,dlist)\""
hoc_register_menu_data "Modes" "Display Lists" "Display Lists"\
	{ { summary "Toggle the use of display lists. This currently affects
only Ogl display managers. When using display lists the
screen update time is significantly faster. This is especially
noticable when running MGED remotely. Use of display lists
is encouraged unless the geometry being viewed is bigger
than the Ogl server can handle (i.e. the server runs out
of available memory for storing display lists). When this
happens the machine will begin to swap (and little else).
If huge pieces of geometry need to be viewed, consider
toggling off display lists. Note that using display lists
while viewing geometry of any significant size will incur
noticable compute time up front to create the display lists."} }

menu .$id.menubar.modes.axes -title "Axes" -tearoff $mged_default(tearoff_menus)
.$id.menubar.modes.axes add checkbutton -offvalue 0 -onvalue 1\
	-variable mged_gui($id,view_draw) -label "View" -underline 0\
	-command "mged_apply $id \"rset ax view_draw \$mged_gui($id,view_draw)\""
hoc_register_menu_data "Axes" "View" "View Axes"\
	{ { summary "Toggle display of the view axes. The view axes
are used to give the user visual cues indicating
the current view of model space. These axes are
drawn the same as the model axes, except that the
view axes' position is fixed in view space. This
position as well as other characteristics can be
set by the user." }
          { see_also "rset" } }
.$id.menubar.modes.axes add checkbutton -offvalue 0 -onvalue 1\
	-variable mged_gui($id,model_draw) -label "Model" -underline 0\
	-command "mged_apply $id \"rset ax model_draw \$mged_gui($id,model_draw)\""
hoc_register_menu_data "Axes" "Model" "Model Axes"\
	{ { summary "Toggle display of the model axes. The model axes
are used to give the user visual cues indicating
the current view of model space. The model axes
are by default located at the model origin and are
fixed in model space. So, if the user transforms
the view, the model axes will move with respect to
the view. The model axes position as well as other
characteristics can be set by the user." }
          { see_also "rset" } }
.$id.menubar.modes.axes add checkbutton -offvalue 0 -onvalue 1\
	-variable mged_gui($id,edit_draw) -label "Edit" -underline 0\
	-command "mged_apply $id \"rset ax edit_draw \$mged_gui($id,edit_draw)\""
hoc_register_menu_data "Axes" "Edit" "Edit Axes"\
	{ { summary "Toggle display of the edit axes. The edit axes
are used to give the user visual cues indicating
how the edit is progressing. They consist of a
pair of axes. One remains unmoved, while the other
moves to indicate how things have changed." }
          { see_also "rset" } }

menu .$id.menubar.misc -title "Misc" -tearoff $mged_default(tearoff_menus)
.$id.menubar.misc add checkbutton -offvalue 0 -onvalue 1\
	-variable mged_gui($id,zclip) -label "Z Clipping" -underline 0\
	-command "mged_apply $id \"dm set zclip \$mged_gui($id,zclip)\""
hoc_register_menu_data "Misc" "Z Clipping" "Z Clipping"\
	{ { summary "Toggle zclipping. When zclipping is active, the Z value
of each point is checked against the min and max Z values
of the viewing cube. If the Z value of the point is found
to be outside this range, it is clipped (i.e. not drawn).
Zclipping can be used to remove geometric detail that may
be occluding geometry of greater interest." }
          { see_also "dm" } }
.$id.menubar.misc add checkbutton -offvalue 0 -onvalue 1\
	-variable mged_gui($id,perspective_mode) -label "Perspective" -underline 0\
	-command "mged_apply $id \"set perspective_mode \$mged_gui($id,perspective_mode)\""
hoc_register_menu_data "Misc" "Perspective" "Perspective"\
	{ { summary "Toggle perspective_mode."}
          { see_also "rset, vars" } }
.$id.menubar.misc add checkbutton -offvalue 0 -onvalue 1\
	-variable mged_gui($id,faceplate) -label "Faceplate" -underline 0\
	-command "mged_apply $id \"set faceplate \$mged_gui($id,faceplate)\""
hoc_register_menu_data "Misc" "Faceplate" "Faceplate"\
	{ { summary "Toggle drawing the MGED faceplate." }
          { see_also "rset, vars" } }
.$id.menubar.misc add checkbutton -offvalue 0 -onvalue 1\
	-variable mged_gui($id,orig_gui) -label "Faceplate GUI" -underline 10\
	-command "mged_apply $id \"set orig_gui \$mged_gui($id,orig_gui)\""
hoc_register_menu_data "Misc" "Faceplate GUI" "Faceplate GUI"\
	{ { summary "Toggle drawing the MGED faceplate GUI. The faceplate GUI
consists of the faceplate menu and sliders." }
          { see_also "rset, vars" } }
.$id.menubar.misc add checkbutton -offvalue 0 -onvalue 1\
	-variable mged_gui($id,forward_keys) -label "Keystroke Forwarding" -underline 0\
	-command "mged_apply $id \"set_forward_keys \\\[winset\\\] \$mged_gui($id,forward_keys)\""
hoc_register_menu_data "Misc" "Keystroke Forwarding" "Keystroke Forwarding"\
	{ { summary "Toggle keystroke forwarding. When forwarding keystrokes, each
key event within the drawing window is forwarded to the command
window. Drawing window specific commands (i.e. commands that
modify the state of the drawing window) will apply only to the
drawing window wherein the user typed. This feature is provided
to lessen the need to use the mouse." } }
if {$mged_gui($id,dtype) == "ogl"} {
    .$id.menubar.misc add checkbutton -offvalue 0 -onvalue 1\
	    -variable mged_gui($id,depthcue) -label "Depth Cueing" -underline 0\
	    -command "mged_apply $id \"dm set depthcue \$mged_gui($id,depthcue)\""
    hoc_register_menu_data "Misc" "Depth Cueing" "Depth Cueing"\
	    { { summary "Toggle depth cueing. When depth cueing is active,
lines that are farther away appear more faint." } 
    { see_also "dm" } }
    .$id.menubar.misc add checkbutton -offvalue 0 -onvalue 1\
	    -variable mged_gui($id,zbuffer) -label "Z Buffer" -underline 2\
	    -command "mged_apply $id \"dm set zbuffer \$mged_gui($id,zbuffer)\""
    hoc_register_menu_data "Misc" "Z Buffer" "Z Buffer"\
	    { { summary "Toggle Z buffer." }
              { see_also "dm" } }
    .$id.menubar.misc add checkbutton -offvalue 0 -onvalue 1\
	    -variable mged_gui($id,lighting) -label "Lighting" -underline 0\
	    -command "mged_apply $id \"dm set lighting \$mged_gui($id,lighting)\""
    hoc_register_menu_data "Misc" "Lighting" "Lighting"\
	    { { summary "Toggle lighting." }
              { see_also "dm" } }
}

menu .$id.menubar.tools -title "Tools" -tearoff $mged_default(tearoff_menus)
.$id.menubar.tools add command -label "ADC Control Panel" -underline 0\
	-command "init_adc_control $id"
hoc_register_menu_data "Tools" "ADC Control Panel" "ADC Control Panel"\
	{ { summary "Tool for controlling the angle distance cursor." }
          { see_also "adc" } }
.$id.menubar.tools add command -label "Grid Control Panel" -underline 0\
	-command "init_grid_control $id"
hoc_register_menu_data "Tools" "Grid Control Panel" "Grid Control Panel"\
	{ { summary "Tool for setting grid parameters." }
          { see_also "rset" } }
.$id.menubar.tools add command -label "Query Ray Control Panel" -underline 0\
	-command "init_qray_control $id"
hoc_register_menu_data "Tools" "Query Ray Control Panel" "Query Ray Control Panel"\
	{ { summary "Tool for setting query ray parameters." }
          { see_also "qray" } }
.$id.menubar.tools add command -label "Raytrace Control Panel" -underline 0\
	-command "init_Raytrace $id"
hoc_register_menu_data "Tools" "Raytrace Control Panel" "Raytrace Control Panel"\
	{ { summary "Tool for raytracing." }
          { see_also rt } }

.$id.menubar.tools add command -label "Build Pattern Tool" -underline 0\
	-command "pattern_control .#auto"
hoc_register_menu_data "Tools" "Build Pattern Tool" "Build Pattern Tool"\
	{ { summary "A tool for building a repetitive pattern from an existing object." } }

.$id.menubar.tools add command -label "Overlap Tool" -underline 0\
	-command "overlap_tool $id"
hoc_register_menu_data "Tools" "Overlap Tool" "Overlap Tool"\
	{ { summary "A tool for discovering and correcting overlapping regions." } }

.$id.menubar.tools add command -label "AnimMate Control Panel" -underline 1\
	-command "animmate $id .$id"
hoc_register_menu_data "Tools" "AnimMate Control Panel" "AnimMate Control Panel"\
	{ { summary "Tool for building animation scripts." }
          { see_also animmate } }

.$id.menubar.tools add command -label "Upgrade Database..." -underline 1\
	-command "dbupgrade"
hoc_register_menu_data "Tools" "Upgrade Database..." "Upgrade Database..."\
	{ { summary "Upgrade to the current database format." }
          { see_also dbupgrade } }

.$id.menubar.tools add separator
.$id.menubar.tools add command -label "Prim Editor" -underline 0\
	-command "init_edit_solid $id"
hoc_register_menu_data "Tools" "Prim Editor" "Prim Editor"\
	{ { summary "Tool for creating/editing primitives." } }
.$id.menubar.tools add command -label "Combination Editor" -underline 0\
	-command "init_comb $id"
hoc_register_menu_data "Tools" "Combination Editor" "Combination Editor"\
	{ { summary "Tool for creating/editing combinations." } }
.$id.menubar.tools add command -label "Color Editor" -underline 1\
	-command "cadColorWidget tool .$id colorEditTool\
	-title \"Color Editor\"\
	-initialcolor black"
hoc_register_menu_data "Tools" "Color Editor" "Color Editor"\
	{ { summary "Tool for creating/displaying colors." } }
.$id.menubar.tools add separator
.$id.menubar.tools add command -label "Command Window" -underline 6\
	-command "raise .$id"
hoc_register_menu_data "Tools" "Command Window" "Command Window"\
	{ { summary "Raise the command window." } }
.$id.menubar.tools add command -label "Geometry Window" -underline 7\
	-command "raise $mged_gui($id,top)"
hoc_register_menu_data "Tools" "Geometry Window" "Geometry Window"\
	{ { summary "Raise the geometry window." } }

menu .$id.menubar.help -title "Help" -tearoff $mged_default(tearoff_menus)
.$id.menubar.help add command -label "Dedication" -underline 0\
	-command "mike_dedication $id"
.$id.menubar.help add command -label "About MGED" -underline 0\
	-command "do_About_MGED $id"
hoc_register_menu_data "Help" "About MGED" "About MGED"\
	{ { summary "Information about MGED" } }
.$id.menubar.help add command -label "Help On Context" -underline 0\
	-command "hoc_dialog .$id.menubar.help \"Help,Help On Context\""
hoc_register_menu_data "Help" "Help On Context" "Help On Context"\
	{ { summary "The new GUI provides \"Help On Context\". This is always available via
the right mouse button (i.e. button 3). The user can right mouse click
on some feature of the GUI and a message window pops up with information
about the feature. This behavior works everywhere except in the drawing
panes (i.e. display manager windows) where a right mouse button is bound
to \"zoom 2.0\"." } }
.$id.menubar.help add command -label "Getting Started" -underline 0\
	-command "hoc_dialog .$id.menubar.help \"Help,Getting Started Document\""
hoc_register_menu_data "Help" "Getting Started" "Getting Started"\
	{ { summary "This document contains information to help the user
quickly get started using MGED." } }
hoc_register_menu_data "Help" "Getting Started Document" "Getting Started"\
	{ { synopsis "mged \[-c\] \[-d display\] \[-h\] \[-r\] \[-x#\] \[-X#\]\
\[database \[command\]\]" }
{ description "The -c (Classic MGED) option causes MGED to start in the style of
previous versions of MGED, that is, by prompting the user to select
a display manager to attach and by remaining attached to the tty.
Without this option MGED will detach itself from the tty and bring
up the new GUI. The -d option provides a way to specify a display
string. This string is expected to be in the same format as the X
DISPLAY environment variable. The -h option causes the help message
to print out. The -r option causes the database to be read-only (i.e.
no editing allowed). The -x and -X options provide a way for the user
to specify the debug level of librt and libbu, respectively. Note that
if MGED is started by redirecting stdin or stdout, MGED will not enter
interactive mode. Similarly, if MGED is started with a command, that
command will be executed and MGED will exit. If the user starts MGED in
\"Classic\" mode, the new GUI is still available. See the \"gui\" command.
There can be many instances of the GUI running at the same time. Each
instance of the GUI owns four display manager windows (panes) and by
default each of these panes has its view initialized as follows:

\t\tPane\t\tAzimuth and Elevation
\t\tupper left\t\t0 90
\t\tupper right\t\t35 25
\t\tlower left\t\t0 0
\t\tlower right\t\t90 0.

All four panes can be displayed simultaneously, or a single large pane
containing the active pane can be displayed (look in the \"Modes\" menu).
The active pane is the pane that is controlled by the GUI. The active pane
can be changed from the \"Settings\" menu, or by certain key or mouse button
actions. Essentially, any key sequence or mouse button action that will pop
up an MGED menu in the pane will cause the active pane to move to the pane
wherein this action occurred. For example, alt-f will pop up the file menu
and make this pane the active pane. Similarly, alt-Button1 will pop up the
\"Settings\" menu and alt-Button2 will pop up the \"Modes\" menu.
        The new GUI also provides \"Help on Context\". This is always
available via the right mouse button (i.e. button 3). The user can right
mouse click on some feature of the GUI and a message window pops up with
information about the feature. This behavior works everywhere except in the
drawing panes (i.e. display manager windows) where a right mouse click is
bound to \"zoom 2.0\".
        There are many new features and improvements in MGED providing greater
access to its underlying power. The single greatest improvement to MGED is
the incorporation of Tcl/Tk. Tcl (tool command language) is an interpreted
command language that can be imbedded into an application providing the
application with an interpreter as well as a built-in command language. Tk is
an extension to Tcl for building GUI's. Incorporating Tcl/Tk into MGED gives
the user the ability to develop their own commands and GUI's. Other new
features are: command line editing similar to tcsh, multiple display managers
opened simultaneously, shareable resources among display managers, view axes,
model axes, edit axes, rubber banding for zoom or raytracing, support for
color schemes, frame buffer support for display managers, snap to grid for
accuracy with the mouse, query rays for interrogating the geometry, and
improved solid/object/combination selection from among displayed geometry." } }
.$id.menubar.help add command -label "Shift Grips" -underline 0\
	-command "hoc_dialog .$id.menubar.help \"Help,Shift Grips\""
hoc_register_menu_data "Help" "Shift Grips" "Shift Grips"\
	{ { summary "     MGED offers the user a unified mouse-based interface for \"grabbing\"
things and manipulating them.  Since it was built for compatibility on
top of the older interface:

	    ----------------------------------------
	    Mouse button	View operation
	    ----------------------------------------
	    Button-1		Zoom out
	    Button-2		Recenter view at
				the specified point
	    Button-3		Zoom in
	    ----------------------------------------

it uses the modifier keys:  Shift, Control, and Alt.  This use of modified
mouse clicks to grab things is called the \"shift-grip\" interface.  The Shift
and Control keys are assigned in combinations to the three basic transformation
operations as follows:

		-----------------------------------------
		Modifier key	Transformation operation
		-----------------------------------------
		Shift			Translate
		Ctrl			Rotate
		Shift & Ctrl		Scale
		-----------------------------------------

and the Alt key is assigned the meaning \"constrained transformation,\" which
is described below.  Thus, in general, holding the Shift key and a mouse
button down and moving the mouse drags things around on the screen.  The
Control key and a mouse button allow one to rotate things, and the combination
of Shift, Control, and a mouse button allow one to expand and contract things.
These general functionalities are consistent throughout MGED, providing a
unified interface.  The precise meanings of \"drag things around,\" \"rotate
things,\" and \"expand and contract things\" depends on the operating context.
     When one is merely viewing geometry the shift grips apply by default to
the view itself.  Thus they amount to panning, rotating, and zooming the
eye relative to the geometry being displayed.  When one is in solid-edit
or matrix-edit mode (what used to be called object-edit mode), the shift
grips apply by default to the model parameters.  In this case, they modify
the location, orientation, or size of object features or entire objects in
the database.
     The default behaviors in the viewing and editing modes may be overridden
by the \"Transform\" item in the \"Settings\" menu.  This allows the user to
specify that the shift grips should transform the view, the model parameters
(if one is currently editing a solid or matrix) or the angle-distance cursor
(in which case the mouse may be used to position the ADC, to change its angles,
and to expand and contract its distance ticks).  The behavior of the shift
grips may be further changed by the \"Rotate About\" item in the \"Settings\"
menu, which allows the user to specify the point about which shift-grip
rotations should be performed.  The choices include the view center, the eye,
the model origin, and an object's key point.

		    CONSTRAINED TRANSFORMATIONS

When the Alt key is held down along with either of the Shift and Control keys
the transformations are constrained to a particular axis.  For such
constrained transformations the mouse buttons have the following meanings:

		    ------------------------
		    Mouse button	Axis
		    ------------------------
		    Button-1		 x
		    Button-2		 y
		    Button-3		 z
		    ------------------------

Thus, if the view is being transformed, Alt-Shift-Button-1 allows one to drag
the objects being viewed left to right along the view-x axis.  Similarly, if
the model parameters are being transformed, Alt-Ctrl-Button-2 allows one to
rotate the object about a line passing through the rotate-about point (as
described above) and parallel to a y-axis.  The coordinate system to which
these transformations are constrained may be specified by the \"Constraint
Coords\" item in the \"Settings\" menu, which allows the selection of any one of
the model, view, and object coordinate systems.
" } }
.$id.menubar.help add command -label "Commands" -underline 0\
	-command "command_help $id"
hoc_register_menu_data "Help" "Commands" "Commands"\
	{ { summary "Tool for getting information on MGED's commands." }
          { see_also "?, help" } }
.$id.menubar.help add command -label "Apropos" -underline 1\
	-command "ia_apropos .$id $screen"
hoc_register_menu_data "Help" "Apropos" "Apropos"\
	{ { summary "Tool for searching for information about
MGED's commands." }
          { see_also "apropos" } }

set web_cmd "exec \$mged_browser -display $screen \
	\$mged_html_dir/index.html &"

.$id.menubar.help add command -label "Manual" -underline 0 -command $web_cmd
hoc_register_menu_data "Help" "Manual" "Manual"\
	{ { summary "Start a tool for browsing the online MGED manual.
The web browser that gets started is dependent, first, on the
WEB_BROWSER environment variable. If this variable exists and
the browser identified by this variable exists, then that browser
is used. Failing that the browser specified by the
mged_default(web_browser) Tcl variable is tried. As a last
resort the existence of /usr/bin/netscape, /usr/local/bin/netscape
and /usr/X11/bin/netscape is checked. If a browser has still not
been located, the built-in Tcl browser is used." } }

#==============================================================================
# PHASE 3: Bottom-row display
#==============================================================================
frame .$id.status
frame .$id.status.dpy
frame .$id.status.illum

label .$id.status.cent -textvar mged_display($mged_gui($id,active_dm),center) -anchor w
hoc_register_data .$id.status.cent "View Center"\
	{ { summary "These numbers indicate the view center in\nmodel coordinates (local units)." }
          { see_also "center, view" } }
label .$id.status.size -textvar mged_display($mged_gui($id,active_dm),size) -anchor w
hoc_register_data .$id.status.size "View Size"\
	{ { summary "This number indicates the view size (local units)." }
          { see_also size} }
label .$id.status.units -textvar mged_display(units) -anchor w -padx 4
hoc_register_data .$id.status.units "Units"\
	{ { summary "This indicates the local units.     " }
          { see_also units} }
label .$id.status.aet -textvar mged_display($mged_gui($id,active_dm),aet) -anchor w
hoc_register_data .$id.status.aet "View Orientation"\
	{ { summary "These numbers indicate the view orientation using azimuth,\nelevation and twist." }
        { see_also "ae, view" } }
label .$id.status.ang -textvar mged_display($mged_gui($id,active_dm),ang) -anchor w -padx 4
hoc_register_data .$id.status.ang "Rateknobs"\
	{ { summary "These numbers give some indication of\nrate of rotation about the x,y,z axes." }
        { see_also knob} }
label .$id.status.illum.label -textvar mged_gui($id,illum_label)
hoc_register_data .$id.status.illum.label "Status Area"\
	{ { summary "This area is for displaying either the frames per second,
the illuminated path, the keypoint during an edit
or the ADC attributes." } }

#==============================================================================
# PHASE 4: Text widget for interaction
#==============================================================================
frame .$id.tf
if {$comb} {
    text .$id.t -height $mged_gui($id,num_lines) \
	    -relief sunken -bd 2 -yscrollcommand ".$id.s set"
} else {
    text .$id.t -relief sunken -bd 2 -yscrollcommand ".$id.s set"
}
scrollbar .$id.s -relief flat -command ".$id.t yview"
d2167 8
a2174 104
bind .$id.t <Enter> "focus .$id.t; break"
hoc_register_data .$id.t "Command Window"\
	{ { summary "This is MGED's default command window. Its main
function is to allow the user to enter commands.
The command window supports command line editing
and command history. The two supported command line
edit modes are emacs and vi. Look under File/
Preferences/Command_Line_Edit to change the edit mode.

There are also two command interpretation modes. One
is where MGED performs object name matching (i.e. globbing
against the database) before passing the command line to MGED's
built-in Tcl interpreter. This is the same behavior seen
in previous releases. The other command interpretation
mode (Tcl Evaluation) passes the command line directly to
the Tcl interpreter. Look under File/Preferences/
Special_Characters to change the interpetation mode.

The command window also supports cut and paste as well
as text scrolling. The default bindings for these operations
are similar to those found in typical X Window applications
such as xterm. For example:

ButtonPress-1           begin text selection
ButtonRelease-1         end text selection
Button1-Motion         add to text selection
Shift-Button1            modify text selection
Double-Button-1        select word
Triple-Button-1         select line
ButtonPress-2           begin text operation
ButtonRelease-2        paste text
Button2-Motion         scroll text

Note - If motion was detected while Button2 was
being pressed, no text will be pasted. In this case,
it is assumed that scrolling was the intended operation.
The user can also scroll the window using the scrollbar." } }

set mged_gui($id,edit_style) $mged_default(edit_style)
set mged_gui(.$id.t,insert_char_flag) 0
set_text_key_bindings $id
set_text_button_bindings .$id.t

set mged_gui($id,cmd_prefix) ""
set mged_gui($id,more_default) ""
mged_print_prompt .$id.t "mged> "
.$id.t insert insert " "
beginning_of_line .$id.t
set mged_gui(.$id.t,moveView) 0
set mged_gui(.$id.t,freshline) 1
set mged_gui(.$id.t,scratchline) ""
set vi_state(.$id.t,overwrite_flag) 0
set vi_state(.$id.t,change_flag) 0
set vi_state(.$id.t,delete_flag) 0
set vi_state(.$id.t,search_flag) 0
set vi_state(.$id.t,search_char) ""
set vi_state(.$id.t,search_dir) ""

.$id.t tag configure sel -background #fefe8e
.$id.t tag configure result -foreground blue3
.$id.t tag configure oldcmd -foreground red3
.$id.t tag configure prompt -foreground red1

#==============================================================================
# Pack windows
#==============================================================================
setupmv $id
setmv $id

if { $comb } {
    if { $mged_gui($id,show_dm) } {
	grid $mged_gui($id,dmc) -sticky nsew -row 0 -column 0
    }
}

grid .$id.t .$id.s -in .$id.tf -sticky "nsew"
grid columnconfigure .$id.tf 0 -weight 1
grid rowconfigure .$id.tf 0 -weight 1

if { !$comb || ($comb && $mged_gui($id,show_cmd)) } {
    grid .$id.tf -sticky "nsew" -row 1 -column 0
}

grid .$id.status.cent .$id.status.size .$id.status.units .$id.status.aet\
	.$id.status.ang x -in .$id.status.dpy -sticky "ew"
grid columnconfigure .$id.status.dpy 5 -weight 1
grid .$id.status.dpy -sticky "ew"
grid .$id.status.illum.label x -sticky "ew"
grid columnconfigure .$id.status.illum 1 -weight 1
grid .$id.status.illum -sticky "w"
grid columnconfigure .$id.status 0 -weight 1

if { $mged_gui($id,show_status) } {
    grid .$id.status -sticky "ew" -row 2 -column 0
}

grid columnconfigure .$id 0 -weight 1
if { $comb } {
    # let only the display manager window grow
    grid rowconfigure .$id 0 -weight 1
} else {
    # let only the text window (i.e. enter commands here) grow
    grid rowconfigure .$id 1 -weight 1
}
d2176 4
a2179 4
#==============================================================================
# PHASE 5: Creation of other auxilary windows
#==============================================================================
mview_build_menubar $id
d2181 11
a2191 7
#==============================================================================
# PHASE 6: Further setup
#==============================================================================
if {[info procs cad_MenuFirstEntry] == ""} {
    # trigger the Tcl source file to be loaded
    cad_MenuFirstEntry ""
}
d2193 3
a2195 3
cmd_win open $id
_mged_tie $id $mged_gui($id,active_dm)
reconfig_gui_default $id
d2197 3
a2199 3
# Force display manager windows to update their respective color schemes
mged_apply_local $id "rset cs mode 0"
rset cs mode 1
d2201 3
a2203 3
if { $join_c } {
    collaborate join $id
}
d2205 2
a2206 3
trace variable mged_display($mged_gui($id,active_dm),fps) w "ia_changestate $id"
update_mged_vars $id
set mged_gui($id,qray_effects) [qray effects]
d2208 4
a2211 2
# reset current_cmd_list so that its cur_hist gets updated
cmd_win set $save_id
d2213 1
a2213 4
# cause all 4 windows to share menu state
share m $mged_gui($id,top).ul $mged_gui($id,top).ur
share m $mged_gui($id,top).ul $mged_gui($id,top).ll
share m $mged_gui($id,top).ul $mged_gui($id,top).lr
d2215 3
a2217 1
do_rebind_keys $id
d2219 2
a2220 3
# Throw away key events
bind $mged_gui($id,top) <KeyPress> { break }
bind $mged_gui($id,top) <Configure> "mged_handle_configure $id"
d2222 4
a2225 2
set dbname [_mged_opendb]
set_wm_title $id $dbname
d2227 2
a2228 4
# set the size here in case the user didn't specify it in mged_default(ggeom)
set height [expr [winfo screenheight $mged_gui($id,top)] - 70]
set width $height
wm geometry $mged_gui($id,top) $width\x$height
d2230 1
a2230 2
# set geometry (i.e. size and position) according to mged_default(ggeom)
wm geometry $mged_gui($id,top) $mged_default(ggeom)
d2232 8
a2239 1
wm protocol $mged_gui($id,top) WM_DELETE_WINDOW "gui_destroy $id"
d2241 4
a2244 8
if { $comb } {
    if { !$mged_gui($id,show_dm) } {
	update
	set_dm_win $id
    }
} else {
    wm geometry .$id $mged_default(geom)
    update
d2246 10
a2255 15
    # Prevent command window from resizing itself as labels change
    set geometry [wm geometry .$id]
    wm geometry .$id $geometry
}

set num_players [llength $mged_players]
switch $num_players {
    1 {
	.$id.menubar.file entryconfigure 14 -state disabled
    }
    2 {
	set id [lindex $mged_players 0]
	.$id.menubar.file entryconfigure 14 -state normal
    }
}
d2259 34
a2292 34
    global mged_gui
    global mged_players
    global mged_collaborators

    if { [llength $args] != 1 } {
	return [help gui_destroy]
    }

    set id [lindex $args 0]

    set i [lsearch -exact $mged_players $id]
    if { $i == -1 } {
	return "gui_destroy: bad id - $id"
    }
    set mged_players [lreplace $mged_players $i $i]

    if { [lsearch -exact $mged_collaborators $id] != -1 } {
	collaborate quit $id
    }

    set mged_gui($id,multi_pane) 0
    set mged_gui($id,show_edit_info) 0

    releasemv $id
    catch { cmd_win close $id }
    catch { destroy .mmenu$id }
    catch { destroy .sliders$id }
    catch { destroy $mged_gui($id,top) }
    catch { destroy .$id }

    if { [llength $mged_players] == 1 } {
	set id [lindex $mged_players 0]
	.$id.menubar.file entryconfigure 14 -state disabled
    }
d2296 11
a2306 1
    global mged_display
d2308 6
a2313 16
    cmd_win set $id
    set dm_id [_mged_tie $id]
    if { [llength $dm_id] != 1 } {
	return
    }

    .$id.status.cent configure -textvar mged_display($dm_id,center)
    .$id.status.size configure -textvar mged_display($dm_id,size)
    .$id.status.units configure -textvar mged_display(units)

    .$id.status.aet configure -textvar mged_display($dm_id,aet)
    .$id.status.ang configure -textvar mged_display($dm_id,ang)

#    update_view_ring_entries $id s
#    update_view_ring_entries $id d
#    reconfig_mmenu $id
d2317 1
a2317 1
    global mged_collaborators
d2319 3
a2321 3
    foreach id $mged_collaborators {
	reconfig_gui_default $id
    }
d2325 16
a2340 48
    global mged_gui
    global forwarding_key
    global rateknobs
    global use_air
    global listen
    global fb
    global fb_all
    global fb_overlay
    global dlist
    global mouse_behavior
    global coords
    global rotate_about
    global transform
    global faceplate
    global perspective_mode
    global orig_gui

    winset $mged_gui($id,active_dm)
    set mged_gui($id,rateknobs) $rateknobs
    if {![catch {adc draw} result]} {
	set mged_gui($id,adc_draw) $result
    }
    set mged_gui($id,model_draw) [rset ax model_draw]
    set mged_gui($id,view_draw) [rset ax view_draw]
    set mged_gui($id,edit_draw) [rset ax edit_draw]
    set mged($id,use_air) $use_air
    set mged_gui($id,fb) $fb
    set mged_gui($id,fb_all) $fb_all
    set mged_gui($id,fb_overlay) $fb_overlay
    set mged_gui($id,dlist) $dlist
    set mged_gui($id,rubber_band) [rset rb draw]
    set mged_gui($id,mouse_behavior) $mouse_behavior
    set mged_gui($id,coords) $coords
    set mged_gui($id,rotate_about) $rotate_about
    set mged_gui($id,transform) $transform
    set mged_gui($id,grid_draw) [rset grid draw]
    set mged_gui($id,draw_snap) [rset grid snap]
    set mged_gui($id,faceplate) $faceplate
    set mged_gui($id,zclip) [dm set zclip]
    set mged_gui($id,perspective_mode) $perspective_mode
    set mged_gui($id,orig_gui) $orig_gui
    set mged_gui($id,forward_keys) $forwarding_key($mged_gui($id,active_dm))

    if {$mged_gui($id,dtype) == "ogl"} {
	set mged_gui($id,depthcue) [dm set depthcue]
	set mged_gui($id,zbuffer) [dm set zbuffer]
	set mged_gui($id,lighting) [dm set lighting]
    }
d2342 34
a2375 2
    set mged_gui($id,listen) $listen
    set_mged_v_axes_pos $id
d2379 1
a2379 1
    global mged_gui
d2381 15
a2395 15
    set view_pos [rset ax view_pos]
    set hpos [lindex $view_pos 0]
    set vpos [lindex $view_pos 1]

    if {$hpos == 0 && $vpos == 0} {
	set mged_gui($id,view_pos) 0
    } elseif {$hpos < 0 && $vpos < 0} {
	set mged_gui($id,view_pos) 1
    } elseif {$hpos < 0 && $vpos > 0} {
	set mged_gui($id,view_pos) 2
    } elseif {$hpos > 0 && $vpos > 0} {
	set mged_gui($id,view_pos) 3
    } else {
	set mged_gui($id,view_pos) 4
    }
d2399 1
a2399 1
    global mged_gui
d2401 5
a2405 5
    if {[ winfo exists .mmenu$id ]} {
	destroy .mmenu$id
	set mged_gui($id,classic_buttons) 0
	return
    }
d2407 1
a2407 1
    mmenu_init $id
d2411 2
a2412 2
    global mged_gui
    global mged_display
d2414 12
a2425 11
    if {$mged_gui($id,show_edit_info)} {
	if {$mged_display(state) == "SOL EDIT"} {
	    init_edit_solid_int $id
	} elseif {$mged_display(state) == "OBJ EDIT"} {
	    build_edit_info $id
	}
    } else {
	if {$mged_display(state) == "SOL EDIT"} {
	    esolint_destroy $id
	} elseif {$mged_display(state) == "OBJ EDIT"} {
	    destroy_edit_info $id
a2426 1
    }
d2430 6
a2435 1
    global mged_gui
d2437 9
a2445 14
    if {[winfo exists .sei$id]} {
	raise .sei$id
	return
    }

    if {$mged_gui($id,show_edit_info)} {
	toplevel .sei$id -screen $mged_gui($id,screen)
	label .sei$id.l -bg black -fg yellow -textvar edit_info
	pack .sei$id.l -expand 1 -fill both

	wm title .sei$id "$id\'s Edit Info"
	wm protocol .sei$id WM_DELETE_WINDOW "destroy_edit_info $id"
	wm geometry .sei$id $mged_gui($id,edit_info_pos)
    }
d2449 5
a2453 1
    global mged_gui
d2455 3
a2457 7
    if {![winfo exists .sei$id]} {
	return
    }

    regexp "\[-+\]\[0-9\]+\[-+\]\[0-9\]+" [wm geometry .sei$id] match
    set mged_gui($id,edit_info_pos) $match
    destroy .sei$id
d2462 1
a2462 1
    global mged_players
d2464 1
a2464 1
    return $mged_players
d2468 3
a2470 3
    global mged_gui
    global mged_display
    global view_ring
d2472 1
a2472 1
    set new_dm $mged_gui($id,top).$mged_gui($id,dm_loc)
d2474 4
a2477 4
# Nothing to do
    if { $new_dm == $mged_gui($id,active_dm) } {
	return
    }
d2479 1
a2479 1
    trace vdelete mged_display($mged_gui($id,active_dm),fps) w "ia_changestate $id"
d2481 3
a2483 3
    # make inactive
    winset $mged_gui($id,active_dm)
    rset cs mode 0
d2485 1
a2485 1
    set mged_gui($id,active_dm) $new_dm
d2487 3
a2489 3
    # make active
    winset $mged_gui($id,active_dm)
    rset cs mode 1
d2491 1
a2491 1
    trace variable mged_display($mged_gui($id,active_dm),fps) w "ia_changestate $id"
d2493 2
a2494 2
    update_mged_vars $id
#    set view_ring($id) [view_ring get]
d2496 2
a2497 2
    _mged_tie $id $mged_gui($id,active_dm)
    reconfig_gui_default $id
d2499 3
a2501 3
    if {!$mged_gui($id,multi_pane)} {
	setmv $id
    }
d2503 4
a2506 4
    # XXXX this is already done in the call to reconfig_gui_default above
    # update view_ring entries
#    update_view_ring_entries $id s
#    update_view_ring_entries $id d
d2508 2
a2509 2
    # update adc control panel
    adc_load $id
d2511 2
a2512 2
    # update grid control panel
    grid_control_reset $id
d2514 2
a2515 2
    # update query ray control panel
    qray_reset $id
d2517 2
a2518 2
    set dbname [_mged_opendb]
    set_wm_title $id $dbname
d2522 2
a2523 2
    global mged_gui
    global version
d2525 1
a2525 1
    set ver [lindex $version 2]
d2527 24
a2550 23
    if {$mged_gui($id,top) == $mged_gui($id,dmc)} {
	if {$mged_gui($id,dm_loc) == "ul"} {
	    wm title $mged_gui($id,top) "MGED $ver Graphics Window ($id) - $dbname - Upper Left"
	    wm title .$id "MGED $ver Command Window ($id) - $dbname - Upper Left"
	} elseif {$mged_gui($id,dm_loc) == "ur"} {
	    wm title $mged_gui($id,top) "MGED $ver Graphics Window ($id) - $dbname - Upper Right"
	    wm title .$id "MGED $ver Command Window ($id) - $dbname - Upper Right"
	} elseif {$mged_gui($id,dm_loc) == "ll"} {
	    wm title $mged_gui($id,top) "MGED $ver Graphics Window ($id) - $dbname - Lower Left"
	    wm title .$id "MGED $ver Command Window ($id) - $dbname - Lower Left"
	} elseif {$mged_gui($id,dm_loc) == "lr"} {
	    wm title $mged_gui($id,top) "MGED $ver Graphics Window ($id) - $dbname - Lower Right"
	    wm title .$id "MGED $ver Command Window ($id) - $dbname - Lower Right"
	}
    } else {
	if {$mged_gui($id,dm_loc) == "ul"} {
	    wm title $mged_gui($id,top) "MGED $ver Command Window ($id) - $dbname - Upper Left"
	} elseif {$mged_gui($id,dm_loc) == "ur"} {
	    wm title $mged_gui($id,top) "MGED $ver Command Window ($id) - $dbname - Upper Right"
	} elseif {$mged_gui($id,dm_loc) == "ll"} {
	    wm title $mged_gui($id,top) "MGED $ver Command Window ($id) - $dbname - Lower Left"
	} elseif {$mged_gui($id,dm_loc) == "lr"} {
	    wm title $mged_gui($id,top) "MGED $ver Command Window ($id) - $dbname - Lower Right"
a2551 1
    }
d2555 1
a2555 1
    global mged_gui
d2557 7
a2563 4
    if { $mged_gui($id,show_cmd) } {
	if { $mged_gui($id,show_dm) } {
	    .$id.t configure -height $mged_gui($id,num_lines)
	    grid .$id.tf -sticky nsew -row 1 -column 0
d2565 1
a2565 4
	    grid .$id.tf -sticky nsew -row 0 -column 0
	}
    } else {
	grid forget .$id.tf
d2567 6
a2572 5
	if { !$mged_gui($id,show_dm) } {
	    set mged_gui($id,show_dm) 1
	    grid $mged_gui($id,dmc) -sticky nsew -row 0 -column 0
	    update
	    setmv $id
a2573 1
    }
d2577 29
a2605 1
    global mged_gui
d2607 2
a2608 5
    if { $mged_gui($id,show_dm) } {
	if { $mged_gui($id,show_cmd) } {
	    grid forget .$id.tf
	    .$id.t configure -height $mged_gui($id,num_lines)
	    update
d2610 7
d2618 6
a2623 1
	grid $mged_gui($id,dmc) -sticky nsew -row 0 -column 0
d2625 6
a2630 4
	if { $mged_gui($id,show_cmd) } {
	    grid .$id.tf -sticky nsew -row 1 -column 0
	    update
	    .$id.t see end
d2633 34
a2666 8
	setmv $id
    } else {
	grid forget $mged_gui($id,dmc)
	
	set mged_gui($id,show_cmd) 1
	set_cmd_win $id
	set fh [get_font_height .$id.t]
	set h [winfo height $mged_gui($id,top)]
d2668 4
a2671 3
	if { $mged_gui($id,show_status) } {
	    set h [expr $h - [winfo height .$id.status]]
	}
d2673 2
a2674 4
	set nlines [expr $h / $fh]
	.$id.t configure -height $nlines
    }
}
d2676 3
a2678 67
proc view_ring_add {id} {
    global mged_gui
    global mged_default
    global view_ring
    global mged_collaborators

    winset $mged_gui($id,active_dm)

    # already have 10 views in the view ring, ignore add
    if {$mged_default(max_views) <= [llength $mged_gui($id,views)]} {
	return
    }

    # calculate a view id for the new view
    set vid [.$id.menubar.viewring.select entrycget end -value]
    if {$vid == ""} {
	set vid 0
    } else {
	incr vid
    }

    # get view parameters
    set aet [_mged_ae]
    set center [_mged_center]
    set size [_mged_size]

    # save view commands
    set vcmds "_mged_ae $aet; _mged_center $center; _mged_size $size"

    # format view parameters for display in menu
    set aet [format "az=%.2f el=%.2f tw=%.2f" \
	    [lindex $aet 0] [lindex $aet 1] [lindex $aet 2]]
    set center [format "cent=(%.3f %.3f %.3f)" \
	    [lindex $center 0] [lindex $center 1] [lindex $center 2]]
    set size [format "size=%.3f" $size]

    if {[lsearch -exact $mged_collaborators $id] != -1} {
	foreach cid $mged_collaborators {
	    # append view commands to view list
	    lappend mged_gui($cid,views) $vcmds

	    .$cid.menubar.viewring.select add radiobutton -value $vid -variable view_ring($cid) \
		    -label "$center $size $aet" -command "view_ring_goto $cid $vid"
	    .$cid.menubar.viewring.delete add command -label "$center $size $aet" \
		    -command "view_ring_delete $cid $vid"

	    # remember the last selected radiobutton
	    set view_ring($cid,prev) $view_ring($cid)

	    # update radio buttons
	    set view_ring($cid) $vid
	}
    } else {
	# append view commands to view list
	lappend mged_gui($id,views) $vcmds

	.$id.menubar.viewring.select add radiobutton -value $vid -variable view_ring($id) \
		-label "$center $size $aet" -command "view_ring_goto $id $vid"
	.$id.menubar.viewring.delete add command -label "$center $size $aet" \
		-command "view_ring_delete $id $vid"

	# remember the last selected radiobutton
	set view_ring($id,prev) $view_ring($id)

	# update radio buttons
	set view_ring($id) $vid
    }
d2682 2
a2683 2
    global mged_default
    upvar $vi_in vi
d2685 5
a2689 4
    # find view index of menu entry whose value is $vid
    for {set vi 0} {$vi < $mged_default(max_views)} {incr vi} {
	if {[$m entrycget $vi -value] == $vid} {
	    return 1
a2690 1
    }
d2692 1
a2692 1
    return 0
d2697 3
a2699 3
#        and the view command list (mged_gui($id,views)) entry.
#        The view id (vid) is a value that corresponds to one of
#        the radiobutton entries.
d2702 21
a2722 21
    global mged_gui
    global mged_collaborators
    global view_ring

    # we're collaborating, so update collaborators
    if {[lsearch -exact $mged_collaborators $id] != -1 && \
	    "$mged_gui($id,top).ur" == "$mged_gui($id,active_dm)"} {
	foreach cid $mged_collaborators {
	    if {"$mged_gui($cid,top).ur" == "$mged_gui($cid,active_dm)"} {
		set view_ring($cid,prev) $view_ring($cid)
		set view_ring($cid) $vid
		winset $mged_gui($cid,active_dm)
		eval [lindex $mged_gui($cid,views) $vi]
	    }
	}
    } else {
	set view_ring($id,prev) $view_ring($id)
	set view_ring($id) $vid
	winset $mged_gui($id,active_dm)
	eval [lindex $mged_gui($id,views) $vi]
    }
d2726 27
a2752 27
    global mged_gui
    global mged_default
    global view_ring
    global mged_collaborators

#    winset $mged_gui($id,active_dm)

    if {![find_view_index $vid vi .$id.menubar.viewring.select]} {
	return
    }

    # we're collaborating, so update collaborators
    if {[lsearch -exact $mged_collaborators $id] != -1} {
	foreach cid $mged_collaborators {
	    .$cid.menubar.viewring.select delete $vi
	    .$cid.menubar.viewring.delete delete $vi
	    set mged_gui($cid,views) [lreplace $mged_gui($cid,views) $vi $vi]
	    set view_ring($cid) 0
	    set view_ring($cid,prev) 0
	}
    } else {
	.$id.menubar.viewring.select delete $vi
	.$id.menubar.viewring.delete delete $vi
	set mged_gui($id,views) [lreplace $mged_gui($id,views) $vi $vi]
	set view_ring($id) 0
	set view_ring($id,prev) 0
    }
d2762 1
a2762 1
    global view_ring
d2764 1
a2764 1
    set view_ring($id,curr) $view_ring($id)
d2768 16
a2783 16
    global mged_gui
    global mged_default
    global view_ring
    global mged_collaborators

#    winset $mged_gui($id,active_dm)

    if {![find_view_index $vid vi .$id.menubar.viewring.select]} {
	return
    }

    # Since view_ring(id) has been modified by the radiobutton, we'll put
    # it back the way it was for now. view_ring_set_view will restore it again.
    # This is done so that view_ring(id,prev) gets updated properly.
    set view_ring($id) $view_ring($id,curr)
    view_ring_set_view $id $vid $vi
d2787 9
a2795 2
    global mged_gui
    global view_ring
d2797 2
a2798 1
#    winset $mged_gui($id,active_dm)
d2800 4
a2803 12
    # find view index of menu entry whose value is $view_ring($id)
    if {![find_view_index $view_ring($id) vi .$id.menubar.viewring.select]} {
	return
    }

    # advance view index to next
    incr vi

    # see if we have to wrap
    if {[.$id.menubar.viewring.select index end] < $vi} {
	set vi 0
    }
d2805 2
a2806 2
    set vid [.$id.menubar.viewring.select entrycget $vi -value]
    view_ring_set_view $id $vid $vi
d2810 4
a2813 2
    global mged_gui
    global view_ring
d2815 4
a2818 1
#    winset $mged_gui($id,active_dm)
d2820 2
a2821 12
    # find view index of menu entry whose value is $view_ring($id)
    if {![find_view_index $view_ring($id) vi .$id.menubar.viewring.select]} {
	return
    }

    # advance view index to next
    incr vi -1

    # see if we have to wrap
    if {$vi < 0} {
	set vi [.$id.menubar.viewring.select index end]
    }
d2823 7
a2829 2
    set vid [.$id.menubar.viewring.select entrycget $vi -value]
    view_ring_set_view $id $vid $vi
d2833 2
a2834 2
    global mged_gui
    global view_ring
d2836 4
a2839 9
    # validate view_ring(id)
    if {![find_view_index $view_ring($id) vi .$id.menubar.viewring.select]} {
	return
    }

    # validate view_ring(id,prev) and find its corresponding menu view index 
    if {![find_view_index $view_ring($id,prev) vi_prev .$id.menubar.viewring.select]} {
	return
    }
d2841 6
a2846 1
    view_ring_set_view $id $view_ring($id,prev) $vi_prev
d2850 2
a2851 2
    global mged_gui
    global view_ring
d2853 22
a2874 22
    # first, delete all menu entries in select and delete menus
    .$to.menubar.viewring.select delete 0 end
    .$to.menubar.viewring.delete delete 0 end

    # update list of views
    set mged_gui($to,views) $mged_gui($from,views)

    # redo the select and delete menus
    set len [llength $mged_gui($to,views)]
    for {set i 0} {$i < $len} {incr i} {
	# get the label from the from_menu
	set label [.$from.menubar.viewring.select entrycget $i -label]

	# get the value/view_id from the from_menu
	set vid [.$from.menubar.viewring.select entrycget $i -value]

	# recreate the entries for the select and delete menus
	.$to.menubar.viewring.select add radiobutton -value $vid -variable view_ring($to) \
		-label $label -command "view_ring_goto $to $vid"
	.$to.menubar.viewring.delete add command -label $label \
		-command "view_ring_delete $to $vid"
    }
d2878 1
a2878 1
    global view_ring
d2880 21
a2900 20
    if {0} {
	set views [view_ring get -a]
	set llen [llength $views]

	if {$m == "s"} {
	    set w .$id.menubar.viewring.select
	    $w delete 0 end
	    for {set i 0} {$i < $llen} {incr i} {
		$w add radiobutton -value [lindex $views $i] -variable view_ring($id)\
			-label [lindex $views $i] -command "view_ring_goto $id [lindex $views $i]"
	    }
	} elseif {$m == "d"} {
	    set w .$id.menubar.viewring.delete
	    $w delete 0 end
	    for {set i 0} {$i < $llen} {incr i} {
		$w add command -label [lindex $views $i]\
			-command "view_ring_delete $id [lindex $views $i]"
	    }
	} else {
	    puts "Usage: update_view_ring_entries w s|d"
a2901 1
    }
d2905 32
a2936 2
    global mged_gui
    global view_ring
d2938 3
a2940 3
    if {0} {
	if {[_mged_opendb] == ""} {
	    error "No database has been opened!"
a2941 30

	winset $mged_gui($id,active_dm)
	set view_ring($id) [view_ring get]
	set views [view_ring get -a]
	set llen [llength $views]

	# we need to also save the previous view so that
	# toggle will continue to work
	view_ring toggle
	set prev [view_ring get]

	set ws .$id.menubar.viewring.select
	set wd .$id.menubar.viewring.delete
	for {set i 0} {$i < $llen} {incr i} {
	    view_ring goto [lindex $views $i]
	    set aet [view aet]
	    set aet [format "az=%.2f el=%.2f tw=%.2f"\
		    [lindex $aet 0] [lindex $aet 1] [lindex $aet 2]]
	    set center [view center]
	    set center [format "cent=(%.3f %.3f %.3f)"\
		    [lindex $center 0] [lindex $center 1] [lindex $center 2]]
	    set size [format "size=%.3f" [view size]]
	    $ws entryconfigure $i -label "$center $size $aet"
	    $wd entryconfigure $i -label "$center $size $aet"
	}

	# restore both previous and current views
	view_ring goto $prev
	view_ring goto $view_ring($id)
    }
d2945 1
a2945 1
    global mged_gui
d2947 5
a2951 5
    if {$mged_gui($id,show_status)} {
	grid .$id.status -sticky ew -row 2 -column 0
    } else {
	grid forget .$id.status
    }
d2955 2
a2956 2
    global mged_gui
    global transform
d2958 15
a2972 15
    winset $mged_gui($id,top).ul
    set transform $mged_gui($id,transform)
    default_mouse_bindings $mged_gui($id,top).ul

    winset $mged_gui($id,top).ur
    set transform $mged_gui($id,transform)
    default_mouse_bindings $mged_gui($id,top).ur

    winset $mged_gui($id,top).ll
    set transform $mged_gui($id,transform)
    default_mouse_bindings $mged_gui($id,top).ll

    winset $mged_gui($id,top).lr
    set transform $mged_gui($id,transform)
    default_mouse_bindings $mged_gui($id,top).lr
d2974 1
a2974 1
    winset $mged_gui($id,active_dm)
d2978 1
a2978 1
    global mged_gui
d2980 14
a2993 14
    bind $mged_gui($id,top).ul <Control-n> "winset $mged_gui($id,top).ul; view_ring_next $id; break" 
    bind $mged_gui($id,top).ur <Control-n> "winset $mged_gui($id,top).ur; view_ring_next $id; break" 
    bind $mged_gui($id,top).ll <Control-n> "winset $mged_gui($id,top).ll; view_ring_next $id; break" 
    bind $mged_gui($id,top).lr <Control-n> "winset $mged_gui($id,top).lr; view_ring_next $id; break" 

    bind $mged_gui($id,top).ul <Control-p> "winset $mged_gui($id,top).ul; view_ring_prev $id; break" 
    bind $mged_gui($id,top).ur <Control-p> "winset $mged_gui($id,top).ur; view_ring_prev $id; break" 
    bind $mged_gui($id,top).ll <Control-p> "winset $mged_gui($id,top).ll; view_ring_prev $id; break" 
    bind $mged_gui($id,top).lr <Control-p> "winset $mged_gui($id,top).lr; view_ring_prev $id; break" 

    bind $mged_gui($id,top).ul <Control-t> "winset $mged_gui($id,top).ul; view_ring_toggle $id; break" 
    bind $mged_gui($id,top).ur <Control-t> "winset $mged_gui($id,top).ur; view_ring_toggle $id; break" 
    bind $mged_gui($id,top).ll <Control-t> "winset $mged_gui($id,top).ll; view_ring_toggle $id; break" 
    bind $mged_gui($id,top).lr <Control-t> "winset $mged_gui($id,top).lr; view_ring_toggle $id; break" 
d2997 2
a2998 2
    global mged_gui
    global transform
d3000 1
a3000 1
    set result [eval _mged_adc $args]
d3002 13
a3014 5
    # toggling ADC on/off
    if { ![llength $args] } {
	set dm_id [winset]
	set tie_list [_mged_tie]
	set id mged
d3016 3
a3018 7
	# see if dm_id is tied to a command window
	foreach pair $tie_list {
	    if { [lindex $pair 1] == $dm_id } {
		set id [lindex $pair 0]
		break
	    }
	}
d3020 1
a3020 2
	if {[info exists mged_gui($id,adc_draw)]} {
	    set mged_gui($id,adc_draw) [_mged_adc draw]
d3023 1
a3023 4
	default_mouse_bindings [winset]
    }

    return $result
d3027 2
a3028 2
    global mged_gui
    global listen
d3030 1
a3030 1
    mged_apply $id "set listen \$mged_gui($id,listen)"
d3032 2
a3033 2
# In case things didn't work.
    set mged_gui($id,listen) $listen
d3037 3
a3039 8
    global mged_gui
    global fb
    global listen

    mged_apply $id "set fb \$mged_gui($id,fb)"
    if {$fb && !$listen} {
	mged_apply $id "set listen 1"
    }
d3041 6
a3046 1
    set mged_gui($id,listen) $listen
d3048 2
a3049 2
    # update raytrace control panel
    rt_update_dest $id
d3053 1
a3053 1
    global mged_gui
d3055 1
a3055 1
    mged_apply $id "set mouse_behavior $mged_gui($id,mouse_behavior); refresh"
d3057 16
a3072 15
    switch $mged_gui($id,mouse_behavior) {
	"o" {
	    # use the entire framebuffer
	    set mged_gui($id,fb_all) 1
	    mged_apply $id "set fb_all 1"
	}
	"p" -
	"r" {
	    # use only the area of the framebuffer specified by the rectangle
	    set mged_gui($id,fb_all) 0
	    mged_apply $id "set fb_all 0"

	    # activate the framebuffer
	    set mged_gui($id,fb) 1
	    set_fb $id
a3073 1
    }
d3075 2
a3076 2
    # update raytrace control panel
    rt_update_src $id
d3080 3
a3082 3
    if { [winfo class $w] != "Text" } {
	return 0
    }
d3084 1
a3084 1
    set tmp_font [$w cget -font]
d3086 1
a3086 1
    return [font metrics $tmp_font -linespace]
d3090 1
a3090 1
    global mged_gui
d3092 1
a3092 1
    set fh [get_font_height .$id.t]
d3094 1
a3094 1
    return [expr $fh * $mged_gui($id,num_lines)]
d3098 3
a3100 3
    if {[winfo exists .$id.rt]} {
	rt_handle_configure $id
    }
d3104 1
a3104 1
    global mged_gui
d3106 2
a3107 2
    winset $mged_gui($id,active_dm)
    mged_apply $id "rset grid draw $mged_gui($id,grid_draw)"
d3109 4
a3112 4
    # Reconcile the Tcl grid_draw with the internal grid_draw.
    # Note - the internal grid_draw cannot be set to 1 if a database
    #        is not currently open (i.e. dbip == DBI_NULL).
    set mged_gui($id,grid_draw) [rset grid draw]
@


1.119
log
@*- changed the view_ring behavior
@
text
@d722 2
@


1.118
log
@*- fixed bug in update_view_ring_labels
   that caused view toggling to break
@
text
@d40 4
d901 1
a901 2
The stored views can be removed or traversed." }
          { see_also "view_ring" } }
d907 1
a907 2
          { accelerator "Control-n" }
          { see_also "view_ring" } }
d911 1
a911 2
          { accelerator "Control-p" }
          { see_also "view_ring" } }
d916 1
a916 2
          { accelerator "Control-t" }
          { see_also "view_ring" } }
d918 1
a918 1
menu .$id.menubar.viewring.select -title "Select View" -tearoff $mged_default(tearoff_menus)\
d920 3
d924 6
a929 2
set view_ring($id) 1
menu .$id.menubar.viewring.delete -title "Delete View" -tearoff $mged_default(tearoff_menus)\
d931 2
d2302 2
a2303 2
    update_view_ring_entries $id s
    update_view_ring_entries $id d
d2485 1
a2485 1
    set view_ring($id) [view_ring get]
d2494 1
d2496 2
a2497 2
    update_view_ring_entries $id s
    update_view_ring_entries $id d
d2603 1
a2603 1
proc view_ring_add { id } {
d2605 1
d2611 2
a2612 2
    # already more than 9 views in the view ring, ignore add
    if {9 < [llength [_mged_view_ring get -a]]} {
a2614 1
    _mged_view_ring add
d2616 24
a2639 2
    set i [lsearch -exact $mged_collaborators $id]
    if {$i != -1 && "$mged_gui($id,top).ur" == "$mged_gui($id,active_dm)"} {
d2641 13
a2653 6
	    if {"$mged_gui($cid,top).ur" == "$mged_gui($cid,active_dm)"} {
		update_view_ring_entries $cid s
		update_view_ring_entries $cid d
		winset $mged_gui($cid,active_dm)
		set view_ring($cid) [view_ring get]
	    }
d2656 25
a2680 3
	update_view_ring_entries $id s
	update_view_ring_entries $id d
	set view_ring($id) [view_ring get]
d2682 2
d2686 7
a2692 1
proc view_ring_delete { id vid } {
d2694 1
a2695 6
    global mged_collaborators

#    if {$mged_gui($id,dm_loc) != "lv"} {
#	winset $mged_gui($id,active_dm)
#    }
    winset $mged_gui($id,active_dm)
d2697 3
a2699 4
    _mged_view_ring delete $vid

    set i [lsearch -exact $mged_collaborators $id]
    if { $i != -1 && "$mged_gui($id,top).ur" == "$mged_gui($id,active_dm)"} {
d2702 2
a2703 2
		update_view_ring_entries $cid s
		update_view_ring_entries $cid d
d2705 1
a2705 1
		set view_ring($cid) [view_ring get]
d2709 4
a2712 3
	update_view_ring_entries $id s
	update_view_ring_entries $id d
	set view_ring($id) [view_ring get]
d2716 1
a2716 1
proc view_ring_goto { id vid } {
d2718 1
d2722 1
a2722 4
#    if {$mged_gui($id,dm_loc) != "lv"} {
#	winset $mged_gui($id,active_dm)
#    }
    winset $mged_gui($id,active_dm)
d2724 3
a2726 1
    _mged_view_ring goto $vid
d2728 2
a2729 2
    set i [lsearch -exact $mged_collaborators $id]
    if { $i != -1 && "$mged_gui($id,top).ur" == "$mged_gui($id,active_dm)"} {
d2731 5
a2735 3
	    if {"$mged_gui($cid,top).ur" == "$mged_gui($cid,active_dm)"} {
		set view_ring($cid) $vid
	    }
d2738 5
a2742 1
	set view_ring($id) $vid
d2746 13
a2758 1
proc view_ring_next { id } {
d2760 1
d2764 23
a2786 4
#    if {$mged_gui($id,dm_loc) != "lv"} {
#	winset $mged_gui($id,active_dm)
#    }
    winset $mged_gui($id,active_dm)
d2788 2
a2789 1
    _mged_view_ring next
d2791 3
a2793 10
    set i [lsearch -exact $mged_collaborators $id]
    if { $i != -1 && "$mged_gui($id,top).ur" == "$mged_gui($id,active_dm)"} {
	foreach cid $mged_collaborators {
	    if {"$mged_gui($cid,top).ur" == "$mged_gui($cid,active_dm)"} {
		winset $mged_gui($cid,active_dm)
		set view_ring($cid) [view_ring get]
	    }
	}
    } else {
	set view_ring($id) [view_ring get]
d2795 3
d2800 1
a2800 1
proc view_ring_prev { id } {
a2802 1
    global mged_collaborators
d2804 6
a2809 4
#    if {$mged_gui($id,dm_loc) != "lv"} {
#	winset $mged_gui($id,active_dm)
#    }
    winset $mged_gui($id,active_dm)
d2811 2
a2812 1
    _mged_view_ring prev
d2814 3
a2816 10
    set i [lsearch -exact $mged_collaborators $id]
    if { $i != -1 && "$mged_gui($id,top).ur" == "$mged_gui($id,active_dm)"} {
	foreach cid $mged_collaborators {
	    if {"$mged_gui($cid,top).ur" == "$mged_gui($cid,active_dm)"} {
		winset $mged_gui($cid,active_dm)
		set view_ring($cid) [view_ring get]
	    }
	}
    } else {
	set view_ring($id) [view_ring get]
d2818 3
d2823 1
a2823 1
proc view_ring_toggle { id } {
a2825 1
    global mged_collaborators
d2827 12
a2838 4
#    if {$mged_gui($id,dm_loc) != "lv"} {
#	winset $mged_gui($id,active_dm)
#    }
    winset $mged_gui($id,active_dm)
d2840 3
a2842 1
    _mged_view_ring toggle
d2844 21
a2864 10
    set i [lsearch -exact $mged_collaborators $id]
    if { $i != -1 && "$mged_gui($id,top).ur" == "$mged_gui($id,active_dm)"} {
	foreach cid $mged_collaborators {
	    if {"$mged_gui($cid,top).ur" == "$mged_gui($cid,active_dm)"} {
		winset $mged_gui($cid,active_dm)
		set view_ring($cid) [view_ring get]
	    }
	}
    } else {
	set view_ring($id) [view_ring get]
d2871 20
a2890 16
    set views [view_ring get -a]
    set llen [llength $views]

    if {$m == "s"} {
	set w .$id.menubar.viewring.select
	$w delete 0 end
	for {set i 0} {$i < $llen} {incr i} {
	    $w add radiobutton -value [lindex $views $i] -variable view_ring($id)\
		    -label [lindex $views $i] -command "view_ring_goto $id [lindex $views $i]"
	}
    } elseif {$m == "d"} {
	set w .$id.menubar.viewring.delete
	$w delete 0 end
	for {set i 0} {$i < $llen} {incr i} {
	    $w add command -label [lindex $views $i]\
		    -command "view_ring_delete $id [lindex $views $i]"
a2891 2
    } else {
	puts "Usage: update_view_ring_entries w s|d"
d2899 33
a2931 2
    if {[_mged_opendb] == ""} {
	error "No database has been opened!"
a2932 29

    winset $mged_gui($id,active_dm)
    set view_ring($id) [view_ring get]
    set views [view_ring get -a]
    set llen [llength $views]

    # we need to also save the previous view so that
    # toggle will continue to work
    view_ring toggle
    set prev [view_ring get]

    set ws .$id.menubar.viewring.select
    set wd .$id.menubar.viewring.delete
    for {set i 0} {$i < $llen} {incr i} {
	view_ring goto [lindex $views $i]
	set aet [view aet]
	set aet [format "az=%.2f el=%.2f tw=%.2f"\
		[lindex $aet 0] [lindex $aet 1] [lindex $aet 2]]
	set center [view center]
	set center [format "cent=(%.3f %.3f %.3f)"\
		[lindex $center 0] [lindex $center 1] [lindex $center 2]]
	set size [format "size=%.3f" [view size]]
	$ws entryconfigure $i -label "$center $size $aet"
	$wd entryconfigure $i -label "$center $size $aet"
    }

    # restore both previous and current views
    view_ring goto $prev
    view_ring goto $view_ring($id)
@


1.117
log
@*- removed epa from mged_Priv(other_prims); it's already
   listed under mged_Priv(ellipsoids)
@
text
@d2789 5
d2809 2
@


1.116
log
@moved arbn under arb menu, set limited edit capability primitives to deep red
@
text
@d27 1
a27 1
set mged_Priv(ellipses) {ehy ell ell1 epa sph}
d31 1
a31 1
set mged_Priv(other_prims) {ars dsp epa eto extrude half part pipe sketch tor}
d767 1
a767 1
foreach ptype $mged_Priv(ellipses) {
@


1.115
log
@*- changed "Ellipses" to "Ellipsoids" in Create menu
@
text
@d34 1
a34 1
set mged_Priv(weak_prims) {arbn bot nmg}
d723 1
a723 1
	-label "Arb8" -underline 0 -menu .$id.menubar.create.arb8
d725 1
a725 1
	-label "Cones & Cyls" -underline 0 -menu .$id.menubar.create.cones
d728 1
d740 2
a741 2
    lappend ksl "summary \"Make a $ptype.\"" "see_also \"make, in\""
    hoc_register_menu_data "Arb8" "$ptype..." "Make a $ptype" $ksl
d744 12
d800 1
a800 1
    .$id.menubar.create add command -label "$ptype..."\
d804 1
a804 1
    lappend ksl "summary \"Make a $ptype.\"" "see_also \"make, in\""
@


1.114
log
@*- update on context help for primitives
@
text
@d727 1
a727 1
	-label "Ellipses" -underline 0 -menu .$id.menubar.create.ell
@


1.113
log
@*- mods to Create menu
@
text
@d739 1
a739 1
    lappend ksl "summary \"Make a $ptype using the values found in the tcl variable solid_data(attr,$ptype).\"" "see_also \"make, in\""
d749 1
a749 1
    lappend ksl "summary \"Make a $ptype using the values found in the tcl variable solid_data(attr,$ptype).\"" "see_also \"make, in\""
d759 1
a759 1
    lappend ksl "summary \"Make a $ptype using the values found in the tcl variable solid_data(attr,$ptype).\"" "see_also \"make, in\""
d770 1
a770 1
	lappend ksl "summary \"Make a dsp solid.\"" "see_also \"make, in\""
d777 1
a777 1
	lappend ksl "summary \"Make a $ptype using the values found in the tcl variable solid_data(attr,$ptype).\"" "see_also \"make, in\""
@


1.112
log
@*- mods to the gui proc to handle differently the case
   where the specified display type is not available
   (i.e. set the display type to the best available type).
@
text
@d28 7
a34 1
set mged_Priv(other_prims) {ars arbn bot epa eto extrude grip half nmg part pipe sketch tor}
d763 21
a783 2
# separate cascades from other entries
#    .$id.menubar.create add separator
d785 2
a786 2
# populate the remainder of the Create menu
foreach ptype $mged_Priv(other_prims) {
d791 1
a791 1
    lappend ksl "summary \"Make a $ptype using the values found in the tcl variable solid_data(attr,$ptype).\"" "see_also \"make, in\""
a793 9

# separate dsp from other entries
.$id.menubar.create add separator

.$id.menubar.create add command -label "dsp..."\
	-command "dsp_create $id"
set ksl {}
lappend ksl "summary \"Make a dsp solid.\"" "see_also \"make, in\""
hoc_register_menu_data "Create" "dsp..." "Make a dsp solid" $ksl
@


1.111
log
@*- removed a few leftovers that accidentally
   got checked in
@
text
@d392 1
a392 1
    return "gui: $gscreen does not support $dtype"
@


1.110
log
@Rearrange MGED's Create menu, putting like primitives into submenus
        Arb8            - arb8 arb7 arb6 arb5 arb4 rpp
        Cones & Cyl     - rcc rec rhc rpc tec tgc trc
        Ellipses        - ell ell1 sph

        Other primitives (i.e ars arbn bot ehy epa eto extrude grip half
			      nmg part pipe sketch tor)
        are put directly in the create menu.
@
text
@a24 4
#
# Remove Prim Editor and Combination Editor entries from Create menu.
#

d717 1
a717 1
	-label "Arb8" -underline 0 -menu .$id.menubar.create.arb8 -command "puts Arb8; update"
@


1.109
log
@*- add "Upgrade Database..." to the Tools menu
@
text
@d25 9
d239 1
d719 3
d723 40
a762 11
	-label "Make Prim" -underline 0 -menu .$id.menubar.create.solid
#.$id.menubar.create add command\
#	-label "Instance Creation Panel..." -underline 0 -command "icreate $id"
.$id.menubar.create add command -label "Prim Editor" -underline 0 \
	-command "init_edit_solid $id"
hoc_register_menu_data "Create" "Prim Editor" "Prim Editor"\
	{ { summary "A tool for editing/creating primitives." } }
.$id.menubar.create add command -label "Combination Editor" -underline 0 \
	-command "init_comb $id"
hoc_register_menu_data "Create" "Combination Editor" "Combination Editor"\
	{ { summary "A tool for editing/creating combinations." } }
d764 4
a767 5
menu .$id.menubar.create.solid -title "Make Prim" -tearoff $mged_default(tearoff_menus)
set make_solid_types [_mged_make -t]
foreach solid_type $make_solid_types {
    .$id.menubar.create.solid add command -label "$solid_type..."\
	    -command "init_solid_create $id $solid_type"
d770 2
a771 2
    lappend ksl "summary \"Make a $solid_type using the values found in the tcl variable solid_data(attr,$solid_type).\"" "see_also \"make, in\""
    hoc_register_menu_data "Make Prim" "$solid_type..." "Make a $solid_type" $ksl
d774 2
a775 1
.$id.menubar.create.solid add separator
d777 2
a778 2
.$id.menubar.create.solid add command -label "dsp..."\
    -command "dsp_create $id"
d781 1
a781 1
hoc_register_menu_data "Make Prim" "dsp..." "Make a dsp solid" $ksl
@


1.108
log
@*- modified mged_draw_grid to use mged_apply
@
text
@d1728 7
d2909 1
a2909 1
}@


1.107
log
@*- disable tearoff menus
@
text
@d2896 1
a2896 1
    rset grid draw $mged_gui($id,grid_draw)
a2901 2

    # XXX - At the moment this routine does not honor the "apply_to" settings
@


1.106
log
@*- remove references to viewget and viewset
@
text
@d111 1
d113 2
@


1.105
log
@Added the "Build Pattern Tool" item on the "Tools" menu
@
text
@d744 1
a744 1
          { see_also "press, ae, view, viewset, viewget" } }
d750 1
a750 1
          { see_also "press, ae, view, viewset, viewget" } }
d756 1
a756 1
          { see_also "press, ae, view, viewset, viewget" } }
d762 1
a762 1
          { see_also "press, ae, view, viewset, viewget" } }
d768 1
a768 1
          { see_also "press, ae, view, viewset, viewget" } }
d774 1
a774 1
          { see_also "press, ae, view, viewset, viewget" } }
d780 1
a780 1
          { see_also "press, ae, view, viewset, viewget" } }
d786 1
a786 1
          { see_also "press, ae, view, viewset, viewget" } }
d803 1
a803 1
          { see_also "press, ae, view, viewset, viewget" } }
d812 1
a812 1
          { see_also "press, ae, view, viewset, viewget" } }
d1941 1
a1941 1
          { see_also "center, view, viewget, viewset" } }
d1953 1
a1953 1
        { see_also "ae, view, viewget, viewset" } }
@


1.104
log
@*- modified view_ring_add (disallow adding
   views if already more than 9 in view ring)
@
text
@d1710 5
@


1.103
log
@*- mods requested by Eric regarding consistency
   when using capitalization in the GUI
@
text
@a2515 3
#    if {$mged_gui($id,dm_loc) != "lv"} {
#	winset $mged_gui($id,active_dm)
#    }
d2518 4
@


1.102
log
@*- update the raytrace control panel
   according to the main GUI
*- changed parameter passed to build_edit_menu_all
*- added callback mged_draw_grid to perhaps unset
   the checkbutton for drawing the grid if (dbip == DBI_NULL)
@
text
@d1496 1
a1496 1
	-label "Persistent sweep rectangle" -underline 0\
@


1.101
log
@*- Change use of "Solid" to "Prim"
   as requested by Lee and Paul.
@
text
@d687 1
a687 1
	-command "winset \$mged_gui($id,active_dm); build_edit_menu_all s"
d713 1
a713 1
	{ { summary "A tool for editing/creating solids." } }
d1130 1
a1130 1
	-command "mged_apply $id \"set fb_all \$mged_gui($id,fb_all)\""
d1136 1
a1136 1
	-command "mged_apply $id \"set fb_all \$mged_gui($id,fb_all)\""
d1143 1
a1143 1
	-command "mged_apply $id \"set fb_overlay \$mged_gui($id,fb_overlay)\""
d1151 1
a1151 1
	-command "mged_apply $id \"set fb_overlay \$mged_gui($id,fb_overlay)\""
d1159 1
a1159 1
	-command "mged_apply $id \"set fb_overlay \$mged_gui($id,fb_overlay)\""
d1228 1
a1228 1
	-command "mged_apply $id \"rset grid draw \$mged_gui($id,grid_draw)\""
d1456 1
a1456 1
	-command "mged_apply $id \"rset grid draw \$mged_gui($id,grid_draw)\""
d2697 4
d2881 14
@


1.100
log
@Use tkPriv(cad_dialog) for dialog name.
@
text
@d686 1
a686 1
.$id.menubar.edit add command -label "Solid Selection..." -underline 0 \
d688 2
a689 2
hoc_register_menu_data "Edit" "Solid Selection..." "Solid Selection"\
	{ { summary "A tool for selecting a solid to edit." } }
d695 1
a695 1
.$id.menubar.edit add command -label "Solid Editor" -underline 6 \
d697 2
a698 2
hoc_register_menu_data "Edit" "Solid Editor" "Solid Editor"\
	{ { summary "A tool for editing/creating solids." } }
d707 1
a707 1
	-label "Make Solid" -underline 0 -menu .$id.menubar.create.solid
d710 1
a710 1
.$id.menubar.create add command -label "Solid Editor" -underline 0 \
d712 1
a712 1
hoc_register_menu_data "Create" "Solid Editor" "Solid Editor"\
d719 1
a719 1
menu .$id.menubar.create.solid -title "Make Solid" -tearoff $mged_default(tearoff_menus)
d727 1
a727 1
    hoc_register_menu_data "Make Solid" "$solid_type..." "Make a $solid_type" $ksl
d736 1
a736 1
hoc_register_menu_data "Make Solid" "dsp..." "Make a dsp solid" $ksl
d920 1
a920 1
	-label "Pick Edit-Solid" -underline 10\
d922 1
a922 1
hoc_register_menu_data "Mouse Behavior" "Pick Edit-Solid" "Pick Edit-Solid"\
d1721 1
a1721 1
.$id.menubar.tools add command -label "Solid Editor" -underline 0\
d1723 2
a1724 2
hoc_register_menu_data "Tools" "Solid Editor" "Solid Editor"\
	{ { summary "Tool for creating/editing solids." } }
@


1.99
log
@Add "Dedication" entry to the "Help" menu
@
text
@d207 7
d2860 1
a2860 1
    set tmp_font [lindex [$w configure -font] 4]
@


1.98
log
@Add help-on-context class bindings to Scale
@
text
@d1739 2
@


1.97
log
@The listen checkbuttons no longer need to be deactivated.
@
text
@d205 1
@


1.96
log
@Add new variable, mged_browser, to hold
   the full browser path.
Delay evaluation of variables (i.e. mged_browser
   and mged_html_dir) in the browser command.
@
text
@d1167 1
a1167 1
	-command "set_listen $id" -state disabled
d1476 1
a1476 1
	-command "set_listen $id" -state disabled
d2264 1
a2264 8
    if {$mged_gui($id,fb)} {
	.$id.menubar.settings.fb entryconfigure 8 -state normal
	set mged_gui($id,listen) $listen
    } else {
	.$id.menubar.settings.fb entryconfigure 8 -state disabled
	set mged_gui($id,listen) $listen
    }

d2809 1
a2809 1
	mged_apply $id "set listen \$mged_gui($id,listen)"
d2812 1
a2812 9
    if {$mged_gui($id,fb)} {
	set mged_gui($id,listen) 1
	.$id.menubar.settings.fb entryconfigure 8 -state normal
	.$id.menubar.modes entryconfigure 4 -state normal
    } else {
	set mged_gui($id,listen) 0
	.$id.menubar.settings.fb entryconfigure 8 -state disabled
	.$id.menubar.modes entryconfigure 4 -state disabled
    }
@


1.95
log
@Add two new mged_default variables:
	rot_factor and tran_factor
They are used to control how fast the arrow
keys will rotate or translate the view.
@
text
@d25 1
a25 1
if ![info exists tk_version] {
d29 1
a29 1
if ![info exists mged_default(rot_factor)] {
d33 1
a33 1
if ![info exists mged_default(tran_factor)] {
d37 1
a37 1
if ![info exists mged_default(html_dir)] {
d41 1
a41 7
if [info exists env(MGED_HTML_DIR)] {
        set mged_html_dir $env(MGED_HTML_DIR)
} else {
        set mged_html_dir $mged_default(html_dir)
}

if ![info exists mged_default(web_browser)] {
d45 1
a45 1
if ![info exists mged_color_scheme] {
d49 1
a49 1
if ![info exists mged_players] {
d53 1
a53 1
if ![info exists mged_collaborators] {
d57 1
a57 1
if ![info exists mged_default(ggeom)] {
d61 1
a61 1
if ![info exists mged_default(geom)] {
d66 1
a66 1
if ![info exists mged_default(id)] {
d70 1
a70 1
if ![info exists mged_default(pane)] {
d74 1
a74 1
if ![info exists mged_default(multi_pane)] {
d78 1
a78 1
if ![info exists mged_default(config)] {
d82 1
a82 1
if [info exists env(DISPLAY)] {
d85 1
a85 1
    if ![info exists mged_default(display)] {
d91 1
a91 1
if ![info exists mged_default(gdisplay)] {
d95 1
a95 1
if ![info exists mged_default(dm_type)] {
d99 1
a99 1
if ![info exists mged_default(comb)] {
d103 1
a103 1
if ![info exists mged_default(edit_style)] {
d107 1
a107 1
if ![info exists mged_default(num_lines)] {
d111 1
a111 1
if ![info exists mged_default(tearoff_menus)] {
d115 1
a115 1
if ![info exists mged_gui(mged,screen)] {
d119 1
a119 1
if ![info exists mged_gui(databaseDir)] {
d123 1
a123 1
if ![info exists mged_gui(loadScriptDir)] {
d131 1
a131 1
if ![info exists mged_default(faceplate)] {
d135 1
a135 1
if ![info exists mged_default(orig_gui)] {
d139 1
a139 1
if ![info exists mged_default(zclip)] {
d143 1
a143 1
if ![info exists mged_default(perspective_mode)] {
d147 1
a147 1
if ![info exists mged_default(max_text_lines)] {
d151 1
a151 1
if ![info exists mged_default(doubleClickTol)] {
d155 32
d211 1
d374 1
a374 1
if ![dm_validXType $gscreen $dtype] {
d385 1
a385 1
if [ winfo exists .$id ] {
d403 1
a403 1
    if [catch { openmv $id $mged_gui($id,top) $mged_gui($id,dmc) $screen $dtype } result] {
d413 1
a413 1
    if [catch { openmv $id $mged_gui($id,top) $mged_gui($id,dmc) $gscreen $dtype } result] {
d1901 2
a1902 35
# First, try to use the browser specified by
# the WEB_BROWSER environment variable.
if [info exists env(WEB_BROWSER)] {
    if [ file exists $env(WEB_BROWSER) ] {
	set web_cmd "exec $env(WEB_BROWSER) -display $screen\
		$mged_html_dir/index.html &"
    }
}

# Attempt to locate a browser
if ![info exists web_cmd] {
    # First, search the user's path
    if [info exists env(PATH)] {
	set pathlist [split $env(PATH) :]
	foreach path $pathlist {
	    if [file exists $path/netscape] {
		set web_cmd "exec $path/netscape -display $screen \
			$mged_html_dir/index.html &"
		break;
	    }
	}
    }

    if ![info exists web_cmd] {
	# Failing that, use the browser specified by mged_default(web_browser)
	if [ file exists $mged_default(web_browser) ] {
	    set web_cmd "exec $mged_default(web_browser) -display $screen\
		    $mged_html_dir/index.html &"
	} else {
	    # When all else fails, admit defeat
	    set web_cmd {puts "Sorry, a web browser is not available."; 
	    puts "Please check your PATH."}
	}
    }
}
d2234 1
a2234 1
    if ![catch {adc draw} result] {
d2298 1
a2298 1
    if [ winfo exists .mmenu$id ] {
d2329 1
a2329 1
    if [winfo exists .sei$id] {
d2348 1
a2348 1
    if ![winfo exists .sei$id] {
d2879 1
a2879 1
    if [winfo exists .$id.rt] {
@


1.94
log
@Mod to set_mouse_behavior proc to accomodate
paint rectangle mode.
@
text
@d29 8
@


1.93
log
@set mged_default(orig_gui) 0
@
text
@d2842 1
@


1.92
log
@Mods to query ray help-on-context.
@
text
@d134 1
a134 1
    set mged_default(orig_gui) 1
@


1.91
log
@Call solid_data_init.
Add "Update/Create .mgedrc" entry to File menu.
@
text
@d153 2
a154 4
if ![info exists solid_data(attr,arb8)] {
    # Call this routine to initialize the "solid_data" array
    solid_data_init
}
d1659 2
a1660 1
	{ { summary "Tool for setting query ray parameters." } }
@


1.90
log
@Provided a better check before calling font_init
@
text
@d153 5
d438 7
a444 1
.$id.menubar.file add command -label "Close" -underline 0 -command "gui_destroy $id"
d2138 1
a2138 1
	.$id.menubar.file entryconfigure 13 -state disabled
d2142 1
a2142 1
	.$id.menubar.file entryconfigure 13 -state normal
d2180 1
a2180 1
	.$id.menubar.file entryconfigure 13 -state disabled
@


1.89
log
@More off by one bugs.
@
text
@d125 1
a125 1
if ![info exists mged_default(text_font)] {
@


1.88
log
@Fixed off by one error that crept in
because of hardcoded menu entry references.
@
text
@d2799 2
d2803 3
d2808 1
a2810 2
	set mged_gui($id,listen) 1
	mged_apply $id "set listen \$mged_gui($id,listen)"
d2812 1
a2814 1
	set mged_gui($id,listen) 0
@


1.87
log
@Use ill's and sed's -i option (gets around
the multiply referenced problem).
Hack to fix double-click problem in listbox.
@
text
@d2253 1
a2253 1
	.$id.menubar.settings.fb entryconfigure 7 -state normal
d2256 1
a2256 1
	.$id.menubar.settings.fb entryconfigure 7 -state disabled
d2803 1
a2803 1
	.$id.menubar.settings.fb entryconfigure 7 -state normal
d2808 1
a2808 1
	.$id.menubar.settings.fb entryconfigure 7 -state disabled
@


1.86
log
@When the number of lines in the command window
exceeds mged_default(max_text_lines), get rid
of older excess lines.
@
text
@d149 4
d333 2
@


1.85
log
@Handle configure events for main window.
@
text
@d145 4
@


1.85.2.1
log
@When the number of text lines in the command
window exceeds mged_default(max_text_lines),
get rid of older output.
@
text
@a144 4
if ![info exists mged_default(max_text_lines)] {
    set mged_default(max_text_lines) 1000
}

@


1.85.2.2
log
@Hack to fix double-click problem in listbox.
@
text
@a148 4
if ![info exists mged_default(doubleClickTol)] {
    set mged_default(doubleClickTol) 500
}

a328 2
set mged_gui($id,lastButtonPress) 0
set mged_gui($id,lastItem) ""
@


1.85.2.3
log
@Fixed off by one error that crept in
because of hardcoded menu entry references.
@
text
@d2253 1
a2253 1
	.$id.menubar.settings.fb entryconfigure 8 -state normal
d2256 1
a2256 1
	.$id.menubar.settings.fb entryconfigure 8 -state disabled
d2803 1
a2803 1
	.$id.menubar.settings.fb entryconfigure 8 -state normal
d2808 1
a2808 1
	.$id.menubar.settings.fb entryconfigure 8 -state disabled
@


1.85.2.4
log
@More off by one bugs.
@
text
@a2798 2
    global fb
    global listen
a2800 3
    if {$fb && !$listen} {
	mged_apply $id "set listen \$mged_gui($id,listen)"
    }
a2802 1
	set mged_gui($id,listen) 1
d2805 2
a2807 1
	set mged_gui($id,listen) 0
d2810 1
@


1.85.2.5
log
@Perform a better test before calling font_init
@
text
@d125 1
a125 1
if {[font names] == ""} {
@


1.85.2.6
log
@Make call to solid_data_init.
Add "Update/Create .mgedrc" menu item to File menu.
@
text
@a152 5
if ![info exists solid_data(attr,arb8)] {
    # Call this routine to initialize the "solid_data" array
    solid_data_init
}

d433 1
a433 7
.$id.menubar.file add command -label "Update/Create .mgedrc" -underline 0 \
	-command "update_mgedrc"
hoc_register_menu_data "File" "Update/Create .mgedrc" "Update/Create .mgedrc"\
	{ { summary "Update or create the .mgedrc startup file." }
          { see_also } }
.$id.menubar.file add command -label "Close" -underline 0 \
	-command "gui_destroy $id"
d2127 1
a2127 1
	.$id.menubar.file entryconfigure 14 -state disabled
d2131 1
a2131 1
	.$id.menubar.file entryconfigure 14 -state normal
d2169 1
a2169 1
	.$id.menubar.file entryconfigure 14 -state disabled
@


1.85.2.7
log
@Mods to query ray help on context.
@
text
@d153 4
a156 2
# Call this routine to initialize the "solid_data" array
solid_data_init
d1661 1
a1661 2
	{ { summary "Tool for setting query ray parameters." }
          { see_also "qray" } }
@


1.85.2.8
log
@Set mged_default(orig_gui) to 0
@
text
@d134 1
a134 1
    set mged_default(orig_gui) 0
@


1.85.2.9
log
@Mod to set_mouse_behavior proc for paint rectangle mode.
@
text
@a2841 1
	"p" -
@


1.85.2.10
log
@Add support for two new mged_default variables:
	rot_factor and tran_factor.
They control how fast to rotate or translate
using the arrow keys.
@
text
@a28 8
if ![info exists mged_default(rot_factor)] {
    set mged_default(rot_factor) 1
}

if ![info exists mged_default(tran_factor)] {
    set mged_default(tran_factor) 0.01
}

@


1.85.2.11
log
@Add mged_browser variable.
Modified command used to start browser
  to delay evaluation of mged_html_dir
  and mged_browser.
Put braces around first argument to "if".
@
text
@d25 1
a25 1
if {![info exists tk_version]} {
d29 1
a29 1
if {![info exists mged_default(rot_factor)]} {
d33 1
a33 1
if {![info exists mged_default(tran_factor)]} {
d37 1
a37 1
if {![info exists mged_default(html_dir)]} {
d41 7
a47 1
if {![info exists mged_default(web_browser)]} {
d51 1
a51 1
if {![info exists mged_color_scheme]} {
d55 1
a55 1
if {![info exists mged_players]} {
d59 1
a59 1
if {![info exists mged_collaborators]} {
d63 1
a63 1
if {![info exists mged_default(ggeom)]} {
d67 1
a67 1
if {![info exists mged_default(geom)]} {
d72 1
a72 1
if {![info exists mged_default(id)]} {
d76 1
a76 1
if {![info exists mged_default(pane)]} {
d80 1
a80 1
if {![info exists mged_default(multi_pane)]} {
d84 1
a84 1
if {![info exists mged_default(config)]} {
d88 1
a88 1
if {[info exists env(DISPLAY)]} {
d91 1
a91 1
    if {![info exists mged_default(display)]} {
d97 1
a97 1
if {![info exists mged_default(gdisplay)]} {
d101 1
a101 1
if {![info exists mged_default(dm_type)]} {
d105 1
a105 1
if {![info exists mged_default(comb)]} {
d109 1
a109 1
if {![info exists mged_default(edit_style)]} {
d113 1
a113 1
if {![info exists mged_default(num_lines)]} {
d117 1
a117 1
if {![info exists mged_default(tearoff_menus)]} {
d121 1
a121 1
if {![info exists mged_gui(mged,screen)]} {
d125 1
a125 1
if {![info exists mged_gui(databaseDir)]} {
d129 1
a129 1
if {![info exists mged_gui(loadScriptDir)]} {
d137 1
a137 1
if {![info exists mged_default(faceplate)]} {
d141 1
a141 1
if {![info exists mged_default(orig_gui)]} {
d145 1
a145 1
if {![info exists mged_default(zclip)]} {
d149 1
a149 1
if {![info exists mged_default(perspective_mode)]} {
d153 1
a153 1
if {![info exists mged_default(max_text_lines)]} {
d157 1
a157 1
if {![info exists mged_default(doubleClickTol)]} {
a160 32
if {[info exists env(MGED_HTML_DIR)]} {
        set mged_html_dir $env(MGED_HTML_DIR)
} else {
        set mged_html_dir $mged_default(html_dir)
}

if {[info exists env(WEB_BROWSER)]} {
    if {[file exists $env(WEB_BROWSER)]} {
	set mged_browser $env(WEB_BROWSER)
    }
}

if {![info exists mged_browser]} {
    if {[file exists $mged_default(web_browser)]} {
	set mged_browser $mged_default(web_browser)
    } else {
	if {[info exists env(PATH)]} {
	    set pathlist [split $env(PATH) :]
	    foreach path $pathlist {
		if {[file exists $path/netscape]} {
		    set mged_browser $path/netscape
		    break;
		}
	    }
	}

	if {![info exists mged_browser]} {
	    set mged_browser "Browser not found, check your PATH"
	}
    }
}

a184 1
    global mged_browser
d347 1
a347 1
if {![dm_validXType $gscreen $dtype]} {
d358 1
a358 1
if {[ winfo exists .$id ]} {
d376 1
a376 1
    if {[catch { openmv $id $mged_gui($id,top) $mged_gui($id,dmc) $screen $dtype } result]} {
d386 1
a386 1
    if {[catch { openmv $id $mged_gui($id,top) $mged_gui($id,dmc) $gscreen $dtype } result]} {
d1874 35
a1908 2
set web_cmd "exec \$mged_browser -display $screen \
	\$mged_html_dir/index.html &"
d2240 1
a2240 1
    if {![catch {adc draw} result]} {
d2304 1
a2304 1
    if {[ winfo exists .mmenu$id ]} {
d2335 1
a2335 1
    if {[winfo exists .sei$id]} {
d2354 1
a2354 1
    if {![winfo exists .sei$id]} {
d2885 1
a2885 1
    if {[winfo exists .$id.rt]} {
@


1.85.2.12
log
@The listen checkbuttons no longer need to be deactivated.
@
text
@d1167 1
a1167 1
	-command "set_listen $id"
d1476 1
a1476 1
	-command "set_listen $id"
d2264 8
a2271 1
    set mged_gui($id,listen) $listen
d2816 1
a2816 1
	mged_apply $id "set listen 1"
d2819 9
a2827 1
    set mged_gui($id,listen) $listen
@


1.85.2.13
log
@Add help-on-context class bindings to "Scale"
@
text
@a204 1
bind Scale <ButtonPress-3><ButtonRelease-3> "hoc_callback %W %X %Y"
@


1.85.2.14
log
@Add "Dedication" entry to Help menu
@
text
@a1738 2
.$id.menubar.help add command -label "Dedication" -underline 0\
	-command "mike_dedication $id"
@


1.85.2.15
log
@Use tkPriv(cad_dialog) for dialog name.
@
text
@a206 7
# This causes cad_dialog to use mged_wait instead of tkwait
set tkPriv(wait_cmd) mged_wait

# Used throughout the GUI as the dialog window name.
# This helps prevent window clutter.
set tkPriv(cad_dialog) .mged_dialog

d2853 1
a2853 1
    set tmp_font [$w cget -font]
@


1.85.2.16
log
@*- Change use of "Solid" to "Prim" as requested
   by Lee and Paul.
@
text
@d686 1
a686 1
.$id.menubar.edit add command -label "Prim Selection..." -underline 0 \
d688 2
a689 2
hoc_register_menu_data "Edit" "Prim Selection..." "Prim Selection"\
	{ { summary "A tool for selecting a primitive to edit." } }
d695 1
a695 1
.$id.menubar.edit add command -label "Prim Editor" -underline 6 \
d697 2
a698 2
hoc_register_menu_data "Edit" "Prim Editor" "Prim Editor"\
	{ { summary "A tool for editing/creating primitives." } }
d707 1
a707 1
	-label "Make Prim" -underline 0 -menu .$id.menubar.create.solid
d710 1
a710 1
.$id.menubar.create add command -label "Prim Editor" -underline 0 \
d712 1
a712 1
hoc_register_menu_data "Create" "Prim Editor" "Prim Editor"\
d719 1
a719 1
menu .$id.menubar.create.solid -title "Make Prim" -tearoff $mged_default(tearoff_menus)
d727 1
a727 1
    hoc_register_menu_data "Make Prim" "$solid_type..." "Make a $solid_type" $ksl
d736 1
a736 1
hoc_register_menu_data "Make Prim" "dsp..." "Make a dsp solid" $ksl
d920 1
a920 1
	-label "Pick Edit-Prim" -underline 10\
d922 1
a922 1
hoc_register_menu_data "Mouse Behavior" "Pick Edit-Prim" "Pick Edit-Prim"\
d1721 1
a1721 1
.$id.menubar.tools add command -label "Prim Editor" -underline 0\
d1723 2
a1724 2
hoc_register_menu_data "Tools" "Prim Editor" "Prim Editor"\
	{ { summary "Tool for creating/editing primitives." } }
@


1.85.2.17
log
@*- Mods to accomodate using the GUI
   without opening a database
*- calling build_edit_menu_all with s1 instead of s
   due to use of lbdcHack
@
text
@d687 1
a687 1
	-command "winset \$mged_gui($id,active_dm); build_edit_menu_all s1"
d1228 1
a1228 1
	-command "mged_draw_grid $id"
d1456 1
a1456 1
	-command "mged_draw_grid $id"
a2696 4
    if {[_mged_opendb] == ""} {
	error "No database has been opened!"
    }

a2876 14
}

proc mged_draw_grid {id} {
    global mged_gui

    winset $mged_gui($id,active_dm)
    rset grid draw $mged_gui($id,grid_draw)

    # Reconcile the Tcl grid_draw with the internal grid_draw.
    # Note - the internal grid_draw cannot be set to 1 if a database
    #        is not currently open (i.e. dbip == DBI_NULL).
    set mged_gui($id,grid_draw) [rset grid draw]

    # XXX - At the moment this routine does not honor the "apply_to" settings
@


1.85.2.18
log
@*- update the raytrace control panel
   according to the main GUI
@
text
@d713 1
a713 1
	{ { summary "A tool for editing/creating primitives." } }
d1130 1
a1130 1
	-command "mged_apply $id \"set fb_all \$mged_gui($id,fb_all)\"; rt_update_dest $id"
d1136 1
a1136 1
	-command "mged_apply $id \"set fb_all \$mged_gui($id,fb_all)\"; rt_update_dest $id"
d1143 1
a1143 1
	-command "mged_apply $id \"set fb_overlay \$mged_gui($id,fb_overlay)\"; rt_update_dest $id"
d1151 1
a1151 1
	-command "mged_apply $id \"set fb_overlay \$mged_gui($id,fb_overlay)\"; rt_update_dest $id"
d1159 1
a1159 1
	-command "mged_apply $id \"set fb_overlay \$mged_gui($id,fb_overlay)\"; rt_update_dest $id"
@


1.84
log
@Use version number from $version.
@
text
@d77 1
a77 1
    set mged_default(config) g
d2085 1
d2850 6
@


1.83
log
@*- add more mged_default's
@
text
@d2396 3
d2402 2
a2403 2
	    wm title $mged_gui($id,top) "MGED 5.0 Graphics Window ($id) - $dbname - Upper Left"
	    wm title .$id "MGED 5.0 Command Window ($id) - $dbname - Upper Left"
d2405 2
a2406 2
	    wm title $mged_gui($id,top) "MGED 5.0 Graphics Window ($id) - $dbname - Upper Right"
	    wm title .$id "MGED 5.0 Command Window ($id) - $dbname - Upper Right"
d2408 2
a2409 2
	    wm title $mged_gui($id,top) "MGED 5.0 Graphics Window ($id) - $dbname - Lower Left"
	    wm title .$id "MGED 5.0 Command Window ($id) - $dbname - Lower Left"
d2411 2
a2412 2
	    wm title $mged_gui($id,top) "MGED 5.0 Graphics Window ($id) - $dbname - Lower Right"
	    wm title .$id "MGED 5.0 Command Window ($id) - $dbname - Lower Right"
d2416 1
a2416 1
	    wm title $mged_gui($id,top) "MGED 5.0 Command Window ($id) - $dbname - Upper Left"
d2418 1
a2418 1
	    wm title $mged_gui($id,top) "MGED 5.0 Command Window ($id) - $dbname - Upper Right"
d2420 1
a2420 1
	    wm title $mged_gui($id,top) "MGED 5.0 Command Window ($id) - $dbname - Lower Left"
d2422 1
a2422 1
	    wm title $mged_gui($id,top) "MGED 5.0 Command Window ($id) - $dbname - Lower Right"
@


1.82
log
@*- add class binding for Listbox
@
text
@d129 16
@


1.81
log
@*- if needed, run loadtk first
@
text
@d143 1
@


1.80
log
@*- cleaning
@
text
@d25 4
a122 4
}

if ![info exists tk_version] {
    loadtk
@


1.79
log
@Added Overlap Tool
@
text
@d82 1
a86 4
}

if ![info exists env(DISPLAY)] {
    set env(DISPLAY) $mged_default(display)
@


1.78
log
@*- mods convert non-rgb entries to rgb before feeding
   to MGED
@
text
@d1632 6
@


1.77
log
@*- mods to be more robust when running
   without an open database
@
text
@a800 2
#.$id.menubar.settings add cascade -label "Pane Background Color" -underline 5\
#	-menu .$id.menubar.settings.bgColor
@


1.76
log
@*- added mged_gui(databaseDir) and mged_gui(loadScriptDir) variables
   to keep track of the last database directory visited and
   the last Tcl script directory visited, respectively.
@
text
@a362 1

d1429 1
a1429 1
	-command "mged_apply $id \"adc draw \$mged_gui($id,adc_draw)\""
d1635 1
a1635 1
	-command "animmate .$id"
a1878 1

a1911 1

a1986 1

a2033 1

d2193 3
a2195 1
    set mged_gui($id,adc_draw) [adc draw]
@


1.75
log
@*- mods to menu items
@
text
@d116 8
@


1.74
log
@*- modified a few accelerator keys
@
text
@d385 2
a386 2
.$id.menubar.file add command -label "g2asc..." -underline 0 -command "init_g2asc $id"
hoc_register_menu_data "File" "g2asc..." "Convert to Ascii"\
d394 2
a395 2
.$id.menubar.file add command -label "Raytrace..." -underline 0 -command "init_Raytrace $id"
hoc_register_menu_data "File" "Raytrace..." "Raytrace View"\
d412 1
a412 1
.$id.menubar.file.saveview add command -label "RT script..." -underline 0\
d414 1
a414 1
hoc_register_menu_data "Save View As" "RT script..." "RT Script File"\
d435 1
a435 1
.$id.menubar.file.pref add command -label "Color Schemes..." -underline 0\
d438 1
a438 1
hoc_register_menu_data "Preferences" "Color Schemes..." "Color Schemes"\
d441 1
a441 1
.$id.menubar.file.pref add command -label "Fonts..." -underline 0 \
d443 1
a443 1
hoc_register_menu_data "Preferences" "Fonts..." "Fonts" \
d449 2
a450 2
	-label "micrometers" -underline 4 -command "do_Units $id"
hoc_register_menu_data "Units" "micrometers" "Unit of measure - Micrometers"\
d454 2
a455 2
	-label "millimeters" -underline 2 -command "do_Units $id"
hoc_register_menu_data "Units" "millimeters" "Unit of measure - Millimeters"\
d459 2
a460 2
	-label "centimeters" -underline 0 -command "do_Units $id"
hoc_register_menu_data "Units" "centimeters" "Unit of measure - Centimeters"\
d464 2
a465 2
	-label "meters" -underline 0 -command "do_Units $id"
hoc_register_menu_data "Units" "meters" "Unit of measure - Meters"\
d469 2
a470 2
	-label "kilometers" -underline 0 -command "do_Units $id"
hoc_register_menu_data "Units" "kilometers" "Unit of measure - Kilometers"\
d475 2
a476 2
	-label "inches" -underline 0 -command "do_Units $id"
hoc_register_menu_data "Units" "inches" "Unit of measure - Inches"\
d480 2
a481 2
	-label "feet" -underline 0 -command "do_Units $id"
hoc_register_menu_data "Units" "feet" "Unit of measure - Feet"\
d485 2
a486 2
	-label "yards" -underline 0 -command "do_Units $id"
hoc_register_menu_data "Units" "yards" "Unit of measure - Yards"\
d490 2
a491 2
	-label "miles" -underline 3 -command "do_Units $id"
hoc_register_menu_data "Units" "miles" "Unit of measure - Miles"\
d497 2
a498 2
	-label "emacs" -underline 0 -command "set_text_key_bindings $id"
hoc_register_menu_data "Command Line Edit" "emacs" "Command Line Edit - Emacs"\
d524 2
a525 2
	-label "vi" -underline 0 -command "set_text_key_bindings $id"
hoc_register_menu_data "Command Line Edit" "vi" "Command Line Edit - Vi"\
d612 1
a612 1
.$id.menubar.edit add command -label "Solid Editor..." -underline 6 \
d614 1
a614 1
hoc_register_menu_data "Edit" "Solid Editor..." "Solid Editor"\
d616 1
a616 1
.$id.menubar.edit add command -label "Combination Editor..." -underline 0 \
d618 1
a618 1
hoc_register_menu_data "Edit" "Combination Editor..." "Combination Editor"\
d627 1
a627 1
.$id.menubar.create add command -label "Solid Editor..." -underline 0 \
d629 1
a629 1
hoc_register_menu_data "Create" "Solid Editor..." "Solid Editor"\
d631 1
a631 1
.$id.menubar.create add command -label "Combination Editor..." -underline 0 \
d633 1
a633 1
hoc_register_menu_data "Create" "Combination Editor..." "Combination Editor"\
d639 1
a639 1
    .$id.menubar.create.solid add command -label "$solid_type"\
d644 1
a644 1
    hoc_register_menu_data "Make Solid" "$solid_type" "Make a $solid_type" $ksl
d839 1
a839 1
	-label "Pick edit-solid" -underline 10\
d841 1
a841 1
hoc_register_menu_data "Mouse Behavior" "Pick edit-solid" "Pick edit-solid"\
d860 1
a860 1
	-label "Pick edit-matrix" -underline 10\
d862 1
a862 1
hoc_register_menu_data "Mouse Behavior" "Pick edit-matrix" "Pick edit-matrix"\
d885 1
a885 1
	-label "Pick edit-combination" -underline 10\
d887 1
a887 1
hoc_register_menu_data "Mouse Behavior" "Pick edit-combination" "Pick edit-combination"\
d908 1
a908 1
	-label "Sweep raytrace-rectangle" -underline 6\
d910 1
a910 1
hoc_register_menu_data "Mouse Behavior" "Sweep raytrace-rectangle" "Sweep raytrace-rectangle"\
d922 1
a922 1
	-label "Pick raytrace-object(s)" -underline 14\
d924 1
a924 1
hoc_register_menu_data "Mouse Behavior" "Pick raytrace-object(s)" "Pick raytrace-object(s)"\
d931 1
a931 1
	-label "Query ray" -underline 0\
d944 1
a944 1
	-label "Sweep paint-rectangle" -underline 6\
d946 1
a946 1
hoc_register_menu_data "Mouse Behavior" "Sweep paint-rectangle" "Sweep paint-rectangle"\
d957 1
a957 1
	-label "Sweep zoom-rectangle" -underline 6\
d959 1
a959 1
hoc_register_menu_data "Mouse Behavior" "Sweep zoom-rectangle" "Sweep zoom-rectangle"\
d989 1
a989 1
	-label "both" -underline 0\
d991 1
a991 1
hoc_register_menu_data "Query Ray Effects" "both" "Query Ray Effects - Both"\
d1137 1
a1137 1
.$id.menubar.settings.grid add command -label "Anchor..." -underline 0\
d1139 1
a1139 1
hoc_register_menu_data "Grid" "Anchor..." "Grid Anchor"\
d1175 1
a1175 1
.$id.menubar.settings.grid.spacing add command -label "Arbitrary..." -underline 1\
d1177 1
a1177 1
hoc_register_menu_data "Grid Spacing" "Arbitrary..." "Grid Spacing - Arbitrary"\
d1183 1
a1183 1
.$id.menubar.settings.grid.spacing add command -label "micrometer" -underline 4\
d1185 1
a1185 1
hoc_register_menu_data "Grid Spacing" "micrometer" "Grid Spacing - micrometer"\
d1189 1
a1189 1
.$id.menubar.settings.grid.spacing add command -label "millimeter" -underline 2\
d1191 1
a1191 1
hoc_register_menu_data "Grid Spacing" "millimeter" "Grid Spacing - millimeter"\
d1195 1
a1195 1
.$id.menubar.settings.grid.spacing add command -label "centimeter" -underline 0\
d1197 1
a1197 1
hoc_register_menu_data "Grid Spacing" "centimeter" "Grid Spacing - centimeter"\
d1201 1
a1201 1
.$id.menubar.settings.grid.spacing add command -label "decimeter" -underline 0\
d1203 1
a1203 1
hoc_register_menu_data "Grid Spacing" "decimeter" "Grid Spacing - decimeter"\
d1207 1
a1207 1
.$id.menubar.settings.grid.spacing add command -label "meter" -underline 0\
d1209 1
a1209 1
hoc_register_menu_data "Grid Spacing" "meter" "Grid Spacing - meter"\
d1213 1
a1213 1
.$id.menubar.settings.grid.spacing add command -label "kilometer" -underline 0\
d1215 1
a1215 1
hoc_register_menu_data "Grid Spacing" "kilometer" "Grid Spacing - kilometer"\
d1220 1
a1220 1
.$id.menubar.settings.grid.spacing add command -label "1/10 inch" -underline 0\
d1222 1
a1222 1
hoc_register_menu_data "Grid Spacing" "1/10 inch" "Grid Spacing - 1/10 inch"\
d1226 1
a1226 1
.$id.menubar.settings.grid.spacing add command -label "1/4 inch" -underline 2\
d1228 1
a1228 1
hoc_register_menu_data "Grid Spacing" "1/4 inch" "Grid Spacing - 1/4 inch"\
d1232 1
a1232 1
.$id.menubar.settings.grid.spacing add command -label "1/2 inch" -underline 2\
d1234 1
a1234 1
hoc_register_menu_data "Grid Spacing" "1/2 inch" "Grid Spacing - 1/2 inch"\
d1238 1
a1238 1
.$id.menubar.settings.grid.spacing add command -label "inch" -underline 0\
d1240 1
a1240 1
hoc_register_menu_data "Grid Spacing" "inch" "Grid Spacing - inch"\
d1244 1
a1244 1
.$id.menubar.settings.grid.spacing add command -label "foot" -underline 0\
d1246 1
a1246 1
hoc_register_menu_data "Grid Spacing" "foot" "Grid Spacing - foot"\
d1250 1
a1250 1
.$id.menubar.settings.grid.spacing add command -label "yard" -underline 0\
d1252 1
a1252 1
hoc_register_menu_data "Grid Spacing" "yard" "Grid Spacing - yard"\
d1256 1
a1256 1
.$id.menubar.settings.grid.spacing add command -label "mile" -underline 0\
d1258 1
a1258 1
hoc_register_menu_data "Grid Spacing" "mile" "mile"\
d1269 1
a1269 1
.$id.menubar.settings.grid_spacing add command -label "Arbitrary..." -underline 1\
d1272 1
a1272 1
.$id.menubar.settings.grid_spacing add command -label "micrometer" -underline 4\
d1274 1
a1274 1
.$id.menubar.settings.grid_spacing add command -label "millimeter" -underline 2\
d1276 1
a1276 1
.$id.menubar.settings.grid_spacing add command -label "centimeter" -underline 0\
d1278 1
a1278 1
.$id.menubar.settings.grid_spacing add command -label "decimeter" -underline 0\
d1280 1
a1280 1
.$id.menubar.settings.grid_spacing add command -label "meter" -underline 0\
d1282 1
a1282 1
.$id.menubar.settings.grid_spacing add command -label "kilometer" -underline 0\
d1285 1
a1285 1
.$id.menubar.settings.grid_spacing add command -label "1/10 inch" -underline 0\
d1287 1
a1287 1
.$id.menubar.settings.grid_spacing add command -label "1/4 inch" -underline 2\
d1289 1
a1289 1
.$id.menubar.settings.grid_spacing add command -label "1/2 inch" -underline 2\
d1291 1
a1291 1
.$id.menubar.settings.grid_spacing add command -label "inch" -underline 0\
d1293 1
a1293 1
.$id.menubar.settings.grid_spacing add command -label "foot" -underline 0\
d1295 1
a1295 1
.$id.menubar.settings.grid_spacing add command -label "yard" -underline 0\
d1297 1
a1297 1
.$id.menubar.settings.grid_spacing add command -label "mile" -underline 0\
d1608 1
a1608 1
.$id.menubar.tools add command -label "ADC Control Panel..." -underline 0\
d1610 1
a1610 1
hoc_register_menu_data "Tools" "ADC Control Panel..." "ADC Control Panel"\
d1613 1
a1613 1
.$id.menubar.tools add command -label "Grid Control Panel..." -underline 0\
d1615 1
a1615 1
hoc_register_menu_data "Tools" "Grid Control Panel..." "Grid Control Panel"\
d1618 1
a1618 1
.$id.menubar.tools add command -label "Query Ray Control Panel..." -underline 0\
d1620 1
a1620 1
hoc_register_menu_data "Tools" "Query Ray Control Panel..." "Query Ray Control Panel"\
d1622 1
a1622 1
.$id.menubar.tools add command -label "Raytrace Control Panel..." -underline 0\
d1624 1
a1624 1
hoc_register_menu_data "Tools" "Raytrace Control Panel..." "Raytrace Control Panel"\
d1627 1
a1627 1
.$id.menubar.tools add command -label "AnimMate Control Panel..." -underline 1\
d1629 1
a1629 1
hoc_register_menu_data "Tools" "AnimMate Control Panel..." "AnimMate Control Panel"\
d1633 1
a1633 1
.$id.menubar.tools add command -label "Solid Editor..." -underline 0\
d1635 1
a1635 1
hoc_register_menu_data "Tools" "Solid Editor..." "Solid Editor"\
d1637 1
a1637 1
.$id.menubar.tools add command -label "Combination Editor..." -underline 0\
d1639 1
a1639 1
hoc_register_menu_data "Tools" "Combination Editor..." "Combination Editor"\
d1641 1
a1641 1
.$id.menubar.tools add command -label "Color Editor..." -underline 1\
d1645 2
a1646 6
hoc_register_menu_data "Tools" "Color Editor..." "Color Editor"\
	{ { summary "Tool for displaying colors." } }
#.$id.menubar.tools add separator
#.$id.menubar.tools add checkbutton -offvalue 0 -onvalue 1 -variable mged_gui($id,classic_buttons)\
#	-label "Classic Menu Tool..." -underline 0\
#	-command "toggle_button_menu $id"
d1662 4
a1665 4
.$id.menubar.help add command -label "Help on context..." -underline 0\
	-command "hoc_dialog .$id.menubar.help \"Help,Help on context...\""
hoc_register_menu_data "Help" "Help on context..." "Help on context"\
	{ { summary "The new GUI provides \"Help on Context\". This is always available via
d1671 1
a1671 1
.$id.menubar.help add command -label "Getting Started..." -underline 0\
d1673 1
a1673 1
hoc_register_menu_data "Help" "Getting Started..." "Getting Started"\
d1809 1
a1809 1
.$id.menubar.help add command -label "Commands..." -underline 0\
d1811 1
a1811 1
hoc_register_menu_data "Help" "Commands..." "Commands"\
d1814 1
a1814 1
.$id.menubar.help add command -label "Apropos..." -underline 1\
d1816 1
a1816 1
hoc_register_menu_data "Help" "Apropos..." "Apropos"\
d1857 2
a1858 2
.$id.menubar.help add command -label "Manual..." -underline 0 -command $web_cmd
hoc_register_menu_data "Help" "Manual..." "Manual"\
@


1.73
log
@*- add support for interlay
@
text
@d381 1
a381 1
.$id.menubar.file add command -label "Extract..." -underline 1 -command "init_extractTool $id"
d406 1
a406 1
.$id.menubar.file add command -label "Exit" -underline 0 -command _mged_quit
d431 1
a431 1
.$id.menubar.file.pref add cascade -label "Command Line Edit" -underline 0\
d435 1
a435 1
.$id.menubar.file.pref add command -label "Color Schemes..." -underline 6\
d686 1
a686 1
.$id.menubar.view add command -label "Rear" -underline 3\
d1576 1
a1576 1
	-variable mged_gui($id,forward_keys) -label "Keystroke Forwarding" -underline 8\
@


1.72
log
@Added DSP solid to "create" menu
@
text
@d1060 1
a1060 1
.$id.menubar.settings.fb add radiobutton -value 1 -variable mged_gui($id,fb_overlay)\
d1065 10
a1074 3
the framebuffer data is placed in the pane after
the geometry is drawn (i.e. the framebuffer data is
is drawn on top of the geometry)." }
d1081 3
a1083 3
the framebuffer data is placed in the pane before
the geometry is drawn (i.e. the geometry is drawn on
top of the framebuffer data)." }
@


1.71
log
@*- call font_scheme_init instead of font_gui_init
*- if necessary, search user's path for netscape
@
text
@d639 1
a639 1
    .$id.menubar.create.solid add command -label "$solid_type..."\
d644 1
a644 1
    hoc_register_menu_data "Make Solid" "$solid_type..." "Make a $solid_type" $ksl
d646 8
@


1.70
log
@*- code to access the "Named Font" editor
@
text
@d442 1
a442 1
	-command "font_gui_init $id"
a1816 6
} else {
# Failing that, use the browser specified by mged_default(web_browser)
    if [ file exists $mged_default(web_browser) ] {
	set web_cmd "exec $mged_default(web_browser) -display $screen\
		$mged_html_dir/index.html &"
    }
d1819 1
a1819 1
# When all else fails, attempt to locate a browser
d1821 22
a1842 12
    if [ file exists /usr/bin/netscape ] {
	set web_cmd "exec /usr/bin/netscape -display $screen\
		$mged_html_dir/index.html &"
    } elseif [ file exists /usr/local/bin/netscape ] {
	set web_cmd "exec /usr/local/bin/netscape -display $screen\
		$mged_html_dir/index.html &"
    } elseif [ file exists /usr/X11/bin/netscape ] {
	set web_cmd "exec /usr/X11/bin/netscape -display $screen\
		$mged_html_dir/index.html &"
    } else {
	# When all else fails use lame built-in browser
	set web_cmd "ia_man .$id $screen"
d2279 1
a2279 1
	label .sei$id.l -bg black -fg yellow -textvar edit_info -font fixed
@


1.69
log
@*- prepare to use fontnames, relevant code still commented out
@
text
@d120 3
a122 3
#if ![info exists mged_default(text_font)] {
#    mged_font_init
#}
d441 5
@


1.68
log
@*** empty log message ***
@
text
@d120 4
d1889 2
a1890 1
    text .$id.t -height $mged_gui($id,num_lines) -relief sunken -bd 2 -yscrollcommand ".$id.s set"
@


1.67
log
@*- add "Load Script..." to the File menu
@
text
@d2070 1
a2070 1
	.$id.menubar.file entryconfigure 11 -state disabled
d2074 1
a2074 1
	.$id.menubar.file entryconfigure 11 -state normal
d2112 1
a2112 1
	.$id.menubar.file entryconfigure 11 -state disabled
@


1.66
log
@*- use bu_brlcad_path to set mged_default(html_dir)
@
text
@d385 5
@


1.65
log
@*- typo
@
text
@d26 1
a26 5
    if [info exists env(BRLCAD_ROOT)] {
	set mged_default(html_dir) $env(BRLCAD_ROOT)/html/manuals/mged
    } else {
	set mged_default(html_dir) /usr/brlcad/html/manuals/mged
    }
@


1.64
log
@*- add Frame and Canvas class bindings for help on context
@
text
@d1602 1
a1602 1
.$id.menubar.tools add command -label "Animmate Control Panel..." -underline 1\
d1604 1
a1604 1
hoc_register_menu_data "Tools" "Animmate Control Panel..." "Animmate Control Panel"\
@


1.63
log
@*- add help on context for new Tool menu items
@
text
@d136 2
@


1.62
log
@*- add command window and geometry window to Tools menu;
	these menu entries simply raise the respective window
@
text
@d1625 1
a1625 1
.$id.menubar.tools add command -label "Command Window" -underline 0\
d1627 3
a1629 1
.$id.menubar.tools add command -label "Geometry Window" -underline 0\
d1631 2
@


1.61
log
@*- more updates to help on context
@
text
@d1624 5
@


1.60
log
@*- more updates of help on context
@
text
@d1525 1
a1525 1
outside this range, it is clipped (i.e. not drawn).
d1598 1
a1598 1
	{ { summary "Tool for raytracing the current view." }
d1827 5
a1831 4
is used. Otherwise, the existence of /usr/X11/bin/netscape is
checked. Failing that, the existence of /usr/X11/bin/Mosaic is
checked. If a browser has still not been located, the built in
Tcl browser is used." } }
@


1.59
log
@*- updates to help on context
@
text
@d1391 1
a1391 1
	{ { summary "Toggle drawing the rubber band while idle." }
d1424 1
a1424 1
edit the solid as well as view its contents.
d1448 5
@


1.58
log
@*- add the "Shift Grip" item to the help menu and
   associate it with pjt's shift grip write-up
@
text
@d822 1
a822 1
	{ { synopsis "Enter solid edit ray mode." }
d828 1
a828 1
is hit. The user must then fire another ray to continue selecting
d836 1
a836 1
\t\t2\t\tFire solid edit ray
d843 1
a843 1
	{ { synopsis "Enter matrix edit ray mode." }
d848 1
a848 1
If no solids were hit, a dialog is popped up saying that nothing is hit.
d861 1
a861 1
\t\t2\t\tFire matrix edit ray
d868 1
a868 1
	{ { synopsis "Enter combination edit ray mode." }
d873 1
a873 1
If no combinations were hit, a dialog is popped up saying that nothing is hit.
d883 1
a883 1
\t\t2\t\tFire combination edit ray
d891 1
a891 1
	{ { synopsis "Enter raytrace rectangle mode." }
d894 1
a894 1
also painted with the contents of the framebuffer. Otherwise,
d898 1
a898 1
\t\t2\t\tDraw raytrace rectangle
d905 2
a906 2
	{ { synopsis "Enter raytrace-object mode." }
          { description "Pick an object for raytracing or for adding to the\
d927 1
a927 1
	{ { synopsis "Enter paint rectangle mode." }
d929 1
a929 1
as specified by the user is painted with the contents of the
d940 1
a940 1
	{ { synopsis "Enter zoom rectangle mode." }
d942 1
a942 1
to zoom the view. Note - as the user stretches out the rubber band
d1340 3
a1342 3
hoc_register_menu_data "Transform" "Object Params" "Transform - Object Params"\
	{ { summary "Set the transform mode to OBJECT PARAMS. When in OBJECT PARAMS
mode, the mouse can be used to transform the object parameters." }
d1643 1
a1643 1
previous versions of MGED, that is by prompting the user to select
d1675 6
a1680 5
        The new GUI also provides \"Help on Context\". This is always available
via the right mouse button (i.e. button 3). The user can right mouse click on
some feature of the GUI and a message window pops up with information about the
feature. This behavior works everywhere except in the drawing panes (i.e. display
manager windows) where a right mouse button is bound to \"zoom 2.0\".
d1682 12
a1693 12
access to its underlying power. The single greatest improvement to MGED was
adopting the use of Tcl/Tk. Tcl (tool command language) is an interpreted command
language that can be imbedded into an application providing the application with
an interpreter as well as a built-in command language. Tk is an extension to Tcl
for building GUI's. Incorporating Tcl/Tk into MGED gives the user the ability to
develop their own commands and GUI's. Other new features are: command line editing
similar to tcsh, multiple display managers opened simultaneously, shareable
resources among display managers, view axes, model axes, edit axes, rubber banding
for zoom or raytracing, support for color schemes, frame buffer support for display
managers, snap to grid for accuracy with the mouse, query rays for interrogating the
geometry, and improved solid/object/combination selection from among displayed
geometry." } }
d1884 1
a1884 1
against the database) before passing the line to MGED's
d1892 3
a1894 3
as text scrolling. The default bindings are similar to
those found in typical X Window applications such as xterm.
For example:
d1897 1
@


1.57
log
@*- a little cleaning
@
text
@d1693 78
@


1.56
log
@*- mods to set_mouse_behavior to consider the specific
   cases 'r' and 'o'.
@
text
@a2284 2
	    #		update
	    #		setmv $id
@


1.55
log
@*- mods to code that looks for the MGED manual
*- mods to code that decides what web browser to use
@
text
@d1390 1
a1390 1
hoc_register_menu_data "Modes" "Persistent Rubber Band" "Persistent Rubber Band"\
d2663 19
@


1.54
log
@*- add set_mouse_behavior proc
@
text
@d25 8
d36 5
a40 1
        set mged_html_dir [lindex $auto_path 0]/../html/mged
d60 1
d72 2
a73 2
if ![info exists mged_default(multi_view)] {
    set mged_default(multi_view) 0
d80 4
a83 4
if ![info exists mged_default(display)] {
    if [info exists env(DISPLAY)] {
	set mged_default(display) $env(DISPLAY)
    } else {
a84 1
	set env(DISPLAY) :0
d89 5
a93 5
    if [info exists env(DISPLAY)] {
	set mged_default(gdisplay) $env(DISPLAY)
    } else {
	set mged_default(gdisplay) :0
    }
d96 2
a97 2
if ![info exists mged_default(dt)] {
    set mged_default(dt) [dm_bestXType $mged_default(gdisplay)]
d154 1
a154 1
    set dtype $mged_default(dt)
d298 1
a298 1
set mged_gui($id,multi_view) $mged_default(multi_view)
d1408 1
a1408 1
.$id.menubar.modes add checkbutton -offvalue 0 -onvalue 1 -variable mged_gui($id,multi_view)\
d1705 2
d1709 2
a1710 1
	set web_cmd "exec $env(WEB_BROWSER) -display $screen $mged_html_dir/index.html &"
d1712 6
d1720 1
a1720 1
# Minimal attempt to locate a browser
d1722 9
a1730 4
    if [ file exists /usr/X11/bin/netscape ] {
	set web_cmd "exec /usr/X11/bin/netscape -display $screen $mged_html_dir/index.html &"
    } elseif [ file exists /usr/X11/bin/Mosaic ] {
	set web_cmd "exec /usr/X11/bin/Mosaic -display $screen $mged_html_dir/index.html &"
d1732 1
d1736 1
a1960 1
    # Position command window in upper left corner
d2002 1
a2002 1
    set mged_gui($id,multi_view) 0
d2227 1
a2227 1
    if {!$mged_gui($id,multi_view)} {
@


1.53
log
@*- mods to "Getting Started" help message
@
text
@d795 1
a795 1
	-command "mged_apply $id \"set mouse_behavior \$mged_gui($id,mouse_behavior); refresh\""
d808 1
a808 1
	-command "mged_apply $id \"set mouse_behavior \$mged_gui($id,mouse_behavior); refresh\""
d829 1
a829 1
	-command "mged_apply $id \"set mouse_behavior \$mged_gui($id,mouse_behavior); refresh\""
d854 1
a854 1
	-command "mged_apply $id \"set mouse_behavior \$mged_gui($id,mouse_behavior); refresh\""
d877 1
a877 1
	-command "mged_apply $id \"set mouse_behavior \$mged_gui($id,mouse_behavior); refresh\""
d891 1
a891 1
	-command "mged_apply $id \"set mouse_behavior \$mged_gui($id,mouse_behavior); refresh\""
d900 1
a900 1
	-command "mged_apply $id \"set mouse_behavior \$mged_gui($id,mouse_behavior); refresh\""
d913 1
a913 1
	-command "mged_apply $id \"set mouse_behavior \$mged_gui($id,mouse_behavior); refresh\""
d926 1
a926 1
	-command "mged_apply $id \"set mouse_behavior \$mged_gui($id,mouse_behavior); refresh\""
a2613 1
    global listen
d2629 8
a2636 1
    update_Raytrace $id
@


1.52
log
@*- mods to "Mouse Behavior" sub-menu
*- added "Help on context" entry to the "Help" menu
*- mods to set_fb
@
text
@d72 1
a137 4
    if {$mged_default(dt) == ""} {
	set mged_default(dt) [dm_bestXType $mged_default(gdisplay)]
    }

d1630 32
a1661 27
{ description "The -c (Classic MGED) option causes MGED to start in the usual way, that is by
prompting the user to select a display manager to attach and to remain attached to the tty.
Without this option MGED will detach itself from the tty and bring up the new GUI. The -d option
provides a way to specify a display string. This string is expected to be in the same format
as the X DISPLAY environment variable. The -h option causes the help message to print out.
The -r option causes the database to be read-only (i.e. no editing allowed). The -x and -X
options provide a way for the user to specify the debug level of librt and libbu, respectively.
Note that if MGED is started by redirecting stdin or stdout, MGED will not enter interactive
mode. Similarly, if MGED is started with a command, that command will be executed and MGED
will exit.
        If the user starts MGED in \"Classic\" mode, the new GUI is still available. See the \"gui\"
command. There can be many instances of the GUI running at the same time. Each instance of the GUI
owns four display manager windows (panes) and by default each of these panes has its view initialized
as follows:

\t\t\tPane\t\tAzimuth and Elevation
\t\t\tupper left\t\t0 90
\t\t\tupper right\t\t35 25
\t\t\tlower left\t\t0 0
\t\t\tlower right\t\t90 0.

All four panes can be displayed simultaneously, or a single large pane containing the active pane
can be displayed (look in the \"Modes\" menu). The active pane is the pane that is controlled by the
GUI. The active pane can be changed from the \"Settings\" menu, or by certain key or mouse button
actions. Essentially, any key sequence or mouse button action that will pop up an MGED menu in the
pane will cause the active pane to move to the pane wherein this action occurred. For example, alt-f
will pop up the file menu and make this pane the active pane. Similarly, alt-Button1 will pop up the
d1663 17
a1679 14
        The new GUI also provides \"Help on Context\". This is always available via the right mouse
button (i.e. button 3). The user can right mouse click on some feature of the GUI and a message window
pops up with information about the feature. This behavior works everywhere except in the drawing
panes (i.e. display manager windows) where a right mouse button is bound to \"zoom 2.0\".
        There are many new features and improvements in MGED providing greater access to its
underlying power. The single greatest improvement to MGED was adopting the use of Tcl/Tk. Tcl (tool
command language) is an interpreted command language that can be imbedded into an application
providing the application with an interpreter as well as a built-in command language. Tk is an
extension to Tcl for building GUI's. Incorporating Tcl/Tk into MGED gives the user the ability to
develop their own commands and GUI's. Other new features are: command line editing similar to tcsh,
multiple display managers opened simultaneously, shareable resources among display managers, view
axes, model axes, edit axes, rubber banding for zoom or raytracing, support for color schemes, frame
buffer support for display managers, snap to grid for accuracy with the mouse, query rays for
interrogating the geometry, and improved solid/object/combination selection from among displayed
@


1.51
log
@*- add info in mged_default(dm_key_bindings) to the help
   on context for the drawing panes
*- add "Getting Started" menu button
@
text
@d808 1
a808 54
.$id.menubar.settings.mouse_behavior add radiobutton -value p -variable mged_gui($id,mouse_behavior)\
	-label "Paint Rectangle Area" -underline 0\
	-command "mged_apply $id \"set mouse_behavior \$mged_gui($id,mouse_behavior); refresh\""
hoc_register_menu_data "Mouse Behavior" "Paint Rectangle Area" "Paint Rectangle Area"\
	{ { synopsis "Enter paint rectangle mode." }
          { description "If the framebuffer is active, the rectangular area
as specified by the user is painted with the contents of the
framebuffer. Otherwise, only the rectangle is drawn.\n
\tMouse Button\t\t\tBehavior
\t\t1\t\tZoom out by a factor of 2
\t\t2\t\tDraw paint rectangle
\t\t3\t\tZoom in by a factor of 2" }
          { see_also "rset, vars" } }
.$id.menubar.settings.mouse_behavior add radiobutton -value r -variable mged_gui($id,mouse_behavior)\
	-label "Raytrace Rectangle Area" -underline 0\
	-command "mged_apply $id \"set mouse_behavior \$mged_gui($id,mouse_behavior); refresh\""
hoc_register_menu_data "Mouse Behavior" "Raytrace Rectangle Area" "Raytrace Rectangle Area"\
	{ { synopsis "Enter raytrace rectangle mode." }
          { description "If the framebuffer is active, the rectangular area as
specified by the user is raytraced. The rectangular area is
also painted with the contents of the framebuffer. Otherwise,
only the rectangle is drawn.\n
\tMouse Button\t\t\tBehavior
\t\t1\t\tZoom out by a factor of 2
\t\t2\t\tDraw raytrace rectangle
\t\t3\t\tZoom in by a factor of 2" }
          { see_also "rset, vars" } }
.$id.menubar.settings.mouse_behavior add radiobutton -value z -variable mged_gui($id,mouse_behavior)\
	-label "Zoom Rectangle Area" -underline 0\
	-command "mged_apply $id \"set mouse_behavior \$mged_gui($id,mouse_behavior); refresh\""
hoc_register_menu_data "Mouse Behavior" "Zoom Rectangle Area" "Zoom Rectangle Area"\
	{ { synopsis "Enter zoom rectangle mode." }
          { description "The rectangular area as specified by the user is used
to zoom the view. Note - as the user stretches out the rubber band
rectangle, the rectangle is constrained to be the same shape as the
window. This insures that the user gets what he or she sees.\n
\tMouse Button\t\t\tBehavior
\t\t1\t\tZoom out by a factor of 2
\t\t2\t\tDraw zoom rectangle
\t\t3\t\tZoom in by a factor of 2" }
          { see_also "rset, vars" } }
.$id.menubar.settings.mouse_behavior add radiobutton -value q -variable mged_gui($id,mouse_behavior)\
	-label "Query Ray" -underline 0\
	-command "mged_apply $id \"set mouse_behavior \$mged_gui($id,mouse_behavior); refresh\""
hoc_register_menu_data "Mouse Behavior" "Query Ray" "Query Ray"\
	{ { synopsis "Enter query ray mode." }
          { description "In this mode, the mouse is used to fire rays. The data
from the fired rays can be viewed textually, graphically
or both.\n
\tMouse Button\t\t\tBehavior
\t\t1\t\tZoom out by a factor of 2
\t\t2\t\tFire query ray
\t\t3\t\tZoom in by a factor of 2" }
          { see_also "nirt, qray, rset, vars" } }
d810 1
a810 1
	-label "Solid Edit Ray" -underline 0\
d812 1
a812 1
hoc_register_menu_data "Mouse Behavior" "Solid Edit Ray" "Solid Edit Ray"\
d831 1
a831 1
	-label "Matrix Edit Ray" -underline 0\
d833 1
a833 1
hoc_register_menu_data "Mouse Behavior" "Matrix Edit Ray" "Matrix Edit Ray"\
d856 1
a856 1
	-label "Combination Edit Ray" -underline 0\
d858 1
a858 1
hoc_register_menu_data "Mouse Behavior" "Combination Edit Ray" "Combination Edit Ray"\
d877 64
d1052 1
a1052 1
	-command "set_fb $id; update_Raytrace $id"
d1361 1
a1361 1
	-command "set_fb $id; update_Raytrace $id"
d1379 1
a1379 1
	-label "Persistent Rubber Band" -underline 0\
d1612 1
a1612 1
.$id.menubar.help add command -label "About" -underline 0\
d1614 1
a1614 1
hoc_register_menu_data "Help" "About" "About MGED"\
d1616 9
d1630 1
a1630 1
hoc_register_menu_data "Help" "Getting Started Document" "Getting Started Document"\
a2211 3
    # update raytrace control panel
    update_Raytrace $id

d2623 3
@


1.50
log
@*- provide menu access to the F[1-9] keys
@
text
@d125 1
d957 7
d968 9
a976 5
hoc_register_menu_data "Active Pane" "Upper Left" "Active Pane - Upper Left"\
	{ { summary "Set the active pane to be the upper left pane.
Any interaction with the GUI that affects a pane
(display manager) will be directed at the upper
left pane." } }
d980 9
a988 5
hoc_register_menu_data "Active Pane" "Upper Right" "Active Pane - Upper Right"\
	{ { summary "Set the active pane to be the upper right pane.
Any interaction with the GUI that affects a pane
(display manager) will be directed at the upper
right pane." } }
d992 9
a1000 5
hoc_register_menu_data "Active Pane" "Lower Left" "Active Pane - Lower Left"\
	{ { summary "Set the active pane to be the lower left pane.
Any interaction with the GUI that affects a pane
(display manager) will be directed at the lower
left pane." } }
d1004 1
a1004 5
hoc_register_menu_data "Active Pane" "Lower Right" "Active Pane - Lower Right"\
	{ { summary "Set the active pane to be the lower right pane.
Any interaction with the GUI that affects a pane
(geometry window) will be directed at the lower
right pane." } }
d1425 3
d1605 51
@


1.49
log
@*- remove jcs, pcs and qcs
*- mods to use collaborate command
@
text
@d36 1
a36 1
    set mged_players ""
d40 1
a40 1
    set mged_collaborators ""
d290 1
d352 1
d1473 63
d1927 1
d1940 2
d1962 10
@


1.48
log
@*- add "animmate" entry to the tools menu
@
text
@d1734 1
a1734 1
    jcs $id
d1812 1
a1812 1
	qcs $id
a1985 62
}

# Join Mged Collaborative Session
proc jcs { id } {
    global mged_gui
    global mged_collaborators
    global mged_players

    if { [lsearch -exact $mged_players $id] == -1 } {
	return "jcs: $id is not listed as an mged_player"
    }

    if { [lsearch -exact $mged_collaborators $id] != -1 } {
	return "jcs: $id is already in the collaborative session"
    }

    if [winfo exists $mged_gui($id,active_dm)] {
	set nw $mged_gui($id,top).ur
    } else {
	return "jcs: unrecognized pathname - $mged_gui($id,active_dm)"
    }

    if [llength $mged_collaborators] {
	set cid [lindex $mged_collaborators 0]
	if [winfo exists $mged_gui($cid,top).ur] {
	    set ow $mged_gui($cid,top).ur
	} else {
	    return "jcs: me thinks the session is corrupted"
	}

	catch { share view $ow $nw }
	reconfig_gui_default $id
    }

    lappend mged_collaborators $id
}

# Quit Mged Collaborative Session
proc qcs { id } {
    global mged_collaborators
    global mged_gui

    set i [lsearch -exact $mged_collaborators $id]
    if { $i == -1 } {
	return "qcs: bad id - $id"
    }

    if [winfo exists $mged_gui($id,active_dm)] {
	set w $mged_gui($id,active_dm)
    } else {
	return "qcs: unrecognized pathname - $mged_gui($id,active_dm)"
    }

    catch {share -u view $w}
    set mged_collaborators [lreplace $mged_collaborators $i $i]
}

# Print Collaborative Session participants
proc pcs {} {
    global mged_collaborators

    return $mged_collaborators
@


1.47
log
@*- use cmd_win instead of cmd_get, cmd_set etc.
*- more cleanup
@
text
@d1491 5
@


1.46
log
@add variables, redo geometry management of display managers, cleanup
@
text
@d141 1
a141 1
    set save_id [lindex [cmd_get] 2]
d1720 3
a1722 2
cmd_init $id
tie $id $mged_gui($id,active_dm)
d1737 1
a1737 1
cmd_set $save_id
d1806 1
a1806 5
    set i [lsearch -exact $mged_collaborators $id]
    if { $i != -1 } {
	cmd_set $id
	set cmd_list [cmd_get]
	set shared_id [lindex $cmd_list 1]
a1807 3
	if {"$mged_gui($id,top).ur" == "$shared_id"} {
	    reconfig_all_gui_default
	}
d1814 1
a1814 1
    catch { cmd_close $id }
d1829 5
a1833 3
    cmd_set $id
    set cmd_list [cmd_get]
    set shared_id [lindex $cmd_list 1]
d1835 2
a1836 2
    .$id.status.cent configure -textvar mged_display($shared_id,center)
    .$id.status.size configure -textvar mged_display($shared_id,size)
d1839 2
a1840 2
    .$id.status.aet configure -textvar mged_display($shared_id,aet)
    .$id.status.ang configure -textvar mged_display($shared_id,ang)
a2051 23
proc tie args {
    if { [llength $args] == 2 } {
	if {[lindex $args 0] == "-u"} {
	    set i 1
	} else {
	    set i 0
	}

	if ![winfo exists .[lindex $args $i]] {
	    return
	}
    }

    set result [eval _mged_tie $args]
    
    if { [llength $args] == 2 } {
	reconfig_gui_default [lindex $args $i]
    }

    return $result
}


d2081 2
a2082 1
    tie $id $mged_gui($id,active_dm)
a2463 1
    set id [lindex [cmd_get] 2]
d2465 1
d2467 13
a2479 1
	if {[info exists mged_gui($id,active_dm)]} {
d2483 1
a2483 3
	if {$transform == "a"} {
	    default_mouse_bindings [winset]
	}
@


1.45
log
@*- cleanup variables
@
text
@d43 8
d59 2
a60 2
if ![info exists mged_default(mvmode)] {
    set mged_default(mvmode) 0
d280 1
d288 2
a318 4
    set mged_gui($id,win_size_big) [expr [winfo screenheight $mged_gui($id,dmc)] - 130]
    set mged_gui($id,win_size_small) [expr $mged_gui($id,win_size_big) - 80]
    set mged_gui($id,win_size) $mged_gui($id,win_size_big)
    set mv_size [expr $mged_gui($id,win_size) / 2 - 4]
d320 1
a320 1
    if [catch { openmv $id $mged_gui($id,top) $mged_gui($id,dmc) $screen $dtype $mv_size } result] {
d329 2
a330 5
    set mged_gui($id,win_size_big) [expr [winfo screenheight $mged_gui($id,dmc)] - 24]
    set mged_gui($id,win_size_small) [expr $mged_gui($id,win_size_big) - 100]
    set mged_gui($id,win_size) $mged_gui($id,win_size_big)
    set mv_size [expr $mged_gui($id,win_size) / 2 - 4]
    if [catch { openmv $id $mged_gui($id,top) $mged_gui($id,dmc) $gscreen $dtype $mv_size } result] {
a336 6
set vloc [string range $mged_default(pane) 0 0]
set hloc [string range $mged_default(pane) 1 1]
set mged_gui($id,small_dmc) $mged_gui($id,dmc).$vloc.$hloc
set mged_gui($id,dm_loc) $mged_default(pane)
set mged_gui($id,save_dm_loc) $mged_gui($id,dm_loc)
set mged_gui($id,save_small_dmc) $mged_gui($id,small_dmc)
d1667 2
a1668 3
grid $mged_gui($id,active_dm) -in $mged_gui($id,dmc) -sticky "nsew" -row 0 -column 0

set mged_gui($id,multi_view) $mged_default(mvmode)
a1677 1
grid columnconfigure .$id.tf 1 -weight 0
a1685 5
grid columnconfigure .$id.status.dpy 0 -weight 0
grid columnconfigure .$id.status.dpy 1 -weight 0
grid columnconfigure .$id.status.dpy 2 -weight 0
grid columnconfigure .$id.status.dpy 3 -weight 0
grid columnconfigure .$id.status.dpy 4 -weight 0
a1686 1
grid rowconfigure .$id.status.dpy 0 -weight 0
a1688 1
grid columnconfigure .$id.status.illum 0 -weight 0
a1689 1
grid rowconfigure .$id.status.illum 0 -weight 0
a1691 3
grid rowconfigure .$id.status 0 -weight 0
grid rowconfigure .$id.status 1 -weight 0
grid rowconfigure .$id.status 2 -weight 0
d1699 1
a1700 2
    grid rowconfigure .$id 1 -weight 0
    grid rowconfigure .$id 2 -weight 0
d1702 1
a1702 1
    grid rowconfigure .$id 0 -weight 0
a1703 1
    grid rowconfigure .$id 2 -weight 0
a1720 1
setupmv $id
a1743 1
bind $mged_gui($id,dmc) <Configure> "setmv $id"
d1751 8
a1759 4
wm geometry $mged_gui($id,top) -0+0
#set width [winfo screenwidth $mged_gui($id,top)]
#set height [winfo screenheight $mged_gui($id,top)]
#wm geometry $mged_gui($id,top) $width\x$height+8+40
d1768 1
a1768 1
    wm geometry .$id +8+32
a2083 2
    set vloc [string range $mged_gui($id,dm_loc) 0 0]
    set hloc [string range $mged_gui($id,dm_loc) 1 1]
a2097 1
    set mged_gui($id,small_dmc) $mged_gui($id,dmc).$vloc.$hloc
a2110 10
# unpack previously active dm
	grid forget $mged_gui($id,top).$mged_gui($id,save_dm_loc)

# resize and repack previously active dm into smaller frame
	winset $mged_gui($id,top).$mged_gui($id,save_dm_loc)
	set mv_size [expr $mged_gui($id,win_size) / 2 - 4]
	dm size $mv_size $mv_size

	grid $mged_gui($id,top).$mged_gui($id,save_dm_loc) -in $mged_gui($id,save_small_dmc) -sticky "nsew"

a2112 2
    set mged_gui($id,save_dm_loc) $mged_gui($id,dm_loc)
    set mged_gui($id,save_small_dmc) $mged_gui($id,small_dmc)
@


1.44
log
@*- add "Display Lists" to modes menu
@
text
@a34 4
if ![info exists use_grid_gm] {
    set use_grid_gm 1
}

d43 2
a44 2
if ![info exists mged_default_id] {
    set mged_default_id "id"
d47 2
a48 2
if ![info exists mged_default_pane] {
    set mged_default_pane "ur"
d51 2
a52 2
if ![info exists mged_default_mvmode] {
    set mged_default_mvmode 0
d55 2
a56 2
if ![info exists mged_default_config] {
    set mged_default_config g
d59 1
a59 1
if ![info exists mged_default_display] {
d61 1
a61 1
	set mged_default_display $env(DISPLAY)
d63 1
a63 1
	set mged_default_display :0
d67 1
a67 1
if ![info exists mged_default_gdisplay] {
d69 1
a69 1
	set mged_default_gdisplay $env(DISPLAY)
d71 1
a71 1
	set mged_default_gdisplay :0
d75 2
a76 2
if ![info exists mged_default_dt] {
    set mged_default_dt [dm_bestXType $mged_default_gdisplay]
d79 2
a80 2
if ![info exists mged_default_comb] {
    set mged_default_comb 0
d83 2
a84 2
if ![info exists mged_default_edit_style] {
    set mged_default_edit_style emacs
d87 2
a88 2
if ![info exists mged_default_num_lines] {
    set mged_default_num_lines 10
d91 2
a92 2
if ![info exists player_screen(mged)] {
    set player_screen(mged) $mged_default_display
d95 3
a97 2
# specify whether or not to use menus that can be torn off
set do_tearoffs 0
d103 1
d116 3
a118 13
proc gui_create_default { args } {
    global moveView
    global player_screen
    global mged_default_id
    global mged_default_dt
    global mged_default_pane
    global mged_default_mvmode
    global mged_default_config
    global mged_default_display
    global mged_default_gdisplay
    global mged_default_comb
    global mged_default_edit_style
    global mged_default_num_lines
a122 30
    global mged_use_air
    global mged_listen
    global mged_fb
    global mged_fb_all
    global mged_fb_overlay
    global mged_rubber_band
    global mged_grid
    global mged_mouse_behavior
    global mged_qray_effects
    global mged_coords
    global mged_rotate_about
    global mged_transform
    global mged_rateknobs
    global mged_adc_draw
    global mged_axes
    global mged_apply_to
    global mged_apply_list
    global mged_edit_style
    global mged_top
    global mged_dmc
    global mged_active_dm
    global mged_small_dmc
    global mged_dm_loc
    global mged_num_lines
    global save_small_dmc
    global save_dm_loc
    global ia_cmd_prefix
    global ia_more_default
    global ia_font
    global ia_illum_label
a123 7
    global edit_info_pos
    global show_edit_info
    global mged_multi_view
    global win_size
    global mged_show_cmd
    global mged_show_dm
    global mged_show_status
d125 1
a125 12
    global do_tearoffs
    global freshline
    global scratchline
    global vi_overwrite_flag
    global vi_change_flag
    global vi_delete_flag
    global vi_search_flag
    global vi_search_char
    global vi_search_dir
    global dm_insert_char_flag
    global mged_comb
    global use_grid_gm
d128 2
a129 2
    if {$mged_default_dt == ""} {
	set mged_default_dt [dm_bestXType $mged_default_gdisplay]
d134 1
a134 1
    set comb $mged_default_comb
d136 1
a136 1
    set dtype $mged_default_dt
d142 2
a143 2
    set screen $mged_default_display
    set gscreen $mged_default_gdisplay
d145 1
a145 1
    if {$mged_default_config == "b"} {
d148 1
a148 1
    } elseif {$mged_default_config == "c"} {
d151 1
a151 1
    } elseif {$mged_default_config == "g"} {
d170 1
a170 1
	    return [help gui_create_default]
d186 1
a186 1
	    return [help gui_create_default]
d193 1
a193 1
	    return [help gui_create_default]
d210 1
a210 1
	    return [help gui_create_default]
d226 1
a226 1
	    return [help gui_create_default]
d235 1
a235 1
	    return [help gui_create_default]
d242 1
a242 1
	return [help gui_create_default]
d248 1
a248 1
	return [help gui_create_default]
d257 1
a257 1
    return "gui_create_default: not allowed to use \"mged\" as id"
d262 1
a262 1
	set id [subst $mged_default_id]_$i
d272 7
a278 7
set mged_comb($id) $comb
set mged_show_cmd($id) $scw
set mged_show_dm($id) $sgw
set mged_show_status($id) 1
set mged_apply_to($id) 0
set edit_info_pos($id) "+0+0"
set mged_num_lines($id) $mged_default_num_lines
d281 1
a281 1
    return "gui_create_default: $gscreen does not support $dtype"
d298 1
a298 1
set player_screen($id) $screen
d304 2
a305 2
    set mged_top($id) .$id
    set mged_dmc($id) .$id.dmf
d307 5
a311 5
    frame $mged_dmc($id) -relief sunken -borderwidth 2
    set win_size($id,big) [expr [winfo screenheight $mged_dmc($id)] - 130]
    set win_size($id,small) [expr $win_size($id,big) - 80]
    set win_size($id) $win_size($id,big)
    set mv_size [expr $win_size($id) / 2 - 4]
d313 2
a314 2
    if [catch { openmv $id $mged_top($id) $mged_dmc($id) $screen $dtype $mv_size } result] {
	gui_destroy_default $id
d318 2
a319 2
    set mged_top($id) .top$id
    set mged_dmc($id) $mged_top($id)
d321 7
a327 7
    toplevel $mged_dmc($id) -screen $gscreen -relief sunken -borderwidth 2
    set win_size($id,big) [expr [winfo screenheight $mged_dmc($id)] - 24]
    set win_size($id,small) [expr $win_size($id,big) - 100]
    set win_size($id) $win_size($id,big)
    set mv_size [expr $win_size($id) / 2 - 4]
    if [catch { openmv $id $mged_top($id) $mged_dmc($id) $gscreen $dtype $mv_size } result] {
	gui_destroy_default $id
d332 8
a339 8
set mged_active_dm($id) $mged_top($id).$mged_default_pane
set vloc [string range $mged_default_pane 0 0]
set hloc [string range $mged_default_pane 1 1]
set mged_small_dmc($id) $mged_dmc($id).$vloc.$hloc
set mged_dm_loc($id) $mged_default_pane
set save_dm_loc($id) $mged_dm_loc($id)
set save_small_dmc($id) $mged_small_dmc($id)
set mged_apply_list($id) $mged_active_dm($id)
d345 1
a345 1
menu .$id.menubar -tearoff $do_tearoffs
d356 1
a356 1
menu .$id.menubar.file -title "File" -tearoff $do_tearoffs
d385 1
a385 1
.$id.menubar.file add command -label "Close" -underline 0 -command "gui_destroy_default $id"
d394 1
a394 1
menu .$id.menubar.file.saveview -title "Save View As" -tearoff $do_tearoffs
d411 1
a411 1
menu .$id.menubar.file.pref -title "Preferences" -tearoff $do_tearoffs
d425 1
a425 1
menu .$id.menubar.file.pref.units -title "Units" -tearoff $do_tearoffs
d473 2
a474 2
menu .$id.menubar.file.pref.cle -title "Command Line Edit" -tearoff $do_tearoffs
.$id.menubar.file.pref.cle add radiobutton -value emacs -variable mged_edit_style($id)\
d501 1
a501 1
.$id.menubar.file.pref.cle add radiobutton -value vi -variable mged_edit_style($id)\
d564 1
a564 1
menu .$id.menubar.file.pref.special_chars -title "Special Characters" -tearoff $do_tearoffs
d580 1
a580 1
menu .$id.menubar.edit -title "Edit" -tearoff $do_tearoffs
d582 1
a582 1
	-command "winset \$mged_active_dm($id); build_edit_menu_all s"
d586 1
a586 1
	-command "winset \$mged_active_dm($id); build_edit_menu_all o"
d600 1
a600 1
menu .$id.menubar.create -title "Create" -tearoff $do_tearoffs
d614 1
a614 1
menu .$id.menubar.create.solid -title "Make Solid" -tearoff $do_tearoffs
d625 1
a625 1
menu .$id.menubar.view -title "View" -tearoff $do_tearoffs
d707 1
a707 1
menu .$id.menubar.viewring -title "ViewRing" -tearoff $do_tearoffs
d735 1
a735 1
menu .$id.menubar.viewring.select -title "Select View" -tearoff $do_tearoffs\
d739 1
a739 1
menu .$id.menubar.viewring.delete -title "Delete View" -tearoff $do_tearoffs\
d743 1
a743 1
menu .$id.menubar.settings -title "Settings" -tearoff $do_tearoffs
d769 2
a770 2
menu .$id.menubar.settings.applyTo -title "Apply To" -tearoff $do_tearoffs
.$id.menubar.settings.applyTo add radiobutton -value 0 -variable mged_apply_to($id)\
d775 1
a775 1
.$id.menubar.settings.applyTo add radiobutton -value 1 -variable mged_apply_to($id)\
d781 1
a781 1
.$id.menubar.settings.applyTo add radiobutton -value 2 -variable mged_apply_to($id)\
d786 1
a786 1
listed in the Tcl variable mged_apply_list(id)
d788 1
a788 1
.$id.menubar.settings.applyTo add radiobutton -value 3 -variable mged_apply_to($id)\
d794 2
a795 2
menu .$id.menubar.settings.mouse_behavior -title "Mouse Behavior" -tearoff $do_tearoffs
.$id.menubar.settings.mouse_behavior add radiobutton -value d -variable mged_mouse_behavior($id)\
d797 1
a797 1
	-command "mged_apply $id \"set mouse_behavior \$mged_mouse_behavior($id); refresh\""
d807 1
a807 1
.$id.menubar.settings.mouse_behavior add radiobutton -value p -variable mged_mouse_behavior($id)\
d809 1
a809 1
	-command "mged_apply $id \"set mouse_behavior \$mged_mouse_behavior($id); refresh\""
d820 1
a820 1
.$id.menubar.settings.mouse_behavior add radiobutton -value r -variable mged_mouse_behavior($id)\
d822 1
a822 1
	-command "mged_apply $id \"set mouse_behavior \$mged_mouse_behavior($id); refresh\""
d834 1
a834 1
.$id.menubar.settings.mouse_behavior add radiobutton -value z -variable mged_mouse_behavior($id)\
d836 1
a836 1
	-command "mged_apply $id \"set mouse_behavior \$mged_mouse_behavior($id); refresh\""
d848 1
a848 1
.$id.menubar.settings.mouse_behavior add radiobutton -value q -variable mged_mouse_behavior($id)\
d850 1
a850 1
	-command "mged_apply $id \"set mouse_behavior \$mged_mouse_behavior($id); refresh\""
d861 1
a861 1
.$id.menubar.settings.mouse_behavior add radiobutton -value s -variable mged_mouse_behavior($id)\
d863 1
a863 1
	-command "mged_apply $id \"set mouse_behavior \$mged_mouse_behavior($id); refresh\""
d882 1
a882 1
.$id.menubar.settings.mouse_behavior add radiobutton -value m -variable mged_mouse_behavior($id)\
d884 1
a884 1
	-command "mged_apply $id \"set mouse_behavior \$mged_mouse_behavior($id); refresh\""
d907 1
a907 1
.$id.menubar.settings.mouse_behavior add radiobutton -value c -variable mged_mouse_behavior($id)\
d909 1
a909 1
	-command "mged_apply $id \"set mouse_behavior \$mged_mouse_behavior($id); refresh\""
d930 2
a931 2
menu .$id.menubar.settings.qray -title "Query Ray Effects" -tearoff $do_tearoffs
.$id.menubar.settings.qray add radiobutton -value t -variable mged_qray_effects($id)\
d933 1
a933 1
	-command "mged_apply $id \"qray effects \$mged_qray_effects($id)\""
d939 1
a939 1
.$id.menubar.settings.qray add radiobutton -value g -variable mged_qray_effects($id)\
d941 1
a941 1
	-command "mged_apply $id \"qray effects \$mged_qray_effects($id)\""
d947 1
a947 1
.$id.menubar.settings.qray add radiobutton -value b -variable mged_qray_effects($id)\
d949 1
a949 1
	-command "mged_apply $id \"qray effects \$mged_qray_effects($id)\""
d956 2
a957 2
menu .$id.menubar.settings.mpane -title "Active Pane" -tearoff $do_tearoffs
.$id.menubar.settings.mpane add radiobutton -value ul -variable mged_dm_loc($id)\
d965 1
a965 1
.$id.menubar.settings.mpane add radiobutton -value ur -variable mged_dm_loc($id)\
d973 1
a973 1
.$id.menubar.settings.mpane add radiobutton -value ll -variable mged_dm_loc($id)\
d981 1
a981 1
.$id.menubar.settings.mpane add radiobutton -value lr -variable mged_dm_loc($id)\
d990 2
a991 2
menu .$id.menubar.settings.fb -title "Framebuffer" -tearoff $do_tearoffs
.$id.menubar.settings.fb add radiobutton -value 1 -variable mged_fb_all($id)\
d993 1
a993 1
	-command "mged_apply $id \"set fb_all \$mged_fb_all($id)\""
d997 1
a997 1
.$id.menubar.settings.fb add radiobutton -value 0 -variable mged_fb_all($id)\
d999 1
a999 1
	-command "mged_apply $id \"set fb_all \$mged_fb_all($id)\""
d1004 1
a1004 1
.$id.menubar.settings.fb add radiobutton -value 1 -variable mged_fb_overlay($id)\
d1006 1
a1006 1
	-command "mged_apply $id \"set fb_overlay \$mged_fb_overlay($id)\""
d1013 1
a1013 1
.$id.menubar.settings.fb add radiobutton -value 0 -variable mged_fb_overlay($id)\
d1015 1
a1015 1
	-command "mged_apply $id \"set fb_overlay \$mged_fb_overlay($id)\""
d1023 1
a1023 1
.$id.menubar.settings.fb add checkbutton -offvalue 0 -onvalue 1 -variable mged_fb($id)\
d1029 1
a1029 1
.$id.menubar.settings.fb add checkbutton -offvalue 0 -onvalue 1 -variable mged_listen($id)\
d1041 2
a1042 2
menu .$id.menubar.settings.vap -title "View Axes Position" -tearoff $do_tearoffs
.$id.menubar.settings.vap add radiobutton -value 0 -variable mged_axes($id,view_pos)\
d1048 1
a1048 1
.$id.menubar.settings.vap add radiobutton -value 1 -variable mged_axes($id,view_pos)\
d1054 1
a1054 1
.$id.menubar.settings.vap add radiobutton -value 2 -variable mged_axes($id,view_pos)\
d1060 1
a1060 1
.$id.menubar.settings.vap add radiobutton -value 3 -variable mged_axes($id,view_pos)\
d1066 1
a1066 1
.$id.menubar.settings.vap add radiobutton -value 4 -variable mged_axes($id,view_pos)\
d1073 1
a1073 1
menu .$id.menubar.settings.grid -title "Grid" -tearoff $do_tearoffs
d1082 1
a1082 1
.$id.menubar.settings.grid add checkbutton -offvalue 0 -onvalue 1 -variable mged_grid($id,draw)\
d1084 1
a1084 1
	-command "mged_apply $id \"rset grid draw \$mged_grid($id,draw)\""
d1092 1
a1092 1
.$id.menubar.settings.grid add checkbutton -offvalue 0 -onvalue 1 -variable mged_grid($id,snap)\
d1094 1
a1094 1
	-command "mged_apply $id \"rset grid snap \$mged_grid($id,snap)\""
d1104 1
a1104 1
menu .$id.menubar.settings.grid.spacing -title "Grid Spacing" -tearoff $do_tearoffs
d1203 1
a1203 1
menu .$id.menubar.settings.grid_spacing -title "Grid Spacing" -tearoff $do_tearoffs
d1237 2
a1238 2
menu .$id.menubar.settings.coord -title "Constraint Coords" -tearoff $do_tearoffs
.$id.menubar.settings.coord add radiobutton -value m -variable mged_coords($id)\
d1240 1
a1240 1
	-command "mged_apply $id \"set coords \$mged_coords($id)\""
d1244 1
a1244 1
.$id.menubar.settings.coord add radiobutton -value v -variable mged_coords($id)\
d1246 1
a1246 1
	-command "mged_apply $id \"set coords \$mged_coords($id)\""
d1250 1
a1250 1
.$id.menubar.settings.coord add radiobutton -value o -variable mged_coords($id)\
d1252 1
a1252 1
	-command "mged_apply $id \"set coords \$mged_coords($id)\"" -state disabled
d1257 2
a1258 2
menu .$id.menubar.settings.origin -title "Rotate About" -tearoff $do_tearoffs
.$id.menubar.settings.origin add radiobutton -value v -variable mged_rotate_about($id)\
d1260 1
a1260 1
	-command "mged_apply $id \"set rotate_about \$mged_rotate_about($id)\""
d1264 1
a1264 1
.$id.menubar.settings.origin add radiobutton -value e -variable mged_rotate_about($id)\
d1266 1
a1266 1
	-command "mged_apply $id \"set rotate_about \$mged_rotate_about($id)\""
d1270 1
a1270 1
.$id.menubar.settings.origin add radiobutton -value m -variable mged_rotate_about($id)\
d1272 1
a1272 1
	-command "mged_apply $id \"set rotate_about \$mged_rotate_about($id)\""
d1276 1
a1276 1
.$id.menubar.settings.origin add radiobutton -value k -variable mged_rotate_about($id)\
d1278 1
a1278 1
	-command "mged_apply $id \"set rotate_about \$mged_rotate_about($id)\"" -state disabled
d1283 2
a1284 2
menu .$id.menubar.settings.transform -title "Transform" -tearoff $do_tearoffs
.$id.menubar.settings.transform add radiobutton -value v -variable mged_transform($id)\
d1291 1
a1291 1
.$id.menubar.settings.transform add radiobutton -value a -variable mged_transform($id)\
d1301 1
a1301 1
.$id.menubar.settings.transform add radiobutton -value e -variable mged_transform($id)\
d1309 2
a1310 2
menu .$id.menubar.modes -title "Modes" -tearoff $do_tearoffs
.$id.menubar.modes add checkbutton -offvalue 0 -onvalue 1 -variable mged_grid($id,draw)\
d1312 1
a1312 1
	-command "mged_apply $id \"rset grid draw \$mged_grid($id,draw)\""
d1320 1
a1320 1
.$id.menubar.modes add checkbutton -offvalue 0 -onvalue 1 -variable mged_grid($id,snap)\
d1322 1
a1322 1
	-command "mged_apply $id \"rset grid snap \$mged_grid($id,snap)\""
d1332 1
a1332 1
.$id.menubar.modes add checkbutton -offvalue 0 -onvalue 1 -variable mged_fb($id)\
d1338 1
a1338 1
.$id.menubar.modes add checkbutton -offvalue 0 -onvalue 1 -variable mged_listen($id)\
d1351 1
a1351 1
.$id.menubar.modes add checkbutton -offvalue 0 -onvalue 1 -variable mged_rubber_band($id)\
d1353 1
a1353 1
	-command "mged_apply $id \"rset rb draw \$mged_rubber_band($id)\""
d1357 1
a1357 1
.$id.menubar.modes add checkbutton -offvalue 0 -onvalue 1 -variable mged_adc_draw($id)\
d1359 1
a1359 1
	-command "mged_apply $id \"adc draw \$mged_adc_draw($id)\""
d1363 1
a1363 1
.$id.menubar.modes add checkbutton -offvalue 0 -onvalue 1 -variable mged_faceplate($id)\
d1365 1
a1365 1
	-command "mged_apply $id \"set faceplate \$mged_faceplate($id)\""
d1372 1
a1372 1
.$id.menubar.modes add checkbutton -offvalue 0 -onvalue 1 -variable mged_multi_view($id)\
d1379 1
a1379 1
.$id.menubar.modes add checkbutton -offvalue 0 -onvalue 1 -variable show_edit_info($id)\
d1391 1
a1391 1
.$id.menubar.modes add checkbutton -offvalue 0 -onvalue 1 -variable mged_show_status($id)\
d1397 1
a1397 1
.$id.menubar.modes add checkbutton -offvalue 0 -onvalue 1 -variable mged_show_cmd($id)\
d1402 1
a1402 1
.$id.menubar.modes add checkbutton -offvalue 0 -onvalue 1 -variable mged_show_dm($id)\
d1409 1
a1409 1
.$id.menubar.modes add checkbutton -offvalue 0 -onvalue 1 -variable mged_rateknobs($id)\
d1411 1
a1411 1
	-command "mged_apply $id \"set rateknobs \$mged_rateknobs($id)\""
d1419 1
a1419 1
.$id.menubar.modes add checkbutton -offvalue 0 -onvalue 1 -variable mged_dlist($id)\
d1421 1
a1421 1
	-command "mged_apply $id \"set dlist \$mged_dlist($id)\""
d1436 1
a1436 1
menu .$id.menubar.modes.axes -title "Axes" -tearoff $do_tearoffs
d1438 2
a1439 2
	-variable mged_axes($id,view_draw) -label "View" -underline 0\
	-command "mged_apply $id \"rset ax view_draw \$mged_axes($id,view_draw)\""
d1450 2
a1451 2
	-variable mged_axes($id,model_draw) -label "Model" -underline 0\
	-command "mged_apply $id \"rset ax model_draw \$mged_axes($id,model_draw)\""
d1463 2
a1464 2
	-variable mged_axes($id,edit_draw) -label "Edit" -underline 0\
	-command "mged_apply $id \"rset ax edit_draw \$mged_axes($id,edit_draw)\""
d1473 1
a1473 1
menu .$id.menubar.tools -title "Tools" -tearoff $do_tearoffs
d1509 1
a1509 1
#.$id.menubar.tools add checkbutton -offvalue 0 -onvalue 1 -variable buttons_on($id)\
d1513 1
a1513 1
menu .$id.menubar.help -title "Help" -tearoff $do_tearoffs
d1565 1
a1565 1
label .$id.status.cent -textvar mged_display($mged_active_dm($id),center) -anchor w
d1569 1
a1569 1
label .$id.status.size -textvar mged_display($mged_active_dm($id),size) -anchor w
d1577 1
a1577 1
label .$id.status.aet -textvar mged_display($mged_active_dm($id),aet) -anchor w
d1581 1
a1581 1
label .$id.status.ang -textvar mged_display($mged_active_dm($id),ang) -anchor w -padx 4
d1585 1
a1585 1
label .$id.status.illum.label -textvar ia_illum_label($id)
d1596 2
a1597 6
if {$use_grid_gm} {
    if {$comb} {
	text .$id.t -height $mged_num_lines($id) -relief sunken -bd 2 -yscrollcommand ".$id.s set"
    } else {
	text .$id.t -relief sunken -bd 2 -yscrollcommand ".$id.s set"
    }
d1599 1
a1599 5
    if {$comb} {
	text .$id.t -width 10 -relief sunken -bd 2 -yscrollcommand ".$id.s set" -setgrid true
    } else {
	text .$id.t -relief sunken -bd 2 -yscrollcommand ".$id.s set" -setgrid true
    }
d1640 2
a1641 2
set mged_edit_style($id) $mged_default_edit_style
set dm_insert_char_flag(.$id.t) 0
d1645 2
a1646 2
set ia_cmd_prefix($id) ""
set ia_more_default($id) ""
d1650 9
a1658 9
set moveView(.$id.t) 0
set freshline(.$id.t) 1
set scratchline(.$id.t) ""
set vi_overwrite_flag(.$id.t) 0
set vi_change_flag(.$id.t) 0
set vi_delete_flag(.$id.t) 0
set vi_search_flag(.$id.t) 0
set vi_search_char(.$id.t) ""
set vi_search_dir(.$id.t) ""
d1669 3
a1671 4
if { $use_grid_gm } {
    grid $mged_active_dm($id) -in $mged_dmc($id) -sticky "nsew" -row 0 -column 0
} else {
    pack $mged_active_dm($id) -in $mged_dmc($id)
d1673 3
a1675 2
    if {$comb} {
	pack $mged_dmc($id) -side top -padx 2 -pady 2
d1679 28
a1706 1
set mged_multi_view($id) $mged_default_mvmode
d1708 3
a1710 6
if { $use_grid_gm } {
    if { $comb } {
	if { $mged_show_dm($id) } {
	    grid $mged_dmc($id) -sticky nsew -row 0 -column 0
	}
    }
d1712 5
a1716 43
    grid .$id.t .$id.s -in .$id.tf -sticky "nsew"
    grid columnconfigure .$id.tf 0 -weight 1
    grid columnconfigure .$id.tf 1 -weight 0
    grid rowconfigure .$id.tf 0 -weight 1

    if { !$comb || ($comb && $mged_show_cmd($id)) } {
	grid .$id.tf -sticky "nsew" -row 1 -column 0
    }

    grid .$id.status.cent .$id.status.size .$id.status.units .$id.status.aet\
	    .$id.status.ang x -in .$id.status.dpy -sticky "ew"
    grid columnconfigure .$id.status.dpy 0 -weight 0
    grid columnconfigure .$id.status.dpy 1 -weight 0
    grid columnconfigure .$id.status.dpy 2 -weight 0
    grid columnconfigure .$id.status.dpy 3 -weight 0
    grid columnconfigure .$id.status.dpy 4 -weight 0
    grid columnconfigure .$id.status.dpy 5 -weight 1
    grid rowconfigure .$id.status.dpy 0 -weight 0
    grid .$id.status.dpy -sticky "ew"
    grid .$id.status.illum.label x -sticky "ew"
    grid columnconfigure .$id.status.illum 0 -weight 0
    grid columnconfigure .$id.status.illum 1 -weight 1
    grid rowconfigure .$id.status.illum 0 -weight 0
    grid .$id.status.illum -sticky "w"
    grid columnconfigure .$id.status 0 -weight 1
    grid rowconfigure .$id.status 0 -weight 0
    grid rowconfigure .$id.status 1 -weight 0
    grid rowconfigure .$id.status 2 -weight 0

    if { $mged_show_status($id) } {
	grid .$id.status -sticky "ew" -row 2 -column 0
    }

    grid columnconfigure .$id 0 -weight 1
    if { $comb } {
	grid rowconfigure .$id 0 -weight 1
	grid rowconfigure .$id 1 -weight 0
	grid rowconfigure .$id 2 -weight 0
    } else {
	grid rowconfigure .$id 0 -weight 0
	grid rowconfigure .$id 1 -weight 1
	grid rowconfigure .$id 2 -weight 0
    }
d1718 3
a1720 10
    pack .$id.status.cent .$id.status.size .$id.status.units .$id.status.aet\
	    .$id.status.ang -in .$id.status.dpy -side left -anchor w
    pack .$id.status.dpy -side top -anchor w -expand 1 -fill x
    pack .$id.status.illum.label -side left -anchor w
    pack .$id.status.illum -side top -anchor w -expand 1 -fill x
    pack .$id.status -side bottom -anchor w -expand 1 -fill x

    pack .$id.s -in .$id.tf -side right -fill y
    pack .$id.t -in .$id.tf -side top -fill both -expand yes
    pack .$id.tf -side top -fill both -expand yes
d1739 1
a1739 1
tie $id $mged_active_dm($id)
d1749 1
a1749 1
trace variable mged_display($mged_active_dm($id),fps) w "ia_changestate $id"
d1751 1
a1751 1
set mged_qray_effects($id) [qray effects]
d1757 3
a1759 3
share m $mged_top($id).ul $mged_top($id).ur
share m $mged_top($id).ul $mged_top($id).ll
share m $mged_top($id).ul $mged_top($id).lr
d1762 1
a1762 1
bind $mged_dmc($id) <Configure> "setmv $id"
d1765 1
a1765 1
bind $mged_top($id) <KeyPress> { break }
d1770 5
a1774 5
wm protocol $mged_top($id) WM_DELETE_WINDOW "gui_destroy_default $id"
wm geometry $mged_top($id) -0+0
#set width [winfo screenwidth $mged_top($id)]
#set height [winfo screenheight $mged_top($id)]
#wm geometry $mged_top($id) $width\x$height+8+40
d1777 1
a1777 1
    if { !$mged_show_dm($id) } {
d1803 2
a1804 1
proc gui_destroy_default args {
a1806 5
    global mged_multi_view
    global edit_info
    global show_edit_info
    global mged_top
    global mged_dmc
d1809 1
a1809 1
	return [help gui_destroy_default]
d1816 1
a1816 1
	return "gui_destroy_default: bad id - $id"
d1826 1
a1826 1
	if {"$mged_top($id).ur" == "$shared_id"} {
d1831 2
a1832 2
    set mged_multi_view($id) 0
    set show_edit_info($id) 0
d1838 1
a1838 1
    catch { destroy $mged_top($id) }
d1875 1
a1875 1
    global mged_active_dm
a1876 1
    global mged_rateknobs
a1877 1
    global mged_use_air
a1878 1
    global mged_listen
a1879 1
    global mged_fb
a1880 1
    global mged_fb_all
a1882 2
    global mged_dlist
    global mged_fb_overlay
a1883 1
    global mged_mouse_behavior
a1884 1
    global mged_coords
a1885 1
    global mged_rotate_about
a1886 1
    global mged_transform
d1888 20
a1907 25
    global mged_faceplate
    global mged_adc_draw
    global mged_axes
    global mged_grid
    global mged_rubber_band

    winset $mged_active_dm($id)
    set mged_rateknobs($id) $rateknobs
    set mged_adc_draw($id) [adc draw]
    set mged_axes($id,model_draw) [rset ax model_draw]
    set mged_axes($id,view_draw) [rset ax view_draw]
    set mged_axes($id,edit_draw) [rset ax edit_draw]
    set mged_use_air($id) $use_air
    set mged_fb($id) $fb
    set mged_fb_all($id) $fb_all
    set mged_fb_overlay($id) $fb_overlay
    set mged_dlist($id) $dlist
    set mged_rubber_band($id) [rset rb draw]
    set mged_mouse_behavior($id) $mouse_behavior
    set mged_coords($id) $coords
    set mged_rotate_about($id) $rotate_about
    set mged_transform($id) $transform
    set mged_grid($id,draw) [rset grid draw]
    set mged_grid($id,snap) [rset grid snap]
    set mged_faceplate($id) $faceplate
d1909 1
a1909 1
    if {$mged_fb($id)} {
d1911 1
a1911 1
	set mged_listen($id) $listen
d1914 1
a1914 1
	set mged_listen($id) $listen
d1921 1
a1921 1
    global mged_axes
d1928 1
a1928 1
	set mged_axes($id,view_pos) 0
d1930 1
a1930 1
	set mged_axes($id,view_pos) 1
d1932 1
a1932 1
	set mged_axes($id,view_pos) 2
d1934 1
a1934 1
	set mged_axes($id,view_pos) 3
d1936 1
a1936 1
	set mged_axes($id,view_pos) 4
d1941 1
a1941 1
    global buttons_on
d1945 1
a1945 1
	set buttons_on($id) 0
d1953 1
a1953 1
    global show_edit_info
d1956 1
a1956 1
    if {$show_edit_info($id)} {
d1972 1
a1972 3
    global player_screen
    global edit_info_pos
    global show_edit_info
d1979 2
a1980 2
    if {$show_edit_info($id)} {
	toplevel .sei$id -screen $player_screen($id)
d1986 1
a1986 1
	wm geometry .sei$id $edit_info_pos($id)
d1991 1
a1991 1
    global edit_info_pos
d1998 1
a1998 1
    set edit_info_pos($id) $match
d2004 1
a2006 2
    global mged_active_dm
    global mged_top
d2016 2
a2017 2
    if [winfo exists $mged_active_dm($id)] {
	set nw $mged_top($id).ur
d2019 1
a2019 1
	return "jcs: unrecognized pathname - $mged_active_dm($id)"
d2024 2
a2025 2
	if [winfo exists $mged_top($cid).ur] {
	    set ow $mged_top($cid).ur
d2040 1
a2040 1
    global mged_active_dm
d2047 2
a2048 2
    if [winfo exists $mged_active_dm($id)] {
	set w $mged_active_dm($id)
d2050 1
a2050 1
	return "qcs: unrecognized pathname - $mged_active_dm($id)"
d2095 1
a2095 9
    global mged_top
    global mged_dmc
    global mged_active_dm
    global mged_small_dmc
    global mged_dm_loc
    global save_dm_loc
    global save_small_dmc
    global mged_multi_view
    global win_size
a2097 1
    global use_grid_gm
d2099 3
a2101 3
    set vloc [string range $mged_dm_loc($id) 0 0]
    set hloc [string range $mged_dm_loc($id) 1 1]
    set new_dm $mged_top($id).$mged_dm_loc($id)
d2104 1
a2104 1
    if { $new_dm == $mged_active_dm($id) } {
d2108 1
a2108 1
    trace vdelete mged_display($mged_active_dm($id),fps) w "ia_changestate $id"
d2111 1
a2111 1
    winset $mged_active_dm($id)
d2114 2
a2115 2
    set mged_active_dm($id) $new_dm
    set mged_small_dmc($id) $mged_dmc($id).$vloc.$hloc
d2118 1
a2118 1
    winset $mged_active_dm($id)
d2121 1
a2121 1
    trace variable mged_display($mged_active_dm($id),fps) w "ia_changestate $id"
d2126 1
a2126 1
    tie $id $mged_active_dm($id)
d2128 1
a2128 1
    if {!$mged_multi_view($id)} {
d2130 1
a2130 5
	if { $use_grid_gm } {
	    grid forget $mged_top($id).$save_dm_loc($id)
	} else {
	    pack forget $mged_top($id).$save_dm_loc($id)
	}
d2133 2
a2134 2
	winset $mged_top($id).$save_dm_loc($id)
	set mv_size [expr $win_size($id) / 2 - 4]
d2137 1
a2137 5
	if { $use_grid_gm } {
	    grid $mged_top($id).$save_dm_loc($id) -in $save_small_dmc($id) -sticky "nsew"
	} else {
	    pack $mged_top($id).$save_dm_loc($id) -in $save_small_dmc($id)
	}
d2141 2
a2142 2
    set save_dm_loc($id) $mged_dm_loc($id)
    set save_small_dmc($id) $mged_small_dmc($id)
d2165 5
a2169 7
    global mged_top
    global mged_dmc
    global mged_dm_loc

    if {$mged_top($id) == $mged_dmc($id)} {
	if {$mged_dm_loc($id) == "ul"} {
	    wm title $mged_top($id) "MGED 5.0 Graphics Window ($id) - $dbname - Upper Left"
d2171 2
a2172 2
	} elseif {$mged_dm_loc($id) == "ur"} {
	    wm title $mged_top($id) "MGED 5.0 Graphics Window ($id) - $dbname - Upper Right"
d2174 2
a2175 2
	} elseif {$mged_dm_loc($id) == "ll"} {
	    wm title $mged_top($id) "MGED 5.0 Graphics Window ($id) - $dbname - Lower Left"
d2177 2
a2178 2
	} elseif {$mged_dm_loc($id) == "lr"} {
	    wm title $mged_top($id) "MGED 5.0 Graphics Window ($id) - $dbname - Lower Right"
d2182 8
a2189 8
	if {$mged_dm_loc($id) == "ul"} {
	    wm title $mged_top($id) "MGED 5.0 Command Window ($id) - $dbname - Upper Left"
	} elseif {$mged_dm_loc($id) == "ur"} {
	    wm title $mged_top($id) "MGED 5.0 Command Window ($id) - $dbname - Upper Right"
	} elseif {$mged_dm_loc($id) == "ll"} {
	    wm title $mged_top($id) "MGED 5.0 Command Window ($id) - $dbname - Lower Left"
	} elseif {$mged_dm_loc($id) == "lr"} {
	    wm title $mged_top($id) "MGED 5.0 Command Window ($id) - $dbname - Lower Right"
d2195 8
a2202 17
    global mged_dmc
    global mged_show_cmd
    global mged_show_dm
    global mged_num_lines
    global win_size
    global use_grid_gm

    if { $mged_show_cmd($id) } {
	if { $use_grid_gm } {
	    if { $mged_show_dm($id) } {
		.$id.t configure -height $mged_num_lines($id)
		grid .$id.tf -sticky nsew -row 1 -column 0
#		update
#		setmv $id
	    } else {
		grid .$id.tf -sticky nsew -row 0 -column 0
	    }
d2204 1
a2204 3
	    set win_size($id) $win_size($id,small)
	    setmv $id
	    pack .$id.tf -side top -fill both -expand yes
d2207 1
a2207 2
	if {$use_grid_gm} {
	    grid forget .$id.tf
d2209 4
a2212 9
	    if { !$mged_show_dm($id) } {
		set mged_show_dm($id) 1
		grid $mged_dmc($id) -sticky nsew -row 0 -column 0
		update
		setmv $id
	    }
	} else {
	    pack forget .$id.tf
	    set win_size($id) $win_size($id,big)
d2219 1
a2219 15
    global mged_top
    global mged_show_dm
    global mged_show_cmd
    global mged_show_status
    global mged_dmc
    global mged_num_lines
    global use_grid_gm

    if { $mged_show_dm($id) } {
	if { $use_grid_gm } {
	    if { $mged_show_cmd($id) } {
		grid forget .$id.tf
		.$id.t configure -height $mged_num_lines($id)
		update
	    }
d2221 6
a2226 1
	    grid $mged_dmc($id) -sticky nsew -row 0 -column 0
d2228 1
a2228 5
	    if { $mged_show_cmd($id) } {
		grid .$id.tf -sticky nsew -row 1 -column 0
		update
		.$id.t see end
	    }
d2230 4
a2233 8
	    setmv $id
	} else {
	    if {[winfo ismapped .$id.tf]} {
		pack $mged_dmc($id) -side top -before .$id.tf -padx 2 -pady 2
		.$id.t configure -width 10 -height 10
	    } else {
		pack $mged_dmc($id) -side top -padx 2 -pady 2
	    }
d2235 2
d2238 6
a2243 2
	if { $use_grid_gm } {
	    grid forget $mged_dmc($id)
d2245 3
a2247 8
	    set mged_show_cmd($id) 1
	    set_cmd_win $id
	    set fh [get_font_height .$id.t]
	    set h [winfo height $mged_top($id)]

	    if { $mged_show_status($id) } {
		set h [expr $h - [winfo height .$id.status]]
	    }
d2249 2
a2250 6
	    set nlines [expr $h / $fh]
	    .$id.t configure -height $nlines
	} else {
	    pack forget $mged_dmc($id)
	    .$id.t configure -width 80 -height 85
	}
d2255 1
a2255 2
    global mged_active_dm
    global mged_dm_loc
a2257 1
    global mged_top
d2259 2
a2260 2
#    if {$mged_dm_loc($id) != "lv"} {
#	winset $mged_active_dm($id)
d2262 1
a2262 1
    winset $mged_active_dm($id)
d2267 1
a2267 1
    if {$i != -1 && "$mged_top($id).ur" == "$mged_active_dm($id)"} {
d2269 1
a2269 1
	    if {"$mged_top($cid).ur" == "$mged_active_dm($cid)"} {
d2272 1
a2272 1
		winset $mged_active_dm($cid)
d2284 1
a2284 2
    global mged_active_dm
    global mged_dm_loc
a2286 1
    global mged_top
d2288 2
a2289 2
#    if {$mged_dm_loc($id) != "lv"} {
#	winset $mged_active_dm($id)
d2291 1
a2291 1
    winset $mged_active_dm($id)
d2296 1
a2296 1
    if { $i != -1 && "$mged_top($id).ur" == "$mged_active_dm($id)"} {
d2298 1
a2298 1
	    if {"$mged_top($cid).ur" == "$mged_active_dm($cid)"} {
d2301 1
a2301 1
		winset $mged_active_dm($cid)
d2313 1
a2313 2
    global mged_active_dm
    global mged_dm_loc
a2315 1
    global mged_top
d2317 2
a2318 2
#    if {$mged_dm_loc($id) != "lv"} {
#	winset $mged_active_dm($id)
d2320 1
a2320 1
    winset $mged_active_dm($id)
d2325 1
a2325 1
    if { $i != -1 && "$mged_top($id).ur" == "$mged_active_dm($id)"} {
d2327 1
a2327 1
	    if {"$mged_top($cid).ur" == "$mged_active_dm($cid)"} {
d2337 1
a2337 2
    global mged_active_dm
    global mged_dm_loc
a2339 1
    global mged_top
d2341 2
a2342 2
#    if {$mged_dm_loc($id) != "lv"} {
#	winset $mged_active_dm($id)
d2344 1
a2344 1
    winset $mged_active_dm($id)
d2349 1
a2349 1
    if { $i != -1 && "$mged_top($id).ur" == "$mged_active_dm($id)"} {
d2351 2
a2352 2
	    if {"$mged_top($cid).ur" == "$mged_active_dm($cid)"} {
		winset $mged_active_dm($cid)
d2362 1
a2362 2
    global mged_active_dm
    global mged_dm_loc
a2364 1
    global mged_top
d2366 2
a2367 2
#    if {$mged_dm_loc($id) != "lv"} {
#	winset $mged_active_dm($id)
d2369 1
a2369 1
    winset $mged_active_dm($id)
d2374 1
a2374 1
    if { $i != -1 && "$mged_top($id).ur" == "$mged_active_dm($id)"} {
d2376 2
a2377 2
	    if {"$mged_top($cid).ur" == "$mged_active_dm($cid)"} {
		winset $mged_active_dm($cid)
d2387 1
a2387 2
    global mged_active_dm
    global mged_dm_loc
a2389 1
    global mged_top
d2391 2
a2392 2
#    if {$mged_dm_loc($id) != "lv"} {
#	winset $mged_active_dm($id)
d2394 1
a2394 1
    winset $mged_active_dm($id)
d2399 1
a2399 1
    if { $i != -1 && "$mged_top($id).ur" == "$mged_active_dm($id)"} {
d2401 2
a2402 2
	    if {"$mged_top($cid).ur" == "$mged_active_dm($cid)"} {
		winset $mged_active_dm($cid)
d2437 1
a2437 1
    global mged_active_dm
d2440 1
a2440 1
    winset $mged_active_dm($id)
d2464 1
a2464 2
    global mged_show_status
    global use_grid_gm
d2466 2
a2467 6
    if {$mged_show_status($id)} {
	if { $use_grid_gm } {
	    grid .$id.status -sticky ew -row 2 -column 0
	} else {
	    pack .$id.status -side bottom -anchor w
	}
d2469 1
a2469 5
	if { $use_grid_gm } {
	    grid forget .$id.status
	} else {
	    pack forget .$id.status
	}
d2474 1
a2474 2
    global mged_top
    global mged_active_dm
a2475 9
    global mged_transform

    winset $mged_top($id).ul
    set transform $mged_transform($id)
    default_mouse_bindings $mged_top($id).ul

    winset $mged_top($id).ur
    set transform $mged_transform($id)
    default_mouse_bindings $mged_top($id).ur
d2477 15
a2491 3
    winset $mged_top($id).ll
    set transform $mged_transform($id)
    default_mouse_bindings $mged_top($id).ll
d2493 1
a2493 5
    winset $mged_top($id).lr
    set transform $mged_transform($id)
    default_mouse_bindings $mged_top($id).lr

    winset $mged_active_dm($id)
d2497 1
a2497 1
    global mged_top
d2499 14
a2512 14
    bind $mged_top($id).ul <Control-n> "winset $mged_top($id).ul; view_ring_next $id; break" 
    bind $mged_top($id).ur <Control-n> "winset $mged_top($id).ur; view_ring_next $id; break" 
    bind $mged_top($id).ll <Control-n> "winset $mged_top($id).ll; view_ring_next $id; break" 
    bind $mged_top($id).lr <Control-n> "winset $mged_top($id).lr; view_ring_next $id; break" 

    bind $mged_top($id).ul <Control-p> "winset $mged_top($id).ul; view_ring_prev $id; break" 
    bind $mged_top($id).ur <Control-p> "winset $mged_top($id).ur; view_ring_prev $id; break" 
    bind $mged_top($id).ll <Control-p> "winset $mged_top($id).ll; view_ring_prev $id; break" 
    bind $mged_top($id).lr <Control-p> "winset $mged_top($id).lr; view_ring_prev $id; break" 

    bind $mged_top($id).ul <Control-t> "winset $mged_top($id).ul; view_ring_toggle $id; break" 
    bind $mged_top($id).ur <Control-t> "winset $mged_top($id).ur; view_ring_toggle $id; break" 
    bind $mged_top($id).ll <Control-t> "winset $mged_top($id).ll; view_ring_toggle $id; break" 
    bind $mged_top($id).lr <Control-t> "winset $mged_top($id).lr; view_ring_toggle $id; break" 
d2516 1
a2516 1
    global mged_active_dm
a2517 1
    global mged_adc_draw
d2523 2
a2524 2
	if {[info exists mged_active_dm($id)]} {
	    set mged_adc_draw($id) [_mged_adc draw]
d2536 1
a2537 1
    global mged_listen
d2539 1
a2539 1
    mged_apply $id "set listen \$mged_listen($id)"
d2542 1
a2542 1
    set mged_listen($id) $listen
d2546 1
a2546 1
    global mged_fb
a2547 1
    global mged_listen
d2549 1
a2549 1
    mged_apply $id "set fb \$mged_fb($id)"
d2551 1
a2551 1
    if {$mged_fb($id)} {
d2554 2
a2555 2
	set mged_listen($id) 1
	mged_apply $id "set listen \$mged_listen($id)"
d2559 1
a2559 1
	set mged_listen($id) 0
d2574 1
a2574 1
    global mged_num_lines
d2578 1
a2578 87
    return [expr $fh * $mged_num_lines($id)]
}

proc choosePaneColor { id } {
    global mged_top
    global mged_active_dm

    winset $mged_active_dm($id)
    set rgb_str [_mged_dm bg]
    set rgb [format "#%02x%02x%02x" [lindex $rgb_str 0] [lindex $rgb_str 1] [lindex $rgb_str 2]]

    set parent $mged_top($id)
    set child pane_color

    cadColorWidget dialog $parent $child\
	    -title "Pane Color"\
	    -initialcolor $rgb\
	    -ok "pane_color_ok $id $parent.$child"\
	    -cancel "cadColorWidget_destroy $parent.$child"
}

proc pane_color_ok { id w } {
    upvar #0 $w data

    mged_apply $id "dm bg $data(red) $data(green) $data(blue)"

    destroy $w
    unset data
}

proc chooseWireframeHighlightColor { id } {
    global wireframe_highlight_color
    global mged_top
    global mged_active_dm

    winset $mged_active_dm($id)
    set rgb_str $wireframe_highlight_color
    set rgb [format "#%02x%02x%02x" [lindex $wireframe_highlight_color 0]\
	    [lindex $wireframe_highlight_color 1] [lindex $wireframe_highlight_color 2]]

    set parent $mged_top($id)
    set child wire_hl_color

    cadColorWidget dialog $parent $child\
	    -title "Wireframe Highlight Color"\
	    -initialcolor $rgb\
	    -ok "wireframeHighlightColor_ok $parent.$child"\
	    -cancel "cadColorWidget_destroy $parent.$child"
}

proc wireframeHighlightColor_ok { w } {
    global wireframe_highlight_color
    upvar #0 $w data

    set wireframe_highlight_color "$data(red) $data(green) $data(blue)"

    destroy $w
    unset data
}

proc chooseDefaultWireframeColor { id } {
    global default_wireframe_color
    global mged_top
    global mged_active_dm

    winset $mged_active_dm($id)
    set rgb [format "#%02x%02x%02x" [lindex $default_wireframe_color 0]\
	    [lindex $default_wireframe_color 1] [lindex $default_wireframe_color 2]]

    set parent $mged_top($id)
    set child def_wire_color

    cadColorWidget dialog $parent $child\
	    -title "Default Wireframe Color"\
	    -initialcolor $rgb\
	    -ok "defaultWireframeColor_ok $parent.$child"\
	    -cancel "cadColorWidget_destroy $parent.$child"
}

proc defaultWireframeColor_ok { w } {
    global default_wireframe_color
    upvar #0 $w data

    set default_wireframe_color "$data(red) $data(green) $data(blue)"

    destroy $w
    unset data
@


1.43
log
@*- mods to set_active_dm
@
text
@d1479 16
d1980 2
d2008 1
@


1.42
log
@*- mods to reconfig_gui_default()
@
text
@d796 2
a797 2
	-postcommand "do_view_ring_labels $id"
do_view_ring_entries $id s
d800 2
a801 2
	-postcommand "do_view_ring_labels $id"
do_view_ring_entries $id d
d1938 2
a1939 2
    do_view_ring_entries $id s
    do_view_ring_entries $id d
d2203 1
a2203 1
    set tmp_dm $mged_top($id).$mged_dm_loc($id)
d2206 1
a2206 1
    if { $tmp_dm == $mged_active_dm($id) } {
d2216 1
a2216 1
    set mged_active_dm($id) $tmp_dm
d2254 3
a2256 2
    do_view_ring_entries $id s
    do_view_ring_entries $id d
d2258 10
d2421 2
a2422 2
		do_view_ring_entries $cid s
		do_view_ring_entries $cid d
d2428 2
a2429 2
	do_view_ring_entries $id s
	do_view_ring_entries $id d
d2452 2
a2453 2
		do_view_ring_entries $cid s
		do_view_ring_entries $cid d
d2459 2
a2460 2
	do_view_ring_entries $id s
	do_view_ring_entries $id d
d2572 1
a2572 1
proc do_view_ring_entries { id m } {
d2593 1
a2593 1
	puts "Usage: do_view_ring_entries w s|d"
d2597 1
a2597 1
proc do_view_ring_labels { id } {
d2602 1
a2602 1
    set save_view [view_ring get]
d2621 1
a2621 1
    view_ring goto $save_view
@


1.41
log
@*- work on help messages
@
text
@d99 1
d102 4
a109 3
if ![info exists tk_version] {
    loadtk
}
d1080 1
a1080 1
top of the framebuffer data." }
d1094 5
a1098 4
If the framebuffer is listening for clients, new data can
be passed into the framebuffer. Otherwise, the framebuffer
is write protected. Actually, it is also read protected with
one exception. MGED can still read the framebuffer data." }
d1813 3
a1842 3
# Force display manager windows to update their respective color schemes
mged_apply_local $id "rset cs mode \[rset cs mode\]"

d1938 2
@


1.40
log
@*- add help messages
@
text
@a166 1
    global buttons_on
d626 4
a629 1
	{ { summary "Set the command interpretation mode to Tcl mode." } }
d633 3
a635 2
	{ { summary "Set the command interpretation mode to MGED object name matching.
In this mode globbing is performed against MGED database objects."\
d687 2
a688 1
	{ { summary "View of the top (i.e. azimuth = 270, elevation = 90). " }
d694 1
d700 1
d706 1
d712 1
d714 1
a714 1
.$id.menubar.view add command -label "Back" -underline 3\
d716 3
a718 2
hoc_register_menu_data "View" "Back" "Back View"\
	{ { summary "View of the back (i.e. azimuth = 180, elevation = 0)." }
d724 1
d730 1
d762 1
d772 1
a772 1
The stored views can then be traversed or even removed." }
d1010 2
a1011 2
both textual and graphical output is used to represent the results
of firing a query ray." }
d1020 3
a1022 2
Any interaction with the GUI that affects a pane/\"display manager\"
will be directed at the upper left pane." } }
d1028 3
a1030 2
Any interaction with the GUI that affects a pane/\"display manager\"
will be directed at the upper right pane." } }
d1036 3
a1038 2
Any interaction with the GUI that affects a pane/\"display manager\"
will be directed at the lower left pane." } }
d1044 3
a1046 2
Any interaction with the GUI that affects a pane/\"geometry window\"
will be directed at the lower right pane." } }
d1143 5
a1147 5
	{ { summary "Toggle drawing the grid. The grid is
a lattice of points over the pane (geometry window).
The regular spacing between the points gives the user
accurate visual cues regarding dimension. This spacing
can be set by the user." }
d1154 5
a1158 4
the internal routines that use the mouse pointer location,
move/snap that location to the nearest grid point. This gives
the user high accuracy with the mouse for transforming the
view or editing solids/matrices." }
d1172 3
a1174 2
	{ { summary "Pops up the grid spacing entry dialog. The user can
use this to set both the horizontal and vertical tick spacing." }
d1180 2
a1181 2
	{ { summary "Set the horizontal and vertical tick spacing
to 1 micrometer." }
d1186 2
a1187 2
	{ { summary "Set the horizontal and vertical tick spacing
to 1 millimeter." }
d1192 2
a1193 2
	{ { summary "Set the horizontal and vertical tick spacing
to 1 centimeter." }
d1198 2
a1199 2
	{ { summary "Set the horizontal and vertical tick spacing
to 1 decimeter." }
d1204 2
a1205 2
	{ { summary "Set the horizontal and vertical tick spacing
to 1 meter." }
d1210 2
a1211 2
	{ { summary "Set the horizontal and vertical tick spacing
to 1 kilometer." }
d1217 2
a1218 2
	{ { summary "Set the horizontal and vertical tick spacing
to 1/10 inches." }
d1223 2
a1224 2
	{ { summary "Set the horizontal and vertical tick spacing
to 1/4 inches." }
d1229 2
a1230 2
	{ { summary "Set the horizontal and vertical tick spacing
to 1/2 inches." }
d1235 2
a1236 2
	{ { summary "Set the horizontal and vertical tick spacing
to 1 inch." }
d1241 2
a1242 2
	{ { summary "Set the horizontal and vertical tick spacing
to 1 foot." }
d1247 2
a1248 2
	{ { summary "Set the horizontal and vertical tick spacing
to 1 yard." }
d1253 2
a1254 2
	{ { summary "Set the horizontal and vertical tick spacing
to 1 mile." }
d1371 5
a1375 5
	{ { summary "Toggle drawing the grid. The grid is
a lattice of points over the pane (geometry window).
The regular spacing between the points gives the user
accurate visual cues regarding dimension. This spacing
can be set by the user." }
d1382 5
a1386 4
the internal routines that use the mouse pointer location,
move/snap that location to the nearest grid point. This gives
the user high accuracy with the mouse for transforming the
view or editing solids/matrices." }
d1399 3
a1401 2
	{ { summary "This activates/deactivates listening for clients.
If the framebuffer is listening for clients, new data can
d1403 3
a1405 2
is write protected. Actually, it is also read protected with
one exception. MGED can still read the framebuffer data." }
d1432 4
a1435 2
	{ { summary "Toggle between multipane and single pane mode. In
multipane mode there are four panes, each with its own state." } }
d1440 8
a1447 7
	{ { summary "Toggle display of edit information.
If in solid edit state, the edit information is
displayed in the internal solid editor. This editor,
as its name implies, can be used to edit the solid
as well as view its contents. If in object edit
state, the object information is displayed in a
dialog box." } }
d1472 3
a1474 3
For example, if the user rotates the view about the
X axis, the view continues to rotate about the X axis
until the rate rotation is stopped." }
d1482 7
a1488 6
	{ { summary "Toggle display of the view axes. The view
axes are used to give the user visual cues indicating
the current view of model space. These axes are drawn
the same as the model axes, except that the view axes'
position is fixed in view space. This position as
well as other characteristics can be set by the user." }
d1494 8
a1501 7
	{ { summary "Toggle display of the model axes. The model
axes are used to give the user visual cues indicating
the current view of model space. The model axes are by default
located at the model origin and are fixed in model space.
So, if the user transforms the view, the model axes will potentially
move in view space. The model axes position as well
as other characteristics can be set by the user." }
d1507 5
a1511 5
	{ { summary "Toggle display of the edit axes. The edit
axes are used to give the user visual cues indicating
how the edit is progressing. They consist of a pair of axes.
One remains unmoved, while the other moves to indicate
how things have changed." }
a1558 2
#.$id.menubar.help add command -label "On Context" -underline 0\
#	-command "on_context_help $id"
d1628 3
a1630 1
	{ { summary "This area is for displaying either the frames per second,\nthe illuminated path or the keypoint during an edit." } }
d1653 35
a1687 1
hoc_register_data .$id.t "Command Window" { { summary "Enter commands here!" } }
a1876 1
    global buttons_on
a1905 1
    set buttons_on($id) 0
@


1.39
log
@*- help system mods
@
text
@d422 1
a422 1
	{ { summary "Open an existing database" }
d457 1
a457 1
	{ { summary "Save the current view as a RT script file." }
d498 1
a498 1
	{ { summary "Set the unit of measure to centimeters.n\t1 centimeter = 1/100 meters" }
d535 25
a559 2
hoc_register_menu_data "Command Line Edit" "emacs" "Emacs"\
	{ { summary "Set the command line edit mode to emacs." } }
d562 60
a621 2
hoc_register_menu_data "Command Line Edit" "vi" "Vi"\
	{ { summary "Set the command line edit mode to vi." } }
d631 2
a632 3
	{ { summary\
"Set the command interpretation mode to MGED object name matching.\n\
In this mode, globbing is performed against MGED database objects."\
d741 4
a744 4
	{ { summary "Sets the view of all four panes to their defaults.\n\n\
\tupper left\taz = 90, el = 0\n\
\tupper right\taz = 35, el = 25\n\
\tlower left\taz = 0, el = 0\n\
d756 5
a760 1
	{ { summary "Add a view to the view ring." }
d766 2
a767 1
	{ { summary "Go to the next view on the view ring.\nControl-n can also be used." }
d771 2
a772 1
	{ { summary "Go to the previous view on the view ring.\nControl-p can also be used." }
d776 3
a778 1
	{ { summary "Go to the last view. This can be used to toggle\nbetween two views. Control-t can also be used." }
d819 1
a819 1
	{ { summary "Set the \"Apply To\" mode such that the user's\n\
d824 2
a825 2
	{ { summary "Set the \"Apply To\" mode such that the user's\n\
interaction with the GUI is applied to all panes\n\
d830 3
a832 3
	{ { summary "Set the \"Apply To\" mode such that the user's\n\
interaction with the GUI is applied to all panes\n\
listed in the Tcl variable mged_apply_list(id)\n\
d837 1
a837 1
	{ { summary "Set the \"Apply To\" mode such that the user's\n\
d845 7
a851 5
	{ { summary "Enter the default MGED mouse behavior.\n\n\
Mouse Button\tBehavior\n\
     1\tZoom out by a factor of 2\n\
     2\tCenter View\n\
     3\tZoom in by a factor of 2" }
d857 8
a864 8
	{ { summary "Enter paint rectangle mode.\n\
If the framebuffer is active, the rectangular area as\n\
specified by the user is painted with the contents of the\n\
framebuffer. Otherwise, only the rectangle is drawn.\n\n\
Mouse Button\tBehavior\n\
     1\tZoom out by a factor of 2\n\
     2\tDraw paint rectangle\n\
     3\tZoom in by a factor of 2" }
d870 9
a878 9
	{ { summary "Enter raytrace rectangle mode.\n\
If the framebuffer is active, the rectangular area as\n\
specified by the user is raytraced. The rectangular area\n\
is also painted with the contents of the framebuffer.
Otherwise, only the rectangle is drawn.\n\n\
Mouse Button\tBehavior\n\
     1\tZoom out by a factor of 2\n\
     2\tDraw raytrace rectangle\n\
     3\tZoom in by a factor of 2" }
d884 9
a892 7
	{ { summary "Enter zoom rectangle mode.\n\
The rectangular area as specified by the user is used\n\
to zoom the view.\n\n\
Mouse Button\tBehavior\n\
     1\tZoom out by a factor of 2\n\
     2\tDraw zoom rectangle\n\
     3\tZoom in by a factor of 2" }
d898 8
a905 8
	{ { summary "Enter query ray mode.\n\
In this mode, the mouse is used to fire rays. The data\n\
from the fired rays can be viewed textually, graphically\n\
or both.\n\n\
Mouse Button\tBehavior\n\
     1\tZoom out by a factor of 2\n\
     2\tFire query ray\n\
     3\tZoom in by a factor of 2" }
d911 16
a926 17
	{ { summary "Enter solid edit ray mode.\n\
In this mode, the mouse is used to fire rays for selecting\n\
a solid to edit. If more than one solid was hit, a menu of the\n\
hit solids is presented. The user then selects a solid\n\
to edit from this menu. If a single solid was hit, it\n\
is selected for editing. If no solids were hit, a dialog is\n\
popped up saying that nothing was hit. The user must then fire another
ray to continue selecting a solid. When a solid is finally\n\
selected, solid edit mode is entered. When this happens, the mouse\n\
behavior mode is set to default mode. Note - When selecting items\n\
from a menu, a left buttonpress highlights the solid in question\n\
until the button is released. To select a solid, double click with\n\
the left mouse button.\n\n\
Mouse Button\tBehavior\n\
     1\tZoom out by a factor of 2\n\
     2\tFire solid edit ray\n\
     3\tZoom in by a factor of 2" }
d932 20
a951 20
	{ { summary "Enter matrix edit ray mode.\n\
In this mode, the mouse is used to fire rays for selecting\n\
a matrix to edit. If more than one solid was hit, a menu of the\n\
hit solids is presented. The user then selects a solid\n\
from this menu. If a single solid was hit, that solid is selected.\n\
If no solids were hit, a dialog is popped up saying that nothing was hit.\n\
The user must then fire another ray to continue selecting a matrix to edit.\n\
When a solid is finally selected, the user is presented with a menu consisting\n\
of the path components of the selected solid. From this menu, the\n\
user selects a path component. This component determines which\n\
matrix will be edited. After selecting the path component, object/matrix\n\
edit mode is entered. When this happens, the mouse behavior mode\n\
is set to default mode. Note - When selecting items\n\
from a menu, a left buttonpress highlights the solid/matrix in question\n\
until the button is released. To select a solid/matrix, double click with\n\
the left mouse button.\n\n\
Mouse Button\tBehavior\n\
     1\tZoom out by a factor of 2\n\
     2\tFire matrix edit ray\n\
     3\tZoom in by a factor of 2" }
d957 17
a973 17
	{ { summary "Enter combination edit ray mode.\n\
In this mode, the mouse is used to fire rays for selecting\n\
a combination to edit. If more than one combination was hit, a menu of the\n\
hit combinations is presented. The user then selects a combination\n\
from this menu. If a single combination was hit, that combination is selected.\n\
If no combinations were hit, a dialog is popped up saying that nothing was hit.\n\
The user must then fire another ray to continue selecting a combination to edit.\n\
When a combination is finally selected, the combination edit tool is presented\n\
and initialized with the values of the selected combination. When this happens,\n\
the mouse behavior mode is set to default mode. Note - When selecting items\n\
from a menu, a left buttonpress highlights the combination in question\n\
until the button is released. To select a combination, double click with\n\
the left mouse button.\n\n\
Mouse Button\t\t\tBehavior\n\
\t1\t\tZoom out by a factor of 2\n\
\t2\t\tFire combination edit ray\n\
\t3\t\tZoom in by a factor of 2" }
d981 2
a982 2
	{ { summary "Set qray effects mode to 'text'. In this mode,\n\
only textual output is used to represent the results\n\
d989 2
a990 2
	{ { summary "Set qray effects mode to 'graphics'. In this mode,\n\
only graphical output is used to represent the results\n\
d997 2
a998 2
	{ { summary "Set qray effects mode to 'both'. In this mode,\n\
both textual and graphical output is used to represent the results\n\
d1007 2
a1008 2
	{ { summary "Set the active pane to be the upper left pane.\n\
Any interaction with the GUI that affects a pane/\"display manager\"\n\
d1014 2
a1015 2
	{ { summary "Set the active pane to be the upper right pane.\n\
Any interaction with the GUI that affects a pane/\"display manager\"\n\
d1021 2
a1022 2
	{ { summary "Set the active pane to be the lower left pane.\n\
Any interaction with the GUI that affects a pane/\"display manager\"\n\
d1028 2
a1029 2
	{ { summary "Set the active pane to be the lower right pane.\n\
Any interaction with the GUI that affects a pane/\"geometry window\"\n\
d1050 3
a1052 3
	{ { summary "Put the framebuffer in overlay mode. In this mode,\n\
the framebuffer data is placed in the pane after\n\
the geometry is drawn (i.e. the framebuffer data is\n\
d1059 3
a1061 3
	{ { summary "Put the framebuffer in underlay mode. In this mode,\n\
the framebuffer data is placed in the pane before\n\
the geometry is drawn (i.e. the geometry is drawn on\n\
d1075 3
a1077 3
	{ { summary "This activates/deactivates listening for clients.\n\
If the framebuffer is listening for clients, new data can\n\
be passed into the framebuffer. Otherwise, the framebuffer\n\
d1127 4
a1130 4
	{ { summary "Toggle drawing the grid. The grid is\n\
a lattice of points over the pane (geometry window).\n\
The regular spacing between the points gives the user\n\
accurate visual cues regarding dimension. This spacing\n\
d1137 4
a1140 4
	{ { summary "Toggle grid snapping. When snapping to grid,\n\
the internal routines that use the mouse pointer location,\n\
move/snap that location to the nearest grid point. This gives\n\
the user high accuracy with the mouse for transforming the\n\
d1148 2
a1149 2
	{ { summary "Set the grid spacing according to the current view size.\n\
The number of ticks will be between 20 and 200 in user units.\n\
d1155 1
a1155 1
	{ { summary "Pops up the grid spacing entry dialog. The user can\n\
d1162 1
a1162 1
	{ { summary "Set the horizontal and vertical tick spacing\n\
d1168 1
a1168 1
	{ { summary "Set the horizontal and vertical tick spacing\n\
d1174 1
a1174 1
	{ { summary "Set the horizontal and vertical tick spacing\n\
d1180 1
a1180 1
	{ { summary "Set the horizontal and vertical tick spacing\n\
d1186 1
a1186 1
	{ { summary "Set the horizontal and vertical tick spacing\n\
d1192 1
a1192 1
	{ { summary "Set the horizontal and vertical tick spacing\n\
d1199 1
a1199 1
	{ { summary "Set the horizontal and vertical tick spacing\n\
d1205 1
a1205 1
	{ { summary "Set the horizontal and vertical tick spacing\n\
d1211 1
a1211 1
	{ { summary "Set the horizontal and vertical tick spacing\n\
d1217 1
a1217 1
	{ { summary "Set the horizontal and vertical tick spacing\n\
d1223 1
a1223 1
	{ { summary "Set the horizontal and vertical tick spacing\n\
d1229 1
a1229 1
	{ { summary "Set the horizontal and vertical tick spacing\n\
d1235 1
a1235 1
	{ { summary "Set the horizontal and vertical tick spacing\n\
d1327 1
a1327 1
	{ { summary "Set the transform mode to VIEW. When in VIEW mode, the mouse\n\
d1334 5
a1338 4
	{ { summary "Set the transform mode to ADC. When in ADC mode, the mouse\n\
can be used to transform the angle distance cursor while\n\
the angle distance cursor is active. If the angle distance cursor\n\
is not active, the behavior is the same as VIEW mode." }
d1344 1
a1344 1
	{ { summary "Set the transform mode to OBJECT PARAMS. When in OBJECT PARAMS\n\
d1353 4
a1356 4
	{ { summary "Toggle drawing the grid. The grid is\n\
a lattice of points over the pane (geometry window).\n\
The regular spacing between the points gives the user\n\
accurate visual cues regarding dimension. This spacing\n\
d1363 4
a1366 4
	{ { summary "Toggle grid snapping. When snapping to grid,\n\
the internal routines that use the mouse pointer location,\n\
move/snap that location to the nearest grid point. This gives\n\
the user high accuracy with the mouse for transforming the\n\
d1380 3
a1382 3
	{ { summary "This activates/deactivates listening for clients.\n\
If the framebuffer is listening for clients, new data can\n\
be passed into the framebuffer. Otherwise, the framebuffer\n\
d1411 1
a1411 1
	{ { summary "Toggle between multipane and single pane mode. In\n\
d1417 6
a1422 6
	{ { summary "Toggle display of edit information.\n\
If in solid edit state, the edit information is\n\
displayed in the internal solid editor. This editor,\n\
as its name implies, can be used to edit the solid\n\
as well as view its contents. If in object edit\n\
state, the object information is displayed in a\n\
d1446 4
a1449 4
	{ { summary "Toggle rate knob mode. When in rate knob mode,\n\
transformation with the mouse becomes rate based.\n\
For example, if the user rotates the view about the\n\
X axis, the view continues to rotate about the X axis\n\
d1458 5
a1462 5
	{ { summary "Toggle display of the view axes. The view\n\
axes are used to give the user visual cues indicating\n\
the current view of model space. These axes are drawn\n\
the same as the model axes, except that the view axes'\n\
position is fixed in view space. This position as\n\
d1469 4
a1472 4
	{ { summary "Toggle display of the model axes. The model\n\
axes are used to give the user visual cues indicating\n\
the current view of model space. The model axes are by default\n\
located at the model origin and are fixed in model space.\n\
d1474 1
a1474 1
move in view space. The model axes position as well\n\
d1481 5
a1485 5
	{ { summary "Toggle display of the edit axes. The edit\n\
axes are used to give the user visual cues indicating\n\
how the edit is progressing. They consist of a pair of axes.\n\
One remains unmoved, while the other moves to indicate\n\
what has changed." }
d1543 1
a1543 1
	{ { summary "Tool for searching for information about\n\
d1565 8
a1572 1
	{ { summary "Tool for browsing the online MGED manual." } }
@


1.38
log
@*- use view_ring command
*- use tie command
*- use rset command
*- use share command
*- cleanup
@
text
@d101 15
d415 1
a415 1
menu .$id.menubar.file -tearoff $do_tearoffs
d417 3
d421 3
d425 3
d429 3
d433 2
d437 3
d445 3
d449 3
d453 1
a453 1
menu .$id.menubar.file.saveview -tearoff $do_tearoffs
d456 3
d461 3
d466 3
a468 2
#.$id.menubar.file.saveview add command -label "Ascii..." -underline 0\
#	-command "init_asciiTool $id"
d470 1
a470 1
menu .$id.menubar.file.pref -tearoff $do_tearoffs
d480 3
a482 4
#.$id.menubar.file.pref add cascade -label "Wireframe Highlight Color" -underline 0\
#	-menu .$id.menubar.file.pref.wireframe_highlight_color
#.$id.menubar.file.pref add cascade -label "Default Wireframe Color" -underline 0\
#	-menu .$id.menubar.file.pref.default_wireframe_color
d484 1
a484 1
menu .$id.menubar.file.pref.units -tearoff $do_tearoffs
d487 3
d492 3
d497 3
d502 3
d507 3
d513 3
d518 3
d523 3
d528 3
d532 1
a532 1
menu .$id.menubar.file.pref.cle -tearoff $do_tearoffs
d535 2
d539 2
d542 1
a542 1
menu .$id.menubar.file.pref.special_chars -tearoff $do_tearoffs
d545 2
d549 5
d555 1
a555 43
menu .$id.menubar.file.pref.wireframe_highlight_color -tearoff $do_tearoffs
.$id.menubar.file.pref.wireframe_highlight_color add command -label black -underline 0\
	-command "set wireframe_highlight_color {0 0 0}"
.$id.menubar.file.pref.wireframe_highlight_color add command -label white -underline 0\
	-command "set wireframe_highlight_color {255 255 255}"
.$id.menubar.file.pref.wireframe_highlight_color add command -label red -underline 0\
	-command "set wireframe_highlight_color {255 0 0}"
.$id.menubar.file.pref.wireframe_highlight_color add command -label green -underline 0\
	-command "set wireframe_highlight_color {0 255 0}"
.$id.menubar.file.pref.wireframe_highlight_color add command -label blue -underline 0\
	-command "set wireframe_highlight_color {0 0 255}"
.$id.menubar.file.pref.wireframe_highlight_color add command -label yellow -underline 0\
	-command "set wireframe_highlight_color {255 255 0}"
.$id.menubar.file.pref.wireframe_highlight_color add command -label cyan -underline 0\
	-command "set wireframe_highlight_color {0 255 255}"
.$id.menubar.file.pref.wireframe_highlight_color add command -label magenta -underline 0\
	-command "set wireframe_highlight_color {255 0 255}"
.$id.menubar.file.pref.wireframe_highlight_color add separator
.$id.menubar.file.pref.wireframe_highlight_color add command -label "Color Tool..." -underline 6\
	-command "chooseWireframeHighlightColor $id"

menu .$id.menubar.file.pref.default_wireframe_color -tearoff $do_tearoffs
.$id.menubar.file.pref.default_wireframe_color add command -label black -underline 0\
	-command "set default_wireframe_color {0 0 0}"
.$id.menubar.file.pref.default_wireframe_color add command -label white -underline 0\
	-command "set default_wireframe_color {255 255 255}"
.$id.menubar.file.pref.default_wireframe_color add command -label red -underline 0\
	-command "set default_wireframe_color {255 0 0}"
.$id.menubar.file.pref.default_wireframe_color add command -label green -underline 0\
	-command "set default_wireframe_color {0 255 0}"
.$id.menubar.file.pref.default_wireframe_color add command -label blue -underline 0\
	-command "set default_wireframe_color {0 0 255}"
.$id.menubar.file.pref.default_wireframe_color add command -label yellow -underline 0\
	-command "set default_wireframe_color {255 255 0}"
.$id.menubar.file.pref.default_wireframe_color add command -label cyan -underline 0\
	-command "set default_wireframe_color {0 255 255}"
.$id.menubar.file.pref.default_wireframe_color add command -label magenta -underline 0\
	-command "set default_wireframe_color {255 0 255}"
.$id.menubar.file.pref.default_wireframe_color add separator
.$id.menubar.file.pref.default_wireframe_color add command -label "Color Tool..." -underline 6\
	-command "chooseDefaultWireframeColor $id"

menu .$id.menubar.edit -tearoff $do_tearoffs
d558 2
d562 2
d567 2
d571 3
d575 1
a575 1
menu .$id.menubar.create -tearoff $do_tearoffs
d582 2
d586 2
d589 1
a589 4
menu .$id.menubar.create.solid -tearoff $do_tearoffs
#.$id.menubar.create.solid add command\
#	-label "Solid Creation Panel..." -underline 0 -command "solcreate $id"
#.$id.menubar.create.solid add separator
d594 4
d600 1
a600 1
menu .$id.menubar.view -tearoff $do_tearoffs
d603 3
d608 3
d613 3
d618 3
d623 3
d628 3
d633 3
d638 3
d644 3
d649 3
a651 5
.$id.menubar.view add separator
.$id.menubar.view add command -label "Save" -underline 0\
	-command "mged_apply $id \"press save\""
.$id.menubar.view add command -label "Restore" -underline 1\
	-command "mged_apply $id \"press restore\""
d655 3
d660 7
d669 3
d673 1
a673 1
menu .$id.menubar.viewring -tearoff $do_tearoffs
d675 3
d681 3
d685 3
d689 3
d693 2
a694 1
menu .$id.menubar.viewring.select -tearoff $do_tearoffs -postcommand "do_view_ring_labels $id"
d697 2
a698 1
menu .$id.menubar.viewring.delete -tearoff $do_tearoffs -postcommand "do_view_ring_labels $id"
d701 1
a701 1
menu .$id.menubar.settings -tearoff $do_tearoffs
d727 1
a727 1
menu .$id.menubar.settings.applyTo -tearoff $do_tearoffs
d730 3
d735 4
d741 5
d748 3
d752 1
a752 1
menu .$id.menubar.settings.mouse_behavior -tearoff $do_tearoffs
d756 7
d766 10
d779 11
d793 9
d805 10
d818 21
a838 2
.$id.menubar.settings.mouse_behavior add radiobutton -value o -variable mged_mouse_behavior($id)\
	-label "Object Edit Ray" -underline 0\
d840 22
d865 19
d885 1
a885 1
menu .$id.menubar.settings.qray -tearoff $do_tearoffs
d889 5
d897 5
d905 5
d911 1
a911 1
menu .$id.menubar.settings.mpane -tearoff $do_tearoffs
d915 4
d922 4
d929 4
d936 4
d941 1
a941 1
menu .$id.menubar.settings.fb -tearoff $do_tearoffs
d945 3
d951 3
d958 6
d967 6
d977 3
d983 7
a989 21

#menu .$id.menubar.settings.bgColor -tearoff $do_tearoffs
#.$id.menubar.settings.bgColor add command -label black -underline 0\
#	-command "mged_apply $id \"dm bg 0 0 0\""
#.$id.menubar.settings.bgColor add command -label white -underline 0\
#	-command "mged_apply $id \"dm bg 255 255 255\""
#.$id.menubar.settings.bgColor add command -label red -underline 0\
#	-command "mged_apply $id \"dm bg 255 0 0\""
#.$id.menubar.settings.bgColor add command -label green -underline 0\
#	-command "mged_apply $id \"dm bg 0 255 0\""
#.$id.menubar.settings.bgColor add command -label blue -underline 0\
#	-command "mged_apply $id \"dm bg 0 0 255\""
#.$id.menubar.settings.bgColor add command -label yellow -underline 0\
#	-command "mged_apply $id \"dm bg 255 255 0\""
#.$id.menubar.settings.bgColor add command -label cyan -underline 0\
#	-command "mged_apply $id \"dm bg 0 255 255\""
#.$id.menubar.settings.bgColor add command -label magenta -underline 0\
#	-command "mged_apply $id \"dm bg 255 0 255\""
#.$id.menubar.settings.bgColor add separator
#.$id.menubar.settings.bgColor add command -label "Color Tool..." -underline 6\
#	-command "choosePaneColor $id"
d991 1
a991 1
menu .$id.menubar.settings.vap -tearoff $do_tearoffs
d995 3
d1001 3
d1007 3
d1013 3
d1019 3
d1023 1
a1023 1
menu .$id.menubar.settings.grid -tearoff $do_tearoffs
d1026 3
d1032 10
d1045 7
a1051 3
.$id.menubar.settings.grid add checkbutton -offvalue 0 -onvalue 1 -variable mged_grid($id,draw)\
	-label "Draw Grid" -underline 0\
	-command "mged_apply $id \"rset grid draw \$mged_grid($id,draw)\""
d1053 1
a1053 1
menu .$id.menubar.settings.grid.spacing -tearoff $do_tearoffs
d1056 5
d1063 4
d1070 4
d1076 4
d1082 4
d1088 4
d1094 4
d1100 4
d1107 4
d1113 4
d1119 4
d1125 4
d1131 4
d1137 4
d1143 9
a1151 2

menu .$id.menubar.settings.grid_spacing -tearoff $do_tearoffs
d1185 1
a1185 1
menu .$id.menubar.settings.coord -tearoff $do_tearoffs
d1189 3
d1195 3
d1201 3
d1205 1
a1205 1
menu .$id.menubar.settings.origin -tearoff $do_tearoffs
d1209 3
d1215 3
d1221 3
d1227 3
d1231 1
a1231 1
menu .$id.menubar.settings.transform -tearoff $do_tearoffs
d1235 4
d1242 6
d1251 4
d1256 1
a1256 1
menu .$id.menubar.modes -tearoff $do_tearoffs
d1260 7
d1270 7
d1281 3
d1287 7
d1298 3
d1304 3
d1310 3
d1318 3
d1324 8
d1335 2
d1341 2
d1346 2
d1353 7
d1361 1
a1361 1
menu .$id.menubar.modes.axes -tearoff $do_tearoffs
d1365 8
d1376 9
d1388 7
d1396 1
a1396 1
menu .$id.menubar.tools -tearoff $do_tearoffs
d1399 3
d1404 3
d1409 7
d1419 2
d1423 2
d1429 2
d1436 1
a1436 1
menu .$id.menubar.help -tearoff $do_tearoffs
d1439 4
a1442 2
.$id.menubar.help add command -label "On Context" -underline 0\
	-command "on_context_help $id"
d1445 3
d1450 4
d1472 2
d1484 1
a1484 1
hoc_create_label_binding .$id.status.cent "View Center"\
d1488 1
a1488 1
hoc_create_label_binding .$id.status.size "View Size"\
d1492 2
a1493 2
hoc_create_label_binding .$id.status.units "Units"\
	{ { summary "     This indicates the local units.     " }
d1496 1
a1496 1
hoc_create_label_binding .$id.status.aet "View Orientation"\
d1500 1
a1500 1
hoc_create_label_binding .$id.status.ang "Rateknobs"\
d1504 1
a1504 1
hoc_create_label_binding .$id.status.illum.label "Status Area"\
d1528 1
a1528 1
hoc_create_binding .$id.t "Command Window" { { summary "Enter commands here!" } }
d1643 1
a1643 1
if {[info procs mged_MenuFirstEntry] == ""} {
d1645 1
a1645 1
    mged_MenuFirstEntry ""
@


1.37
log
@*- mods to use color schemes
@
text
@d23 1
a23 1
check_externs "_mged_attach _mged_aim _mged_add_view _mged_delete_view _mged_get_view _mged_goto_view _mged_next_view _mged_prev_view _mged_toggle_view"
d124 1
a124 2
    global mged_grid_draw
    global mged_grid_snap
d132 1
a132 4
    global mged_v_axes_pos
    global mged_v_axes
    global mged_m_axes
    global mged_e_axes
a133 1
    global mged_grid_control
a320 1
set mged_grid_control($id) 0
d582 1
a582 1
.$id.menubar.viewring add command -label "Add View" -underline 0 -command "do_add_view $id"
d585 3
a587 3
.$id.menubar.viewring add command -label "Next View" -underline 0 -command "do_next_view $id"
.$id.menubar.viewring add command -label "Prev View" -underline 0 -command "do_prev_view $id"
.$id.menubar.viewring add command -label "Last View" -underline 0 -command "do_toggle_view $id"
d726 1
a726 1
.$id.menubar.settings.vap add radiobutton -value 0 -variable mged_v_axes_pos($id)\
d728 2
a729 2
	-command "mged_apply $id \"set v_axes_pos {0 0}\""
.$id.menubar.settings.vap add radiobutton -value 1 -variable mged_v_axes_pos($id)\
d731 2
a732 2
	-command "mged_apply $id \"set v_axes_pos {-1750 -1750}\""
.$id.menubar.settings.vap add radiobutton -value 2 -variable mged_v_axes_pos($id)\
d734 2
a735 2
	-command "mged_apply $id \"set v_axes_pos {-1750 1750}\""
.$id.menubar.settings.vap add radiobutton -value 3 -variable mged_v_axes_pos($id)\
d737 2
a738 2
	-command "mged_apply $id \"set v_axes_pos {1750 1750}\""
.$id.menubar.settings.vap add radiobutton -value 4 -variable mged_v_axes_pos($id)\
d740 1
a740 1
	-command "mged_apply $id \"set v_axes_pos {1750 -1750}\""
a744 2
#.$id.menubar.settings.grid add command -label "Color..." -underline 0\
#	-command "do_grid_color $id"
d748 1
a748 1
.$id.menubar.settings.grid add checkbutton -offvalue 0 -onvalue 1 -variable mged_grid_snap($id)\
d750 2
a751 2
	-command "mged_apply $id \"set grid_snap \$mged_grid_snap($id)\""
.$id.menubar.settings.grid add checkbutton -offvalue 0 -onvalue 1 -variable mged_grid_draw($id)\
d753 1
a753 1
	-command "mged_apply $id \"set grid_draw \$mged_grid_draw($id)\""
d757 1
a757 1
	-command "grid_control_autosize $id; grid_spacing_apply $id b"
d791 1
a791 1
	-command "grid_control_autosize $id; grid_spacing_apply $id b"
d860 1
a860 1
.$id.menubar.modes add checkbutton -offvalue 0 -onvalue 1 -variable mged_grid_draw($id)\
d862 2
a863 2
	-command "mged_apply $id \"set grid_draw \$mged_grid_draw($id)\""
.$id.menubar.modes add checkbutton -offvalue 0 -onvalue 1 -variable mged_grid_snap($id)\
d865 1
a865 1
	-command "mged_apply $id \"set grid_snap \$mged_grid_snap($id)\""
d876 1
a876 1
	-command "mged_apply $id \"set rubber_band \$mged_rubber_band($id)\""
d909 2
a910 2
	-variable mged_v_axes($id) -label "View" -underline 0\
	-command "mged_apply $id \"set v_axes \$mged_v_axes($id)\""
d912 2
a913 2
	-variable mged_m_axes($id) -label "Model" -underline 0\
	-command "mged_apply $id \"set m_axes \$mged_m_axes($id)\""
d915 2
a916 2
	-variable mged_e_axes($id) -label "Edit" -underline 0\
	-command "mged_apply $id \"set e_axes \$mged_e_axes($id)\""
d1142 2
a1143 2
aim $id $mged_active_dm($id)
cs_set active 1
d1157 3
a1159 3
share_menu $mged_top($id).ul $mged_top($id).ur
share_menu $mged_top($id).ul $mged_top($id).ll
share_menu $mged_top($id).ul $mged_top($id).lr
d1171 1
a1171 1
mged_apply_local $id "cs_set active \[cs_set active\]"
a1284 9
    global mged_adc_draw
    global m_axes
    global mged_m_axes
    global v_axes
    global mged_v_axes
    global v_axes_pos
    global mged_v_axes_pos
    global e_axes
    global mged_e_axes
a1294 2
    global rubber_band
    global mged_rubber_band
a1302 4
    global grid_draw
    global mged_grid_draw
    global grid_snap
    global mged_grid_snap
d1305 4
d1313 3
a1315 3
    set mged_m_axes($id) $m_axes
    set mged_v_axes($id) $v_axes
    set mged_e_axes($id) $e_axes
d1320 1
a1320 1
    set mged_rubber_band($id) $rubber_band
d1325 2
a1326 2
    set mged_grid_draw($id) $grid_draw
    set mged_grid_snap($id) $grid_snap
d1341 1
a1341 2
    global v_axes_pos
    global mged_v_axes_pos
d1343 3
a1345 2
    set hpos [lindex $v_axes_pos 0]
    set vpos [lindex $v_axes_pos 1]
d1348 1
a1348 1
	set mged_v_axes_pos($id) 0
d1350 1
a1350 1
	set mged_v_axes_pos($id) 1
d1352 1
a1352 1
	set mged_v_axes_pos($id) 2
d1354 1
a1354 1
	set mged_v_axes_pos($id) 3
d1356 1
a1356 1
	set mged_v_axes_pos($id) 4
d1453 1
a1453 1
	catch { share_view $ow $nw }
d1476 1
a1476 1
    catch {unshare_view $w}
d1494 1
a1494 1
proc aim args {
d1496 7
a1502 1
	if ![winfo exists .[lindex $args 0]] {
d1507 1
a1507 1
    set result [eval _mged_aim $args]
d1510 1
a1510 1
	reconfig_gui_default [lindex $args 0]
d1544 1
a1544 1
    cs_set active 0
d1551 1
a1551 1
    cs_set active 1
d1556 1
a1556 1
    set view_ring($id) [get_view]
d1558 1
a1558 1
    aim $id $mged_active_dm($id)
d1722 1
a1722 1
proc do_add_view { id } {
d1734 1
a1734 1
    _mged_add_view
d1743 1
a1743 1
		set view_ring($cid) [get_view]
d1749 1
a1749 1
	set view_ring($id) [get_view]
d1753 1
a1753 1
proc do_delete_view { id vid } {
d1765 1
a1765 1
    _mged_delete_view $vid
d1774 1
a1774 1
		set view_ring($cid) [get_view]
d1780 1
a1780 1
	set view_ring($id) [get_view]
d1784 1
a1784 1
proc do_goto_view { id vid } {
d1796 1
a1796 1
    _mged_goto_view $vid
d1810 1
a1810 1
proc do_next_view { id } {
d1822 1
a1822 1
    _mged_next_view
d1829 1
a1829 1
		set view_ring($cid) [get_view]
d1833 1
a1833 1
	set view_ring($id) [get_view]
d1837 1
a1837 1
proc do_prev_view { id } {
d1849 1
a1849 1
    _mged_prev_view
d1856 1
a1856 1
		set view_ring($cid) [get_view]
d1860 1
a1860 1
	set view_ring($id) [get_view]
d1864 1
a1864 1
proc do_toggle_view { id } {
d1876 1
a1876 1
    _mged_toggle_view
d1883 1
a1883 1
		set view_ring($cid) [get_view]
d1887 1
a1887 1
	set view_ring($id) [get_view]
d1894 1
a1894 1
    set views [get_view -a]
d1902 1
a1902 1
		    -label [lindex $views $i] -command "do_goto_view $id [lindex $views $i]"
d1909 1
a1909 1
		    -command "do_delete_view $id [lindex $views $i]"
d1921 2
a1922 2
    set save_view [get_view]
    set views [get_view -a]
d1928 1
a1928 1
	goto_view [lindex $views $i]
d1940 1
a1940 1
    goto_view $save_view
d1990 14
a2003 14
    bind $mged_top($id).ul <Control-n> "winset $mged_top($id).ul; do_next_view $id; break" 
    bind $mged_top($id).ur <Control-n> "winset $mged_top($id).ur; do_next_view $id; break" 
    bind $mged_top($id).ll <Control-n> "winset $mged_top($id).ll; do_next_view $id; break" 
    bind $mged_top($id).lr <Control-n> "winset $mged_top($id).lr; do_next_view $id; break" 

    bind $mged_top($id).ul <Control-p> "winset $mged_top($id).ul; do_prev_view $id; break" 
    bind $mged_top($id).ur <Control-p> "winset $mged_top($id).ur; do_prev_view $id; break" 
    bind $mged_top($id).ll <Control-p> "winset $mged_top($id).ll; do_prev_view $id; break" 
    bind $mged_top($id).lr <Control-p> "winset $mged_top($id).lr; do_prev_view $id; break" 

    bind $mged_top($id).ul <Control-t> "winset $mged_top($id).ul; do_toggle_view $id; break" 
    bind $mged_top($id).ur <Control-t> "winset $mged_top($id).ur; do_toggle_view $id; break" 
    bind $mged_top($id).ll <Control-t> "winset $mged_top($id).ll; do_toggle_view $id; break" 
    bind $mged_top($id).lr <Control-t> "winset $mged_top($id).lr; do_toggle_view $id; break" 
@


1.36
log
@*- mods to toggle_edit_info
@
text
@d31 4
d175 1
d438 7
a444 4
.$id.menubar.file.pref add cascade -label "Wireframe Highlight Color" -underline 0\
	-menu .$id.menubar.file.pref.wireframe_highlight_color
.$id.menubar.file.pref add cascade -label "Default Wireframe Color" -underline 0\
	-menu .$id.menubar.file.pref.default_wireframe_color
d622 2
a623 2
.$id.menubar.settings add cascade -label "Pane Background Color" -underline 5\
	-menu .$id.menubar.settings.bgColor
d710 20
a729 20
menu .$id.menubar.settings.bgColor -tearoff $do_tearoffs
.$id.menubar.settings.bgColor add command -label black -underline 0\
	-command "mged_apply $id \"dm bg 0 0 0\""
.$id.menubar.settings.bgColor add command -label white -underline 0\
	-command "mged_apply $id \"dm bg 255 255 255\""
.$id.menubar.settings.bgColor add command -label red -underline 0\
	-command "mged_apply $id \"dm bg 255 0 0\""
.$id.menubar.settings.bgColor add command -label green -underline 0\
	-command "mged_apply $id \"dm bg 0 255 0\""
.$id.menubar.settings.bgColor add command -label blue -underline 0\
	-command "mged_apply $id \"dm bg 0 0 255\""
.$id.menubar.settings.bgColor add command -label yellow -underline 0\
	-command "mged_apply $id \"dm bg 255 255 0\""
.$id.menubar.settings.bgColor add command -label cyan -underline 0\
	-command "mged_apply $id \"dm bg 0 255 255\""
.$id.menubar.settings.bgColor add command -label magenta -underline 0\
	-command "mged_apply $id \"dm bg 255 0 255\""
.$id.menubar.settings.bgColor add separator
.$id.menubar.settings.bgColor add command -label "Color Tool..." -underline 6\
	-command "choosePaneColor $id"
d751 2
a752 2
.$id.menubar.settings.grid add command -label "Color..." -underline 0\
	-command "do_grid_color $id"
d1151 1
d1178 3
d1544 3
a1546 4
    if { 1 } {
	set vloc [string range $mged_dm_loc($id) 0 0]
	set hloc [string range $mged_dm_loc($id) 1 1]
	set tmp_dm $mged_top($id).$mged_dm_loc($id)
d1549 3
a1551 3
	if { $tmp_dm == $mged_active_dm($id) } {
	    return
	}
d1553 1
a1553 1
	trace vdelete mged_display($mged_active_dm($id),fps) w "ia_changestate $id"
d1555 3
a1557 10
	# unhighlight
	$mged_small_dmc($id) configure -bg #d9d9d9

	set mged_active_dm($id) $tmp_dm
	set mged_small_dmc($id) $mged_dmc($id).$vloc.$hloc
    } else {
	# unhighlight
	$mged_small_dmc($id) configure -bg #d9d9d9
	
	trace vdelete mged_display($mged_active_dm($id),fps) w "ia_changestate $id"
d1559 2
a1560 5
	set vloc [string range $mged_dm_loc($id) 0 0]
	set hloc [string range $mged_dm_loc($id) 1 1]
	set mged_active_dm($id) $mged_top($id).$mged_dm_loc($id)
	set mged_small_dmc($id) $mged_dmc($id).$vloc.$hloc
    }
d1562 3
a1564 2
    # highlight
    $mged_small_dmc($id) configure -bg yellow
@


1.35
log
@*- tweak the menus
@
text
@d526 1
a526 1
	-label "Make a Solid" -underline 0 -menu .$id.menubar.create.solid
d1384 3
a1386 1
	if {$mged_display(state) == "SOL EDIT" || $mged_display(state) == "OBJ EDIT"} {
d1390 5
a1394 1
	destroy_edit_info $id
a1399 1
    global edit_info
d1404 1
a1420 1
    global show_edit_info
a2063 8
    }
}

proc new_db_callback { dbname } {
    global mged_players

    foreach id $mged_players {
	set_wm_title $id $dbname
@


1.34
log
@*- add a few menu items
@
text
@d518 1
d526 4
a529 4
	-label "Solid" -underline 0 -menu .$id.menubar.create.solid
.$id.menubar.create add command\
	-label "Instance Creation Panel..." -underline 0 -command "icreate $id"
.$id.menubar.create add command -label "Solid Editor..." -underline 6 \
d535 3
a537 3
.$id.menubar.create.solid add command\
	-label "Solid Creation Panel..." -underline 0 -command "solcreate $id"
.$id.menubar.create.solid add separator
d934 4
a937 4
.$id.menubar.tools add separator
.$id.menubar.tools add checkbutton -offvalue 0 -onvalue 1 -variable buttons_on($id)\
	-label "Classic Menu Tool..." -underline 0\
	-command "toggle_button_menu $id"
@


1.33
log
@*- annotate the viewring menus with the current view before posting
@
text
@d514 1
a514 1
.$id.menubar.edit add command -label "Solid..." -underline 0 \
d516 1
a516 1
.$id.menubar.edit add command -label "Matrix..." -underline 0 \
d518 3
a520 1
.$id.menubar.edit add command -label "Combination..." -underline 0 \
d528 4
d925 3
a927 1
.$id.menubar.tools add command -label "Combination Edit Tool..." -underline 0\
d929 1
a929 1
.$id.menubar.tools add command -label "Color Edit Tool..." -underline 1\
d931 1
a931 1
	-title \"Color Edit Tool\"\
@


1.32
log
@*- some experimenting with "Help on context"
*- gui support for wireframe_highlight_color and
	default_wireframe_color
@
text
@d580 1
a580 1
menu .$id.menubar.viewring.select -tearoff $do_tearoffs
d583 1
a583 1
menu .$id.menubar.viewring.delete -tearoff $do_tearoffs
d1911 27
@


1.31
log
@*- move "View Axes Pos" back under "Settings"
@
text
@d433 4
d471 42
d922 3
a924 1
	-command "cadColorWidget tool .$id -title \"Color Edit Tool\" -initialcolor black"
d967 3
d971 3
d975 3
d979 3
d983 3
d987 2
d1011 1
d2060 5
a2064 1
    cadColorWidget dialog $mged_top($id) -title "Pane Color"\
d2066 2
a2067 2
	    -ok "pane_color_ok $id $mged_top($id).colorWidget"\
	    -cancel "pane_color_cancel $id $mged_top($id).colorWidget"
d2079 51
a2129 1
proc pane_color_cancel { id w } {
d2131 2
@


1.30
log
@*- mods to background color menu
*- disallow closing the last gui
@
text
@a430 2
.$id.menubar.file.pref add cascade -label "View Axes Position" -underline 0\
	-menu .$id.menubar.file.pref.vap
a460 17
menu .$id.menubar.file.pref.vap -tearoff $do_tearoffs
.$id.menubar.file.pref.vap add radiobutton -value 0 -variable mged_v_axes_pos($id)\
	-label "Center" -underline 0\
	-command "mged_apply $id \"set v_axes_pos {0 0}\""
.$id.menubar.file.pref.vap add radiobutton -value 1 -variable mged_v_axes_pos($id)\
	-label "Lower Left" -underline 2\
	-command "mged_apply $id \"set v_axes_pos {-1750 -1750}\""
.$id.menubar.file.pref.vap add radiobutton -value 2 -variable mged_v_axes_pos($id)\
	-label "Upper Left" -underline 6\
	-command "mged_apply $id \"set v_axes_pos {-1750 1750}\""
.$id.menubar.file.pref.vap add radiobutton -value 3 -variable mged_v_axes_pos($id)\
	-label "Upper Right" -underline 6\
	-command "mged_apply $id \"set v_axes_pos {1750 1750}\""
.$id.menubar.file.pref.vap add radiobutton -value 4 -variable mged_v_axes_pos($id)\
	-label "Lower Right" -underline 3\
	-command "mged_apply $id \"set v_axes_pos {1750 -1750}\""

d563 2
d669 17
@


1.29
log
@*- add gui to set display manager background color
*- append "break" to bindings
@
text
@d414 1
a414 1
.$id.menubar.file add command -label "Exit" -underline 0 -command quit
d580 1
a580 1
.$id.menubar.settings add cascade -label "Pane Background Color" -underline 0\
d667 1
a667 1
.$id.menubar.settings.bgColor add command -label black\
d669 1
a669 1
.$id.menubar.settings.bgColor add command -label white\
d671 1
a671 1
.$id.menubar.settings.bgColor add command -label red\
d673 1
a673 1
.$id.menubar.settings.bgColor add command -label green\
d675 1
a675 1
.$id.menubar.settings.bgColor add command -label blue\
d677 1
a677 1
.$id.menubar.settings.bgColor add command -label yellow\
d679 1
a679 1
.$id.menubar.settings.bgColor add command -label cyan\
d681 1
a681 1
.$id.menubar.settings.bgColor add command -label magenta\
d684 1
a684 1
.$id.menubar.settings.bgColor add command -label "Color Tool..."\
a1099 1

d1114 11
d1170 5
@


1.28
log
@*- call set_grid_spacing() with extra paramter (i.e. to apply or not)
*- using new cadColorWidget
@
text
@d580 2
d666 21
d945 1
a945 1
bind .$id.t <Enter> "focus .$id.t"
d1088 3
d1111 1
a1111 1
    # Prevent command window from resizing itself
d1879 14
a1892 14
    bind $mged_top($id).ul <Control-n> "winset $mged_top($id).ul; do_next_view $id" 
    bind $mged_top($id).ur <Control-n> "winset $mged_top($id).ur; do_next_view $id" 
    bind $mged_top($id).ll <Control-n> "winset $mged_top($id).ll; do_next_view $id" 
    bind $mged_top($id).lr <Control-n> "winset $mged_top($id).lr; do_next_view $id" 

    bind $mged_top($id).ul <Control-p> "winset $mged_top($id).ul; do_prev_view $id" 
    bind $mged_top($id).ur <Control-p> "winset $mged_top($id).ur; do_prev_view $id" 
    bind $mged_top($id).ll <Control-p> "winset $mged_top($id).ll; do_prev_view $id" 
    bind $mged_top($id).lr <Control-p> "winset $mged_top($id).lr; do_prev_view $id" 

    bind $mged_top($id).ul <Control-t> "winset $mged_top($id).ul; do_toggle_view $id" 
    bind $mged_top($id).ur <Control-t> "winset $mged_top($id).ur; do_toggle_view $id" 
    bind $mged_top($id).ll <Control-t> "winset $mged_top($id).ll; do_toggle_view $id" 
    bind $mged_top($id).lr <Control-t> "winset $mged_top($id).lr; do_toggle_view $id" 
d1969 30
@


1.27
log
@*- mods to gui_create_default
@
text
@d686 1
a686 1
	-command "set_grid_spacing $id micrometer"
d688 1
a688 1
	-command "set_grid_spacing $id millimeter"
d690 1
a690 1
	-command "set_grid_spacing $id centimeter"
d692 1
a692 1
	-command "set_grid_spacing $id decimeter"
d694 1
a694 1
	-command "set_grid_spacing $id meter"
d696 1
a696 1
	-command "set_grid_spacing $id kilometer"
d699 1
a699 1
	-command "set_grid_spacing $id \"1/10 inch\""
d701 1
a701 1
	-command "set_grid_spacing $id \"1/4 inch\""
d703 1
a703 1
	-command "set_grid_spacing $id \"1/2 inch\""
d705 1
a705 1
	-command "set_grid_spacing $id inch"
d707 1
a707 1
	-command "set_grid_spacing $id foot"
d709 1
a709 1
	-command "set_grid_spacing $id yard"
d711 1
a711 1
	-command "set_grid_spacing $id mile"
d720 1
a720 1
	-command "set_grid_spacing $id micrometer"
d722 1
a722 1
	-command "set_grid_spacing $id millimeter"
d724 1
a724 1
	-command "set_grid_spacing $id centimeter"
d726 1
a726 1
	-command "set_grid_spacing $id decimeter"
d728 1
a728 1
	-command "set_grid_spacing $id meter"
d730 1
a730 1
	-command "set_grid_spacing $id kilometer"
d733 1
a733 1
	-command "set_grid_spacing $id \"1/10 inch\""
d735 1
a735 1
	-command "set_grid_spacing $id \"1/4 inch\""
d737 1
a737 1
	-command "set_grid_spacing $id \"1/2 inch\""
d739 1
a739 1
	-command "set_grid_spacing $id inch"
d741 1
a741 1
	-command "set_grid_spacing $id foot"
d743 1
a743 1
	-command "set_grid_spacing $id yard"
d745 1
a745 1
	-command "set_grid_spacing $id mile"
d849 2
a850 1
.$id.menubar.tools add command -label "Combination Edit Panel..." -underline 0\
d852 2
d856 1
a856 1
	-label "Button Menu..." -underline 0\
@


1.26
log
@*- mods for pjt's demo
@
text
@d406 1
d539 1
a539 1
	-underline 6 -command "mged_apply $id \"press reset\""
d541 1
a541 1
	-underline 6 -command "set_default_views $id"
d964 3
a966 1
	grid $mged_dmc($id) -sticky nsew -row 0 -column 0
d974 3
a977 2
    grid .$id.tf -sticky "nsew" -row 1 -column 0

d997 4
a1000 1
    grid .$id.status -sticky "ew" -row 2 -column 0
d1072 8
a1079 1
if { !$comb } {
d1081 2
d1876 1
a1876 1
	    set mged_adc_draw($id) [adc draw]
a1884 58
}

proc mged_apply { id cmd } {
    global mged_active_dm
    global mged_dm_loc
    global mged_apply_to

    if {$mged_apply_to($id) == 1} {
	mged_apply_local $id $cmd
    } elseif {$mged_apply_to($id) == 2} {
	mged_apply_using_list $id $cmd
    } elseif {$mged_apply_to($id) == 3} {
	mged_apply_all $cmd
    } else {
	winset $mged_active_dm($id)
	catch [list uplevel #0 $cmd]
    }
}

proc mged_apply_local { id cmd } {
    global mged_top
    global mged_active_dm

    winset $mged_top($id).ul
    catch [list uplevel #0 $cmd]

    winset $mged_top($id).ur
    catch [list uplevel #0 $cmd]

    winset $mged_top($id).ll
    catch [list uplevel #0 $cmd]

    winset $mged_top($id).lr
    catch [list uplevel #0 $cmd] msg

    winset $mged_active_dm($id)

    return $msg
}

proc mged_apply_using_list { id cmd } {
    global mged_apply_list

    foreach dm $mged_apply_list($id) {
	winset $dm
	catch [list uplevel #0 $cmd] msg
    }

    return $msg
}

proc mged_apply_all { cmd } {
    foreach dm [get_dm_list] {
	winset $dm
	catch [list uplevel #0 $cmd] msg
    }

    return $msg
@


1.25
log
@*- checkin for pjt's demo
@
text
@d962 1
a962 1
    if { !$comb || ($comb && $mged_show_dm($id)) } {
d971 2
a972 3
    if { !$comb || ($comb && $mged_show_cmd($id)) } {
	grid .$id.tf -sticky "nsew" -row 1 -column 0
    }
d993 1
a993 4

    if { !$comb || ($comb && $mged_show_status($id)) } {
	grid .$id.status -sticky "ew" -row 2 -column 0
    }
@


1.24
log
@*- mods for pjt demo
@
text
@d962 1
a962 1
    if {$comb && $mged_show_dm($id)} {
d971 1
a971 1
    if { $mged_show_cmd($id) } {
d995 1
a995 1
    if { $mged_show_status($id) } {
@


1.23
log
@checkin for pjt/jra demo
@
text
@d31 2
a32 2
if ![info exists bob_testing] {
    set bob_testing 0
d170 1
a170 1
    global bob_testing
a295 1
set mged_comb($id) $comb
d316 1
d416 1
a416 1
.$id.menubar.file.saveview add command -label "RT script" -underline 0\
d418 1
a418 1
.$id.menubar.file.saveview add command -label "Plot" -underline 1\
d420 1
a420 1
.$id.menubar.file.saveview add command -label "PostScript" -underline 0\
d422 2
d593 1
a593 1
	-command "mged_apply $id \"set mouse_behavior \$mged_mouse_behavior($id)\""
d596 1
a596 1
	-command "mged_apply $id \"set mouse_behavior \$mged_mouse_behavior($id)\""
d599 1
a599 1
	-command "mged_apply $id \"set mouse_behavior \$mged_mouse_behavior($id)\""
d602 1
a602 1
	-command "mged_apply $id \"set mouse_behavior \$mged_mouse_behavior($id)\""
d605 1
a605 1
	-command "mged_apply $id \"set mouse_behavior \$mged_mouse_behavior($id)\""
d608 1
a608 1
	-command "mged_apply $id \"set mouse_behavior \$mged_mouse_behavior($id)\""
d611 1
a611 1
	-command "mged_apply $id \"set mouse_behavior \$mged_mouse_behavior($id)\""
d614 1
a614 1
	-command "mged_apply $id \"set mouse_behavior \$mged_mouse_behavior($id)\""
d783 3
a785 3
.$id.menubar.modes add checkbutton -offvalue 0 -onvalue 1 -variable mged_rateknobs($id)\
	-label "Rateknobs" -underline 0\
	-command "mged_apply $id \"set rateknobs \$mged_rateknobs($id)\""
d790 7
a796 3
.$id.menubar.modes add checkbutton -offvalue 0 -onvalue 1 -variable mged_grid_draw($id)\
	-label "Draw Grid" -underline 0\
	-command "mged_apply $id \"set grid_draw \$mged_grid_draw($id)\""
a808 7
.$id.menubar.modes add checkbutton -offvalue 0 -onvalue 1 -variable mged_fb($id)\
	-label "Framebuffer Active" -underline 0 \
	-command "set_fb $id; update_Raytrace $id"
.$id.menubar.modes add checkbutton -offvalue 0 -onvalue 1 -variable mged_listen($id)\
	-label "Listen For Clients" -underline 0\
	-command "set_listen $id" -state disabled
.$id.menubar.modes add separator
d825 4
d903 6
a908 2
if {$bob_testing} {
    text .$id.t -height $mged_num_lines($id) -relief sunken -bd 2 -yscrollcommand ".$id.s set"
d949 1
a949 1
if { $bob_testing } {
a959 1
#setmv $id
d961 2
a962 2
if { $bob_testing } {
    if {$comb} {
d970 4
a973 1
    grid .$id.tf -sticky "nsew" -row 1 -column 0
a993 1
    grid .$id.status -sticky "ew"
d995 4
d1000 1
a1000 1
    if {$comb} {
d1005 3
a1007 2
	grid rowconfigure .$id 0 -weight 1
	grid rowconfigure .$id 1 -weight 0
a1039 5
if {$comb} {
#    set_dm_win $id
#    set_cmd_win $id
}

d1064 10
d1394 1
a1394 1
    global bob_testing
d1437 1
a1437 1
	if { $bob_testing } {
d1448 1
a1448 1
	if { $bob_testing } {
d1501 1
d1504 1
d1506 1
a1506 1
    global bob_testing
d1509 1
a1509 1
	if { $bob_testing } {
d1511 1
d1513 2
a1517 1
#	    setmv $id
d1524 1
a1524 1
	if {$bob_testing} {
d1526 7
a1532 1
#	    setmv $id
d1548 1
a1548 1
    global bob_testing
d1551 1
a1551 1
	if { $bob_testing } {
a1558 1
	    setmv $id
d1565 2
d1576 1
a1576 1
	if { $bob_testing } {
d1581 1
a1581 2
	    set tmp_font [lindex [.$id.t configure -font] 4]
	    set fh [font metrics $tmp_font -linespace]
d1793 1
d1796 4
a1799 4
	pack .$id.status -side bottom -anchor w

	if {[winfo ismapped .$id.tf]} {
	    .$id.t configure -height 6
d1802 5
a1806 2
	pack forget .$id.status
	.$id.t configure -height 9
d1952 1
a1952 1
	.$id.menubar.modes entryconfigure 10 -state normal
d1957 1
a1957 1
	.$id.menubar.modes entryconfigure 10 -state disabled
d1968 18
@


1.22
log
@*- use dm_insert_char_flag as an array
*- mods to reflect a few name changes
@
text
@d75 1
a75 1
if {![info exists mged_default_dt] || $mged_default_dt == ""} {
d87 4
d109 1
d142 1
d152 1
a152 1
    global multi_view
d155 3
a157 3
    global cmd_win
    global dm_win
    global status_bar
d169 1
d172 4
d296 1
d317 3
a319 3
set cmd_win($id) $scw
set dm_win($id) $sgw
set status_bar($id) 1
d323 1
d430 2
a431 5
.$id.menubar.file.pref add separator
.$id.menubar.file.pref add radiobutton -value 0 -variable glob_compat_mode\
	-label "Tcl Evaluation" -underline 0
.$id.menubar.file.pref add radiobutton -value 1 -variable glob_compat_mode\
	-label "Object Name Matching" -underline 0
d477 6
d484 1
a484 1
.$id.menubar.edit add command -label "Solid" -underline 0 \
d486 1
a486 1
.$id.menubar.edit add command -label "Matrix" -underline 0 \
d488 1
a488 1
.$id.menubar.edit add command -label "Combination" -underline 0 \
d492 4
a495 2
.$id.menubar.create add cascade -label "Solid" -underline 0 -menu .$id.menubar.create.solid
.$id.menubar.create add command -label "Instance Creation Panel" -underline 0 -command "icreate $id"
d498 2
a499 1
.$id.menubar.create.solid add command -label "Solid Creation Panel" -underline 0 -command "solcreate $id"
d503 1
a503 1
    .$id.menubar.create.solid add command -label $solid_type\
d535 1
a535 1
.$id.menubar.view add command -label "Reset Viewsize"\
d537 2
d636 1
a636 1
	-label "Lower right" -underline 3\
d656 1
a656 1
	-command "set_fb $id"
d662 1
a662 1
.$id.menubar.settings.grid add command -label "Anchor" -underline 0\
d664 1
a664 1
.$id.menubar.settings.grid add command -label "Color" -underline 0\
d679 1
a679 1
.$id.menubar.settings.grid.spacing add command -label "Arbitrary" -underline 1\
d713 1
a713 1
.$id.menubar.settings.grid_spacing add command -label "Arbitrary" -underline 1\
d805 1
a805 1
	-command "set_fb $id"
d810 1
a810 1
.$id.menubar.modes add checkbutton -offvalue 0 -onvalue 1 -variable multi_view($id)\
d815 1
a815 1
.$id.menubar.modes add checkbutton -offvalue 0 -onvalue 1 -variable status_bar($id)\
d819 1
a819 1
.$id.menubar.modes add checkbutton -offvalue 0 -onvalue 1 -variable cmd_win($id)\
d822 1
a822 1
.$id.menubar.modes add checkbutton -offvalue 0 -onvalue 1 -variable dm_win($id)\
d839 1
a839 1
.$id.menubar.tools add command -label "ADC Control Panel" -underline 0\
d841 1
a841 1
.$id.menubar.tools add command -label "Grid Control Panel" -underline 0\
d843 1
a843 1
.$id.menubar.tools add command -label "Query Ray Control Panel" -underline 0\
d845 1
a845 1
.$id.menubar.tools add command -label "Combination Edit Panel" -underline 0\
d849 1
a849 1
	-label "Button Menu" -underline 0\
d900 2
a901 2
if {$comb} {
    text .$id.t -width 10 -relief sunken -bd 2 -yscrollcommand ".$id.s set" -setgrid true
d903 5
a907 1
    text .$id.t -relief sunken -bd 2 -yscrollcommand ".$id.s set" -setgrid true
d943 1
a943 1
    grid $mged_active_dm($id) -in $mged_dmc($id) -sticky "nsew"
d946 4
d952 2
a953 3
if {$comb} {
    pack $mged_dmc($id) -side top -padx 2 -pady 2
}
d955 4
a958 2
set multi_view($id) $mged_default_mvmode
setmv $id
d960 48
a1007 10
pack .$id.status.cent .$id.status.size .$id.status.units .$id.status.aet\
	.$id.status.ang -in .$id.status.dpy -side left -anchor w
pack .$id.status.dpy -side top -anchor w -expand 1 -fill x
pack .$id.status.illum.label -side left -anchor w
pack .$id.status.illum -side top -anchor w -expand 1 -fill x
pack .$id.status -side bottom -anchor w -expand 1 -fill x

pack .$id.s -in .$id.tf -side right -fill y
pack .$id.t -in .$id.tf -side top -fill both -expand yes
pack .$id.tf -side top -fill both -expand yes
d1028 2
a1029 2
    set_dm_win $id
    set_cmd_win $id
d1049 2
d1061 1
a1061 1
    global multi_view
d1091 1
a1091 1
    set multi_view($id) 0
d1372 1
a1372 1
    global multi_view
d1417 1
a1417 1
    if {!$multi_view($id)} {
d1444 2
a1481 8
#proc do_last_visited { id } {
#    global mged_top
#    global slidersflag
#
#    unaim $id
#    wm title $mged_top($id) "MGED Graphics Window ($id) - Last Visited"
#}

d1483 2
a1484 1
    global cmd_win
d1486 1
d1488 13
a1500 4
    if {$cmd_win($id)} {
	set win_size($id) $win_size($id,small)
	setmv $id
	pack .$id.tf -side top -fill both -expand yes
d1502 8
a1509 3
	pack forget .$id.tf
	set win_size($id) $win_size($id,big)
	setmv $id
d1514 4
a1517 2
    global dm_win
    global cmd_win
d1519 1
d1522 16
a1537 4
    if {$dm_win($id)} {
	if {[winfo ismapped .$id.tf]} {
	    pack $mged_dmc($id) -side top -before .$id.tf -padx 2 -pady 2
	    .$id.t configure -width 10 -height 10
d1539 6
a1544 1
	    pack $mged_dmc($id) -side top -padx 2 -pady 2
d1547 19
a1565 2
	pack forget $mged_dmc($id)
	.$id.t configure -width 80 -height 85
d1764 1
a1764 1
    global status_bar
d1766 1
a1766 1
    if {$status_bar($id)} {
a1911 1
    global fb
@


1.21
log
@*- modified titles for the command and geometry windows
*- code to update the title bars if a new database is read in
*- initialize a few new variables in support of VI
@
text
@a34 4
if ![info exists dm_insert_char_flag] {
    set dm_insert_char_flag 0
}

d162 1
d889 1
d1669 1
a1669 1
    do_mouse_bindings $mged_top($id).ul
d1673 1
a1673 1
    do_mouse_bindings $mged_top($id).ur
d1677 1
a1677 1
    do_mouse_bindings $mged_top($id).ll
d1681 1
a1681 1
    do_mouse_bindings $mged_top($id).lr
d1719 1
a1719 1
	    do_mouse_bindings [winset]
@


1.20
log
@*- moved/removed some menus/items
*- added some menus/items
@
text
@d160 1
d165 1
d903 1
d908 1
d946 1
d983 2
a984 1
set_wm_title $id
d1376 2
a1377 1
    set_wm_title $id
d1380 1
a1380 1
proc set_wm_title { id } {
d1382 1
d1385 24
a1408 8
    if {$mged_dm_loc($id) == "ul"} {
	wm title $mged_top($id) "MGED Interaction Window ($id) - Upper Left"
    } elseif {$mged_dm_loc($id) == "ur"} {
	wm title $mged_top($id) "MGED Interaction Window ($id) - Upper Right"
    } elseif {$mged_dm_loc($id) == "ll"} {
	wm title $mged_top($id) "MGED Interaction Window ($id) - Lower Left"
    } elseif {$mged_dm_loc($id) == "lr"} {
	wm title $mged_top($id) "MGED Interaction Window ($id) - Lower Right"
d1412 7
a1418 7
proc do_last_visited { id } {
    global mged_top
    global slidersflag

    unaim $id
    wm title $mged_top($id) "MGED Interaction Window ($id) - Last Visited"
}
d1813 8
@


1.19
log
@*- using menubar instead of menubuttons with associated menus
@
text
@d79 1
a79 1
if ![info exists mged_default_dt] {
d160 1
d163 1
d383 2
a384 1
.$id.menubar add cascade -label "ViewRing" -underline 0 -menu .$id.menubar.viewring
a385 1
.$id.menubar add cascade -label "Settings" -underline 0 -menu .$id.menubar.settings
a386 1
.$id.menubar add cascade -label "Other" -underline 0 -menu .$id.menubar.other
d400 2
a401 2
.$id.menubar.file add command -label "Close" -underline 1 -command "gui_destroy_default $id"
.$id.menubar.file add command -label "Exit" -underline 3 -command quit
d418 5
d477 11
a487 2
.$id.menubar.create add command -label "Solid..." -underline 0 -command "solcreate $id"
.$id.menubar.create add command -label "Instance..." -underline 0 -command "icreate $id"
a535 8
menu .$id.menubar.modes -tearoff $do_tearoffs
.$id.menubar.modes add checkbutton -offvalue 0 -onvalue 1 -variable mged_rubber_band($id)\
	-label "Rubber Band Persistance" -underline 12\
	-command "mged_apply $id \"set rubber_band \$mged_rubber_band($id)\""
.$id.menubar.modes add checkbutton -offvalue 0 -onvalue 1 -variable mged_rateknobs($id)\
	-label "Rateknobs" -underline 0\
	-command "mged_apply $id \"set rateknobs \$mged_rateknobs($id)\""

d537 2
a544 2
.$id.menubar.settings add cascade -label "Mouse Behavior" -underline 0\
	-menu .$id.menubar.settings.mouse_behavior
d553 2
d646 1
a646 1
.$id.menubar.settings.grid add cascade -label "Spacing" -underline 0\
d649 3
d653 1
a653 1
	-label "Draw Grid" -underline 5\
a654 21
.$id.menubar.settings.grid add checkbutton -offvalue 0 -onvalue 1 -variable mged_grid_snap($id)\
	-label "Snap To Grid" -underline 3\
	-command "mged_apply $id \"set grid_snap \$mged_grid_snap($id)\""

#menu .$id.menubar.settings.grid.spacing -tearoff $do_tearoffs
#.$id.menubar.settings.grid.spacing add cascade -label "Metric" -underline 0\
#	-menu .$id.menubar.settings.grid.spacing.metric
#.$id.menubar.settings.grid.spacing add cascade -label "English" -underline 0\
#	-menu .$id.menubar.settings.grid.spacing.english
#.$id.menubar.settings.grid.spacing add command -label "Arbitrary" -underline 0\
#	-command "do_grid_spacing $id b"
#.$id.menubar.settings.grid.spacing add command -label "Autosize" -underline 1\
#	-command "grid_control_autosize $id; grid_spacing_apply $id b"
#.$id.menubar.settings.grid.spacing add command -label "Both" -underline 0\
#	-command "do_grid_spacing $id b"
#.$id.menubar.settings.grid.spacing add command -label "Horizontal" -underline 0\
#	-command "do_grid_spacing $id h"
#.$id.menubar.settings.grid.spacing add command -label "Vertical" -underline 0\
#	-command "do_grid_spacing $id v"
#.$id.menubar.settings.grid.spacing add command -label "Autosize" -underline 0\
#	-command "grid_control_autosize $id; grid_spacing_apply $id b"
d690 34
d760 31
a790 11
menu .$id.menubar.tools -tearoff $do_tearoffs
.$id.menubar.tools add command -label "ADC Control Panel" -underline 0\
	-command "init_adc_control $id"
.$id.menubar.tools add command -label "Grid Control Panel" -underline 0\
	-command "init_grid_control $id"
.$id.menubar.tools add command -label "Query Ray Control Panel" -underline 0\
	-command "init_qray_control $id"
.$id.menubar.tools add command -label "Combination Edit Panel" -underline 0\
	-command "init_comb $id"
.$id.menubar.tools add separator
.$id.menubar.tools add checkbutton -offvalue 0 -onvalue 1 -variable multi_view($id)\
d792 1
a792 1
.$id.menubar.tools add checkbutton -offvalue 0 -onvalue 1 -variable show_edit_info($id)\
d795 3
d799 2
a800 2
.$id.menubar.tools add checkbutton -offvalue 0 -onvalue 1 -variable cmd_win($id)\
	-label "Command Window" -underline 1\
d802 2
a803 2
.$id.menubar.tools add checkbutton -offvalue 0 -onvalue 1 -variable dm_win($id)\
	-label "Graphics Window" -underline 1\
a805 23
.$id.menubar.tools add checkbutton -offvalue 0 -onvalue 1 -variable status_bar($id)\
	-label "Status Bar" -underline 0\
	-command "toggle_status_bar $id"
.$id.menubar.tools add checkbutton -offvalue 0 -onvalue 1 -variable buttons_on($id)\
	-label "Button Menu" -underline 0\
	-command "toggle_button_menu $id"

menu .$id.menubar.other -tearoff $do_tearoffs
.$id.menubar.other add checkbutton -offvalue 0 -onvalue 1 -variable mged_grid_draw($id)\
	-label "Draw Grid" -underline 5\
	-command "mged_apply $id \"set grid_draw \$mged_grid_draw($id)\""
.$id.menubar.other add checkbutton -offvalue 0 -onvalue 1 -variable mged_fb($id)\
	-label "Framebuffer Active" -underline 0 \
	-command "set_fb $id"
.$id.menubar.other add checkbutton -offvalue 0 -onvalue 1 -variable mged_adc_draw($id)\
	-label "Angle/Dist Cursor" -underline 0 \
	-command "mged_apply $id \"adc draw \$mged_adc_draw($id)\""
.$id.menubar.other add checkbutton -offvalue 0 -onvalue 1 -variable mged_faceplate($id)\
	-label "Faceplate" -underline 2\
	-command "mged_apply $id \"set faceplate \$mged_faceplate($id)\""
.$id.menubar.other add separator
.$id.menubar.other add cascade -label "Axes" -underline 1\
	-menu .$id.menubar.other.axes
d807 2
a808 2
menu .$id.menubar.other.axes -tearoff $do_tearoffs
.$id.menubar.other.axes add checkbutton -offvalue 0 -onvalue 1\
d811 1
a811 1
.$id.menubar.other.axes add checkbutton -offvalue 0 -onvalue 1\
d814 1
a814 1
.$id.menubar.other.axes add checkbutton -offvalue 0 -onvalue 1\
d818 14
d901 1
d904 1
d1716 1
a1716 4
	if {$mged_dm_loc($id) != "lv"} {
	    winset $mged_active_dm($id)
	}

d1782 1
d1787 1
@


1.18
log
@*- add a few menus
*- move menu items around
*- shorten the menubutton names
@
text
@d326 1
a326 1
toplevel .$id -screen $screen
d376 25
a400 1
frame .$id.menubar -relief raised -bd 1
d402 2
a403 17
menubutton .$id.file -text "File" -underline 0 -menu .$id.file.m
menu .$id.file.m -tearoff $do_tearoffs
.$id.file.m add command -label "New..." -underline 0 -command "do_New $id"
.$id.file.m add command -label "Open..." -underline 0 -command "do_Open $id"
.$id.file.m add command -label "Insert..." -underline 0 -command "do_Concat $id"
.$id.file.m add command -label "Extract..." -underline 1 -command "init_extractTool $id"
.$id.file.m add separator
.$id.file.m add command -label "Raytrace..." -underline 0 -command "init_Raytrace $id"
.$id.file.m add cascade -label "Save View As" -underline 0 -menu .$id.file.m.cm_saveview
.$id.file.m add separator
.$id.file.m add cascade -label "Preferences" -underline 0 -menu .$id.file.m.cm_pref
.$id.file.m add separator
.$id.file.m add command -label "Close" -underline 1 -command "gui_destroy_default $id"
.$id.file.m add command -label "Exit" -underline 3 -command quit

menu .$id.file.m.cm_saveview -tearoff $do_tearoffs
.$id.file.m.cm_saveview add command -label "RT script" -underline 0\
d405 1
a405 1
.$id.file.m.cm_saveview add command -label "Plot" -underline 1\
d407 1
a407 1
.$id.file.m.cm_saveview add command -label "PostScript" -underline 0\
d410 7
a416 7
menu .$id.file.m.cm_pref -tearoff $do_tearoffs
.$id.file.m.cm_pref add cascade -label "Units" -underline 0\
	-menu .$id.file.m.cm_pref.cm_units
.$id.file.m.cm_pref add cascade -label "Command Line Edit" -underline 0\
	-menu .$id.file.m.cm_pref.cm_cle
.$id.file.m.cm_pref add cascade -label "View Axes Position" -underline 0\
	-menu .$id.file.m.cm_pref.cm_vap
d418 2
a419 2
menu .$id.file.m.cm_pref.cm_units -tearoff $do_tearoffs
.$id.file.m.cm_pref.cm_units add radiobutton -value um -variable mged_display(units)\
d421 1
a421 1
.$id.file.m.cm_pref.cm_units add radiobutton -value mm -variable mged_display(units)\
d423 1
a423 1
.$id.file.m.cm_pref.cm_units add radiobutton -value cm -variable mged_display(units)\
d425 1
a425 1
.$id.file.m.cm_pref.cm_units add radiobutton -value m -variable mged_display(units)\
d427 1
a427 1
.$id.file.m.cm_pref.cm_units add radiobutton -value km -variable mged_display(units)\
d429 2
a430 2
.$id.file.m.cm_pref.cm_units add separator
.$id.file.m.cm_pref.cm_units add radiobutton -value in -variable mged_display(units)\
d432 1
a432 1
.$id.file.m.cm_pref.cm_units add radiobutton -value ft -variable mged_display(units)\
d434 1
a434 1
.$id.file.m.cm_pref.cm_units add radiobutton -value yd -variable mged_display(units)\
d436 1
a436 1
.$id.file.m.cm_pref.cm_units add radiobutton -value mi -variable mged_display(units)\
d439 2
a440 2
menu .$id.file.m.cm_pref.cm_cle -tearoff $do_tearoffs
.$id.file.m.cm_pref.cm_cle add radiobutton -value emacs -variable mged_edit_style($id)\
d442 1
a442 1
.$id.file.m.cm_pref.cm_cle add radiobutton -value vi -variable mged_edit_style($id)\
d445 2
a446 2
menu .$id.file.m.cm_pref.cm_vap -tearoff $do_tearoffs
.$id.file.m.cm_pref.cm_vap add radiobutton -value 0 -variable mged_v_axes_pos($id)\
d449 1
a449 1
.$id.file.m.cm_pref.cm_vap add radiobutton -value 1 -variable mged_v_axes_pos($id)\
d452 1
a452 1
.$id.file.m.cm_pref.cm_vap add radiobutton -value 2 -variable mged_v_axes_pos($id)\
d455 1
a455 1
.$id.file.m.cm_pref.cm_vap add radiobutton -value 3 -variable mged_v_axes_pos($id)\
d458 1
a458 1
.$id.file.m.cm_pref.cm_vap add radiobutton -value 4 -variable mged_v_axes_pos($id)\
d462 2
a463 3
menubutton .$id.edit -text "Edit" -underline 0 -menu .$id.edit.m
menu .$id.edit.m -tearoff $do_tearoffs
.$id.edit.m add command -label "Solid" -underline 0 \
d465 1
a465 1
.$id.edit.m add command -label "Matrix" -underline 0 \
d467 1
a467 1
.$id.edit.m add command -label "Combination" -underline 0 \
d469 7
a475 14
#.$id.edit.m add separator
#.$id.edit.m add command -label "Reject" -underline 0 \
	-command "press reject" 
#.$id.edit.m add command -label "Accept" -underline 0 \
	-command "press accept"

menubutton .$id.create -text "Create" -underline 0 -menu .$id.create.m
menu .$id.create.m -tearoff $do_tearoffs
.$id.create.m add command -label "Solid..." -underline 0 -command "solcreate $id"
.$id.create.m add command -label "Instance..." -underline 0 -command "icreate $id"

menubutton .$id.view -text "View" -underline 0 -menu .$id.view.m
menu .$id.view.m -tearoff $do_tearoffs
.$id.view.m add command -label "Top" -underline 0\
d477 1
a477 1
.$id.view.m add command -label "Bottom" -underline 0\
d479 1
a479 1
.$id.view.m add command -label "Right" -underline 0\
d481 1
a481 1
.$id.view.m add command -label "Left" -underline 0\
d483 1
a483 1
.$id.view.m add command -label "Front" -underline 0\
d485 1
a485 1
.$id.view.m add command -label "Back" -underline 3\
d487 1
a487 1
.$id.view.m add command -label "az35,el25" -underline 2\
d489 1
a489 1
.$id.view.m add command -label "az45,el45" -underline 2\
d491 2
a492 2
.$id.view.m add separator
.$id.view.m add command -label "Zoom In" -underline 5\
d494 1
a494 1
.$id.view.m add command -label "Zoom Out" -underline 5\
d496 2
a497 2
.$id.view.m add separator
.$id.view.m add command -label "Save" -underline 0\
d499 1
a499 1
.$id.view.m add command -label "Restore" -underline 1\
d501 2
a502 2
.$id.view.m add separator
.$id.view.m add command -label "Reset Viewsize"\
d504 1
a504 1
.$id.view.m add command -label "Zero" -underline 0\
d507 7
a513 8
menubutton .$id.viewring -text "ViewRing" -underline 4 -menu .$id.viewring.m
menu .$id.viewring.m -tearoff $do_tearoffs
.$id.viewring.m add command -label "Add View" -underline 0 -command "do_add_view $id"
.$id.viewring.m add cascade -label "Select View" -underline 0 -menu .$id.viewring.m.cm_select
.$id.viewring.m add cascade -label "Delete View" -underline 0 -menu .$id.viewring.m.cm_delete
.$id.viewring.m add command -label "Next View" -underline 0 -command "do_next_view $id"
.$id.viewring.m add command -label "Prev View" -underline 0 -command "do_prev_view $id"
.$id.viewring.m add command -label "Last View" -underline 0 -command "do_toggle_view $id"
d515 1
a515 1
menu .$id.viewring.m.cm_select -tearoff $do_tearoffs
d518 1
a518 1
menu .$id.viewring.m.cm_delete -tearoff $do_tearoffs
d521 2
a522 6
menubutton .$id.modes -text "Modes" -underline 0 -menu .$id.modes.m
menu .$id.modes.m -tearoff $do_tearoffs
.$id.modes.m add checkbutton -offvalue 0 -onvalue 1 -variable mged_grid_snap($id)\
	-label "Snap To Grid" -underline 0\
	-command "mged_apply $id \"set grid_snap \$mged_grid_snap($id)\""
.$id.modes.m add checkbutton -offvalue 0 -onvalue 1 -variable mged_rubber_band($id)\
d525 1
a525 1
.$id.modes.m add checkbutton -offvalue 0 -onvalue 1 -variable mged_rateknobs($id)\
d529 19
a547 20
menubutton .$id.settings -text "Settings" -underline 0 -menu .$id.settings.m
menu .$id.settings.m -tearoff $do_tearoffs
.$id.settings.m add cascade -label "Transform" -underline 0\
	-menu .$id.settings.m.cm_transform
.$id.settings.m add cascade -label "Constraint Coords" -underline 0\
	-menu .$id.settings.m.cm_coord
.$id.settings.m add cascade -label "Rotate About" -underline 0\
	-menu .$id.settings.m.cm_origin
.$id.settings.m add cascade -label "Mouse Behavior" -underline 0\
	-menu .$id.settings.m.cm_mb
.$id.settings.m add cascade -label "Active Pane" -underline 0\
	-menu .$id.settings.m.cm_mpane
.$id.settings.m add cascade -label "Apply To" -underline 1\
	-menu .$id.settings.m.cm_applyTo
.$id.settings.m add cascade -label "Query Ray Effects" -underline 0\
	-menu .$id.settings.m.cm_qray
.$id.settings.m add cascade -label "Grid" -underline 0\
	-menu .$id.settings.m.cm_grid
.$id.settings.m add cascade -label "Framebuffer" -underline 0\
	-menu .$id.settings.m.cm_fb
d549 2
a550 2
menu .$id.settings.m.cm_applyTo -tearoff $do_tearoffs
.$id.settings.m.cm_applyTo add radiobutton -value 0 -variable mged_apply_to($id)\
d552 1
a552 1
.$id.settings.m.cm_applyTo add radiobutton -value 1 -variable mged_apply_to($id)\
d554 1
a554 1
.$id.settings.m.cm_applyTo add radiobutton -value 2 -variable mged_apply_to($id)\
d556 1
a556 1
.$id.settings.m.cm_applyTo add radiobutton -value 3 -variable mged_apply_to($id)\
d559 5
a563 2
menu .$id.settings.m.cm_mb -tearoff $do_tearoffs
.$id.settings.m.cm_mb add radiobutton -value p -variable mged_mouse_behavior($id)\
d566 1
a566 1
.$id.settings.m.cm_mb add radiobutton -value r -variable mged_mouse_behavior($id)\
d569 1
a569 1
.$id.settings.m.cm_mb add radiobutton -value z -variable mged_mouse_behavior($id)\
d572 1
a572 1
.$id.settings.m.cm_mb add radiobutton -value q -variable mged_mouse_behavior($id)\
d575 1
a575 1
.$id.settings.m.cm_mb add radiobutton -value s -variable mged_mouse_behavior($id)\
d578 1
a578 1
.$id.settings.m.cm_mb add radiobutton -value o -variable mged_mouse_behavior($id)\
d581 1
a581 1
.$id.settings.m.cm_mb add radiobutton -value c -variable mged_mouse_behavior($id)\
a583 3
.$id.settings.m.cm_mb add radiobutton -value d -variable mged_mouse_behavior($id)\
	-label "Default" -underline 0\
	-command "mged_apply $id \"set mouse_behavior \$mged_mouse_behavior($id)\""
d585 2
a586 2
menu .$id.settings.m.cm_qray -tearoff $do_tearoffs
.$id.settings.m.cm_qray add radiobutton -value t -variable mged_qray_effects($id)\
d589 1
a589 1
.$id.settings.m.cm_qray add radiobutton -value g -variable mged_qray_effects($id)\
d592 1
a592 1
.$id.settings.m.cm_qray add radiobutton -value b -variable mged_qray_effects($id)\
d596 2
a597 2
menu .$id.settings.m.cm_mpane -tearoff $do_tearoffs
.$id.settings.m.cm_mpane add radiobutton -value ul -variable mged_dm_loc($id)\
d600 1
a600 1
.$id.settings.m.cm_mpane add radiobutton -value ur -variable mged_dm_loc($id)\
d603 1
a603 1
.$id.settings.m.cm_mpane add radiobutton -value ll -variable mged_dm_loc($id)\
d606 1
a606 1
.$id.settings.m.cm_mpane add radiobutton -value lr -variable mged_dm_loc($id)\
a608 2
#.$id.settings.m.cm_mpane add radiobutton -value lv -variable mged_dm_loc($id)\
#	-label "Last Visited" -command "do_last_visited $id"
d610 2
a611 2
menu .$id.settings.m.cm_fb -tearoff $do_tearoffs
.$id.settings.m.cm_fb add radiobutton -value 1 -variable mged_fb_all($id)\
d614 1
a614 1
.$id.settings.m.cm_fb add radiobutton -value 0 -variable mged_fb_all($id)\
d617 2
a618 2
.$id.settings.m.cm_fb add separator
.$id.settings.m.cm_fb add radiobutton -value 1 -variable mged_fb_overlay($id)\
d621 1
a621 1
.$id.settings.m.cm_fb add radiobutton -value 0 -variable mged_fb_overlay($id)\
d624 2
a625 2
.$id.settings.m.cm_fb add separator
.$id.settings.m.cm_fb add checkbutton -offvalue 0 -onvalue 1 -variable mged_fb($id)\
d628 1
a628 1
.$id.settings.m.cm_fb add checkbutton -offvalue 0 -onvalue 1 -variable mged_listen($id)\
d632 9
a640 7
menu .$id.settings.m.cm_grid -tearoff $do_tearoffs
.$id.settings.m.cm_grid add cascade -label "Spacing" -underline 0\
	-menu .$id.settings.m.cm_grid.cm_spacing
.$id.settings.m.cm_grid add cascade -label "Advanced" -underline 0\
	-menu .$id.settings.m.cm_grid.cm_adv
.$id.settings.m.cm_grid add separator
.$id.settings.m.cm_grid add checkbutton -offvalue 0 -onvalue 1 -variable mged_grid_draw($id)\
d643 3
d647 10
a656 10
menu .$id.settings.m.cm_grid.cm_spacing -tearoff $do_tearoffs
.$id.settings.m.cm_grid.cm_spacing add cascade -label "Metric" -underline 0\
	-menu .$id.settings.m.cm_grid.cm_spacing.cm_metric
.$id.settings.m.cm_grid.cm_spacing add cascade -label "English" -underline 0\
	-menu .$id.settings.m.cm_grid.cm_spacing.cm_english
.$id.settings.m.cm_grid.cm_spacing add command -label "Arbitrary" -underline 0\
	-command "do_grid_spacing $id b"
.$id.settings.m.cm_grid.cm_spacing add command -label "Autosize" -underline 1\
	-command "grid_control_autosize $id; grid_spacing_apply $id b"
#.$id.settings.m.cm_grid.cm_spacing add command -label "Both" -underline 0\
d658 1
a658 1
#.$id.settings.m.cm_grid.cm_spacing add command -label "Horizontal" -underline 0\
d660 1
a660 1
#.$id.settings.m.cm_grid.cm_spacing add command -label "Vertical" -underline 0\
d662 1
a662 1
#.$id.settings.m.cm_grid.cm_spacing add command -label "Autosize" -underline 0\
d665 7
a671 2
menu .$id.settings.m.cm_grid.cm_spacing.cm_metric -tearoff $do_tearoffs
.$id.settings.m.cm_grid.cm_spacing.cm_metric add command -label "micrometer" -underline 0\
d673 1
a673 1
.$id.settings.m.cm_grid.cm_spacing.cm_metric add command -label "millimeter" -underline 0\
d675 1
a675 1
.$id.settings.m.cm_grid.cm_spacing.cm_metric add command -label "centimeter" -underline 0\
d677 1
a677 1
.$id.settings.m.cm_grid.cm_spacing.cm_metric add command -label "decimeter" -underline 0\
d679 1
a679 1
.$id.settings.m.cm_grid.cm_spacing.cm_metric add command -label "meter" -underline 0\
d681 1
a681 1
.$id.settings.m.cm_grid.cm_spacing.cm_metric add command -label "kilometer" -underline 0\
d683 2
a684 3

menu .$id.settings.m.cm_grid.cm_spacing.cm_english -tearoff $do_tearoffs
.$id.settings.m.cm_grid.cm_spacing.cm_english add command -label "1/10 inch" -underline 0\
d686 1
a686 1
.$id.settings.m.cm_grid.cm_spacing.cm_english add command -label "1/4 inch" -underline 2\
d688 1
a688 1
.$id.settings.m.cm_grid.cm_spacing.cm_english add command -label "1/2 inch" -underline 2\
d690 1
a690 1
.$id.settings.m.cm_grid.cm_spacing.cm_english add command -label "inch" -underline 0\
d692 1
a692 1
.$id.settings.m.cm_grid.cm_spacing.cm_english add command -label "foot" -underline 0\
d694 1
a694 1
.$id.settings.m.cm_grid.cm_spacing.cm_english add command -label "yard" -underline 0\
d696 1
a696 1
.$id.settings.m.cm_grid.cm_spacing.cm_english add command -label "mile" -underline 0\
d699 2
a700 8
menu .$id.settings.m.cm_grid.cm_adv -tearoff $do_tearoffs
.$id.settings.m.cm_grid.cm_adv add command -label "Anchor" -underline 0\
	-command "do_grid_anchor $id"
.$id.settings.m.cm_grid.cm_adv add command -label "Color" -underline 0\
	-command "do_grid_color $id"

menu .$id.settings.m.cm_coord -tearoff $do_tearoffs
.$id.settings.m.cm_coord add radiobutton -value m -variable mged_coords($id)\
d703 1
a703 1
.$id.settings.m.cm_coord add radiobutton -value v -variable mged_coords($id)\
d706 1
a706 1
.$id.settings.m.cm_coord add radiobutton -value o -variable mged_coords($id)\
d710 2
a711 2
menu .$id.settings.m.cm_origin -tearoff $do_tearoffs
.$id.settings.m.cm_origin add radiobutton -value v -variable mged_rotate_about($id)\
d714 1
a714 1
.$id.settings.m.cm_origin add radiobutton -value e -variable mged_rotate_about($id)\
d717 1
a717 1
.$id.settings.m.cm_origin add radiobutton -value m -variable mged_rotate_about($id)\
d720 1
a720 1
.$id.settings.m.cm_origin add radiobutton -value k -variable mged_rotate_about($id)\
d724 2
a725 2
menu .$id.settings.m.cm_transform -tearoff $do_tearoffs
.$id.settings.m.cm_transform add radiobutton -value v -variable mged_transform($id)\
d728 1
a728 1
.$id.settings.m.cm_transform add radiobutton -value a -variable mged_transform($id)\
d731 1
a731 1
.$id.settings.m.cm_transform add radiobutton -value e -variable mged_transform($id)\
d735 2
a736 3
menubutton .$id.tools -text "Tools" -underline 0 -menu .$id.tools.m
menu .$id.tools.m -tearoff $do_tearoffs
.$id.tools.m add command -label "ADC Control Panel" -underline 0\
d738 1
a738 1
.$id.tools.m add command -label "Grid Control Panel" -underline 0\
d740 1
a740 1
.$id.tools.m add command -label "Query Ray Control Panel" -underline 0\
d742 1
a742 1
.$id.tools.m add command -label "Combination Edit Panel" -underline 0\
d744 2
a745 2
.$id.tools.m add separator
.$id.tools.m add checkbutton -offvalue 0 -onvalue 1 -variable multi_view($id)\
d747 1
a747 1
.$id.tools.m add checkbutton -offvalue 0 -onvalue 1 -variable show_edit_info($id)\
d751 1
a751 1
.$id.tools.m add checkbutton -offvalue 0 -onvalue 1 -variable cmd_win($id)\
d754 1
a754 1
.$id.tools.m add checkbutton -offvalue 0 -onvalue 1 -variable dm_win($id)\
d758 1
a758 1
.$id.tools.m add checkbutton -offvalue 0 -onvalue 1 -variable status_bar($id)\
d761 1
a761 1
.$id.tools.m add checkbutton -offvalue 0 -onvalue 1 -variable buttons_on($id)\
d765 2
a766 3
menubutton .$id.other -text "Other" -underline 0 -menu .$id.other.m
menu .$id.other.m -tearoff $do_tearoffs
.$id.other.m add checkbutton -offvalue 0 -onvalue 1 -variable mged_grid_draw($id)\
d769 1
a769 1
.$id.other.m add checkbutton -offvalue 0 -onvalue 1 -variable mged_fb($id)\
d772 1
a772 1
.$id.other.m add checkbutton -offvalue 0 -onvalue 1 -variable mged_adc_draw($id)\
d775 1
a775 1
.$id.other.m add checkbutton -offvalue 0 -onvalue 1 -variable mged_faceplate($id)\
d778 3
a780 3
.$id.other.m add separator
.$id.other.m add cascade -label "Axes" -underline 1\
	-menu .$id.other.m.cm_axes
d782 2
a783 2
menu .$id.other.m.cm_axes -tearoff $do_tearoffs
.$id.other.m.cm_axes add checkbutton -offvalue 0 -onvalue 1\
d786 1
a786 1
.$id.other.m.cm_axes add checkbutton -offvalue 0 -onvalue 1\
d789 1
a789 1
.$id.other.m.cm_axes add checkbutton -offvalue 0 -onvalue 1\
d793 2
a794 3
menubutton .$id.help -text "Help" -underline 0 -menu .$id.help.m
menu .$id.help.m -tearoff $do_tearoffs
.$id.help.m add command -label "About" -underline 0\
d796 1
a796 1
.$id.help.m add command -label "On Context" -underline 0\
d798 1
a798 1
.$id.help.m add command -label "Commands..." -underline 0\
d800 1
a800 1
.$id.help.m add command -label "Apropos..." -underline 1\
d819 1
a819 1
.$id.help.m add command -label "Manual..." -underline 0 -command $web_cmd
a873 4
pack .$id.file .$id.edit .$id.create .$id.view .$id.viewring .$id.modes .$id.settings .$id.tools .$id.other -side left -in .$id.menubar
pack .$id.help -side right -in .$id.menubar
pack .$id.menubar -side top -fill x

d906 5
d1073 1
a1073 1
	.$id.settings.m.cm_fb entryconfigure 7 -state normal
d1076 1
a1076 1
	.$id.settings.m.cm_fb entryconfigure 7 -state disabled
d1565 1
a1565 1
	set w .$id.viewring.m.cm_select
d1572 1
a1572 1
	set w .$id.viewring.m.cm_delete
d1743 1
a1743 1
	.$id.settings.m.cm_fb entryconfigure 7 -state normal
d1747 1
a1747 1
	.$id.settings.m.cm_fb entryconfigure 7 -state disabled
@


1.17
log
@*- add calls to select solid/object/combination from among those being
	displayed or along a ray that has been fired
@
text
@d18 1
a18 1
#	MGED's Tcl/Tk interface.
d31 4
d162 1
d376 1
a376 1
frame .$id.m -relief raised -bd 1
d378 78
a455 22
menubutton .$id.m.file -text "File" -underline 0 -menu .$id.m.file.m
menu .$id.m.file.m -tearoff $do_tearoffs
.$id.m.file.m add command -label "New..." -underline 0 -command "do_New $id"
.$id.m.file.m add command -label "Open..." -underline 0 -command "do_Open $id"
.$id.m.file.m add command -label "Insert..." -underline 0 -command "do_Concat $id"
.$id.m.file.m add command -label "Extract..." -underline 2 -command "init_extractTool $id"
.$id.m.file.m add separator
.$id.m.file.m add command -label "Raytrace..." -underline 0 -command "init_Raytrace $id"
.$id.m.file.m add cascade -label "Save View As" -menu .$id.m.file.m.cm_saveview
.$id.m.file.m add separator
.$id.m.file.m add command -label "Close" -underline 0 -command "gui_destroy_default $id"
.$id.m.file.m add command -label "Exit" -command quit -underline 0

menu .$id.m.file.m.cm_saveview -tearoff $do_tearoffs
.$id.m.file.m.cm_saveview add command -label "RT script" -command "init_rtScriptTool $id"
.$id.m.file.m.cm_saveview add command -label "Plot" -command "init_plotTool $id"
.$id.m.file.m.cm_saveview add command -label "PostScript" -command "init_psTool $id"

menubutton .$id.m.edit -text "Edit" -underline 0 -menu .$id.m.edit.m
menu .$id.m.edit.m -tearoff $do_tearoffs
.$id.m.edit.m add cascade -label "Add" -menu .$id.m.edit.m.cm_add
.$id.m.edit.m add command -label "Solid" -underline 0 \
d457 1
a457 1
.$id.m.edit.m add command -label "Matrix" -underline 0 \
d459 1
a459 1
.$id.m.edit.m add command -label "Combination" -underline 0 \
d461 2
a462 2
#.$id.m.edit.m add separator
#.$id.m.edit.m add command -label "Reject" -underline 0 \
d464 1
a464 1
#.$id.m.edit.m add command -label "Accept" -underline 0 \
d467 8
a474 9
menu .$id.m.edit.m.cm_add -tearoff $do_tearoffs
.$id.m.edit.m.cm_add add command -label "Solid..." -command "solcreate $id"
#.$id.m.edit.m.cm_add add command -label "Combination..." -command "comb_create $id"
#.$id.m.edit.m.cm_add add command -label "Region..." -command "reg_create $id"
.$id.m.edit.m.cm_add add command -label "Instance..." -command "icreate $id"

menubutton .$id.m.view -text "View" -underline 0 -menu .$id.m.view.m
menu .$id.m.view.m -tearoff $do_tearoffs
.$id.m.view.m add command -label "Top" -underline 0\
d476 1
a476 1
.$id.m.view.m add command -label "Bottom" -underline 5\
d478 1
a478 1
.$id.m.view.m add command -label "Right" -underline 0\
d480 1
a480 1
.$id.m.view.m add command -label "Left" -underline 0\
d482 1
a482 1
.$id.m.view.m add command -label "Front" -underline 0\
d484 1
a484 1
.$id.m.view.m add command -label "Back" -underline 0\
d486 1
a486 1
.$id.m.view.m add command -label "az35,el25" -underline 2\
d488 1
a488 1
.$id.m.view.m add command -label "az45,el45" -underline 2\
d490 2
a491 2
.$id.m.view.m add separator
.$id.m.view.m add command -label "Zoom In" -underline 5\
d493 1
a493 1
.$id.m.view.m add command -label "Zoom Out" -underline 5\
d495 2
a496 2
.$id.m.view.m add separator
.$id.m.view.m add command -label "Save" -underline 0\
d498 1
a498 1
.$id.m.view.m add command -label "Restore" -underline 1\
d500 2
a501 2
.$id.m.view.m add separator
.$id.m.view.m add command -label "Reset Viewsize"\
d503 1
a503 1
.$id.m.view.m add command -label "Zero" -underline 0\
d506 8
a513 8
menubutton .$id.m.viewring -text "ViewRing" -underline 4 -menu .$id.m.viewring.m
menu .$id.m.viewring.m -tearoff $do_tearoffs
.$id.m.viewring.m add command -label "Add View" -underline 0 -command "do_add_view $id"
.$id.m.viewring.m add cascade -label "Select View" -menu .$id.m.viewring.m.cm_select
.$id.m.viewring.m add cascade -label "Delete View" -menu .$id.m.viewring.m.cm_delete
.$id.m.viewring.m add command -label "Next View" -underline 0 -command "do_next_view $id"
.$id.m.viewring.m add command -label "Prev View" -underline 0 -command "do_prev_view $id"
.$id.m.viewring.m add command -label "Last View" -underline 0 -command "do_toggle_view $id"
d515 1
a515 1
menu .$id.m.viewring.m.cm_select -tearoff $do_tearoffs
d518 1
a518 1
menu .$id.m.viewring.m.cm_delete -tearoff $do_tearoffs
d521 134
a654 122
#menubutton .$id.m.options -text "Options" -underline 0 -menu .$id.m.options.m
#menu .$id.m.options.m -tearoff $do_tearoffs

menubutton .$id.m.modes -text "Modes" -underline 0 -menu .$id.m.modes.m
menu .$id.m.modes.m -tearoff $do_tearoffs
.$id.m.modes.m add checkbutton -offvalue 0 -onvalue 1 -variable mged_rateknobs($id)\
	-label "Rateknobs" -underline 0 -command "mged_apply $id \"set rateknobs \$mged_rateknobs($id)\""
.$id.m.modes.m add checkbutton -offvalue 0 -onvalue 1 -variable mged_rubber_band($id)\
	-label "Draw Rubber Band" -underline 7 -command "mged_apply $id \"set rubber_band \$mged_rubber_band($id)\""
.$id.m.modes.m add checkbutton -offvalue 0 -onvalue 1 -variable mged_grid_draw($id)\
	-label "Draw Grid" -command "mged_apply $id \"set grid_draw \$mged_grid_draw($id)\""
.$id.m.modes.m add checkbutton -offvalue 0 -onvalue 1 -variable mged_grid_snap($id)\
	-label "Snap To Grid" -command "mged_apply $id \"set grid_snap \$mged_grid_snap($id)\""
.$id.m.modes.m add checkbutton -offvalue 0 -onvalue 1 -variable multi_view($id)\
	-label "Multi Pane" -underline 0 -command "setmv $id"
.$id.m.modes.m add checkbutton -offvalue 0 -onvalue 1 -variable mged_fb($id)\
	-label "Framebuffer" -underline 0 -command "set_fb $id"

menubutton .$id.m.settings -text "Settings" -underline 0 -menu .$id.m.settings.m
menu .$id.m.settings.m -tearoff $do_tearoffs
.$id.m.settings.m add cascade -label "Apply To..." -menu .$id.m.settings.m.cm_applyTo
.$id.m.settings.m add cascade -label "Mouse Behavior" -menu .$id.m.settings.m.cm_mb
.$id.m.settings.m add cascade -label "Transform..." -menu .$id.m.settings.m.cm_transform
.$id.m.settings.m add cascade -label "Constraint Coords" -menu .$id.m.settings.m.cm_coord
.$id.m.settings.m add cascade -label "Rotate About..." -menu .$id.m.settings.m.cm_origin
.$id.m.settings.m add cascade -label "Query Ray Effects" -menu .$id.m.settings.m.cm_qray
.$id.m.settings.m add cascade -label "Multi-Pane" -menu .$id.m.settings.m.cm_mpane
.$id.m.settings.m add cascade -label "Units" -menu .$id.m.settings.m.cm_units
.$id.m.settings.m add cascade -label "Framebuffer" -menu .$id.m.settings.m.cm_fb
.$id.m.settings.m add cascade -label "Grid" -menu .$id.m.settings.m.cm_grid
.$id.m.settings.m add cascade -label "View Axes Position" -menu .$id.m.settings.m.cm_vap
.$id.m.settings.m add cascade -label "Command Line Edit" -menu .$id.m.settings.m.cm_cle

menu .$id.m.settings.m.cm_applyTo -tearoff $do_tearoffs
.$id.m.settings.m.cm_applyTo add radiobutton -value 0 -variable mged_apply_to($id)\
	-label "Active Pane"
.$id.m.settings.m.cm_applyTo add radiobutton -value 1 -variable mged_apply_to($id)\
	-label "Local Panes"
.$id.m.settings.m.cm_applyTo add radiobutton -value 2 -variable mged_apply_to($id)\
	-label "Listed Panes"
.$id.m.settings.m.cm_applyTo add radiobutton -value 3 -variable mged_apply_to($id)\
	-label "All Panes"

menu .$id.m.settings.m.cm_mb -tearoff $do_tearoffs
.$id.m.settings.m.cm_mb add radiobutton -value p -variable mged_mouse_behavior($id)\
	-label "Paint Rectangle Area" -command "mged_apply $id \"set mouse_behavior \$mged_mouse_behavior($id)\""
.$id.m.settings.m.cm_mb add radiobutton -value r -variable mged_mouse_behavior($id)\
	-label "Raytrace Rectangle Area" -command "mged_apply $id \"set mouse_behavior \$mged_mouse_behavior($id)\""
.$id.m.settings.m.cm_mb add radiobutton -value z -variable mged_mouse_behavior($id)\
	-label "Zoom Rectangle Area" -command "mged_apply $id \"set mouse_behavior \$mged_mouse_behavior($id)\""
.$id.m.settings.m.cm_mb add radiobutton -value q -variable mged_mouse_behavior($id)\
	-label "Query Ray" -command "mged_apply $id \"set mouse_behavior \$mged_mouse_behavior($id)\""
.$id.m.settings.m.cm_mb add radiobutton -value s -variable mged_mouse_behavior($id)\
	-label "Solid Edit" -command "mged_apply $id \"set mouse_behavior \$mged_mouse_behavior($id)\""
.$id.m.settings.m.cm_mb add radiobutton -value o -variable mged_mouse_behavior($id)\
	-label "Object Edit" -command "mged_apply $id \"set mouse_behavior \$mged_mouse_behavior($id)\""
.$id.m.settings.m.cm_mb add radiobutton -value c -variable mged_mouse_behavior($id)\
	-label "Combination Edit" -command "mged_apply $id \"set mouse_behavior \$mged_mouse_behavior($id)\""
.$id.m.settings.m.cm_mb add radiobutton -value d -variable mged_mouse_behavior($id)\
	-label "Default" -command "mged_apply $id \"set mouse_behavior \$mged_mouse_behavior($id)\""

menu .$id.m.settings.m.cm_qray -tearoff $do_tearoffs
.$id.m.settings.m.cm_qray add radiobutton -value t -variable mged_qray_effects($id)\
	-label "Text" -command "mged_apply $id \"qray effects \$mged_qray_effects($id)\""
.$id.m.settings.m.cm_qray add radiobutton -value g -variable mged_qray_effects($id)\
	-label "Graphics" -command "mged_apply $id \"qray effects \$mged_qray_effects($id)\""
.$id.m.settings.m.cm_qray add radiobutton -value b -variable mged_qray_effects($id)\
	-label "both" -command "mged_apply $id \"qray effects \$mged_qray_effects($id)\""

menu .$id.m.settings.m.cm_mpane -tearoff $do_tearoffs
.$id.m.settings.m.cm_mpane add radiobutton -value ul -variable mged_dm_loc($id)\
	-label "Upper Left" -command "set_active_dm $id"
.$id.m.settings.m.cm_mpane add radiobutton -value ur -variable mged_dm_loc($id)\
	-label "Upper Right" -command "set_active_dm $id"
.$id.m.settings.m.cm_mpane add radiobutton -value ll -variable mged_dm_loc($id)\
	-label "Lower Left" -command "set_active_dm $id"
.$id.m.settings.m.cm_mpane add radiobutton -value lr -variable mged_dm_loc($id)\
	-label "Lower right" -command "set_active_dm $id"
.$id.m.settings.m.cm_mpane add radiobutton -value lv -variable mged_dm_loc($id)\
	-label "Last Visited" -command "do_last_visited $id"

menu .$id.m.settings.m.cm_units -tearoff $do_tearoffs
.$id.m.settings.m.cm_units add radiobutton -value um -variable mged_display(units)\
	-label "micrometers" -command "do_Units $id"
.$id.m.settings.m.cm_units add radiobutton -value mm -variable mged_display(units)\
	-label "millimeters" -command "do_Units $id"
.$id.m.settings.m.cm_units add radiobutton -value cm -variable mged_display(units)\
	-label "centimeters" -command "do_Units $id"
.$id.m.settings.m.cm_units add radiobutton -value m -variable mged_display(units)\
	-label "meters" -command "do_Units $id"
.$id.m.settings.m.cm_units add radiobutton -value km -variable mged_display(units)\
	-label "kilometers" -command "do_Units $id"
.$id.m.settings.m.cm_units add separator
.$id.m.settings.m.cm_units add radiobutton -value in -variable mged_display(units)\
	-label "inches" -command "do_Units $id"
.$id.m.settings.m.cm_units add radiobutton -value ft -variable mged_display(units)\
	-label "feet" -command "do_Units $id"
.$id.m.settings.m.cm_units add radiobutton -value yd -variable mged_display(units)\
	-label "yards" -command "do_Units $id"
.$id.m.settings.m.cm_units add radiobutton -value mi -variable mged_display(units)\
	-label "miles" -command "do_Units $id"

menu .$id.m.settings.m.cm_fb -tearoff $do_tearoffs
.$id.m.settings.m.cm_fb add radiobutton -value 1 -variable mged_fb_all($id)\
	-label "All" -command "mged_apply $id \"set fb_all \$mged_fb_all($id)\""
.$id.m.settings.m.cm_fb add radiobutton -value 0 -variable mged_fb_all($id)\
	-label "Rectangle Area" -command "mged_apply $id \"set fb_all \$mged_fb_all($id)\""
.$id.m.settings.m.cm_fb add separator
.$id.m.settings.m.cm_fb add radiobutton -value 1 -variable mged_fb_overlay($id)\
	-label "Overlay" -command "mged_apply $id \"set fb_overlay \$mged_fb_overlay($id)\""
.$id.m.settings.m.cm_fb add radiobutton -value 0 -variable mged_fb_overlay($id)\
	-label "Underlay" -command "mged_apply $id \"set fb_overlay \$mged_fb_overlay($id)\""
.$id.m.settings.m.cm_fb add separator
.$id.m.settings.m.cm_fb add checkbutton -offvalue 0 -onvalue 1 -variable mged_listen($id)\
	-label "Listen For Clients" -underline 0 -command "set_listen $id" -state disabled

menu .$id.m.settings.m.cm_grid -tearoff $do_tearoffs
.$id.m.settings.m.cm_grid add cascade -label "Spacing" -menu .$id.m.settings.m.cm_grid.cm_spacing
.$id.m.settings.m.cm_grid add cascade -label "Advanced" -menu .$id.m.settings.m.cm_grid.cm_adv

menu .$id.m.settings.m.cm_grid.cm_spacing -tearoff $do_tearoffs
.$id.m.settings.m.cm_grid.cm_spacing add command -label "Both" -underline 0\
d656 1
a656 5
.$id.m.settings.m.cm_grid.cm_spacing add command -label "Horizontal" -underline 0\
	-command "do_grid_spacing $id h"
.$id.m.settings.m.cm_grid.cm_spacing add command -label "Vertical" -underline 0\
	-command "do_grid_spacing $id v"
.$id.m.settings.m.cm_grid.cm_spacing add command -label "Autosize" -underline 0\
d658 38
d697 2
a698 2
menu .$id.m.settings.m.cm_grid.cm_adv -tearoff $do_tearoffs
.$id.m.settings.m.cm_grid.cm_adv add command -label "Anchor" -underline 0\
d700 1
a700 1
.$id.m.settings.m.cm_grid.cm_adv add command -label "Color" -underline 0\
d703 52
a754 52
menu .$id.m.settings.m.cm_coord -tearoff $do_tearoffs
.$id.m.settings.m.cm_coord add radiobutton -value m -variable mged_coords($id)\
	-label "Model" -command "mged_apply $id \"set coords \$mged_coords($id)\""
.$id.m.settings.m.cm_coord add radiobutton -value v -variable mged_coords($id)\
	-label "View" -command "mged_apply $id \"set coords \$mged_coords($id)\""
.$id.m.settings.m.cm_coord add radiobutton -value o -variable mged_coords($id)\
	-label "Object" -command "mged_apply $id \"set coords \$mged_coords($id)\"" -state disabled

menu .$id.m.settings.m.cm_origin -tearoff $do_tearoffs
.$id.m.settings.m.cm_origin add radiobutton -value v -variable mged_rotate_about($id)\
	-label "View Center" -command "mged_apply $id \"set rotate_about \$mged_rotate_about($id)\""
.$id.m.settings.m.cm_origin add radiobutton -value e -variable mged_rotate_about($id)\
	-label "Eye" -command "mged_apply $id \"set rotate_about \$mged_rotate_about($id)\""
.$id.m.settings.m.cm_origin add radiobutton -value m -variable mged_rotate_about($id)\
	-label "Model Origin" -command "mged_apply $id \"set rotate_about \$mged_rotate_about($id)\""
.$id.m.settings.m.cm_origin add radiobutton -value k -variable mged_rotate_about($id)\
	-label "Key Point" -command "mged_apply $id \"set rotate_about \$mged_rotate_about($id)\"" -state disabled

menu .$id.m.settings.m.cm_transform -tearoff $do_tearoffs
.$id.m.settings.m.cm_transform add radiobutton -value v -variable mged_transform($id)\
	-label "View" -command "set_transform $id"
.$id.m.settings.m.cm_transform add radiobutton -value a -variable mged_transform($id)\
	-label "ADC" -command "set_transform $id"
.$id.m.settings.m.cm_transform add radiobutton -value e -variable mged_transform($id)\
	-label "Model Params" -command "set_transform $id" -state disabled

menu .$id.m.settings.m.cm_vap -tearoff $do_tearoffs
.$id.m.settings.m.cm_vap add radiobutton -value 0 -variable mged_v_axes_pos($id)\
	-label "Center" -command "mged_apply $id \"set v_axes_pos {0 0}\""
.$id.m.settings.m.cm_vap add radiobutton -value 1 -variable mged_v_axes_pos($id)\
	-label "Lower Left" -command "mged_apply $id \"set v_axes_pos {-1750 -1750}\""
.$id.m.settings.m.cm_vap add radiobutton -value 2 -variable mged_v_axes_pos($id)\
	-label "Upper Left" -command "mged_apply $id \"set v_axes_pos {-1750 1750}\""
.$id.m.settings.m.cm_vap add radiobutton -value 3 -variable mged_v_axes_pos($id)\
	-label "Upper Right" -command "mged_apply $id \"set v_axes_pos {1750 1750}\""
.$id.m.settings.m.cm_vap add radiobutton -value 4 -variable mged_v_axes_pos($id)\
	-label "Lower Right" -command "mged_apply $id \"set v_axes_pos {1750 -1750}\""

menu .$id.m.settings.m.cm_cle -tearoff $do_tearoffs
.$id.m.settings.m.cm_cle add radiobutton -value emacs -variable mged_edit_style($id)\
	-label "emacs" -command "set_text_key_bindings $id"
.$id.m.settings.m.cm_cle add radiobutton -value vi -variable mged_edit_style($id)\
	-label "vi" -command "set_text_key_bindings $id"

menubutton .$id.m.tools -text "Tools" -menu .$id.m.tools.m
menu .$id.m.tools.m -tearoff $do_tearoffs
.$id.m.tools.m add checkbutton -offvalue 0 -onvalue 1 -variable mged_adc_draw($id)\
	-label "Angle/Dist Cursor" -underline 0 -command "mged_apply $id \"adc draw \$mged_adc_draw($id)\""
.$id.m.tools.m add checkbutton -offvalue 0 -onvalue 1 -variable show_edit_info($id)\
	-label "Edit Info" -underline 0 -command "toggle_edit_info $id"
.$id.m.tools.m add checkbutton -offvalue 0 -onvalue 1 -variable status_bar($id)\
	-label "Status Bar" -underline 0 -command "toggle_status_bar $id"
d756 6
a761 4
.$id.m.tools.m add checkbutton -offvalue 0 -onvalue 1 -variable cmd_win($id)\
	-label "Command Window" -underline 0 -command "set_cmd_win $id"
.$id.m.tools.m add checkbutton -offvalue 0 -onvalue 1 -variable dm_win($id)\
	-label "Graphics Window" -underline 0 -command "set_dm_win $id"
d763 41
a803 23
.$id.m.tools.m add checkbutton -offvalue 0 -onvalue 1 -variable buttons_on($id)\
	-label "Button Menu" -underline 0 -command "toggle_button_menu $id"
.$id.m.tools.m add checkbutton -offvalue 0 -onvalue 1 -variable mged_adc_control($id)\
	-label "ADC Control Panel" -command "init_adc_control $id"
.$id.m.tools.m add checkbutton -offvalue 0 -onvalue 1 -variable mged_grid_control($id)\
	-label "Grid Control Panel" -command "init_grid_control $id"
.$id.m.tools.m add checkbutton -offvalue 0 -onvalue 1 -variable mged_qray_control($id)\
	-label "Query Ray Control Panel" -command "init_qray_control $id"
.$id.m.tools.m add separator
.$id.m.tools.m add cascade -label "Axes" -menu .$id.m.tools.m.cm_axes

menu .$id.m.tools.m.cm_axes -tearoff $do_tearoffs
.$id.m.tools.m.cm_axes add checkbutton -offvalue 0 -onvalue 1\
	-variable mged_v_axes($id) -label "View" -command "mged_apply $id \"set v_axes \$mged_v_axes($id)\""
.$id.m.tools.m.cm_axes add checkbutton -offvalue 0 -onvalue 1\
	-variable mged_m_axes($id) -label "Model" -command "mged_apply $id \"set m_axes \$mged_m_axes($id)\""
.$id.m.tools.m.cm_axes add checkbutton -offvalue 0 -onvalue 1\
	-variable mged_e_axes($id) -label "Edit" -command "mged_apply $id \"set e_axes \$mged_e_axes($id)\""

menubutton .$id.m.help -text "Help" -menu .$id.m.help.m
menu .$id.m.help.m -tearoff $do_tearoffs
.$id.m.help.m add command -label "About" -command "do_About_MGED $id"
.$id.m.help.m add command -label "On Context" -underline 0\
d805 1
a805 1
.$id.m.help.m add command -label "Commands..." -underline 0\
d807 2
a808 1
.$id.m.help.m add command -label "Apropos..." -underline 0 -command "ia_apropos .$id $screen"
d826 1
a826 1
.$id.m.help.m add command -label "Manual..." -underline 0 -command $web_cmd
d881 3
a883 3
pack .$id.m.file .$id.m.edit .$id.m.view .$id.m.viewring .$id.m.modes .$id.m.settings .$id.m.tools -side left
pack .$id.m.help -side right
pack .$id.m -side top -fill x
d885 6
a890 1
pack $mged_active_dm($id) -in $mged_dmc($id)
d943 1
a943 1
set_active_dm $id
d1056 2
a1063 1
    set mged_v_axes_pos($id) $v_axes_pos
d1076 1
d1079 1
a1079 1
	.$id.m.settings.m.cm_fb entryconfigure 6 -state normal
d1082 1
a1082 1
	.$id.m.settings.m.cm_fb entryconfigure 6 -state disabled
d1085 22
d1267 6
d1274 6
a1279 2
    # unhighlight
    $mged_small_dmc($id) configure -bg #d9d9d9
d1281 10
a1290 1
    trace vdelete mged_display($mged_active_dm($id),fps) w "ia_changestate $id"
d1292 5
a1296 4
    set vloc [string range $mged_dm_loc($id) 0 0]
    set hloc [string range $mged_dm_loc($id) 1 1]
    set mged_active_dm($id) $mged_top($id).$mged_dm_loc($id)
    set mged_small_dmc($id) $mged_dmc($id).$vloc.$hloc
d1310 5
a1314 1
	pack forget $mged_top($id).$save_dm_loc($id)
a1319 1
	pack $mged_top($id).$save_dm_loc($id) -in $save_small_dmc($id)
d1321 6
d1335 7
d1380 1
d1571 1
a1571 1
	set w .$id.m.viewring.m.cm_select
d1578 1
a1578 1
	set w .$id.m.viewring.m.cm_delete
d1749 1
a1749 1
	.$id.m.settings.m.cm_fb entryconfigure 6 -state normal
d1753 1
a1753 1
	.$id.m.settings.m.cm_fb entryconfigure 6 -state disabled
@


1.16
log
@*- mods to fix bad packing when coming up in multi-view mode
@
text
@d87 4
d394 6
a399 3
.$id.m.edit.m add command -label "Solid" -underline 0 -command "build_esolmenu_all $id"
.$id.m.edit.m add command -label "Matrix" -underline 0 -command "press oill"
.$id.m.edit.m add command -label "Region" -underline 0 -command "init_red $id"
d401 4
a404 2
#.$id.m.edit.m add command -label "Reject" -underline 0 -command "press reject" 
#.$id.m.edit.m add command -label "Accept" -underline 0 -command "press accept"
d517 2
@


1.15
log
@oops! -- these variables need to be initialized in gui.tcl
@
text
@a746 2
set multi_view($id) $mged_default_mvmode
setmv $id
d751 3
@


1.14
log
@*- initialize mged_gui_create and mged_gui_destroy
@
text
@d1 1
a1 1
 Author -
d5 1
a5 1
#	The U. S. Army Ballistic Research Laboratory
d14 1
a14 1
#       This software is Copyright (C) 1995 by the United States Army
a84 8
}

if ![info exists mged_gui_create] {
    set mged_gui_create gui_create_default
}

if ![info exists mged_default_gui_destroy] {
    set mged_gui_destroy gui_destroy_default
@


1.13
log
@*- initialize vi_delete_flag and vi_search_flag
*- add entries to settings menu
@
text
@d1 1
a1 1
# Author -
d87 8
d344 1
a344 1
	gui_destroy $id
d357 1
a357 1
	gui_destroy $id
d387 1
a387 1
.$id.m.file.m add command -label "Close" -underline 0 -command "gui_destroy $id"
d809 1
a809 1
wm protocol $mged_top($id) WM_DELETE_WINDOW "gui_destroy $id"
@


1.12
log
@*- mods to automatically build/destroy the edit_info window
	based on the edit state and whether or not show_edit_info is true
@
text
@d152 2
d390 1
a390 1
.$id.m.edit.m add command -label "Solid" -underline 0 -command "esolmenu"
d504 4
d698 2
a699 4
set dm_id $mged_top($id).ur

label .$id.status.cent -textvar mged_display($dm_id,center) -anchor w
label .$id.status.size -textvar mged_display($dm_id,size) -anchor w
d701 2
a702 2
label .$id.status.aet -textvar mged_display($dm_id,aet) -anchor w
label .$id.status.ang -textvar mged_display($dm_id,ang) -anchor w -padx 4
d731 2
@


1.11
log
@*- mods to support vi or emacs style bindings
@
text
@d140 2
a141 2
    global edit_info
    global edit_info_on
d298 1
d628 1
a628 1
.$id.m.tools.m add checkbutton -offvalue 0 -onvalue 1 -variable edit_info_on($id)\
d805 1
a805 1
    global edit_info_on
d817 1
a817 1
	return "closecw: bad id - $id"
d834 1
a834 1
    set edit_info_on($id) 0
d948 13
d962 22
a983 2
    global edit_info_on
    global edit_info_on
d985 1
a985 3
    if [ winfo exists .sei$id] {
	destroy .sei$id
	set edit_info_on($id) 0
d989 3
a991 7
    toplevel .sei$id -screen $player_screen($id)
    label .sei$id.l -bg black -fg yellow -textvar edit_info -font fixed
    pack .sei$id.l -expand 1 -fill both

    wm title .sei$id "$id\'s Edit Info"
    wm protocol .sei$id WM_DELETE_WINDOW "toggle_edit_info $id"
#    wm resizable .sei$id 0 0
@


1.10
log
@*- rewrote text widget's mouse button bindings in support
	of cut & paste
*- mods to support use of color in MGED's command window
@
text
@d83 4
d100 1
d127 1
d150 2
d480 1
d617 6
a710 3
do_text_highlight .$id.t

set moveView(.$id.t) 0
d714 3
a716 113
bind .$id.t <1> {
    do_B1 %W %x %y
    break
}

bind .$id.t <B1-Motion> {
    do_B1_Motion %W %x %y
    break
}

bind .$id.t <Double-1> {
    do_Double1 %W %x %y
    break
}

bind .$id.t <Triple-1> {
    do_Triple1 %W %x %y
    break
}

bind .$id.t <Shift-1> {
    do_Shift1 %W %x %y
    break
}

bind .$id.t <Double-Shift-1> {
    break
}

bind .$id.t <Triple-Shift-1> {
    break
}

bind .$id.t <B1-Leave> {
    break
}

bind .$id.t <B1-Enter> {
    break
}

bind .$id.t <ButtonRelease-1> {
    break
}

bind .$id.t <Control-1> {
    break
}

bind .$id.t <ButtonRelease-2> {
    do_ButtonRelease2 %W
    break
}

bind .$id.t <2> {
    do_B2 %W %x %y
    break
}

bind .$id.t <B2-Motion> {
    do_B2_Motion %W %x %y
    break
}

bind .$id.t <Return> {
    do_return %W
    break
}

bind .$id.t <Control-a> {
    do_ctrl_a %W
    break
}

bind .$id.t <Control-b> {
    do_ctrl_b %W
    break
}

bind .$id.t <Control-c> {
    do_ctrl_c %W
    break
}

bind .$id.t <Control-d> {
    do_ctrl_d %W
    break
}

bind .$id.t <Control-e> {
    do_ctrl_e %W
    break
}

bind .$id.t <Control-f> {
    do_ctrl_f %W
    break
}

bind .$id.t <Control-k> {
    do_ctrl_k %W
    break
}

bind .$id.t <Control-n> {
    do_ctrl_n %W
    break
}

bind .$id.t <Control-p> {
    do_ctrl_p %W
    break
}
a717 39
bind .$id.t <Control-t> {
    do_ctrl_t %W
    break
}

bind .$id.t <Control-u> {
    do_ctrl_u %W
    break
}

bind .$id.t <Control-w> {
    do_ctrl_w %W
    break
}

bind .$id.t <Meta-d> {
    if [%W compare insert < promptEnd] {
	break
    }
    do_text_highlight %W
}

bind .$id.t <Meta-BackSpace> {
    if [%W compare insert <= promptEnd] {
	break
    }
    do_text_highlight %W
}

bind .$id.t <Delete> {
    do_delete %W
    break
}

bind .$id.t <BackSpace> {
    do_backspace %W
    break
}

d722 4
a725 1
do_ctrl_a .$id.t
d728 3
a730 3
.$id.t tag configure result -foreground darkBlue
.$id.t tag configure oldcmd -foreground darkRed
.$id.t tag configure prompt -foreground red3
@


1.9
log
@mods to reflect that adcflag is no longer an mged_variable
@
text
@d86 1
a100 1
    global mged_query_ray_cmd_echo
d109 1
a109 1
    global mged_query_ray_behavior
d395 1
a395 1
	-command "doit $id \"press top\""
d397 1
a397 1
	-command "doit $id \"press bottom\""
d399 1
a399 1
	-command "doit $id \"press right\""
d401 1
a401 1
	-command "doit $id \"press left\""
d403 1
a403 1
	-command "doit $id \"press front\""
d405 1
a405 1
	-command "doit $id \"press rear\""
d407 1
a407 1
	-command "doit $id \"press 35,25\""
d409 1
a409 1
	-command "doit $id \"press 45,45\""
d412 1
a412 1
	-command "doit $id \"zoom 2\""
d414 1
a414 1
	-command "doit $id \"zoom 0.5\""
d417 1
a417 1
	-command "doit $id \"press save\""
d419 1
a419 1
	-command "doit $id \"press restore\""
d422 1
a422 1
	-underline 6 -command "doit $id \"press reset\""
d424 1
a424 1
	-command "doit $id \"knob zero\""
d447 1
a447 5
	-label "Rateknobs" -underline 0 -command "doit $id \"set rateknobs \$mged_rateknobs($id)\""
#.$id.m.modes.m add checkbutton -offvalue 0 -onvalue 1 -variable mged_use_air($id)\
#	-label "Use Air" -underline 0 -command "doit $id \"set use_air \$mged_use_air($id)\""
#.$id.m.modes.m add checkbutton -offvalue 0 -onvalue 1 -variable mged_query_ray_cmd_echo($id)\
#	-label "Echo Query Ray Command" -underline 0 -command "doit $id \"set query_ray_cmd_echo \$mged_query_ray_cmd_echo($id)\""
d449 1
a449 1
	-label "Draw Rubber Band" -underline 7 -command "doit $id \"set rubber_band \$mged_rubber_band($id)\""
d451 1
a451 1
	-label "Draw Grid" -command "doit $id \"set grid_draw \$mged_grid_draw($id)\""
d453 1
a453 1
	-label "Snap To Grid" -command "doit $id \"set grid_snap \$mged_grid_snap($id)\""
d485 1
a485 1
	-label "Paint Rectangle Area" -command "doit $id \"set mouse_behavior \$mged_mouse_behavior($id)\""
d487 1
a487 1
	-label "Raytrace Rectangle Area" -command "doit $id \"set mouse_behavior \$mged_mouse_behavior($id)\""
d489 1
a489 1
	-label "Zoom Rectangle Area" -command "doit $id \"set mouse_behavior \$mged_mouse_behavior($id)\""
d491 1
a491 1
	-label "Query Ray" -command "doit $id \"set mouse_behavior \$mged_mouse_behavior($id)\""
d493 1
a493 1
	-label "Default" -command "doit $id \"set mouse_behavior \$mged_mouse_behavior($id)\""
d496 6
a501 6
.$id.m.settings.m.cm_qray add radiobutton -value t -variable mged_query_ray_behavior($id)\
	-label "Text" -command "doit $id \"set query_ray_behavior \$mged_query_ray_behavior($id)\""
.$id.m.settings.m.cm_qray add radiobutton -value g -variable mged_query_ray_behavior($id)\
	-label "Graphics" -command "doit $id \"set query_ray_behavior \$mged_query_ray_behavior($id)\""
.$id.m.settings.m.cm_qray add radiobutton -value b -variable mged_query_ray_behavior($id)\
	-label "both" -command "doit $id \"set query_ray_behavior \$mged_query_ray_behavior($id)\""
d538 1
a538 1
	-label "All" -command "doit $id \"set fb_all \$mged_fb_all($id)\""
d540 1
a540 1
	-label "Rectangle Area" -command "doit $id \"set fb_all \$mged_fb_all($id)\""
d543 1
a543 1
	-label "Overlay" -command "doit $id \"set fb_overlay \$mged_fb_overlay($id)\""
d545 1
a545 1
	-label "Underlay" -command "doit $id \"set fb_overlay \$mged_fb_overlay($id)\""
d572 1
a572 1
	-label "Model" -command "doit $id \"set coords \$mged_coords($id)\""
d574 1
a574 1
	-label "View" -command "doit $id \"set coords \$mged_coords($id)\""
d576 1
a576 1
	-label "Object" -command "doit $id \"set coords \$mged_coords($id)\"" -state disabled
d580 1
a580 1
	-label "View Center" -command "doit $id \"set rotate_about \$mged_rotate_about($id)\""
d582 1
a582 1
	-label "Eye" -command "doit $id \"set rotate_about \$mged_rotate_about($id)\""
d584 1
a584 1
	-label "Model Origin" -command "doit $id \"set rotate_about \$mged_rotate_about($id)\""
d586 1
a586 1
	-label "Key Point" -command "doit $id \"set rotate_about \$mged_rotate_about($id)\"" -state disabled
d598 1
a598 1
	-label "Center" -command "doit $id \"set v_axes_pos {0 0}\""
d600 1
a600 1
	-label "Lower Left" -command "doit $id \"set v_axes_pos {-1750 -1750}\""
d602 1
a602 1
	-label "Upper Left" -command "doit $id \"set v_axes_pos {-1750 1750}\""
d604 1
a604 1
	-label "Upper Right" -command "doit $id \"set v_axes_pos {1750 1750}\""
d606 1
a606 1
	-label "Lower Right" -command "doit $id \"set v_axes_pos {1750 -1750}\""
d611 1
a611 1
	-label "Angle/Dist Cursor" -underline 0 -command "doit $id \"adc draw \$mged_adc_draw($id)\""
d628 2
d635 1
a635 1
	-variable mged_v_axes($id) -label "View" -command "doit $id \"set v_axes \$mged_v_axes($id)\""
d637 1
a637 1
	-variable mged_m_axes($id) -label "Model" -command "doit $id \"set m_axes \$mged_m_axes($id)\""
d639 1
a639 1
	-variable mged_e_axes($id) -label "Edit" -command "doit $id \"set e_axes \$mged_e_axes($id)\""
d698 2
d702 30
a731 1
bind .$id.t <ButtonPress-1> {
d735 1
a735 1
bind .$id.t <ButtonRelease-1> {
d739 1
a739 1
bind .$id.t <Button1-Motion> {
d743 1
a743 1
bind .$id.t <ButtonPress-2> {
d747 1
a747 1
bind .$id.t <ButtonRelease-2> {
d751 2
a752 1
bind .$id.t <Button2-Motion> {
d756 2
a757 1
bind .$id.t <ButtonPress-3> {
d761 2
a762 1
bind .$id.t <ButtonRelease-3> {
d857 1
a857 1
ia_print_prompt .$id.t "mged> "
d861 4
a864 3
.$id.t tag configure bold -font -*-Courier-Bold-R-Normal-*-120-*-*-*-*-*-*
set ia_font -*-Courier-Medium-R-Normal-*-120-*-*-*-*-*-*
.$id.t configure -font $ia_font
d915 1
a1016 2
    global query_ray_cmd_echo
    global mged_query_ray_cmd_echo
a1028 2
    global query_ray_behavior
    global mged_query_ray_behavior
a1047 1
    set mged_query_ray_cmd_echo($id) $query_ray_cmd_echo
a1052 1
    set mged_query_ray_behavior($id) $query_ray_behavior
d1564 1
a1564 1
proc doit { id cmd } {
d1570 1
a1570 1
	doit_local $id $cmd
d1572 1
a1572 1
	doit_using_list $id $cmd
d1574 1
a1574 1
	doit_all $cmd
d1584 1
a1584 1
proc doit_local { id cmd } {
d1605 1
a1605 1
proc doit_using_list { id cmd } {
d1616 1
a1616 1
proc doit_all { cmd } {
d1629 1
a1629 1
    doit $id "set listen \$mged_listen($id)"
d1641 1
a1641 1
    doit $id "set fb \$mged_fb($id)"
d1646 1
a1646 1
	doit $id "set listen \$mged_listen($id)"
@


1.8
log
@*- changed a few menu items around
@
text
@d114 1
a114 1
    global mged_adcflag
d614 2
a615 2
.$id.m.tools.m add checkbutton -offvalue 0 -onvalue 1 -variable mged_adcflag($id)\
	-label "Angle/Dist Cursor" -underline 0 -command "doit $id \"set adcflag \$mged_adcflag($id)\""
d628 2
d972 1
a972 2
    global adcflag
    global mged_adcflag
d1012 1
a1012 1
    set mged_adcflag($id) $adcflag
d1518 1
a1518 2
    global adcflag
    global mged_adcflag
d1523 4
a1526 3
    if {[info exists mged_active_dm($id)]} {
	set mged_adcflag($id) $adcflag
    }
d1528 3
a1530 2
    if {$transform == "a"} {
	do_mouse_bindings [winset]
@


1.7
log
@too many things to mention ---- way over due for checkin
@
text
@d100 1
a100 1
    global mged_echo_query_ray_cmd
d450 2
a451 2
#.$id.m.modes.m add checkbutton -offvalue 0 -onvalue 1 -variable mged_echo_query_ray_cmd($id)\
#	-label "Echo Query Ray Command" -underline 0 -command "doit $id \"set echo_query_ray_cmd \$mged_echo_query_ray_cmd($id)\""
d453 1
a453 1
	-label "Rubber Band" -underline 7 -command "doit $id \"set rubber_band \$mged_rubber_band($id)\""
a461 2
.$id.m.modes.m add checkbutton -offvalue 0 -onvalue 1 -variable mged_listen($id)\
	-label "Listen For Clients" -underline 0 -command "set_listen $id" -state disabled
d550 3
d982 2
a983 2
    global echo_query_ray_cmd
    global mged_echo_query_ray_cmd
d1017 1
a1017 1
    set mged_echo_query_ray_cmd($id) $echo_query_ray_cmd
d1031 1
a1031 1
	.$id.m.modes.m entryconfigure 8 -state normal
d1034 1
a1034 1
	.$id.m.modes.m entryconfigure 8 -state disabled
d1599 1
a1599 1
    doit $id "set listen $mged_listen($id)"
d1611 1
a1611 1
    doit $id "set fb $mged_fb($id)"
d1614 3
a1616 1
	.$id.m.modes.m entryconfigure 8 -state normal
d1618 1
a1619 1
	.$id.m.modes.m entryconfigure 8 -state disabled
@


1.6
log
@mods to make use of two new mged variables: ecoords and erotate_about
@
text
@d1 21
a21 1
# Author - Bob Parker
d31 4
a42 4
if ![info exists mged_default_gt] {
    set mged_default_gt [dm_best_name]
}

d75 4
a82 21
if ![info exists mged_default_vap] {
    winset nu
    switch $v_axes_pos {
	1 {
	    set mged_default_vap "Lower Left"
	}
	2 {
	    set mged_default_vap "Upper Left"
	}
	3 {
	    set mged_default_vap "Upper Right"
	}
	4 {
	    set mged_default_vap "Lower Right"
	}
	default {
	    set mged_default_vap Center
	}
    }
}

d85 10
a94 5
proc openw args {
    global ia_cmd_prefix
    global ia_more_default
    global ia_font
    global ia_illum_label
d99 23
a121 20
    global player_screen
    global openw_usage
    global env
    global faceplate
    global transform
    global transform_what
    global rotate_about
    global rotate_about_what
    global coords
    global coord_type
    global rateknobs
    global rateknobs_on
    global adcflag
    global adcflag_on
    global edit_info
    global edit_info_on
    global multi_view
    global sliders_on
    global buttons_on
    global win_size
d129 10
a141 9
    global mged_default_id
    global mged_default_gt
    global mged_default_pane
    global mged_default_mvmode
    global mged_default_config
    global mged_default_display
    global mged_default_gdisplay
    global mged_default_comb
    global mged_default_vap
a142 7
    global view_axes_pos
    global view_axes
    global v_axes
    global model_axes
    global m_axes
    global edit_axes
    global e_axes
d146 8
a153 8
set save_id [lindex [cmd_get] 2]
set comb $mged_default_comb
set join_c 0
set dtype $mged_default_gt
set id ""
set scw 0
set sgw 0
set i 0
d155 2
a156 2
set screen $mged_default_display
set dscreen $mged_default_gdisplay
d158 10
a167 10
if {$mged_default_config == "b"} {
    set scw 1
    set sgw 1
} elseif {$mged_default_config == "c"} {
    set scw 1
    set sgw 0
} elseif {$mged_default_config == "g"} {
    set scw 0
    set sgw 1
}
d172 4
a175 1
set argc [llength $args]
d183 1
a183 1
	    return [help openw]
d199 1
a199 1
	    return [help openw]
d202 1
a202 1
# display string for everything but the graphics window
d206 1
a206 1
	    return [help openw]
d210 8
d223 7
a229 1
	    return [help openw]
d232 4
a235 2
	set dscreen [lindex $args $i]
    } elseif {$arg == "-gt"} {
d239 1
a239 1
	    return [help openw]
d243 1
d248 1
a248 1
	    return [help openw]
d255 1
a255 1
	return [help openw]
d261 1
a261 1
	return [help openw]
d265 4
d270 1
a270 1
    return "openw: not allowed to use \"mged\" as id"
d288 2
d291 4
d324 2
a325 2
    if [catch { openmv $mged_top($id) $mged_dmc($id) $dtype $mv_size } result] {
	closew $id
d332 1
a332 1
    toplevel $mged_dmc($id) -screen $dscreen -relief sunken -borderwidth 2
d337 2
a338 2
    if [catch { openmv $mged_top($id) $mged_dmc($id) $dtype $mv_size } result] {
	closew $id
d350 1
d368 1
a368 1
.$id.m.file.m add command -label "Close" -underline 0 -command "closew $id"
d395 1
a395 1
	-command "cmd_set $id; press top"
d397 1
a397 1
	-command "cmd_set $id; press bottom"
d399 1
a399 1
	-command "cmd_set $id; press right"
d401 1
a401 1
	-command "cmd_set $id; press left"
d403 1
a403 1
	-command "cmd_set $id; press front"
d405 1
a405 1
	-command "cmd_set $id; press rear"
d407 1
a407 1
	-command "cmd_set $id; press 35,25"
d409 1
a409 1
	-command "cmd_set $id; press 45,45"
d412 1
a412 1
	-command "cmd_set $id; zoom 2"
d414 1
a414 1
	-command "cmd_set $id; zoom 0.5"
d417 1
a417 1
	-command "cmd_set $id; press save"
d419 1
a419 1
	-command "cmd_set $id; press restore"
d422 1
a422 1
	-underline 6 -command "cmd_set $id; press reset"
d424 1
a424 1
	-command "cmd_set $id; knob zero"
d441 70
a510 26
menubutton .$id.m.options -text "Options" -underline 0 -menu .$id.m.options.m
menu .$id.m.options.m -tearoff $do_tearoffs
.$id.m.options.m add checkbutton -offvalue 0 -onvalue 1 -variable status_bar($id)\
	-label "Status Bar" -underline 0 -command "toggle_status_bar $id"
if {$comb} {
.$id.m.options.m add checkbutton -offvalue 0 -onvalue 1 -variable cmd_win($id)\
	-label "Command Window" -underline 0 -command "set_cmd_win $id"
.$id.m.options.m add checkbutton -offvalue 0 -onvalue 1 -variable dm_win($id)\
	-label "Graphics Window" -underline 0 -command "set_dm_win $id"
} 
.$id.m.options.m add checkbutton -offvalue 0 -onvalue 1 -variable rateknobs_on($id)\
	-label "Rateknobs" -underline 0 -command "set_rateknobs $id"
.$id.m.options.m add separator
.$id.m.options.m add cascade -label "Multi-Pane" -menu .$id.m.options.m.cm_mpane
.$id.m.options.m add cascade -label "Units" -menu .$id.m.options.m.cm_units
.$id.m.options.m add cascade -label "Constraint Coords" -menu .$id.m.options.m.cm_coord
#.$id.m.options.m add cascade -label "Rate/Abs" -menu .$id.m.options.m.cm_rate_type
.$id.m.options.m add cascade -label "Rotate About..." -menu .$id.m.options.m.cm_origin
.$id.m.options.m add cascade -label "Transform..." -menu .$id.m.options.m.cm_transform

menu .$id.m.options.m.cm_mpane -tearoff $do_tearoffs
.$id.m.options.m.cm_mpane add checkbutton -offvalue 0 -onvalue 1\
	-variable multi_view($id) -label "Multi Pane" -underline 0\
	-command "setmv $id"
.$id.m.options.m.cm_mpane add separator
.$id.m.options.m.cm_mpane add radiobutton -value ul -variable mged_dm_loc($id)\
d512 1
a512 1
.$id.m.options.m.cm_mpane add radiobutton -value ur -variable mged_dm_loc($id)\
d514 1
a514 1
.$id.m.options.m.cm_mpane add radiobutton -value ll -variable mged_dm_loc($id)\
d516 1
a516 1
.$id.m.options.m.cm_mpane add radiobutton -value lr -variable mged_dm_loc($id)\
d518 1
a518 1
.$id.m.options.m.cm_mpane add radiobutton -value lv -variable mged_dm_loc($id)\
d521 2
a522 2
menu .$id.m.options.m.cm_units -tearoff $do_tearoffs
.$id.m.options.m.cm_units add radiobutton -value um -variable mged_display(units)\
d524 1
a524 1
.$id.m.options.m.cm_units add radiobutton -value mm -variable mged_display(units)\
d526 1
a526 1
.$id.m.options.m.cm_units add radiobutton -value cm -variable mged_display(units)\
d528 1
a528 1
.$id.m.options.m.cm_units add radiobutton -value m -variable mged_display(units)\
d530 1
a530 1
.$id.m.options.m.cm_units add radiobutton -value km -variable mged_display(units)\
d532 2
a533 2
.$id.m.options.m.cm_units add separator
.$id.m.options.m.cm_units add radiobutton -value in -variable mged_display(units)\
d535 1
a535 1
.$id.m.options.m.cm_units add radiobutton -value ft -variable mged_display(units)\
d537 1
a537 1
.$id.m.options.m.cm_units add radiobutton -value yd -variable mged_display(units)\
d539 1
a539 1
.$id.m.options.m.cm_units add radiobutton -value mi -variable mged_display(units)\
d542 48
a589 28
menu .$id.m.options.m.cm_coord -tearoff $do_tearoffs
.$id.m.options.m.cm_coord add radiobutton -value m -variable coord_type($id)\
	-label "Model" -command "set_coords $id"
.$id.m.options.m.cm_coord add radiobutton -value v -variable coord_type($id)\
	-label "View" -command "set_coords $id"
.$id.m.options.m.cm_coord add radiobutton -value o -variable coord_type($id)\
	-label "Object" -command "set_coords $id" -state disabled

#menu .$id.m.options.m.cm_rate_type -tearoff $do_tearoffs
#.$id.m.options.m.cm_rate_type add checkbutton -offvalue 0 -onvalue 1\
#	-variable rateknobs -label "rateknobs"
#.$id.m.options.m.cm_rate_type add command -label "zero" -command "knob zero"
#.$id.m.options.m.cm_rate_type add separator
#.$id.m.options.m.cm_rate_type add radiobutton -value p -variable rate_type\
#	-label "Pos Rate" -command "set_rate_type $id"
#.$id.m.options.m.cm_rate_type add radiobutton -value v -variable rate_type\
#	-label "Vel Rate" -command "set_rate_type $id"
#.$id.m.options.m.cm_rate_type add command -label "Set Friction..." -underline 0 -command "set_friction $id"

menu .$id.m.options.m.cm_origin -tearoff $do_tearoffs
.$id.m.options.m.cm_origin add radiobutton -value v -variable rotate_about_what($id)\
	-label "View Center" -command "set_rotate_about $id"
.$id.m.options.m.cm_origin add radiobutton -value e -variable rotate_about_what($id)\
	-label "Eye" -command "set_rotate_about $id"
.$id.m.options.m.cm_origin add radiobutton -value m -variable rotate_about_what($id)\
	-label "Model Origin" -command "set_rotate_about $id"
.$id.m.options.m.cm_origin add radiobutton -value k -variable rotate_about_what($id)\
	-label "Key Point" -command "set_rotate_about $id" -state disabled
d591 2
a592 2
menu .$id.m.options.m.cm_transform -tearoff $do_tearoffs
.$id.m.options.m.cm_transform add radiobutton -value v -variable transform_what($id)\
d594 1
a594 1
.$id.m.options.m.cm_transform add radiobutton -value a -variable transform_what($id)\
d596 1
a596 1
.$id.m.options.m.cm_transform add radiobutton -value e -variable transform_what($id)\
d599 12
d613 12
a624 3
.$id.m.tools.m add cascade -label "Axes" -menu .$id.m.tools.m.cm_axes
.$id.m.tools.m add cascade -label "View Axes Position" -menu .$id.m.tools.m.cm_vap
.$id.m.tools.m add separator
d627 4
a630 6
.$id.m.tools.m add checkbutton -offvalue 0 -onvalue 1 -variable adcflag_on($id)\
	 -label "Angle/Dist Cursor" -underline 0 -command "toggle_adc $id"
#.$id.m.tools.m add checkbutton -offvalue 0 -onvalue 1 -variable sliders_on($id)\
#	-label "Sliders" -underline 0 -command "toggle_sliders $id"
.$id.m.tools.m add checkbutton -offvalue 0 -onvalue 1 -variable edit_info_on($id)\
	-label "Edit Info" -underline 0 -command "toggle_edit_info $id"
d634 1
a634 1
	-variable view_axes($id) -label "View" -command "set_view_axes $id"
d636 1
a636 1
	-variable model_axes($id) -label "Model" -command "set_model_axes $id"
d638 1
a638 13
	-variable edit_axes($id) -label "Edit" -command "set_edit_axes $id"

menu .$id.m.tools.m.cm_vap -tearoff $do_tearoffs
.$id.m.tools.m.cm_vap add radiobutton -variable view_axes_pos($id)\
	-label "Center" -command "set_v_axes_pos $id"
.$id.m.tools.m.cm_vap add radiobutton -variable view_axes_pos($id)\
	-label "Lower Left" -command "set_v_axes_pos $id"
.$id.m.tools.m.cm_vap add radiobutton -variable view_axes_pos($id)\
	-label "Upper Left" -command "set_v_axes_pos $id"
.$id.m.tools.m.cm_vap add radiobutton -variable view_axes_pos($id)\
	-label "Upper Right" -command "set_v_axes_pos $id"
.$id.m.tools.m.cm_vap add radiobutton -variable view_axes_pos($id)\
	-label "Lower Right" -command "set_v_axes_pos $id"
d695 1
d699 32
d732 22
a753 4
    %W mark set insert {end - 1c};
    %W insert insert \n;
    ia_invoke %W;
    break;
d756 18
a773 3
bind .$id.t <Control-u> {
    %W delete promptEnd {promptEnd lineend}
    %W mark set insert promptEnd
d777 1
a777 9
    %W delete promptEnd {promptEnd lineend}
    %W mark set insert promptEnd
    set id [get_player_id_t %W]
    cmd_set $id
    set result [catch hist_prev msg]
    if {$result==0} {
	%W insert insert [string range $msg 0 \
		[expr [string length $msg]-2]]
    }
d781 2
a782 10
bind .$id.t <Control-n> {
    %W delete promptEnd {promptEnd lineend}
    %W mark set insert promptEnd
    set id [get_player_id_t %W]
    cmd_set $id
    set result [catch hist_next msg]
    if {$result==0} {
	%W insert insert [string range $msg 0 \
		[expr [string length $msg]-2]]
    }
d786 3
a788 8
bind .$id.t <Control-c> {
    %W mark set insert {end - 1c};
    %W insert insert \n;
    ia_print_prompt %W "mged> "
    %W see insert
    set id [get_player_id_t %W]
    set ia_cmd_prefix($id) ""
    set ia_more_default($id) ""
d792 14
a805 5
    set ti [%W search -backwards -regexp "\[ \t\]\[^ \t\]+\[ \t\]*" insert promptEnd]
    if [string length $ti] {
	%W delete "$ti + 1c" insert
    } else {
	%W delete promptEnd insert
d807 1
d810 2
a811 2
bind .$id.t <Control-a> {
    %W mark set insert promptEnd
d815 4
a818 53
#bind .$id.t <Delete> {
#    catch {%W tag remove sel sel.first promptEnd}
#    if {[%W tag nextrange sel 1.0 end] == ""} {
#	if [%W compare insert < promptEnd] {
#	    break
#	}
#    }
#}
#
#bind .$id.t <BackSpace> {
#    catch {%W tag remove sel sel.first promptEnd}
#    if {[%W tag nextrange sel 1.0 end] == ""} {
#	if [%W compare insert <= promptEnd] {
#	    break
#	}
#    }
#}
#
#bind .$id.t <Control-d> {
#    if [%W compare insert < promptEnd] {
#	break
#    }
#}
#
#bind .$id.t <Control-k> {
#    if [%W compare insert < promptEnd] {
#	break
#    }
#}
#
#bind .$id.t <Control-t> {
#    if [%W compare insert < promptEnd] {
#	break
#    }
#}
#
#bind .$id.t <Meta-d> {
#    if [%W compare insert < promptEnd] {
#	break
#    }
#}
#
#bind .$id.t <Meta-BackSpace> {
#    if [%W compare insert <= promptEnd] {
#	break
#    }
#}
#
#bind .$id.t <Control-h> {
#    if [%W compare insert <= promptEnd] {
#	break
#    }
#}
d823 2
d834 1
a834 1
pack .$id.m.file .$id.m.edit .$id.m.view .$id.m.viewring .$id.m.options .$id.m.tools -side left
d878 1
a878 24
#trace variable adcflag w "set_adcflag $id"

winset $mged_active_dm($id)
set rateknobs_on($id) $rateknobs
set rotate_about_what($id) $rotate_about
set coord_type($id) $coords
set transform_what($id) $transform
if {$v_axes} {
    set view_axes($id) 1
} else {
    set view_axes($id) 0
}
set model_axes($id) $m_axes
set edit_axes($id) $e_axes
set view_axes_pos($id) $mged_default_vap

set_rateknobs $id
set_rotate_about $id
set_coords $id
set_transform $id
set_view_axes $id
set_v_axes_pos $id
set_model_axes $id
set_edit_axes $id
d889 1
d891 1
a891 2
wm protocol $mged_top($id) WM_DELETE_WINDOW "closew $id"
wm title $mged_top($id) "MGED Interaction Window ($id) - Upper Right"
d895 1
a895 1
proc closew args {
a898 1
    global sliders_on
d906 1
a906 1
	return [help closew]
d924 1
a924 1
	    reconfig_openw_all
a928 1
    set sliders_on($id) 0
d940 1
a940 1
proc reconfig_openw { id } {
d957 1
a957 1
proc reconfig_openw_all {} {
d961 74
a1034 1
	reconfig_openw $id
a1049 14
proc toggle_sliders { id } {
    global sliders_on
    global scroll_enabled

    if [ winfo exists .sliders$id ] {
	cmd_set $id
	sliders off
	return
    }

    cmd_set $id
    sliders on
}

d1100 1
a1100 1
	reconfig_openw $id
d1150 1
a1150 1
	reconfig_openw [lindex $args 0]
a1166 3
    global sliders_on
    global adcflag
    global adcflag_on
a1168 7
    global view_axes_pos
    global view_axes
    global v_axes
    global model_axes
    global m_axes
    global edit_axes
    global e_axes
d1170 2
a1171 4
    bind $mged_top($id).ul <Enter> "winset $mged_top($id).ul; focus $mged_top($id).ul"
    bind $mged_top($id).ur <Enter> "winset $mged_top($id).ur; focus $mged_top($id).ur"
    bind $mged_top($id).ll <Enter> "winset $mged_top($id).ll; focus $mged_top($id).ll"
    bind $mged_top($id).lr <Enter> "winset $mged_top($id).lr; focus $mged_top($id).lr"
d1180 3
d1185 1
a1185 2
    winset $mged_active_dm($id)
    set adcflag_on($id) $adcflag
a1186 8
    if {$v_axes} {
	set view_axes($id) 1
    } else {
	set view_axes($id) 0
    }
    set view_axes_pos($id) [get_view_axes_pos $id]
    set model_axes($id) $m_axes
    set edit_axes($id) $e_axes
a1224 4
    bind $mged_top($id).ul <Enter> "winset $mged_top($id).ul; focus $mged_top($id).ul; sliders \[subst \$slidersflag\]"
    bind $mged_top($id).ur <Enter> "winset $mged_top($id).ur; focus $mged_top($id).ur; sliders \[subst \$slidersflag\]"
    bind $mged_top($id).ll <Enter> "winset $mged_top($id).ll; focus $mged_top($id).ll; sliders \[subst \$slidersflag\]"
    bind $mged_top($id).lr <Enter> "winset $mged_top($id).lr; focus $mged_top($id).lr; sliders \[subst \$slidersflag\]"
d1262 1
d1267 4
a1270 3
    if {$mged_active_dm($id) != "lv"} {
	winset $mged_active_dm($id)
    }
d1293 1
d1298 4
a1301 3
    if {$mged_active_dm($id) != "lv"} {
	winset $mged_active_dm($id)
    }
d1324 1
d1329 4
a1332 3
    if {$mged_active_dm($id) != "lv"} {
	winset $mged_active_dm($id)
    }
d1350 1
d1355 4
a1358 3
    if {$mged_active_dm($id) != "lv"} {
	winset $mged_active_dm($id)
    }
d1377 1
d1382 4
a1385 3
    if {$mged_active_dm($id) != "lv"} {
	winset $mged_active_dm($id)
    }
d1404 1
d1409 4
a1412 3
    if {$mged_active_dm($id) != "lv"} {
	winset $mged_active_dm($id)
    }
a1453 83
proc set_friction { id } {
}

proc set_coords { id } {
    global mged_top
    global mged_active_dm
    global coords
    global coord_type

    winset $mged_top($id).ul
    set coords $coord_type($id)

    winset $mged_top($id).ur
    set coords $coord_type($id)

    winset $mged_top($id).ll
    set coords $coord_type($id)

    winset $mged_top($id).lr
    set coords $coord_type($id)
}

proc set_ecoords { id } {
    global mged_top
    global mged_active_dm
    global ecoords
    global coord_type

    winset $mged_top($id).ul
    set ecoords $coord_type($id)

    winset $mged_top($id).ur
    set ecoords $coord_type($id)

    winset $mged_top($id).ll
    set ecoords $coord_type($id)

    winset $mged_top($id).lr
    set ecoords $coord_type($id)
}


proc set_rotate_about { id } {
    global mged_top
    global mged_active_dm
    global rotate_about
    global rotate_about_what

    winset $mged_top($id).ul
    set rotate_about $rotate_about_what($id)

    winset $mged_top($id).ur
    set rotate_about $rotate_about_what($id)

    winset $mged_top($id).ll
    set rotate_about $rotate_about_what($id)

    winset $mged_top($id).lr
    set rotate_about $rotate_about_what($id)
}

proc set_erotate_about { id } {
    global mged_top
    global mged_active_dm
    global erotate_about
    global rotate_about_what

    winset $mged_top($id).ul
    set erotate_about $rotate_about_what($id)

    winset $mged_top($id).ur
    set erotate_about $rotate_about_what($id)

    winset $mged_top($id).ll
    set erotate_about $rotate_about_what($id)

    winset $mged_top($id).lr
    set erotate_about $rotate_about_what($id)
}

proc set_rate_type { id } {
}

d1473 1
a1473 1
    global transform_what
d1476 1
a1476 1
    set transform $transform_what($id)
d1480 1
a1480 1
    set transform $transform_what($id)
d1484 1
a1484 1
    set transform $transform_what($id)
d1488 1
a1488 1
    set transform $transform_what($id)
d1490 2
d1517 1
a1517 1
    global adcflag_on
d1523 1
a1523 1
	set adcflag_on($id) $adcflag
d1533 1
a1533 6
proc toggle_adc { id } {
    cmd_set $id
    adc
}

proc set_adcflag { args } {
d1535 2
a1536 2
    global adcflag_on
    global adcflag
d1538 10
a1547 1
    set id [lindex $args 0]
d1549 1
a1549 2
    if {[winset] == $mged_active_dm($id)} {
	set adcflag_on($id) $adcflag
d1553 1
a1553 1
proc set_rateknobs { id } {
a1555 2
    global rateknobs
    global rateknobs_on
d1558 1
a1558 1
    set rateknobs $rateknobs_on($id)
d1561 1
a1561 1
    set rateknobs $rateknobs_on($id)
d1564 1
a1564 1
    set rateknobs $rateknobs_on($id)
d1567 1
a1567 2
    set rateknobs $rateknobs_on($id)
}
d1569 1
a1569 4
proc set_view_axes { id } {
    global mged_active_dm
    global view_axes
    global v_axes
d1571 1
a1571 2
    winset $mged_active_dm($id)
    set v_axes $view_axes($id)
d1574 7
a1580 4
proc set_model_axes { id } {
    global mged_active_dm
    global model_axes
    global m_axes
d1582 1
a1582 2
    winset $mged_active_dm($id)
    set m_axes $model_axes($id)
d1585 5
a1589 4
proc set_edit_axes { id } {
    global mged_active_dm
    global edit_axes
    global e_axes
d1591 1
a1591 2
    winset $mged_active_dm($id)
    set e_axes $edit_axes($id)
d1594 5
a1598 5
proc set_v_axes_pos { id } {
    global mged_active_dm
    global view_axes_pos
    global v_axes_pos
    global v_axes
d1600 2
a1601 18
    winset $mged_active_dm($id)
    switch $view_axes_pos($id) {
	"Lower Left" {
	    set v_axes_pos 1
	}
	"Upper Left" {
	    set v_axes_pos 2
	}
	"Upper Right" {
	    set v_axes_pos 3
	}
	"Lower Right" {
	    set v_axes_pos 4
	}
	default {
	    set v_axes_pos 0
	}
    }
d1604 5
a1608 5
proc get_view_axes_pos { id } {
    global mged_active_dm
    global view_axes_pos
    global v_axes_pos
    global v_axes
d1610 1
a1610 1
    winset $mged_active_dm($id)
d1612 5
a1616 16
    switch $v_axes_pos {
	1 {
	    return "Lower Left"
	}
	2 {
	    return "Upper Left"
	}
	3 {
	    return "Upper Right"
	}
	4 {
	    return "Lower Right"
	}
	default{
	    return Center
	}
d1618 1
a1618 1
}@


1.5
log
@add some error checking
@
text
@d1337 20
d1374 19
@


1.4
log
@add a few menu items
@
text
@d3 1
a3 1
check_externs "_mged_attach _mged_aim"
d241 1
a241 1
    return "openw: not allowed to use id mged"
d288 5
a292 1
    openmv $mged_top($id) $mged_dmc($id) $dtype $mv_size
d302 4
a305 1
    openmv $mged_top($id) $mged_dmc($id) $dtype $mv_size
d992 6
@


1.3
log
@*- mods to view axes
*- new variable: do_tearoffs
@
text
@d320 1
a320 1
.$id.m.file.m add command -label "Extract..." -underline 2 -command "do_Keep $id"
d329 3
a331 3
.$id.m.file.m.cm_saveview add command -label "RT script" -command "do_rt_script $id"
.$id.m.file.m.cm_saveview add command -label "Plot" -command "do_plot $id"
.$id.m.file.m.cm_saveview add command -label "Postscript" -command "init_psTool $id"
d336 3
a338 2
.$id.m.edit.m add command -label "Edit Solid" -underline 5 -command "esolmenu"
.$id.m.edit.m add command -label "Edit Matrix" -underline 5 -command "press oill"
@


1.2
log
@new interface mostly done
@
text
@d61 2
a62 2
    switch $v_axes {
	3 {
d65 1
a65 1
	4 {
d68 1
a68 1
	5 {
d71 1
a71 1
	6 {
d80 2
d138 1
d316 1
a316 1
menu .$id.m.file.m
d322 1
a322 1
.$id.m.file.m add command -label "Raytrace..." -underline 0 -command "do_Raytrace $id"
d328 1
a328 1
menu .$id.m.file.m.cm_saveview
d331 1
a331 1
.$id.m.file.m.cm_saveview add command -label "Postscript" -command "do_postscript $id"
d334 1
a334 1
menu .$id.m.edit.m
d342 1
a342 1
menu .$id.m.edit.m.cm_add
d344 2
a345 2
.$id.m.edit.m.cm_add add command -label "Combination..." -command "comb_create $id"
.$id.m.edit.m.cm_add add command -label "Region..." -command "reg_create $id"
d349 17
a365 9
menu .$id.m.view.m
.$id.m.view.m add command -label "Top" -underline 0 -command "press top"
.$id.m.view.m add command -label "Bottom" -underline 5 -command "press bottom"
.$id.m.view.m add command -label "Right" -underline 0 -command "press right"
.$id.m.view.m add command -label "Left" -underline 0 -command "press left"
.$id.m.view.m add command -label "Front" -underline 0 -command "press front"
.$id.m.view.m add command -label "Back" -underline 0 -command "press rear"
.$id.m.view.m add command -label "az35,el25" -underline 2 -command "press 35,25"
.$id.m.view.m add command -label "az45,el45" -underline 2 -command "press 45,45"
d367 4
a370 2
.$id.m.view.m add command -label "Zoom In" -underline 5 -command "zoom 2"
.$id.m.view.m add command -label "Zoom Out" -underline 5 -command "zoom 0.5"
d372 4
a375 2
.$id.m.view.m add command -label "Save" -underline 0 -command "press save"
.$id.m.view.m add command -label "Restore" -underline 1 -command "press restore"
d377 4
a380 2
.$id.m.view.m add command -label "Reset Viewsize" -underline 6 -command "press reset"
.$id.m.view.m add command -label "Zero" -underline 0 -command "knob zero"
d383 1
a383 1
menu .$id.m.viewring.m 
d391 1
a391 1
menu .$id.m.viewring.m.cm_select
d394 1
a394 1
menu .$id.m.viewring.m.cm_delete
d398 1
a398 1
menu .$id.m.options.m
d417 1
a417 1
menu .$id.m.options.m.cm_mpane
d433 1
a433 1
menu .$id.m.options.m.cm_units
d454 1
a454 1
menu .$id.m.options.m.cm_coord
d462 1
a462 1
#menu .$id.m.options.m.cm_rate_type
d473 1
a473 1
menu .$id.m.options.m.cm_origin
d483 1
a483 1
menu .$id.m.options.m.cm_transform
d492 1
a492 1
menu .$id.m.tools.m
d495 1
d500 2
a501 2
.$id.m.tools.m add checkbutton -offvalue 0 -onvalue 1 -variable sliders_on($id)\
	-label "Sliders" -underline 0 -command "toggle_sliders $id"
d505 1
a505 1
menu .$id.m.tools.m.cm_axes
d513 1
a513 1
menu .$id.m.tools.m.cm_vap
d515 1
a515 1
	-label "Center" -command "set_view_axes_pos $id"
d517 1
a517 1
	-label "Lower Left" -command "set_view_axes_pos $id"
d519 1
a519 1
	-label "Upper Left" -command "set_view_axes_pos $id"
d521 1
a521 1
	-label "Upper Right" -command "set_view_axes_pos $id"
d523 1
a523 1
	-label "Lower Right" -command "set_view_axes_pos $id"
d526 1
a526 1
menu .$id.m.help.m
d776 1
a776 1
set_view_axes_pos $id
d939 1
a939 1
	    return "jcs me thinks the session is corrupted"
d942 1
a942 1
	catch { tie $nw $ow }
d965 1
a965 1
    catch {untie $w}
d1485 1
a1485 1
proc set_view_axes_pos { id } {
d1488 1
a1492 8
	Center {
	    if { $v_axes } {
		set v_axes 2
	    } else {
		set v_axes 2
		set v_axes 0
	    }
	}
d1494 1
a1494 6
	    if { $v_axes } {
		set v_axes 3
	    } else {
		set v_axes 3
		set v_axes 0
	    }
d1497 1
a1497 6
	    if { $v_axes } {
		set v_axes 4
	    } else {
		set v_axes 4
		set v_axes 0
	    }
d1500 1
a1500 6
	    if { $v_axes } {
		set v_axes 5
	    } else {
		set v_axes 5
		set v_axes 0
	    }
d1503 1
a1503 6
	    if { $v_axes } {
		set v_axes 6
	    } else {
		set v_axes 6
		set v_axes 0
	    }
d1506 1
a1506 2
	    puts "set_view_axes_pos: view_axes_pos($id) has invalid value -\
		    $view_axes_pos($id)"
d1514 1
d1518 3
a1520 9
    set ov_axes $v_axes
    if {!$ov_axes} {
	set v_axes 1
    }
    switch $v_axes {
	3 {
	    if {!$ov_axes} {
		set v_axes 0
	    }
d1523 1
a1523 4
	4 {
	    if {!$ov_axes} {
		set v_axes 0
	    }
d1526 1
a1526 4
	5 {
	    if {!$ov_axes} {
		set v_axes 0
	    }
d1529 1
a1529 4
	6 {
	    if {!$ov_axes} {
		set v_axes 0
	    }
a1532 3
	    if {!$ov_axes} {
		set v_axes 0
	    }
@


1.1
log
@Initial revision
@
text
@d1 1
a1 5
if {[info exists env(DISPLAY)] == 0} {
    puts "The DISPLAY environment variable was not set."
    puts "Setting the DISPLAY environment variable to :0\n"
    set env(DISPLAY) ":0"
}
d3 1
a3 3
if { [info exists tk_strictMotif] == 0 } {
    loadtk
}
d19 58
a76 5
set extern_commands "attach aim"
foreach cmd $extern_commands {
    if {[string compare [info command $cmd] $cmd] != 0} {
	puts stderr "Application fails to provide command '$cmd'"
	return
d93 10
d104 1
d108 1
a108 1
    global show_edit_info
d111 29
a139 4
    global win_size

set save_id [lindex [cmd_get] 1]
set comb 0
d141 4
d147 14
d164 42
a205 3
if { [llength $args] < 3 } {
    return [help openw]
}
d207 2
a208 2
foreach arg $args {
    if [string match "-c" $arg] {
d210 7
a216 2
	set comb 1
    } elseif [string match "-j" $arg] { 
d218 7
d226 6
d233 14
a246 1
	break
d250 6
a255 4
set id [lindex $args $i]
set screen [lindex $args [expr $i + 1]]
set dtype [lindex $args [expr $i + 2]]
set dscreen [lindex $args [expr $i + 3]]
d257 2
a258 2
if ![string length $dscreen] {
    set dscreen $screen
d264 1
a264 1
if [ winfo exists .ia$id ] {
d268 1
a268 2
toplevel .ia$id -screen $screen
wm title .ia$id "MGED Interaction Window"
d277 2
a278 2
    set mged_dmc($id) .ia$id.dmf
    set mged_top($id) .ia$id
d281 3
a283 1
    set win_size($id) [expr [winfo screenheight $mged_dmc($id)] - 274]
d285 1
a285 7
    openmv $mged_dmc($id) $id $dtype $mv_size

    if [catch {attach -t 0 -n $mged_top($id).$id -S $win_size($id) $dtype} result] {
	releasemv $id
	destroy .ia$id
	return $result
    }
d291 3
a293 1
    set win_size($id) [expr [winfo screenheight $mged_dmc($id)] - 24]
d295 2
a296 1
    openmv $mged_dmc($id) $id $dtype $mv_size
d298 7
a304 7
    if [catch {attach -t 0 -n $mged_dmc($id).$id -S $win_size($id) $dtype} result] {
	releasemv $id
	destroy .ia$id
	destroy .top$id
	return $result
    }
}
d310 1
a310 1
frame .ia$id.m -relief raised -bd 1
d312 167
a478 3
menubutton .ia$id.m.file -text "File" -menu .ia$id.m.file.m -underline 0
menu .ia$id.m.file.m
.ia$id.m.file.m add checkbutton -offvalue 0 -onvalue 1 -variable buttons_on($id)\
d480 3
a482 1
.ia$id.m.file.m add checkbutton -offvalue 0 -onvalue 1 -variable sliders_on($id)\
d484 1
a484 1
.ia$id.m.file.m add checkbutton -offvalue 0 -onvalue 1 -variable show_edit_info($id)\
d486 29
a514 18
.ia$id.m.file.m add checkbutton -offvalue 0 -onvalue 1 -variable multi_view($id)\
	-label "Multi View" -underline 0 -command "setmv $id"
.ia$id.m.file.m add command -label "Opendb" -underline 0 -command "do_Open $id"
.ia$id.m.file.m add command -label "Close Window" -underline 0 -command "closew $id"
.ia$id.m.file.m add command -label "Quit" -command quit -underline 0

menubutton .ia$id.m.tools -text "Tools" -menu .ia$id.m.tools.m -underline 0
menu .ia$id.m.tools.m
.ia$id.m.tools.m add command -label "Place new solid" -underline 10 -command "solcreate $id"
.ia$id.m.tools.m add command -label "Place new instance" -underline 10 -command "icreate $id"
.ia$id.m.tools.m add command -label "Solid Click" -underline 6 -command "init_solclick $id"

menubutton .ia$id.m.help -text "Help" -menu .ia$id.m.help.m -underline 0
menu .ia$id.m.help.m
.ia$id.m.help.m add command -label "About MGED" -underline 6 -command "do_About_MGED $id"
.ia$id.m.help.m add command -label "On command..." -underline 0 \
	-command "do_On_command $id"
.ia$id.m.help.m add command -label "Apropos" -underline 0 -command "ia_apropos .ia$id $screen"
d529 1
a529 1
	set web_cmd "ia_man .ia$id $screen"
d532 1
a532 1
.ia$id.m.help.m add command -label "MGED Manual" -underline 0 -command $web_cmd
d538 12
a549 21
frame .ia$id.dpy
frame .ia$id.dpy.f1
frame .ia$id.dpy.f2

if [llength $mged_collaborators] {
    cmd_set [lindex $mged_collaborators 0]
    set cmd_list [cmd_get]
    set dm_id [lindex $cmd_list 1]
} else {
    set dm_id $id
}

label .ia$id.dpy.cent -text "Center: " -anchor w
label .ia$id.dpy.centvar -textvar mged_display($dm_id,center) -anchor w
label .ia$id.dpy.size -text "  Size: " -anchor w
label .ia$id.dpy.sizevar -textvar mged_display($dm_id,size) -anchor w
label .ia$id.dpy.unitsvar -textvar mged_display(units) -anchor w -padx 4
label .ia$id.dpy.aet -textvar mged_display($dm_id,aet) -anchor w
label .ia$id.dpy.ang -textvar mged_display($dm_id,ang) -anchor w -padx 4

frame .ia$id.illum
a550 2
label .ia$id.illum.label -textvar ia_illum_label($id)

d555 1
a555 1
frame .ia$id.tf
d557 1
a557 1
    text .ia$id.t -width 10 -relief sunken -bd 2 -yscrollcommand ".ia$id.s set" -setgrid true
d559 1
a559 1
    text .ia$id.t -relief sunken -bd 2 -yscrollcommand ".ia$id.s set" -setgrid true
d561 1
a561 1
scrollbar .ia$id.s -relief flat -command ".ia$id.t yview"
d563 1
a563 1
bind .ia$id.t <Enter> "focus .ia$id.t"
d565 1
a565 1
bind .ia$id.t <Return> {
d572 1
a572 1
bind .ia$id.t <Control-u> {
d577 1
a577 1
bind .ia$id.t <Control-p> {
d590 1
a590 1
bind .ia$id.t <Control-n> {
d603 1
a603 1
bind .ia$id.t <Control-c> {
d613 1
a613 1
bind .ia$id.t <Control-w> {
d622 1
a622 1
bind .ia$id.t <Control-a> {
d627 1
a627 1
#bind .ia$id.t <Delete> {
d636 1
a636 1
#bind .ia$id.t <BackSpace> {
d645 1
a645 1
#bind .ia$id.t <Control-d> {
d651 1
a651 1
#bind .ia$id.t <Control-k> {
d657 1
a657 1
#bind .ia$id.t <Control-t> {
d663 1
a663 1
#bind .ia$id.t <Meta-d> {
d669 1
a669 1
#bind .ia$id.t <Meta-BackSpace> {
d675 1
a675 1
#bind .ia$id.t <Control-h> {
d683 1
a683 1
ia_print_prompt .ia$id.t "mged> "
d685 1
a685 1
.ia$id.t tag configure bold -font -*-Courier-Bold-R-Normal-*-120-*-*-*-*-*-*
d687 1
a687 1
.ia$id.t configure -font $ia_font
d693 7
a699 9
pack .ia$id.m.file .ia$id.m.tools -side left
pack .ia$id.m.help -side right
pack .ia$id.m -side top -expand 1 -fill x

#pack .ia$id.$id -in .ia$id.dmf -expand 1 -fill both
#pack .ia$id.dmf -side top -expand 1 -fill both -padx 2 -pady 2
#Prevent window from being resized

pack $mged_top($id).$id -in $mged_dmc($id)
d704 10
a713 12
pack .ia$id.dpy.cent .ia$id.dpy.centvar .ia$id.dpy.size .ia$id.dpy.sizevar \
	.ia$id.dpy.unitsvar -in .ia$id.dpy.f1 -side left -anchor w
pack .ia$id.dpy.aet .ia$id.dpy.ang -in .ia$id.dpy.f2 -side left -anchor w
pack .ia$id.dpy.f1 .ia$id.dpy.f2 -expand 1 -fill x
pack .ia$id.dpy -side bottom -anchor w -expand 1 -fill x

pack .ia$id.illum.label -side left -anchor w
pack .ia$id.illum -side bottom -before .ia$id.dpy -anchor w -fill x -expand 1

pack .ia$id.s -in .ia$id.tf -side right -fill y
pack .ia$id.t -in .ia$id.tf -side top -fill both -expand yes
pack .ia$id.tf -side top -fill both -expand yes
a718 4
#mmenu_init $id
#cmd_init $id .ia$id.t
cmd_init $id

d723 1
d725 6
a730 1
aim $id $mged_top($id).$id
d736 2
a737 1
trace variable mged_display($id,fps) w "ia_changestate $id"
d739 23
d765 7
d773 2
a774 1
wm title $mged_top($id) "$id\'s MGED Interaction Window"
a776 1

d783 2
a784 1
    global show_edit_info
a793 5
    set i [lsearch -exact $mged_collaborators $id]
    if { $i != -1 } {
	qcs $id
    }

d800 11
d814 1
a814 1
    set show_edit_info($id) 0
a816 1
    catch { release $mged_top($id).$id }
d821 1
a821 3
    catch { destroy .ia$id }

    reconfig_openw_all
a823 1

d831 6
a836 5
    .ia$id.dpy.centvar configure -textvar mged_display($shared_id,center)
    .ia$id.dpy.sizevar configure -textvar mged_display($shared_id,size)
    .ia$id.dpy.unitsvar configure -textvar mged_display(units)
    .ia$id.dpy.aet configure -textvar mged_display($shared_id,aet)
    .ia$id.dpy.ang configure -textvar mged_display($shared_id,ang)
d838 1
a838 1
    reconfig_mmenu $id
a848 1

a860 1

a874 1

d877 2
a878 1
    global show_edit_info
d882 1
a882 1
	set show_edit_info($id) 0
d892 1
a892 1
    wm resizable .sei$id 0 0
a894 1

d899 2
d903 1
a903 1
	return "join_csession: $id is not listed as an mged_player"
d907 1
a907 1
	return "join_csession: $id is already in the collaborative session"
d910 2
a911 4
    if [winfo exists .ia$id.$id] {
	set nw .ia$id.$id
    } elseif [winfo exists .top$id.$id] {
	set nw .top$id.$id
d913 1
a913 1
	return "join_csession: unrecognized pathnames - .ia$id.$id and .top$id.$id"
d918 2
a919 4
	if [winfo exists .ia$cid.$cid] {
	    set ow .ia$cid.$cid
	} elseif [winfo exists .top$cid.$cid] {
	    set ow .top$cid.$cid
d921 1
a921 1
	    return "join_csession: me thinks the session is corrupted"
a930 1

d934 1
d941 2
a942 4
    if [winfo exists .ia$id.$id] {
	set w .ia$id.$id
    } elseif  [winfo exists .top$id.$id] {
	set w .top$id.$id
d944 1
a944 1
	return "qcs: unrecognized pathnames - .ia$id.$id and .top$id.$id"
a950 1

a957 1

a964 1

d974 590
@
