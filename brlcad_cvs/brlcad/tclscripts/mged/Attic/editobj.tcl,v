head	1.8;
access;
symbols
	ansi-20040405-merged:1.7
	postmerge-20040405-ansi:1.7
	premerge-20040404-ansi:1.7
	postmerge-autoconf:1.7
	autoconf-freeze:1.7
	premerge-autoconf:1.7
	postmerge-20040315-windows:1.7
	premerge-20040315-windows:1.7
	windows-20040315-freeze:1.7
	autoconf-20031203:1.7
	autoconf-20031202:1.7
	autoconf-branch:1.7.0.14
	phong-branch:1.7.0.12
	photonmap-branch:1.7.0.10
	rel-6-1-DP:1.7
	windows-branch:1.7.0.8
	rel-6-0-2:1.7
	ansi-branch:1.7.0.6
	rel-6-0-1-branch:1.7.0.4
	hartley-6-0-post:1.7
	hartley-6-0-pre:1.7
	rel-6-0-1:1.7
	rel-6-0:1.7
	rel-5-4:1.7
	offsite-5-3-pre:1.7
	rel-5-3:1.7
	rel-5-2:1.7
	rel-5-1-branch:1.7.0.2
	rel-5-1:1.7
	rel-5-0:1.7
	rel-5-0-beta:1.7
	rel-4-5:1.3;
locks; strict;
comment	@# @;


1.8
date	2004.05.21.16.41.23;	author morrison;	state dead;
branches;
next	1.7;

1.7
date	99.01.19.22.31.29;	author bparker;	state Exp;
branches;
next	1.6;

1.6
date	98.07.09.16.15.56;	author bparker;	state Exp;
branches;
next	1.5;

1.5
date	98.07.09.16.10.57;	author bparker;	state Exp;
branches;
next	1.4;

1.4
date	98.06.15.19.28.21;	author bparker;	state Exp;
branches;
next	1.3;

1.3
date	96.07.09.19.47.13;	author bparker;	state Exp;
branches;
next	1.2;

1.2
date	95.07.25.17.53.32;	author gdurf;	state Exp;
branches;
next	1.1;

1.1
date	95.06.21.20.28.38;	author gdurf;	state Exp;
branches;
next	;


desc
@Tk object editor
@


1.8
log
@moved to src/tclscripts/
@
text
@#					E D I T O B J . T C L
#
# Author -
#	Glen Durfee
#
# Source -
#	The U. S. Army Research Laboratory
#	Aberdeen Proving Ground, Maryland  21005
#
# Distribution Notice -
#	Re-distribution of this software is restricted, as described in
#       your "Statement of Terms and Conditions for the Release of
#       The BRL-CAD Package" agreement.
#
# Description -
#	Generic object editor for MGED
#
# Modifications -
#	(Bob Parker):
#		- Generalized the code to accommodate multiple instances
#		  of the user interface.
#		- added eoformat_string to control format of entry strings
#		- added eoinc_operation and eodec_operation to control increment
#		  and decrement of entry values
#		- when checking for the existence of the editor, instead of complaining,
#		  raise the editor and return
#		- when creating for the first time, make the editor appear to the
#		  lower right of mouse pointer
#		- modify eoinc and eodec to NOT apply changes, that's what the "Apply"
#		  button is for.
#		- display info in local units and assume the same when applying to database
#

set eoname(V) "Vertex"
set eoname(A) "A vector"
set eoname(B) "B vector"
set eoname(C) "C vector"
set eoname(D) "D vector"
set eoname(H) "H vector"
set eoname(r) "Radius"
set eoname(r_a) "Radius a"
set eoname(r_h) "Radius h"

if ![info exists eoinc_operation] {
    set eoinc_operation "\$val * 1.1"
}

if ![info exists eodec_operation] {
    set eodec_operation "\$val / 1.1"
}

if ![info exists eoformat_string] {
    set eoformat_string "%.4f"
}

proc editobj { id oname } {
    global mged_gui
    global eofin$oname
    global eoname
    global base2local
    global local2base
    global eoformat_string

    set vals [db get $oname]
    set form [db form [lindex $vals 0]]
    set len [llength $form]

    if { [winfo exists .eo$oname] } {
	raise .eo$oname
	return
    }

    toplevel .eo$oname -screen $mged_gui($id,screen)

    frame .eo$oname.t -borderwidth 2
    pack .eo$oname.t -side top -fill x -expand yes

    frame .eo$oname.t.l
    frame .eo$oname.t.r
    pack .eo$oname.t.l -side left -fill y -expand yes
    pack .eo$oname.t.r -side left -fill x -expand yes

    set eofin$oname "db adjust $oname"

    for { set i 0 } { $i<$len } { incr i } {
	set attr [lindex $form $i]
	incr i

	frame .eo$oname.t.r.f$attr
	pack .eo$oname.t.r.f$attr -side top -fill x -expand yes
	set eofin$oname [eval concat \[set eofin$oname\] $attr \\\"]

	set field [lindex $form $i]
	set fieldlen [llength $field]
	for { set num 0 } { $num<$fieldlen } { incr num } {
	    if { [string first "%f" $field]>-1 } then {
		button .eo$oname.t.r.f$attr.dec$num -text \- -command \
			"eodec $oname .eo$oname.t.r.f$attr.e$num"
		button .eo$oname.t.r.f$attr.inc$num -text \+ -command \
			"eoinc $oname .eo$oname.t.r.f$attr.e$num"
		entry .eo$oname.t.r.f$attr.e$num -width 6 -relief sunken
		pack .eo$oname.t.r.f$attr.dec$num -side left
		pack .eo$oname.t.r.f$attr.e$num -side left -fill x -expand yes
		pack .eo$oname.t.r.f$attr.inc$num -side left
		.eo$oname.t.r.f$attr.e$num insert insert \
			[format $eoformat_string [expr [lindex \
			[lindex $vals [expr $i+1]] $num] * $base2local]]
		set eofin$oname [eval concat \[set eofin$oname\] \
			\\\[expr \\\[.eo$oname.t.r.f$attr.e$num get\\\] * $local2base\\\]]
		bind .eo$oname.t.r.f$attr.e$num <Key-Return> "eoapply $oname; break"
	    }
	}

	set eofin$oname [eval concat \[set eofin$oname\] \\\"]

	if { [catch { label .eo$oname.t.l.l$attr -text "$eoname($attr)" \
		-anchor w }]!=0 } then {
	    label .eo$oname.t.l.l$attr -text "$attr" -anchor w
	}

	pack .eo$oname.t.l.l$attr -side top -anchor w -fill y -expand yes
    }

    frame .eo$oname.b -borderwidth 2
    pack .eo$oname.b -side top -fill x -expand yes
    button .eo$oname.b.apply -text "Apply" -command "eoapply $oname"
    button .eo$oname.b.cancel -text "Close" -command "destroy .eo$oname"
    pack .eo$oname.b.apply .eo$oname.b.cancel -side left -fill x -expand yes

    set pxy [winfo pointerxy .eo$oname]
    set x [lindex $pxy 0]
    set y [lindex $pxy 1]
    wm protocol .eo$oname WM_DELETE_WINDOW "catch { destroy .eo$oname }"
    wm geometry .eo$oname +$x+$y
    wm title .eo$oname "Object editor: $oname"
}

proc eoapply { oname } {
    global eofin$oname
    global eoname
    global base2local
    global eoformat_string

    eval [set eofin$oname]

    set vals [db get $oname]
    set form [db form [lindex $vals 0]]
    set len [llength $form]

    for { set i 0 } { $i<$len } { incr i } {
	set attr [lindex $form $i]
	incr i

	set field [lindex $form $i]
	set fieldlen [llength $field]
	for { set num 0 } { $num<$fieldlen } { incr num } {
	    if { [string first "%f" $field]>-1 } {
		.eo$oname.t.r.f$attr.e$num delete 0 end
		.eo$oname.t.r.f$attr.e$num insert insert \
			[format $eoformat_string [expr [lindex \
			[lindex $vals [expr $i+1]] $num] * $base2local]]
	    }
	}
    }
}

proc eoinc { oname entryfield } {
    global eoinc_operation
    global eoformat_string

    set val [$entryfield get]

    $entryfield delete 0 end
    $entryfield insert insert [format $eoformat_string [expr $eoinc_operation]]
}

proc eodec { oname entryfield } {
    global eodec_operation
    global eoformat_string

    set val [$entryfield get]

    $entryfield delete 0 end
    $entryfield insert insert [format $eoformat_string [expr $eodec_operation]]
}
@


1.7
log
@*- cleanup variables
@
text
@@


1.6
log
@*- added original author, source, distribution etc.
@
text
@d57 1
a59 1
    global player_screen
d73 1
a73 1
    toplevel .eo$oname -screen $player_screen($id)
@


1.5
log
@*- added eoformat_string to control format of entry strings
*- added eoinc_operation and eodec_operation to control increment
   and decrement of entry values
*- when checking for the existence of the editor, instead of complaining,
   raise the editor and return
*- when creating for the first time, make the editor appear to the
   lower right of mouse pointer
*- modify eoinc and eodec to NOT apply changes, that's what the "Apply"
   button is for.
*- display info in local units and assume the same when applying to database
@
text
@d1 16
a16 2
# editobj
# Generic object editor for MGED
@


1.4
log
@*- append "break" to bindings to prevent further processing
@
text
@d5 13
a17 3
#        (Bob Parker):
#             Generalized the code to accommodate multiple instances of the
#             user interface.
d30 12
d46 3
a53 1
#    catch { destroy .eo$oname }
d55 2
a56 1
	return "Someone is already editing $oname"
a59 1
    wm title .eo$oname "Object editor: $oname"
d92 2
a93 1
			[lindex [lindex $vals [expr $i+1]] $num]
d95 1
a95 1
			\\\[.eo$oname.t.r.f$attr.e$num get\\\]]
d115 7
d127 2
d143 1
a143 1
	    if { [string first "%f" $field]>-1 } then {
d146 2
a147 1
			[lindex [lindex $vals [expr $i+1]] $num]
d154 5
a158 3
    set oldval [$entryfield get]
    set increase [expr $oldval*0.1]
    if { $increase<0.1 } then { set increase 0.1 }
d160 1
a160 2
    $entryfield insert insert [expr $oldval+$increase]
    eoapply $oname
d164 5
a168 3
    set oldval [$entryfield get]
    set decrease [expr $oldval*0.1]
    if { $decrease<0.1 } then { set decrease 0.1 }
d170 1
a170 2
    $entryfield insert insert [expr $oldval-$decrease]
    eoapply $oname
@


1.3
log
@ generalized to allow multiple instances
@
text
@d71 1
a71 1
		bind .eo$oname.t.r.f$attr.e$num <Key-Return> "eoapply $oname"
@


1.2
log
@Cleaned up
@
text
@d3 6
d20 1
a20 1
proc editobj { oname } {
d23 1
d29 6
a34 2
    catch { destroy .eo$oname }
    toplevel .eo$oname
@


1.1
log
@Initial revision
@
text
@d2 1
a2 2
#
# Command for editing ellipsoids.
d8 1
a14 4
    set form [db form $oname]
    set vals [db get $oname]
    set objtype [lindex $vals 0]
    set len [llength $vals]
d18 4
d26 7
a32 4
    frame .eo$oname.l
    frame .eo$oname.r
    pack .eo$oname.l -side left
    pack .eo$oname.r -side left -fill x -expand yes
d35 2
a36 2
    set i 1
    while { $i<$len } {
d39 22
a60 17
	frame .eo$oname.r.f$attr
	pack .eo$oname.r.f$attr -side top -fill x -expand yes
	set eofin$oname [eval concat \$eofin$oname $attr]

	set num 0
	while { 1 } {
	    set field [lindex $form $i]
	    if { [string compare $field "%f"]==0 } then {
		entry .eo$oname.r.f$attr.e$num -width 5 -relief sunken
		pack .eo$oname.r.f$attr.e$num -side left -fill x -expand yes
		.eo$oname.r.f$attr.e$num insert insert [lindex $vals $i]
		set eofin$oname [eval concat \$eofin$oname \
			\\\[.eo$oname.r.f$attr.e$num get\\\]]
		incr i
		incr num
	    } else {
		break
d64 40
a103 2
	label .eo$oname.l.l$attr -text "$eoname($attr)" -anchor w
	pack .eo$oname.l.l$attr -side top -fill y -expand yes
d105 1
d107 8
a114 7
    frame .eo$oname.b
    pack .eo$oname.b -after .eo$oname.r -side bottom -fill x -expand yes
    button .eo$oname.b.ok -text "Ok" -command "eval eval \$eofin$oname"
    button .eo$oname.b.apply -text "Apply" -command "eval eval \$eofin$oname"
    button .eo$oname.b.cancel -text "Cancel" -command "destroy .eo$oname"
    pack .eo$oname.b.ok .eo$oname.b.apply .eo$oname.b.cancel -side left \
	    -fill x -expand yes
d116 7
a122 1
    echo [eval format \"Final eofin$oname: %s\" \$eofin$oname]
a123 2
		
	@
