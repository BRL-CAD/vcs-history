head	1.3;
access;
symbols
	ansi-20040405-merged:1.1.2.1
	postmerge-20040405-ansi:1.2
	premerge-20040404-ansi:1.2
	postmerge-autoconf:1.2
	autoconf-freeze:1.2
	premerge-autoconf:1.2
	postmerge-20040315-windows:1.2
	premerge-20040315-windows:1.2
	windows-20040315-freeze:1.1.4.1
	autoconf-20031203:1.2
	autoconf-20031202:1.2
	autoconf-branch:1.2.0.6
	phong-branch:1.2.0.4
	photonmap-branch:1.2.0.2
	rel-6-1-DP:1.1
	windows-branch:1.1.0.4
	ansi-branch:1.1.0.2
	hartley-6-0-post:1.1
	hartley-6-0-pre:1.1;
locks; strict;
comment	@# @;


1.3
date	2004.05.21.16.41.22;	author morrison;	state dead;
branches;
next	1.2;

1.2
date	2003.03.13.19.45.31;	author jra;	state Exp;
branches;
next	1.1;

1.1
date	2002.08.11.02.23.57;	author morrison;	state Exp;
branches
	1.1.2.1
	1.1.4.1;
next	;

1.1.2.1
date	2004.03.17.21.23.10;	author morrison;	state Exp;
branches;
next	;

1.1.4.1
date	2004.03.11.23.48.58;	author morrison;	state Exp;
branches;
next	;


desc
@@


1.3
log
@moved to src/tclscripts/
@
text
@#
#			A S C 2 G . T C L
#
#	Tool for importing an ascii database to the current database
#
#	Author - Christopher Sean Morrison
#

proc init_asc2g { id } {
	global mged_gui
	global ::tk::Priv
	
	if {[opendb] == ""} {
		cad_dialog $::tk::Priv(cad_dialog) $mged_gui($id,screen) "No database." "No database has been opened!" info 0 OK
		return
	}
	
	set top .$id.ascii
	catch { destroy $top }
	
	# get the name of the ascii database to open
	set ftypes {{{Ascii Database} {.asc}} {{All Files} {*}}}
	set filename [tk_getOpenFile -parent .$id -filetypes $ftypes \
	    -initialdir $mged_gui(databaseDir) \
	    -title "Insert Ascii Database"]

	if { $filename != "" } {
		# save the current directory for subsequent file loads
		set mged_gui(databaseDir) [ file dirname $filename ]
		
		set ret [cad_input_dialog .$id.prefix $mged_gui($id,screen) "Prefix" "Enter prefix (optional):" prefix "" 0 {{ summary "
Database objects imported from the ascii
database may optionally include an assigned
prefix.  The prefix is prepended to each 
object before being inserted into the
current database." } {} } OK Cancel]
			
		if { $ret == 0 } {
			if {$prefix == ""} {
				set prefix /
			}
			
			# XXX horrible hack to open a temp file for conversion.
			# imitating other code in anim.tcl for temp file generation
			set db_name "./_asc_2_g_temp_"
			if [ file exists $db_name ] {
				error "Temporary file ($db_name) is in the way (rename, delete, or move it)" 
				return
			}

			# convert ascii database to binary
			catch {exec asc2g $filename $db_name} msg

			# concat the binary
			dbconcat $db_name $prefix
		}
		
		exec rm $db_name
	}
}
@


1.2
log
@*** empty log message ***
@
text
@@


1.1
log
@added asc2g tcl routine that does the opposite of g2asc -- it imports an ascii database into the current binary database
@
text
@d11 1
a11 1
	global tkPriv
d14 1
a14 1
		cad_dialog $tkPriv(cad_dialog) $mged_gui($id,screen) "No database." "No database has been opened!" info 0 OK
@


1.1.2.1
log
@sync branch with HEAD
@
text
@d11 1
a11 1
	global ::tk::Priv
d14 1
a14 1
		cad_dialog $::tk::Priv(cad_dialog) $mged_gui($id,screen) "No database." "No database has been opened!" info 0 OK
@


1.1.4.1
log
@sync to HEAD...
@
text
@d11 1
a11 1
	global ::tk::Priv
d14 1
a14 1
		cad_dialog $::tk::Priv(cad_dialog) $mged_gui($id,screen) "No database." "No database has been opened!" info 0 OK
@


