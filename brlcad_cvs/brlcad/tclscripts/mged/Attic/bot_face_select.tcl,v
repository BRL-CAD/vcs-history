head	1.5;
access;
symbols
	ansi-20040405-merged:1.3.4.1
	postmerge-20040405-ansi:1.4
	premerge-20040404-ansi:1.4
	postmerge-autoconf:1.4
	autoconf-freeze:1.4
	premerge-autoconf:1.4
	postmerge-20040315-windows:1.4
	premerge-20040315-windows:1.4
	windows-20040315-freeze:1.3.6.2
	autoconf-20031203:1.4
	autoconf-20031202:1.4
	autoconf-branch:1.4.0.6
	phong-branch:1.4.0.4
	photonmap-branch:1.4.0.2
	rel-6-1-DP:1.3
	windows-branch:1.3.0.6
	rel-6-0-2:1.3
	ansi-branch:1.3.0.4
	rel-6-0-1-branch:1.3.0.2
	hartley-6-0-post:1.3
	hartley-6-0-pre:1.3
	rel-6-0-1:1.3
	rel-6-0:1.3
	rel-5-4:1.1.2.2
	offsite-5-3-pre:1.3
	rel-5-3:1.1.2.2
	rel-5-2:1.1
	rel-5-1-branch:1.1.0.2
	rel-5-1:1.1;
locks; strict;
comment	@# @;


1.5
date	2004.05.21.16.41.22;	author morrison;	state dead;
branches;
next	1.4;

1.4
date	2003.03.13.19.45.31;	author jra;	state Exp;
branches;
next	1.3;

1.3
date	2001.02.16.22.30.02;	author bparker;	state Exp;
branches
	1.3.4.1
	1.3.6.1;
next	1.2;

1.2
date	2000.12.22.00.35.15;	author bparker;	state Exp;
branches;
next	1.1;

1.1
date	99.12.30.14.27.36;	author jra;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2000.12.22.00.02.28;	author bparker;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	2001.02.08.21.53.24;	author bparker;	state Exp;
branches;
next	;

1.3.4.1
date	2004.03.17.21.23.10;	author morrison;	state Exp;
branches;
next	;

1.3.6.1
date	2002.09.26.23.04.17;	author morrison;	state Exp;
branches;
next	1.3.6.2;

1.3.6.2
date	2004.03.11.23.48.58;	author morrison;	state Exp;
branches;
next	;


desc
@@


1.5
log
@moved to src/tclscripts/
@
text
@#
#			B O T _ F A C E _ S E L E C T . T C L
#
# Author -
#	John Anderson
#
# Source -
#	The U. S. Army Research Laboratory
#	Aberdeen Proving Ground, Maryland  21005
#
# Distribution Notice -
#	Re-distribution of this software is restricted, as described in
#       your "Statement of Terms and Conditions for the Release of
#       The BRL-CAD Package" agreement.
#
# Description -
#	rouintes for displaying a Tcl/Tk widget for selecting a BOT face
#

proc bot_face_select { face_list } {
    global bot_v1 bot_v2 bot_v3 mged_gui
    global ::tk::Priv

    
    set win [winset]
    set id [get_player_id_dm $win]
    if {$id == "mged"} {
	mouse_init_mged_gui
    }

    set w .bot_face_select

    if { [winfo exists $w] } { catch "destroy $w" }

    if [info exists mged_gui($id,screen)] {
	set screen $mged_gui($id,screen)
    } else {
	set screen [winfo screen $win]
    }

	set face_list_len [llength $face_list]
	if { $face_list_len == 0 } {
		set bot_v1 -1
		set bot_v2 -1
		set bot_v3 -1
		return
	}

	if { $face_list_len == 1 } {
		set face [lindex $face_list 0]
		if { [llength $face] != 3 } {
			set bot_v1 -1
			set bot_v2 -1
			set bot_v3 -1
			cad_dialog $::tk::Priv(cad_dialog) $screen "Internal Error"  "Face does not have 3 vertices" error 0 OK
			return
		}
		set bot_v1 [lindex $face 0]
		set bot_v2 [lindex $face 1]
		set bot_v3 [lindex $face 2]
		get_solid_keypoint
		return
	}

	create_listbox $w $screen "BOT Triangle" $face_list "bot_face_sel_abort $w"
	bind_listbox $w "<B1-Motion>"\
		"set face \[get_listbox_entry %W %x %y\];\
		set bot_v1 \[lindex \$face 0\];\
		set bot_v2 \[lindex \$face 1\];\
		set bot_v3 \[lindex \$face 2\];\
		get_solid_keypoint;\
		refresh"
if 0 {
	bind_listbox $w "<ButtonPress-1>"\
		"set face \[get_listbox_entry %W %x %y\];\
		set bot_v1 \[lindex \$face 0\];\
		set bot_v2 \[lindex \$face 1\];\
		set bot_v3 \[lindex \$face 2\];\
		get_solid_keypoint;\
		refresh"
	bind_listbox $w "<Double-1>"\
		"set face \[get_listbox_entry %W %x %y\];\
		set bot_v1 \[lindex \$face 0\];\
		set bot_v2 \[lindex \$face 1\];\
		set bot_v3 \[lindex \$face 2\];\
		get_solid_keypoint;\
		refresh;\
		destroy $w"
} else {
    bind_listbox $w "<ButtonPress-1>" \
	    "lbdcHack %W %x %y %t $id bf junkpath"
}
	hoc_register_data $w.listbox "BOT Triangle Select" {
		{summary "Use your left mouse button to highlight entries in this list.
Each entry show the three vertex numbers that make up a single triangle.
Double click to select a triangle for editing."}
	}
}

proc bot_face_sel_abort { w } {
	global bot_v1 bot_v2 bot_v3

	set bot_v1 -1
	set bot_v2 -1
	set bot_v3 -1
	get_solid_keypoint
	catch "destroy  $w"
}
@


1.4
log
@*** empty log message ***
@
text
@@


1.3
log
@*- use lbdcHack to get around the <Double-1> problem
   (i.e. this event is not consistently recognized)
@
text
@d22 1
a22 1
    global tkPriv
d55 1
a55 1
			cad_dialog $tkPriv(cad_dialog) $screen "Internal Error"  "Face does not have 3 vertices" error 0 OK
@


1.3.4.1
log
@sync branch with HEAD
@
text
@d22 1
a22 1
    global ::tk::Priv
d55 1
a55 1
			cad_dialog $::tk::Priv(cad_dialog) $screen "Internal Error"  "Face does not have 3 vertices" error 0 OK
@


1.3.6.1
log
@Modifications (on a 6.0 source distribution) for initial port to windows (merged with sources close to 6.0.2)
@
text
@d22 1
a22 1
    variable ::tk::Priv
d55 1
a55 1
			cad_dialog $Priv(cad_dialog) $screen "Internal Error"  "Face does not have 3 vertices" error 0 OK
@


1.3.6.2
log
@sync to HEAD...
@
text
@d22 1
a22 1
    global ::tk::Priv
d55 1
a55 1
			cad_dialog $::tk::Priv(cad_dialog) $screen "Internal Error"  "Face does not have 3 vertices" error 0 OK
@


1.2
log
@Use tkPriv(cad_dialog) for dialog name.
@
text
@d24 6
a29 1
	set w .bot_face_select
d31 9
a39 1
	if { [winfo exists $w] } { catch "destroy $w" }
d55 1
a55 1
			cad_dialog $tkPriv(cad_dialog) $mged_gui(mged,screen) "Internal Error"  "Face does not have 3 vertices" error 0 OK
d65 1
a65 1
	create_listbox $w $mged_gui(mged,screen) "BOT Triangle" $face_list "bot_face_sel_abort $w"
d73 1
d89 4
@


1.1
log
@A script to select bot solid faces fro editing
@
text
@d21 2
a22 1
	global bot_v1 bot_v2 bot_v3 mged_gui
d42 1
a42 1
			cad_dialog $w.error $mged_gui(mged,screen) "Internal Error"  "Face does not have 3 vertices" error 0 OK
@


1.1.2.1
log
@Use tkPriv(cad_dialog) for dialog name.
@
text
@d21 1
a21 2
    global bot_v1 bot_v2 bot_v3 mged_gui
    global tkPriv
d41 1
a41 1
			cad_dialog $tkPriv(cad_dialog) $mged_gui(mged,screen) "Internal Error"  "Face does not have 3 vertices" error 0 OK
@


1.1.2.2
log
@*- use lbdcHack
@
text
@d24 1
a24 6
    
    set win [winset]
    set id [get_player_id_dm $win]
    if {$id == "mged"} {
	mouse_init_mged_gui
    }
d26 1
a26 9
    set w .bot_face_select

    if { [winfo exists $w] } { catch "destroy $w" }

    if [info exists mged_gui($id,screen)] {
	set screen $mged_gui($id,screen)
    } else {
	set screen [winfo screen $win]
    }
d42 1
a42 1
			cad_dialog $tkPriv(cad_dialog) $screen "Internal Error"  "Face does not have 3 vertices" error 0 OK
d52 1
a52 1
	create_listbox $w $screen "BOT Triangle" $face_list "bot_face_sel_abort $w"
a59 1
if 0 {
a74 4
} else {
    bind_listbox $w "<ButtonPress-1>" \
	    "lbdcHack %W %x %y %t $id bf junkpath"
}
@


