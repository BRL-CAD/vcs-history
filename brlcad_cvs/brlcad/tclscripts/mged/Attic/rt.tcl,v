head	1.52;
access;
symbols
	ansi-20040405-merged:1.47.4.1
	postmerge-20040405-ansi:1.51
	premerge-20040404-ansi:1.51
	postmerge-autoconf:1.51
	autoconf-freeze:1.51
	premerge-autoconf:1.51
	postmerge-20040315-windows:1.51
	premerge-20040315-windows:1.51
	windows-20040315-freeze:1.47.6.2
	autoconf-20031203:1.51
	autoconf-20031202:1.51
	autoconf-branch:1.51.0.4
	phong-branch:1.51.0.2
	photonmap-branch:1.49.0.2
	rel-6-1-DP:1.47
	windows-branch:1.47.0.6
	rel-6-0-2:1.47
	ansi-branch:1.47.0.4
	rel-6-0-1-branch:1.47.0.2
	hartley-6-0-post:1.47
	hartley-6-0-pre:1.47
	rel-6-0-1:1.47
	rel-6-0:1.47
	rel-5-4:1.36.2.6
	offsite-5-3-pre:1.42
	rel-5-3:1.36.2.6
	rel-5-2:1.36
	rel-5-1-branch:1.36.0.2
	rel-5-1:1.36
	rel-5-0:1.34
	rel-5-0-beta:1.31
	rel-4-5:1.2;
locks; strict;
comment	@# @;


1.52
date	2004.05.21.16.41.31;	author morrison;	state dead;
branches;
next	1.51;

1.51
date	2003.08.27.19.45.24;	author justin;	state Exp;
branches
	1.51.2.1;
next	1.50;

1.50
date	2003.08.27.19.18.56;	author justin;	state Exp;
branches;
next	1.49;

1.49
date	2003.03.13.19.45.33;	author jra;	state Exp;
branches
	1.49.2.1;
next	1.48;

1.48
date	2002.12.17.00.44.30;	author morrison;	state Exp;
branches;
next	1.47;

1.47
date	2002.01.02.18.38.21;	author bparker;	state Exp;
branches
	1.47.4.1
	1.47.6.1;
next	1.46;

1.46
date	2001.10.30.20.25.17;	author bparker;	state Exp;
branches;
next	1.45;

1.45
date	2001.09.07.14.55.41;	author bparker;	state Exp;
branches;
next	1.44;

1.44
date	2001.06.01.19.27.27;	author bparker;	state Exp;
branches;
next	1.43;

1.43
date	2001.04.03.22.33.03;	author bparker;	state Exp;
branches;
next	1.42;

1.42
date	2001.01.19.22.27.51;	author bparker;	state Exp;
branches;
next	1.41;

1.41
date	2000.12.22.00.35.14;	author bparker;	state Exp;
branches;
next	1.40;

1.40
date	2000.11.17.15.38.37;	author bparker;	state Exp;
branches;
next	1.39;

1.39
date	2000.11.16.20.48.54;	author bparker;	state Exp;
branches;
next	1.38;

1.38
date	2000.11.06.21.29.49;	author bparker;	state Exp;
branches;
next	1.37;

1.37
date	2000.10.20.19.29.49;	author bparker;	state Exp;
branches;
next	1.36;

1.36
date	2000.06.12.20.38.19;	author bparker;	state Exp;
branches
	1.36.2.1;
next	1.35;

1.35
date	2000.06.08.22.38.54;	author bparker;	state Exp;
branches;
next	1.34;

1.34
date	99.09.10.23.07.08;	author bparker;	state Exp;
branches;
next	1.33;

1.33
date	99.09.01.18.04.40;	author bparker;	state Exp;
branches;
next	1.32;

1.32
date	99.07.26.15.22.37;	author bparker;	state Exp;
branches;
next	1.31;

1.31
date	99.04.20.20.28.57;	author bparker;	state Exp;
branches;
next	1.30;

1.30
date	99.04.16.19.27.27;	author bparker;	state Exp;
branches;
next	1.29;

1.29
date	99.04.16.18.12.01;	author bparker;	state Exp;
branches;
next	1.28;

1.28
date	99.04.13.21.58.43;	author bparker;	state Exp;
branches;
next	1.27;

1.27
date	99.04.13.19.32.56;	author bparker;	state Exp;
branches;
next	1.26;

1.26
date	99.04.12.14.11.19;	author bparker;	state Exp;
branches;
next	1.25;

1.25
date	99.04.09.21.24.15;	author bparker;	state Exp;
branches;
next	1.24;

1.24
date	99.04.09.00.02.32;	author bparker;	state Exp;
branches;
next	1.23;

1.23
date	99.04.07.16.52.07;	author bparker;	state Exp;
branches;
next	1.22;

1.22
date	99.03.29.19.51.41;	author bparker;	state Exp;
branches;
next	1.21;

1.21
date	99.03.18.18.26.42;	author bparker;	state Exp;
branches;
next	1.20;

1.20
date	99.02.10.15.21.14;	author bparker;	state Exp;
branches;
next	1.19;

1.19
date	99.01.19.22.28.13;	author bparker;	state Exp;
branches;
next	1.18;

1.18
date	99.01.05.23.10.37;	author bparker;	state Exp;
branches;
next	1.17;

1.17
date	98.12.30.22.09.13;	author bparker;	state Exp;
branches;
next	1.16;

1.16
date	98.12.18.20.24.03;	author bparker;	state Exp;
branches;
next	1.15;

1.15
date	98.12.09.22.09.41;	author bparker;	state Exp;
branches;
next	1.14;

1.14
date	98.11.25.20.28.31;	author bparker;	state Exp;
branches;
next	1.13;

1.13
date	98.11.25.14.45.36;	author bparker;	state Exp;
branches;
next	1.12;

1.12
date	98.11.24.22.29.19;	author bparker;	state Exp;
branches;
next	1.11;

1.11
date	98.11.06.20.54.12;	author bparker;	state Exp;
branches;
next	1.10;

1.10
date	98.08.13.12.38.12;	author bparker;	state Exp;
branches;
next	1.9;

1.9
date	98.06.24.18.38.06;	author bparker;	state Exp;
branches;
next	1.8;

1.8
date	98.06.15.19.28.27;	author bparker;	state Exp;
branches;
next	1.7;

1.7
date	98.06.09.17.53.18;	author bparker;	state Exp;
branches;
next	1.6;

1.6
date	98.05.15.14.49.26;	author bparker;	state Exp;
branches;
next	1.5;

1.5
date	98.04.23.12.56.10;	author bparker;	state Exp;
branches;
next	1.4;

1.4
date	98.04.07.14.14.22;	author bparker;	state Exp;
branches;
next	1.3;

1.3
date	98.02.20.23.25.32;	author bparker;	state Exp;
branches;
next	1.2;

1.2
date	97.09.29.16.00.53;	author bparker;	state Exp;
branches;
next	1.1;

1.1
date	97.09.17.21.10.21;	author bparker;	state Exp;
branches;
next	;

1.36.2.1
date	2000.10.20.19.29.14;	author bparker;	state Exp;
branches;
next	1.36.2.2;

1.36.2.2
date	2000.11.06.21.28.49;	author bparker;	state Exp;
branches;
next	1.36.2.3;

1.36.2.3
date	2000.11.15.21.34.10;	author bparker;	state Exp;
branches;
next	1.36.2.4;

1.36.2.4
date	2000.11.17.15.23.16;	author bparker;	state Exp;
branches;
next	1.36.2.5;

1.36.2.5
date	2000.12.22.00.02.27;	author bparker;	state Exp;
branches;
next	1.36.2.6;

1.36.2.6
date	2001.01.11.23.28.52;	author bparker;	state Exp;
branches;
next	;

1.47.4.1
date	2004.03.17.21.23.13;	author morrison;	state Exp;
branches;
next	;

1.47.6.1
date	2002.09.26.23.04.21;	author morrison;	state Exp;
branches;
next	1.47.6.2;

1.47.6.2
date	2004.03.11.23.48.59;	author morrison;	state Exp;
branches;
next	;

1.49.2.1
date	2003.08.07.22.16.31;	author justin;	state Exp;
branches;
next	1.49.2.2;

1.49.2.2
date	2003.08.12.03.55.39;	author justin;	state Exp;
branches;
next	1.49.2.3;

1.49.2.3
date	2003.08.12.23.04.36;	author justin;	state Exp;
branches;
next	1.49.2.4;

1.49.2.4
date	2003.08.12.23.20.09;	author justin;	state Exp;
branches;
next	1.49.2.5;

1.49.2.5
date	2003.08.12.23.36.09;	author justin;	state Exp;
branches;
next	1.49.2.6;

1.49.2.6
date	2003.08.13.22.10.27;	author justin;	state Exp;
branches;
next	1.49.2.7;

1.49.2.7
date	2003.08.15.04.20.14;	author justin;	state Exp;
branches;
next	1.49.2.8;

1.49.2.8
date	2003.08.24.23.31.37;	author justin;	state Exp;
branches;
next	;

1.51.2.1
date	2003.09.10.22.06.12;	author butler;	state Exp;
branches;
next	;


desc
@Tcl/Tk widget for raytracing MGED's current view
@


1.52
log
@moved to src/tclscripts/
@
text
@# 
#                        R T . T C L
#
#	Widget for raytracing MGED's current view.
#
#	Author - Robert G. Parker
#

check_externs "_mged_opendb _mged_rt"

proc init_Raytrace { id } {
    global mged_gui
    global fb
    global rt_control
    global env
    global ::tk::Priv

    if {[opendb] == ""} {
	cad_dialog $::tk::Priv(cad_dialog) $mged_gui($id,screen) "No database." \
		"No database has been opened!" info 0 OK
	return
    }

    set top .$id.rt

    if [winfo exists $top] {
	raise $top
	return
    }

    if ![info exists mged_gui($id,active_dm)] {
	return
    }

    if ![winfo exists $mged_gui($id,active_dm)] {
	return
    }

    winset $mged_gui($id,active_dm)
    rt_init_vars $id $mged_gui($id,active_dm)

    toplevel $top -screen $mged_gui($id,screen) -menu $top.menubar

    frame $top.gridF1
    frame $top.gridF2 -relief groove -bd 2
    frame $top.gridF3
    frame $top.srcF -relief sunken -bd 2
    frame $top.destF -relief sunken -bd 2
    frame $top.sizeF -relief sunken -bd 2

    menu $top.menubar -tearoff 0
    $top.menubar add cascade -label "Framebuffer" -underline 0 -menu $top.menubar.fb
    $top.menubar add cascade -label "Objects" -underline 0 -menu $top.menubar.obj

    menu $top.menubar.fb -title "Framebuffer" -tearoff 0
    $top.menubar.fb add checkbutton -offvalue 0 -onvalue 1\
	    -variable rt_control($id,fb)\
	    -label "Active" -underline 0 \
	    -command "rt_set_fb $id"
    hoc_register_menu_data "Framebuffer" "Active" "Destination Framebuffer Active"\
	    { { summary "This activates/deactivates the destination framebuffer.
Note - this pertains only to MGED's framebuffers." } }
    $top.menubar.fb add separator
    $top.menubar.fb add radiobutton -value 1 -variable rt_control($id,fb_all)\
	    -label "All" -underline 0\
	    -command "rt_set_fb_all $id"
    hoc_register_menu_data "Framebuffer" "All" "Destination Framebuffer - All"\
	    { { summary "Use the entire pane as a framebuffer.
Note - this pertains only to MGED's framebuffers." } }
    $top.menubar.fb add radiobutton -value 0 -variable rt_control($id,fb_all)\
	    -label "Rectangle Area" -underline 0\
	    -command "rt_set_fb_all $id"
    hoc_register_menu_data "Framebuffer" "Rectangle Area" "Destination Framebuffer - Rectangle Area"\
	    { { summary "Use only the rectangular area, as defined by the
sweep rectangle, for the framebuffer. Note - this
pertains only to MGED's framebuffers." } }
    $top.menubar.fb add separator
    $top.menubar.fb add radiobutton -value 2 -variable rt_control($id,fb_overlay)\
	    -label "Overlay" -underline 0\
	    -command "rt_set_fb_overlay $id"
    hoc_register_menu_data "Framebuffer" "Overlay" "Destination Framebuffer - Overlay"\
	    { { summary "Draw the framebuffer above everything (i.e. above the
geometry and faceplate). Note - this pertains only to
MGED's framebuffers." } }
    $top.menubar.fb add radiobutton -value 1 -variable rt_control($id,fb_overlay)\
	    -label "Interlay" -underline 0\
	    -command "rt_set_fb_overlay $id"
    hoc_register_menu_data "Framebuffer" "Interlay" "Destination Framebuffer - Interlay"\
	    { { summary "Draw the framebuffer above the geometry and below
the faceplate. Note - this pertains only to MGED's
framebuffers." } }
    $top.menubar.fb add radiobutton -value 0 -variable rt_control($id,fb_overlay)\
	    -label "Underlay" -underline 0\
	    -command "rt_set_fb_overlay $id"
    hoc_register_menu_data "Framebuffer" "Underlay" "Destination Framebuffer - Underlay"\
	    { { summary "Draw the framebuffer below everything (i.e. below the
geometry and faceplate). Note - this pertains only to
MGED's framebuffers." } }

    menu $top.menubar.obj -title "Objects" -tearoff 0
    $top.menubar.obj add radiobutton -value one -variable rt_control($id,omode)\
	    -label "One" -underline 0\
	    -command "rt_set_mouse_behavior $id"
    hoc_register_menu_data "Objects" "one" "Objects - one"\
	    { { summary "Raytrace only the selected object. Note - this will
change the mouse behavior of the source window to
\"o\" (i.e. raytrace object)." } }
    $top.menubar.obj add radiobutton -value several -variable rt_control($id,omode)\
	    -label "Several" -underline 0\
	    -command "rt_set_mouse_behavior $id"
    hoc_register_menu_data "Objects" "several" "Objects - several"\
	    { { summary "Add the selected object to the list of objects to be
raytraced. Note - this will change the mouse behavior
of the source window to \"o\" (i.e. pick raytrace objects)." } }
    $top.menubar.obj add radiobutton -value all -variable rt_control($id,omode)\
	    -label "All" -underline 0\
	    -command "rt_set_mouse_behavior $id"
    hoc_register_menu_data "Objects" "all" "Objects - all"\
	    { { summary "Raytrace all displayed objects. Note - this will
change the mouse behavior of the source window to
\"d\" (i.e. the default mouse behavior)." } }
    $top.menubar.obj add separator
    $top.menubar.obj add command -label "Edit List"\
	    -command "rt_olist_edit $id"
    hoc_register_menu_data "Objects" "edit list" "Edit List"\
	    { { summary "Pop up a tool to edit the list
of objects to be raytraced." } }
    $top.menubar.obj add command -label "Clear List"\
	    -command "rt_olist_clear $id"
    hoc_register_menu_data "Objects" "clear list" "Clear List"\
	    { { summary "Clear the object list and the contents
of the object list editor if it exists." } }

    set hoc_data { { summary "
Enter the desired source. The source is used to obtain
the view information (i.e. size, position and orientation)
that is passed to the raytracer and must be one of the internal
panes (display manager windows). The source can be specified
using the pathname of any pane. The panes associated with this
instance of the GUI may also be specified with keywords. For
example, ul, \"upper left\" and \"Upper Left\" all specify the
upper left pane." } }
    label $top.srcL -text "Source" -anchor e -padx 0 -pady 0
    hoc_register_data $top.srcL "Source" $hoc_data
    entry $top.srcE -relief flat -width 12 -textvar rt_control($id,raw_src)
    hoc_register_data $top.srcE "Source" $hoc_data
    bind $top.srcE <KeyRelease> "rt_force_cook_src $id \$rt_control($id,raw_src)"
    menubutton $top.srcMB -relief raised -bd 2\
	    -menu $top.srcMB.menu -indicatoron 1
    hoc_register_data $top.srcMB "Source"\
	    { { summary "Pop up a menu of likely sources." } }
    menu $top.srcMB.menu -title "Source" -tearoff 0
    $top.srcMB.menu add command -label "Active Pane"\
	    -command "rt_force_cook_src $id \$mged_gui($id,active_dm)"
    hoc_register_menu_data "Source" "Active Pane" "Source - Active Pane"\
	    { { summary "Set the source to the active pane. The
active pane is the pane currently tied
to the GUI." } }
    $top.srcMB.menu add separator
    $top.srcMB.menu add command -label "Upper Left"\
	    -command "rt_force_cook_src $id $mged_gui($id,top).ul"
    hoc_register_menu_data "Source" "Upper Left" "Source - Upper Left"\
	    { { summary "Set the source to the \"Upper Left\" pane." } }
    $top.srcMB.menu add command -label "Upper Right"\
	    -command "rt_force_cook_src $id $mged_gui($id,top).ur"
    hoc_register_menu_data "Source" "Upper Right" "Source - Upper Right"\
	    { { summary "Set the source to the \"Upper Right\" pane." } }
    $top.srcMB.menu add command -label "Lower Left"\
	    -command "rt_force_cook_src $id $mged_gui($id,top).ll"
    hoc_register_menu_data "Source" "Lower Left" "Source - Lower Left"\
	    { { summary "Set the source to the \"Lower Left\" pane." } }
    $top.srcMB.menu add command -label "Lower Right"\
	    -command "rt_force_cook_src $id $mged_gui($id,top).lr"
    hoc_register_menu_data "Source" "Lower Right" "Source - Lower Right"\
	    { { summary "Set the source to the \"Lower Right\" pane." } }
    $top.srcMB.menu add separator
    $top.srcMB.menu add checkbutton -offvalue 0 -onvalue 1\
	    -variable rt_control($id,fixedSrc)\
	    -label "Fixed"
    hoc_register_menu_data "Source" "Fixed" "Source - Fixed"\
	    { { summary "By default, when the mouse_behavior is in the mode
to pick raytrace objects, the source will change
to the window wherein the object is selected. To
prevent the source from changing while selecting
objects, check the fixed button." } }

    set hoc_data { { summary "
Enter the desired destination. This is the place where
the pixels will be sent and can be the pathname of any internal
pane (display manager window). The panes associated with this
instance of the GUI can also be specified with keywords. For
example, ul, \"upper left\" and \"Upper Left\" all specify the
upper left pane. The destination can also be a file or an external
framebuffer. To specify an external framebuffer the user might
enter fbhost:0 to send the output to the framebuffer running on
the machine fbhost and listening on port 0." } }
    label $top.destL -text "Destination" -anchor e -padx 0 -pady 0
    hoc_register_data $top.destL "Destination" $hoc_data
    entry $top.destE -relief flat -width 12 -textvar rt_control($id,raw_dest)
    hoc_register_data $top.destE "Destination" $hoc_data
    bind $top.destE <KeyRelease> "rt_force_cook_dest $id \$rt_control($id,raw_dest)"
    menubutton $top.destMB -relief raised -bd 2\
	    -menu $top.destMB.menu -indicatoron 1
    hoc_register_data $top.destMB "Destination"\
	    { { summary "Pop up a menu of likely destinations." } }
    menu $top.destMB.menu -title "Destination" -tearoff 0
    $top.destMB.menu add command -label "Active Pane"\
	    -command "rt_force_cook_dest $id \$mged_gui($id,active_dm)"
    hoc_register_menu_data "Destination" "Active Pane" "Destination - Active Pane"\
	    { { summary "Set the destination to the active pane.
The active pane is the pane currently
tied to the GUI." } }
    $top.destMB.menu add separator
    $top.destMB.menu add command -label "Upper Left"\
	    -command "rt_force_cook_dest $id $mged_gui($id,top).ul"
    hoc_register_menu_data "Destination" "Upper Left" "Destination - Upper Left"\
	    { { summary "Set the destination to \"Upper Left\" pane." } }
    $top.destMB.menu add command -label "Upper Right"\
	    -command "rt_force_cook_dest $id $mged_gui($id,top).ur"
    hoc_register_menu_data "Destination" "Upper Right" "Destination - Upper Right"\
	    { { summary "Set the destination to \"Upper Right\" pane." } }
    $top.destMB.menu add command -label "Lower Left"\
	    -command "rt_force_cook_dest $id $mged_gui($id,top).ll"
    hoc_register_menu_data "Destination" "Lower Left" "Destination - Lower Left"\
	    { { summary "Set the destination to \"Lower Left\" pane." } }
    $top.destMB.menu add command -label "Lower Right"\
	    -command "rt_force_cook_dest $id $mged_gui($id,top).lr"
    hoc_register_menu_data "Destination" "Lower Right" "Destination - Lower Right"\
	    { { summary "Set the destination to \"Lower Right\" pane." } }
    $top.destMB.menu add separator
    set dbname [rt_db_to_pix]
    if {$dbname == ""} {
	set dbname foo.pix
    }
    $top.destMB.menu add command -label $dbname\
	    -command "rt_force_cook_dest $id $dbname"
    hoc_register_menu_data "Destination" "$dbname" "Destination - $dbname"\
	    { { summary "Set the destination to the specified file." } }
    if {[info exists env(FB_FILE)] && $env(FB_FILE) != ""} {
	$top.destMB.menu add command -label "$env(FB_FILE)"\
		-command "rt_force_cook_dest $id $env(FB_FILE)"
	hoc_register_menu_data "Destination" "$env(FB_FILE)" "Destination - $env(FB_FILE)"\
		{ { summary "Set the destination to the specified framebuffer." } }
    }
    $top.destMB.menu add separator
    $top.destMB.menu add checkbutton -offvalue 0 -onvalue 1\
	    -variable rt_control($id,fixedDest)\
	    -label "Fixed"
    hoc_register_menu_data "Destination" "Fixed" "Destination - Fixed"\
	    { { summary "By default, when the mouse_behavior is in the mode
to pick raytrace objects, the destination will change
to the window wherein the object is selected. To
prevent the destination from changing while selecting
objects, check the fixed button." } }

    label $top.sizeL -text "Size" -anchor e -padx 0 -pady 0
    hoc_register_data $top.sizeL "Size"\
	    { { summary "Indicates the size of the image.
This defaults to the size of the active pane." } }
    entry $top.sizeE -relief flat -width 12 -textvar rt_control($id,size)
    hoc_register_data $top.sizeE "Size"\
	    { { summary "Enter the desired image size." } }
    menubutton $top.sizeMB -relief raised -bd 2\
	    -menu $top.sizeMB.sizeM -indicatoron 1
    hoc_register_data $top.sizeMB "Size"\
	    { { summary "Pop up a menu of popular image sizes." } }
    menu $top.sizeMB.sizeM -title "Size" -tearoff 0
    $top.sizeMB.sizeM add command -label "Size of Pane"\
	    -command "rt_set_fb_size $id"
    hoc_register_menu_data "Size" "Size of Pane" "Size of Pane"\
	    { { summary "Set the image size to be the
same size as the active pane." } }
    $top.sizeMB.sizeM add command -label 128\
	    -command "set rt_control($id,size) 128"
    hoc_register_menu_data "Size" 128 "Size - 128x128"\
	    { { summary "Set the image size to 128x128." } }
    $top.sizeMB.sizeM add command -label 256\
	    -command "set rt_control($id,size) 256"
    hoc_register_menu_data "Size" 256 "Size - 256x256"\
	    { { summary "Set the image size to 256x256." } }
    $top.sizeMB.sizeM add command -label 512\
	    -command "set rt_control($id,size) 512"
    hoc_register_menu_data "Size" 512 "Size - 512x512"\
	    { { summary "Set the image size to 512x512." } }
    $top.sizeMB.sizeM add command -label 640x480\
	    -command "set rt_control($id,size) 640x480"
    hoc_register_menu_data "Size" 640x480 "Size - 640x480"\
	    { { summary "Set the image size to 640x480." } }
    $top.sizeMB.sizeM add command -label 720x486\
	    -command "set rt_control($id,size) 720x486"
    hoc_register_menu_data "Size" 720x486 "Size - 720x486"\
	    { { summary "Set the image size to 720x486." } }
    $top.sizeMB.sizeM add command -label 1024\
	    -command "set rt_control($id,size) 1024"
    hoc_register_menu_data "Size" 1024 "Size - 1024x1024"\
	    { { summary "Set the image size to 1024x1024." } }

    label $top.colorL -text "Background Color" -anchor e -padx 0 -pady 0
    hoc_register_data $top.colorL "Background Color"\
	    { { summary "This refers to the background color
used for raytracing. This is also the color
that is used when clearing the framebuffer." } }

    # $top.colorF is the name of the container created by color_entry_build
    # that contains the entry and menubutton for specifying a color
    color_entry_build $top color rt_control($id,color)\
	    "color_entry_chooser $id $top color \"Background Color\"\
	    rt_control $id,color"\
	    12 $rt_control($id,color) rt

    button $top.advancedB -relief raised -text "Advanced Settings..."\
	    -command "do_Advanced_Settings $id" \
	    -padx 0.5m -pady 0.5m
    hoc_register_data $top.advancedB "Advanced Settings"\
	    { { summary "Pop up another GUI for advanced settings." } }
    button $top.raytraceB -relief raised -text "Raytrace" \
	    -command "do_Raytrace $id" \
	    -padx 0.5m -pady 0.5m
    hoc_register_data $top.raytraceB "Raytrace"\
	    { { summary "Begin raytracing the view of the source pane.
The results of the raytrace will go to the place
specified by the destination." } }
    button $top.clearB -relief raised -text "fbclear" \
	    -command "do_fbclear $id" \
	    -padx 0.5m -pady 0.5m
    hoc_register_data $top.clearB "Clear the Framebuffer"\
	    { { summary "Clear the framebuffer specified by the
destination to the background color." } }
    button $top.abortB -relief raised -text "Abort" \
	    -command "rtabort" \
	    -padx 0.5m -pady 0.5m
    hoc_register_data $top.abortB "Abort Raytrace"\
	    { { summary "Abort all raytraces initiated by MGED." } }
    button $top.dismissB -relief raised -text "Dismiss" \
	    -command "rt_dismiss $id" \
	    -padx 0.5m -pady 0.5m
    hoc_register_data $top.dismissB "Dismiss"\
	    { { summary "Dismiss/close the raytrace control panel." } }

    grid $top.srcE $top.srcMB -sticky nsew -in $top.srcF
    grid columnconfigure $top.srcF 0 -weight 1
    grid rowconfigure $top.srcF 0 -weight 1

    grid $top.destE $top.destMB -sticky nsew -in $top.destF
    grid columnconfigure $top.destF 0 -weight 1
    grid rowconfigure $top.destF 0 -weight 1

    grid $top.sizeE $top.sizeMB -sticky nsew -in $top.sizeF
    grid columnconfigure $top.sizeF 0 -weight 1
    grid rowconfigure $top.sizeF 0 -weight 1

    grid $top.srcL $top.srcF - - - -pady 1 -sticky nsew -in $top.gridF1
    grid $top.destL $top.destF - - - -pady 1 -sticky nsew -in $top.gridF1
    grid $top.sizeL $top.sizeF - - - -pady 1 -sticky nsew -in $top.gridF1
    grid $top.colorL $top.colorF - - - -pady 1 -sticky nsew -in $top.gridF1
    grid $top.raytraceB $top.abortB $top.clearB x $top.advancedB -sticky "ew" -in $top.gridF1
    grid columnconfigure $top.gridF1 3 -weight 1
    grid rowconfigure $top.gridF1 0 -weight 1
    grid rowconfigure $top.gridF1 1 -weight 1
    grid rowconfigure $top.gridF1 2 -weight 1
    grid rowconfigure $top.gridF1 3 -weight 1

    grid $top.gridF1 -padx 4 -pady 4 -sticky nsew -in $top.gridF2
    grid columnconfigure $top.gridF2 0 -weight 1
    grid rowconfigure $top.gridF2 0 -weight 1

    grid $top.dismissB -sticky "ns" -in $top.gridF3

    grid $top.gridF2 -padx 4 -pady 4 -sticky nsew
    grid $top.gridF3 -padx 4 -pady 4 -sticky nsew
    grid columnconfigure $top 0 -weight 1
    grid rowconfigure $top 0 -weight 1

    color_entry_update $top color rt_control($id,color) $rt_control($id,color)
    rt_solid_list_callback $id
    rt_olist_edit_configure $id
    place_near_mouse $top
    wm title $top "Raytrace Control Panel ($id)"
}

proc rt_ok { id top } {
    do_Raytrace $id
    rt_dismiss $id
}

proc do_Raytrace { id } {
    global mged_gui
    global port
    global fb_all
    global rt_control
    global ::tk::Priv

    if {$rt_control($id,cooked_src) == ""} {
	return
    }

    if ![winfo exists $rt_control($id,cooked_src)] {
	return
    }

    winset $rt_control($id,cooked_src)
    set rt_cmd "_mged_rt" 

    if {$rt_control($id,cooked_dest) != ""} {
	append rt_cmd " -F$rt_control($id,cooked_dest)"
    }

    if {$rt_control($id,size) != ""} {
	set result [regexp "^(\[ \]*\[0-9\]+)((\[ \]*\[xX\]?\[ \]*)|(\[ \]+))(\[0-9\]*\[ \]*)$"\
		$rt_control($id,size) smatch width junkA junkB junkC height]
	if {$result} {
	    if {$height != ""} {
		append rt_cmd " -w $width -n $height"
		set width "$width.0"
		set height "$height.0"
		set aspect [expr {$width / $height}]
		append rt_cmd " -V $aspect"
	    } else {
		set aspect 1
		append rt_cmd " -s $width"
	    }
	} else {
	    cad_dialog $::tk::Priv(cad_dialog) $mged_gui($id,screen)\
		    "Improper size specification!"\
		    "Improper size specification: $rt_control($id,size)"\
		    "" 0 OK
	    return
	}
    } else {
	set aspect 1
    }

    if {[winfo exists $rt_control($id,top).colorMB] && $rt_control($id,color) != ""} {
	set rgb [getRGBorReset $rt_control($id,top).colorMB rt_control($id,color) $rt_control($id,color)]
	append rt_cmd " -C[lindex $rgb 0]/[lindex $rgb 1]/[lindex $rgb 2]"
    }

    if {$rt_control($id,nproc) != ""} {
	append rt_cmd " -P$rt_control($id,nproc)"
    }

    if {$rt_control($id,hsample) != ""} {
	append rt_cmd " -H$rt_control($id,hsample)"
    }

    if {$rt_control($id,jitter) != ""} {
	append rt_cmd " -J$rt_control($id,jitter)"
    }

    if {$rt_control($id,lmodel) != ""} {
	append rt_cmd " -l$rt_control($id,lmodel)"
	if {$rt_control($id,lmodel) == 7} {
		append rt_cmd ",$rt_control($id,pmGlobalPhotonsEntry),$rt_control($id,pmCausticsPercentScale),$rt_control($id,pmIrradianceRaysScale),$rt_control($id,pmAngularTolerance),$rt_control($id,pmRandomSeedEntry),$rt_control($id,pmImportanceMapping),$rt_control($id,pmIrradianceHypersamplingCache),$rt_control($id,pmVisualizeIrradiance),$rt_control($id,pmScaleIndirectEntry),$rt_control($id,pmCacheFileEntry) -A0"
	}
    }
	#puts $rt_cmd

    if {$rt_control($id,other) != ""} {
	append rt_cmd " $rt_control($id,other)"
    }

    if {!$fb_all} {
	set pos [rset rb pos]
	set xmin [lindex $pos 0]
	set ymin [lindex $pos 1]
	set dim [rset rb dim]
	set width [lindex $dim 0]
	set height [lindex $dim 1]
	regexp "^\[-\]?\[0-9\]+" $height height

	if {$width != 0 && $height != 0} {
	    if {$width > 0} {
		set xmax [expr $xmin + $width]
	    } else {
		set xmax $xmin
		set xmin [expr $xmax + $width]
	    }

	    if {$height > 0} {
		set ymax [expr $ymin + $height]
	    } else {
		set ymax $ymin
		set ymin [expr $ymax + $height]
	    }

	    append rt_cmd " -j $xmin,$ymin,$xmax,$ymax"
	}
    }

    switch $rt_control($id,omode) {
	one
	    -
	several {
	    # update rt_control($id,olist) with what's in the text widget
	    rt_olist_apply $id

	    catch {eval $rt_cmd -- $rt_control($id,olist)}
	}
	all {
	    catch {eval $rt_cmd}
	}
    }
}

proc do_fbclear { id } {
    global mged_gui
    global rt_control
    global ::tk::Priv

    if {$rt_control($id,cooked_dest) == ""} {
	return
    }

    if {$rt_control($id,color) != ""} {
	set result [regexp "^(\[0-9\]+)\[ \]+(\[0-9\]+)\[ \]+(\[0-9\]+)$" \
		$rt_control($id,color) cmatch red green blue]
	if {!$result} {
	    cad_dialog $::tk::Priv(cad_dialog) $mged_gui($id,screen)\
		    "Improper color specification!"\
		    "Improper color specification: $rt_control($id,color)"\
		    "" 0 OK
	    return
	}
    } else {
	set red 0
	set green 0
	set blue 0
    }

    set result [catch { exec fbclear -F $rt_control($id,cooked_dest)\
	    $red $green $blue & } rt_error]

    if {$result != 0} {
	cad_dialog $::tk::Priv(cad_dialog) $mged_gui($id,screen)\
		"RT Error!" "Rt Error: $rt_error" "" 0 OK
    }
}

proc rt_set_fb_size { id } {
    global mged_gui
    global rt_control

    if ![winfo exists $rt_control($id,half_baked_dest)] {
	return
    }

    winset $rt_control($id,half_baked_dest)
    set size [dm size]
    set rt_control($id,size) "[lindex $size 0]x[lindex $size 1]"
}

proc rt_dismiss { id } {
    global rt_control

    if [winfo exists $rt_control($id,topAS)] {
	catch { destroy $rt_control($id,topAS) }
    }

    if [winfo exists $rt_control($id,topOLE)] {
	catch { destroy $rt_control($id,topOLE) }
    }

    if [winfo exists $rt_control($id,top)] {
	catch { destroy $rt_control($id,top) }
    }

    set rt_control($id,fixedSrc) 0
    set rt_control($id,fixedDest) 0
    set rt_control($id,omode) one
}

proc do_Advanced_Settings { id } {
    global mged_gui
    global rt_control

    set top $rt_control($id,topAS)
    if [winfo exists $top] {
	raise $top
	return
    }

    toplevel $top -screen $mged_gui($id,screen)

    frame $top.gridF1
    frame $top.gridF2 -relief groove -bd 2

    set hoc_data { { summary "Indicates the number of processors
to use for raytracing." } }
    label $top.nprocL -text "# of Processors" -anchor e
    hoc_register_data $top.nprocL "# of Processors" $hoc_data
    entry $top.nprocE -relief sunken -bd 2 -width 2 -textvar rt_control($id,nproc)
    hoc_register_data $top.nprocE "# of Processors" $hoc_data

    set hoc_data { { summary "Hypersampling is the number of extra rays
to fire for each pixel. The results are then
averaged to determine the pixel value." } }
    label $top.hsampleL -text "Hypersample" -anchor e
    hoc_register_data $top.hsampleL "Hypersample" $hoc_data
    entry $top.hsampleE -relief sunken -bd 2 -width 2 -textvar rt_control($id,hsample)
    hoc_register_data $top.hsampleE "Hypersample" $hoc_data

    label $top.jitterL -text "Jitter" -anchor e
    hoc_register_data $top.jitterL "Jitter"\
	    { { summary "Jitter is used to randomly vary the point
from which a ray is fired." } }
    menubutton $top.jitterMB -relief sunken -bd 2 -textvar rt_control($id,jitterTitle)\
	    -menu $top.jitterMB.jitterM -indicatoron 1
    hoc_register_data $top.jitterMB "Jitter"\
	    { { summary "Pop up a menu of jitter values." } }
    menu $top.jitterMB.jitterM -title "Jitter" -tearoff 0
    $top.jitterMB.jitterM add command -label "None"\
	 -command "set rt_control($id,jitter) 0; set rt_control($id,jitterTitle) None"
    hoc_register_menu_data "Jitter" "None" "Jitter - None"\
	    { { summary "Turns off jittering. The rays will be
fired from the center of each cell." } }
    $top.jitterMB.jitterM add command -label "Cell"\
	 -command "set rt_control($id,jitter) 1; set rt_control($id,jitterTitle) Cell"
    hoc_register_menu_data "Jitter" "Cell" "Jitter - Cell"\
	    { { summary "Randomly jitter each cell by +/- one
half of the pixel size." } }
    $top.jitterMB.jitterM add command -label "Frame"\
	 -command "set rt_control($id,jitter) 2; set rt_control($id,jitterTitle) Frame"
    hoc_register_menu_data "Jitter" "Frame" "Jitter - Frame"\
	    { { summary "Randomly jitter the frame by +/- one
half of the pixel size. This variance will
be applied uniformly to each cell." } }
    $top.jitterMB.jitterM add command -label "Both"\
	 -command "set rt_control($id,jitter) 3; set rt_control($id,jitterTitle) Both"
    hoc_register_menu_data "Jitter" "Both" "Jitter - Both"\
	    { { summary "Randomly jitter the frame as well
as each cell." } }
    
    label $top.lmodelL -text "Light Model" -anchor e
    hoc_register_data $top.lmodelL "Light Model"\
	    { { summary "The light model determines how the
ray tracer will handle light." } }
    menubutton $top.lmodelMB -relief sunken -bd 2\
	    -width 24 -textvar rt_control($id,lmodelTitle)\
	    -menu $top.lmodelMB.lmodelM -indicatoron 1
    hoc_register_data $top.lmodelMB "Light Model"\
	    { { summary "Pop up a menu of light models." } }
    menu $top.lmodelMB.lmodelM -title "Light Model" -tearoff 0
    $top.lmodelMB.lmodelM add command -label "Full"\
	    -command "set rt_control($id,lmodel) 0;\
	    set rt_control($id,lmodelTitle) \"Full\";\
            PMMenu $id $top 0"
    hoc_register_menu_data "Light Model" "Full"\
	    "Lighting Model - Full"\
	    { { summary "This is the default. The full lighting model has the
ability to implement Phong shading, transparant and
reflective objects, shadow penumbras, texture
maps, etc.  In addition to ambient light, a
small amount of light is supplied from the eye
position. All objects in the active model space
with a material property string of ``light''
represent additional light sources (up to 16
are presently permitted), and shadow computations
will be initiated automatically." } }
    $top.lmodelMB.lmodelM add command -label "Diffuse"\
	    -command "set rt_control($id,lmodel) 1;\
	    set rt_control($id,lmodelTitle) \"Diffuse\";\
            PMMenu $id $top 0"
    hoc_register_menu_data "Light Model" "Diffuse"\
	    "Lighting Model - Diffuse"\
	    { { summary "This is a diffuse lighting model only and\
is intended for debugging." } }
    $top.lmodelMB.lmodelM add command -label "Surface Normals"\
	    -command "set rt_control($id,lmodel) 2;\
	    set rt_control($id,lmodelTitle) \"Surface Normals\";\
            PMMenu $id $top 0"
    hoc_register_menu_data "Light Model" "Surface Normals"\
	    "Lighting Model - Surface Normals"\
	    { { summary "This lighting model displays the surface normals
as colors which makes it useful for examining
curvature and surface orientation." } }
    $top.lmodelMB.lmodelM add command -label "Diffuse - 3 light"\
	    -command "set rt_control($id,lmodel) 3;\
	    set rt_control($id,lmodelTitle) \"Diffuse - 3 light\";\
            PMMenu $id $top 0"
    hoc_register_menu_data "Light Model" "Diffuse - 3 light"\
	    "Lighting Model - Diffuse 3 Light"\
	    { { summary "This is a three-light diffuse-lighting model\
and is intended for debugging." } }
    $top.lmodelMB.lmodelM add command -label "Curvature - inverse radius"\
	    -command "set rt_control($id,lmodel) 4;\
	    set rt_control($id,lmodelTitle) \"Curvature - inverse radius\";\
            PMMenu $id $top 0"
    hoc_register_menu_data "Light Model" "Curvature - inverse radius"\
	    "Lighting Model - Curvature, Inverse Radius"\
	    { { summary "This is a curvature debugging display,
showing the inverse radius of curvature." } }
    $top.lmodelMB.lmodelM add command -label "Curvature - direction vector"\
	    -command "set rt_control($id,lmodel) 5;\
	    set rt_control($id,lmodelTitle) \"Curvature - direction vector\";\
            PMMenu $id $top 0"
    hoc_register_menu_data "Light Model" "Curvature - direction vector"\
	    "Lighting Model - Curvature, Direction Vector"\
	    { { summary "This is a curvature debugging display,
showing the principal direction vector." } }
    $top.lmodelMB.lmodelM add command -label "Photon Mapping"\
	    -command "set rt_control($id,lmodel) 7;\
	    set rt_control($id,lmodelTitle) \"Photon Mapping\";\
	    PMMenu $id $top 1"
    hoc_register_menu_data "Light Model" "Photon Mapping"\
	    "Lighting Model - Photon Mapping"\
	    { { summary "This is a replacement for the Full Phong lighting model." } }

    set hoc_data { { summary "A place to specify other rt options." } }
    label $top.otherL -text "Other Options" -anchor e
    hoc_register_data $top.otherL "Other" $hoc_data
    entry $top.otherE -relief sunken -bd 2 -width 2 -textvar rt_control($id,other)
    hoc_register_data $top.otherE "Other" $hoc_data

    button $top.dismissB -relief raised -text "Dismiss" \
	    -command "catch { destroy $top }"
    hoc_register_data $top.dismissB "Dismiss"\
	    { { summary "Dismiss/close the advanced raytrace panel." } }

    grid $top.nprocL $top.nprocE -sticky nsew -pady 1 -in $top.gridF1
    grid $top.hsampleL $top.hsampleE -sticky nsew -pady 1 -in $top.gridF1
    grid $top.jitterL $top.jitterMB -sticky nsew -pady 1 -in $top.gridF1
    grid $top.lmodelL $top.lmodelMB -sticky nsew -pady 1 -in $top.gridF1
    grid $top.otherL $top.otherE -sticky nsew -pady 1 -in $top.gridF1
    grid columnconfigure $top.gridF1 1 -weight 1
    grid rowconfigure $top.gridF1 0 -weight 1
    grid rowconfigure $top.gridF1 1 -weight 1
    grid rowconfigure $top.gridF1 2 -weight 1
    grid rowconfigure $top.gridF1 3 -weight 1
    grid rowconfigure $top.gridF1 4 -weight 1

    grid $top.gridF1 -sticky nsew -padx 8 -pady 8 -in $top.gridF2
    grid columnconfigure $top.gridF2 0 -weight 1
    grid rowconfigure $top.gridF2 0 -weight 1

    grid $top.gridF2 -sticky nsew -padx 2 -pady 2
    grid $top.dismissB -sticky s -padx 2 -pady 2
    grid columnconfigure $top 0 -weight 1
    grid rowconfigure $top 0 -weight 1

    place_near_mouse $top
    wm title $top "Advanced Settings ($id)"

    PMMenu $id $top 2
    if {$rt_control($id,lmodelTitle) == "Photon Mapping"} {
      PMMenu $id $top 1
    }
}

## - rt_update_dest
#
# Called by main GUI to update the Raytrace Control Panel
#
proc rt_update_dest { id } {
    global mged_gui
    global rt_control
    global port
    global fb
    global fb_all
    global fb_overlay

    if ![info exists rt_control($id,top)] {
	return
    }

    set top $rt_control($id,top)
    if ![winfo exists $top] {
	return
    }

    if {$rt_control($id,half_baked_dest) != $mged_gui($id,active_dm)} {
	return
    }

    set rt_control($id,cooked_dest) $port
    set rt_control($id,fb) $fb
    set rt_control($id,fb_all) $fb_all
    set rt_control($id,fb_overlay) $fb_overlay
    set size [dm size]
    set rt_control($id,size) "[lindex $size 0]x[lindex $size 1]"

    set tmplist [list summary "The active pane is $rt_control($id,cooked_src)."]
    hoc_register_data $top.framebufferL "Active Pane"\
	    [list $tmplist]
}

## - rt_update_src
#
# Called by main GUI to update the Raytrace Control Panel
#
proc rt_update_src { id } {
    global mged_gui
    global rt_control
    global mouse_behavior

    if ![info exists rt_control($id,top)] {
	return
    }

    if ![winfo exists $rt_control($id,top)] {
	return
    }

    if {$rt_control($id,cooked_src) != $mged_gui($id,active_dm)} {
	return
    }

    if {$mouse_behavior == "o"} {
	if {$rt_control($id,omode) == "all"} {
	    set rt_control($id,omode) one
	}
    } else {
	set rt_control($id,omode) all
    }
}

proc rt_olist_edit { id } {
    global mged_gui
    global rt_control

    set top $rt_control($id,topOLE)

    if [winfo exists $top] {
	raise $top
	return
    }

    toplevel $top

    frame $top.olistF
    text $top.olistT -relief sunken -bd 2 -width 40 -height 10\
	    -yscrollcommand "$top.olistS set" -setgrid true
    hoc_register_data $top.olistT "Object List"\
	    { { summary "This shows the objects that will be raytraced when the
raytrace button is pressed. The contents herein may
be edited directly by the user when in \"several\"
mode (look in the \"Objects\" menu). If there are no
objects herein, then all objects being displayed will
be raytraced." } }
    scrollbar $top.olistS -relief flat -command "$top.olistT yview"
    grid $top.olistT $top.olistS -sticky nsew -in $top.olistF
    grid columnconfigure $top.olistF 0 -weight 1
    grid rowconfigure $top.olistF 0 -weight 1

    frame $top.buttonF
    button $top.clearB -relief raised -text "Clear"\
	    -command "rt_olist_clear $id"
    hoc_register_data $top.clearB "Clear Object List."\
	    { { summary "Clear the object list and the contents
of the object list editor." } }
    button $top.dismissB -relief raised -text "Dismiss"\
	    -command "rt_olist_dismiss $id"
    hoc_register_data $top.dismissB "Dismiss"\
	    { { summary "Dismiss the object list editor. Note - this does
not destroy the object list." } }
    grid x $top.clearB x $top.dismissB x\
	    -sticky nsew -in $top.buttonF
    grid columnconfigure $top.buttonF 0 -weight 1
    grid columnconfigure $top.buttonF 2 -weight 1
    grid columnconfigure $top.buttonF 4 -weight 1

    grid $top.olistF -sticky nsew -padx 8 -pady 4
    grid $top.buttonF -sticky nsew -padx 8 -pady 4
    grid columnconfigure $top 0 -weight 1
    grid rowconfigure $top 0 -weight 1

    rt_olist_reset $id
    rt_olist_edit_configure $id
    place_near_mouse $top
    wm title $top "Object List Editor ($id)"
}

proc rt_olist_edit_configure { id } {
    global rt_control

    switch $rt_control($id,omode) {
	several {
	    rt_olist_edit_enable $id
	}
	one
	   -
	all {
	    rt_olist_edit_disable $id
	}
    }
}

proc rt_olist_edit_disable { id } {
    global rt_control

    $rt_control($id,top).menubar.obj entryconfigure 5 -state disabled

    if ![winfo exists $rt_control($id,topOLE)] {
	return
    }
    $rt_control($id,topOLE).clearB configure -state disabled
    $rt_control($id,topOLE).olistT configure -state disabled
}

proc rt_olist_edit_enable { id } {
    global rt_control

    $rt_control($id,top).menubar.obj entryconfigure 5 -state normal

    if ![winfo exists $rt_control($id,topOLE)] {
	return
    }
    $rt_control($id,topOLE).clearB configure -state normal
    $rt_control($id,topOLE).olistT configure -state normal
}

## - rt_olist_apply
#
# update rt_control($id,olist) with what's in the text widget
#
proc rt_olist_apply { id } {
    global rt_control

    if ![winfo exists $rt_control($id,topOLE)] {
	return
    }

    set rt_control($id,olist) {}
    foreach obj  [$rt_control($id,topOLE).olistT get 0.0 end] {
	lappend rt_control($id,olist) $obj
    }
}

proc rt_olist_dismiss { id } {
    global rt_control

    rt_olist_apply $id
    destroy $rt_control($id,topOLE)
}

## - rt_olist_reset
#
# Reset the text widget with elements from rt_control($id,olist).
#
proc rt_olist_reset { id } {
    global rt_control

    rt_olist_set $id $rt_control($id,olist)
}

## - rt_olist_set
#
# Set the text widget and rt_control($id,olist) with elements from olist.
#
proc rt_olist_set { id olist } {
    global rt_control

    set rt_control($id,olist) $olist

    if ![winfo exists $rt_control($id,topOLE)] {
	return
    }

    # save state of text widget
    set save_state [lindex [$rt_control($id,topOLE).olistT\
	    configure -state] 4]

    # enable the text widget (it may already be enabled, so what)
    # so we can write to it.
    $rt_control($id,topOLE).olistT configure -state normal

    # clean out text widget
    $rt_control($id,topOLE).olistT delete 0.0 end

    # fill it back up with olist elements
    foreach obj $olist {
	$rt_control($id,topOLE).olistT insert end $obj\n
    }

    # put back state
    $rt_control($id,topOLE).olistT configure -state $save_state
}

proc rt_olist_add { id obj } {
    global rt_control

    if {[lsearch $rt_control($id,olist) $obj] != -1} {
	# already in list
	return
    }

    lappend rt_control($id,olist) $obj

    if ![winfo exists $rt_control($id,topOLE)] {
	return
    }

    # save state of text widget
    set save_state [lindex [$rt_control($id,topOLE).olistT\
	    configure -state] 4]

    # enable the text widget (it may already be enabled, so what)
    # so we can write to it.
    $rt_control($id,topOLE).olistT configure -state normal

    $rt_control($id,topOLE).olistT insert end $obj\n

    # put back state
    $rt_control($id,topOLE).olistT configure -state $save_state
}

proc rt_olist_clear { id } {
    global rt_control

    set rt_control($id,olist) {}

    if [winfo exists $rt_control($id,topOLE)] {
	$rt_control($id,topOLE).olistT delete 0.0 end
    }
}

proc rt_set_mouse_behavior { id } {
    global mged_gui
    global rt_control
    global mouse_behavior

    set bad [catch {winset $rt_control($id,cooked_src)} msg]
    if {$bad} {
	return
    }

    switch $rt_control($id,omode) {
	one
	    -
	several {
	    # apply to source window
	    set mouse_behavior o

	    # update the GUI specified by $id
	    if {$rt_control($id,cooked_src) == $mged_gui($id,active_dm)} {
		set mged_gui($id,mouse_behavior) o
	    }

	    # apply to all windows in the GUI specified by $id
	    #mged_apply_local $id "set mouse_behavior o"

	    rt_olist_apply $id
	}
	all {
	    # apply to source window
	    set mouse_behavior d

	    # update the GUI specified by $id
	    if {$rt_control($id,cooked_src) == $mged_gui($id,active_dm)} {
		set mged_gui($id,mouse_behavior) d
	    }

	    # apply to all windows in the GUI specified by $id
	    #mged_apply_local $id "set mouse_behavior d"

	    rt_solid_list_callback $id
	}
    }

    rt_olist_edit_configure $id
}

#
# raw	 ->	pathname, filename,
#		ul, upper left, ur, upper right,
#		ll, lower left, lr, lower right
# cooked ->	port spec
proc rt_cook_dest { id raw_dest } {
    global mged_gui
    global rt_control
    global listen
    global port
    global fb
    global fb_all
    global fb_overlay

    if {$raw_dest == ""} {
	set rt_control($id,cooked_dest) ""
	return
    }

    if {$rt_control($id,fixedDest)} {
	return
    }

    set rt_control($id,raw_dest) $raw_dest
    set rt_control($id,half_baked_dest) [rt_half_bake $id $raw_dest]

    if ![winfo exists $rt_control($id,half_baked_dest)] {
	set rt_control($id,cooked_dest) $raw_dest


	# disable framebuffer menu
	if [winfo exists $rt_control($id,top)] {
	    $rt_control($id,top).menubar entryconfigure 0 -state disabled
	}

	return
    }

    set bad [catch {winset $rt_control($id,half_baked_dest)} msg]
    if {$bad} {
	return
    }

    # re-enable framebuffer menu
    if [winfo exists $rt_control($id,top)] {
	$rt_control($id,top).menubar entryconfigure 0 -state normal
    }

    set fb 1
#    set fb_all 1

    if {!$listen} {
	set listen 1
    }
    set rt_control($id,cooked_dest) $port
    set rt_control($id,fb) 1
    set rt_control($id,fb_all) $fb_all
    set rt_control($id,fb_overlay) $fb_overlay
    set size [dm size]
    set rt_control($id,size) "[lindex $size 0]x[lindex $size 1]"
    set rt_control($id,color) [rset cs bg]
    color_entry_update $rt_control($id,top) color rt_control($id,color) $rt_control($id,color)

    if {$rt_control($id,half_baked_dest) == $mged_gui($id,active_dm)} {
	set mged_gui($id,fb) $fb
	set mged_gui($id,listen) $listen
    }
}

#
# raw	 ->	pathname,
#		ul, upper left, ur, upper right,
#		ll, lower left, lr, lower right
# cooked ->	pathname
#
proc rt_cook_src { id raw_src } {
    global rt_control
    global mouse_behavior

    if {$raw_src == ""} {
	return
    }

    if {$rt_control($id,fixedSrc)} {
	return
    }

    set rt_control($id,raw_src) $raw_src
    set rt_control($id,cooked_src) [rt_half_bake $id $raw_src]

    set bad [catch {winset $rt_control($id,cooked_src)} msg]
    if {$bad} {
	return
    }

    if {$mouse_behavior == "o"} {
	if {![info exists rt_control($id,omode)] ||\
		$rt_control($id,omode) == "all"} {
	    set rt_control($id,omode) one
	}
    } else {
	set rt_control($id,omode) all
    }
}

proc rt_set_fb { id } {
    global mged_gui
    global rt_control
    global fb
    global listen

    if ![winfo exists $rt_control($id,half_baked_dest)] {
	return
    }

    winset $rt_control($id,half_baked_dest)
    set fb $rt_control($id,fb)
    if {$fb && !$listen} {
	set listen 1
    }

    if {$rt_control($id,half_baked_dest) == $mged_gui($id,active_dm)} {
	set mged_gui($id,fb) $rt_control($id,fb)
	set mged_gui($id,listen) $listen
    }
}

proc rt_set_fb_all { id } {
    global rt_control
    global mged_gui
    global fb_all

    if ![winfo exists $rt_control($id,half_baked_dest)] {
	return
    }

    winset $rt_control($id,half_baked_dest)
    set fb_all $rt_control($id,fb_all)

    if {$rt_control($id,half_baked_dest) == $mged_gui($id,active_dm)} {
	set mged_gui($id,fb_all) $rt_control($id,fb_all)
    }

}

proc rt_set_fb_overlay { id } {
    global mged_gui
    global rt_control
    global fb_overlay

    if ![winfo exists $rt_control($id,half_baked_dest)] {
	return
    }

    winset $rt_control($id,half_baked_dest)
    set fb_overlay $rt_control($id,fb_overlay)

    if {$rt_control($id,half_baked_dest) == $mged_gui($id,active_dm)} {
	set mged_gui($id,fb_overlay) $rt_control($id,fb_overlay)
    }
}

## - rt_half_bake
#
# If possible, returns a valid display manager window.
# Otherwise, returns $raw.
#
proc rt_half_bake { id raw } {
    global mged_gui

    switch $raw {
	"active" 
	    -
	"Active" {
	    return $mged_gui($id,active_dm)
	}
	"ul" 
	    -
	"upper left" {
	    return $mged_gui($id,top).ul
	}
	"ur" 
	    -
	"upper right" {
	    return $mged_gui($id,top).ur
	}
	"ll" 
	    -
	"lower left" {
	    return $mged_gui($id,top).ll
	}
	"lr" 
	    -
	"lower right" {
	    return $mged_gui($id,top).lr
	}
	default {
	    if [winfo exists .$raw] {
		return .$raw
	    }

	    return $raw
	}
    }
}

proc rt_db_to_pix {} {
    global rt_control

    regsub \.g$ [_mged_opendb] .pix default_file
    return $default_file
}

## - rt_init_vars
#
# Called to initialize rt_control
# Called by: init_Raytrace, mouse_rt_obj_select
#
proc rt_init_vars { id win } {
    global mged_gui
    global rt_control

    if ![winfo exists $win] {
	return
    }
    
    # initialize once
    if ![info exists rt_control($id,top)] {
	set rt_control($id,top) .$id.rt
	set rt_control($id,topAS) .$id.rtAS
	set rt_control($id,topOLE) .$id.rtOLE
	set rt_control($id,olist) {}
	set rt_control($id,nproc) 16
	set rt_control($id,hsample) 0
	set rt_control($id,jitter) 0
	set rt_control($id,jitterTitle) "None"
	set rt_control($id,lmodel) 0
	set rt_control($id,lmodelTitle) "Full"
	set rt_control($id,other) {}

        ## Photon Mapping Init Stuff
	set rt_control($id,pmGlobalPhotonsEntry) 16384
	set rt_control($id,pmGlobalPhotonsScale) 14
	set rt_control($id,pmCausticsPercentScale) 0
	set rt_control($id,pmIrradianceRaysEntry) 100
	set rt_control($id,pmIrradianceRaysScale) 10
	set rt_control($id,pmAngularTolerance) 60.0
	set rt_control($id,pmRandomSeedEntry) 0
	set rt_control($id,pmImportanceMapping) 0
	set rt_control($id,pmIrradianceHypersamplingCache) 0
	set rt_control($id,pmVisualizeIrradiance) 0
	set rt_control($id,pmScaleIndirectScale) 1.0
	set rt_control($id,pmCacheFileEntry) ""


	# set widget padding
	set rt_control($id,padx) 4
	set rt_control($id,pady) 2

	set rt_control($id,fixedSrc) 0
	set rt_control($id,fixedDest) 0
    }

    # initialize everytime
    rt_cook_src $id $win
    rt_cook_dest $id $win
}

proc rt_force_cook_src { id win } {
    global rt_control

    # save fixed source
    set save_fsrc $rt_control($id,fixedSrc)

    set rt_control($id,fixedSrc) 0
    rt_cook_src $id $win

    # restore fixed source
    set rt_control($id,fixedSrc) $save_fsrc
}

proc rt_force_cook_dest { id win } {
    global rt_control

    # save fixed destination
    set save_fdest $rt_control($id,fixedDest)

    set rt_control($id,fixedDest) 0
    rt_cook_dest $id $win

    # restore fixed destination
    set rt_control($id,fixedDest) $save_fdest
}

#################### CALLBACKS ####################

proc rt_opendb_callback { id } {
    global rt_control

    if ![info exists rt_control($id,top)] {
	return
    }

    if [winfo exists $rt_control($id,top)] {
	set dbname [rt_db_to_pix]
	if {$dbname != ""} {
	    $rt_control($id,top).destMB.menu entryconfigure 7\
		    -label $dbname -command "rt_cook_dest $id $dbname"
	}
    }

    rt_olist_clear $id
}

proc rt_solid_list_callback { id } {
    global rt_control

    if ![info exists rt_control($id,top)] {
	return
    }

    if ![winfo exists $rt_control($id,top)] {
	return
    }

    if {$rt_control($id,omode) == "all"} {
	set rt_control($id,olist) [_mged_who]
	rt_olist_reset $id
	return
    }
}


proc rt_handle_configure { id } {
    after cancel rt_set_fb_size $id
    after idle rt_set_fb_size $id
}


##
##  Photon Mapping Interface Procedures (JLS_2003)
##


## Update for each inividual Entry/Scale pair
proc PMNonLinearEvent {EntryWidget ScaleValue} {
  ## Purge old characters
  $EntryWidget delete 0 [string length [$EntryWidget get]]
  ## Insert new characters
  $EntryWidget insert 0 [expr int(pow(2,$ScaleValue))]
}


## Update for each inividual Entry/Scale pair
proc PMLinearEvent {EntryWidget ScaleValue} {
  ## Purge old characters
  $EntryWidget delete 0 [string length [$EntryWidget get]]
  ## Insert new characters
  $EntryWidget insert 0 $ScaleValue
}


## Update for each inividual Entry/Scale pair
proc PMRaysEvent {EntryWidget ScaleValue} {
  ## Purge old characters
  $EntryWidget delete 0 [string length [$EntryWidget get]]
  ## Insert new characters
  $EntryWidget insert 0 [expr int(pow($ScaleValue,2))]
}


proc PMMenu {id top enable} {
  if {$enable == 2} {
    ## Setup
    frame $top.gridF4 -relief groove -bd 2

    set hoc_data { { summary "Photon Mapping is used to simulate indirect illumination and caustics.\nThis is a substitute to using ambient light to simulate indirect illumination." } }

    label $top.gridF4.pmOptionsLabel -text "Photon Mapping Controls" -foreground #666666
    hoc_register_data $top.gridF4.pmOptionsLabel "Photon Mapping Synopsis" $hoc_data
    grid $top.gridF4.pmOptionsLabel -row 0 -column 0 -columnspan 3


    ## Number of Photons in the Global Map
    set hoc_data { { summary "The total number of photons that will be used in the scene." } }

    label $top.gridF4.pmGlobalPhotonsLabel -text "Global Photons"
    grid $top.gridF4.pmGlobalPhotonsLabel -row 1 -column 0 -sticky e
    hoc_register_data $top.gridF4.pmGlobalPhotonsLabel "Global Photons" $hoc_data

    entry $top.gridF4.pmGlobalPhotonsEntry -width 8 -textvar rt_control($id,pmGlobalPhotonsEntry)
    grid $top.gridF4.pmGlobalPhotonsEntry -row 1 -column 1 -sticky news
    hoc_register_data $top.gridF4.pmGlobalPhotonsEntry "Global Photons" $hoc_data

    scale $top.gridF4.pmGlobalPhotonsScale -orient horizontal -showvalue 0 -from 10 -to 24 -command "PMNonLinearEvent $top.gridF4.pmGlobalPhotonsEntry" -variable rt_control($id,pmGlobalPhotonsScale)
    grid $top.gridF4.pmGlobalPhotonsScale -row 1 -column 2 -sticky news
    hoc_register_data $top.gridF4.pmGlobalPhotonsScale "Global Photons" $hoc_data


    ## Percent of Global Photons that Caustics may consume
    set hoc_data { { summary "The percent of global photons that should be used as caustic photons.\nIf there are no caustics in the scene then the percentage of caustic\nphotons chosen will be wasted." } }

    label $top.gridF4.pmCausticsPercentLabel -text "Caustics Percent"
    grid $top.gridF4.pmCausticsPercentLabel -row 2 -column 0 -sticky e
    hoc_register_data $top.gridF4.pmCausticsPercentLabel "Caustics Percent" $hoc_data

    entry $top.gridF4.pmCausticsPercentEntry -width 8 -textvar rt_control($id,pmCausticsPercentEntry)
    grid $top.gridF4.pmCausticsPercentEntry -row 2 -column 1 -sticky news
    hoc_register_data $top.gridF4.pmCausticsPercentEntry "Caustics Percent" $hoc_data

    scale $top.gridF4.pmCausticsPercentScale -orient horizontal -showvalue 0 -from 0 -to 100 -command "PMLinearEvent $top.gridF4.pmCausticsPercentEntry" -variable rt_control($id,pmCausticsPercentScale)
    grid $top.gridF4.pmCausticsPercentScale -row 2 -column 2 -sticky news
    hoc_register_data $top.gridF4.pmCausticsPercentScale "Caustics Percent" $hoc_data


    ## Number of Sample Rays for Irradidance Hemisphere Sample
    set hoc_data { { summary "The number of irradiance rays used to approximate irradiance at each irradiance cache point.\nIrradiance is the incoming light at a given point.  Increasing the number of rays will decrease\nthe amount of noise in the scene." } }

    label $top.gridF4.pmIrradianceRaysLabel -text "Irradiance Rays"
    grid $top.gridF4.pmIrradianceRaysLabel -row 3 -column 0 -sticky e
    hoc_register_data $top.gridF4.pmIrradianceRaysLabel "Irradiance Rays" $hoc_data

    entry $top.gridF4.pmIrradianceRaysEntry -width 8 -textvar rt_control($id,pmIrradianceRaysEntry)
    grid $top.gridF4.pmIrradianceRaysEntry -row 3 -column 1 -sticky news
    hoc_register_data $top.gridF4.pmIrradianceRaysEntry "Irradiance Rays" $hoc_data

    scale $top.gridF4.pmIrradianceRaysScale -orient horizontal -showvalue 0 -from 4 -to 32 -command "PMRaysEvent $top.gridF4.pmIrradianceRaysEntry" -variable rt_control($id,pmIrradianceRaysScale)
    grid $top.gridF4.pmIrradianceRaysScale -row 3 -column 2 -sticky news
    hoc_register_data $top.gridF4.pmIrradianceRaysScale "Irradiance Rays" $hoc_data


    ## Angular Tolerance Entry and Scale
    set hoc_data { { summary "The angular tolerance used when looking for candidate photons.\nSetting this high will remove normal banding, however photons\nmay appear in unwanted areas around edges." } }

    label $top.gridF4.pmAngularToleranceLabel -text "Angular Tol"
    grid $top.gridF4.pmAngularToleranceLabel -row 4 -column 0 -sticky e
    hoc_register_data $top.gridF4.pmAngularToleranceLabel "Angular Tolerance" $hoc_data

    entry $top.gridF4.pmAngularToleranceEntry -width 8 -textvar rt_control($id,pmAngularTolerance)
    grid $top.gridF4.pmAngularToleranceEntry -row 4 -column 1 -sticky news
    hoc_register_data $top.gridF4.pmAngularToleranceEntry "Angular Tolerance" $hoc_data

    scale $top.gridF4.pmAngularToleranceScale -orient horizontal -showvalue 0 -from 0 -to 180 -command "PMLinearEvent $top.gridF4.pmAngularToleranceEntry" -variable rt_control($id,pmAngularTolerance)
    grid $top.gridF4.pmAngularToleranceScale -row 4 -column 2 -sticky news
    hoc_register_data $top.gridF4.pmAngularToleranceScale "Angular Tolerance" $hoc_data


    ## Random Seed for Emitting Photons
    set hoc_data { { summary "Sets the random seed used for every part of photon mapping.\nFor large numbers of photons this setting will have no affect\non the scene.  This setting is useful for reproducing the same\nmap for a given scene." } }

    label $top.gridF4.pmRandomSeedLabel -text "Random Seed"
    grid $top.gridF4.pmRandomSeedLabel -row 5 -column 0 -sticky e
    hoc_register_data $top.gridF4.pmRandomSeedLabel "Random Seed" $hoc_data

    entry $top.gridF4.pmRandomSeedEntry -width 8 -textvar rt_control($id,pmRandomSeedEntry)
    grid $top.gridF4.pmRandomSeedEntry -row 5 -column 1 -sticky news
    hoc_register_data $top.gridF4.pmRandomSeedEntry "Random Seed" $hoc_data

    scale $top.gridF4.pmRandomSeedScale -orient horizontal -showvalue 0 -from 0 -to 9 -command "PMLinearEvent $top.gridF4.pmRandomSeedEntry" -variable rt_control($id,pmRandomSeedScale)
    grid $top.gridF4.pmRandomSeedScale -row 5 -column 2 -sticky news
    hoc_register_data $top.gridF4.pmRandomSeedScale "Random Seed" $hoc_data


    ## Scale Indirect
    set hoc_data { { summary "This setting scales indirect illumination in the scene by the specified amount.\nThis is useful for tweaking the amount of global illumination the scene\nshould be receiving." } }

    label $top.gridF4.pmScaleIndirectLabel -text "Scale Indirect"
    grid $top.gridF4.pmScaleIndirectLabel -row 6 -column 0 -sticky e
    hoc_register_data $top.gridF4.pmScaleIndirectLabel "Scale Indirect" $hoc_data

    entry $top.gridF4.pmScaleIndirectEntry -width 8 -textvar rt_control($id,pmScaleIndirectEntry)
    grid $top.gridF4.pmScaleIndirectEntry -row 6 -column 1 -sticky news
    hoc_register_data $top.gridF4.pmScaleIndirectEntry "Scale Indirect" $hoc_data

    scale $top.gridF4.pmScaleIndirectScale -orient horizontal -showvalue 0 -from 0.1 -to 10.0 -resolution 0.01 -command "PMLinearEvent $top.gridF4.pmScaleIndirectEntry" -variable rt_control($id,pmScaleIndirectScale)
    grid $top.gridF4.pmScaleIndirectScale -row 6 -column 2 -sticky news
    hoc_register_data $top.gridF4.pmScaleIndirectScale "Scale Indirect" $hoc_data


    ## Cache File
    set hoc_data { { summary "Entering a valid file name is this box permits saving and loading of the photon mapping\ndata.  This is useful for rendering a scene with static geometry without having to\ngenerate the data each time." } }

    label $top.gridF4.pmCacheFileLabel -text "Load/Save File"
    grid $top.gridF4.pmCacheFileLabel -row 7 -column 0 -sticky e
    hoc_register_data $top.gridF4.pmCacheFileLabel "Load/Save Photon Map Data" $hoc_data

    entry $top.gridF4.pmCacheFileEntry -width 8 -textvar rt_control($id,pmCacheFileEntry)
    grid $top.gridF4.pmCacheFileEntry -row 7 -column 1 -columnspan 2 -sticky news
    hoc_register_data $top.gridF4.pmCacheFileEntry "Load/Save Photon Map Data" $hoc_data


    ## Generate Importons
    set hoc_data { { summary "Use this setting to distribute the photons in a view dependent fashion.  This is useful when\nscenes are dominated by complex geometry in which only small portions are being viewed.\nImportance Mapping is view dependent and therefore should not be used in conjunction\nwith the file saving option unless the view remains static." } }

    checkbutton $top.gridF4.pmImportanceMapping -text "Use Importance Mapping" -variable rt_control($id,pmImportanceMapping)
    grid $top.gridF4.pmImportanceMapping -row 8 -column 1 -columnspan 2 -sticky w
    hoc_register_data $top.gridF4.pmImportanceMapping "Importance Mapping" $hoc_data
#    $top.gridF4.pmImportanceMapping select

    ## Irradiance Hypersampling Cache
    set hoc_data { { summary "With this option enabled only one irradiance and caustic lookup will be performed per pixel." } }

    checkbutton $top.gridF4.pmIrradianceHypersamplingCache -text "Use Irradiance Hypersampling Cache" -variable rt_control($id,pmIrradianceHypersamplingCache)
    grid $top.gridF4.pmIrradianceHypersamplingCache -row 9 -column 1 -columnspan 2 -sticky w
    hoc_register_data $top.gridF4.pmIrradianceHypersamplingCache "Irradiance Hypersampling Cache" $hoc_data
#    $top.gridF4.pmIrradianceHypersamplingCache select

    ## Irradiance Visualization
    set hoc_data { { summary "With this option enabled only the indirect illumination and caustics will be rendered." } }

    checkbutton $top.gridF4.pmVisualizeIrradiance -text "Visualize Irradiance Cache" -variable rt_control($id,pmVisualizeIrradiance)
    grid $top.gridF4.pmVisualizeIrradiance -row 10 -column 1 -columnspan 2 -sticky w
    hoc_register_data $top.gridF4.pmVisualizeIrradiance "Visualize Irradiance" $hoc_data
#    $top.gridF4.pmVisualizeIrradiance select

    ## Edge Compensator
#    checkbutton $top.gridF4.pmEdgeCompensation -text "Edge Compensation"
#    grid $top.gridF4.pmEdgeCompensation -row 7 -column 0 -columnspan 2 -sticky w
#    $top.gridF4.pmEdgeCompensation select

    ## Use Direct Photons for Direct Illumination
#    checkbutton $top.gridF4.pmDirectIllumination -text "Photon Map for Direct Illum."
#    $top.gridF4.pmDirectIllumination select
#    grid $top.gridF4.pmDirectIllumination -row 7 -column 2 -sticky w

  } elseif {$enable == 1} {
    if {[grid size $top.gridF1] != "2 6"} {
      grid $top.gridF4 -sticky news -columnspan 2 -in $top.gridF1 -ipadx 8 -ipady 8
    }
  } else {
    if {[grid size $top.gridF1] == "2 6"} {
      grid remove $top.gridF4
    }
  }
}
@


1.51
log
@Removed 2 lines of debugging info.
@
text
@@


1.51.2.1
log
@rt.tcl: sphere invalidation input
shaders.tcl: light attenuation
@
text
@d453 1
a453 1
		append rt_cmd ",$rt_control($id,pmGlobalPhotonsEntry),$rt_control($id,pmCausticsPercentScale),$rt_control($id,pmIrradianceRaysScale),$rt_control($id,pmAngularTolerance),$rt_control($id,pmRandomSeedEntry),$rt_control($id,pmImportanceMapping),$rt_control($id,pmIrradianceHypersamplingCache),$rt_control($id,pmVisualizeIrradiance),$rt_control($id,pmScaleIndirectEntry),$rt_control($id,pmSphereInvalidationEntry),$rt_control($id,pmCacheFileEntry) -A0"
d456 1
a456 3
#    puts "************************\n"
#    puts $rt_cmd
#    puts "************************\n"
a1314 1
	set rt_control($id,pmSphereInvalidationEntry) "0,0,0,0,4.0"
a1552 12
    ## Sphere Invalidation X,Y,Z,Rad
    set hoc_data { { summary "Sphere invalidation region format: x,y,z,rad" } }

    label $top.gridF4.pmSphereInvalidationLabel -text "Sphere Invalidation"
    grid $top.gridF4.pmSphereInvalidationLabel -row 8 -column 0 -sticky e
    hoc_register_data $top.gridF4.pmSphereInvalidationLabel "Sphere Invalidation (X,Y,Z,Rad)" $hoc_data

    entry $top.gridF4.pmSphereInvalidationEntry -width 8 -textvar rt_control($id,pmSphereInvalidationEntry)
    grid $top.gridF4.pmSphereInvalidationEntry -row 8 -column 1 -columnspan 2 -sticky news
    hoc_register_data $top.gridF4.pmSphereInvalidationEntry "Sphere Invalidation (X,Y,Z,Rad)" $hoc_data


d1557 1
a1557 1
    grid $top.gridF4.pmImportanceMapping -row 9 -column 1 -columnspan 2 -sticky w
d1565 1
a1565 1
    grid $top.gridF4.pmIrradianceHypersamplingCache -row 10 -column 1 -columnspan 2 -sticky w
d1573 1
a1573 1
    grid $top.gridF4.pmVisualizeIrradiance -row 11 -column 1 -columnspan 2 -sticky w
@


1.50
log
@rt.tcl updated for photon mapping under advanced settings and shaders.tcl
updated for the addition of lumens into the light shader for photon mapping.
@
text
@a449 4
	puts "-a-";
	puts $rt_cmd
	puts "-a-";

d456 1
a456 3
	puts "-b-";
	puts $rt_cmd
	puts "-b-";
@


1.49
log
@*** empty log message ***
@
text
@d450 4
d456 3
d460 3
d651 2
a652 1
	    set rt_control($id,lmodelTitle) Full"
d667 2
a668 1
	    set rt_control($id,lmodelTitle) Diffuse"
d675 2
a676 1
	    set rt_control($id,lmodelTitle) \"Surface Normals\""
d684 2
a685 1
	    set rt_control($id,lmodelTitle) \"Diffuse - 3 light\""
d692 2
a693 1
	    set rt_control($id,lmodelTitle) \"Curvature - inverse radius\""
d700 2
a701 1
	    set rt_control($id,lmodelTitle) \"Curvature - direction vector\""
d706 7
d748 5
d1308 15
d1400 1
d1404 199
a1602 1
}@


1.49.2.1
log
@photon mapping updates for tcl interface
@
text
@a449 4
	puts "-a-";
	puts $rt_cmd
	puts "-a-";

a451 3
	if {$rt_control($id,lmodel) == 7} {
		append rt_cmd ",$rt_control($id,pmGlobalPhotonsEntry),$rt_control($id,pmCausticsPercentScale),$rt_control($id,pmIrradianceRaysScale),$rt_control($id,pmAngularTolerance),$rt_control($id,pmRandomSeedEntry),$rt_control($id,pmIrradianceHypersamplingCache) -A0"
	}
a452 3
	puts "-b-";
	puts $rt_cmd
	puts "-b-";
d641 1
a641 2
	    set rt_control($id,lmodelTitle) \"Full\";\
            PMMenu $id $top 0"
d656 1
a656 2
	    set rt_control($id,lmodelTitle) \"Diffuse\";\
            PMMenu $id $top 0"
d663 1
a663 2
	    set rt_control($id,lmodelTitle) \"Surface Normals\";\
            PMMenu $id $top 0"
d671 1
a671 2
	    set rt_control($id,lmodelTitle) \"Diffuse - 3 light\";\
            PMMenu $id $top 0"
d678 1
a678 2
	    set rt_control($id,lmodelTitle) \"Curvature - inverse radius\";\
            PMMenu $id $top 0"
d685 1
a685 2
	    set rt_control($id,lmodelTitle) \"Curvature - direction vector\";\
            PMMenu $id $top 0"
a689 7
    $top.lmodelMB.lmodelM add command -label "Photon Mapping"\
	    -command "set rt_control($id,lmodel) 7;\
	    set rt_control($id,lmodelTitle) \"Photon Mapping\";\
	    PMMenu $id $top 1"
    hoc_register_menu_data "Light Model" "Photon Mapping"\
	    "Lighting Model - Photon Mapping"\
	    { { summary "This is a replacement for the Full Phong lighting model." } }
a724 5

    PMMenu $id $top 2
    if {$rt_control($id,lmodelTitle) == "Photon Mapping"} {
      PMMenu $id $top 1
    }
a1279 11
        ## Photon Mapping Init Stuff
	set rt_control($id,pmGlobalPhotonsEntry) 16384
	set rt_control($id,pmGlobalPhotonsScale) 14
	set rt_control($id,pmCausticsPercentScale) 50
	set rt_control($id,pmIrradianceRaysEntry) 100
	set rt_control($id,pmIrradianceRaysScale) 10
	set rt_control($id,pmAngularTolerance) 60.0
	set rt_control($id,pmRandomSeedEntry) 0
	set rt_control($id,pmIrradianceHypersamplingCache) 1


a1356 1

d1360 1
a1360 124
}


##
##  Photon Mapping Interface Procedures (JLS_2003)
##


## Update for each inividual Entry/Scale pair
proc PMNonLinearEvent {EntryWidget ScaleValue} {
  ## Purge old characters
  $EntryWidget delete 0 [string length [$EntryWidget get]]
  ## Insert new characters
  $EntryWidget insert 0 [expr int(pow(2,$ScaleValue))]
}


## Update for each inividual Entry/Scale pair
proc PMLinearEvent {EntryWidget ScaleValue} {
  ## Purge old characters
  $EntryWidget delete 0 [string length [$EntryWidget get]]
  ## Insert new characters
  $EntryWidget insert 0 $ScaleValue
}


## Update for each inividual Entry/Scale pair
proc PMRaysEvent {EntryWidget ScaleValue} {
  ## Purge old characters
  $EntryWidget delete 0 [string length [$EntryWidget get]]
  ## Insert new characters
  $EntryWidget insert 0 [expr int(pow($ScaleValue,2))]
}


proc PMMenu {id top enable} {
  if {$enable == 2} {
    ## Setup
    frame $top.gridF4 -relief groove -bd 2

    label $top.gridF4.pmOptionsLabel -text "Photon Mapping Controls" -foreground #666666
    grid $top.gridF4.pmOptionsLabel -row 0 -column 0 -columnspan 3


    ## Number of Photons in the Global Map
    label $top.gridF4.pmGlobalPhotonsLabel -text "Global Photons"
    grid $top.gridF4.pmGlobalPhotonsLabel -row 1 -column 0 -sticky e

    entry $top.gridF4.pmGlobalPhotonsEntry -width 8 -textvar rt_control($id,pmGlobalPhotonsEntry)
    grid $top.gridF4.pmGlobalPhotonsEntry -row 1 -column 1 -sticky news

    scale $top.gridF4.pmGlobalPhotonsScale -orient horizontal -showvalue 0 -from 10 -to 24 -command "PMNonLinearEvent $top.gridF4.pmGlobalPhotonsEntry" -variable rt_control($id,pmGlobalPhotonsScale)
    grid $top.gridF4.pmGlobalPhotonsScale -row 1 -column 2 -sticky news


    ## Percent of Global Photons that Caustics may consume
    label $top.gridF4.pmCausticsPercentLabel -text "Caustics Percent"
    grid $top.gridF4.pmCausticsPercentLabel -row 2 -column 0 -sticky e

    entry $top.gridF4.pmCausticsPercentEntry -width 8 -textvar rt_control($id,pmCausticsPercentEntry)
    grid $top.gridF4.pmCausticsPercentEntry -row 2 -column 1 -sticky news

    scale $top.gridF4.pmCausticsPercentScale -orient horizontal -showvalue 0 -from 0 -to 100 -command "PMLinearEvent $top.gridF4.pmCausticsPercentEntry" -variable rt_control($id,pmCausticsPercentScale)
    grid $top.gridF4.pmCausticsPercentScale -row 2 -column 2 -sticky news


    ## Number of Sample Rays for Irradidance Hemisphere Sample
    label $top.gridF4.pmIrradianceRaysLabel -text "Irradiance Rays"
    grid $top.gridF4.pmIrradianceRaysLabel -row 3 -column 0 -sticky e

    entry $top.gridF4.pmIrradianceRaysEntry -width 8 -textvar rt_control($id,pmIrradianceRaysEntry)
    grid $top.gridF4.pmIrradianceRaysEntry -row 3 -column 1 -sticky news

    scale $top.gridF4.pmIrradianceRaysScale -orient horizontal -showvalue 0 -from 4 -to 32 -command "PMRaysEvent $top.gridF4.pmIrradianceRaysEntry" -variable rt_control($id,pmIrradianceRaysScale)
    grid $top.gridF4.pmIrradianceRaysScale -row 3 -column 2 -sticky news


    ## Angular Tolerance Entry and Scale
    label $top.gridF4.pmAngularToleranceLabel -text "Angular Tol"
    grid $top.gridF4.pmAngularToleranceLabel -row 4 -column 0 -sticky e

    entry $top.gridF4.pmAngularToleranceEntry -width 8 -textvar rt_control($id,pmAngularTolerance)
    grid $top.gridF4.pmAngularToleranceEntry -row 4 -column 1 -sticky news

    scale $top.gridF4.pmAngularToleranceScale -orient horizontal -showvalue 0 -from 0 -to 180 -command "PMLinearEvent $top.gridF4.pmAngularToleranceEntry" -variable rt_control($id,pmAngularTolerance)
    grid $top.gridF4.pmAngularToleranceScale -row 4 -column 2 -sticky news


    ## Random Seed for Emitting Photons
    label $top.gridF4.pmRandomSeedLabel -text "Random Seed"
    grid $top.gridF4.pmRandomSeedLabel -row 5 -column 0 -sticky e

    entry $top.gridF4.pmRandomSeedEntry -width 8 -textvar rt_control($id,pmRandomSeedEntry)
    grid $top.gridF4.pmRandomSeedEntry -row 5 -column 1 -sticky news

    scale $top.gridF4.pmRandomSeedScale -orient horizontal -showvalue 0 -from 0 -to 9 -command "PMLinearEvent $top.gridF4.pmRandomSeedEntry" -variable rt_control($id,pmRandomSeedScale)
    grid $top.gridF4.pmRandomSeedScale -row 5 -column 2 -sticky news


    ## Irradiance Hypersampling
    checkbutton $top.gridF4.pmIrradianceHypersamplingCache -text "Use Irradiance Hypersampling Cache" -variable rt_control($id,pmIrradianceHypersamplingCache)
    grid $top.gridF4.pmIrradianceHypersamplingCache -row 6 -column 1 -columnspan 2 -sticky w
    $top.gridF4.pmIrradianceHypersamplingCache select

    ## Edge Compensator
#    checkbutton $top.gridF4.pmEdgeCompensation -text "Edge Compensation"
#    grid $top.gridF4.pmEdgeCompensation -row 7 -column 0 -columnspan 2 -sticky w
#    $top.gridF4.pmEdgeCompensation select

    ## Use Direct Photons for Direct Illumination
#    checkbutton $top.gridF4.pmDirectIllumination -text "Photon Map for Direct Illum."
#    $top.gridF4.pmDirectIllumination select
#    grid $top.gridF4.pmDirectIllumination -row 7 -column 2 -sticky w

  } elseif {$enable == 1} {
    if {[grid size $top.gridF1] != "2 6"} {
      grid $top.gridF4 -sticky news -columnspan 2 -in $top.gridF1 -ipadx 8 -ipady 8
    }
  } else {
    if {[grid size $top.gridF1] == "2 6"} {
      grid remove $top.gridF4
    }
  }
}
@


1.49.2.2
log
@*** empty log message ***
@
text
@d457 1
a457 1
		append rt_cmd ",$rt_control($id,pmGlobalPhotonsEntry),$rt_control($id,pmCausticsPercentScale),$rt_control($id,pmIrradianceRaysScale),$rt_control($id,pmAngularTolerance),$rt_control($id,pmRandomSeedEntry),$rt_control($id,pmIrradianceHypersamplingCache),,$rt_control($id,pmLightIntensityEntry) -A0"
a1315 1
	set rt_control($id,pmLightIntensityScale) 1.0
a1498 11
    ## Light Intensity
    label $top.gridF4.pmLightIntensityLabel -text "Light Intensity"
    grid $top.gridF4.pmLightIntensityLabel -row 6 -column 0 -sticky e

    entry $top.gridF4.pmLightIntensityEntry -width 8 -textvar rt_control($id,pmLightIntensityEntry)
    grid $top.gridF4.pmLightIntensityEntry -row 6 -column 1 -sticky news

    scale $top.gridF4.pmLightIntensityScale -orient horizontal -showvalue 0 -from 0.01 -to 100.0 -resolution 0.01 -command "PMLinearEvent $top.gridF4.pmLightIntensityEntry" -variable rt_control($id,pmLightIntensityScale)
    grid $top.gridF4.pmLightIntensityScale -row 6 -column 2 -sticky news


d1501 1
a1501 1
    grid $top.gridF4.pmIrradianceHypersamplingCache -row 7 -column 1 -columnspan 2 -sticky w
@


1.49.2.3
log
@Irradiance Visualization added
@
text
@d457 1
a457 1
		append rt_cmd ",$rt_control($id,pmGlobalPhotonsEntry),$rt_control($id,pmCausticsPercentScale),$rt_control($id,pmIrradianceRaysScale),$rt_control($id,pmAngularTolerance),$rt_control($id,pmRandomSeedEntry),$rt_control($id,pmIrradianceHypersamplingCache),$rt_control($id,VisualizeIrradiance),$rt_control($id,pmLightIntensityEntry) -A0"
d1316 1
a1317 2
	set rt_control($id,pmVisualizeIrradiance) 0
	set rt_control($id,pmLightIntensityScale) 1.0
a1514 5

    ## Irradiance Hypersampling
    checkbutton $top.gridF4.pmVisualizeIrradiance -text "Visualize Irradiance Cache" -variable rt_control($id,pmVisualizeIrradiance)
    grid $top.gridF4.pmVisualizeIrradiance -row 8 -column 1 -columnspan 2 -sticky w
#    $top.gridF4.pmVisualizeIrradiance select
@


1.49.2.4
log
@Visualization of Irradiance
@
text
@d457 1
a457 1
		append rt_cmd ",$rt_control($id,pmGlobalPhotonsEntry),$rt_control($id,pmCausticsPercentScale),$rt_control($id,pmIrradianceRaysScale),$rt_control($id,pmAngularTolerance),$rt_control($id,pmRandomSeedEntry),$rt_control($id,pmIrradianceHypersamplingCache),$rt_control($id,pmVisualizeIrradiance),$rt_control($id,pmLightIntensityEntry) -A0"
@


1.49.2.5
log
@Visualization of Irradiance
@
text
@d1316 1
a1316 1
	set rt_control($id,pmIrradianceHypersamplingCache) 0
d1515 1
a1515 1
#    $top.gridF4.pmIrradianceHypersamplingCache select
@


1.49.2.6
log
@more updates
@
text
@d457 1
a457 1
		append rt_cmd ",$rt_control($id,pmGlobalPhotonsEntry),$rt_control($id,pmCausticsPercentScale),$rt_control($id,pmIrradianceRaysScale),$rt_control($id,pmAngularTolerance),$rt_control($id,pmRandomSeedEntry),$rt_control($id,pmImportanceMapping),$rt_control($id,pmIrradianceHypersamplingCache),$rt_control($id,pmVisualizeIrradiance),$rt_control($id,pmLightIntensityEntry) -A0"
a1315 1
	set rt_control($id,pmImportanceMapping) 0
a1511 5
    ## Generate Importons
    checkbutton $top.gridF4.pmImportanceMapping -text "Use Importance Mapping" -variable rt_control($id,pmImportanceMapping)
    grid $top.gridF4.pmImportanceMapping -row 7 -column 1 -columnspan 2 -sticky w
#    $top.gridF4.pmImportanceMapping select

d1514 1
a1514 1
    grid $top.gridF4.pmIrradianceHypersamplingCache -row 8 -column 1 -columnspan 2 -sticky w
d1517 1
a1517 1
    ## Irradiance Visualization
d1519 1
a1519 1
    grid $top.gridF4.pmVisualizeIrradiance -row 9 -column 1 -columnspan 2 -sticky w
@


1.49.2.7
log
@added importance mapping
@
text
@d1509 1
a1509 1
    scale $top.gridF4.pmLightIntensityScale -orient horizontal -showvalue 0 -from 0.1 -to 10.0 -resolution 0.01 -command "PMLinearEvent $top.gridF4.pmLightIntensityEntry" -variable rt_control($id,pmLightIntensityScale)
@


1.49.2.8
log
@updated
@
text
@d457 1
a457 1
		append rt_cmd ",$rt_control($id,pmGlobalPhotonsEntry),$rt_control($id,pmCausticsPercentScale),$rt_control($id,pmIrradianceRaysScale),$rt_control($id,pmAngularTolerance),$rt_control($id,pmRandomSeedEntry),$rt_control($id,pmImportanceMapping),$rt_control($id,pmIrradianceHypersamplingCache),$rt_control($id,pmVisualizeIrradiance),$rt_control($id,pmScaleIndirectEntry),$rt_control($id,pmCacheFileEntry) -A0"
d1311 1
a1311 1
	set rt_control($id,pmCausticsPercentScale) 0
d1319 1
a1319 2
	set rt_control($id,pmScaleIndirectScale) 1.0
	set rt_control($id,pmCacheFileEntry) ""
a1442 2
    set hoc_data { { summary "Photon Mapping is used to simulate indirect illumination and caustics.\nThis is a substitute to using ambient light to simulate indirect illumination." } }

a1443 1
    hoc_register_data $top.gridF4.pmOptionsLabel "Photon Mapping Synopsis" $hoc_data
a1447 2
    set hoc_data { { summary "The total number of photons that will be used in the scene." } }

a1449 1
    hoc_register_data $top.gridF4.pmGlobalPhotonsLabel "Global Photons" $hoc_data
a1452 1
    hoc_register_data $top.gridF4.pmGlobalPhotonsEntry "Global Photons" $hoc_data
a1455 1
    hoc_register_data $top.gridF4.pmGlobalPhotonsScale "Global Photons" $hoc_data
a1458 2
    set hoc_data { { summary "The percent of global photons that should be used as caustic photons.\nIf there are no caustics in the scene then the percentage of caustic\nphotons chosen will be wasted." } }

a1460 1
    hoc_register_data $top.gridF4.pmCausticsPercentLabel "Caustics Percent" $hoc_data
a1463 1
    hoc_register_data $top.gridF4.pmCausticsPercentEntry "Caustics Percent" $hoc_data
a1466 1
    hoc_register_data $top.gridF4.pmCausticsPercentScale "Caustics Percent" $hoc_data
a1469 2
    set hoc_data { { summary "The number of irradiance rays used to approximate irradiance at each irradiance cache point.\nIrradiance is the incoming light at a given point.  Increasing the number of rays will decrease\nthe amount of noise in the scene." } }

a1471 1
    hoc_register_data $top.gridF4.pmIrradianceRaysLabel "Irradiance Rays" $hoc_data
a1474 1
    hoc_register_data $top.gridF4.pmIrradianceRaysEntry "Irradiance Rays" $hoc_data
a1477 1
    hoc_register_data $top.gridF4.pmIrradianceRaysScale "Irradiance Rays" $hoc_data
a1480 2
    set hoc_data { { summary "The angular tolerance used when looking for candidate photons.\nSetting this high will remove normal banding, however photons\nmay appear in unwanted areas around edges." } }

a1482 1
    hoc_register_data $top.gridF4.pmAngularToleranceLabel "Angular Tolerance" $hoc_data
a1485 1
    hoc_register_data $top.gridF4.pmAngularToleranceEntry "Angular Tolerance" $hoc_data
a1488 1
    hoc_register_data $top.gridF4.pmAngularToleranceScale "Angular Tolerance" $hoc_data
a1491 2
    set hoc_data { { summary "Sets the random seed used for every part of photon mapping.\nFor large numbers of photons this setting will have no affect\non the scene.  This setting is useful for reproducing the same\nmap for a given scene." } }

a1493 1
    hoc_register_data $top.gridF4.pmRandomSeedLabel "Random Seed" $hoc_data
a1496 1
    hoc_register_data $top.gridF4.pmRandomSeedEntry "Random Seed" $hoc_data
a1499 2
    hoc_register_data $top.gridF4.pmRandomSeedScale "Random Seed" $hoc_data

a1500 2
    ## Scale Indirect
    set hoc_data { { summary "This setting scales indirect illumination in the scene by the specified amount.\nThis is useful for tweaking the amount of global illumination the scene\nshould be receiving." } }
d1502 3
a1504 3
    label $top.gridF4.pmScaleIndirectLabel -text "Scale Indirect"
    grid $top.gridF4.pmScaleIndirectLabel -row 6 -column 0 -sticky e
    hoc_register_data $top.gridF4.pmScaleIndirectLabel "Scale Indirect" $hoc_data
d1506 2
a1507 3
    entry $top.gridF4.pmScaleIndirectEntry -width 8 -textvar rt_control($id,pmScaleIndirectEntry)
    grid $top.gridF4.pmScaleIndirectEntry -row 6 -column 1 -sticky news
    hoc_register_data $top.gridF4.pmScaleIndirectEntry "Scale Indirect" $hoc_data
d1509 2
a1510 15
    scale $top.gridF4.pmScaleIndirectScale -orient horizontal -showvalue 0 -from 0.1 -to 10.0 -resolution 0.01 -command "PMLinearEvent $top.gridF4.pmScaleIndirectEntry" -variable rt_control($id,pmScaleIndirectScale)
    grid $top.gridF4.pmScaleIndirectScale -row 6 -column 2 -sticky news
    hoc_register_data $top.gridF4.pmScaleIndirectScale "Scale Indirect" $hoc_data


    ## Cache File
    set hoc_data { { summary "Entering a valid file name is this box permits saving and loading of the photon mapping\ndata.  This is useful for rendering a scene with static geometry without having to\ngenerate the data each time." } }

    label $top.gridF4.pmCacheFileLabel -text "Load/Save File"
    grid $top.gridF4.pmCacheFileLabel -row 7 -column 0 -sticky e
    hoc_register_data $top.gridF4.pmCacheFileLabel "Load/Save Photon Map Data" $hoc_data

    entry $top.gridF4.pmCacheFileEntry -width 8 -textvar rt_control($id,pmCacheFileEntry)
    grid $top.gridF4.pmCacheFileEntry -row 7 -column 1 -columnspan 2 -sticky news
    hoc_register_data $top.gridF4.pmCacheFileEntry "Load/Save Photon Map Data" $hoc_data
a1513 2
    set hoc_data { { summary "Use this setting to distribute the photons in a view dependent fashion.  This is useful when\nscenes are dominated by complex geometry in which only small portions are being viewed.\nImportance Mapping is view dependent and therefore should not be used in conjunction\nwith the file saving option unless the view remains static." } }

d1515 1
a1515 2
    grid $top.gridF4.pmImportanceMapping -row 8 -column 1 -columnspan 2 -sticky w
    hoc_register_data $top.gridF4.pmImportanceMapping "Importance Mapping" $hoc_data
d1518 1
a1518 3
    ## Irradiance Hypersampling Cache
    set hoc_data { { summary "With this option enabled only one irradiance and caustic lookup will be performed per pixel." } }

d1520 1
a1520 2
    grid $top.gridF4.pmIrradianceHypersamplingCache -row 9 -column 1 -columnspan 2 -sticky w
    hoc_register_data $top.gridF4.pmIrradianceHypersamplingCache "Irradiance Hypersampling Cache" $hoc_data
a1523 2
    set hoc_data { { summary "With this option enabled only the indirect illumination and caustics will be rendered." } }

d1525 1
a1525 2
    grid $top.gridF4.pmVisualizeIrradiance -row 10 -column 1 -columnspan 2 -sticky w
    hoc_register_data $top.gridF4.pmVisualizeIrradiance "Visualize Irradiance" $hoc_data
@


1.48
log
@Increased the default processor count for the raytrace control panel from 1 to 16 \(not likely for mged to be used interactively an a machine with \> 16 processors, but very likely to have more than one\).
@
text
@d16 1
a16 1
    global tkPriv
d19 1
a19 1
	cad_dialog $tkPriv(cad_dialog) $mged_gui($id,screen) "No database." \
d391 1
a391 1
    global tkPriv
d423 1
a423 1
	    cad_dialog $tkPriv(cad_dialog) $mged_gui($id,screen)\
d504 1
a504 1
    global tkPriv
d514 1
a514 1
	    cad_dialog $tkPriv(cad_dialog) $mged_gui($id,screen)\
d530 1
a530 1
	cad_dialog $tkPriv(cad_dialog) $mged_gui($id,screen)\
@


1.47
log
@*- bug fix
@
text
@d1272 1
a1272 1
	set rt_control($id,nproc) 1
@


1.47.4.1
log
@sync branch with HEAD
@
text
@d16 1
a16 1
    global ::tk::Priv
d19 1
a19 1
	cad_dialog $::tk::Priv(cad_dialog) $mged_gui($id,screen) "No database." \
d391 1
a391 1
    global ::tk::Priv
d423 1
a423 1
	    cad_dialog $::tk::Priv(cad_dialog) $mged_gui($id,screen)\
a451 3
	if {$rt_control($id,lmodel) == 7} {
		append rt_cmd ",$rt_control($id,pmGlobalPhotonsEntry),$rt_control($id,pmCausticsPercentScale),$rt_control($id,pmIrradianceRaysScale),$rt_control($id,pmAngularTolerance),$rt_control($id,pmRandomSeedEntry),$rt_control($id,pmImportanceMapping),$rt_control($id,pmIrradianceHypersamplingCache),$rt_control($id,pmVisualizeIrradiance),$rt_control($id,pmScaleIndirectEntry),$rt_control($id,pmCacheFileEntry) -A0"
	}
a452 1
	#puts $rt_cmd
d504 1
a504 1
    global ::tk::Priv
d514 1
a514 1
	    cad_dialog $::tk::Priv(cad_dialog) $mged_gui($id,screen)\
d530 1
a530 1
	cad_dialog $::tk::Priv(cad_dialog) $mged_gui($id,screen)\
d641 1
a641 2
	    set rt_control($id,lmodelTitle) \"Full\";\
            PMMenu $id $top 0"
d656 1
a656 2
	    set rt_control($id,lmodelTitle) \"Diffuse\";\
            PMMenu $id $top 0"
d663 1
a663 2
	    set rt_control($id,lmodelTitle) \"Surface Normals\";\
            PMMenu $id $top 0"
d671 1
a671 2
	    set rt_control($id,lmodelTitle) \"Diffuse - 3 light\";\
            PMMenu $id $top 0"
d678 1
a678 2
	    set rt_control($id,lmodelTitle) \"Curvature - inverse radius\";\
            PMMenu $id $top 0"
d685 1
a685 2
	    set rt_control($id,lmodelTitle) \"Curvature - direction vector\";\
            PMMenu $id $top 0"
a689 7
    $top.lmodelMB.lmodelM add command -label "Photon Mapping"\
	    -command "set rt_control($id,lmodel) 7;\
	    set rt_control($id,lmodelTitle) \"Photon Mapping\";\
	    PMMenu $id $top 1"
    hoc_register_menu_data "Light Model" "Photon Mapping"\
	    "Lighting Model - Photon Mapping"\
	    { { summary "This is a replacement for the Full Phong lighting model." } }
a724 5

    PMMenu $id $top 2
    if {$rt_control($id,lmodelTitle) == "Photon Mapping"} {
      PMMenu $id $top 1
    }
d1272 1
a1272 1
	set rt_control($id,nproc) 16
a1279 15
        ## Photon Mapping Init Stuff
	set rt_control($id,pmGlobalPhotonsEntry) 16384
	set rt_control($id,pmGlobalPhotonsScale) 14
	set rt_control($id,pmCausticsPercentScale) 0
	set rt_control($id,pmIrradianceRaysEntry) 100
	set rt_control($id,pmIrradianceRaysScale) 10
	set rt_control($id,pmAngularTolerance) 60.0
	set rt_control($id,pmRandomSeedEntry) 0
	set rt_control($id,pmImportanceMapping) 0
	set rt_control($id,pmIrradianceHypersamplingCache) 0
	set rt_control($id,pmVisualizeIrradiance) 0
	set rt_control($id,pmScaleIndirectScale) 1.0
	set rt_control($id,pmCacheFileEntry) ""


a1356 1

d1360 1
a1360 199
}


##
##  Photon Mapping Interface Procedures (JLS_2003)
##


## Update for each inividual Entry/Scale pair
proc PMNonLinearEvent {EntryWidget ScaleValue} {
  ## Purge old characters
  $EntryWidget delete 0 [string length [$EntryWidget get]]
  ## Insert new characters
  $EntryWidget insert 0 [expr int(pow(2,$ScaleValue))]
}


## Update for each inividual Entry/Scale pair
proc PMLinearEvent {EntryWidget ScaleValue} {
  ## Purge old characters
  $EntryWidget delete 0 [string length [$EntryWidget get]]
  ## Insert new characters
  $EntryWidget insert 0 $ScaleValue
}


## Update for each inividual Entry/Scale pair
proc PMRaysEvent {EntryWidget ScaleValue} {
  ## Purge old characters
  $EntryWidget delete 0 [string length [$EntryWidget get]]
  ## Insert new characters
  $EntryWidget insert 0 [expr int(pow($ScaleValue,2))]
}


proc PMMenu {id top enable} {
  if {$enable == 2} {
    ## Setup
    frame $top.gridF4 -relief groove -bd 2

    set hoc_data { { summary "Photon Mapping is used to simulate indirect illumination and caustics.\nThis is a substitute to using ambient light to simulate indirect illumination." } }

    label $top.gridF4.pmOptionsLabel -text "Photon Mapping Controls" -foreground #666666
    hoc_register_data $top.gridF4.pmOptionsLabel "Photon Mapping Synopsis" $hoc_data
    grid $top.gridF4.pmOptionsLabel -row 0 -column 0 -columnspan 3


    ## Number of Photons in the Global Map
    set hoc_data { { summary "The total number of photons that will be used in the scene." } }

    label $top.gridF4.pmGlobalPhotonsLabel -text "Global Photons"
    grid $top.gridF4.pmGlobalPhotonsLabel -row 1 -column 0 -sticky e
    hoc_register_data $top.gridF4.pmGlobalPhotonsLabel "Global Photons" $hoc_data

    entry $top.gridF4.pmGlobalPhotonsEntry -width 8 -textvar rt_control($id,pmGlobalPhotonsEntry)
    grid $top.gridF4.pmGlobalPhotonsEntry -row 1 -column 1 -sticky news
    hoc_register_data $top.gridF4.pmGlobalPhotonsEntry "Global Photons" $hoc_data

    scale $top.gridF4.pmGlobalPhotonsScale -orient horizontal -showvalue 0 -from 10 -to 24 -command "PMNonLinearEvent $top.gridF4.pmGlobalPhotonsEntry" -variable rt_control($id,pmGlobalPhotonsScale)
    grid $top.gridF4.pmGlobalPhotonsScale -row 1 -column 2 -sticky news
    hoc_register_data $top.gridF4.pmGlobalPhotonsScale "Global Photons" $hoc_data


    ## Percent of Global Photons that Caustics may consume
    set hoc_data { { summary "The percent of global photons that should be used as caustic photons.\nIf there are no caustics in the scene then the percentage of caustic\nphotons chosen will be wasted." } }

    label $top.gridF4.pmCausticsPercentLabel -text "Caustics Percent"
    grid $top.gridF4.pmCausticsPercentLabel -row 2 -column 0 -sticky e
    hoc_register_data $top.gridF4.pmCausticsPercentLabel "Caustics Percent" $hoc_data

    entry $top.gridF4.pmCausticsPercentEntry -width 8 -textvar rt_control($id,pmCausticsPercentEntry)
    grid $top.gridF4.pmCausticsPercentEntry -row 2 -column 1 -sticky news
    hoc_register_data $top.gridF4.pmCausticsPercentEntry "Caustics Percent" $hoc_data

    scale $top.gridF4.pmCausticsPercentScale -orient horizontal -showvalue 0 -from 0 -to 100 -command "PMLinearEvent $top.gridF4.pmCausticsPercentEntry" -variable rt_control($id,pmCausticsPercentScale)
    grid $top.gridF4.pmCausticsPercentScale -row 2 -column 2 -sticky news
    hoc_register_data $top.gridF4.pmCausticsPercentScale "Caustics Percent" $hoc_data


    ## Number of Sample Rays for Irradidance Hemisphere Sample
    set hoc_data { { summary "The number of irradiance rays used to approximate irradiance at each irradiance cache point.\nIrradiance is the incoming light at a given point.  Increasing the number of rays will decrease\nthe amount of noise in the scene." } }

    label $top.gridF4.pmIrradianceRaysLabel -text "Irradiance Rays"
    grid $top.gridF4.pmIrradianceRaysLabel -row 3 -column 0 -sticky e
    hoc_register_data $top.gridF4.pmIrradianceRaysLabel "Irradiance Rays" $hoc_data

    entry $top.gridF4.pmIrradianceRaysEntry -width 8 -textvar rt_control($id,pmIrradianceRaysEntry)
    grid $top.gridF4.pmIrradianceRaysEntry -row 3 -column 1 -sticky news
    hoc_register_data $top.gridF4.pmIrradianceRaysEntry "Irradiance Rays" $hoc_data

    scale $top.gridF4.pmIrradianceRaysScale -orient horizontal -showvalue 0 -from 4 -to 32 -command "PMRaysEvent $top.gridF4.pmIrradianceRaysEntry" -variable rt_control($id,pmIrradianceRaysScale)
    grid $top.gridF4.pmIrradianceRaysScale -row 3 -column 2 -sticky news
    hoc_register_data $top.gridF4.pmIrradianceRaysScale "Irradiance Rays" $hoc_data


    ## Angular Tolerance Entry and Scale
    set hoc_data { { summary "The angular tolerance used when looking for candidate photons.\nSetting this high will remove normal banding, however photons\nmay appear in unwanted areas around edges." } }

    label $top.gridF4.pmAngularToleranceLabel -text "Angular Tol"
    grid $top.gridF4.pmAngularToleranceLabel -row 4 -column 0 -sticky e
    hoc_register_data $top.gridF4.pmAngularToleranceLabel "Angular Tolerance" $hoc_data

    entry $top.gridF4.pmAngularToleranceEntry -width 8 -textvar rt_control($id,pmAngularTolerance)
    grid $top.gridF4.pmAngularToleranceEntry -row 4 -column 1 -sticky news
    hoc_register_data $top.gridF4.pmAngularToleranceEntry "Angular Tolerance" $hoc_data

    scale $top.gridF4.pmAngularToleranceScale -orient horizontal -showvalue 0 -from 0 -to 180 -command "PMLinearEvent $top.gridF4.pmAngularToleranceEntry" -variable rt_control($id,pmAngularTolerance)
    grid $top.gridF4.pmAngularToleranceScale -row 4 -column 2 -sticky news
    hoc_register_data $top.gridF4.pmAngularToleranceScale "Angular Tolerance" $hoc_data


    ## Random Seed for Emitting Photons
    set hoc_data { { summary "Sets the random seed used for every part of photon mapping.\nFor large numbers of photons this setting will have no affect\non the scene.  This setting is useful for reproducing the same\nmap for a given scene." } }

    label $top.gridF4.pmRandomSeedLabel -text "Random Seed"
    grid $top.gridF4.pmRandomSeedLabel -row 5 -column 0 -sticky e
    hoc_register_data $top.gridF4.pmRandomSeedLabel "Random Seed" $hoc_data

    entry $top.gridF4.pmRandomSeedEntry -width 8 -textvar rt_control($id,pmRandomSeedEntry)
    grid $top.gridF4.pmRandomSeedEntry -row 5 -column 1 -sticky news
    hoc_register_data $top.gridF4.pmRandomSeedEntry "Random Seed" $hoc_data

    scale $top.gridF4.pmRandomSeedScale -orient horizontal -showvalue 0 -from 0 -to 9 -command "PMLinearEvent $top.gridF4.pmRandomSeedEntry" -variable rt_control($id,pmRandomSeedScale)
    grid $top.gridF4.pmRandomSeedScale -row 5 -column 2 -sticky news
    hoc_register_data $top.gridF4.pmRandomSeedScale "Random Seed" $hoc_data


    ## Scale Indirect
    set hoc_data { { summary "This setting scales indirect illumination in the scene by the specified amount.\nThis is useful for tweaking the amount of global illumination the scene\nshould be receiving." } }

    label $top.gridF4.pmScaleIndirectLabel -text "Scale Indirect"
    grid $top.gridF4.pmScaleIndirectLabel -row 6 -column 0 -sticky e
    hoc_register_data $top.gridF4.pmScaleIndirectLabel "Scale Indirect" $hoc_data

    entry $top.gridF4.pmScaleIndirectEntry -width 8 -textvar rt_control($id,pmScaleIndirectEntry)
    grid $top.gridF4.pmScaleIndirectEntry -row 6 -column 1 -sticky news
    hoc_register_data $top.gridF4.pmScaleIndirectEntry "Scale Indirect" $hoc_data

    scale $top.gridF4.pmScaleIndirectScale -orient horizontal -showvalue 0 -from 0.1 -to 10.0 -resolution 0.01 -command "PMLinearEvent $top.gridF4.pmScaleIndirectEntry" -variable rt_control($id,pmScaleIndirectScale)
    grid $top.gridF4.pmScaleIndirectScale -row 6 -column 2 -sticky news
    hoc_register_data $top.gridF4.pmScaleIndirectScale "Scale Indirect" $hoc_data


    ## Cache File
    set hoc_data { { summary "Entering a valid file name is this box permits saving and loading of the photon mapping\ndata.  This is useful for rendering a scene with static geometry without having to\ngenerate the data each time." } }

    label $top.gridF4.pmCacheFileLabel -text "Load/Save File"
    grid $top.gridF4.pmCacheFileLabel -row 7 -column 0 -sticky e
    hoc_register_data $top.gridF4.pmCacheFileLabel "Load/Save Photon Map Data" $hoc_data

    entry $top.gridF4.pmCacheFileEntry -width 8 -textvar rt_control($id,pmCacheFileEntry)
    grid $top.gridF4.pmCacheFileEntry -row 7 -column 1 -columnspan 2 -sticky news
    hoc_register_data $top.gridF4.pmCacheFileEntry "Load/Save Photon Map Data" $hoc_data


    ## Generate Importons
    set hoc_data { { summary "Use this setting to distribute the photons in a view dependent fashion.  This is useful when\nscenes are dominated by complex geometry in which only small portions are being viewed.\nImportance Mapping is view dependent and therefore should not be used in conjunction\nwith the file saving option unless the view remains static." } }

    checkbutton $top.gridF4.pmImportanceMapping -text "Use Importance Mapping" -variable rt_control($id,pmImportanceMapping)
    grid $top.gridF4.pmImportanceMapping -row 8 -column 1 -columnspan 2 -sticky w
    hoc_register_data $top.gridF4.pmImportanceMapping "Importance Mapping" $hoc_data
#    $top.gridF4.pmImportanceMapping select

    ## Irradiance Hypersampling Cache
    set hoc_data { { summary "With this option enabled only one irradiance and caustic lookup will be performed per pixel." } }

    checkbutton $top.gridF4.pmIrradianceHypersamplingCache -text "Use Irradiance Hypersampling Cache" -variable rt_control($id,pmIrradianceHypersamplingCache)
    grid $top.gridF4.pmIrradianceHypersamplingCache -row 9 -column 1 -columnspan 2 -sticky w
    hoc_register_data $top.gridF4.pmIrradianceHypersamplingCache "Irradiance Hypersampling Cache" $hoc_data
#    $top.gridF4.pmIrradianceHypersamplingCache select

    ## Irradiance Visualization
    set hoc_data { { summary "With this option enabled only the indirect illumination and caustics will be rendered." } }

    checkbutton $top.gridF4.pmVisualizeIrradiance -text "Visualize Irradiance Cache" -variable rt_control($id,pmVisualizeIrradiance)
    grid $top.gridF4.pmVisualizeIrradiance -row 10 -column 1 -columnspan 2 -sticky w
    hoc_register_data $top.gridF4.pmVisualizeIrradiance "Visualize Irradiance" $hoc_data
#    $top.gridF4.pmVisualizeIrradiance select

    ## Edge Compensator
#    checkbutton $top.gridF4.pmEdgeCompensation -text "Edge Compensation"
#    grid $top.gridF4.pmEdgeCompensation -row 7 -column 0 -columnspan 2 -sticky w
#    $top.gridF4.pmEdgeCompensation select

    ## Use Direct Photons for Direct Illumination
#    checkbutton $top.gridF4.pmDirectIllumination -text "Photon Map for Direct Illum."
#    $top.gridF4.pmDirectIllumination select
#    grid $top.gridF4.pmDirectIllumination -row 7 -column 2 -sticky w

  } elseif {$enable == 1} {
    if {[grid size $top.gridF1] != "2 6"} {
      grid $top.gridF4 -sticky news -columnspan 2 -in $top.gridF1 -ipadx 8 -ipady 8
    }
  } else {
    if {[grid size $top.gridF1] == "2 6"} {
      grid remove $top.gridF4
    }
  }
}
@


1.47.6.1
log
@Modifications (on a 6.0 source distribution) for initial port to windows (merged with sources close to 6.0.2)
@
text
@d16 1
a16 1
    variable ::tk::Priv
d19 1
a19 1
	cad_dialog $Priv(cad_dialog) $mged_gui($id,screen) "No database." \
d391 1
a391 1
    variable ::tk::Priv
d423 1
a423 1
	    cad_dialog $Priv(cad_dialog) $mged_gui($id,screen)\
d504 1
a504 1
    variable ::tk::Priv
d514 1
a514 1
	    cad_dialog $Priv(cad_dialog) $mged_gui($id,screen)\
d530 1
a530 1
	cad_dialog $Priv(cad_dialog) $mged_gui($id,screen)\
@


1.47.6.2
log
@sync to HEAD...
@
text
@d16 1
a16 1
    global ::tk::Priv
d19 1
a19 1
	cad_dialog $::tk::Priv(cad_dialog) $mged_gui($id,screen) "No database." \
d391 1
a391 1
    global ::tk::Priv
d423 1
a423 1
	    cad_dialog $::tk::Priv(cad_dialog) $mged_gui($id,screen)\
a451 3
	if {$rt_control($id,lmodel) == 7} {
		append rt_cmd ",$rt_control($id,pmGlobalPhotonsEntry),$rt_control($id,pmCausticsPercentScale),$rt_control($id,pmIrradianceRaysScale),$rt_control($id,pmAngularTolerance),$rt_control($id,pmRandomSeedEntry),$rt_control($id,pmImportanceMapping),$rt_control($id,pmIrradianceHypersamplingCache),$rt_control($id,pmVisualizeIrradiance),$rt_control($id,pmScaleIndirectEntry),$rt_control($id,pmCacheFileEntry) -A0"
	}
a452 1
	#puts $rt_cmd
d504 1
a504 1
    global ::tk::Priv
d514 1
a514 1
	    cad_dialog $::tk::Priv(cad_dialog) $mged_gui($id,screen)\
d530 1
a530 1
	cad_dialog $::tk::Priv(cad_dialog) $mged_gui($id,screen)\
d641 1
a641 2
	    set rt_control($id,lmodelTitle) \"Full\";\
            PMMenu $id $top 0"
d656 1
a656 2
	    set rt_control($id,lmodelTitle) \"Diffuse\";\
            PMMenu $id $top 0"
d663 1
a663 2
	    set rt_control($id,lmodelTitle) \"Surface Normals\";\
            PMMenu $id $top 0"
d671 1
a671 2
	    set rt_control($id,lmodelTitle) \"Diffuse - 3 light\";\
            PMMenu $id $top 0"
d678 1
a678 2
	    set rt_control($id,lmodelTitle) \"Curvature - inverse radius\";\
            PMMenu $id $top 0"
d685 1
a685 2
	    set rt_control($id,lmodelTitle) \"Curvature - direction vector\";\
            PMMenu $id $top 0"
a689 7
    $top.lmodelMB.lmodelM add command -label "Photon Mapping"\
	    -command "set rt_control($id,lmodel) 7;\
	    set rt_control($id,lmodelTitle) \"Photon Mapping\";\
	    PMMenu $id $top 1"
    hoc_register_menu_data "Light Model" "Photon Mapping"\
	    "Lighting Model - Photon Mapping"\
	    { { summary "This is a replacement for the Full Phong lighting model." } }
a724 5

    PMMenu $id $top 2
    if {$rt_control($id,lmodelTitle) == "Photon Mapping"} {
      PMMenu $id $top 1
    }
d1272 1
a1272 1
	set rt_control($id,nproc) 16
a1279 15
        ## Photon Mapping Init Stuff
	set rt_control($id,pmGlobalPhotonsEntry) 16384
	set rt_control($id,pmGlobalPhotonsScale) 14
	set rt_control($id,pmCausticsPercentScale) 0
	set rt_control($id,pmIrradianceRaysEntry) 100
	set rt_control($id,pmIrradianceRaysScale) 10
	set rt_control($id,pmAngularTolerance) 60.0
	set rt_control($id,pmRandomSeedEntry) 0
	set rt_control($id,pmImportanceMapping) 0
	set rt_control($id,pmIrradianceHypersamplingCache) 0
	set rt_control($id,pmVisualizeIrradiance) 0
	set rt_control($id,pmScaleIndirectScale) 1.0
	set rt_control($id,pmCacheFileEntry) ""


a1356 1

d1360 1
a1360 199
}


##
##  Photon Mapping Interface Procedures (JLS_2003)
##


## Update for each inividual Entry/Scale pair
proc PMNonLinearEvent {EntryWidget ScaleValue} {
  ## Purge old characters
  $EntryWidget delete 0 [string length [$EntryWidget get]]
  ## Insert new characters
  $EntryWidget insert 0 [expr int(pow(2,$ScaleValue))]
}


## Update for each inividual Entry/Scale pair
proc PMLinearEvent {EntryWidget ScaleValue} {
  ## Purge old characters
  $EntryWidget delete 0 [string length [$EntryWidget get]]
  ## Insert new characters
  $EntryWidget insert 0 $ScaleValue
}


## Update for each inividual Entry/Scale pair
proc PMRaysEvent {EntryWidget ScaleValue} {
  ## Purge old characters
  $EntryWidget delete 0 [string length [$EntryWidget get]]
  ## Insert new characters
  $EntryWidget insert 0 [expr int(pow($ScaleValue,2))]
}


proc PMMenu {id top enable} {
  if {$enable == 2} {
    ## Setup
    frame $top.gridF4 -relief groove -bd 2

    set hoc_data { { summary "Photon Mapping is used to simulate indirect illumination and caustics.\nThis is a substitute to using ambient light to simulate indirect illumination." } }

    label $top.gridF4.pmOptionsLabel -text "Photon Mapping Controls" -foreground #666666
    hoc_register_data $top.gridF4.pmOptionsLabel "Photon Mapping Synopsis" $hoc_data
    grid $top.gridF4.pmOptionsLabel -row 0 -column 0 -columnspan 3


    ## Number of Photons in the Global Map
    set hoc_data { { summary "The total number of photons that will be used in the scene." } }

    label $top.gridF4.pmGlobalPhotonsLabel -text "Global Photons"
    grid $top.gridF4.pmGlobalPhotonsLabel -row 1 -column 0 -sticky e
    hoc_register_data $top.gridF4.pmGlobalPhotonsLabel "Global Photons" $hoc_data

    entry $top.gridF4.pmGlobalPhotonsEntry -width 8 -textvar rt_control($id,pmGlobalPhotonsEntry)
    grid $top.gridF4.pmGlobalPhotonsEntry -row 1 -column 1 -sticky news
    hoc_register_data $top.gridF4.pmGlobalPhotonsEntry "Global Photons" $hoc_data

    scale $top.gridF4.pmGlobalPhotonsScale -orient horizontal -showvalue 0 -from 10 -to 24 -command "PMNonLinearEvent $top.gridF4.pmGlobalPhotonsEntry" -variable rt_control($id,pmGlobalPhotonsScale)
    grid $top.gridF4.pmGlobalPhotonsScale -row 1 -column 2 -sticky news
    hoc_register_data $top.gridF4.pmGlobalPhotonsScale "Global Photons" $hoc_data


    ## Percent of Global Photons that Caustics may consume
    set hoc_data { { summary "The percent of global photons that should be used as caustic photons.\nIf there are no caustics in the scene then the percentage of caustic\nphotons chosen will be wasted." } }

    label $top.gridF4.pmCausticsPercentLabel -text "Caustics Percent"
    grid $top.gridF4.pmCausticsPercentLabel -row 2 -column 0 -sticky e
    hoc_register_data $top.gridF4.pmCausticsPercentLabel "Caustics Percent" $hoc_data

    entry $top.gridF4.pmCausticsPercentEntry -width 8 -textvar rt_control($id,pmCausticsPercentEntry)
    grid $top.gridF4.pmCausticsPercentEntry -row 2 -column 1 -sticky news
    hoc_register_data $top.gridF4.pmCausticsPercentEntry "Caustics Percent" $hoc_data

    scale $top.gridF4.pmCausticsPercentScale -orient horizontal -showvalue 0 -from 0 -to 100 -command "PMLinearEvent $top.gridF4.pmCausticsPercentEntry" -variable rt_control($id,pmCausticsPercentScale)
    grid $top.gridF4.pmCausticsPercentScale -row 2 -column 2 -sticky news
    hoc_register_data $top.gridF4.pmCausticsPercentScale "Caustics Percent" $hoc_data


    ## Number of Sample Rays for Irradidance Hemisphere Sample
    set hoc_data { { summary "The number of irradiance rays used to approximate irradiance at each irradiance cache point.\nIrradiance is the incoming light at a given point.  Increasing the number of rays will decrease\nthe amount of noise in the scene." } }

    label $top.gridF4.pmIrradianceRaysLabel -text "Irradiance Rays"
    grid $top.gridF4.pmIrradianceRaysLabel -row 3 -column 0 -sticky e
    hoc_register_data $top.gridF4.pmIrradianceRaysLabel "Irradiance Rays" $hoc_data

    entry $top.gridF4.pmIrradianceRaysEntry -width 8 -textvar rt_control($id,pmIrradianceRaysEntry)
    grid $top.gridF4.pmIrradianceRaysEntry -row 3 -column 1 -sticky news
    hoc_register_data $top.gridF4.pmIrradianceRaysEntry "Irradiance Rays" $hoc_data

    scale $top.gridF4.pmIrradianceRaysScale -orient horizontal -showvalue 0 -from 4 -to 32 -command "PMRaysEvent $top.gridF4.pmIrradianceRaysEntry" -variable rt_control($id,pmIrradianceRaysScale)
    grid $top.gridF4.pmIrradianceRaysScale -row 3 -column 2 -sticky news
    hoc_register_data $top.gridF4.pmIrradianceRaysScale "Irradiance Rays" $hoc_data


    ## Angular Tolerance Entry and Scale
    set hoc_data { { summary "The angular tolerance used when looking for candidate photons.\nSetting this high will remove normal banding, however photons\nmay appear in unwanted areas around edges." } }

    label $top.gridF4.pmAngularToleranceLabel -text "Angular Tol"
    grid $top.gridF4.pmAngularToleranceLabel -row 4 -column 0 -sticky e
    hoc_register_data $top.gridF4.pmAngularToleranceLabel "Angular Tolerance" $hoc_data

    entry $top.gridF4.pmAngularToleranceEntry -width 8 -textvar rt_control($id,pmAngularTolerance)
    grid $top.gridF4.pmAngularToleranceEntry -row 4 -column 1 -sticky news
    hoc_register_data $top.gridF4.pmAngularToleranceEntry "Angular Tolerance" $hoc_data

    scale $top.gridF4.pmAngularToleranceScale -orient horizontal -showvalue 0 -from 0 -to 180 -command "PMLinearEvent $top.gridF4.pmAngularToleranceEntry" -variable rt_control($id,pmAngularTolerance)
    grid $top.gridF4.pmAngularToleranceScale -row 4 -column 2 -sticky news
    hoc_register_data $top.gridF4.pmAngularToleranceScale "Angular Tolerance" $hoc_data


    ## Random Seed for Emitting Photons
    set hoc_data { { summary "Sets the random seed used for every part of photon mapping.\nFor large numbers of photons this setting will have no affect\non the scene.  This setting is useful for reproducing the same\nmap for a given scene." } }

    label $top.gridF4.pmRandomSeedLabel -text "Random Seed"
    grid $top.gridF4.pmRandomSeedLabel -row 5 -column 0 -sticky e
    hoc_register_data $top.gridF4.pmRandomSeedLabel "Random Seed" $hoc_data

    entry $top.gridF4.pmRandomSeedEntry -width 8 -textvar rt_control($id,pmRandomSeedEntry)
    grid $top.gridF4.pmRandomSeedEntry -row 5 -column 1 -sticky news
    hoc_register_data $top.gridF4.pmRandomSeedEntry "Random Seed" $hoc_data

    scale $top.gridF4.pmRandomSeedScale -orient horizontal -showvalue 0 -from 0 -to 9 -command "PMLinearEvent $top.gridF4.pmRandomSeedEntry" -variable rt_control($id,pmRandomSeedScale)
    grid $top.gridF4.pmRandomSeedScale -row 5 -column 2 -sticky news
    hoc_register_data $top.gridF4.pmRandomSeedScale "Random Seed" $hoc_data


    ## Scale Indirect
    set hoc_data { { summary "This setting scales indirect illumination in the scene by the specified amount.\nThis is useful for tweaking the amount of global illumination the scene\nshould be receiving." } }

    label $top.gridF4.pmScaleIndirectLabel -text "Scale Indirect"
    grid $top.gridF4.pmScaleIndirectLabel -row 6 -column 0 -sticky e
    hoc_register_data $top.gridF4.pmScaleIndirectLabel "Scale Indirect" $hoc_data

    entry $top.gridF4.pmScaleIndirectEntry -width 8 -textvar rt_control($id,pmScaleIndirectEntry)
    grid $top.gridF4.pmScaleIndirectEntry -row 6 -column 1 -sticky news
    hoc_register_data $top.gridF4.pmScaleIndirectEntry "Scale Indirect" $hoc_data

    scale $top.gridF4.pmScaleIndirectScale -orient horizontal -showvalue 0 -from 0.1 -to 10.0 -resolution 0.01 -command "PMLinearEvent $top.gridF4.pmScaleIndirectEntry" -variable rt_control($id,pmScaleIndirectScale)
    grid $top.gridF4.pmScaleIndirectScale -row 6 -column 2 -sticky news
    hoc_register_data $top.gridF4.pmScaleIndirectScale "Scale Indirect" $hoc_data


    ## Cache File
    set hoc_data { { summary "Entering a valid file name is this box permits saving and loading of the photon mapping\ndata.  This is useful for rendering a scene with static geometry without having to\ngenerate the data each time." } }

    label $top.gridF4.pmCacheFileLabel -text "Load/Save File"
    grid $top.gridF4.pmCacheFileLabel -row 7 -column 0 -sticky e
    hoc_register_data $top.gridF4.pmCacheFileLabel "Load/Save Photon Map Data" $hoc_data

    entry $top.gridF4.pmCacheFileEntry -width 8 -textvar rt_control($id,pmCacheFileEntry)
    grid $top.gridF4.pmCacheFileEntry -row 7 -column 1 -columnspan 2 -sticky news
    hoc_register_data $top.gridF4.pmCacheFileEntry "Load/Save Photon Map Data" $hoc_data


    ## Generate Importons
    set hoc_data { { summary "Use this setting to distribute the photons in a view dependent fashion.  This is useful when\nscenes are dominated by complex geometry in which only small portions are being viewed.\nImportance Mapping is view dependent and therefore should not be used in conjunction\nwith the file saving option unless the view remains static." } }

    checkbutton $top.gridF4.pmImportanceMapping -text "Use Importance Mapping" -variable rt_control($id,pmImportanceMapping)
    grid $top.gridF4.pmImportanceMapping -row 8 -column 1 -columnspan 2 -sticky w
    hoc_register_data $top.gridF4.pmImportanceMapping "Importance Mapping" $hoc_data
#    $top.gridF4.pmImportanceMapping select

    ## Irradiance Hypersampling Cache
    set hoc_data { { summary "With this option enabled only one irradiance and caustic lookup will be performed per pixel." } }

    checkbutton $top.gridF4.pmIrradianceHypersamplingCache -text "Use Irradiance Hypersampling Cache" -variable rt_control($id,pmIrradianceHypersamplingCache)
    grid $top.gridF4.pmIrradianceHypersamplingCache -row 9 -column 1 -columnspan 2 -sticky w
    hoc_register_data $top.gridF4.pmIrradianceHypersamplingCache "Irradiance Hypersampling Cache" $hoc_data
#    $top.gridF4.pmIrradianceHypersamplingCache select

    ## Irradiance Visualization
    set hoc_data { { summary "With this option enabled only the indirect illumination and caustics will be rendered." } }

    checkbutton $top.gridF4.pmVisualizeIrradiance -text "Visualize Irradiance Cache" -variable rt_control($id,pmVisualizeIrradiance)
    grid $top.gridF4.pmVisualizeIrradiance -row 10 -column 1 -columnspan 2 -sticky w
    hoc_register_data $top.gridF4.pmVisualizeIrradiance "Visualize Irradiance" $hoc_data
#    $top.gridF4.pmVisualizeIrradiance select

    ## Edge Compensator
#    checkbutton $top.gridF4.pmEdgeCompensation -text "Edge Compensation"
#    grid $top.gridF4.pmEdgeCompensation -row 7 -column 0 -columnspan 2 -sticky w
#    $top.gridF4.pmEdgeCompensation select

    ## Use Direct Photons for Direct Illumination
#    checkbutton $top.gridF4.pmDirectIllumination -text "Photon Map for Direct Illum."
#    $top.gridF4.pmDirectIllumination select
#    grid $top.gridF4.pmDirectIllumination -row 7 -column 2 -sticky w

  } elseif {$enable == 1} {
    if {[grid size $top.gridF1] != "2 6"} {
      grid $top.gridF4 -sticky news -columnspan 2 -in $top.gridF1 -ipadx 8 -ipady 8
    }
  } else {
    if {[grid size $top.gridF1] == "2 6"} {
      grid remove $top.gridF4
    }
  }
}
@


1.46
log
@*- add parameter to color_entry_build to indicate
   whether or not to use background colors for rt
@
text
@d433 1
a433 1
    if {$rt_control($id,color) != ""} {
@


1.45
log
@*- removed the OK button
*- moved a few other buttons around
@
text
@d309 1
a309 1
	    12 $rt_control($id,color)
@


1.44
log
@*- changed rt_abort to rtabort
@
text
@d143 1
a143 1
    label $top.srcL -text "Source" -anchor e
d197 1
a197 1
    label $top.destL -text "Destination" -anchor e
d256 1
a256 1
    label $top.sizeL -text "Size" -anchor e
d298 1
a298 1
    label $top.colorL -text "Background Color" -anchor e
d312 2
a313 1
	    -command "do_Advanced_Settings $id"
a315 7
    button $top.okB -relief raised -text "OK"\
	    -command "rt_ok $id $top"
    hoc_register_data $top.okB "Raytrace"\
	    { { summary "Begin raytracing the view of the source pane.
The results of the raytrace will go to the place
specified by the destination. Afterwards, dismiss
the raytrace control panel." } }
d317 2
a318 1
	    -command "do_Raytrace $id"
d324 2
a325 1
	    -command "do_fbclear $id"
d330 2
a331 1
	    -command "rtabort"
d335 2
a336 1
	    -command "rt_dismiss $id"
d352 6
a357 6
    grid $top.srcL $top.srcF -pady 1 -sticky nsew -in $top.gridF1
    grid $top.destL $top.destF -pady 1 -sticky nsew -in $top.gridF1
    grid $top.sizeL $top.sizeF -pady 1 -sticky nsew -in $top.gridF1
    grid $top.colorL $top.colorF -pady 1 -sticky nsew -in $top.gridF1
    grid $top.advancedB - -pady 1 -sticky ns -in $top.gridF1
    grid columnconfigure $top.gridF1 1 -weight 1
d367 1
a367 3
    grid $top.okB $top.raytraceB $top.abortB x $top.clearB x $top.dismissB -sticky "nsew" -in $top.gridF3
    grid columnconfigure $top.gridF3 3 -weight 1
    grid columnconfigure $top.gridF3 5 -weight 1
@


1.43
log
@*- mods requested by Eric regarding consistency
   when using capitalization in the GUI
@
text
@d334 1
a334 1
	    -command "rt_abort"
@


1.42
log
@*- minor typo
@
text
@d102 1
a102 1
	    -label "one" -underline 0\
d109 1
a109 1
	    -label "several" -underline 0\
d116 1
a116 1
	    -label "all" -underline 0\
d123 1
a123 1
    $top.menubar.obj add command -label "edit list"\
d128 1
a128 1
    $top.menubar.obj add command -label "clear list"\
d315 1
a315 1
    button $top.okB -relief raised -text "Ok"\
@


1.41
log
@Use tkPriv(cad_dialog) for dialog name.
@
text
@d696 1
a696 1
    label $top.otherL -text "Other options" -anchor e
@


1.40
log
@The listen checkbuttons no longer need to be deactivated.
@
text
@d16 1
d19 1
a19 1
	cad_dialog .$id.uncool $mged_gui($id,screen) "No database." \
d395 1
d427 1
a427 1
	    cad_dialog .$id.rtDialog $mged_gui($id,screen)\
d508 1
d518 1
a518 1
	    cad_dialog .$id.rtDialog $mged_gui($id,screen)\
d534 1
a534 1
	cad_dialog .$id.rtDialog $mged_gui($id,screen)\
@


1.39
log
@Added and "Abort" button to the raytrace control panel.
@
text
@a1106 2
	.$id.menubar.settings.fb entryconfigure 7 -state normal
	.$id.menubar.modes entryconfigure 4 -state normal
d1164 1
a1164 10

	if {$mged_gui($id,fb)} {
	    set mged_gui($id,listen) 1
	    .$id.menubar.settings.fb entryconfigure 8 -state normal
	    .$id.menubar.modes entryconfigure 4 -state normal
	} else {
	    .$id.menubar.settings.fb entryconfigure 8 -state disabled
	    .$id.menubar.modes entryconfigure 4 -state disabled
	    set mged_gui($id,listen) 0
	}
@


1.38
log
@More off by one bugs.
@
text
@d332 4
d368 3
a370 3
    grid $top.okB $top.raytraceB x $top.clearB x $top.dismissB -sticky "nsew" -in $top.gridF3
    grid columnconfigure $top.gridF3 2 -weight 1
    grid columnconfigure $top.gridF3 4 -weight 1
@


1.37
log
@Set listen if not already set.
@
text
@d1165 1
a1165 1
	    .$id.menubar.settings.fb entryconfigure 7 -state normal
d1168 1
a1168 1
	    .$id.menubar.settings.fb entryconfigure 7 -state disabled
@


1.36
log
@Handle configure events for main window.
@
text
@d1087 4
a1090 1
    set listen 1
d1156 1
a1156 1
    if {$fb} {
@


1.36.2.1
log
@Set listen if not already set.
@
text
@d1087 1
a1087 4

    if {!$listen} {
	set listen 1
    }
d1153 1
a1153 1
    if {$fb && !$listen} {
@


1.36.2.2
log
@More off by one bugs.
@
text
@d1165 1
a1165 1
	    .$id.menubar.settings.fb entryconfigure 8 -state normal
d1168 1
a1168 1
	    .$id.menubar.settings.fb entryconfigure 8 -state disabled
@


1.36.2.3
log
@Add "Abort" button to raytrace control panel.
@
text
@a331 4
    button $top.abortB -relief raised -text "Abort" \
	    -command "rt_abort"
    hoc_register_data $top.abortB "Abort Raytrace"\
	    { { summary "Abort all raytraces initiated by MGED." } }
d364 3
a366 3
    grid $top.okB $top.raytraceB $top.abortB x $top.clearB x $top.dismissB -sticky "nsew" -in $top.gridF3
    grid columnconfigure $top.gridF3 3 -weight 1
    grid columnconfigure $top.gridF3 5 -weight 1
@


1.36.2.4
log
@The listen checkbuttons no longer need to be deactivated.
@
text
@d1107 2
d1166 10
a1175 1
	set mged_gui($id,listen) $listen
@


1.36.2.5
log
@Use tkPriv(cad_dialog) for dialog name.
@
text
@a15 1
    global tkPriv
d18 1
a18 1
	cad_dialog $tkPriv(cad_dialog) $mged_gui($id,screen) "No database." \
a393 1
    global tkPriv
d425 1
a425 1
	    cad_dialog $tkPriv(cad_dialog) $mged_gui($id,screen)\
a505 1
    global tkPriv
d515 1
a515 1
	    cad_dialog $tkPriv(cad_dialog) $mged_gui($id,screen)\
d531 1
a531 1
	cad_dialog $tkPriv(cad_dialog) $mged_gui($id,screen)\
@


1.36.2.6
log
@*- minor typo
@
text
@d696 1
a696 1
    label $top.otherL -text "Other Options" -anchor e
@


1.35
log
@Update cooked_dest when raw_dest == "".
@
text
@d1361 5
@


1.34
log
@*- mods convert non-rgb entries to rgb before feeding
   to MGED
@
text
@d414 1
a414 1
		set aspect [expr $width / $height]
d1052 1
@


1.33
log
@*- check for no opened database
*- call color_entry_update with new signature
@
text
@d432 2
a433 11
	set result [regexp "^(\[0-9\]+)\[ \]+(\[0-9\]+)\[ \]+(\[0-9\]+)$" \
		$rt_control($id,color) cmatch red green blue]
	if {$result} {
	    append rt_cmd " -C$red/$green/$blue"
	} else {
	    cad_dialog .$id.rtDialog $mged_gui($id,screen)\
		    "Improper color specification!"\
		    "Improper color specification: $rt_control($id,color)"\
		    "" 0 OK
	    return
	}
@


1.32
log
@*- add support for interlay
@
text
@d17 6
d373 1
a373 1
    color_entry_update $top color $rt_control($id,color)
d1103 1
a1103 1
    color_entry_update $rt_control($id,top) color $rt_control($id,color)
@


1.31
log
@*- add help on context for the "fixed" checkbuttons
@
text
@d71 1
a71 1
    $top.menubar.fb add radiobutton -value 1 -variable rt_control($id,fb_overlay)\
d75 10
a84 2
	    { { summary "Draw the framebuffer on top of the geometry.
Note - this pertains only to MGED's framebuffers." } }
d89 3
a91 2
	    { { summary "Draw the framebuffer under the geometry.
Note - this pertains only to MGED's framebuffers." } }
@


1.30
log
@*- additions/modificaitons to help on context
@
text
@d164 6
a170 1
    
d233 6
d683 1
a683 1
    label $top.otherL -text "Other" -anchor e
d703 1
d1079 1
a1079 1
    set fb_all 1
@


1.29
log
@*- add object list editor
*- add rt_opendb_callback and rt_solid_list_callback
*- add fixed-source/destination checkbuttons
@
text
@d89 3
a91 1
	    { { summary "Raytrace only the selected object." } }
d96 3
a98 2
	    { { summary "Add the selected object to the list
of objects to be raytraced." } }
d103 3
a105 1
	    { { summary "Raytrace all displayed objects." } }
d115 2
a116 1
	    { { summary "Clear the list of objects to be raytraced." } }
d118 1
a118 4
    label $top.srcL -text "Source" -anchor e
    entry $top.srcE -relief flat -width 12 -textvar rt_control($id,raw_src)
    hoc_register_data $top.srcE "Source"\
	    { { summary "
d127 4
d165 2
a166 4
    label $top.destL -text "Destination" -anchor e
    entry $top.destE -relief flat -width 12 -textvar rt_control($id,raw_dest)
    hoc_register_data $top.destE "Destination"\
	    { { summary "
d176 4
d231 1
a231 1
	    { { summary "Indicates the size of the framebuffer.
d290 5
a294 5
    hoc_register_data $top.raytraceB "Raytrace"\
	    { { summary "Begin raytracing the view of
the source pane. The results of the raytrace
will go the place specified by the destination.
Afterwards dismiss the raytrace control panel." } }
d298 3
a300 3
	    { { summary "Begin raytracing the view of
the source pane. The results of the raytrace
will go the place specified by the destination." } }
d305 1
a305 1
destination." } }
d789 7
d804 3
d809 3
@


1.28
log
@*- add object list editor
@
text
@d49 2
a50 1
    $top.menubar.fb add checkbutton -offvalue 0 -onvalue 1 -variable rt_control($id,fb)\
d108 1
a108 1
	    -command "set rt_control($id,olist) {}"
d124 1
a124 1
    bind $top.srcE <KeyRelease> "rt_cook_src $id \$rt_control($id,raw_src)"
d131 1
a131 1
	    -command "rt_cook_src $id \$mged_gui($id,active_dm)"
d138 1
a138 1
	    -command "rt_cook_src $id $mged_gui($id,top).ul"
d142 1
a142 1
	    -command "rt_cook_src $id $mged_gui($id,top).ur"
d146 1
a146 1
	    -command "rt_cook_src $id $mged_gui($id,top).ll"
d150 1
a150 1
	    -command "rt_cook_src $id $mged_gui($id,top).lr"
d153 4
d171 1
a171 1
    bind $top.destE <KeyRelease> "rt_cook_dest $id \$rt_control($id,raw_dest)"
d178 1
a178 1
	    -command "rt_cook_dest $id \$mged_gui($id,active_dm)"
d185 1
a185 1
	    -command "rt_cook_dest $id $mged_gui($id,top).ul"
d189 1
a189 1
	    -command "rt_cook_dest $id $mged_gui($id,top).ur"
d193 1
a193 1
	    -command "rt_cook_dest $id $mged_gui($id,top).ll"
d197 1
a197 1
	    -command "rt_cook_dest $id $mged_gui($id,top).lr"
d201 8
d211 1
a211 1
		-command "rt_cook_dest $id $env(FB_FILE)"
d215 4
a218 8

    set dbname [rt_db_to_pix]
    if {$dbname != ""} {
	$top.destMB.menu add command -label $dbname\
		-command "rt_cook_dest $id $dbname"
	hoc_register_menu_data "Destination" "$dbname" "Destination - $dbname"\
		{ { summary "Set the destination to the specified file." } }
    }
d339 2
a340 1

a366 1
if { 1 } {
a369 28
} else {
    if {$rt_control($id,fb_or_file) == "filename"} {
	if {$rt_control($id,file) != ""} {
	    if {[file exists $rt_control($id,file)]} {
		set result [cad_dialog .$id.rtDialog $mged_gui($id,screen)\
			"Overwrite $rt_control($id,file)?"\
			"Overwrite $rt_control($id,file)?"\
			"" 0 OK CANCEL]

		if {$result} {
		    return
		} else {
		    file rename -force $rt_control($id,file) $rt_control($id,file).bak
		}
	    }

	    append rt_cmd " -o $rt_control($id,file)"
	} else {
	    cad_dialog .$id.rtDialog $mged_gui($id,screen)\
		    "No file name specified!"\
		    "No file name specified!"\
		    "" 0 OK
	    return
	}
    } else {
	append rt_cmd " -F $port"
    }
}
d459 1
a459 1
	one 
d462 3
d522 6
a527 3
    set top $rt_control($id,topAS)
    if [winfo exists $top] {
	catch { destroy $top }
d530 2
a531 3
    set top $rt_control($id,top)
    if [winfo exists $top] {
	catch { destroy $top }
d533 4
d697 1
a697 1
## - update_Raytrace
d701 1
a701 1
proc update_Raytrace { id } {
a703 1
    global listen
d709 4
d734 30
d786 2
a787 6
    button $top.okB -relief raised -text "Ok"\
	    -command "rt_olist_ok $id"
    button $top.applyB -relief raised -text "Apply"\
	    -command "rt_olist_apply $id"
    button $top.resetB -relief raised -text "Reset"\
	    -command "rt_olist_reset $id"
d790 1
a790 1
    grid $top.okB $top.applyB x $top.resetB x $top.dismissB\
d792 1
d796 2
a797 2
    grid $top.olistF -sticky nsew
    grid $top.buttonF -sticky nsew
d802 1
d807 37
a843 3
proc rt_olist_ok { id } {
    rt_olist_apply $id
    rt_olist_dismiss $id
d846 4
d853 4
d863 11
d877 1
a877 4
    rt_olist_clear $id
    foreach obj $rt_control($id,olist) {
	rt_olist_add $id $obj
    }
d880 5
a884 1
proc rt_olist_dismiss { id } {
d887 24
a910 1
    destroy $rt_control($id,topOLE)
d916 6
a921 1
    set top $rt_control($id,topOLE)
d923 2
a924 4
    if [winfo exists $top] {
	$top.olistT insert end $obj\n
    } else {
	lappend rt_control($id,olist) $obj
d926 13
d944 5
a948 1
    $rt_control($id,topOLE).olistT delete 0.0 end
d956 2
a957 1
    if ![winfo exists $rt_control($id,half_baked_dest)] {
a960 1
    winset $rt_control($id,half_baked_dest)
d965 1
d968 2
a969 1
	    if {$rt_control($id,half_baked_dest) == $mged_gui($id,active_dm)} {
d972 5
d979 1
d982 2
a983 1
	    if {$rt_control($id,half_baked_dest) == $mged_gui($id,active_dm)} {
d986 5
d993 2
a1009 1
    global mouse_behavior
d1015 4
a1055 9
    if {$mouse_behavior == "o"} {
	if {![info exists rt_control($id,omode)] ||\
		$rt_control($id,omode) == "all"} {
	    set rt_control($id,omode) one
	}
    } else {
	set rt_control($id,omode) all
    }

d1072 1
d1078 4
d1084 14
d1104 1
d1112 3
d1247 3
d1255 64
@


1.27
log
@*- add "Other" entry widget to ray trace control panel
	for entering rt options not addressed by the GUI
@
text
@d102 1
a102 1
	    -command "rt_edit_olist $id"
d741 1
a741 1
proc rt_edit_olist { id } {
d745 1
a745 1
    set top $rt_control($id,topEOL)
d747 84
a830 4
#    toplevel $top
#    text $top.olistT -relief sunken -bd 2 -width 40 -height 10\
#	    -yscrollcommand "$top.olistS set" -set grid true
    return
d1083 1
a1083 1
	set rt_control($id,topEOL) .$id.rtEOL
@


1.26
log
@-* typo
@
text
@d199 1
a199 1
	hoc_register_menu_data "Destination" "$env(FB_FILE)" "Destination - $env(FBFILE)"\
d445 4
d672 6
d687 1
d1011 1
@


1.25
log
@*- add/modify help on context
@
text
@d829 1
a829 1
	if {![info exists rt_mode($id,omode)] ||\
@


1.24
log
@*- mods to allow use of the new mouse behaviors
   with an arbitrary display manager window
*- add more help on context
@
text
@d52 1
a52 1
    hoc_register_menu_data "Framebuffer" "Active" "Framebuffer Active"\
d59 1
a59 1
    hoc_register_menu_data "Framebuffer" "All" "Framebuffer - All"\
d65 4
a68 3
    hoc_register_menu_data "Framebuffer" "Rectangle Area" "Framebuffer - Rectangle Area"\
	    { { summary "Use only the rectangular area for the framebuffer.
Note - this pertains only to MGED's framebuffers." } }
d73 1
a73 1
    hoc_register_menu_data "Framebuffer" "Overlay" "Framebuffer - Overlay"\
d79 1
a79 1
    hoc_register_menu_data "Framebuffer" "Underlay" "Framebuffer - Underlay"\
d87 2
d92 3
d98 2
d103 3
d108 2
d113 10
d126 2
d131 4
d139 1
a139 1
	    { { summary "Set the source to \"Upper Left\" pane." } }
d143 1
a143 1
	    { { summary "Set the source to \"Upper Right\" pane." } }
d147 1
a147 1
	    { { summary "Set the source to \"Lower Left\" pane." } }
d151 1
a151 1
	    { { summary "Set the source to \"Lower Right\" pane." } }
d155 11
d169 2
d174 4
d217 1
a217 1
	    { { summary "Enter the framebuffer size." } }
d221 1
a221 1
	    { { summary "Pops up a menu of popular framebuffer sizes." } }
d226 1
a226 1
	    { { summary "Set the framebuffer size to be the
d231 1
a231 1
	    { { summary "Set the framebuffer size to 128x128." } }
d235 1
a235 1
	    { { summary "Set the framebuffer size to 256x256." } }
d239 1
a239 1
	    { { summary "Set the framebuffer size to 512x512." } }
d243 1
a243 1
	    { { summary "Set the framebuffer size to 640x480." } }
d247 1
a247 1
	    { { summary "Set the framebuffer size to 720x486." } }
d251 1
a251 1
	    { { summary "Set the framebuffer size to 1024x1024." } }
d269 1
a269 1
	    { { summary "Pops up another GUI for advanced settings." } }
d272 5
d280 3
a282 5
	    { { summary "Begin raytracing the current view of
the active pane. The results of the raytrace
will go either to the framebuffer that lives
in the active pane or to the file specified
in the filename entry." } }
d286 2
a287 2
	    { { summary "If the framebuffer of the active pane
is enabled, it will be cleared." } }
d582 1
a582 1
	    { { summary "Pops up a menu of jitter values." } }
d614 1
a614 1
	    { { summary "Pops up a menu of light models." } }
d735 4
@


1.23
log
@*- redesigned the Raytrace Control Panel
@
text
@d24 8
d33 1
a33 1
    rt_init_vars $id $top $top\AS
a39 1
    frame $top.gridF4
d53 2
a54 1
	    { { summary "This activates the framebuffer." } }
d60 2
a61 1
	    { { summary "Use the entire pane as a framebuffer." } }
d66 2
a67 1
	    { { summary "Use only the rectangular area for the framebuffer." } }
d73 2
a74 1
	    { { summary "Draw the framebuffer on top of the geometry." } }
d79 2
a80 1
	    { { summary "Draw the framebuffer under the geometry." } }
d110 1
a110 1
	    { { summary "Set the source to \"Upper Left\"." } }
d114 1
a114 1
	    { { summary "Set the source to \"Upper Right\"." } }
d118 1
a118 1
	    { { summary "Set the source to \"Lower Left\"." } }
d122 1
a122 1
	    { { summary "Set the source to \"Lower Right\"." } }
d135 2
d139 2
d143 2
d147 2
d153 2
d161 2
d685 1
d753 5
a762 1
    winset $rt_control($id,half_baked_dest)
d772 2
d776 4
a779 1
	set rt_control($id,omode) one
d924 2
a925 1
# Called by init_Raytrace to initialize rt_control
d927 1
a927 1
proc rt_init_vars { id top topAS } {
d930 4
d937 4
a940 2
	set rt_control($id,top) $top
	set rt_control($id,topAS) $topAS
d954 2
a955 6
    set rt_control($id,olist) {}
    set rt_control($id,color) [rset cs bg]
    rt_cook_src $id $mged_gui($id,active_dm)
    rt_cook_dest $id $mged_gui($id,active_dm)
    set size [dm size]
    set rt_control($id,size) "[lindex $size 0]x[lindex $size 1]"
@


1.22
log
@*- rename file before overwrite
@
text
@d15 1
d17 1
a17 1
    set top .$id.do_rt
d25 1
a26 31
    if ![info exists rt_control($id,padx)] {

	# set widget padding
	set rt_control($id,padx) 4
	set rt_control($id,pady) 2

	set rt_control($id,fb_or_file) framebuffer

	regsub \.g$ [_mged_opendb] .pix default_file
	set rt_control($id,file) $default_file

	set rt_control($id,size) 512
	set rt_control($id,color) [rset cs bg]
	set rt_control($id,nproc) 1
	set rt_control($id,hsample) 0
	set rt_control($id,jitter) 0
	set rt_control($id,jitterTitle) "None"
	set rt_control($id,lmodel) 0
	set rt_control($id,lmodelTitle) "Full"
    }

    if {$fb} {
	set rt_control($id,fb_or_file) "framebuffer"
	set fb_state normal
	set file_state disabled
    } else {
	set rt_control($id,fb_or_file) "filename"
	set fb_state disabled
	set file_state normal
    }

d29 1
d31 1
a31 1
    frame $top.gridF3 -relief groove -bd 2
d33 2
a34 1
    frame $top.filenameF -relief sunken -bd 2
a37 1
    $top.menubar add cascade -label "Active Pane" -underline 0 -menu $top.menubar.active
d39 1
a39 22

    menu $top.menubar.active -title "Active Pane" -tearoff 0
    $top.menubar.active add radiobutton -value ul -variable mged_gui($id,dm_loc)\
	    -label "Upper Left" -underline 6\
	    -command "set_active_dm $id"
    hoc_register_menu_data "Active Pane" "Upper Left" "Active Pane - Upper Left"\
	    { { summary "Set the active pane to \"Upper Left\"." } }
    $top.menubar.active add radiobutton -value ur -variable mged_gui($id,dm_loc)\
	    -label "Upper Right" -underline 6\
	    -command "set_active_dm $id"
    hoc_register_menu_data "Active Pane" "Upper Right" "Active Pane - Upper Right"\
	    { { summary "Set the active pane to \"Upper Right\"." } }
    $top.menubar.active add radiobutton -value ll -variable mged_gui($id,dm_loc)\
	    -label "Lower Left" -underline 2\
	    -command "set_active_dm $id"
    hoc_register_menu_data "Active Pane" "Lower Left" "Active Pane - Lower Left"\
	    { { summary "Set the active pane to \"Lower Left\"." } }
    $top.menubar.active add radiobutton -value lr -variable mged_gui($id,dm_loc)\
	    -label "Lower Right" -underline 3\
	    -command "set_active_dm $id"
    hoc_register_menu_data "Active Pane" "Lower Right" "Active Pane - Lower Right"\
	    { { summary "Set the active pane to \"Lower Right\"." } }
d42 7
a48 1
    $top.menubar.fb add radiobutton -value 1 -variable mged_gui($id,fb_all)\
d50 1
a50 1
	    -command "mged_apply $id \"set fb_all \$mged_gui($id,fb_all)\""
d53 1
a53 1
    $top.menubar.fb add radiobutton -value 0 -variable mged_gui($id,fb_all)\
d55 1
a55 1
	    -command "mged_apply $id \"set fb_all \$mged_gui($id,fb_all)\""
d59 1
a59 1
    $top.menubar.fb add radiobutton -value 1 -variable mged_gui($id,fb_overlay)\
d61 1
a61 1
	    -command "mged_apply $id \"set fb_overlay \$mged_gui($id,fb_overlay)\""
d64 1
a64 1
    $top.menubar.fb add radiobutton -value 0 -variable mged_gui($id,fb_overlay)\
d66 1
a66 1
	    -command "mged_apply $id \"set fb_overlay \$mged_gui($id,fb_overlay)\""
d70 70
a139 24
    radiobutton $top.framebufferRB -text "Frame Buffer" -anchor w\
	    -value framebuffer -variable rt_control($id,fb_or_file)\
	    -command "rt_set_fb_state $id"
    hoc_register_data $top.framebufferRB "Frame Buffer"\
	    { { summary "This activates the framebuffer and deactivates
the file (i.e. the results of raytracing
will end up in the framebuffer). Note - one
can use fb-pix to capture the contents of the
framebuffer to a file." } }
    label $top.framebufferL -textvariable rt_control($id,fb)

    radiobutton $top.filenameRB -text "File Name" -anchor w\
	    -value filename -variable rt_control($id,fb_or_file)\
	    -command "rt_set_file_state $id"
    hoc_register_data $top.filenameRB "File Name"\
	    { { summary "This activates the file and deactivates
the framebuffer (i.e. the results of raytracing
will end up in the file)." } }
    entry $top.filenameE -relief flat -width 12 -textvar rt_control($id,file)\
	    -state $file_state
    hoc_register_data $top.filenameE "File Name"\
	    { { summary "Enter a file name. If the \"File Name\"
radiobutton is selected, the results of
raytracing will go to the specified file." } }
d141 1
a141 1
    label $top.sizeL -text "Size" -anchor w
d183 1
a183 1
    label $top.colorL -text "Background Color" -anchor w
d211 1
a211 1
	    -command "do_fbclear $id" -state $fb_state
d220 7
a226 9
    grid $top.framebufferL $top.framebufferRB -sticky "ew"\
	    -in $top.gridF2 -padx $rt_control($id,padx) -pady $rt_control($id,pady)
    grid $top.filenameE -sticky "nsew" -in $top.filenameF
    grid columnconfigure $top.filenameF 0 -weight 1
    grid rowconfigure $top.filenameF 0 -weight 1
    grid $top.filenameF $top.filenameRB -sticky "nsew"\
	    -in $top.gridF2 -padx $rt_control($id,padx) -pady $rt_control($id,pady)
    grid columnconfigure $top.gridF2 0 -weight 1
    grid rowconfigure $top.gridF2 1 -weight 1
d228 1
a228 1
    grid $top.sizeE $top.sizeMB -sticky "nsew" -in $top.sizeF
d231 22
a252 19
    grid $top.sizeF $top.sizeL -sticky "nsew" -in $top.gridF3 \
	    -padx $rt_control($id,padx) -pady $rt_control($id,pady)
    grid $top.colorF $top.colorL -sticky "nsew" -in $top.gridF3 \
	    -padx $rt_control($id,padx) -pady $rt_control($id,pady)
    grid $top.advancedB - -in $top.gridF3 -padx $rt_control($id,padx) -pady $rt_control($id,pady)
    grid columnconfigure $top.gridF3 0 -weight 1
    grid rowconfigure $top.gridF3 0 -weight 1
    grid rowconfigure $top.gridF3 1 -weight 1

    grid $top.okB $top.raytraceB x $top.clearB x $top.dismissB -sticky "nsew" -in $top.gridF4
    grid columnconfigure $top.gridF4 2 -weight 1 -minsize 8
    grid columnconfigure $top.gridF4 4 -weight 1 -minsize 8

    grid $top.gridF2 -sticky "nsew" \
	    -padx $rt_control($id,padx) -pady $rt_control($id,pady)
    grid $top.gridF3 -sticky "nsew" \
	    -padx $rt_control($id,padx) -pady $rt_control($id,pady)
    grid $top.gridF4 -sticky "nsew" \
	    -padx $rt_control($id,padx) -pady $rt_control($id,pady)
a254 1
    grid rowconfigure $top 1 -weight 2
a256 1
    update_Raytrace $id
d273 10
a282 2
    winset $mged_gui($id,active_dm)
    set rt_cmd "_mged_rt"
d284 5
a313 3
#	if {$rt_control($id,fb) != ""} {
#	    append rt_cmd " -F $rt_control($id,fb)"
#	}
d315 1
d400 10
a409 1
    catch {eval $rt_cmd}
a413 1
    global port
d416 3
a418 1
    winset $mged_gui($id,active_dm)
d436 2
a437 5
    if {$rt_control($id,fb) != ""} {
	set result [catch { exec fbclear -F $port $red $green $blue & } rt_error]
    } else {
	set result [catch { exec fbclear $red $green $blue & } rt_error]
    }
a444 29
proc rt_set_fb_state { id } {
    global mged_gui

    winset $mged_gui($id,active_dm)
    set mged_gui($id,fb) 1
    set_fb $id

    set top .$id.do_rt
    $top.clearB configure -state normal
    $top.menubar entryconfigure 1 -state normal
    $top.filenameE configure -state disabled

    rt_set_fb_size $id
}

proc rt_set_file_state { id } {
    global mged_gui

    winset $mged_gui($id,active_dm)
    set mged_gui($id,fb) 0
    set_fb $id

    set top .$id.do_rt
    $top.clearB configure -state disabled
    $top.menubar entryconfigure 1 -state disabled
    $top.filenameE configure -state normal
    focus $top.filenameE
}

d449 5
a453 1
    winset $mged_gui($id,active_dm)
d459 3
a461 1
    set top .$id.do_rtAS
d466 1
a466 1
    set top .$id.do_rt
d476 1
a476 1
    set top .$id.do_rtAS
d484 2
a485 11
    frame $top.gridF1 -relief groove -bd 2
    frame $top.gridF2

    frame $top.nprocF
    frame $top.nprocFF -relief sunken -bd 2
    frame $top.hsampleF
    frame $top.hsampleFF -relief sunken -bd 2
    frame $top.jitterF
    frame $top.jitterFF -relief sunken -bd 2
    frame $top.lmodelF
    frame $top.lmodelFF -relief sunken -bd 2
d489 1
a489 1
    label $top.nprocL -text "# of Processors" -anchor w
d491 1
a491 1
    entry $top.nprocE -relief flat -width 4 -textvar rt_control($id,nproc)
d497 1
a497 1
    label $top.hsampleL -text "Hypersample" -anchor w
d499 1
a499 1
    entry $top.hsampleE -relief flat -width 4 -textvar rt_control($id,hsample)
d502 1
a502 1
    label $top.jitterL -text "Jitter" -anchor w
d506 1
a506 1
    menubutton $top.jitterMB -relief raised -bd 2 -textvar rt_control($id,jitterTitle)\
d533 1
a533 1
    label $top.lmodelL -text "Light Model" -anchor w
d537 1
a537 1
    menubutton $top.lmodelMB -relief raised -bd 2\
d600 11
a610 34
    grid $top.nprocL -sticky "ew" -in $top.nprocF
    grid $top.nprocE -sticky "ew" -in $top.nprocFF
    grid $top.nprocFF -sticky "ew" -in $top.nprocF

    grid $top.hsampleL -sticky "ew" -in $top.hsampleF
    grid $top.hsampleE -sticky "ew" -in $top.hsampleFF
    grid $top.hsampleFF -sticky "ew" -in $top.hsampleF

    grid $top.jitterL -sticky "ew" -in $top.jitterF
    grid $top.jitterMB -sticky "ew" -in $top.jitterFF
    grid $top.jitterFF -sticky "ew" -in $top.jitterF

    grid $top.lmodelL -sticky "ew" -in $top.lmodelF
    grid $top.lmodelMB -sticky "ew" -in $top.lmodelFF
    grid $top.lmodelFF -sticky "ew" -in $top.lmodelF

    grid $top.nprocF x $top.hsampleF -sticky "ew" -in $top.gridF1 -padx $rt_control($id,padx) -pady $rt_control($id,pady)
    grid $top.jitterF x $top.lmodelF -sticky "ew" -in $top.gridF1 -padx $rt_control($id,padx) -pady $rt_control($id,pady)

    grid $top.dismissB -in $top.gridF2

    grid $top.gridF1 -sticky "ew" -padx $rt_control($id,padx) -pady $rt_control($id,pady)
    grid $top.gridF2 -sticky "ew" -padx $rt_control($id,padx) -pady $rt_control($id,pady)

    grid columnconfigure $top.nprocF 0 -weight 1
    grid columnconfigure $top.nprocFF 0 -weight 1
    grid columnconfigure $top.hsampleF 0 -weight 1
    grid columnconfigure $top.hsampleFF 0 -weight 1
    grid columnconfigure $top.jitterF 0 -weight 1
    grid columnconfigure $top.jitterFF 0 -weight 1
    grid columnconfigure $top.lmodelF 0 -weight 1
    grid columnconfigure $top.lmodelFF 0 -weight 1
    grid columnconfigure $top.gridF1 0 -weight 1
    grid columnconfigure $top.gridF1 2 -weight 1
d612 4
d617 1
d623 4
d629 3
d633 69
d704 118
d823 1
d825 1
a825 2
    set top .$id.do_rt
    if ![winfo exists $top] {
d829 31
a859 4
    winset $mged_gui($id,active_dm)
    switch $mged_gui($id,dm_loc) {
	ul {
	    set rt_control($id,fb) "Upper Left"
d861 4
a864 2
	ur {
	    set rt_control($id,fb) "Upper Right"
d866 4
a869 2
	ll {
	    set rt_control($id,fb) "Lower Left"
d871 6
a876 2
	lr {
	    set rt_control($id,fb) "Upper Right"
d879 27
d907 3
a909 10
    if {$mged_gui($id,fb)} {
	set rt_control($id,fb_or_file) "framebuffer"
	set fb_state normal
	set file_state disabled
	rt_set_fb_state $id
    } else {
	set rt_control($id,fb_or_file) "filename"
	set fb_state disabled
	set file_state normal
	rt_set_file_state $id
d912 7
a918 3
    set tmplist [list summary "The active pane is $rt_control($id,fb)."]
    hoc_register_data $top.framebufferL "Active Pane"\
	    [list $tmplist]
@


1.21
log
@*- set current display manager to active display manager before
	doing the work in rt_set_fb_state, rt_set_file_state and
	rt_set_fb_size
@
text
@d284 2
@


1.20
log
@*- use place_near_mouse proc to position widgets near the mouse
@
text
@d426 1
d441 1
d456 1
a456 1
    winset $mged_gui($id,top).$mged_gui($id,dm_loc)
@


1.19
log
@*- clean up variables
@
text
@d256 1
a256 4
    set pxy [winfo pointerxy $top]
    set x [lindex $pxy 0]
    set y [lindex $pxy 1]
    wm geometry $top +$x+$y
d645 1
a645 4
    set pxy [winfo pointerxy $top]
    set x [lindex $pxy 0]
    set y [lindex $pxy 1]
    wm geometry $top +$x+$y
@


1.18
log
@*- better resizing
@
text
@d12 1
a12 2
    global player_screen
    global mged_active_dm
d23 1
a23 1
    winset $mged_active_dm($id)
d56 1
a56 1
    toplevel $top -screen $player_screen($id) -menu $top.menubar
d69 1
a69 1
    $top.menubar.active add radiobutton -value ul -variable mged_dm_loc($id)\
d74 1
a74 1
    $top.menubar.active add radiobutton -value ur -variable mged_dm_loc($id)\
d79 1
a79 1
    $top.menubar.active add radiobutton -value ll -variable mged_dm_loc($id)\
d84 1
a84 1
    $top.menubar.active add radiobutton -value lr -variable mged_dm_loc($id)\
d91 1
a91 1
    $top.menubar.fb add radiobutton -value 1 -variable mged_fb_all($id)\
d93 1
a93 1
	    -command "mged_apply $id \"set fb_all \$mged_fb_all($id)\""
d96 1
a96 1
    $top.menubar.fb add radiobutton -value 0 -variable mged_fb_all($id)\
d98 1
a98 1
	    -command "mged_apply $id \"set fb_all \$mged_fb_all($id)\""
d102 1
a102 1
    $top.menubar.fb add radiobutton -value 1 -variable mged_fb_overlay($id)\
d104 1
a104 1
	    -command "mged_apply $id \"set fb_overlay \$mged_fb_overlay($id)\""
d107 1
a107 1
    $top.menubar.fb add radiobutton -value 0 -variable mged_fb_overlay($id)\
d109 1
a109 1
	    -command "mged_apply $id \"set fb_overlay \$mged_fb_overlay($id)\""
d269 1
a269 3
    global player_screen
    global mged_active_dm
    global mged_dm_loc
d274 1
a274 1
    winset $mged_active_dm($id)
d280 1
a280 1
		set result [cad_dialog .$id.rtDialog $player_screen($id)\
d292 1
a292 1
	    cad_dialog .$id.rtDialog $player_screen($id)\
d320 1
a320 1
	    cad_dialog .$id.rtDialog $player_screen($id)\
d336 1
a336 1
	    cad_dialog .$id.rtDialog $player_screen($id)\
d392 1
a392 2
    global player_screen
    global mged_active_dm
d396 1
a396 1
    winset $mged_active_dm($id)
d402 1
a402 1
	    cad_dialog .$id.rtDialog $player_screen($id)\
d421 1
a421 1
	cad_dialog .$id.rtDialog $player_screen($id)\
d427 1
a427 1
    global mged_fb
d429 1
a429 1
    set mged_fb($id) 1
d441 1
a441 1
    global mged_fb
d443 1
a443 1
    set mged_fb($id) 0
d454 1
a454 2
    global mged_top
    global mged_dm_loc
d457 1
a457 1
    winset $mged_top($id).$mged_dm_loc($id)
d475 1
a475 1
    global player_screen
d484 1
a484 1
    toplevel $top -screen $player_screen($id)
d656 1
a656 4
    global mged_active_dm
    global mged_dm_loc
    global mged_fb
    global mged_listen
d667 2
a668 2
    winset $mged_active_dm($id)
    switch $mged_dm_loc($id) {
d683 1
a683 1
    if {$mged_fb($id)} {
@


1.17
log
@*- fixed typo
@
text
@a58 1
    frame $top.gridF1
d220 4
a223 2
    grid $top.filenameE -sticky "ew" -in $top.filenameF
    grid $top.filenameF $top.filenameRB -sticky "ew"\
a224 1
    grid columnconfigure $top.filenameF 0 -weight 1
d226 1
d228 7
a234 3
    grid $top.sizeE $top.sizeMB -sticky "ew" -in $top.sizeF
    grid $top.sizeF $top.sizeL -sticky "ew" -in $top.gridF3 -padx $rt_control($id,padx) -pady $rt_control($id,pady)
    grid $top.colorF $top.colorL -sticky "ew" -in $top.gridF3 -padx $rt_control($id,padx) -pady $rt_control($id,pady)
a235 2

    grid columnconfigure $top.sizeF 0 -weight 1
d237 2
d244 5
a248 1
    pack $top.gridF2 $top.gridF3 $top.gridF4 -side top -expand 1 -fill both\
d250 3
@


1.16
log
@*- add more help messages
@
text
@d132 1
a132 1
will end up in the file." } }
d137 1
a137 1
radiobutton is selected. The results of
@


1.15
log
@*- initialize background color
*- add Ok button
@
text
@a265 1
#    cmd_set $id
d491 2
d494 1
a494 3
    hoc_register_data $top.nprocL "# of Processors"\
	    { { summary "The number of processors to use
for raytracing." } }
d496 1
a496 3
    hoc_register_data $top.nprocE "# of Processors"\
	    { { summary "Enter the number of processors to use
for raytracing." } }
d498 1
a498 3
    label $top.hsampleL -text "Hypersample" -anchor w
    hoc_register_data $top.hsampleL "Hypersample"\
	    { { summary "Hypersampling is the number of extra rays
d501 2
d504 1
a504 3
    hoc_register_data $top.hsampleE "Hypersample"\
	    { { summary "Enter the number of extra rays to
fire for each pixel." } }
@


1.14
log
@*- add help messages
*- change menu entry labels for advanced settings
@
text
@d38 1
a38 1
	set rt_control($id,color) "0 0 0"
d199 2
d235 3
a237 3
    grid $top.raytraceB x $top.clearB x $top.dismissB -sticky "nsew" -in $top.gridF4
    grid columnconfigure $top.gridF4 1 -weight 1 -minsize 8
    grid columnconfigure $top.gridF4 3 -weight 1 -minsize 8
d250 5
@


1.13
log
@*- use new color routine ---> color_entry_build
*- remove old color routines
*- some general cleanup
@
text
@d26 6
a31 1
    if ![info exists rt_control($id,fb_or_file)] {
a32 1
    }
a33 1
    if ![info exists rt_control($id,file)] {
a35 1
    }
a36 1
    if ![info exists rt_control($id,size)] {
a37 3
    }

    if ![info exists rt_control($id,color)] {
a38 3
    }

    if ![info exists rt_control($id,nproc)] {
a39 3
    }

    if ![info exists rt_control($id,hsample)] {
a40 3
    }

    if ![info exists rt_control($id,jitter)] {
d42 1
a42 3
    }

    if ![info exists rt_control($id,lmodel)] {
d44 1
d70 1
a70 1
    menu $top.menubar.active -tearoff 0
d74 2
d79 2
d84 2
d89 2
d92 1
a92 1
    menu $top.menubar.fb -tearoff 0
d96 2
d101 2
d107 2
d112 2
d118 6
d129 4
d135 4
d141 3
d145 2
d149 4
a152 2
    menu $top.sizeMB.sizeM -tearoff 0
    $top.sizeMB.sizeM add command -label "winsize"\
d154 3
d159 2
d163 2
d167 2
d171 2
d175 2
d179 2
d183 4
d197 2
d201 6
d209 3
d213 3
a215 1
	    -command "catch { destroy $top }"
d218 1
a218 1
	    -in $top.gridF2 -padx 8 -pady 8
d221 1
a221 1
	    -in $top.gridF2 -padx 8 -pady 8
d226 3
a228 3
    grid $top.sizeF $top.sizeL -sticky "ew" -in $top.gridF3 -padx 8 -pady 8
    grid $top.colorF $top.colorL -sticky "ew" -in $top.gridF3 -padx 8 -pady 8
    grid $top.advancedB - -in $top.gridF3 -padx 8 -pady 8
d238 1
a238 1
	    -padx 8 -pady 8
d247 1
a247 1
    wm title $top "Raytrace ($id)"
d449 12
d486 3
d490 3
d495 4
d500 3
d505 4
a508 2
    entry $top.jitterE -relief flat -width 4 -textvar rt_control($id,jitter)
    menubutton $top.jitterMB -relief raised -bd 2\
d510 24
a533 9
    menu $top.jitterMB.jitterM -tearoff 0
    $top.jitterMB.jitterM add command -label 0\
	 -command "set rt_control($id,jitter) 0"
    $top.jitterMB.jitterM add command -label 1\
	 -command "set rt_control($id,jitter) 1"
    $top.jitterMB.jitterM add command -label 2\
	 -command "set rt_control($id,jitter) 2"
    $top.jitterMB.jitterM add command -label 3\
	 -command "set rt_control($id,jitter) 3"
d536 3
a538 1
    entry $top.lmodelE -relief flat -width 4 -textvar rt_control($id,lmodel)
d540 1
d542 54
a595 13
    menu $top.lmodelMB.lmodelM -tearoff 0
    $top.lmodelMB.lmodelM add command -label 0\
	    -command "set rt_control($id,lmodel) 0"
    $top.lmodelMB.lmodelM add command -label 1\
	    -command "set rt_control($id,lmodel) 1"
    $top.lmodelMB.lmodelM add command -label 2\
	    -command "set rt_control($id,lmodel) 2"
    $top.lmodelMB.lmodelM add command -label 3\
	    -command "set rt_control($id,lmodel) 3"
    $top.lmodelMB.lmodelM add command -label 4\
	    -command "set rt_control($id,lmodel) 4"
    $top.lmodelMB.lmodelM add command -label 5\
	    -command "set rt_control($id,lmodel) 5"
d599 2
d611 1
a611 1
    grid $top.jitterE $top.jitterMB -sticky "ew" -in $top.jitterFF
d615 1
a615 1
    grid $top.lmodelE $top.lmodelMB -sticky "ew" -in $top.lmodelFF
d618 2
a619 2
    grid $top.nprocF x $top.hsampleF -sticky "ew" -in $top.gridF1 -padx 8 -pady 8
    grid $top.jitterF x $top.lmodelF -sticky "ew" -in $top.gridF1 -padx 8 -pady 8
d623 2
a624 2
    grid $top.gridF1 -sticky "ew" -padx 8 -pady 8
    grid $top.gridF2 -sticky "ew" -padx 8 -pady 8
d688 4
@


1.12
log
@*- mods to use new variable --> rt_control
@
text
@a74 1
#    frame $top.framebufferF -relief sunken -bd 2
a76 1
    frame $top.colorF -relief sunken -bd 2
a109 7
#    $top.menubar.fb add separator
#    $top.menubar.fb add checkbutton -offvalue 0 -onvalue 1 -variable mged_fb($id)\
#	    -label "Framebuffer Active" -underline 0\
#	    -command "set_fb $id"
#    $top.menubar.fb add checkbutton -offvalue 0 -onvalue 1 -variable mged_listen($id)\
#	    -label "Listen For Clients" -underline 0\
#	    -command "set_listen $id" -state disabled
a113 2
#    entry $top.framebufferE -relief flat -width 12 -textvar rt_control($id,fb)\
#	    -state $fb_state
a142 23
    entry $top.colorE -relief flat -width 12 -textvar rt_control($id,color)
    menubutton $top.colorMB -relief raised -bd 2\
	    -menu $top.colorMB.colorM -indicatoron 1
    menu $top.colorMB.colorM -tearoff 0
    $top.colorMB.colorM add command -label black\
	     -command "set rt_control($id,color) \"0 0 0\"; rt_set_colorMB $id"
    $top.colorMB.colorM add command -label white\
	     -command "set rt_control($id,color) \"220 220 220\"; rt_set_colorMB $id"
    $top.colorMB.colorM add command -label red\
	     -command "set rt_control($id,color) \"220 0 0\"; rt_set_colorMB $id"
    $top.colorMB.colorM add command -label green\
	     -command "set rt_control($id,color) \"0 220 0\"; rt_set_colorMB $id"
    $top.colorMB.colorM add command -label blue\
	     -command "set rt_control($id,color) \"0 0 220\"; rt_set_colorMB $id"
    $top.colorMB.colorM add command -label yellow\
	     -command "set rt_control($id,color) \"220 220 0\"; rt_set_colorMB $id"
    $top.colorMB.colorM add command -label cyan\
	    -command "set rt_control($id,color) \"0 220 220\"; rt_set_colorMB $id"
    $top.colorMB.colorM add command -label magenta\
	    -command "set rt_control($id,color) \"220 0 220\"; rt_set_colorMB $id"
    $top.colorMB.colorM add separator
    $top.colorMB.colorM add command -label "Color Tool..."\
	    -command "rt_choose_color $id $top"
d144 7
a159 3
#    grid $top.framebufferE -sticky "ew" -in $top.framebufferF
#    grid $top.framebufferF $top.framebufferRB -sticky "ew"\
#	    -in $top.gridF2 -padx 8 -pady 8
a164 1
#    grid columnconfigure $top.framebufferF 0 -weight 1
a169 1
    grid $top.colorE $top.colorMB -sticky "ew" -in $top.colorF
a173 1
    grid columnconfigure $top.colorF 0 -weight 1
d183 1
a183 2
    bind $top.colorE <Return> "rt_set_colorMB $id; break"
    rt_set_colorMB $id
a381 48
proc rt_choose_color { id parent } {
    global player_screen
    global rt_control

    set child bgColor

    cadColorWidget dialog $parent $child\
	    -title "Raytrace Background Color"\
	    -initialcolor [$parent.colorMB cget -background]\
	    -ok "rt_color_ok $id $parent $parent.$child"\
	    -cancel "cadColorWidget_destroy $parent.$child"
}

proc rt_color_ok { id parent w } {
    global rt_control

    upvar #0 $w data

    $parent.colorMB configure -bg $data(finalColor)
    set rt_control($id,color) "$data(red) $data(green) $data(blue)"

    destroy $w
    unset data
}

proc rt_set_colorMB { id } {
    global player_screen
    global rt_control

    set top .$id.do_rt

    if {$rt_control($id,color) != ""} {
	set result [regexp "^(\[0-9\]+)\[ \]+(\[0-9\]+)\[ \]+(\[0-9\]+)$" \
		$rt_control($id,color) cmatch red green blue]
	if {!$result} {
	    cad_dialog .$id.rtDialog $player_screen($id)\
		    "Improper color specification!"\
		    "Improper color specification: $rt_control($id,color)"\
		    "" 0 OK
	    return
	}
    } else {
	return
    }

    $top.colorMB configure -bg [format "#%02x%02x%02x" $red $green $blue]
}

a405 1
#    frame $top.gridF3
a414 4
#    frame $top.rect_locF
#    frame $top.rect_locF -relief sunken -bd 2
#    frame $top.rect_sizeF
#    frame $top.rect_sizeF -relief sunken -bd 2
a452 9

#    radiobutton $top.rectRB -text "Rectangle" -anchor w\
#	    -value 1 -variable 

#    label $top.rect_locL -text "Location" -anchor w
#    entry $top.rect_locE -relief flat -textvar rt_rect_loc($id)

#    label $top.rect_sizeL -text "Size" -anchor w
#    entry $top.rect_sizeE -relief flat -textvar rt_rect_size($id
@


1.11
log
@*- mods to use rset
@
text
@d15 1
a15 9
    global rt_fb_or_file
    global rt_fb
    global rt_file
    global rt_size
    global rt_color
    global rt_nproc
    global rt_hsample
    global rt_jitter
    global rt_lmodel
d26 2
a27 2
    if ![info exists rt_fb_or_file($id)] {
	set rt_fb_or_file($id) framebuffer
d30 1
a30 1
    if ![info exists rt_file($id)] {
d32 1
a32 1
	set rt_file($id) $default_file
d35 2
a36 2
    if ![info exists rt_size($id)] {
	set rt_size($id) 512
d39 2
a40 2
    if ![info exists rt_color($id)] {
	set rt_color($id) "0 0 0"
d43 2
a44 2
    if ![info exists rt_nproc($id)] {
	set rt_nproc($id) 1
d47 2
a48 2
    if ![info exists rt_hsample($id)] {
	set rt_hsample($id) 0
d51 2
a52 2
    if ![info exists rt_jitter($id)] {
	set rt_jitter($id) 0
d55 2
a56 2
    if ![info exists rt_lmodel($id)] {
	set rt_lmodel($id) 0
d60 1
a60 1
	set rt_fb_or_file($id) "framebuffer"
d64 1
a64 1
	set rt_fb_or_file($id) "filename"
d121 1
a121 1
	    -value framebuffer -variable rt_fb_or_file($id)\
d123 1
a123 1
#    entry $top.framebufferE -relief flat -width 12 -textvar rt_fb($id)\
d125 1
a125 1
    label $top.framebufferL -textvariable rt_fb($id)
d128 1
a128 1
	    -value filename -variable rt_fb_or_file($id)\
d130 1
a130 1
    entry $top.filenameE -relief flat -width 12 -textvar rt_file($id)\
d134 1
a134 1
    entry $top.sizeE -relief flat -width 12 -textvar rt_size($id)
d141 1
a141 1
	    -command "set rt_size($id) 128"
d143 1
a143 1
	    -command "set rt_size($id) 256"
d145 1
a145 1
	    -command "set rt_size($id) 512"
d147 1
a147 1
	    -command "set rt_size($id) 640x480"
d149 1
a149 1
	    -command "set rt_size($id) 720x486"
d151 1
a151 1
	    -command "set rt_size($id) 1024"
d154 1
a154 1
    entry $top.colorE -relief flat -width 12 -textvar rt_color($id)
d159 1
a159 1
	     -command "set rt_color($id) \"0 0 0\"; rt_set_colorMB $id"
d161 1
a161 1
	     -command "set rt_color($id) \"220 220 220\"; rt_set_colorMB $id"
d163 1
a163 1
	     -command "set rt_color($id) \"220 0 0\"; rt_set_colorMB $id"
d165 1
a165 1
	     -command "set rt_color($id) \"0 220 0\"; rt_set_colorMB $id"
d167 1
a167 1
	     -command "set rt_color($id) \"0 0 220\"; rt_set_colorMB $id"
d169 1
a169 1
	     -command "set rt_color($id) \"220 220 0\"; rt_set_colorMB $id"
d171 1
a171 1
	    -command "set rt_color($id) \"0 220 220\"; rt_set_colorMB $id"
d173 1
a173 1
	    -command "set rt_color($id) \"220 0 220\"; rt_set_colorMB $id"
d233 1
a233 10
    global rt_fb_or_file
    global rt_fb
    global rt_file
    global rt_size
    global rt_color
    global rt_nproc
    global rt_hsample
    global rt_jitter
    global rt_lmodel
    global debug_rt_cmd
d239 3
a241 3
    if {$rt_fb_or_file($id) == "filename"} {
	if {$rt_file($id) != ""} {
	    if {[file exists $rt_file($id)]} {
d243 2
a244 2
			"Overwrite $rt_file($id)?"\
			"Overwrite $rt_file($id)?"\
d252 1
a252 1
	    append rt_cmd " -o $rt_file($id)"
d262 2
a263 2
#	if {$rt_fb($id) != ""} {
#	    append rt_cmd " -F $rt_fb($id)"
d267 1
a267 1
    if {$rt_size($id) != ""} {
d269 1
a269 1
		$rt_size($id) smatch width junkA junkB junkC height]
d284 1
a284 1
		    "Improper size specification: $rt_size($id)"\
d292 1
a292 1
    if {$rt_color($id) != ""} {
d294 1
a294 1
		$rt_color($id) cmatch red green blue]
d300 1
a300 1
		    "Improper color specification: $rt_color($id)"\
d306 2
a307 2
    if {$rt_nproc($id) != ""} {
	append rt_cmd " -P$rt_nproc($id)"
d310 2
a311 2
    if {$rt_hsample($id) != ""} {
	append rt_cmd " -H$rt_hsample($id)"
d314 2
a315 2
    if {$rt_jitter($id) != ""} {
	append rt_cmd " -J$rt_jitter($id)"
d318 2
a319 2
    if {$rt_lmodel($id) != ""} {
	append rt_cmd " -l$rt_lmodel($id)"
a349 2
    set debug_rt_cmd $rt_cmd

d357 1
a357 3
    global rt_fb_or_file
    global rt_fb
    global rt_color
d361 1
a361 1
    if {$rt_color($id) != ""} {
d363 1
a363 1
		$rt_color($id) cmatch red green blue]
d367 1
a367 1
		    "Improper color specification: $rt_color($id)"\
d377 1
a377 1
    if {$rt_fb($id) != ""} {
d418 1
a418 1
    global rt_color
d430 1
a430 1
    global rt_color
d435 1
a435 1
    set rt_color($id) "$data(red) $data(green) $data(blue)"
d443 1
a443 1
    global rt_color
d447 1
a447 1
    if {$rt_color($id) != ""} {
d449 1
a449 1
		$rt_color($id) cmatch red green blue]
d453 1
a453 1
		    "Improper color specification: $rt_color($id)"\
a465 1
    global rt_size
d467 1
d471 1
a471 1
    set rt_size($id) "[lindex $size 0]x[lindex $size 1]"
d476 1
a476 6
    global rt_hsample
    global rt_jitter
    global rt_lmodel
    global rt_nproc
    global rt_rect_loc
    global rt_rect_size
d504 1
a504 1
    entry $top.nprocE -relief flat -width 4 -textvar rt_nproc($id)
d507 1
a507 1
    entry $top.hsampleE -relief flat -width 4 -textvar rt_hsample($id)
d510 1
a510 1
    entry $top.jitterE -relief flat -width 4 -textvar rt_jitter($id)
d515 1
a515 1
	 -command "set rt_jitter($id) 0"
d517 1
a517 1
	 -command "set rt_jitter($id) 1"
d519 1
a519 1
	 -command "set rt_jitter($id) 2"
d521 1
a521 1
	 -command "set rt_jitter($id) 3"
d524 1
a524 1
    entry $top.lmodelE -relief flat -width 4 -textvar rt_lmodel($id)
d529 1
a529 1
	    -command "set rt_lmodel($id) 0"
d531 1
a531 1
	    -command "set rt_lmodel($id) 1"
d533 1
a533 1
	    -command "set rt_lmodel($id) 2"
d535 1
a535 1
	    -command "set rt_lmodel($id) 3"
d537 1
a537 1
	    -command "set rt_lmodel($id) 4"
d539 1
a539 1
	    -command "set rt_lmodel($id) 5"
d600 2
a602 1
    global mged_fb
a603 1
    global mged_listen
d605 1
a605 2
    global rt_fb
    global rt_fb_or_file
d615 1
a615 1
	    set rt_fb($id) "Upper Left"
d618 1
a618 1
	    set rt_fb($id) "Upper Right"
d621 1
a621 1
	    set rt_fb($id) "Lower Left"
d624 1
a624 1
	    set rt_fb($id) "Upper Right"
d629 1
a629 1
	set rt_fb_or_file($id) "framebuffer"
d634 1
a634 1
	set rt_fb_or_file($id) "filename"
@


1.10
log
@*- put (id) in the title
@
text
@d340 6
a345 5
	set rect [_mged_get_rect]
	set xmin [lindex $rect 0]
	set ymin [lindex $rect 1]
	set width [lindex $rect 2]
	set height [expr [lindex $rect 3] * $aspect]
@


1.9
log
@*- mods to reflect parameter change in cadColorWidget()
*- a little house cleaning
@
text
@d232 1
a232 1
    wm title $top "Raytrace..."
d619 1
a619 1
    wm title $top "Advanced Settings..."
@


1.8
log
@*- append "break" to bindings to prevent further processing
@
text
@d184 1
a184 1
	    -command "rt_choose_color $id"
d436 1
a436 1
proc rt_choose_color { id } {
d440 1
a440 1
    set top .$id.do_rt
d442 5
a446 4
    cadColorWidget dialog $top -title "Raytrace Background Color"\
	    -initialcolor [$top.colorMB cget -background]\
	    -ok "rt_color_ok $id $top.colorWidget"\
	    -cancel "rt_color_cancel $id $top.colorWidget"
d449 1
a449 1
proc rt_color_ok { id w } {
d454 1
a454 2
    set top .$id.do_rt
    $top.colorMB configure -bg $data(finalColor)
a455 7

    destroy $w
    unset data
}

proc rt_color_cancel { id w } {
    upvar #0 $w data
@


1.7
log
@*- using cad_dialog instead of mged_dialog
*- using the new cadColorWidget
@
text
@d224 1
a224 1
    bind $top.colorE <Return> "rt_set_colorMB $id"
@


1.6
log
@checkin for pjt/jra demo
@
text
@d259 1
a259 1
		set result [mged_dialog .$id.rtDialog $player_screen($id)\
d271 1
a271 1
	    mged_dialog .$id.rtDialog $player_screen($id)\
d299 1
a299 1
	    mged_dialog .$id.rtDialog $player_screen($id)\
d315 1
a315 1
	    mged_dialog .$id.rtDialog $player_screen($id)\
d385 1
a385 1
	    mged_dialog .$id.rtDialog $player_screen($id)\
d404 1
a404 1
	mged_dialog .$id.rtDialog $player_screen($id)\
a440 1
    set colors [chooseColor $top]
d442 21
a462 7
    if {[llength $colors] != 2} {
	mged_dialog .$id.rtDialog $player_screen($id)\
		"Error choosing a color!"\
		"Error choosing a color!"\
		"" 0 OK
	return
    }
d464 2
a465 2
    $top.colorMB configure -bg [lindex $colors 0]
    set rt_color($id) [lindex $colors 1]
d478 1
a478 1
	    mged_dialog .$id.rtDialog $player_screen($id)\
@


1.5
log
@mods proc set_rt_fb
@
text
@d13 2
d32 2
a37 4
    if ![info exists rt_fb($id)] {
	set rt_fb($id) ""
    }

d67 11
a77 1
    toplevel $top -screen $player_screen($id)
d79 1
a79 1
    frame $top.gridF1 -relief groove -bd 2
d81 3
a83 2
    frame $top.gridF3
    frame $top.framebufferF -relief sunken -bd 2
d88 39
a126 7
    if {$rt_fb_or_file($id) == "framebuffer"} {
	set fb_state normal
	set file_state disabled
    } else {
	set fb_state disabled
	set file_state normal
    }
d131 3
a133 13
    entry $top.framebufferE -relief flat -width 12 -textvar rt_fb($id)\
	    -state $fb_state
    menubutton $top.framebufferMB -relief raised -bd 2\
	    -menu $top.framebufferMB.m
    menu $top.framebufferMB.m -tearoff 0
    $top.framebufferMB.m add command -label "Upper Left"\
	    -command "set_rt_fb $id ul"
    $top.framebufferMB.m add command -label "Upper Right"\
	    -command "set_rt_fb $id ur"
    $top.framebufferMB.m add command -label "Lower Left"\
	    -command "set_rt_fb $id ll"
    $top.framebufferMB.m add command -label "Lower Right"\
	    -command "set_rt_fb $id lr"
d195 5
a199 3
    grid $top.framebufferE -sticky "ew" -in $top.framebufferF
    grid $top.framebufferF $top.framebufferRB -sticky "ew"\
	    -in $top.gridF1 -padx 8 -pady 8
d202 2
a203 2
	    -in $top.gridF1 -padx 8 -pady 8
    grid columnconfigure $top.framebufferF 0 -weight 1
d205 1
a205 1
    grid columnconfigure $top.gridF1 0 -weight 1
d208 1
a208 1
    grid $top.sizeF $top.sizeL -sticky "ew" -in $top.gridF2 -padx 8 -pady 8
d210 2
a211 2
    grid $top.colorF $top.colorL -sticky "ew" -in $top.gridF2 -padx 8 -pady 8
    grid $top.advancedB - -in $top.gridF2 -padx 8 -pady 8
d215 1
a215 1
    grid columnconfigure $top.gridF2 0 -weight 1
d217 3
a219 5
#    grid $top.advancedB -sticky "nsew" -in $top.gridF3
#    grid configure $top.advancedB -columnspan 5
    grid $top.raytraceB x $top.clearB x $top.dismissB -sticky "nsew" -in $top.gridF3
    grid columnconfigure $top.gridF3 1 -weight 1 -minsize 8
    grid columnconfigure $top.gridF3 3 -weight 1 -minsize 8
d221 1
a221 1
    pack $top.gridF1 $top.gridF2 $top.gridF3 -side top -expand 1 -fill both\
d226 1
d237 4
d250 1
d252 2
a253 1
    cmd_set $id
d278 4
a281 3
	if {$rt_fb($id) != ""} {
	    append rt_cmd " -F $rt_fb($id)"
	}
d285 2
a286 2
	set result [regexp "^(\[0-9\]+)\[xX\]?(\[0-9\]*)$"\
		$rt_size($id) smatch width height]
d290 4
d295 1
d305 2
d339 29
d373 2
d379 2
d398 1
a398 1
	set result [catch { exec fbclear -F $rt_fb($id) $red $green $blue & } rt_error]
d410 5
a415 1

d417 1
a417 1
    $top.framebufferE configure -state normal
d420 1
a420 1
    focus $top.framebufferE
d424 5
a429 1

d431 1
a431 1
    $top.framebufferE configure -state disabled
a432 1

d479 1
a479 1
    global mged_active_dm
d481 1
d483 3
a485 2
    winset $mged_active_dm($id)
    set rt_size($id) [dm size]
d616 1
a616 2
proc set_rt_fb { id loc } {
    global mged_top
d618 1
a618 1
    global rt_fb
d623 11
a633 2
    
    switch $loc {
d635 4
a638 2
	    winset $mged_top.ul
	    set rt_fb($id)
d640 6
d649 4
a652 2
	.$id.m.settings.m.cm_fb entryconfigure 7 -state normal
	set mged_listen($id) $listen
d654 4
a657 2
	.$id.m.settings.m.cm_fb entryconfigure 7 -state disabled
	set mged_listen($id) $listen
d659 1
a659 3

    winset $mged_active_dm($id)
}@


1.4
log
@not done --- checking in to use cvs
@
text
@d543 1
a543 1
	.$id.m.settings.m.cm_fb entryconfigure 6 -state normal
d546 1
a546 1
	.$id.m.settings.m.cm_fb entryconfigure 6 -state disabled
@


1.3
log
@minor mods
@
text
@d69 2
a70 2
    frame $top.gridF -relief groove -bd 2
    frame $top.gridF2
a84 2
    entry $top.framebufferE -relief flat -width 12 -textvar rt_fb($id)\
	    -state $fb_state
d88 13
a101 2
    entry $top.filenameE -relief flat -width 12 -textvar rt_file($id)\
	    -state $file_state
d105 2
d113 2
d164 1
a164 1
	    -in $top.gridF -padx 8 -pady 8
d167 1
a167 1
	    -in $top.gridF -padx 8 -pady 8
d170 1
a170 1
    grid columnconfigure $top.gridF 0 -weight 1
d173 1
a173 1
    grid $top.sizeF $top.sizeL -sticky "ew" -in $top.gridF2 -pady 4
d175 2
a176 1
    grid $top.colorF $top.colorL -sticky "ew" -in $top.gridF2 -pady 4
d182 2
a183 2
    grid $top.advancedB -sticky "nsew" -in $top.gridF3
    grid configure $top.advancedB -columnspan 5
d188 1
a188 1
    pack $top.gridF $top.gridF2 $top.gridF3 -side top -expand 1 -fill both\
a290 1

d317 1
a317 1
	set result [catch { exec fbclear -F $rt_fb($id) $red $green $blue } rt_error]
d319 1
a319 1
	set result [catch { exec fbclear $red $green $blue } rt_error]
d390 8
d404 2
d415 1
a415 1
    frame $top.gridF
d417 1
a417 4
    frame $top.nprocF -relief sunken -bd 2
    frame $top.hsampleF -relief sunken -bd 2
    frame $top.jitterF -relief sunken -bd 2
    frame $top.lmodelF -relief sunken -bd 2
d419 13
d470 9
d482 19
a500 9
    grid $top.nprocE -sticky "ew" -in $top.nprocF
    grid $top.hsampleE -sticky "ew" -in $top.hsampleF
    grid $top.jitterE $top.jitterMB -sticky "ew" -in $top.jitterF
    grid $top.lmodelE $top.lmodelMB -sticky "ew" -in $top.lmodelF

    grid $top.nprocF $top.nprocL -sticky "ew" -in $top.gridF -pady 4
    grid $top.hsampleF $top.hsampleL -sticky "ew" -in $top.gridF -pady 4
    grid $top.jitterF $top.jitterL -sticky "ew" -in $top.gridF -pady 4
    grid $top.lmodelF $top.lmodelL -sticky "ew" -in $top.gridF -pady 4
d503 3
d507 1
d509 1
d511 1
d513 5
a517 1
    grid columnconfigure $top.gridF 0 -weight 1
a518 2
    pack $top.gridF $top.gridF2 -side top -expand 1 -fill both -padx 8 -pady 4

d525 27
@


1.2
log
@*** empty log message ***
@
text
@a119 3
    $top.colorMB.colorM add command -label "Choose Color"\
	    -command "rt_choose_color $id"
    $top.colorMB.colorM add separator
d136 3
@


1.1
log
@Initial revision
@
text
@d9 2
d39 1
a39 1
	regsub \.g$ [opendb] .pix default_file
d69 1
a69 1
    frame $top.gridF
d75 1
a75 1
    frame $top.bgColorF -relief sunken -bd 2
d89 1
a89 1
	    -command "set_fb_state $id"
d95 1
a95 1
	    -command "set_file_state $id"
d115 24
a138 24
    label $top.bgColorL -text "Background Color" -anchor w
    entry $top.bgColorE -relief flat -width 12 -textvar rt_color($id)
    menubutton $top.bgColorMB -relief raised -bd 2\
	    -menu $top.bgColorMB.bgColorM -indicatoron 1
    menu $top.bgColorMB.bgColorM -tearoff 0
    $top.bgColorMB.bgColorM add command -label "Choose Color"\
	    -command "do_choose_color $id"
    $top.bgColorMB.bgColorM add separator
    $top.bgColorMB.bgColorM add command -label black\
	     -command "set rt_color($id) \"0 0 0\"; set_bgColorMB_color $id"
    $top.bgColorMB.bgColorM add command -label white\
	     -command "set rt_color($id) \"220 220 220\"; set_bgColorMB_color $id"
    $top.bgColorMB.bgColorM add command -label red\
	     -command "set rt_color($id) \"220 0 0\"; set_bgColorMB_color $id"
    $top.bgColorMB.bgColorM add command -label green\
	     -command "set rt_color($id) \"0 220 0\"; set_bgColorMB_color $id"
    $top.bgColorMB.bgColorM add command -label blue\
	     -command "set rt_color($id) \"0 0 220\"; set_bgColorMB_color $id"
    $top.bgColorMB.bgColorM add command -label yellow\
	     -command "set rt_color($id) \"220 220 0\"; set_bgColorMB_color $id"
    $top.bgColorMB.bgColorM add command -label cyan\
	    -command "set rt_color($id) \"0 220 220\"; set_bgColorMB_color $id"
    $top.bgColorMB.bgColorM add command -label magenta\
	    -command "set rt_color($id) \"220 0 220\"; set_bgColorMB_color $id"
d150 2
a151 1
    grid $top.framebufferF $top.framebufferRB -sticky "ew" -in $top.gridF -pady 4
d153 2
a154 1
    grid $top.filenameF $top.filenameRB -sticky "ew" -in $top.gridF -pady 4
d161 2
a162 2
    grid $top.bgColorE $top.bgColorMB -sticky "ew" -in $top.bgColorF
    grid $top.bgColorF $top.bgColorL -sticky "ew" -in $top.gridF2 -pady 4
d165 1
a165 1
    grid columnconfigure $top.bgColorF 0 -weight 1
d177 2
a178 2
    bind $top.bgColorE <Return> "set_bgColorMB_color $id"
    set_bgColorMB_color $id
d200 1
a200 1
    set rt_cmd "rt"
d218 2
a219 2
		    "You must specify a file name!"\
		    "You must specify a file name!"\
d240 1
a240 1
		    "Improper size specification"\
d254 1
a254 1
		    "Improper color specification"\
d292 1
a292 1
		    "Improper color specification"\
d311 1
a311 1
		"RT Error" "Rt Error: $rt_error" "" 0 OK
d315 1
a315 1
proc set_fb_state { id } {
d325 1
a325 1
proc set_file_state { id } {
d335 1
a335 1
proc do_choose_color { id } {
d340 1
a340 6
    set hex_color [tk_chooseColor -parent $top] 
    if {$hex_color == ""} {
	return
    }

    $top.bgColorMB configure -bg $hex_color
d342 1
a342 8
    set result [regexp "^#(\[0-9AaBbCcDdEeFf\]\[0-9AaBbCcDdEeFf\])(\[0-9AaBbCcDdEeFf\]\[0-9AaBbCcDdEeFf\])(\[0-9AaBbCcDdEeFf\]\[0-9AaBbCcDdEeFf\])$" $hex_color cmatch hred hgreen hblue]

    if {$result} {
	set red [format "%d" 0X$hred]
	set green [format "%d" 0X$hgreen]
	set blue [format "%d" 0X$hblue]
	set rt_color($id) "$red $green $blue"
    } else {
d344 2
a345 2
		"Error choosing a color."\
		"Error choosing a color: $hex_color"\
d349 3
d354 1
a354 1
proc set_bgColorMB_color { id } {
d365 1
a365 1
		    "Improper color specification"\
d374 1
a374 1
    $top.bgColorMB configure -bg [format "#%02x%02x%02x" $red $green $blue]
@
