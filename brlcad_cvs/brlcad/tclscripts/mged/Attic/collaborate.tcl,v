head	1.4;
access;
symbols
	ansi-20040405-merged:1.3
	postmerge-20040405-ansi:1.3
	premerge-20040404-ansi:1.3
	postmerge-autoconf:1.3
	autoconf-freeze:1.3
	premerge-autoconf:1.3
	postmerge-20040315-windows:1.3
	premerge-20040315-windows:1.3
	windows-20040315-freeze:1.3
	autoconf-20031203:1.3
	autoconf-20031202:1.3
	autoconf-branch:1.3.0.12
	phong-branch:1.3.0.10
	photonmap-branch:1.3.0.8
	rel-6-1-DP:1.3
	windows-branch:1.3.0.6
	rel-6-0-2:1.3
	ansi-branch:1.3.0.4
	rel-6-0-1-branch:1.3.0.2
	hartley-6-0-post:1.3
	hartley-6-0-pre:1.3
	rel-6-0-1:1.3
	rel-6-0:1.3
	rel-5-4:1.2
	offsite-5-3-pre:1.2
	rel-5-3:1.2
	rel-5-2:1.2
	rel-5-1-branch:1.2.0.2
	rel-5-1:1.2
	rel-5-0:1.2
	rel-5-0-beta:1.2;
locks; strict;
comment	@# @;


1.4
date	2004.05.21.16.41.22;	author morrison;	state dead;
branches;
next	1.3;

1.3
date	2001.12.19.22.09.25;	author bparker;	state Exp;
branches;
next	1.2;

1.2
date	99.03.12.19.53.28;	author bparker;	state Exp;
branches;
next	1.1;

1.1
date	99.02.22.17.47.53;	author bparker;	state Exp;
branches;
next	;


desc
@@


1.4
log
@moved to src/tclscripts/
@
text
@#			C O L L A B O R A T E . T C L
#
#	TCL macros for maintaining collaborative relationships.
#
#	Author -
#		Robert Parker
#

proc collaborate { cmd {id ""} } {
    global mged_collaborators

    if {$cmd == "join"} {
	if {$id == ""} {
	    return [helpdevel collaborate]
	}

	collab_join $id
	return
    }

    if {$cmd == "quit"} {
	if {$id == ""} {
	    return [helpdevel collaborate]
	}

	collab_quit $id
	return
    }

    if {$cmd == "show"} {
	return $mged_collaborators
    }
}

# Join or quit the Mged Collaborative Session
proc collab_doit { id } {
    global mged_gui

    if {$mged_gui($id,collaborate)} {
	collab_join $id
    } else {
	collab_quit $id
    }
}

# Join Mged Collaborative Session
proc collab_join { id } {
    global mged_gui
    global mged_collaborators
    global mged_players

    if { [lsearch -exact $mged_players $id] == -1 } {
	return "collab_join: $id is not listed as an mged_player"
    }

    if { [lsearch -exact $mged_collaborators $id] != -1 } {
	return "collab_join: $id is already in the collaborative session"
    }

    if [winfo exists $mged_gui($id,active_dm)] {
	set nw $mged_gui($id,top).ur
    } else {
	return "collab_join: unrecognized pathname - $mged_gui($id,active_dm)"
    }

    if [llength $mged_collaborators] {
	set cid [lindex $mged_collaborators 0]
	if [winfo exists $mged_gui($cid,top).ur] {
	    set ow $mged_gui($cid,top).ur
	} else {
	    return "collab_join: me thinks the session is corrupted"
	}

	catch { share view $ow $nw }
	reconfig_gui_default $id
	view_ring_copy $cid $id
    }

    set mged_gui($id,collaborate) 1
    lappend mged_collaborators $id
}

# Quit Mged Collaborative Session
proc collab_quit { id } {
    global mged_collaborators
    global mged_gui

    set i [lsearch -exact $mged_collaborators $id]
    if { $i == -1 } {
	return "collab_quit: bad id - $id"
    }

    if [winfo exists $mged_gui($id,active_dm)] {
	set w $mged_gui($id,active_dm)
    } else {
	return "collab_quit: unrecognized pathname - $mged_gui($id,active_dm)"
    }

    catch {share -u view $w}
    set mged_gui($id,collaborate) 0
    set mged_collaborators [lreplace $mged_collaborators $i $i]
}
@


1.3
log
@*- changed the view_ring behavior
@
text
@@


1.2
log
@*- add proc collab_doit
*- mods to collab_join and collab_quit
@
text
@d76 1
@


1.1
log
@TCL macros for maintaining collaborative relationships.
@
text
@d35 11
d78 1
d99 1
@
