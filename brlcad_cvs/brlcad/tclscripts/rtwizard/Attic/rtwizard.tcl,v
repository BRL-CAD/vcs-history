head	1.7;
access;
symbols
	ansi-20040405-merged:1.4.4.1
	postmerge-20040405-ansi:1.6
	premerge-20040404-ansi:1.6
	postmerge-autoconf:1.6
	autoconf-freeze:1.6
	premerge-autoconf:1.6
	postmerge-20040315-windows:1.6
	premerge-20040315-windows:1.6
	windows-20040315-freeze:1.4.6.1
	autoconf-20031203:1.6
	autoconf-20031202:1.6
	autoconf-branch:1.6.0.6
	phong-branch:1.6.0.4
	photonmap-branch:1.6.0.2
	rel-6-1-DP:1.4
	windows-branch:1.4.0.6
	rel-6-0-2:1.4
	ansi-branch:1.4.0.4
	rel-6-0-1-branch:1.4.0.2
	hartley-6-0-post:1.4
	hartley-6-0-pre:1.4
	rel-6-0-1:1.4;
locks; strict;
comment	@# @;


1.7
date	2004.05.21.16.41.35;	author morrison;	state dead;
branches;
next	1.6;

1.6
date	2003.03.13.19.45.33;	author jra;	state Exp;
branches;
next	1.5;

1.5
date	2003.03.08.03.31.57;	author jra;	state Exp;
branches;
next	1.4;

1.4
date	2002.07.18.16.10.23;	author rbowers;	state Exp;
branches
	1.4.4.1
	1.4.6.1;
next	1.3;

1.3
date	2002.07.11.18.39.04;	author rbowers;	state Exp;
branches;
next	1.2;

1.2
date	2002.07.11.18.35.59;	author rbowers;	state Exp;
branches;
next	1.1;

1.1
date	2002.07.08.12.36.17;	author rbowers;	state Exp;
branches;
next	;

1.4.4.1
date	2004.03.17.21.23.16;	author morrison;	state Exp;
branches;
next	;

1.4.6.1
date	2004.03.11.23.52.20;	author morrison;	state Exp;
branches;
next	;


desc
@@


1.7
log
@moved to src/tclscripts/
@
text
@#
# rtwizard.tcl
#
# This is the main script for the RtWizard. 
#
# The development version codename is "Danube"
# The final version will be "Defiant" ;-)

#
# Extend Autopath
#
if { [info exists ::env(BRLCAD_ROOT)] } {
    set rootDir $::env(BRLCAD_ROOT)
} else {
    set rootDir [file join / usr brlcad ]
} 
set wizDir [ file join $rootDir tclscripts rtwizard ]
set libDir [ file join $wizDir lib ]

lappend auto_path $wizDir $libDir

#
# All RtWizard stuff is in the RtWizard namespace
#
namespace eval RtWizard {

    #
    # Required packages. There are several!
    #
    package require Itcl
    package require Itk
    package require Iwidgets

    package require Wizard 1.0
    package require DbPage
    package require FbPage
    package require HelpPage
    package require ExamplePage

    package require FullColorPage
    package require HighlightedPage
    package require GhostPage
    package require LinePage

    package require FeedbackDialog

    #
    # The supported picture types
    #
    package require PictureTypeA
    package require PictureTypeB
    package require PictureTypeC
    package require PictureTypeD
    package require PictureTypeE
    package require PictureTypeF

    set dbFile ""
    set helpFont {-family helvetica -size 12 \
	    -slant italic}

    #
    # main
    #
    # Do all that is doable
    #
    proc main { args } {

	#
	# Create the Feedback
	#
	set fb [ FeedbackDialog .#auto \
		-title "Loading RtWizard ..." \
		-width 250 \
		-height 100 ]

	$fb center
	$fb activate
	$fb center

	#
	# Create the wizard
	#
	set w [ RtWizard::Wizard .#auto ]
	$fb inform "Wizard megawidget created" 5

	#
	# Add the first set of pages to the wizard.
	# Note that we can't create the Mged-based pages until
	# the database is selected.
	#
	# XXX Fixing this will require debugging the Mged object
	#     The opendb command has a fatal bug.
	#

	# Database Page
	set ::dbp [$w add RtWizard::DbPage "dbp"]
	$w enable "dbp"
	$fb inform "Database page created." 6

	# Framebuffer Page
	set ::fbp [$w add RtWizard::FbPage "fbp"]
	$w enable "fbp"
	$fb inform "Frame buffer page created." 4

	$w add RtWizard::IntroPage "intro"
	$w enable "intro"
	$fb inform "Intro page created." 4

	$w add RtWizard::HelpPage "help"
	$w enable "help"
	$fb inform "Help page created" 4

	set ::exp [$w add RtWizard::ExamplePage "exp"]
	$w enable "exp"
	$fb inform "Example page created" 4

	#
	# Load the picture types into the example page.
	# It then forwards the info to the wizard for the 
	# radiobox in the "Image" menu. The "switch" for
	# the picture type is maintained by the ExamplePage
	# 
	$::exp addType RtWizard::PictureTypeA typeA
	$fb inform "Support for image type A loaded." 1

	$::exp addType RtWizard::PictureTypeB typeB
	$fb inform "Support for image type B loaded." 1

	$::exp addType RtWizard::PictureTypeC typeC
	$fb inform "Support for image type C loaded." 1

	$::exp addType RtWizard::PictureTypeD typeD
	$fb inform "Support for image type D loaded." 1

	$::exp addType RtWizard::PictureTypeE typeE
	$fb inform "Support for image type E loaded." 2

	$::exp addType RtWizard::PictureTypeF typeF
	$fb inform "Support for image type F loaded." 2

	#
	# XXX need to disable all menu options 
	#

	#
	# Pack the wizard
	#
	pack $w -expand 1 -fill both
	$fb inform "Megawidgets packed." 5

	#
	# Get the database name. If the name was specified on the 
	# command line, use it and proceed. Otherwise, spin up the 
	# gui, select the database page, and wait for the database
	# file to be specified.
	#
	if { [llength $args] > 0 } {
	    set ::RtWizard::dbFile [ lindex $args 0 ]
	    if { ! [file exists $::RtWizard::dbFile] } {
		set ::RtWizard::dbFile ""
	    }
	} 
	
	if { [string length $::RtWizard::dbFile] == 0 } {
	    #
	    # select the database page
	    # 
	    $w select "dbp"

	    #
	    # Hide the Feedback
	    #
	    wm iconify $fb

	    #
	    # Start up the gui, and run until the dbFile has
	    # be specified.
	    #
	    vwait ::RtWizard::dbFile

	    #
	    # Restore the Feedback
	    #
	    wm deiconify $fb
	}

	#
	# At this point, the database should be specified. 
	# We load the database ourselves and hand it to the 
	# pages.
	#
	set ::mgedObj [Mged .#auto $::RtWizard::dbFile]
	$::mgedObj configure -multi_pane 0
	$fb inform "MGED object instantiated." 40

	$w add RtWizard::FullColorPage fullColor $::RtWizard::dbFile
	$fb inform "Support for full color images loaded." 5

	$w add RtWizard::HighlightedPage highlighted $::RtWizard::dbFile
	$fb inform "Support for highlighted images loaded." 5

	$w add RtWizard::GhostPage ghost $::RtWizard::dbFile
	$fb inform "Support for ghost images loaded." 5

	$w add RtWizard::LinePage lines $::RtWizard::dbFile 
	$w select "exp"
	$fb inform "RtWizard ready!!." 5

	#
	# Pause...
	#
	after 1000
	$fb deactivate

	#
	# Go!
	#
	vwait forever
    }

}

#
# Start main
# 
RtWizard::main $argv














@


1.6
log
@*** empty log message ***
@
text
@@


1.5
log
@Windows now expand reasonably
@
text
@d32 1
a32 1
    package require Iwidgets 3.0
@


1.4
log
@-* Fixed a problem with BRLCAD_ROOT support.
@
text
@d148 1
a148 1
	pack $w
@


1.4.4.1
log
@sync branch with HEAD
@
text
@d32 1
a32 1
    package require Iwidgets
d148 1
a148 1
	pack $w -expand 1 -fill both
@


1.4.6.1
log
@sync to HEAD...
@
text
@d32 1
a32 1
    package require Iwidgets
d148 1
a148 1
	pack $w -expand 1 -fill both
@


1.3
log
@-* Removed a puts
@
text
@d2 1
a2 1
# Danube.tcl
d12 2
a13 2
if { [info exists env(BRLCAD_ROOT)] } {
    set rootDir $env(BRLCAD_ROOT)
@


1.2
log
@-* Mods to get RtWizard to install and run properly
@
text
@a20 1
puts $auto_path
@


1.1
log
@-* moved rtwizard files to brlcad/tclscripts
@
text
@d10 14
d228 2
@

