head	1.3;
access;
symbols
	ansi-20040405-merged:1.1.4.1
	postmerge-20040405-ansi:1.2
	premerge-20040404-ansi:1.2
	postmerge-autoconf:1.2
	autoconf-freeze:1.2
	premerge-autoconf:1.2
	postmerge-20040315-windows:1.2
	premerge-20040315-windows:1.2
	windows-20040315-freeze:1.1.6.1
	autoconf-20031203:1.2
	autoconf-20031202:1.2
	autoconf-branch:1.2.0.6
	phong-branch:1.2.0.4
	photonmap-branch:1.2.0.2
	rel-6-1-DP:1.1
	windows-branch:1.1.0.6
	rel-6-0-2:1.1
	ansi-branch:1.1.0.4
	rel-6-0-1-branch:1.1.0.2
	hartley-6-0-post:1.1
	hartley-6-0-pre:1.1
	rel-6-0-1:1.1;
locks; strict;
comment	@# @;


1.3
date	2004.05.21.16.41.47;	author morrison;	state dead;
branches;
next	1.2;

1.2
date	2003.03.13.19.45.34;	author jra;	state Exp;
branches;
next	1.1;

1.1
date	2002.07.08.17.27.54;	author rbowers;	state Exp;
branches
	1.1.4.1
	1.1.6.1;
next	;

1.1.4.1
date	2004.03.17.21.23.18;	author morrison;	state Exp;
branches;
next	;

1.1.6.1
date	2004.03.11.23.52.26;	author morrison;	state Exp;
branches;
next	;


desc
@@


1.3
log
@moved to src/tclscripts/
@
text
@#
# PictureTypeD.itcl
#
# This class defines the process necessary to build a BRL-CAD
# picture of Type "D". This is a full-color image mixed with a
# line drawing. This image type differs from Type C in that the
# objects rendered in the line drawing may differ from those 
# rendered in the full-color image.
#


#
# Required packages
#
package require Itcl
package require Itk
package require Iwidgets

namespace eval RtWizard {
  
    package require PictureTypeBase 1.0
    package provide PictureTypeD 1.0

    #
    # Required packages
    #

    # None!

    #
    # The PictureTypeD class supports making a mixed full-color and line
    # image.
    #
    ::itcl::class PictureTypeD {

	inherit ::RtWizard::PictureTypeBase
	public {
	    constructor {args} {
		PictureTypeBase::constructor $args
	    } {}

	    #
	    # Methods that impliment abstract base class methods.
	    # Unfortunately, I have to redeclare them here. 
	    #
	    method activate {}
	    method deactivate {}
	    method preview {}
	    method fullSize {}
	}

	private {
	    method makeImage {fb w h}

	    variable fp
	    variable lp
	}
    }

    #--------------------#
    #   Public Methods   #
    #--------------------#    
    #
    # activate - called when this picture type is selected.
    #
    itcl::body PictureTypeD::activate { } {
	#
	# Open a new steps menu
	#
	$::wizardInstance openSteps

	#
	# Update the introductory text
	#
	$::introInstance configure -greeting "$introText"

	#
	# Activate the pages that are necessary for this picture
	# type.
	#
	set fp [$::wizardInstance enable fullColor]
	set lp [$::wizardInstance enable lines]
	[$fp component useMe] select
    }

    #
    # deactivate - called when this picture type is deselected.
    #
    itcl::body PictureTypeD::deactivate { } {
	#
	# Deactivate the pages.
	#
	$::wizardInstance disable fullColor
	$::wizardInstance disable lines

	#
	# Close the current steps menu
	#
	$::wizardInstance closeSteps
    }

    #
    # preview - generates a 1/4 size preview image, limited to on-screen
    #
    itcl::body PictureTypeD::preview { } {
	#
	# get height and width
	#
	set w [$::fbp getWidth]
	set w2 [ expr $w / 2 ]

	set h [$::fbp getHeight]
	set h2 [ expr $h / 2 ]

	#	
	# get a framebuffer
	#
	set fb [$::fbp getFrameBuffer $w2 $h2 true]

	#
	# get occlusion mode
	#
	set occMode [$lp getOcclusionMode]

	#
	# Run rt
	#
	rtCmd $fp $fb $w2 $h2

	#
	# Run RtEdge
	#
	rtedgeCmd $lp $fb $w2 $h2 1 $occMode $fp
    }    
    
    #
    # fullSize - generates a fullSize picture.
    #
    itcl::body PictureTypeD::fullSize { } {
	#
	# get height and width
	#
	set w [$::fbp getWidth]
	set h [$::fbp getHeight]

	#	
	# get a framebuffer
	#
	set fb [$::fbp getFrameBuffer $w $h]

	#
	# get occlusion mode
	#
	set occMode [$lp getOcclusionMode]

	#
	# Run rt
	#
	rtCmd $fp $fb $w $h

	#
	# Run RtEdge
	#
	rtedgeCmd $lp $fb $w $h 1 $occMode $fp
    }
}; # end namespace
















@


1.2
log
@*** empty log message ***
@
text
@@


1.1
log
@-* moved rtwizard files to brlcad/tclscripts/rtwizard
@
text
@d17 1
a17 1
package require Iwidgets 3.0
@


1.1.4.1
log
@sync branch with HEAD
@
text
@d17 1
a17 1
package require Iwidgets
@


1.1.6.1
log
@sync to HEAD...
@
text
@d17 1
a17 1
package require Iwidgets
@


