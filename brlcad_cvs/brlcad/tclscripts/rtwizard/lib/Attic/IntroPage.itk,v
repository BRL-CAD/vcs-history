head	1.3;
access;
symbols
	ansi-20040405-merged:1.1.4.1
	postmerge-20040405-ansi:1.2
	premerge-20040404-ansi:1.2
	postmerge-autoconf:1.2
	autoconf-freeze:1.2
	premerge-autoconf:1.2
	postmerge-20040315-windows:1.2
	premerge-20040315-windows:1.2
	windows-20040315-freeze:1.1.6.1
	autoconf-20031203:1.2
	autoconf-20031202:1.2
	autoconf-branch:1.2.0.6
	phong-branch:1.2.0.4
	photonmap-branch:1.2.0.2
	rel-6-1-DP:1.1
	windows-branch:1.1.0.6
	rel-6-0-2:1.1
	ansi-branch:1.1.0.4
	rel-6-0-1-branch:1.1.0.2
	hartley-6-0-post:1.1
	hartley-6-0-pre:1.1
	rel-6-0-1:1.1;
locks; strict;
comment	@# @;


1.3
date	2004.05.21.16.41.45;	author morrison;	state dead;
branches;
next	1.2;

1.2
date	2003.03.13.19.45.33;	author jra;	state Exp;
branches;
next	1.1;

1.1
date	2002.07.08.17.27.54;	author rbowers;	state Exp;
branches
	1.1.4.1
	1.1.6.1;
next	;

1.1.4.1
date	2004.03.17.21.23.17;	author morrison;	state Exp;
branches;
next	;

1.1.6.1
date	2004.03.11.23.52.26;	author morrison;	state Exp;
branches;
next	;


desc
@@


1.3
log
@moved to src/tclscripts/
@
text
@#
# IntroPage.itk
#
# This file provides a page that can be used for providing a general
# overview of the picture making process.
#


package require Itcl
package require Itk
package require Iwidgets

namespace eval RtWizard {

    package provide IntroPage 1.0

    #
    # intropage - Provides a lowercased access method for the 
    #             IntroPage class
    #
    proc intropage {pathName args} {
	uplevel IntroPage $pathName $args
    }

    #
    # Add options
    # 
    option add *IntroPage.borderWidth 2 widgetDefault
    option add *IntroPage.labelPos wn widgetDefault
    option add *IntroPage.listHeight 150 widgetDefault
    option add *IntroPage.hscrollMode dynamic widgetDefault
    option add *IntroPage.vscrollMode dynamic widgetDefault
    option add *IntroPage.textBackground #ccccff

    #
    # Define the usual options
    #
    ::itk::usual IntroPage {
	keep    -background \
		-borderwidth \
		-cursor \
		-elementborderwidth \
		-foreground \
		-highlightcolor \
		-highlightthickness \
		-insertbackground \
		-insertborderwidth \
		-insertofftime \
		-insertontime \
		-insertwidth \
		-jump \
		-labelfont \
		-selectbackground \
		-selectborderwidth \
		-textbackground \
		-textfont \
		-troughcolor \
		-stepName
    }

    #
    # IntroPage
    #
    # The intropage holds helpful text
    #

    #
    # Use the singleton pattern to allow the picture types to 
    # easily change the greeting text.
    # 
    set ::introInstance ""

    ::itcl::class IntroPage {
	inherit ::iwidgets::Labeledwidget

	#
	# Configuration variables
	#

	itk_option define -greeting greeting Greeting \
		"Welcome to the RtWizard."

	public {
	    #
	    # methods
	    #
	    constructor {args} {};
	    
	    method onSelect {}
	    method onDeselect {}
	    method getStepInfo {}
	}

 
	private {
	    #
	    # methods
	    #
	    
	    #
	    # variables
	    #
	}
    }

    #--------------------#
    #   Public Methods   #
    #--------------------#    
    #
    # constructor - builds the Intro Page
    #
    ::itcl::body IntroPage::constructor {args} {

	global introInstance

	if { [string length $introInstance] > 0 } {
	    error "Can not instantiate a second IntroPage object."
	}

	#
	# Set up the childsite
	#
	set cs [ $this childsite ]
	$cs configure -relief groove -bd 2

	#
	# Splat instructive text.
	#
	itk_component add greetPanel {
	    ::iwidgets::scrolledtext $cs.gp \
		    -vscrollmode dynamic \
		    -hscrollmode dynamic \
		    -wrap word \
		    -visibleitems 75x30 \
		    -textfont {helvetica 10 bold} \
		    -relief sunken
	    
	} {
	    usual
	    ignore -textfont
	}
	
	# Next
	itk_component add next {
	    button $cs.next \
		    -text Next \
		    -width 8 \
		    -command "[itcl::code $this goNext]" 
	} {
	    usual
	}

	#
	# Pack it!
	#
	pack $itk_component(greetPanel) -anchor w -fill both -expand 1
	
	#
	# Evaluate any additional args.
	#
	eval itk_initialize $args

	set introInstance $this
    }
    
    #
    # greeting
    #
    ::itcl::configbody IntroPage::greeting {
	$itk_component(greetPanel) configure -state normal
	$itk_component(greetPanel) clear
	$itk_component(greetPanel) insert end [cget -greeting]
	$itk_component(greetPanel) configure -state disabled
    }

    #
    # onSelect
    #
    # Makes any necessary changes to the Wizard configuration
    # when this page is selected.
    #
    ::itcl::body IntroPage::onSelect {} {
	#
	# Nothing yet!
	#
    }

    #
    # onDeselect
    #
    # Cleans up when the page is deselected
    #
    ::itcl::body IntroPage::onDeselect {} {	
	#
	# Nothing yet!
	#
    }

    #
    # getStepInfo
    #
    # In principal, returns a name for the step, and a variable that
    # can be queried for state. The Intro page is not a 'step', 
    # so it returns "No Step"
    #
    ::itcl::body IntroPage::getStepInfo {} {
	set a "No Step"
	set b "banana"
	return [list $a $b]
    }

    #--------------------#
    #  Private Methods   #
    #--------------------#    

}
#end namespace



@


1.2
log
@*** empty log message ***
@
text
@@


1.1
log
@-* moved rtwizard files to brlcad/tclscripts/rtwizard
@
text
@d11 1
a11 1
package require Iwidgets 3.0
@


1.1.4.1
log
@sync branch with HEAD
@
text
@d11 1
a11 1
package require Iwidgets
@


1.1.6.1
log
@sync to HEAD...
@
text
@d11 1
a11 1
package require Iwidgets
@


