head	1.2;
access;
symbols
	ansi-20040405-merged:1.1.6.1
	postmerge-20040405-ansi:1.1
	premerge-20040404-ansi:1.1
	postmerge-autoconf:1.1
	autoconf-freeze:1.1.4.1
	premerge-autoconf:1.1
	postmerge-20040315-windows:1.1
	premerge-20040315-windows:1.1
	windows-20040315-freeze:1.1.2.1
	autoconf-branch:1.1.0.4
	windows-branch:1.1.0.2
	ansi-branch:1.1.0.6;
locks; strict;
comment	@# @;


1.2
date	2004.05.21.18.05.55;	author morrison;	state dead;
branches;
next	1.1;

1.1
date	2004.03.09.20.48.58;	author morrison;	state Exp;
branches
	1.1.2.1
	1.1.4.1
	1.1.6.1;
next	;

1.1.2.1
date	2004.03.12.09.57.57;	author morrison;	state Exp;
branches;
next	;

1.1.4.1
date	2004.03.15.14.06.37;	author erikg;	state Exp;
branches;
next	;

1.1.6.1
date	2004.03.17.21.17.38;	author morrison;	state Exp;
branches;
next	;


desc
@@


1.2
log
@moved from top-level to src/other/.
@
text
@#
# Tests for "local" command for creating objects local to a proc
# ----------------------------------------------------------------------
#   AUTHOR:  Michael J. McLennan
#            Bell Labs Innovations for Lucent Technologies
#            mmclennan@@lucent.com
#            http://www.tcltk.com/itcl
#
#      RCS:  $Id: local.test,v 1.1 2004/03/09 20:48:58 morrison Exp $
# ----------------------------------------------------------------------
#            Copyright (c) 1993-1998  Lucent Technologies, Inc.
# ======================================================================
# See the file "license.terms" for information on usage and
# redistribution of this file, and for a DISCLAIMER OF ALL WARRANTIES.

if {[lsearch [namespace children] ::tcltest] == -1} {
    package require tcltest 2.1
    namespace import -force ::tcltest::test
}

::tcltest::loadTestedCommands

# ----------------------------------------------------------------------
#  Test "local" to create objects that only exist within a proc
# ----------------------------------------------------------------------
test local-1.1 {define a class to use for testing} {
    itcl::class test_local {
        common status ""
        constructor {} {
            lappend status "created $this"
        }
        destructor {
            lappend status "deleted $this"
        }
        proc clear {} {
            set status ""
        }
        proc check {} {
            return $status
        }
        proc test {} {
            itcl::local test_local #auto
            lappend status "processing"
        }
        proc test2 {} {
            itcl::local test_local #auto
            lappend status "call test..."
            test
            lappend status "...back"
        }
    }
    test_local #auto
} {test_local0}

test local-1.2 {} {
    test_local::clear
    test_local::test
    test_local::check
} {{created ::test_local::test_local1} processing {deleted ::test_local::test_local1}}

test local-1.3 {} {
    test_local::clear
    test_local::test2
    test_local::check
} {{created ::test_local::test_local2} {call test...} {created ::test_local::test_local3} processing {deleted ::test_local::test_local3} ...back {deleted ::test_local::test_local2}}

test local-1.4 {} {
    itcl::find objects -isa test_local
} {test_local0}

itcl::delete class test_local

::tcltest::cleanupTests
return
@


1.1
log
@initial addition of libitcl synced to current itcl cvs (3.3 development)
@
text
@d9 1
a9 1
#      RCS:  $Id: local.test,v 1.4 2004/02/12 18:09:50 davygrvy Exp $
@


1.1.6.1
log
@sync branch with HEAD
@
text
@d9 1
a9 1
#      RCS:  $Id$
@


1.1.4.1
log
@merge from head
@
text
@d9 1
a9 1
#      RCS:  $Id: local.test,v 1.1 2004/03/09 20:48:58 morrison Exp $
@


1.1.2.1
log
@merge from HEAD
@
text
@d9 1
a9 1
#      RCS:  $Id$
@

