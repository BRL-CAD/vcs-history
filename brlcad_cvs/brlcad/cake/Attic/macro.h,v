head	11.2;
access;
symbols
	ansi-20040405-merged:11.1
	premerge-autoconf:11.1
	ansi-20040316-freeze:11.1
	postmerge-20040315-windows:11.1
	premerge-20040315-windows:11.1
	windows-20040315-freeze:11.1
	autoconf-20031203:11.1
	autoconf-20031202:11.1
	phong-branch:11.1.0.12
	photonmap-branch:11.1.0.10
	rel-6-1-DP:11.1
	windows-branch:11.1.0.8
	rel-6-0-2:11.1
	ansi-branch:11.1.0.6
	rel-6-0-1-branch:11.1.0.4
	hartley-6-0-post:11.1
	hartley-6-0-pre:11.1
	rel-6-0-1:11.1
	rel-6-0:11.1
	rel-5-4:11.1
	offsite-5-3-pre:11.1
	rel-5-3:11.1
	rel-5-2:11.1
	rel-5-1-branch:11.1.0.2
	rel-5-1:11.1
	rel-5-0:11.1
	rel-5-0-beta:11.1
	rel-4-5:11.1
	ctj-4-5-post:11.1
	ctj-4-5-pre:11.1
	rel-4-4:1.2
	rel-4-0:1.1
	rel-3-5:1.1
	rel-3-0:1.1
	AUTOCONF:11.1.0.14;
locks; strict;
comment	@ * @;


11.2
date	2004.03.18.18.15.14;	author erikg;	state dead;
branches;
next	11.1;

11.1
date	95.01.05.05.59.59;	author mike;	state Rel4_4;
branches
	11.1.14.1;
next	1.2;

1.2
date	93.11.04.18.42.03;	author mike;	state Exp;
branches;
next	1.1;

1.1
date	88.06.11.00.55.59;	author mike;	state Original;
branches;
next	;

11.1.14.1
date	2004.03.18.18.10.24;	author erikg;	state dead;
branches;
next	;


desc
@cake
@


11.2
log
@merge of AUTOCONF branch in to HEAD
@
text
@/*
**	Common macros for Cake
**
**	$Header: /cvs/brlcad/cake/macro.h,v 11.1 1995/01/05 05:59:59 mike Rel4_4 $
*/

/* XXX Ugh, these macros should be upper case */

#define	checkpatlen(p)	if (strlen(p) > (unsigned)MAXPATSIZE) \
			printf("Pattern %s too long\n", p), exit_cake(FALSE)
#define	cdebug		if (cakedebug) printf

#ifndef	CAKEDEBUG
#define	put_trail(func, event)
#define	get_trail(fp)
#endif

/*	Flag handling				*/

#define	on_node(n, f)		((n)->n_flag & (f))
#define	off_node(n, f)		(!((n)->n_flag & (f)))
#define	set_node(n, f)		(n)->n_flag |= (f)
#define	reset_node(n, f)	(n)->n_flag &= ~(f)

#define	on_pat(p, f)		((p)->p_flag & (f))
#define	off_pat(p, f)		(!((p)->p_flag & (f)))
#define	set_pat(p, f)		(p)->p_flag |= (f)
#define	reset_pat(p, f)		(p)->p_flag &= ~(f)

#define	on_act(a, f)		((a)->a_flag & (f))
#define	off_act(a, f)		(!((a)->a_flag & (f)))
#define	set_act(a, f)		(a)->a_flag |= (f)
#define	reset_act(a, f)		(a)->a_flag &= ~(f)

#define	is_ok(n)		((n)->n_kind == n_OK)
#define	is_cando(n)		((n)->n_kind == n_CANDO)
#define	is_noway(n)		((n)->n_kind == n_NOWAY)
@


11.1
log
@Release_4_4
@
text
@d4 1
a4 1
**	$Header: /m/cad/cake/RCS/macro.h,v 1.2 93/11/04 18:42:03 mike Exp $
@


11.1.14.1
log
@merge from head
@
text
@d4 1
a4 1
**	$Header: /cvs/brlcad/cake/macro.h,v 11.1 1995/01/05 05:59:59 mike Rel4_4 $
@


1.2
log
@ANSI C
@
text
@d4 1
a4 1
**	$Header: /m/cad/cake/RCS/macro.h,v 1.1 88/06/11 00:55:59 mike Original Locker: mike $
@


1.1
log
@Original CAKE version from net.sources
@
text
@d4 1
a4 1
**	$Header: /mip/zs/src/sys/cake/RCS/macro.h,v 1.15 87/10/05 20:14:48 zs Exp $
d7 3
a9 1
#define	checkpatlen(p)	if (strlen(p) > MAXPATSIZE) \
@
