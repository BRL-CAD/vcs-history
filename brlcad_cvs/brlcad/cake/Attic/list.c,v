head	11.3;
access;
symbols
	ansi-20040405-merged:11.2
	premerge-autoconf:11.2
	ansi-20040316-freeze:11.2
	postmerge-20040315-windows:11.2
	premerge-20040315-windows:11.2
	windows-20040315-freeze:11.2
	autoconf-20031203:11.2
	autoconf-20031202:11.2
	phong-branch:11.2.0.12
	photonmap-branch:11.2.0.10
	rel-6-1-DP:11.2
	windows-branch:11.2.0.8
	rel-6-0-2:11.2
	ansi-branch:11.2.0.6
	rel-6-0-1-branch:11.2.0.4
	hartley-6-0-post:11.2
	hartley-6-0-pre:11.2
	rel-6-0-1:11.2
	rel-6-0:11.2
	rel-5-4:11.2
	offsite-5-3-pre:11.2
	rel-5-3:11.2
	rel-5-2:11.2
	rel-5-1-branch:11.2.0.2
	rel-5-1:11.2
	rel-5-0:11.2
	rel-5-0-beta:11.2
	rel-4-5:11.2
	ctj-4-5-post:11.2
	ctj-4-5-pre:11.2
	rel-4-4:1.1
	rel-4-0:1.1
	rel-3-5:1.1
	rel-3-0:1.1
	AUTOCONF:11.2.0.14;
locks; strict;
comment	@ * @;


11.3
date	2004.03.18.18.15.14;	author erikg;	state dead;
branches;
next	11.2;

11.2
date	97.05.22.16.57.55;	author mike;	state Exp;
branches
	11.2.14.1;
next	11.1;

11.1
date	95.01.05.06.00.06;	author mike;	state Rel4_4;
branches;
next	1.1;

1.1
date	88.06.11.00.55.57;	author mike;	state Original;
branches;
next	;

11.2.14.1
date	2004.03.18.18.10.24;	author erikg;	state dead;
branches;
next	;


desc
@cake
@


11.3
log
@merge of AUTOCONF branch in to HEAD
@
text
@/*
**	Linked list module.
*/

static	char
rcs_id[] = "$Header: /cvs/brlcad/cake/list.c,v 11.2 1997/05/22 16:57:55 mike Exp $";

#include	"cake.h"

/*
**	Make an empty list.
*/

List *
makelist0()
{
	reg	List	*list;

	list = make(List);
	ldata(list) = (Cast) 0;
	next(list)  = list;
	prev(list)  = list;
	
	return list;
}

/*
**	Make a list with the argument is its only element.
*/

List *
_makelist(data)
reg	Cast	data;
{
	return addhead(makelist0(), data);
}

/*
**	Add some data to the head of a list.
*/

List *
_addhead(list, data)
reg	List	*list;
reg	Cast	data;
{
	reg	List	*item;

	if (list == NULL)
		list = makelist0();

	item = make(List);
	ldata(item) = data;
	ldata(list) = (Cast) ((int) ldata(list) + 1);

	/* item's pointers	*/
	next(item) = next(list);
	prev(item) = list;
	/* neighbours' pointers	*/
	next(prev(item)) = item;
	prev(next(item)) = item;

	return list;
}

/*
**	Add some data to the tail of a list.
*/

List *
_addtail(list, data)
reg	List	*list;
reg	Cast	data;
{
	reg	List	*item;

	if (list == NULL)
		list = makelist0();

	item = make(List);
	ldata(item) = data;
	ldata(list) = (Cast) ((int) ldata(list) + 1);

	/* item's pointers	*/
	next(item) = list;
	prev(item) = prev(list);
	/* neighbours' pointers	*/
	next(prev(item)) = item;
	prev(next(item)) = item;

	return list;
}

/*
**	Destructively append list2 to list1. Since the header of
**	list2 is not meaningful after the operation, it is freed.
*/

List *
addlist(list1, list2)
reg	List	*list1;
reg	List	*list2;
{
	if (list1 == NULL)
		list1 = makelist0();

	if (list2 == NULL)
		list2 = makelist0();

	if (length(list2) > 0)
	{
		if (length(list1) == 0)
		{
			ldata(list1) = ldata(list2);
			/* pointers from header	*/
			next(list1)  = next(list2);
			prev(list1)  = prev(list2);
			/* pointers to header	*/
			prev(next(list1)) = list1;
			next(prev(list1)) = list1;
		}
		else
		{
			ldata(list1) = (Cast) ((int) ldata(list1) + (int) ldata(list2));
			/* end of list 1 to start of list 2	*/
			next(prev(list1)) = next(list2);
			prev(next(list2)) = prev(list1);
			/* end of list 2 to start of list 1	*/
			next(prev(list2)) = list1;
			prev(list1) = prev(list2);
		}
	}

	oldmem((Cast) list2);
	return list1;
}

/*
**	Return the length of a given list.
*/

int
length(list)
reg	List	*list;
{
	if (list == NULL)
		return 0;

	return (int) ldata(list);
}

/*
**	Delete an item from its linked list, and free the node.
*/
void
delete(list, item)
reg	List	*list;
reg	List	*item;
{
	if (list == NULL)
		return;

	if (item == NULL)
		return;

	ldata(list) = (Cast) ((int) ldata(list) - 1);
	next(prev(item)) = next(item);
	prev(next(item)) = prev(item);

	oldmem((Cast) item);
}
@


11.2
log
@Added (void) declarations for IRIX 6 compiler.
@
text
@d6 1
a6 1
rcs_id[] = "$Header: /m/cad/cake/RCS/list.c,v 11.1 1995/01/05 06:00:06 mike Rel4_4 mike $";
@


11.2.14.1
log
@merge from head
@
text
@d6 1
a6 1
rcs_id[] = "$Header: /cvs/brlcad/cake/list.c,v 11.2 1997/05/22 16:57:55 mike Exp $";
@


11.1
log
@Release_4_4
@
text
@d6 1
a6 1
rcs_id[] = "$Header: /m/cad/cake/RCS/list.c,v 1.1 88/06/11 00:55:57 mike Original $";
d155 1
a155 1

@


1.1
log
@Original CAKE version from net.sources
@
text
@d6 1
a6 1
rcs_id[] = "$Header: /mip/zs/src/sys/cake/RCS/list.c,v 1.14 86/07/19 12:23:15 zs Exp $";
@
