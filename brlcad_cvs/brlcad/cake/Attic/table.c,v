head	11.3;
access;
symbols
	ansi-20040405-merged:11.2
	premerge-autoconf:11.2
	ansi-20040316-freeze:11.2
	postmerge-20040315-windows:11.2
	premerge-20040315-windows:11.2
	windows-20040315-freeze:11.2
	autoconf-20031203:11.2
	autoconf-20031202:11.2
	phong-branch:11.2.0.12
	photonmap-branch:11.2.0.10
	rel-6-1-DP:11.2
	windows-branch:11.2.0.8
	rel-6-0-2:11.2
	ansi-branch:11.2.0.6
	rel-6-0-1-branch:11.2.0.4
	hartley-6-0-post:11.2
	hartley-6-0-pre:11.2
	rel-6-0-1:11.2
	rel-6-0:11.2
	rel-5-4:11.2
	offsite-5-3-pre:11.2
	rel-5-3:11.2
	rel-5-2:11.2
	rel-5-1-branch:11.2.0.2
	rel-5-1:11.2
	rel-5-0:11.2
	rel-5-0-beta:11.2
	rel-4-5:11.2
	ctj-4-5-post:11.2
	ctj-4-5-pre:11.2
	rel-4-4:1.3
	rel-4-0:1.2
	rel-3-5:1.2
	rel-3-0:1.2
	AUTOCONF:11.2.0.14;
locks; strict;
comment	@ * @;


11.3
date	2004.03.18.18.15.14;	author erikg;	state dead;
branches;
next	11.2;

11.2
date	97.05.22.16.57.55;	author mike;	state Exp;
branches
	11.2.14.1;
next	11.1;

11.1
date	95.01.05.06.00.11;	author mike;	state Rel4_4;
branches;
next	1.3;

1.3
date	94.12.07.16.58.22;	author mike;	state Exp;
branches;
next	1.2;

1.2
date	88.07.19.01.46.34;	author mike;	state Exp;
branches;
next	1.1;

1.1
date	88.06.11.00.56.28;	author mike;	state Original;
branches;
next	;

11.2.14.1
date	2004.03.18.18.10.24;	author erikg;	state dead;
branches;
next	;


desc
@cake source file 
@


11.3
log
@merge of AUTOCONF branch in to HEAD
@
text
@/*
**	Table handling module.
**
**	This file supplies data manipulation routines to other modules;
**	it does not store any data itself. Its routines are generic,
**	applicable to the storage of any kind of data structure with
**	primary key and a hash function on it.
*/

static	char
rcs_id[] = "$Header: /cvs/brlcad/cake/table.c,v 11.2 1997/05/22 16:57:55 mike Exp $";

#include	"cake.h"

/*
**	Initialize a table.
*/
void
_init_table(table)
reg	Table	*table;
{
	reg	int	i;

	table->ta_store = make_many(List *, table->ta_size);
	for (i = 0; i < table->ta_size; i++)
		table->ta_store[i] = NULL;
}

/*
**	Look up and return the entry corresponding to the key
**	in a table.
*/

Cast
_lookup_table(table, key)
reg	Table	*table;
reg	Cast	key;
{
	reg	List	*ptr;
	reg	int	h;

	put_trail("lookup_table", "start");
	h = tablehash(table)(key);
	for_list (ptr, table->ta_store[h])
	{
		if (tableequal(table)(key, tablekey(table)(ldata(ptr))))
		{
#ifdef	EXTRACHECK
			if (ldata(ptr) == NULL)
			{
				fprintf(stderr, "cake internal error: returning null in lookup_table\n");
				exit_cake(TRUE);
			}
#endif
			put_trail("lookup_table", "finish");
			return ldata(ptr);
		}
	}

	put_trail("lookup_table", "finish");
	return (Cast)NULL;
}

/*
**	Insert a new entry into the table.
**	Return whether it was there before.
*/

bool
_insert_table(table, entry)
reg	Table	*table;
reg	Cast	entry;
{
	reg	List	*ptr;
	reg	Cast	key;
	reg	int	h;

	put_trail("insert_table", "start");
	key = tablekey(table)(entry);
	h   = tablehash(table)(key);
	for_list (ptr, table->ta_store[h])
		if (tableequal(table)(key, tablekey(table)(ldata(ptr))))
		{
			put_trail("insert_table", "finish");
			return TRUE;
		}

	table->ta_store[h] = addhead(table->ta_store[h], entry);
	put_trail("insert_table", "finish");
	return FALSE;
}

/*
**	Hash str into the range 0 to SIZE-1.
*/

int
hash(s)
reg	char	*s;
{
#ifdef CRAY
	reg	long	h;
#else
	reg	int	h;
#endif

	for (h = 0; *s != '\0'; s++)
		h = (h << 1) + *s;

	h = (h >= 0? h: -h) % SIZE;
	if( h < 0 || h > SIZE )  {
		fprintf(stderr, "cake: hash error, h=%d\n", h);	/* BRL */
	}
	return h;
}

/*
**	Return a list of all the entries in a table.
*/

List *
_contents_table(table)
reg	Table	*table;
{
	reg	List	*all;
	reg	List	*ptr;
	reg	int	i;

	all = makelist0();
	for (i = 0; i < table->ta_size; i++)
		for_list (ptr, table->ta_store[i])
			addtail(all, ldata(ptr));	/* na */

	return all;
}
@


11.2
log
@Added (void) declarations for IRIX 6 compiler.
@
text
@d11 1
a11 1
rcs_id[] = "$Header: /m/cad/cake/RCS/table.c,v 11.1 1995/01/05 06:00:11 mike Rel4_4 mike $";
@


11.2.14.1
log
@merge from head
@
text
@d11 1
a11 1
rcs_id[] = "$Header: /cvs/brlcad/cake/table.c,v 11.2 1997/05/22 16:57:55 mike Exp $";
@


11.1
log
@Release_4_4
@
text
@d11 1
a11 1
rcs_id[] = "$Header: /m/cad/cake/RCS/table.c,v 1.3 94/12/07 16:58:22 mike Exp $";
d18 1
a18 1

@


1.3
log
@GCC
@
text
@d11 1
a11 1
rcs_id[] = "$Header: /m/cad/cake/RCS/table.c,v 1.2 88/07/19 01:46:34 mike Exp Locker: mike $";
@


1.2
log
@Fix for Cray
@
text
@d11 1
a11 1
rcs_id[] = "$Header: table.c,v 1.1 88/06/11 00:56:28 mike Locked $";
d61 1
a61 1
	return NULL;
@


1.1
log
@Original CAKE version from net.sources
@
text
@d11 1
a11 1
rcs_id[] = "$Header: /mip/zs/src/sys/cake/RCS/table.c,v 1.15 87/10/05 20:16:28 zs Exp $";
d101 3
d105 1
d110 5
a114 1
	return (h >= 0? h: -h) % SIZE;
@
