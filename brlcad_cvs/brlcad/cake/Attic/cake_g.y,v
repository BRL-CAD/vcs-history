head	11.4;
access;
symbols
	ansi-20040405-merged:11.2.6.1
	premerge-autoconf:11.3
	ansi-20040316-freeze:11.2
	postmerge-20040315-windows:11.3
	premerge-20040315-windows:11.3
	windows-20040315-freeze:11.2.8.1
	autoconf-20031203:11.3
	autoconf-20031202:11.3
	phong-branch:11.3.0.4
	photonmap-branch:11.3.0.2
	rel-6-1-DP:11.3
	windows-branch:11.2.0.8
	rel-6-0-2:11.2
	ansi-branch:11.2.0.6
	rel-6-0-1-branch:11.2.0.4
	hartley-6-0-post:11.2
	hartley-6-0-pre:11.2
	rel-6-0-1:11.2
	rel-6-0:11.2
	rel-5-4:11.2
	offsite-5-3-pre:11.2
	rel-5-3:11.2
	rel-5-2:11.2
	rel-5-1-branch:11.2.0.2
	rel-5-1:11.2
	rel-5-0:11.2
	rel-5-0-beta:11.2
	rel-4-5:11.2
	ctj-4-5-post:11.2
	ctj-4-5-pre:11.2
	rel-4-4:1.1
	rel-4-0:1.1
	rel-3-5:1.1
	rel-3-0:1.1
	AUTOCONF:11.3.0.6;
locks; strict;
comment	@ * @;


11.4
date	2004.03.18.18.15.14;	author erikg;	state dead;
branches;
next	11.3;

11.3
date	2002.10.11.08.30.55;	author kermit;	state Exp;
branches
	11.3.6.1;
next	11.2;

11.2
date	97.08.18.20.02.25;	author jra;	state Exp;
branches
	11.2.6.1
	11.2.8.1;
next	11.1;

11.1
date	95.01.05.06.02.10;	author mike;	state Rel4_4;
branches;
next	1.1;

1.1
date	88.06.11.00.55.42;	author mike;	state Original;
branches;
next	;

11.2.6.1
date	2004.03.17.21.15.52;	author morrison;	state Exp;
branches;
next	;

11.2.8.1
date	2004.03.11.23.40.27;	author morrison;	state Exp;
branches;
next	;

11.3.6.1
date	2004.03.18.18.10.24;	author erikg;	state dead;
branches;
next	;


desc
@cake
@


11.4
log
@merge of AUTOCONF branch in to HEAD
@
text
@%{
/*
**	Grammar for Cakefiles
*/

static	char
rcs_id[] = "$Header: /cvs/brlcad/cake/cake_g.y,v 11.3 2002/10/11 08:30:55 kermit Exp $";

#include	"cake.h"
#include	<ctype.h>

extern	List	*set_flag();
extern	int	yylineno;
extern	char	*yyfile;
%}

%start		file

%union
{
	int	Uint;
	char	*Ustr;
	List	*Ulist;
	Entry	*Uent;
	Test	*Utest;
	Act	*Uact;
	Pat	*Upat;
}

%token		NL EMPTYLINE
%token		NONVOL PRECIOUS REDUNDANT PSEUDO WHEN
%token		IF IN MATCH EXIST CANDO OK
%token		LPAREN RPAREN
%token	<Ustr>	COLON PAT PATCMD TESTCMD
%token	<Uact>	BEGIN_ACT ACT END_ACT
%token		GARBAGE
%left		OR
%left		AND
%left		NOT

%type	<Uent>	rule
%type	<Utest>	cond test
%type	<Upat>	basepat
%type	<Uact>	act
%type	<Uint>	flag flag_el
%type	<Ulist>	pat
%type	<Ulist>	rule_l ACT_el act_el pat_el pat_l

%%

/**********************************************************************/
/*		Entries						      */

file	:	empty_el ent_esl empty_el
	;

entry	:	rule_l act_el
		{	new_entry($1, $2);		}
	;

rule	:	pat_l COLON pat_el cond NL
		{	$$ = make_dep($1, $3, $4, new_name(yyfile), $2);	}
	;

cond	:	IF test
		{	$$ = $2;			}
	|	/* empty */
		{	$$ = (Test *) NULL;		}
	;

test	:	basepat IN pat_l
		{	$$ = make_test_l($1, $3);	}
	|	basepat MATCH basepat
		{	$$ = make_test_m($1, (Pat *) NULL, $3);}
	|	basepat MATCH basepat basepat
		{	$$ = make_test_m($1, $3, $4);	}
	|	EXIST basepat
		{	$$ = make_test_s(t_EXIST, $2);	}
	|	CANDO basepat
		{	$$ = make_test_s(t_CANDO, $2);	}
	|	OK basepat
		{	$$ = make_test_s(t_OK, $2);	}
	|	TESTCMD
		{	$$ = make_test_c($1);		}
	|	test AND test
		{	$$ = make_test_b(t_AND, $1, $3);}
	|	test OR test
		{	$$ = make_test_b(t_OR, $1, $3);	}
	|	NOT test
		{	$$ = make_test_u(t_NOT, $2);	}
	|	LPAREN test RPAREN
		{	$$ = $2;			}
	;

act	:	ACT
		{	$$ = $1;			}
	|	BEGIN_ACT ACT_el END_ACT
		{	$$ = prep_script($1, $2, $3);	}
	;

basepat	:	PAT
		{	$$ = make_pat($1, FALSE, 0);	}
	|	PATCMD
		{	$$ = make_pat($1, TRUE, 0);	}
	;

pat	:	basepat flag_el
		{	$$ = set_flag(makelist($1), $2);}
	|	LPAREN pat_l RPAREN flag_el
		{	$$ = set_flag($2, $4);		}
	;

flag	:	NONVOL
		{	$$ = nf_NONVOL;			}
	|	PRECIOUS
		{	$$ = nf_PRECIOUS;		}
	|	REDUNDANT
		{	$$ = nf_REDUNDANT;		}
	|	PSEUDO
		{	$$ = nf_PSEUDO;			}
	|	WHEN
		{	$$ = nf_WHEN;			}
	;

/* From here on, the grammar is JUNK				      */
/**********************************************************************/
/*		Lists						      */

ent_esl	:	entry
	|	ent_esl empty_l entry
	;

rule_l	:	rule
		{	$$ = makelist($1);		}
	|	rule_l rule
		{	$$ = addtail($1, $2);		}
	;

ACT_el	:	/* empty */
		{	$$ = makelist0();		}
	|	ACT_el ACT
		{	$$ = addtail($1, $2);		}
	;

act_el	:	/* empty */
		{	$$ = makelist0();		}
	|	act_el act
		{	$$ = addtail($1, $2);		}
	;

pat_el	:	/* empty */
		{	$$ = makelist0();		}
	|	pat_l
		{	$$ = $1;			}
	;

pat_l	:	pat
		{	$$ = $1;			}
	|	pat_l pat
		{	$$ = addlist($1, $2);		}
	;

flag_el	:	/* empty */
		{	$$ = 0;				}
	|	flag_el flag
		{	$$ = $1 | $2;			}
	;

empty_el:	/* empty */
	|	empty_l
	;

empty_l	:	EMPTYLINE
	|	empty_l EMPTYLINE
	;

%%

int
yyerror(s)
char	*s;
{
	extern	int	yyleng;
	extern	char	yytext[];
	char		buf[80];

	if (yychar <= 0)
	{
		sprintf(buf, "premature EOF");
		yylineno--;
	}
	or (yytext[0] == '\n' || yytext[0] == '\f')
		sprintf(buf, "%s at end of line", s);
	or (isprint(yytext[0]))
		sprintf(buf, "%s at symbol %s", s, yytext);
	else
		sprintf(buf, "%s at \\%o", s, yytext[0]);
	
	if (cakedebug)
		printf("%s, %d: %s, token %d\n", yyfile, yylineno, buf, yychar);
	else
		printf("%s, %d: %s\n", yyfile, yylineno, buf);
}
@


11.3
log
@Added initial support for IBM SP "Scalable Parallel" system running AIX.
Static build fully functional, still needs more work on shared build.
OpenGL support works, but there are issues communicatiing with mged.
@
text
@d7 1
a7 1
rcs_id[] = "$Header: /c/CVS/brlcad/cake/cake_g.y,v 11.2 1997/08/18 20:02:25 jra Exp $";
@


11.3.6.1
log
@merge from head
@
text
@d7 1
a7 1
rcs_id[] = "$Header: /cvs/brlcad/cake/cake_g.y,v 11.3 2002/10/11 08:30:55 kermit Exp $";
@


11.2
log
@Minor mod for IRIX 6.4
@
text
@d7 1
a7 1
rcs_id[] = "$Header: /m/cad/cake/RCS/cake_g.y,v 11.1 1995/01/05 06:02:10 mike Rel4_4 jra $";
d179 1
a179 1
void
@


11.2.6.1
log
@sync branch with HEAD
@
text
@d7 1
a7 1
rcs_id[] = "$Header$";
d179 1
a179 1
int
@


11.2.8.1
log
@sync to HEAD...
@
text
@d7 1
a7 1
rcs_id[] = "$Header: /n/cad/c/CVS/brlcad/cake/cake_g.y,v 11.3 2002/10/11 08:30:55 kermit Exp $";
d179 1
a179 1
int
@


11.1
log
@Release_4_4
@
text
@d7 1
a7 1
rcs_id[] = "$Header: /n/spark/m/cad/cake/RCS/cake_g.y,v 1.1 88/06/11 00:55:42 mike Original $";
d179 1
@


1.1
log
@Original CAKE version from net.sources
@
text
@d7 1
a7 1
rcs_id[] = "$Header: /mip/zs/src/sys/cake/RCS/cake_g.y,v 1.15 87/10/05 20:13:45 zs Exp $";
@
