head	1.23;
access;
symbols
	ansi-20040405-merged:1.22
	postmerge-20040405-ansi:1.22
	premerge-20040404-ansi:1.22
	postmerge-autoconf:1.22
	autoconf-freeze:1.22
	premerge-autoconf:1.22
	postmerge-20040315-windows:1.22
	premerge-20040315-windows:1.22
	windows-20040315-freeze:1.22
	autoconf-20031203:1.22
	autoconf-20031202:1.22
	autoconf-branch:1.22.0.14
	phong-branch:1.22.0.12
	photonmap-branch:1.22.0.10
	rel-6-1-DP:1.22
	windows-branch:1.22.0.8
	rel-6-0-2:1.22
	ansi-branch:1.22.0.6
	rel-6-0-1-branch:1.22.0.4
	hartley-6-0-post:1.22
	hartley-6-0-pre:1.22
	rel-6-0-1:1.22
	rel-6-0:1.22
	rel-5-4:1.22
	offsite-5-3-pre:1.22
	rel-5-3:1.22
	rel-5-2:1.22
	rel-5-1-branch:1.22.0.2
	rel-5-1:1.22
	rel-5-0:1.19
	rel-5-0-beta:1.17
	rel-4-5:1.10
	ctj-4-5-post:1.10
	ctj-4-5-pre:1.10;
locks; strict;
comment	@# @;


1.23
date	2004.05.21.17.30.52;	author morrison;	state dead;
branches;
next	1.22;

1.22
date	2000.04.13.14.08.11;	author mike;	state Exp;
branches;
next	1.21;

1.21
date	2000.04.12.18.07.34;	author mike;	state Exp;
branches;
next	1.20;

1.20
date	99.12.05.19.35.27;	author mike;	state Exp;
branches;
next	1.19;

1.19
date	99.07.08.01.10.11;	author mike;	state Exp;
branches;
next	1.18;

1.18
date	99.07.01.20.47.00;	author mike;	state Exp;
branches;
next	1.17;

1.17
date	98.11.26.03.44.15;	author mike;	state Exp;
branches;
next	1.16;

1.16
date	98.10.09.21.45.25;	author mike;	state Exp;
branches;
next	1.15;

1.15
date	98.10.09.21.16.45;	author mike;	state Exp;
branches;
next	1.14;

1.14
date	98.10.09.02.19.05;	author mike;	state Exp;
branches;
next	1.13;

1.13
date	98.10.09.01.06.27;	author mike;	state Exp;
branches;
next	1.12;

1.12
date	98.10.09.00.51.03;	author mike;	state Exp;
branches;
next	1.11;

1.11
date	98.10.07.22.28.30;	author mike;	state Exp;
branches;
next	1.10;

1.10
date	96.03.15.08.55.26;	author mike;	state Exp;
branches;
next	1.9;

1.9
date	96.03.15.08.54.40;	author mike;	state Exp;
branches;
next	1.8;

1.8
date	96.03.09.05.37.45;	author mike;	state Exp;
branches;
next	1.7;

1.7
date	96.03.09.03.29.27;	author mike;	state Exp;
branches;
next	1.6;

1.6
date	96.03.09.03.21.08;	author mike;	state Exp;
branches;
next	1.5;

1.5
date	96.03.09.02.23.39;	author mike;	state Exp;
branches;
next	1.4;

1.4
date	96.03.09.02.15.31;	author mike;	state Exp;
branches;
next	1.3;

1.3
date	96.03.09.02.11.20;	author mike;	state Exp;
branches;
next	1.2;

1.2
date	96.03.09.00.50.42;	author mike;	state Exp;
branches;
next	1.1;

1.1
date	96.03.09.00.04.14;	author mike;	state Exp;
branches;
next	;


desc
@disp.tcl
@


1.23
log
@moved to src/rttherm/
@
text
@#			S S A M P V I E W . T C L
#
# GUI for "ssampview" program.
# Sourced from the C code.
#
#  -Mike Muuss, 7-Mar-96
#
#  $Header: /n/xoff/cvs/brlcad/rttherm/ssampview.tcl,v 1.22 2000/04/13 14:08:11 mike Exp $

puts "ssampview.tcl: start"

set wavel 0
global wavel

set line_num	32
global line_num

set pixel_num 32
global pixel_num

set cursor_on 1

# Indicate whether Min/Max sliders apply to this plot.  1=yes.
set rescale_scanline 1
set rescale_spectral 0

set initial_maxval $maxval

# This is linked to value from the C code.
global nwave

#frame .buttons
frame .scale
frame .entry_line1
frame .entry_line2
frame .plot
frame .plot.spatial 	-borderwidth 2 -relief ridge
frame .plot.spectral 	-borderwidth 2 -relief groove
frame .plot.spatial.spatial_v

#pack .buttons -side top
pack .scale -side top
pack .entry_line1 -side top
pack .entry_line2 -side top
pack .plot -side top

set int_min 0
set int_max 200

scale .scale.min -label Min -from 0 -to 1000 -showvalue no -length 400 \
	-orient horizontal -variable int_min -command {scalechange minval}
scale .scale.max -label Max -from 0 -to 1000 -showvalue no -length 400 \
	-orient horizontal -variable int_max -command {scalechange maxval}
pack .scale.min .scale.max -side top -in .scale

label .entry_line1.min1 -text "Min:"
label .entry_line1.min2 -textvariable minval
label .entry_line1.max1 -text "Max:"
label .entry_line1.max2 -textvariable maxval
checkbutton .entry_line1.cursor_on -text "FB cursor" -variable cursor_on -command {update}
checkbutton .entry_line1.atmosphere_on -text "Atmosphere" -variable use_atmosphere -command {update}
checkbutton .entry_line1.cie_on -text "CIE" -variable use_cie_xyz -command {update}
pack .entry_line1.min1 .entry_line1.min2 .entry_line1.max1 .entry_line1.max2 \
	.entry_line1.cursor_on .entry_line1.atmosphere_on .entry_line1.cie_on \
	-side left -in .entry_line1

label .entry_line2.wl1 -text "Wavelength of Framebuffer = "
label .entry_line2.wl3 -textvariable lambda -width 8
label .entry_line2.wl4 -text "microns"
pack .entry_line2.wl1 .entry_line2.wl3 .entry_line2.wl4 \
	-side left -in .entry_line2

proc update { {foo 0} } {
	global wavel
	global pixel_num
	global line_num
	global cursor_on

	if { [catch "doit1 $wavel" status ] } {
		puts "update: doit1 error= $status"
		return
	}
	scanline
	pixelplot

	# Points to lower left corner of selected pixel, bump up one.
	fb_cursor -42 $cursor_on [expr $pixel_num + 1] [expr $line_num + 1]
	puts [fb_readpixel -42 $pixel_num $line_num]
}

proc scalechange {var value} {
	global $var
	global initial_maxval
	global wavel
	global line_num

	set $var [expr $initial_maxval * $value / 1000]
	update
}

label .plot.spatial.spatial_v.scanline4 -text "Scanline Plot"
checkbutton .plot.spatial.spatial_v.scanline5 -text "Rescale" \
	-variable rescale_scanline -command {update}
canvas .plot.spatial.spatial_v.canvas_scanline -width $width -height 280
scale .plot.spatial.spatial_v.pixel1 -label Pixel \
	-from 0 -to [expr $width - 1] -showvalue yes \
	-orient horizontal -variable pixel_num -command {update}
pack .plot.spatial.spatial_v.scanline4 .plot.spatial.spatial_v.scanline5 \
	.plot.spatial.spatial_v.canvas_scanline \
	.plot.spatial.spatial_v.pixel1 \
	-side top -in .plot.spatial.spatial_v

scale .plot.spatial.scanline3 -label Scanline -from [expr $height - 1] -to 0 \
	-showvalue yes -length 280 \
	-orient vertical -variable line_num -command {update}
pack .plot.spatial.spatial_v .plot.spatial.scanline3 -side left -in .plot.spatial

label .plot.spectral.spectral1 -text "Spectral Plot"
checkbutton .plot.spectral.spectral2 -text "Rescale" -variable rescale_spectral -command {update}
canvas .plot.spectral.canvas_pixel -width $nwave -height 280
scale .plot.spectral.wl2 -label "Wavelen" \
	-from 0 -to [expr $nwave - 1] -showvalue yes \
	-orient horizontal -variable wavel -command {update}
pack .plot.spectral.spectral1 .plot.spectral.spectral2 \
	.plot.spectral.canvas_pixel \
	.plot.spectral.wl2 -side top -in .plot.spectral

pack .plot.spatial .plot.spectral -side left -in .plot

# Remember: 4th quadrant addressing!
proc scanline { {foo 0} } {
	global wavel
	global width
	global height
	global minval
	global maxval
	global line_num
	global pixel_num
	global rescale_scanline
	global initial_maxval

	set ymax 256

	.plot.spatial.spatial_v.canvas_scanline delete T
	.plot.spatial.spatial_v.canvas_scanline create line $pixel_num 0 $pixel_num $ymax -tags T -fill grey

	set y $line_num
	set x0 0
	set y0 [expr $ymax - 1]
	if {$rescale_scanline == 0}  {
		set scale [expr 255 / ($initial_maxval - $minval) ]
	} else {
		set scale [expr 255 / ($maxval - $minval) ]
	}
	for {set x1 0} {$x1 < $width} {incr x1} {
		set y1 [expr $ymax - 1 - \
			( [getspectval $x1 $y $wavel] - $minval ) * $scale]
		if {$y1 < 0} {
			set y1 0
		} elseif {$y1 > 255} {
			set y1 255
		}
		.plot.spatial.spatial_v.canvas_scanline create line $x0 $y0 $x1 $y1 -tags T
		set x0 $x1
		set y0 $y1
##		puts "$x0 $y0 $x1 $y1"
	}
}

puts "ssampview.tcl: about to define proc pixelplot"


# Draw spectral curve for one pixel.
# Remember: 4th quadrant addressing!
proc pixelplot { {foo 0} } {
	global wavel
	global width
	global height
	global minval
	global maxval
	global initial_maxval
	global line_num
	global pixel_num
	global nwave
	global wavel
	global rescale_spectral

	set ymax 256

	.plot.spectral.canvas_pixel delete T
	# put a vertical rule at current wavelength.
	.plot.spectral.canvas_pixel create line $wavel 0 $wavel $ymax -tags T -fill grey

	set x $pixel_num
	set y $line_num
	set x0 0
	set y0 [expr $ymax - 1]
	if {$rescale_spectral == 0}  {
		set scale [expr 255 / ($initial_maxval - $minval) ]
	} else {
		set scale [expr 255 / ($maxval - $minval) ]
	}
	for {set x1 0} {$x1 < $nwave} {incr x1} {
		set y1 [expr $ymax - 1 - \
			( [getspectval $x $y $x1] - $minval ) * $scale]
		if {$y1 < 0} {
			set y1 0
		} elseif {$y1 > 255} {
			set y1 255
		}
		.plot.spectral.canvas_pixel create line $x0 $y0 $x1 $y1 -tags T
		set x0 $x1
		set y0 $y1
##		puts "$x0 $y0 $x1 $y1"
	}
}


puts "ssampview.tcl: about to define proc plot_tabdata"

#			P L O T _ T A B D A T A
#
# Draw spectral curve from one Tcl-ified rt_tabdata structure.  Form is:
#	x {...} y {...} nx # ymin # ymax #
#
# Remember: 4th quadrant addressing!
#
proc plot_tabdata { canvas data {y_minval -1} {y_maxval -1} {screen_xmax 255} {screen_ymax 255} } {
	#puts "plot_tabdata starting"
	#puts "canvas = $canvas"
	#puts "data   = $data"
	#puts "llength= [llength $data]"
	# Sets key_x, key_y, key_nx, key_ymin, key_ymax
	bu_get_all_keyword_values $data
	#puts "ret    = $ret"
	#puts "nx     = $key_nx"
	#puts "key_x  = $key_x"
	#puts "key_y  = $key_y"

	# If y_minval and y_maxval not set (arg defaults used),
	# scale data using min and max values provided with the data.
	if {$y_minval == $y_maxval} {
		set y_minval $key_ymin
		set y_maxval $key_ymax
	}
	#puts "y_minval = $y_minval"
	#puts "y_maxval = $y_maxval"
	set y_scale [expr ($screen_ymax - 1) * 1.0 / ($y_maxval - $y_minval) ]
	#puts "y_scale  = $y_scale"

	# Scale in X dimension
	set x_minval [lindex $key_x 0]
	set x_maxval [lindex $key_x end]
	#puts "x_minval = $x_minval"
	#puts "x_maxval = $x_maxval"
	set x_scale [expr ($screen_xmax - 1) * 1.0 / ($x_maxval - $x_minval) ]
	#puts "x_scale  = $x_scale"

	# Draw a vertical line to control screen-size auto-scale of widget.
	set x0 0
	set y0 [expr $screen_ymax - 1]

	$canvas delete T
	$canvas create line $x0 0 $x0 $screen_ymax -tags T -fill grey

	for {set j 0} {$j < $key_nx} {incr j} {
		set x1 [expr int(([lindex $key_x $j] - $x_minval ) * $x_scale)]
		set y1 [expr int($screen_ymax - \
			( [lindex $key_y $j] - $y_minval ) * $y_scale)]
		if {$y1 < 0} {
			set y1 0
		} elseif {$y1 > $screen_ymax} {
			set y1 $screen_ymax
		}
		$canvas create line $x0 $y0 $x1 $y1 -tags T
		#puts "$x0 $y0 $x1 $y1"
		set x0 $x1
		set y0 $y1
	}
	$canvas create text 0 $screen_ymax -text $x_minval -anchor sw -tags T
	$canvas create text $x1 $screen_ymax -text $x_maxval -anchor se -tags T
	$canvas create text 0 0 -text $y_maxval -anchor nw -tags T
	#puts "plot_tabdata $canvas ending"
}

puts "ssampview.tcl: about to define proc popup_plot_tabdata"

#			P O P U P _ P L O T _ T A B D A T A
#
#  Create a one-time throwaway pop-up window with a tabdata plot in it.
#
#  This can be called from TCL or invoked from C code.
#
set popup_counter 0
proc popup_plot_tabdata { title data {minval -1} {maxval -1} {screen_xmax 255} {screen_ymax 255} }  {
	global	popup_counter

	incr popup_counter
	set popup .popup$popup_counter

	toplevel $popup
	wm title $popup $title

	canvas ${popup}.canvas -width [expr $screen_xmax + 1] -height [expr $screen_ymax + 1]
	button ${popup}.dismiss -text "Dismiss" -command "destroy $popup"
	pack ${popup}.canvas ${popup}.dismiss -side top -in $popup

	plot_tabdata ${popup}.canvas $data $minval $maxval $screen_xmax $screen_ymax
	return $popup
}

puts "ssampview.tcl: about to define proc do_testing"

#			D O _ T E S T I N G
#
proc do_testing {} {
	puts "do_testing: start"

	set curve_list [getntsccurves]
	puts "Got these curves: $curve_list"

	for {set i [expr [llength $curve_list]-1]} {$i >= 0} {incr i -1} {
		set name [lindex $curve_list $i]
		puts "curve $i is called $name"
		eval popup_plot_tabdata $name \$$name
	}
	puts "do_testing: end"
}

# This variable is set by C startoff.
puts "ssampview.tcl: About to run first_command= $first_command"
eval $first_command

puts "ssampview.tcl: finished"
@


1.22
log
@
Fixed the rest of the window names
@
text
@d8 1
a8 1
#  $Header: /c/CVS/brlcad/rttherm/ssampview.tcl,v 1.21 2000/04/12 18:07:34 mike Exp $
@


1.21
log
@
Updated window names to properly reflect hierarchy.
@
text
@d8 1
a8 1
#  $Header: /c/CVS/brlcad/rttherm/ssampview.tcl,v 1.20 1999/12/05 19:35:27 mike Exp $
d59 2
a60 2
label .entry_line.max2 -textvariable maxval
checkbutton .entry_line.cursor_on -text "FB cursor" -variable cursor_on -command {update}
d63 2
a64 2
pack .entry_line1.min1 .entry_line1.min2 .entry_line1.max1 .entry_line.max2 \
	.entry_line.cursor_on .entry_line1.atmosphere_on .entry_line1.cie_on \
d108 4
a111 3
pack .plot.spatial.spatial_v.scanline4 .plot.spatial_v.scanline5 \
	.plot.spatial_v.canvas_scanline \
	.spatial_v.pixel1 -side top -in .plot.spatial.spatial_v
d124 3
a126 2
pack .plot.spectral.spectral1 .plot.spectral.spectral2 .plot.spectral.canvas_pixel \
	.spectral.wl2 -side top -in .plot.spectral
d144 2
a145 2
	.canvas_scanline delete T
	.canvas_scanline create line $pixel_num 0 $pixel_num $ymax -tags T -fill grey
d163 1
a163 1
		.canvas_scanline create line $x0 $y0 $x1 $y1 -tags T
d190 1
a190 1
	.canvas_pixel delete T
d192 1
a192 1
	.canvas_pixel create line $wavel 0 $wavel $ymax -tags T -fill grey
d211 1
a211 1
		.canvas_pixel create line $x0 $y0 $x1 $y1 -tags T
@


1.20
log
@
Changed 'disp' to 'ssampview'.
@
text
@d8 1
a8 1
#  $Header: /c/CVS/brlcad/rttherm/ssampview.tcl,v 1.19 1999/07/08 01:10:11 mike Exp $
d37 4
a40 3
frame .spatial_v
frame .spatial 	-borderwidth 2 -relief ridge
frame .spectral 	-borderwidth 2 -relief groove
d50 1
a50 1
scale .minscale -label Min -from 0 -to 1000 -showvalue no -length 400 \
d52 1
a52 1
scale .maxscale -label Max -from 0 -to 1000 -showvalue no -length 400 \
d54 1
a54 1
pack .minscale .maxscale -side top -in .scale
d56 9
a64 8
label .min1 -text "Min:"
label .min2 -textvariable minval
label .max1 -text "Max:"
label .max2 -textvariable maxval
checkbutton .cursor_on -text "FB cursor" -variable cursor_on -command {update}
checkbutton .atmosphere_on -text "Atmosphere" -variable use_atmosphere -command {update}
checkbutton .cie_on -text "CIE" -variable use_cie_xyz -command {update}
pack .min1 .min2 .max1 .max2 .cursor_on .atmosphere_on .cie_on \
d67 5
a71 4
label .wl1 -text "Wavelength of Framebuffer = "
label .wl3 -textvariable lambda -width 8
label .wl4 -text "microns"
pack .wl1 .wl3 .wl4 -side left -in .entry_line2
d101 12
a112 3
label .scanline4 -text "Scanline Plot"
checkbutton .scanline5 -text "Rescale" -variable rescale_scanline -command {update}
scale .scanline3 -label Scanline -from [expr $height - 1] -to 0 \
d115 1
a115 7
canvas .canvas_scanline -width $width -height 280

scale .pixel1 -label Pixel -from 0 -to [expr $width - 1] -showvalue yes \
	-orient horizontal -variable pixel_num -command {update}

pack .scanline4 .scanline5 .canvas_scanline .pixel1 -side top -in .spatial_v
pack .spatial_v .scanline3 -side left -in .spatial
d117 5
a121 4
label .spectral1 -text "Spectral Plot"
checkbutton .spectral2 -text "Rescale" -variable rescale_spectral -command {update}
canvas .canvas_pixel -width $nwave -height 280
scale .wl2 -label "Wavelen" -from 0 -to [expr $nwave - 1] -showvalue yes \
d123 2
a124 1
pack .spectral1 .spectral2 .canvas_pixel .wl2 -side top -in .spectral
d126 1
a126 1
pack .spatial .spectral -side left -in .plot
@


1.19
log
@
Number of wavelengths is now exported from C to Tcl.
@
text
@d1 4
a4 1
#			D I S P . T C L
a5 1
# GUI for "disp" program
d8 1
a8 1
#  $Header: /c/CVS/brlcad/rttherm/disp.tcl,v 1.18 1999/07/01 20:47:00 mike Exp $
d10 1
a10 1
puts "disp.tcl: start"
d160 1
a160 1
puts "disp.tcl: about to define proc pixelplot"
d209 1
a209 1
puts "disp.tcl: about to define proc plot_tabdata"
d276 1
a276 1
puts "disp.tcl: about to define proc popup_plot_tabdata"
d302 1
a302 1
puts "disp.tcl: about to define proc do_testing"
d321 1
a321 1
puts "disp.tcl: About to run first_command= $first_command"
d324 1
a324 1
puts "disp.tcl: finished"
@


1.18
log
@
Fixed off-by-one bug accessing outside data[] array bounds.
@
text
@d6 1
a6 1
#  $Header: /c/CVS/brlcad/rttherm/disp.tcl,v 1.17 1998/11/26 03:44:15 mike Exp $
d27 1
a27 2
# This should be imported from the C code.
set nwave 100
@


1.17
log
@Cleanups, added additional samples to visible band.
@
text
@d6 1
a6 1
#  $Header: /c/CVS/brlcad/rttherm/disp.tcl,v 1.16 1998/10/09 21:45:25 mike Exp $
d99 2
a100 1
scale .scanline3 -label Scanline -from $height -to 0 -showvalue yes -length 280 \
d104 1
a104 1
scale .pixel1 -label Pixel -from 0 -to $width -showvalue yes \
@


1.16
log
@Expanded to show blackbody curves
@
text
@d6 1
a6 1
#  $Header: /c/CVS/brlcad/rt/disp.tcl,v 1.15 1998/10/09 21:16:45 mike Exp $
d280 2
a291 2
	puts "About to run canvas ${popup}.canvas"

a295 1
puts "about to call plot_tabdata"
@


1.15
log
@Modified to use return from getntsccurves as list of variables to plot,
rather than hard-coding the variables.
This lets the C code provide as many curves to be plotted as it wants.
@
text
@d6 1
a6 1
#  $Header: /c/CVS/brlcad/rt/disp.tcl,v 1.14 1998/10/09 02:19:05 mike Exp $
d314 1
a314 1
		eval popup_plot_tabdata $name \$$name 0 1
@


1.14
log
@disp.c: broke out testing support separate from file display functions.
disp.tcl: decent support for plotting spectra
@
text
@d6 1
a6 1
#  $Header: /c/CVS/brlcad/rt/disp.tcl,v 1.13 1998/10/09 01:06:27 mike Exp $
d303 2
d306 11
a316 10
	# sets ntsc_r, ntsc_g, ntsc_b
	getntsccurves
	puts "do_testing: ntsc_r = $ntsc_r"
	popup_plot_tabdata "NTSC Red, Sampled" $ntsc_r 0 1
	popup_plot_tabdata "NTSC Green, Sampled" $ntsc_g 0 1
	popup_plot_tabdata "NTSC Blue, Sampled" $ntsc_b 0 1

	popup_plot_tabdata "NTSC Red Orig" $ntsc_r_orig 0 1
	popup_plot_tabdata "NTSC Green Orig" $ntsc_g_orig 0 1
	popup_plot_tabdata "NTSC Blue Orig" $ntsc_b_orig 0 1
d319 1
a320 4

### XXX Hack:  Last thing:
##doit1 42
# This variable is set by C startoff.
@


1.13
log
@Snapshot:  corrected X scaling
@
text
@d6 1
a6 1
#  $Header: /c/CVS/brlcad/rt/disp.tcl,v 1.12 1998/10/09 00:51:03 mike Exp $
d216 5
a220 5
proc plot_tabdata { canvas data {y_minval -1} {y_maxval -1} {screen_ymax 256} } {
puts "plot_tabdata starting"
puts "canvas = $canvas"
puts "data   = $data"
puts "llength= [llength $data]"
d222 5
a226 9
#	bu_get_all_keyword_values $data
	if { [catch {set ret [bu_get_all_keyword_values $data]} status] } {
		puts "error in bu_get_all_keyword_values= $status"
		return
	}
puts "ret    = $ret"
puts "nx     = $key_nx"
puts "key_x  = $key_x"
puts "key_y  = $key_y"
d234 4
a237 4
puts "y_minval = $y_minval"
puts "y_maxval = $y_maxval"
	set y_scale [expr ($screen_ymax - 1) / ($y_maxval - $y_minval) ]
puts "y_scale  = $y_scale"
d242 4
a245 6
puts "x_minval = $x_minval"
puts "x_maxval = $x_maxval"
	set x_scale [expr ($screen_ymax - 1) / ($x_maxval - $x_minval) ]
	# Don't let X scale scrunch less than 1 pixel per sample.
	if {$x_scale > 1.0} {set x_scale 1}
puts "x_scale  = $x_scale"
a253 1

d255 3
a257 3
		set x1 [expr ([lindex $key_x $j] - $x_minval ) * $x_scale]
		set y1 [expr $screen_ymax - 1 - \
			( [lindex $key_y $j] - $y_minval ) * $y_scale]
d260 2
a261 2
		} elseif {$y1 > 255} {
			set y1 255
d264 1
a266 1
		puts "$x0 $y0 $x1 $y1"
d268 4
a271 1
puts "plot_tabdata $canvas ending"
d281 1
a281 1
proc popup_plot_tabdata { title data {minval -1} {maxval -1} {screen_ymax 256} }  {
d292 1
a292 1
	canvas ${popup}.canvas -width 256 -height $screen_ymax
d297 1
a297 1
	plot_tabdata ${popup}.canvas $data $minval $maxval $screen_ymax
d307 7
a313 3
	popup_plot_tabdata "NTSC Red" $ntsc_r
	popup_plot_tabdata "NTSC Green" $ntsc_g
	popup_plot_tabdata "NTSC Blue" $ntsc_b
@


1.12
log
@Snapshot:  first working version of pop-up plots
@
text
@d6 1
a6 1
#  $Header: /c/CVS/brlcad/rt/disp.tcl,v 1.11 1998/10/07 22:28:30 mike Exp $
d216 1
a216 1
proc plot_tabdata { canvas data {minval -1} {maxval -1} {screen_ymax 256} } {
d232 5
a236 4
	# If minval and maxval not set, scale data.
	if {$minval == $maxval} {
		set minval $key_ymin
		set maxval $key_ymax
d238 14
a251 2
puts "minval = $minval"
puts "maxval = $maxval"
a252 1

a259 1
	set scale [expr 255 / ($maxval - $minval) ]
d261 2
a262 1
	for {set x1 0} {$x1 < $key_nx} {incr x1} {
d264 1
a264 1
			( [lindex $key_y $x1] - $minval ) * $scale]
d273 1
a273 1
##		puts "$x0 $y0 $x1 $y1"
d275 1
d296 1
a296 1
	canvas ${popup}.canvas -width 256 -height 256
@


1.11
log
@Partially competed additions
@
text
@d6 1
a6 1
#  $Header: /c/CVS/brlcad/rt/disp.tcl,v 1.10 1996/03/15 08:55:26 mike Exp $
d8 2
d75 4
a78 1
	doit1 $wavel
d158 1
d160 1
d179 1
d207 2
d216 23
a238 2
proc plot_tabdata { data minval maxval {ymax 256} }
{
a239 1
	set nx [bu_get_value_by_keyword nx $data]
d241 3
a243 4
	set x  [bu_get_value_by_keyword x $data]
	set y  [bu_get_value_by_keyword y $data]

	set wavel [lindex $x 0]
d245 2
a246 2
	.canvas_pixel delete T
	.canvas_pixel create line $wavel 0 $wavel $ymax -tags T -fill grey
a247 2
	set x0 0
	set y0 [expr $ymax - 1]
d250 3
a252 3
	for {set x1 0} {$x1 < $nx} {incr x1} {
		set y1 [expr $ymax - 1 - \
			( [getspectval $x $y $x1] - $minval ) * $scale]
d258 1
a258 1
		.canvas_pixel create line $x0 $y0 $x1 $y1 -tags T
d265 1
d267 38
d306 5
a310 1
doit1 42
@


1.10
log
@Added missing global directive.
@
text
@d6 1
a6 1
#  $Header: /m/cad/rt/RCS/disp.tcl,v 1.9 1996/03/15 08:54:40 mike Exp mike $
d184 40
@


1.9
log
@Added CIE button
@
text
@d6 1
a6 1
#  $Header: /m/cad/rt/RCS/disp.tcl,v 1.8 1996/03/09 05:37:45 mike Exp mike $
d123 1
@


1.8
log
@Added support for "Standard" atmosphere.
@
text
@d6 1
a6 1
#  $Header: /m/cad/rt/RCS/disp.tcl,v 1.7 1996/03/09 03:29:27 mike Exp mike $
d58 3
a60 1
pack .min1 .min2 .max1 .max2 .cursor_on .atmosphere_on -side left -in .entry_line1
d79 1
a79 1
	### puts [fb_readpixel -42 $pixel_num $line_num]
@


1.7
log
@On two canvasses, draw larger grey line.
@
text
@d6 1
a6 1
#  $Header: /m/cad/rt/RCS/disp.tcl,v 1.6 1996/03/09 03:21:08 mike Exp mike $
d57 2
a58 1
pack .min1 .min2 .max1 .max2 .cursor_on -side left -in .entry_line1
@


1.6
log
@Addef fb_readpixel support
@
text
@d6 1
a6 1
#  $Header: /m/cad/rt/RCS/disp.tcl,v 1.5 1996/03/09 02:23:39 mike Exp mike $
d76 1
a76 1
	puts [fb_readpixel -42 $pixel_num $line_num]
d124 1
a146 1
	.canvas_scanline create line $pixel_num [expr $ymax - 4] $pixel_num $ymax -tags T
d168 1
a191 1
	.canvas_pixel create line $wavel [expr $ymax - 4] $wavel $ymax -tags T
@


1.5
log
@Added FB cursor radiobutton
@
text
@d6 1
a6 1
#  $Header: /m/cad/rt/RCS/disp.tcl,v 1.4 1996/03/09 02:15:31 mike Exp mike $
d19 4
d76 1
d90 1
d98 1
a98 1
pack .scanline4 .canvas_scanline .pixel1 -side top -in .spatial_v
d101 2
a102 1
label .spatial1 -text "Spectral Plot"
d106 1
a106 1
pack .spatial1 .canvas_pixel .wl2 -side top -in .spectral
d119 1
d128 5
a132 1
	set scale [expr 255 / ($maxval - $minval) ]
d163 1
d173 5
a177 1
	set scale [expr 255 / ($initial_maxval - $minval) ]
@


1.4
log
@Added RCS stuff
@
text
@d6 1
a6 1
#  $Header: /m/cad/RCS/machinetype.sh,v 11.2 95/01/09 16:47:33 mike Exp $
d17 2
d52 2
a53 1
pack .min1 .min2 .max1 .max2 -side left -in .entry_line1
d60 1
a60 1
proc update {foo} {
d64 1
d67 2
a68 2
	scanline 0
	pixelplot 0
d71 1
a71 1
	fb_cursor -42 1 [expr $pixel_num + 1] [expr $line_num + 1]
d81 1
a81 1
	update 0
d104 1
a104 1
proc scanline {foo} {
d140 1
a140 1
proc pixelplot {foo} {
@


1.3
log
@Has both scanline and spectral plots, nice layout.
@
text
@d1 2
d5 2
@


1.2
log
@Working version
@
text
@d24 3
d43 1
a43 1
entry .min2 -textvariable minval
d45 1
a45 1
entry .max2 -textvariable maxval
d48 1
a48 3
label .wl1 -text "Wavelen#"
scale .wl2 -from 0 -to [expr $nwave - 1] -showvalue yes \
	-orient horizontal -variable wavel -command {update}
d51 1
a51 1
pack .wl1 .wl2 .wl3 .wl4 -side left -in .entry_line2
d76 1
d82 6
a87 2
	-length 280 \
	-orient vertical -variable pixel_num -command {update}
d89 3
d93 1
a93 1
pack .canvas_scanline .scanline3 .pixel1 .canvas_pixel -side left -in .plot
d103 1
d126 1
d142 1
d166 1
@


1.1
log
@Initial revision
@
text
@d10 3
d15 4
d31 1
a31 1
set int_max 1000
d45 2
a46 1
scale .wl1 -label "Wl#" -from 0 -to 99 -showvalue yes \
a47 2
##label .wl1 -text "Wl:"
##entry .wl2 -textvariable wavel
d50 1
a50 1
pack .wl1 .wl3 .wl4 -side left -in .entry_line2
d54 2
d59 4
d76 2
a77 1
	-orient vertical -variable line_num -command {scanline}
d79 4
a82 2
canvas .canvas -width $width -height 280
pack .canvas .scanline3 -side left -in .plot
d84 2
d97 1
a97 4
#	destroy .canvas
#	canvas .canvas -width $width -height 280
#	pack .canvas .scanline3 -side left -in .plot
	.canvas delete T
a98 6
#	.canvas create line 0 0 $width 0
#		$width $ymax
#	.canvas create line 0 0 \
#		0 $ymax \
#		$width $ymax

d111 1
a111 1
		.canvas create line $x0 $y0 $x1 $y1 -tags T
d117 42
@
