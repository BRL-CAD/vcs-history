head	11.10;
access;
symbols
	ansi-20040405-merged:11.6.2.2
	postmerge-20040405-ansi:11.8
	premerge-20040404-ansi:11.7
	postmerge-autoconf:11.7
	autoconf-freeze:11.6.10.2
	premerge-autoconf:11.7
	postmerge-20040315-windows:11.7
	premerge-20040315-windows:11.7
	windows-20040315-freeze:11.6.4.1
	autoconf-20031203:11.6
	autoconf-20031202:11.6
	autoconf-branch:11.6.0.10
	phong-branch:11.6.0.8
	photonmap-branch:11.6.0.6
	rel-6-1-DP:11.6
	windows-branch:11.6.0.4
	rel-6-0-2:11.4
	ansi-branch:11.6.0.2
	rel-6-0-1-branch:11.4.0.2
	hartley-6-0-post:11.5
	hartley-6-0-pre:11.4
	rel-6-0-1:11.4
	rel-6-0:11.4
	rel-5-4:11.3
	offsite-5-3-pre:11.4
	rel-5-3:11.3
	rel-5-2:11.3
	rel-5-1-branch:11.3.0.2
	rel-5-1:11.3
	rel-5-0:11.3
	rel-5-0-beta:11.3
	rel-4-5:11.3
	ctj-4-5-post:11.3
	ctj-4-5-pre:11.3
	rel-4-4:11.1
	rel-4-0:10.1;
locks; strict;
comment	@ * @;


11.10
date	2004.05.21.18.07.38;	author morrison;	state dead;
branches;
next	11.9;

11.9
date	2004.05.10.15.30.47;	author erikg;	state Exp;
branches;
next	11.8;

11.8
date	2004.04.05.07.40.23;	author morrison;	state Exp;
branches;
next	11.7;

11.7
date	2004.02.02.17.39.30;	author morrison;	state Exp;
branches;
next	11.6;

11.6
date	2002.08.20.17.08.20;	author jra;	state Exp;
branches
	11.6.2.1
	11.6.4.1
	11.6.10.1;
next	11.5;

11.5
date	2002.08.15.20.55.30;	author hartley;	state Exp;
branches;
next	11.4;

11.4
date	2000.07.08.01.41.22;	author mike;	state Exp;
branches;
next	11.3;

11.3
date	97.04.28.20.07.42;	author bparker;	state Exp;
branches;
next	11.2;

11.2
date	96.08.31.11.12.44;	author mike;	state Exp;
branches;
next	11.1;

11.1
date	95.01.04.09.51.41;	author mike;	state Rel4_4;
branches;
next	10.2;

10.2
date	94.08.09.19.56.35;	author gdurf;	state Exp;
branches;
next	10.1;

10.1
date	91.10.12.06.36.51;	author mike;	state Rel4_0;
branches;
next	1.5;

1.5
date	91.06.13.02.54.26;	author mike;	state Exp;
branches;
next	1.4;

1.4
date	91.06.13.02.44.31;	author mike;	state Exp;
branches;
next	1.3;

1.3
date	90.12.11.06.04.44;	author phil;	state Exp;
branches;
next	1.2;

1.2
date	90.10.11.02.17.20;	author mike;	state Exp;
branches;
next	1.1;

1.1
date	90.02.08.01.53.53;	author mike;	state Exp;
branches;
next	;

11.6.2.1
date	2002.09.19.18.01.58;	author morrison;	state Exp;
branches;
next	11.6.2.2;

11.6.2.2
date	2004.03.17.21.21.48;	author morrison;	state Exp;
branches;
next	;

11.6.4.1
date	2004.03.11.23.45.48;	author morrison;	state Exp;
branches;
next	;

11.6.10.1
date	2004.02.12.19.41.24;	author erikg;	state Exp;
branches;
next	11.6.10.2;

11.6.10.2
date	2004.03.15.14.07.34;	author erikg;	state Exp;
branches;
next	;


desc
@libwdb routines for units conversion
@


11.10
log
@moved to src/
@
text
@/*
 *			U N I T S . C
 * 
 *  Module of libwdb to handle units conversion.
 *
 *  Author -
 *	Michael John Muuss
 *  
 *  Source -
 *	SECAD/VLD Computing Consortium, Bldg 394
 *	The U. S. Army Ballistic Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5066
 *  
 *  Copyright Notice -
 *	This software is Copyright (C) 1990-2004 by the United States Army.
 *	All rights reserved.
 */
#ifndef lint
static const char RCSid[] = "@@(#)$Header: /n/xoff/cvs/brlcad/libwdb/units.c,v 11.9 2004/05/10 15:30:47 erikg Exp $ (BRL)";
#endif

#ifdef HAVE_CONFIG_H
# include "config.h"
#endif



#include <stdio.h>
#include <ctype.h>

#include "machine.h"
#include "bu.h"
#include "vmath.h"
#include "bn.h"
#include "raytrace.h"
#include "wdb.h"

double	mk_conv2mm = 1.0;		/* Conversion factor to mm */

/*
 *			M K _ C O N V E R S I O N
 *
 *  Given a string conversion value, find the appropriate factor,
 *  and establish it.
 *
 *  Returns -
 *	-1	error
 *	 0	OK
 */
int
mk_conversion(char *str)
{
	double	d;

	if( (d = bu_units_conversion(str)) <= 0.0 )  return(-1);
	return( mk_set_conversion(d) );
}

/*
 *			M K _ S E T _ C O N V E R S I O N
 *
 *  Establish a new conversion factor for LIBWDB routines.
 *
 *  Returns -
 *	-1	error
 *	 0	OK
 */
int
mk_set_conversion(double val)
{
	if( val <= 0.0 )  return(-1);
	mk_conv2mm = val;
	return(0);
}
@


11.9
log
@change conf.h to a wrapped config.h
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/libwdb/units.c,v 11.8 2004/04/05 07:40:23 morrison Exp $ (BRL)";
@


11.8
log
@merge of ansi-6-0-branch into HEAD
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
d22 5
a26 1
#include "conf.h"
@


11.7
log
@update copyright to include span through 2003
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libwdb/units.c,v 11.6 2002/08/20 17:08:20 jra Exp $ (BRL)";
d47 1
a47 2
mk_conversion(str)
char	*str;
d65 1
a65 2
mk_set_conversion(val)
double	val;
@


11.6
log
@Restoration of entire source tree to Pre-Hartley state
@
text
@d15 1
a15 1
 *	This software is Copyright (C) 1990 by the United States Army.
d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libwdb/units.c,v 11.4 2000/07/08 01:41:22 mike Exp $ (BRL)";
@


11.6.4.1
log
@sync to HEAD...
@
text
@d15 1
a15 1
 *	This software is Copyright (C) 1990-2004 by the United States Army.
d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /n/cad/c/CVS/brlcad/libwdb/units.c,v 11.7 2004/02/02 17:39:30 morrison Exp $ (BRL)";
@


11.6.10.1
log
@merge from HEAD
@
text
@d15 1
a15 1
 *	This software is Copyright (C) 1990-2004 by the United States Army.
d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libwdb/units.c,v 11.7 2004/02/02 17:39:30 morrison Exp $ (BRL)";
@


11.6.10.2
log
@merge from head
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libwdb/units.c,v 11.6.10.1 2004/02/12 19:41:24 erikg Exp $ (BRL)";
@


11.6.2.1
log
@Initial ANSIfication
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libwdb/units.c,v 11.6 2002/08/20 17:08:20 jra Exp $ (BRL)";
d47 2
a48 1
mk_conversion(char *str)
d66 2
a67 1
mk_set_conversion(double val)
@


11.6.2.2
log
@sync branch with HEAD
@
text
@d15 1
a15 1
 *	This software is Copyright (C) 1990-2004 by the United States Army.
d19 1
a19 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
@


11.5
log
@Converted from K&R to ANSI C - RFH
@
text
@d47 2
a48 1
mk_conversion(char *str)
d66 2
a67 1
mk_set_conversion(double val)
@


11.4
log
@
const RCSid
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libwdb/units.c,v 11.3 1997/04/28 20:07:42 bparker Exp $ (BRL)";
d47 1
a47 2
mk_conversion(str)
char	*str;
d65 1
a65 2
mk_set_conversion(val)
double	val;
@


11.3
log
@*** empty log message ***
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/libwdb/RCS/units.c,v 11.2 1996/08/31 11:12:44 mike Exp bparker $ (BRL)";
@


11.2
log
@bu.h
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/libwdb/RCS/units.c,v 11.1 1995/01/04 09:51:41 mike Rel4_4 mike $ (BRL)";
d52 1
a52 1
	if( (d = rt_units_conversion(str)) <= 0.0 )  return(-1);
@


11.1
log
@Release_4.4
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/libwdb/RCS/units.c,v 10.2 94/08/09 19:56:35 gdurf Exp $ (BRL)";
d28 1
d30 1
@


10.2
log
@Added include of conf.h
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/libwdb/RCS/units.c,v 10.1 1991/10/12 06:36:51 mike Rel4_0 gdurf $ (BRL)";
@


10.1
log
@Release_4.0
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/libwdb/RCS/units.c,v 1.5 91/06/13 02:54:26 mike Exp $ (BRL)";
d21 2
@


1.5
log
@#include
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/libwdb/RCS/units.c,v 1.4 91/06/13 02:44:31 mike Exp $ (BRL)";
@


1.4
log
@Conversion factor tables have moved to librt
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/libwdb/RCS/units.c,v 1.3 90/12/11 06:04:44 phil Exp $ (BRL)";
d27 1
@


1.3
log
@Fixed spelling of millimeters (hope this doesn't break any code...)
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/libwdb/RCS/units.c,v 1.2 90/10/11 02:17:20 mike Exp $ (BRL)";
d47 1
a47 1
	if( (d = mk_cvt_factor(str)) <= 0.0 )  return(-1);
a66 92
}

static struct cvt_tab {
	double	val;
	char	name[32];
} mk_cvt_tab[] = {
	1.0e-7,		"angstrom",
	1.0e-7,		"angstroms",
	1.0e-7,		"decinanometer",
	1.0e-7,		"decinanometers",
	1.0e-6,		"nm",
	1.0e-6,		"nanometer",
	1.0e-6,		"nanometers",
	1.0e-3,		"micron",
	1.0e-3,		"microns",
	1.0e-3,		"micrometer",
	1.0e-3,		"micrometers",
	1.0,		"mm",
	1.0,		"millimeter",
	1.0,		"millimeters",
	10.0,		"cm",
	10.0,		"centimeter",
	10.0,		"centimeters",
	1000.0,		"m",
	1000.0,		"meter",
	1000.0,		"meters",
	1000000.0,	"km",
	1000000.0,	"kilometer",
	1000000.0,	"kilometers",
	25.4,		"in",
	25.4,		"inche",
	25.4,		"inches",
	304.8,		"ft",
	304.8,		"foot",
	304.8,		"feet",
	456.2,		"cubit",
	456.2,		"cubits",
	914.4,		"yd",
	914.4,		"yard",
	914.4,		"yards",
	5029.2,		"rd",
	5029.2,		"rod",
	5029.2,		"rods",
	1609344.0,	"mi",
	1609344.0,	"mile",
	1609344.0,	"miles",
	1852000.0,	"nmile",
	1852000.0,	"nautical mile",
	0.0,		"",			/* LAST ENTRY */
};

/*
 *			M K _ C V T _ F A C T O R
 *
 *  Given a string representation of a unit of distance (eg, "feet"),
 *  return the number which will convert that unit into millimeters.
 *
 *  Returns -
 *	0.0	error
 *	>0.0	success
 */
double
mk_cvt_factor(str)
char	*str;
{
	register char	*ip, *op;
	register int	c;
	register struct cvt_tab	*tp;
	char		ubuf[64];

	if( strlen(str) >= sizeof(ubuf)-1 )  str[sizeof(ubuf)-1] = '\0';

	/* Copy the given string, making it lower case */
	ip = str;
	op = ubuf;
	while( (c = *ip++) )  {
		if( !isascii(c) )
			*op++ = '_';
		else if( isupper(c) )
			*op++ = tolower(c);
		else
			*op++ = c;
	}
	*op = '\0';

	/* Search for this string in the table */
	for( tp=mk_cvt_tab; tp->name[0]; tp++ )  {
		if( ubuf[0] != tp->name[0] )  continue;
		if( strcmp( ubuf, tp->name ) != 0 )  continue;
		return( tp->val );
	}
	return(0.0);		/* Unable to find it */
@


1.2
log
@For ANSI C, wdb.h requires that <stdio.h> be included in all modules.
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: units.c,v 1.1 90/02/08 01:53:53 mike Exp $ (BRL)";
d85 2
a86 2
	1.0,		"milimeter",
	1.0,		"milimeters",
d122 1
a122 1
 *  return the number which will convert that unit into milimeters.
@


1.1
log
@Initial revision
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header$ (BRL)";
d22 1
@
