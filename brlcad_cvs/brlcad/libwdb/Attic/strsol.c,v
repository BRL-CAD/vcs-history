head	11.21;
access;
symbols
	ansi-20040405-merged:11.17.2.2
	postmerge-20040405-ansi:11.19
	premerge-20040404-ansi:11.18
	postmerge-autoconf:11.18
	autoconf-freeze:11.17.10.2
	premerge-autoconf:11.18
	postmerge-20040315-windows:11.18
	premerge-20040315-windows:11.18
	windows-20040315-freeze:11.17.4.1
	autoconf-20031203:11.17
	autoconf-20031202:11.17
	autoconf-branch:11.17.0.10
	phong-branch:11.17.0.8
	photonmap-branch:11.17.0.6
	rel-6-1-DP:11.17
	windows-branch:11.17.0.4
	rel-6-0-2:11.15
	ansi-branch:11.17.0.2
	rel-6-0-1-branch:11.15.0.2
	hartley-6-0-post:11.16
	hartley-6-0-pre:11.15
	rel-6-0-1:11.15
	rel-6-0:11.15
	rel-5-4:11.5
	offsite-5-3-pre:11.11
	rel-5-3:11.5
	rel-5-2:11.5
	rel-5-1-branch:11.5.0.2
	rel-5-1:11.5
	rel-5-0:11.3
	rel-5-0-beta:11.3
	rel-4-5:11.3
	ctj-4-5-post:11.3
	ctj-4-5-pre:11.3
	rel-4-4:11.1;
locks; strict;
comment	@ * @;


11.21
date	2004.05.21.18.07.38;	author morrison;	state dead;
branches;
next	11.20;

11.20
date	2004.05.10.15.30.47;	author erikg;	state Exp;
branches;
next	11.19;

11.19
date	2004.04.05.07.40.23;	author morrison;	state Exp;
branches;
next	11.18;

11.18
date	2004.02.02.17.39.30;	author morrison;	state Exp;
branches;
next	11.17;

11.17
date	2002.08.20.17.08.20;	author jra;	state Exp;
branches
	11.17.2.1
	11.17.4.1
	11.17.10.1;
next	11.16;

11.16
date	2002.08.15.20.55.30;	author hartley;	state Exp;
branches;
next	11.15;

11.15
date	2001.04.20.22.31.12;	author morrison;	state Exp;
branches;
next	11.14;

11.14
date	2001.04.02.21.38.14;	author morrison;	state Exp;
branches;
next	11.13;

11.13
date	2001.03.23.22.35.01;	author butler;	state Exp;
branches;
next	11.12;

11.12
date	2001.03.21.22.37.41;	author jra;	state Exp;
branches;
next	11.11;

11.11
date	2000.07.12.21.58.04;	author mike;	state Exp;
branches;
next	11.10;

11.10
date	2000.07.12.00.13.52;	author cjohnson;	state Exp;
branches;
next	11.9;

11.9
date	2000.07.08.04.01.11;	author mike;	state Exp;
branches;
next	11.8;

11.8
date	2000.07.08.01.41.22;	author mike;	state Exp;
branches;
next	11.7;

11.7
date	2000.06.29.15.07.55;	author butler;	state Exp;
branches;
next	11.6;

11.6
date	2000.06.29.14.36.06;	author butler;	state Exp;
branches;
next	11.5;

11.5
date	2000.01.07.21.55.00;	author mike;	state Exp;
branches;
next	11.4;

11.4
date	2000.01.07.19.46.17;	author mike;	state Exp;
branches;
next	11.3;

11.3
date	97.05.22.10.45.00;	author butler;	state Exp;
branches;
next	11.2;

11.2
date	96.08.31.11.12.44;	author mike;	state Exp;
branches;
next	11.1;

11.1
date	95.01.04.09.51.41;	author mike;	state Rel4_4;
branches;
next	1.3;

1.3
date	94.12.01.19.13.32;	author mike;	state Exp;
branches;
next	1.2;

1.2
date	94.10.19.22.00.45;	author mike;	state Exp;
branches;
next	1.1;

1.1
date	94.10.17.12.46.16;	author jra;	state Exp;
branches;
next	;

11.17.2.1
date	2002.09.19.18.01.58;	author morrison;	state Exp;
branches;
next	11.17.2.2;

11.17.2.2
date	2004.03.17.21.21.48;	author morrison;	state Exp;
branches;
next	;

11.17.4.1
date	2004.03.11.23.45.48;	author morrison;	state Exp;
branches;
next	;

11.17.10.1
date	2004.02.12.19.41.24;	author erikg;	state Exp;
branches;
next	11.17.10.2;

11.17.10.2
date	2004.03.15.14.07.34;	author erikg;	state Exp;
branches;
next	;


desc
@Routines to make STRSOL solids.
@


11.21
log
@moved to src/
@
text
@/*
 *			S T R S O L . C
 *
 *  Library for writing strsol solids to MGED databases.
 *  Assumes that some of the structure of such databases are known
 *  by the calling routines.
 *
 *
 *  Note that routines which are passed point_t or vect_t or mat_t
 *  parameters (which are call-by-address) must be VERY careful to
 *  leave those parameters unmodified (eg, by scaling), so that the
 *  calling routine is not surprised.
 *
 *  Return codes of 0 are OK, -1 signal an error.
 *
 *  Authors -
 *	John R. Anderson
 *  
 *  Source -
 *	BVLD/VMB Advanced Computer Systems Team
 *	The U. S. Army Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5066
 *
 *  Distribution Notice -
 *	Re-distribution of this software is restricted, as described in
 *	your "Statement of Terms and Conditions for the Release of
 *	The BRL-CAD Pacakge" agreement.
 *
 *  Copyright Notice -
 *	This software is Copyright (C) 1994-2004 by the United States Army
 *	in all countries except the USA.  All rights reserved.
 */

#ifndef lint
static const char RCSid[] = "@@(#)$Header: /n/xoff/cvs/brlcad/libwdb/strsol.c,v 11.20 2004/05/10 15:30:47 erikg Exp $ (BRL)";
#endif

#ifdef HAVE_CONFIG_H
# include "config.h"
#endif



#include <stdio.h>
#include <math.h>
#ifdef HAVE_STRING_H
#include <string.h>
#else
#include <strings.h>
#endif
#include "machine.h"
#include "bu.h"
#include "vmath.h"
#include "bn.h"
#include "rtgeom.h"
#include "raytrace.h"
#include "wdb.h"
#include "db.h"

int
mk_dsp(struct rt_wdb *fp, const char *name, const char *file, int xdim, int ydim, const matp_t mat)
             		    
          	      
          	      		/* name of file containing elevation data */
   		     		/* X dimension of file (w cells) */
   		     		/* Y dimension of file (n cells) */
            	    		/* convert solid coords to model space */
{
	struct rt_dsp_internal *dsp;
	
	BU_GETSTRUCT( dsp, rt_dsp_internal );
	dsp->magic = RT_DSP_INTERNAL_MAGIC;
	bu_vls_init( &dsp->dsp_name );
	bu_vls_strcpy( &dsp->dsp_name, "file:");
	bu_vls_strcat( &dsp->dsp_name, file);

	dsp->dsp_xcnt = xdim;
	dsp->dsp_ycnt = ydim;
	MAT_COPY( dsp->dsp_stom, mat );

	return wdb_export( fp, name, (genptr_t)dsp, ID_DSP, mk_conv2mm );
}

/*
 *			M K _ E B M
 */
int
mk_ebm(struct rt_wdb *fp, const char *name, const char *file, int xdim, int ydim, fastf_t tallness, const matp_t mat)
             		    
          	      
          	      		/* name of file containing bitmap */
   		     		/* X dimansion of file (w cells) */
   		     		/* Y dimension of file (n cells) */
       		         	/* Z extrusion height (mm) */
            	    		/* convert local coords to model space */
{
	struct rt_ebm_internal	*ebm;

	BU_GETSTRUCT( ebm, rt_ebm_internal );
	ebm->magic = RT_EBM_INTERNAL_MAGIC;
	strncpy( ebm->file, file, RT_EBM_NAME_LEN );
	ebm->xdim = xdim;
	ebm->ydim = ydim;
	ebm->tallness = tallness;
	MAT_COPY( ebm->mat , mat );

	return wdb_export( fp, name, (genptr_t)ebm, ID_EBM, mk_conv2mm );
}

/*
 *			M K _ V O L
 */
int
mk_vol(struct rt_wdb *fp, const char *name, const char *file, int xdim, int ydim, int zdim, int lo, int hi, const fastf_t *cellsize, const matp_t mat)
             		    
          	      
          	      		/* name of file containing bitmap */
   		     		/* X dimansion of file (w cells) */
   		     		/* Y dimension of file (n cells) */
   		     		/* Z dimension of file (d cells) */
   		   		/* Low threshold */
   		   		/* High threshold */
            	         	/* ideal coords: size of each cell */
            	    		/* convert local coords to model space */
{
	struct rt_vol_internal	*vol;

	BU_GETSTRUCT( vol, rt_vol_internal );
	vol->magic = RT_VOL_INTERNAL_MAGIC;
	strncpy( vol->file, file, RT_VOL_NAME_LEN );
	vol->xdim = xdim;
	vol->ydim = ydim;
	vol->zdim = zdim;
	vol->lo = lo;
	vol->hi = hi;
	VMOVE( vol->cellsize , cellsize );
	MAT_COPY( vol->mat , mat );

	return wdb_export( fp, name, (genptr_t)vol, ID_VOL, mk_conv2mm );
}

#if 0
/*
 *			M K _ S T R S O L
 *
 *  This routine is not intended for general use.
 *  It exists primarily to support the converter ASC2G and to
 *  permit the rapid development of new string solids.
 */
int
mk_strsol( fp, name, string_solid, string_arg )
FILE		*fp;
const char	*name;
const char	*string_solid;
const char	*string_arg;
{
	union record	rec[DB_SS_NGRAN];

	BU_ASSERT_LONG( mk_version, <=, 4 );

	bzero( (char *)rec, sizeof(rec) );
	rec[0].ss.ss_id = DBID_STRSOL;
	NAMEMOVE( name, rec[0].ss.ss_name );
	strncpy( rec[0].ss.ss_keyword, string_solid, sizeof(rec[0].ss.ss_keyword)-1 );
	strncpy( rec[0].ss.ss_args, string_arg, DB_SS_LEN-1 );

	if( fwrite( (char *)rec, sizeof(rec), 1, fp ) != 1 )
		return -1;
	return 0;
}
#endif

/*
 *			M K _ S U B M O D E L
 *
 *  Create a submodel solid.
 *  If file is NULL or "", the treetop refers to the current database.
 *  Treetop is the name of a single database object in 'file'.
 *  meth is 0 (RT_PART_NUBSPT) or 1 (RT_PART_NUGRID).
 *  method 0 is what is normally used.
 */
int
mk_submodel(struct rt_wdb *fp, const char *name, const char *file, const char *treetop, int meth)
{
	struct rt_submodel_internal *in;

	BU_GETSTRUCT( in, rt_submodel_internal );
	in->magic = RT_SUBMODEL_INTERNAL_MAGIC;
	bu_vls_init( &in->file );
	if( file )  bu_vls_strcpy( &in->file, file );
	bu_vls_init( &in->treetop );
	bu_vls_strcpy( &in->treetop, treetop );
	in->meth = meth;

	return wdb_export( fp, name, (genptr_t)in, ID_SUBMODEL, mk_conv2mm );
}
@


11.20
log
@change conf.h to a wrapped config.h
@
text
@d35 1
a35 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/libwdb/strsol.c,v 11.19 2004/04/05 07:40:23 morrison Exp $ (BRL)";
@


11.19
log
@merge of ansi-6-0-branch into HEAD
@
text
@d35 1
a35 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
d38 5
a42 1
#include "conf.h"
@


11.18
log
@update copyright to include span through 2003
@
text
@d35 1
a35 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libwdb/strsol.c,v 11.17 2002/08/20 17:08:20 jra Exp $ (BRL)";
d57 7
a63 7
mk_dsp( fp, name, file, xdim, ydim, mat )
struct rt_wdb		*fp;
const char	*name;
const char	*file;		/* name of file containing elevation data */
int		xdim;		/* X dimension of file (w cells) */
int		ydim;		/* Y dimension of file (n cells) */
const matp_t	mat;		/* convert solid coords to model space */
d84 8
a91 8
mk_ebm( fp, name, file, xdim, ydim, tallness, mat )
struct rt_wdb		*fp;
const char	*name;
const char	*file;		/* name of file containing bitmap */
int		xdim;		/* X dimansion of file (w cells) */
int		ydim;		/* Y dimension of file (n cells) */
fastf_t		tallness;	/* Z extrusion height (mm) */
const matp_t	mat;		/* convert local coords to model space */
d110 11
a120 11
mk_vol( fp, name, file, xdim, ydim, zdim, lo, hi, cellsize, mat )
struct rt_wdb		*fp;
const char	*name;
const char	*file;		/* name of file containing bitmap */
int		xdim;		/* X dimansion of file (w cells) */
int		ydim;		/* Y dimension of file (n cells) */
int		zdim;		/* Z dimension of file (d cells) */
int		lo;		/* Low threshold */
int		hi;		/* High threshold */
const vect_t	cellsize;	/* ideal coords: size of each cell */
const matp_t	mat;		/* convert local coords to model space */
d179 1
a179 6
mk_submodel( fp, name, file, treetop, meth )
struct rt_wdb		*fp;
const char	*name;
const char	*file;
const char	*treetop;
int		meth;
@


11.17
log
@Restoration of entire source tree to Pre-Hartley state
@
text
@d30 1
a30 1
 *	This software is Copyright (C) 1994 by the United States Army
d35 1
a35 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libwdb/strsol.c,v 11.15 2001/04/20 22:31:12 morrison Exp $ (BRL)";
@


11.17.4.1
log
@sync to HEAD...
@
text
@d30 1
a30 1
 *	This software is Copyright (C) 1994-2004 by the United States Army
d35 1
a35 1
static const char RCSid[] = "@@(#)$Header: /n/cad/c/CVS/brlcad/libwdb/strsol.c,v 11.18 2004/02/02 17:39:30 morrison Exp $ (BRL)";
@


11.17.10.1
log
@merge from HEAD
@
text
@d30 1
a30 1
 *	This software is Copyright (C) 1994-2004 by the United States Army
d35 1
a35 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libwdb/strsol.c,v 11.18 2004/02/02 17:39:30 morrison Exp $ (BRL)";
@


11.17.10.2
log
@merge from head
@
text
@d35 1
a35 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libwdb/strsol.c,v 11.17.10.1 2004/02/12 19:41:24 erikg Exp $ (BRL)";
@


11.17.2.1
log
@Initial ANSIfication
@
text
@d35 1
a35 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libwdb/strsol.c,v 11.17 2002/08/20 17:08:20 jra Exp $ (BRL)";
d57 7
a63 7
mk_dsp(struct rt_wdb *fp, const char *name, const char *file, int xdim, int ydim, const matp_t mat)
             		    
          	      
          	      		/* name of file containing elevation data */
   		     		/* X dimension of file (w cells) */
   		     		/* Y dimension of file (n cells) */
            	    		/* convert solid coords to model space */
d84 8
a91 8
mk_ebm(struct rt_wdb *fp, const char *name, const char *file, int xdim, int ydim, fastf_t tallness, const matp_t mat)
             		    
          	      
          	      		/* name of file containing bitmap */
   		     		/* X dimansion of file (w cells) */
   		     		/* Y dimension of file (n cells) */
       		         	/* Z extrusion height (mm) */
            	    		/* convert local coords to model space */
d110 11
a120 11
mk_vol(struct rt_wdb *fp, const char *name, const char *file, int xdim, int ydim, int zdim, int lo, int hi, const fastf_t *cellsize, const matp_t mat)
             		    
          	      
          	      		/* name of file containing bitmap */
   		     		/* X dimansion of file (w cells) */
   		     		/* Y dimension of file (n cells) */
   		     		/* Z dimension of file (d cells) */
   		   		/* Low threshold */
   		   		/* High threshold */
            	         	/* ideal coords: size of each cell */
            	    		/* convert local coords to model space */
d179 6
a184 1
mk_submodel(struct rt_wdb *fp, const char *name, const char *file, const char *treetop, int meth)
@


11.17.2.2
log
@sync branch with HEAD
@
text
@d30 1
a30 1
 *	This software is Copyright (C) 1994-2004 by the United States Army
d35 1
a35 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
@


11.16
log
@Converted from K&R to ANSI C - RFH
@
text
@d57 7
a63 7
mk_dsp(struct rt_wdb *fp, const char *name, const char *file, int xdim, int ydim, const matp_t mat)
             		    
          	      
          	      		/* name of file containing elevation data */
   		     		/* X dimension of file (w cells) */
   		     		/* Y dimension of file (n cells) */
            	    		/* convert solid coords to model space */
d84 8
a91 8
mk_ebm(struct rt_wdb *fp, const char *name, const char *file, int xdim, int ydim, fastf_t tallness, const matp_t mat)
             		    
          	      
          	      		/* name of file containing bitmap */
   		     		/* X dimansion of file (w cells) */
   		     		/* Y dimension of file (n cells) */
       		         	/* Z extrusion height (mm) */
            	    		/* convert local coords to model space */
d110 11
a120 11
mk_vol(struct rt_wdb *fp, const char *name, const char *file, int xdim, int ydim, int zdim, int lo, int hi, const fastf_t *cellsize, const matp_t mat)
             		    
          	      
          	      		/* name of file containing bitmap */
   		     		/* X dimansion of file (w cells) */
   		     		/* Y dimension of file (n cells) */
   		     		/* Z dimension of file (d cells) */
   		   		/* Low threshold */
   		   		/* High threshold */
            	         	/* ideal coords: size of each cell */
            	    		/* convert local coords to model space */
d179 6
a184 1
mk_submodel(struct rt_wdb *fp, const char *name, const char *file, const char *treetop, int meth)
@


11.15
log
@CONST to const
@
text
@d35 1
a35 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libwdb/strsol.c,v 11.14 2001/04/02 21:38:14 morrison Exp $ (BRL)";
d57 7
a63 7
mk_dsp( fp, name, file, xdim, ydim, mat )
struct rt_wdb		*fp;
const char	*name;
const char	*file;		/* name of file containing elevation data */
int		xdim;		/* X dimension of file (w cells) */
int		ydim;		/* Y dimension of file (n cells) */
const matp_t	mat;		/* convert solid coords to model space */
d84 8
a91 8
mk_ebm( fp, name, file, xdim, ydim, tallness, mat )
struct rt_wdb		*fp;
const char	*name;
const char	*file;		/* name of file containing bitmap */
int		xdim;		/* X dimansion of file (w cells) */
int		ydim;		/* Y dimension of file (n cells) */
fastf_t		tallness;	/* Z extrusion height (mm) */
const matp_t	mat;		/* convert local coords to model space */
d110 11
a120 11
mk_vol( fp, name, file, xdim, ydim, zdim, lo, hi, cellsize, mat )
struct rt_wdb		*fp;
const char	*name;
const char	*file;		/* name of file containing bitmap */
int		xdim;		/* X dimansion of file (w cells) */
int		ydim;		/* Y dimension of file (n cells) */
int		zdim;		/* Z dimension of file (d cells) */
int		lo;		/* Low threshold */
int		hi;		/* High threshold */
const vect_t	cellsize;	/* ideal coords: size of each cell */
const matp_t	mat;		/* convert local coords to model space */
d179 1
a179 6
mk_submodel( fp, name, file, treetop, meth )
struct rt_wdb		*fp;
const char	*name;
const char	*file;
const char	*treetop;
int		meth;
@


11.14
log
@Deprecated bn_mat_copy() for new performance version of MAT_COPY() macro in h/vmath.h.
@
text
@d35 1
a35 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libwdb/strsol.c,v 11.13 2001/03/23 22:35:01 butler Exp $ (BRL)";
d59 2
a60 2
CONST char	*name;
CONST char	*file;		/* name of file containing elevation data */
d63 1
a63 1
CONST matp_t	mat;		/* convert solid coords to model space */
d86 2
a87 2
CONST char	*name;
CONST char	*file;		/* name of file containing bitmap */
d91 1
a91 1
CONST matp_t	mat;		/* convert local coords to model space */
d112 2
a113 2
CONST char	*name;
CONST char	*file;		/* name of file containing bitmap */
d119 2
a120 2
CONST vect_t	cellsize;	/* ideal coords: size of each cell */
CONST matp_t	mat;		/* convert local coords to model space */
d149 3
a151 3
CONST char	*name;
CONST char	*string_solid;
CONST char	*string_arg;
d181 3
a183 3
CONST char	*name;
CONST char	*file;
CONST char	*treetop;
@


11.13
log
@Changes to support new DSP primitive representation
@
text
@d35 1
a35 1
static const char RCSid[] = "@@(#)$Header: /n/tgm/d/CVS/brlcad/libwdb/strsol.c,v 11.12 2001/03/21 22:37:41 jra Exp $ (BRL)";
d75 1
a75 1
	mat_copy( dsp->dsp_stom, mat );
d101 1
a101 1
	mat_copy( ebm->mat , mat );
d133 1
a133 1
	mat_copy( vol->mat , mat );
@


11.12
log
@Submodel now has unlimited length names
@
text
@d35 1
a35 1
static const char RCSid[] = "@@(#)$Header: /d/CVS/brlcad/libwdb/strsol.c,v 11.11 2000/07/12 21:58:04 mike Exp $ (BRL)";
d69 3
a71 2
	bu_vls_init( &dsp->dsp_file );
	bu_vls_strcpy( &dsp->dsp_file, file);
@


11.11
log
@
New version of LIBWDB which takes a (struct rt_wdb *) rather than a
(FILE *) as the first parameter.
@
text
@d35 1
a35 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libwdb/strsol.c,v 11.10 2000/07/12 00:13:52 cjohnson Exp $ (BRL)";
d189 4
a192 2
	if( file )  strncpy( in->file, file, sizeof(in->file)-1 );
	strncpy( in->treetop, treetop, sizeof(in->treetop)-1 );
@


11.10
log
@LINT picking from gcc -Wall
@
text
@d35 1
a35 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libwdb/strsol.c,v 11.9 2000/07/08 04:01:11 mike Exp $ (BRL)";
d58 1
a58 1
FILE		*fp;
d76 1
a76 1
	return( mk_export_fwrite( fp, name, (genptr_t)dsp, ID_DSP ) );
d84 1
a84 1
FILE		*fp;
d102 1
a102 1
	return( mk_export_fwrite( fp, name, (genptr_t)ebm, ID_EBM ) );
d110 1
a110 1
FILE		*fp;
d134 1
a134 1
	return( mk_export_fwrite( fp, name, (genptr_t)vol, ID_VOL ) );
d137 1
d166 1
d179 1
a179 1
FILE		*fp;
d193 1
a193 1
	return mk_export_fwrite( fp, name, (genptr_t)in, ID_SUBMODEL );
@


11.9
log
@
Modified to allow mk_fwrite_internal() to free the objects.
Added flag variable mk_version to indicate what database version to be written.
@
text
@d35 1
a35 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libwdb/strsol.c,v 11.8 2000/07/08 01:41:22 mike Exp $ (BRL)";
d42 5
@


11.8
log
@
const RCSid
@
text
@d35 1
a35 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libwdb/strsol.c,v 11.7 2000/06/29 15:07:55 butler Exp $ (BRL)";
d60 1
a60 1
	struct rt_dsp_internal dsp;
d62 8
a69 7
	dsp.magic = RT_DSP_INTERNAL_MAGIC;
	bu_vls_init( &dsp.dsp_file );
	bu_vls_strcpy( &dsp.dsp_file, file);

	dsp.dsp_xcnt = xdim;
	dsp.dsp_ycnt = ydim;
	mat_copy( dsp.dsp_stom, mat );
d71 1
a71 1
	return( mk_export_fwrite( fp, name, (genptr_t)&dsp, ID_DSP ) );
d87 1
a87 1
	struct rt_ebm_internal	ebm;
d89 7
a95 6
	ebm.magic = RT_EBM_INTERNAL_MAGIC;
	strncpy( ebm.file, file, RT_EBM_NAME_LEN );
	ebm.xdim = xdim;
	ebm.ydim = ydim;
	ebm.tallness = tallness;
	mat_copy( ebm.mat , mat );
d97 1
a97 1
	return( mk_export_fwrite( fp, name, (genptr_t)&ebm, ID_EBM ) );
d116 1
a116 1
	struct rt_vol_internal	vol;
d118 10
a127 9
	vol.magic = RT_VOL_INTERNAL_MAGIC;
	strncpy( vol.file, file, RT_VOL_NAME_LEN );
	vol.xdim = xdim;
	vol.ydim = ydim;
	vol.zdim = zdim;
	vol.lo = lo;
	vol.hi = hi;
	VMOVE( vol.cellsize , cellsize );
	mat_copy( vol.mat , mat );
d129 1
a129 1
	return( mk_export_fwrite( fp, name, (genptr_t)&vol, ID_VOL ) );
d148 2
d178 1
a178 1
	struct rt_submodel_internal in;
d180 5
a184 5
	bzero( (char *)&in, sizeof(in) );
	in.magic = RT_SUBMODEL_INTERNAL_MAGIC;
	if( file )  strncpy( in.file, file, sizeof(in.file)-1 );
	strncpy( in.treetop, treetop, sizeof(in.treetop)-1 );
	in.meth = meth;
d186 1
a186 1
	return mk_export_fwrite( fp, name, (genptr_t)&in, ID_SUBMODEL );
@


11.7
log
@Updated for new DSP
@
text
@d35 1
a35 1
static char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libwdb/strsol.c,v 11.6 2000/06/29 14:36:06 butler Exp $ (BRL)";
@


11.6
log
@Updated DSP to use VLS for string name
@
text
@d35 1
a35 1
static char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libwdb/strsol.c,v 11.5 2000/01/07 21:55:00 mike Exp $ (BRL)";
d63 1
a63 1
	BU_VLS_INIT(dsp.dsp_file);
@


11.5
log
@
More CONST
@
text
@d35 1
a35 1
static char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libwdb/strsol.c,v 11.4 2000/01/07 19:46:17 mike Exp $ (BRL)";
d63 3
a65 1
	strncpy( dsp.dsp_file, file, DSP_NAME_LEN );
@


11.4
log
@
Added mk_submodel
@
text
@d35 1
a35 1
static char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libwdb/strsol.c,v 11.3 1997/05/22 10:45:00 butler Exp $ (BRL)";
d54 2
a55 2
char		*name;
char		*file;		/* name of file containing elevation data */
d71 3
d77 2
a78 2
char		*name;
char		*file;		/* name of file containing bitmap */
d96 3
d102 2
a103 2
char		*name;
char		*file;		/* name of file containing bitmap */
d109 1
a109 1
vect_t		cellsize;	/* ideal coords: size of each cell */
@


11.3
log
@added dsp solid
@
text
@d35 1
a35 1
static char RCSid[] = "@@(#)$Header: /m/cad/libwdb/RCS/strsol.c,v 11.2 1996/08/31 11:12:44 mike Exp butler $ (BRL)";
d146 28
@


11.2
log
@bu.h
@
text
@d35 1
a35 1
static char RCSid[] = "@@(#)$Header: /m/cad/libwdb/RCS/strsol.c,v 11.1 1995/01/04 09:51:41 mike Rel4_4 mike $ (BRL)";
d50 20
@


11.1
log
@Release_4.4
@
text
@d35 1
a35 1
static char RCSid[] = "@@(#)$Header: /m/cad/libwdb/RCS/strsol.c,v 1.3 94/12/01 19:13:32 mike Exp $ (BRL)";
d43 1
d45 1
a45 1
#include "rtlist.h"
@


1.3
log
@Extra &
@
text
@d35 1
a35 1
static char RCSid[] = "@@(#)$Header: /m/cad/libwdb/RCS/strsol.c,v 1.2 94/10/19 22:00:45 mike Exp Locker: mike $ (BRL)";
@


1.2
log
@Added mk_strsol().
@
text
@d35 1
a35 1
static char RCSid[] = "@@(#)$Header: /m/cad/libwdb/RCS/strsol.c,v 1.1 94/10/17 12:46:16 jra Exp Locker: mike $ (BRL)";
d122 1
a122 1
	if( fwrite( (char *)&rec, sizeof(rec), 1, fp ) != 1 )
@


1.1
log
@Initial revision
@
text
@d35 1
a35 1
static char RCSid[] = "@@(#)$Header: /m/cad/libwdb/RCS/wdb.c,v 10.3 1994/08/09 19:56:53 gdurf Exp $ (BRL)";
d48 1
d58 1
a58 1
mat_t		mat;		/* convert local coords to model space */
d83 1
a83 1
mat_t		mat;		/* convert local coords to model space */
d98 27
@
