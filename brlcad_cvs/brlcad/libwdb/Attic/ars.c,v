head	11.12;
access;
symbols
	ansi-20040405-merged:11.8.2.2
	postmerge-20040405-ansi:11.10
	premerge-20040404-ansi:11.9
	postmerge-autoconf:11.9
	autoconf-freeze:11.8.10.2
	premerge-autoconf:11.9
	postmerge-20040315-windows:11.9
	premerge-20040315-windows:11.9
	windows-20040315-freeze:11.8.4.1
	autoconf-20031203:11.8
	autoconf-20031202:11.8
	autoconf-branch:11.8.0.10
	phong-branch:11.8.0.8
	photonmap-branch:11.8.0.6
	rel-6-1-DP:11.8
	windows-branch:11.8.0.4
	rel-6-0-2:11.6
	ansi-branch:11.8.0.2
	rel-6-0-1-branch:11.6.0.2
	hartley-6-0-post:11.7
	hartley-6-0-pre:11.6
	rel-6-0-1:11.6
	rel-6-0:11.6
	rel-5-4:11.2
	offsite-5-3-pre:11.6
	rel-5-3:11.2
	rel-5-2:11.2
	rel-5-1-branch:11.2.0.2
	rel-5-1:11.2
	rel-5-0:11.2
	rel-5-0-beta:11.2
	rel-4-5:11.2
	ctj-4-5-post:11.2
	ctj-4-5-pre:11.2
	rel-4-4:11.1
	rel-4-0:10.1;
locks; strict;
comment	@ * @;


11.12
date	2004.05.21.18.07.37;	author morrison;	state dead;
branches;
next	11.11;

11.11
date	2004.05.10.15.30.47;	author erikg;	state Exp;
branches;
next	11.10;

11.10
date	2004.04.05.07.40.23;	author morrison;	state Exp;
branches;
next	11.9;

11.9
date	2004.02.02.17.39.30;	author morrison;	state Exp;
branches;
next	11.8;

11.8
date	2002.08.20.17.08.20;	author jra;	state Exp;
branches
	11.8.2.1
	11.8.4.1
	11.8.10.1;
next	11.7;

11.7
date	2002.08.15.20.55.30;	author hartley;	state Exp;
branches;
next	11.6;

11.6
date	2000.07.24.19.27.31;	author mike;	state Exp;
branches;
next	11.5;

11.5
date	2000.07.12.21.58.03;	author mike;	state Exp;
branches;
next	11.4;

11.4
date	2000.07.08.04.01.09;	author mike;	state Exp;
branches;
next	11.3;

11.3
date	2000.07.08.01.41.20;	author mike;	state Exp;
branches;
next	11.2;

11.2
date	96.08.31.11.12.44;	author mike;	state Exp;
branches;
next	11.1;

11.1
date	95.01.04.09.51.33;	author mike;	state Rel4_4;
branches;
next	10.2;

10.2
date	94.08.09.19.54.31;	author gdurf;	state Exp;
branches;
next	10.1;

10.1
date	91.10.12.06.36.46;	author mike;	state Rel4_0;
branches;
next	1.3;

1.3
date	91.02.08.22.43.30;	author mike;	state Exp;
branches;
next	1.2;

1.2
date	90.02.08.01.52.48;	author mike;	state Exp;
branches;
next	1.1;

1.1
date	89.11.30.02.41.00;	author mike;	state Exp;
branches;
next	;

11.8.2.1
date	2002.09.19.18.01.58;	author morrison;	state Exp;
branches;
next	11.8.2.2;

11.8.2.2
date	2004.03.17.21.21.47;	author morrison;	state Exp;
branches;
next	;

11.8.4.1
date	2004.03.11.23.45.47;	author morrison;	state Exp;
branches;
next	;

11.8.10.1
date	2004.02.12.19.41.24;	author erikg;	state Exp;
branches;
next	11.8.10.2;

11.8.10.2
date	2004.03.15.14.07.33;	author erikg;	state Exp;
branches;
next	;


desc
@libwdb module for writing an ARS
@


11.12
log
@moved to src/
@
text
@/*
 *			A R S . C
 *
 *  libwdb support for writing an ARS.
 *
 *  Author -
 *	Michael John Muuss
 *
 *  Source -
 *	SECAD/VLD Computing Consortium, Bldg 394
 *	The U. S. Army Ballistic Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5066
 *  
 *  Copyright Notice -
 *	This software is Copyright (C) 1989-2004 by the United States Army.
 *	All rights reserved.
 */
#ifndef lint
static const char RCSid[] = "@@(#)$Header: /n/xoff/cvs/brlcad/libwdb/ars.c,v 11.11 2004/05/10 15:30:47 erikg Exp $ (BRL)";
#endif

#ifdef HAVE_CONFIG_H
# include "config.h"
#endif



#include <stdio.h>
#include <math.h>
#include "machine.h"
#include "bu.h"
#include "vmath.h"
#include "bn.h"
#include "rtgeom.h"
#include "raytrace.h"
#include "wdb.h"

/*
 *			M K _ A R S
 *
 *  The input is an array of pointers to an array of fastf_t values.
 *  There is one pointer for each curve.
 *  It is anticipated that there will be pts_per_curve+1 elements per
 *  curve, the first point being repeated as the final point, although
 *  this is not checked here.
 *
 *  Returns -
 *	 0	OK
 *	-1	Fail
 */
int
mk_ars(struct rt_wdb *filep, const char *name, int ncurves, int pts_per_curve, fastf_t **curves)
{
	struct rt_ars_internal	*ars;

	BU_GETSTRUCT( ars, rt_ars_internal );
	ars->magic = RT_ARS_INTERNAL_MAGIC;
	ars->ncurves = ncurves;
	ars->pts_per_curve = pts_per_curve;
	ars->curves = curves;

	return wdb_export( filep, name, (genptr_t)ars, ID_ARS, mk_conv2mm );
}
@


11.11
log
@change conf.h to a wrapped config.h
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/libwdb/ars.c,v 11.10 2004/04/05 07:40:23 morrison Exp $ (BRL)";
@


11.10
log
@merge of ansi-6-0-branch into HEAD
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
d22 5
a26 1
#include "conf.h"
@


11.9
log
@update copyright to include span through 2003
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libwdb/ars.c,v 11.8 2002/08/20 17:08:20 jra Exp $ (BRL)";
d48 1
a48 6
mk_ars( filep, name, ncurves, pts_per_curve, curves )
struct rt_wdb	*filep;
const char	*name;
int	ncurves;
int	pts_per_curve;
fastf_t	**curves;
@


11.8
log
@Restoration of entire source tree to Pre-Hartley state
@
text
@d15 1
a15 1
 *	This software is Copyright (C) 1989 by the United States Army.
d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libwdb/ars.c,v 11.6 2000/07/24 19:27:31 mike Exp $ (BRL)";
@


11.8.4.1
log
@sync to HEAD...
@
text
@d15 1
a15 1
 *	This software is Copyright (C) 1989-2004 by the United States Army.
d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /n/cad/c/CVS/brlcad/libwdb/ars.c,v 11.9 2004/02/02 17:39:30 morrison Exp $ (BRL)";
@


11.8.10.1
log
@merge from HEAD
@
text
@d15 1
a15 1
 *	This software is Copyright (C) 1989-2004 by the United States Army.
d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libwdb/ars.c,v 11.9 2004/02/02 17:39:30 morrison Exp $ (BRL)";
@


11.8.10.2
log
@merge from head
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libwdb/ars.c,v 11.8.10.1 2004/02/12 19:41:24 erikg Exp $ (BRL)";
@


11.8.2.1
log
@Initial ANSIfication
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libwdb/ars.c,v 11.8 2002/08/20 17:08:20 jra Exp $ (BRL)";
d48 6
a53 1
mk_ars(struct rt_wdb *filep, const char *name, int ncurves, int pts_per_curve, fastf_t **curves)
@


11.8.2.2
log
@sync branch with HEAD
@
text
@d15 1
a15 1
 *	This software is Copyright (C) 1989-2004 by the United States Army.
d19 1
a19 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
@


11.7
log
@Converted from K&R to ANSI C - RFH
@
text
@d48 6
a53 1
mk_ars(struct rt_wdb *filep, const char *name, int ncurves, int pts_per_curve, fastf_t **curves)
@


11.6
log
@
Changed mged/typin.c to start using libwdb interfaces.
Which means mged/ged.c now also opens a libwdb interface.
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libwdb/ars.c,v 11.5 2000/07/12 21:58:03 mike Exp $ (BRL)";
d48 1
a48 6
mk_ars( filep, name, ncurves, pts_per_curve, curves )
struct rt_wdb	*filep;
const char	*name;
int	ncurves;
int	pts_per_curve;
fastf_t	**curves;
@


11.5
log
@
New version of LIBWDB which takes a (struct rt_wdb *) rather than a
(FILE *) as the first parameter.
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libwdb/ars.c,v 11.4 2000/07/08 04:01:09 mike Exp $ (BRL)";
d50 1
a50 1
char	*name;
@


11.4
log
@
Modified to allow mk_fwrite_internal() to free the objects.
Added flag variable mk_version to indicate what database version to be written.
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libwdb/ars.c,v 11.3 2000/07/08 01:41:20 mike Exp $ (BRL)";
d49 1
a49 1
FILE	*filep;
d63 1
a63 1
	return mk_export_fwrite( filep, name, (genptr_t)ars, ID_ARS );
@


11.3
log
@
const RCSid
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libwdb/ars.c,v 11.2 1996/08/31 11:12:44 mike Exp $ (BRL)";
d55 1
a55 1
	struct rt_ars_internal	ars;
d57 5
a61 4
	ars.magic = RT_ARS_INTERNAL_MAGIC;
	ars.ncurves = ncurves;
	ars.pts_per_curve = pts_per_curve;
	ars.curves = curves;
d63 1
a63 1
	return mk_export_fwrite( filep, name, (genptr_t)&ars, ID_ARS );
@


11.2
log
@bu.h
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/libwdb/RCS/ars.c,v 11.1 1995/01/04 09:51:33 mike Rel4_4 mike $ (BRL)";
@


11.1
log
@Release_4.4
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/libwdb/RCS/ars.c,v 10.2 94/08/09 19:54:31 gdurf Exp $ (BRL)";
d27 1
d29 1
a29 1
#include "rtlist.h"
@


10.2
log
@+include
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/libwdb/RCS/ars.c,v 10.1 1991/10/12 06:36:46 mike Rel4_0 gdurf $ (BRL)";
@


10.1
log
@Release_4.0
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/libwdb/RCS/ars.c,v 1.3 91/02/08 22:43:30 mike Exp $ (BRL)";
d21 2
@


1.3
log
@Converted to new LIBRT import/export interface
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/libwdb/RCS/ars.c,v 1.2 90/02/08 01:52:48 mike Exp $ (BRL)";
@


1.2
log
@Modified to perform units conversion.
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: ars.c,v 1.1 89/11/30 02:41:00 mike Locked $ (BRL)";
a24 1
#include "db.h"
d26 3
a30 5
#ifdef SYSV
#define bzero(str,n)		memset( str, '\0', n )
#define bcopy(from,to,count)	memcpy( to, from, count )
#endif

d52 1
a52 4
	union record	rec;
	vect_t		base_pt;
	int		per_curve_grans;
	int		cur;
d54 4
a57 1
	bzero( (char *)&rec, sizeof(rec) );
d59 1
a59 46
	rec.a.a_id = ID_ARS_A;
	rec.a.a_type = ARS;			/* obsolete? */
	NAMEMOVE( name, rec.a.a_name );
	rec.a.a_m = ncurves;
	rec.a.a_n = pts_per_curve;

	per_curve_grans = (pts_per_curve+7)/8;
	rec.a.a_curlen = per_curve_grans;
	rec.a.a_totlen = per_curve_grans * ncurves;
	if( fwrite( (char *)&rec, sizeof(rec), 1, filep ) != 1 )
		return(-1);

	VMOVE( base_pt, &curves[0][0] );
	/* The later subtraction will "undo" this, leaving just base_pt */
	VADD2( &curves[0][0], &curves[0][0], base_pt);

	for( cur=0; cur<ncurves; cur++ )  {
		register fastf_t	*fp;
		int			npts;
		int			left;

		fp = curves[cur];
		left = pts_per_curve;
		for( npts=0; npts < pts_per_curve; npts+=8, left -= 8 )  {
			register int	el;
			register int	lim;

			bzero( (char *)&rec, sizeof(rec) );
			rec.b.b_id = ID_ARS_B;
			rec.b.b_type = ARSCONT;	/* obsolete? */
			rec.b.b_n = cur+1;	/* obsolete? */
			rec.b.b_ngranule = (npts/8)+1; /* obsolete? */

			lim = (left > 8 ) ? 8 : left;
			for( el=0; el < lim; el++ )  {
				vect_t	diff;
				VSUB2SCALE( diff, fp, base_pt, mk_conv2mm );
				/* XXX converts to dbfloat_t */
				VMOVE( &(rec.b.b_values[el*3]), diff );
				fp += ELEMENTS_PER_VECT;
			}
			if( fwrite( (char *)&rec, sizeof(rec), 1, filep ) != 1 )
				return(-1);
		}
	}
	return(0);
@


1.1
log
@Initial revision
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header$ (BRL)";
d27 1
d98 1
a98 1
				VSUB2( diff, fp, base_pt );
@
