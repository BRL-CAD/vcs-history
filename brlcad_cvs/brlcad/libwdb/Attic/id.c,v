head	11.17;
access;
symbols
	ansi-20040405-merged:11.13.2.2
	postmerge-20040405-ansi:11.15
	premerge-20040404-ansi:11.14
	postmerge-autoconf:11.14
	autoconf-freeze:11.13.10.2
	premerge-autoconf:11.14
	postmerge-20040315-windows:11.14
	premerge-20040315-windows:11.14
	windows-20040315-freeze:11.13.4.1
	autoconf-20031203:11.13
	autoconf-20031202:11.13
	autoconf-branch:11.13.0.10
	phong-branch:11.13.0.8
	photonmap-branch:11.13.0.6
	rel-6-1-DP:11.13
	windows-branch:11.13.0.4
	rel-6-0-2:11.11
	ansi-branch:11.13.0.2
	rel-6-0-1-branch:11.11.0.2
	hartley-6-0-post:11.12
	hartley-6-0-pre:11.11
	rel-6-0-1:11.11
	rel-6-0:11.11
	rel-5-4:11.6
	offsite-5-3-pre:11.10
	rel-5-3:11.6
	rel-5-2:11.6
	rel-5-1-branch:11.6.0.2
	rel-5-1:11.6
	rel-5-0:11.3
	rel-5-0-beta:11.3
	rel-4-5:11.3
	ctj-4-5-post:11.3
	ctj-4-5-pre:11.3
	rel-4-4:11.1
	rel-4-0:10.1;
locks; strict;
comment	@ * @;


11.17
date	2004.05.21.18.07.37;	author morrison;	state dead;
branches;
next	11.16;

11.16
date	2004.05.10.15.30.47;	author erikg;	state Exp;
branches;
next	11.15;

11.15
date	2004.04.05.07.40.23;	author morrison;	state Exp;
branches;
next	11.14;

11.14
date	2004.02.02.17.39.30;	author morrison;	state Exp;
branches;
next	11.13;

11.13
date	2002.08.20.17.08.20;	author jra;	state Exp;
branches
	11.13.2.1
	11.13.4.1
	11.13.10.1;
next	11.12;

11.12
date	2002.08.15.20.55.30;	author hartley;	state Exp;
branches;
next	11.11;

11.11
date	2001.04.20.22.31.12;	author morrison;	state Exp;
branches;
next	11.10;

11.10
date	2000.07.13.01.28.02;	author mike;	state Exp;
branches;
next	11.9;

11.9
date	2000.07.12.21.58.03;	author mike;	state Exp;
branches;
next	11.8;

11.8
date	2000.07.08.04.01.10;	author mike;	state Exp;
branches;
next	11.7;

11.7
date	2000.07.08.01.41.21;	author mike;	state Exp;
branches;
next	11.6;

11.6
date	2000.01.07.04.20.35;	author mike;	state Exp;
branches;
next	11.5;

11.5
date	2000.01.07.02.50.15;	author mike;	state Exp;
branches;
next	11.4;

11.4
date	2000.01.06.22.35.43;	author mike;	state Exp;
branches;
next	11.3;

11.3
date	97.06.03.16.03.59;	author pjt;	state Exp;
branches;
next	11.2;

11.2
date	96.08.31.11.12.44;	author mike;	state Exp;
branches;
next	11.1;

11.1
date	95.01.04.09.51.35;	author mike;	state Rel4_4;
branches;
next	10.2;

10.2
date	94.08.09.19.55.12;	author gdurf;	state Exp;
branches;
next	10.1;

10.1
date	91.10.12.06.36.47;	author mike;	state Rel4_0;
branches;
next	1.1;

1.1
date	91.06.13.02.42.17;	author mike;	state Exp;
branches;
next	;

11.13.2.1
date	2002.09.19.18.01.58;	author morrison;	state Exp;
branches;
next	11.13.2.2;

11.13.2.2
date	2004.03.17.21.21.47;	author morrison;	state Exp;
branches;
next	;

11.13.4.1
date	2004.03.11.23.45.47;	author morrison;	state Exp;
branches;
next	;

11.13.10.1
date	2004.02.12.19.41.24;	author erikg;	state Exp;
branches;
next	11.13.10.2;

11.13.10.2
date	2004.03.15.14.07.33;	author erikg;	state Exp;
branches;
next	;


desc
@mk_id
@


11.17
log
@moved to src/
@
text
@/*
 *			I D . C
 *
 *  An ID record must be the first granule in the database.
 *
 *  Return codes of 0 are OK, -1 signal an error.
 *
 *  Authors -
 *	Michael John Muuss
 *	Paul R. Stay
 *  
 *  Source -
 *	SECAD/VLD Computing Consortium, Bldg 394
 *	The U. S. Army Ballistic Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5066
 *  
 *  Copyright Notice -
 *	This software is Copyright (C) 1987-2004 by the United States Army.
 *	All rights reserved.
 */
#ifndef lint
static const char RCSid[] = "@@(#)$Header: /n/xoff/cvs/brlcad/libwdb/id.c,v 11.16 2004/05/10 15:30:47 erikg Exp $ (BRL)";
#endif

#ifdef HAVE_CONFIG_H
# include "config.h"
#endif



#include <stdio.h>
#include <math.h>
#include "machine.h"
#include "bu.h"
#include "db.h"
#include "vmath.h"
#include "bn.h"
#include "rtgeom.h"
#include "raytrace.h"
#include "wdb.h"

/*
 *			M K _ I D
 *
 *  Make a database header (ID) record.
 */
int
mk_id(struct rt_wdb *fp, const char *title)
{
	return mk_id_editunits( fp, title, 1.0 );
}

/*
 *			M K _ I D _ U N I T S
 *
 *  Make a database header (ID) record, and note the
 *  user's preferred editing units (specified as a string).
 *
 *  Returns -
 *	<0	error
 *	0	success
 */
int
mk_id_units(struct rt_wdb *fp, const char *title, register const char *units)
{
	return mk_id_editunits( fp, title, bu_units_conversion(units) );
}

/*
 *			M K _ I D _ E D I T U N I T S
 *
 *  Make a database header (ID) record, and note the
 *  user's preferred editing units (specified as a conversion factor).
 *
 *  Note that the v4 database format offers only a limited number
 *  of choices for the preferred editing units.
 *  If the user is editing in unusual units (like 2.5feet), don't
 *  fail to create the database header.
 *
 *  In the v5 database, the conversion factor will be stored intact.
 *
 *  Note that the database-layer header record
 *  will have already been written by db_create().
 *  All we have to do here is update it.
 *
 *  Returns -
 *	<0	error
 *	0	success
 */
int
mk_id_editunits(
	struct rt_wdb *wdbp,
	const char *title,
	double local2mm )
{
	RT_CK_WDB(wdbp);
	return db_update_ident( wdbp->dbip, title, local2mm );
}
@


11.16
log
@change conf.h to a wrapped config.h
@
text
@d22 1
a22 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/libwdb/id.c,v 11.15 2004/04/05 07:40:23 morrison Exp $ (BRL)";
@


11.15
log
@merge of ansi-6-0-branch into HEAD
@
text
@d22 1
a22 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
d25 5
a29 1
#include "conf.h"
@


11.14
log
@update copyright to include span through 2003
@
text
@d22 1
a22 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libwdb/id.c,v 11.13 2002/08/20 17:08:20 jra Exp $ (BRL)";
d44 1
a44 3
mk_id( fp, title )
struct rt_wdb		*fp;
const char	*title;
d60 1
a60 4
mk_id_units( fp, title, units )
struct rt_wdb		*fp;
const char	*title;
register const char	*units;
@


11.13
log
@Restoration of entire source tree to Pre-Hartley state
@
text
@d18 1
a18 1
 *	This software is Copyright (C) 1987 by the United States Army.
d22 1
a22 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libwdb/id.c,v 11.11 2001/04/20 22:31:12 morrison Exp $ (BRL)";
@


11.13.4.1
log
@sync to HEAD...
@
text
@d18 1
a18 1
 *	This software is Copyright (C) 1987-2004 by the United States Army.
d22 1
a22 1
static const char RCSid[] = "@@(#)$Header: /n/cad/c/CVS/brlcad/libwdb/id.c,v 11.14 2004/02/02 17:39:30 morrison Exp $ (BRL)";
@


11.13.10.1
log
@merge from HEAD
@
text
@d18 1
a18 1
 *	This software is Copyright (C) 1987-2004 by the United States Army.
d22 1
a22 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libwdb/id.c,v 11.14 2004/02/02 17:39:30 morrison Exp $ (BRL)";
@


11.13.10.2
log
@merge from head
@
text
@d22 1
a22 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libwdb/id.c,v 11.13.10.1 2004/02/12 19:41:24 erikg Exp $ (BRL)";
@


11.13.2.1
log
@Initial ANSIfication
@
text
@d22 1
a22 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libwdb/id.c,v 11.13 2002/08/20 17:08:20 jra Exp $ (BRL)";
d44 3
a46 1
mk_id(struct rt_wdb *fp, const char *title)
d62 4
a65 1
mk_id_units(struct rt_wdb *fp, const char *title, register const char *units)
@


11.13.2.2
log
@sync branch with HEAD
@
text
@d18 1
a18 1
 *	This software is Copyright (C) 1987-2004 by the United States Army.
d22 1
a22 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
@


11.12
log
@Converted from K&R to ANSI C - RFH
@
text
@d44 3
a46 1
mk_id(struct rt_wdb *fp, const char *title)
d62 4
a65 1
mk_id_units(struct rt_wdb *fp, const char *title, register const char *units)
@


11.11
log
@CONST to const
@
text
@d22 1
a22 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libwdb/id.c,v 11.10 2000/07/13 01:28:02 mike Exp $ (BRL)";
d44 1
a44 3
mk_id( fp, title )
struct rt_wdb		*fp;
const char	*title;
d60 1
a60 4
mk_id_units( fp, title, units )
struct rt_wdb		*fp;
const char	*title;
register const char	*units;
@


11.10
log
@
Changed to use db_update_ident()
@
text
@d22 1
a22 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libwdb/id.c,v 11.9 2000/07/12 21:58:03 mike Exp $ (BRL)";
d46 1
a46 1
CONST char	*title;
d64 2
a65 2
CONST char	*title;
register CONST char	*units;
@


11.9
log
@
New version of LIBWDB which takes a (struct rt_wdb *) rather than a
(FILE *) as the first parameter.
@
text
@d22 1
a22 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libwdb/id.c,v 11.8 2000/07/08 04:01:10 mike Exp $ (BRL)";
d81 5
a85 1
 *  In the v5 database, the conversion factor should be stored intact.
d93 1
a93 1
	struct rt_wdb *fp,
d97 2
a98 3
	if( mk_version <= 4 )
		return db_fwrite_ident( fp, title, local2mm );
	return db5_fwrite_ident( fp, title, local2mm );
@


11.8
log
@
Modified to allow mk_fwrite_internal() to free the objects.
Added flag variable mk_version to indicate what database version to be written.
@
text
@d22 1
a22 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libwdb/id.c,v 11.7 2000/07/08 01:41:21 mike Exp $ (BRL)";
d45 1
a45 1
FILE		*fp;
d48 1
a48 3
	if( mk_version <= 4 )
		return db_fwrite_ident( fp, title, 1.0 );
	return db5_fwrite_ident( fp, title, 1.0 );
d63 1
a63 1
FILE		*fp;
d67 1
a67 3
	if( mk_version <= 4 )
		return db_fwrite_ident( fp, title, bu_units_conversion(units) );
	return db5_fwrite_ident( fp, title, bu_units_conversion(units) );
d88 4
a91 4
mk_id_editunits( fp, title, local2mm )
FILE		*fp;
CONST char	*title;
double		local2mm;
@


11.7
log
@
const RCSid
@
text
@d22 1
a22 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libwdb/id.c,v 11.6 2000/01/07 04:20:35 mike Exp $ (BRL)";
d48 3
a50 1
	return db_fwrite_ident( fp, title, 1.0 );
d69 3
a71 1
	return db_fwrite_ident( fp, title, bu_units_conversion(units) );
d97 3
a99 1
	return db_fwrite_ident( fp, title, local2mm );
@


11.6
log
@
Changed to use db_fwrite_ident()
@
text
@d22 1
a22 1
static char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libwdb/id.c,v 11.5 2000/01/07 02:50:15 mike Exp $ (BRL)";
@


11.5
log
@
Added mk_id_editunits(), which takes specification of editing
units as a conversion factor, rather than a string,
for ease of interfacing.
@
text
@d22 1
a22 1
static char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libwdb/id.c,v 11.4 2000/01/06 22:35:43 mike Exp $ (BRL)";
d48 1
a48 1
	return mk_id_units( fp, title, "mm" );
d67 1
a67 15
	union record rec;
	int	code;

	bzero( (char *)&rec, sizeof(rec) );
	rec.i.i_id = ID_IDENT;

	if( (code = db_v4_get_units_code(units)) < 0 )
		return -2;		/* ERROR */
	rec.i.i_units = code;

	strncpy( rec.i.i_version, ID_VERSION, sizeof(rec.i.i_version) );
	strncpy( rec.i.i_title, title, sizeof(rec.i.i_title) );
	if( fwrite( (char *)&rec, sizeof(rec), 1, fp ) != 1 )
		return(-1);
	return(0);
d93 1
a93 6
	CONST char *str = bu_units_string(local2mm);

	/* If user is in whacko units (like 2.5feet), don't fail */
	if(!str)  str = "mm";

	return mk_id_units( fp, title, str );
@


11.4
log
@
Modified to use new routine db_v4_get_units_code()
@
text
@d22 1
a22 1
static char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libwdb/id.c,v 11.3 1997/06/03 16:03:59 pjt Exp $ (BRL)";
d55 1
a55 1
 *  user's preferred editing units.
d84 30
a113 1
/* Should there be a routine which takes a local2mm arg as well? */
@


11.3
log
@Added units um, km, yd, mi, and other minor improvements
@
text
@d22 1
a22 1
static char RCSid[] = "@@(#)$Header: /m/cad/libwdb/RCS/id.c,v 11.2 1996/08/31 11:12:44 mike Exp $ (BRL)";
d56 4
a59 1
 *  Alas, the current database format does not have many choices.
d68 1
d73 3
a75 23
	if( strcmp( units, "none" ) == 0 )  {
		rec.i.i_units = ID_NO_UNIT;
	} else if( strcmp( units, "um" ) == 0 )  {
		rec.i.i_units = ID_UM_UNIT;
	} else if( strcmp( units, "mm" ) == 0 )  {
		rec.i.i_units = ID_MM_UNIT;
	} else if( strcmp( units, "cm" ) == 0 )  {
		rec.i.i_units = ID_CM_UNIT;
	} else if( strcmp( units, "m" ) == 0 )  {
		rec.i.i_units = ID_M_UNIT;
	} else if( strcmp( units, "km" ) == 0 )  {
		rec.i.i_units = ID_KM_UNIT;
	} else if( strcmp( units, "in" ) == 0 )  {
		rec.i.i_units = ID_IN_UNIT;
	} else if( strcmp( units, "ft" ) == 0 )  {
		rec.i.i_units = ID_FT_UNIT;
	} else if( strcmp( units, "yd" ) == 0 )  {
		rec.i.i_units = ID_YD_UNIT;
	} else if( strcmp( units, "mi" ) == 0 )  {
		rec.i.i_units = ID_MI_UNIT;
	} else {
		return -2;
	}
d83 2
@


11.2
log
@bu.h
@
text
@d22 1
a22 1
static char RCSid[] = "@@(#)$Header: /m/cad/libwdb/RCS/id.c,v 11.1 1995/01/04 09:51:35 mike Rel4_4 mike $ (BRL)";
d52 1
a52 1
 *			M K _ I D
d71 2
d79 2
d85 4
@


11.1
log
@Release_4.4
@
text
@d22 1
a22 1
static char RCSid[] = "@@(#)$Header: /m/cad/libwdb/RCS/id.c,v 10.2 94/08/09 19:55:12 gdurf Exp $ (BRL)";
d30 1
d33 1
a33 1
#include "rtlist.h"
@


10.2
log
@++includes
@
text
@d22 1
a22 1
static char RCSid[] = "@@(#)$Header: /m/cad/libwdb/RCS/id.c,v 10.1 1991/10/12 06:36:47 mike Rel4_0 gdurf $ (BRL)";
@


10.1
log
@Release_4.0
@
text
@d22 1
a22 1
static char RCSid[] = "@@(#)$Header: /m/cad/libwdb/RCS/id.c,v 1.1 91/06/13 02:42:17 mike Exp $ (BRL)";
d24 2
@


1.1
log
@Initial revision
@
text
@d22 1
a22 1
static char RCSid[] = "@@(#)$Header: /m/cad/libwdb/RCS/poly.c,v 1.1 91/06/13 02:29:53 mike Exp $ (BRL)";
@
