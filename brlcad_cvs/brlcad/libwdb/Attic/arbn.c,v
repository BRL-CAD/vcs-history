head	11.12;
access;
symbols
	ansi-20040405-merged:11.8.2.2
	postmerge-20040405-ansi:11.10
	premerge-20040404-ansi:11.9
	postmerge-autoconf:11.9
	autoconf-freeze:11.8.10.2
	premerge-autoconf:11.9
	postmerge-20040315-windows:11.9
	premerge-20040315-windows:11.9
	windows-20040315-freeze:11.8.4.1
	autoconf-20031203:11.8
	autoconf-20031202:11.8
	autoconf-branch:11.8.0.10
	phong-branch:11.8.0.8
	photonmap-branch:11.8.0.6
	rel-6-1-DP:11.8
	windows-branch:11.8.0.4
	rel-6-0-2:11.6
	ansi-branch:11.8.0.2
	rel-6-0-1-branch:11.6.0.2
	hartley-6-0-post:11.7
	hartley-6-0-pre:11.6
	rel-6-0-1:11.6
	rel-6-0:11.6
	rel-5-4:11.2
	offsite-5-3-pre:11.6
	rel-5-3:11.2
	rel-5-2:11.2
	rel-5-1-branch:11.2.0.2
	rel-5-1:11.2
	rel-5-0:11.2
	rel-5-0-beta:11.2
	rel-4-5:11.2
	ctj-4-5-post:11.2
	ctj-4-5-pre:11.2
	rel-4-4:11.1
	rel-4-0:10.1;
locks; strict;
comment	@ * @;


11.12
date	2004.05.21.18.07.37;	author morrison;	state dead;
branches;
next	11.11;

11.11
date	2004.05.10.15.30.47;	author erikg;	state Exp;
branches;
next	11.10;

11.10
date	2004.04.05.07.40.23;	author morrison;	state Exp;
branches;
next	11.9;

11.9
date	2004.02.02.17.39.30;	author morrison;	state Exp;
branches;
next	11.8;

11.8
date	2002.08.20.17.08.20;	author jra;	state Exp;
branches
	11.8.2.1
	11.8.4.1
	11.8.10.1;
next	11.7;

11.7
date	2002.08.15.20.55.30;	author hartley;	state Exp;
branches;
next	11.6;

11.6
date	2000.07.24.19.27.31;	author mike;	state Exp;
branches;
next	11.5;

11.5
date	2000.07.12.21.58.03;	author mike;	state Exp;
branches;
next	11.4;

11.4
date	2000.07.08.04.01.09;	author mike;	state Exp;
branches;
next	11.3;

11.3
date	2000.07.08.01.41.19;	author mike;	state Exp;
branches;
next	11.2;

11.2
date	96.08.31.11.12.44;	author mike;	state Exp;
branches;
next	11.1;

11.1
date	95.01.04.09.51.31;	author mike;	state Rel4_4;
branches;
next	10.3;

10.3
date	94.11.04.04.50.01;	author mike;	state Exp;
branches;
next	10.2;

10.2
date	94.08.09.19.53.44;	author gdurf;	state Exp;
branches;
next	10.1;

10.1
date	91.10.12.06.36.45;	author mike;	state Rel4_0;
branches;
next	1.3;

1.3
date	91.02.08.22.43.20;	author mike;	state Exp;
branches;
next	1.2;

1.2
date	90.02.08.01.52.25;	author mike;	state Exp;
branches;
next	1.1;

1.1
date	89.12.08.06.04.27;	author mike;	state Exp;
branches;
next	;

11.8.2.1
date	2002.09.19.18.01.58;	author morrison;	state Exp;
branches;
next	11.8.2.2;

11.8.2.2
date	2004.03.17.21.21.46;	author morrison;	state Exp;
branches;
next	;

11.8.4.1
date	2004.03.11.23.45.47;	author morrison;	state Exp;
branches;
next	;

11.8.10.1
date	2004.02.12.19.41.24;	author erikg;	state Exp;
branches;
next	11.8.10.2;

11.8.10.2
date	2004.03.15.14.07.33;	author erikg;	state Exp;
branches;
next	;


desc
@libwdb routines to write an ARBN
@


11.12
log
@moved to src/
@
text
@/*
 *			A R B N . C
 *
 *  libwdb support for writing an ARBN.
 *
 *  Author -
 *	Michael John Muuss
 *
 *  Source -
 *	SECAD/VLD Computing Consortium, Bldg 394
 *	The U. S. Army Ballistic Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5066
 *  
 *  Copyright Notice -
 *	This software is Copyright (C) 1989-2004 by the United States Army.
 *	All rights reserved.
 */
#ifndef lint
static const char RCSid[] = "@@(#)$Header: /n/xoff/cvs/brlcad/libwdb/arbn.c,v 11.11 2004/05/10 15:30:47 erikg Exp $ (BRL)";
#endif

#ifdef HAVE_CONFIG_H
# include "config.h"
#endif



#include <stdio.h>
#include <math.h>
#include "machine.h"
#include "bu.h"
#include "vmath.h"
#include "bn.h"
#include "rtgeom.h"
#include "raytrace.h"
#include "wdb.h"

/*
 *			M K _ A R B N
 *
 *  Caller is responsible for freeing eqn[]
 *
 *  Returns -
 *	<0	error
 *	 0	OK
 */
int
mk_arbn(struct rt_wdb *filep, const char *name, int neqn, plane_t (*eqn))
{
	struct rt_arbn_internal	*arbn;

	if( neqn <= 0 )  return(-1);

	BU_GETSTRUCT( arbn, rt_arbn_internal );
	arbn->magic = RT_ARBN_INTERNAL_MAGIC;
	arbn->neqn = neqn;
	arbn->eqn = eqn;

	return wdb_export( filep, name, (genptr_t)arbn, ID_ARBN, mk_conv2mm );
}
@


11.11
log
@change conf.h to a wrapped config.h
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/libwdb/arbn.c,v 11.10 2004/04/05 07:40:23 morrison Exp $ (BRL)";
@


11.10
log
@merge of ansi-6-0-branch into HEAD
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
d22 5
a26 1
#include "conf.h"
@


11.9
log
@update copyright to include span through 2003
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libwdb/arbn.c,v 11.8 2002/08/20 17:08:20 jra Exp $ (BRL)";
d44 1
a44 5
mk_arbn( filep, name, neqn, eqn )
struct rt_wdb	*filep;
const char	*name;
int	neqn;
plane_t	*eqn;
@


11.8
log
@Restoration of entire source tree to Pre-Hartley state
@
text
@d15 1
a15 1
 *	This software is Copyright (C) 1989 by the United States Army.
d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libwdb/arbn.c,v 11.6 2000/07/24 19:27:31 mike Exp $ (BRL)";
@


11.8.4.1
log
@sync to HEAD...
@
text
@d15 1
a15 1
 *	This software is Copyright (C) 1989-2004 by the United States Army.
d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /n/cad/c/CVS/brlcad/libwdb/arbn.c,v 11.9 2004/02/02 17:39:30 morrison Exp $ (BRL)";
@


11.8.10.1
log
@merge from HEAD
@
text
@d15 1
a15 1
 *	This software is Copyright (C) 1989-2004 by the United States Army.
d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libwdb/arbn.c,v 11.9 2004/02/02 17:39:30 morrison Exp $ (BRL)";
@


11.8.10.2
log
@merge from head
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libwdb/arbn.c,v 11.8.10.1 2004/02/12 19:41:24 erikg Exp $ (BRL)";
@


11.8.2.1
log
@Initial ANSIfication
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libwdb/arbn.c,v 11.8 2002/08/20 17:08:20 jra Exp $ (BRL)";
d44 5
a48 1
mk_arbn(struct rt_wdb *filep, const char *name, int neqn, plane_t (*eqn))
@


11.8.2.2
log
@sync branch with HEAD
@
text
@d15 1
a15 1
 *	This software is Copyright (C) 1989-2004 by the United States Army.
d19 1
a19 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
@


11.7
log
@Converted from K&R to ANSI C - RFH
@
text
@d44 5
a48 1
mk_arbn(struct rt_wdb *filep, const char *name, int neqn, plane_t (*eqn))
@


11.6
log
@
Changed mged/typin.c to start using libwdb interfaces.
Which means mged/ged.c now also opens a libwdb interface.
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libwdb/arbn.c,v 11.5 2000/07/12 21:58:03 mike Exp $ (BRL)";
d44 1
a44 5
mk_arbn( filep, name, neqn, eqn )
struct rt_wdb	*filep;
const char	*name;
int	neqn;
plane_t	*eqn;
@


11.5
log
@
New version of LIBWDB which takes a (struct rt_wdb *) rather than a
(FILE *) as the first parameter.
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libwdb/arbn.c,v 11.4 2000/07/08 04:01:09 mike Exp $ (BRL)";
d46 1
a46 1
char	*name;
@


11.4
log
@
Modified to allow mk_fwrite_internal() to free the objects.
Added flag variable mk_version to indicate what database version to be written.
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libwdb/arbn.c,v 11.3 2000/07/08 01:41:19 mike Exp $ (BRL)";
d45 1
a45 1
FILE	*filep;
d59 1
a59 1
	return mk_export_fwrite( filep, name, (genptr_t)arbn, ID_ARBN );
@


11.3
log
@
const RCSid
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libwdb/arbn.c,v 11.2 1996/08/31 11:12:44 mike Exp $ (BRL)";
d50 1
a50 1
	struct rt_arbn_internal	arbn;
d54 4
a57 3
	arbn.magic = RT_ARBN_INTERNAL_MAGIC;
	arbn.neqn = neqn;
	arbn.eqn = eqn;
d59 1
a59 1
	return mk_export_fwrite( filep, name, (genptr_t)&arbn, ID_ARBN );
@


11.2
log
@bu.h
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/libwdb/RCS/arbn.c,v 11.1 1995/01/04 09:51:31 mike Rel4_4 mike $ (BRL)";
@


11.1
log
@Release_4.4
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/libwdb/RCS/arbn.c,v 10.3 94/11/04 04:50:01 mike Exp $ (BRL)";
d27 1
d29 1
a29 1
#include "rtlist.h"
@


10.3
log
@unused var
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/libwdb/RCS/arbn.c,v 10.2 94/08/09 19:53:44 gdurf Exp Locker: mike $ (BRL)";
@


10.2
log
@Added include of conf.h.
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/libwdb/RCS/arbn.c,v 10.1 1991/10/12 06:36:45 mike Rel4_0 gdurf $ (BRL)";
a49 1
	register int	i;
@


10.1
log
@Release_4.0
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/libwdb/RCS/arbn.c,v 1.3 91/02/08 22:43:20 mike Exp $ (BRL)";
d21 2
@


1.3
log
@Converted to new LIBRT import/export interface
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/libwdb/RCS/arbn.c,v 1.2 90/02/08 01:52:25 mike Exp $ (BRL)";
@


1.2
log
@Modified to perform units conversion.
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: arbn.c,v 1.1 89/12/08 06:04:27 mike Locked $ (BRL)";
a24 1
#include "db.h"
d26 3
a30 5
#ifdef SYSV
#define bzero(str,n)		memset( str, '\0', n )
#define bcopy(from,to,count)	memcpy( to, from, count )
#endif

d34 2
d37 1
a37 1
 *	-1	error
d47 1
a47 5
	union record	rec;
	int		bytes;
	unsigned char	*obuf;		/* output buffer */
	register double	*sbuf;		/* scalling buffer */
	register double	*sp;
d52 3
a54 1
	bzero( (char *)&rec, sizeof(rec) );
d56 1
a56 42
	rec.n.n_id = DBID_ARBN;
	NAMEMOVE( name, rec.n.n_name );
	rec.n.n_neqn = neqn;

	/*
	 * Take the data from the caller, and scale it, into sbuf
	 */
	if( (sbuf = (double *)malloc(neqn * sizeof(double) * 4)) == (double *)0 )
		return(-1);

	sp = sbuf;
	for( i=0; i<neqn; i++ )  {
		/* Normal is unscaled, should have unit length; d is scaled */
		*sp++ = eqn[i][X];
		*sp++ = eqn[i][Y];
		*sp++ = eqn[i][Z];
		*sp++ = eqn[i][3] * mk_conv2mm;
	}

	/*
	 * The network format for a double is 8 bytes and there are 4
	 * doubles per plane equation.
	 */
	rec.n.n_grans = (neqn * 8 * 4 + sizeof(union record)-1 ) /
		sizeof(union record);
	bytes = rec.n.n_grans * sizeof(union record);
	if( (obuf = (unsigned char *)malloc(bytes)) == (unsigned char *)0 )  {
		free( (char *)sbuf );
		return(-1);
	}

	htond( obuf, (char *)sbuf, neqn * 4 );

	if( fwrite( (char *)&rec, sizeof(rec), 1, filep ) != 1 ||
	    fwrite( obuf, bytes, 1, filep ) != 1 )  {
	    	free( sbuf );
		free( obuf );
		return(-1);
	}
	free( sbuf );
	free( obuf );
	return(0);			/* OK */
@


1.1
log
@Initial revision
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: ars.c,v 1.1 89/11/30 02:41:00 mike Exp $ (BRL)";
d27 1
d50 4
a53 1
	unsigned char	*buf;
d63 17
a79 1
	/* The network format for a double is 8 bytes and there are 4
d85 2
a86 1
	if( (buf = (unsigned char *)malloc(bytes)) == (unsigned char *)0 )
d88 1
d90 1
a90 1
	htond( buf, (char *)eqn, neqn * 4 );
d93 3
a95 2
	    fwrite( buf, bytes, 1, filep ) != 1 )  {
		free( buf );
d98 2
a99 1
	free( buf );
@
