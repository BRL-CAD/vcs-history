head	1.9;
access;
symbols
	ansi-20040405-merged:1.6.4.1
	postmerge-20040405-ansi:1.7
	premerge-20040404-ansi:1.7
	postmerge-autoconf:1.7
	autoconf-freeze:1.6.12.2
	premerge-autoconf:1.7
	postmerge-20040315-windows:1.7
	premerge-20040315-windows:1.7
	windows-20040315-freeze:1.6.6.1
	autoconf-20031203:1.6
	autoconf-20031202:1.6
	autoconf-branch:1.6.0.12
	phong-branch:1.6.0.10
	photonmap-branch:1.6.0.8
	rel-6-1-DP:1.6
	windows-branch:1.6.0.6
	rel-6-0-2:1.6
	ansi-branch:1.6.0.4
	rel-6-0-1-branch:1.6.0.2
	hartley-6-0-post:1.6
	hartley-6-0-pre:1.6
	rel-6-0-1:1.6
	rel-6-0:1.6
	rel-5-4:1.3
	offsite-5-3-pre:1.6
	rel-5-3:1.3
	rel-5-2:1.3
	rel-5-1-branch:1.3.0.2
	rel-5-1:1.3;
locks; strict;
comment	@ * @;


1.9
date	2004.05.21.18.07.38;	author morrison;	state dead;
branches;
next	1.8;

1.8
date	2004.05.10.15.30.47;	author erikg;	state Exp;
branches;
next	1.7;

1.7
date	2004.02.02.17.39.30;	author morrison;	state Exp;
branches;
next	1.6;

1.6
date	2000.07.12.21.58.04;	author mike;	state Exp;
branches
	1.6.4.1
	1.6.6.1
	1.6.12.1;
next	1.5;

1.5
date	2000.07.08.04.01.11;	author mike;	state Exp;
branches;
next	1.4;

1.4
date	2000.07.08.01.41.22;	author mike;	state Exp;
branches;
next	1.3;

1.3
date	2000.03.16.13.38.42;	author jra;	state Exp;
branches;
next	1.2;

1.2
date	2000.03.15.22.44.48;	author mike;	state Exp;
branches;
next	1.1;

1.1
date	2000.01.31.13.42.04;	author jra;	state Exp;
branches;
next	;

1.6.4.1
date	2004.03.17.21.21.48;	author morrison;	state Exp;
branches;
next	;

1.6.6.1
date	2004.03.11.23.45.48;	author morrison;	state Exp;
branches;
next	;

1.6.12.1
date	2004.02.12.19.41.24;	author erikg;	state Exp;
branches;
next	1.6.12.2;

1.6.12.2
date	2004.03.15.14.07.34;	author erikg;	state Exp;
branches;
next	;


desc
@@


1.9
log
@moved to src/
@
text
@/*
 *			S K T . C
 *
 * Support for sketches
 *
 *  Author -
 *	John Anderson
 *
 *  Source -
 *	The U. S. Army Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5068  USA
 *  
 *  Distribution Notice -
 *	Re-distribution of this software is restricted, as described in
 *	your "Statement of Terms and Conditions for the Release of
 *	The BRL-CAD Package" agreement.
 *
 *  Copyright Notice -
 *	This software is Copyright (C) 2000-2004 by the United States Army
 *	in all countries except the USA.  All rights reserved.
 */
#ifndef lint
static const char skt_RCSid[] = "@@(#)$Header: /n/xoff/cvs/brlcad/libwdb/skt.c,v 1.8 2004/05/10 15:30:47 erikg Exp $ (BRL)";
#endif

#ifdef HAVE_CONFIG_H
# include "config.h"
#endif



#include <stdio.h>
#include <math.h>
#include "machine.h"
#include "bu.h"
#include "vmath.h"
#include "bn.h"
#include "rtgeom.h"
#include "raytrace.h"
#include "wdb.h"

int
mk_sketch(
	struct rt_wdb *fp,
	const char *name,
	struct rt_sketch_internal *skt )
{
	RT_SKETCH_CK_MAGIC( skt );

	return wdb_export( fp, name, (genptr_t)skt, ID_SKETCH, mk_conv2mm );
}
@


1.8
log
@change conf.h to a wrapped config.h
@
text
@d23 1
a23 1
static const char skt_RCSid[] = "@@(#)$Header: /cvs/brlcad/libwdb/skt.c,v 1.7 2004/02/02 17:39:30 morrison Exp $ (BRL)";
@


1.7
log
@update copyright to include span through 2003
@
text
@d23 1
a23 1
static const char skt_RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libwdb/skt.c,v 1.6 2000/07/12 21:58:04 mike Exp $ (BRL)";
d26 5
a30 1
#include "conf.h"
@


1.6
log
@
New version of LIBWDB which takes a (struct rt_wdb *) rather than a
(FILE *) as the first parameter.
@
text
@d19 1
a19 1
 *	This software is Copyright (C) 2000 by the United States Army
d23 1
a23 1
static const char skt_RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libwdb/skt.c,v 1.5 2000/07/08 04:01:11 mike Exp $ (BRL)";
@


1.6.4.1
log
@sync branch with HEAD
@
text
@d19 1
a19 1
 *	This software is Copyright (C) 2000-2004 by the United States Army
d23 1
a23 1
static const char skt_RCSid[] = "@@(#)$Header$ (BRL)";
@


1.6.6.1
log
@sync to HEAD...
@
text
@d19 1
a19 1
 *	This software is Copyright (C) 2000-2004 by the United States Army
d23 1
a23 1
static const char skt_RCSid[] = "@@(#)$Header: /n/cad/c/CVS/brlcad/libwdb/skt.c,v 1.7 2004/02/02 17:39:30 morrison Exp $ (BRL)";
@


1.6.12.1
log
@merge from HEAD
@
text
@d19 1
a19 1
 *	This software is Copyright (C) 2000-2004 by the United States Army
d23 1
a23 1
static const char skt_RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libwdb/skt.c,v 1.7 2004/02/02 17:39:30 morrison Exp $ (BRL)";
@


1.6.12.2
log
@merge from head
@
text
@d23 1
a23 1
static const char skt_RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libwdb/skt.c,v 1.6.12.1 2004/02/12 19:41:24 erikg Exp $ (BRL)";
@


1.5
log
@
Modified to allow mk_fwrite_internal() to free the objects.
Added flag variable mk_version to indicate what database version to be written.
@
text
@d23 1
a23 1
static const char skt_RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libwdb/skt.c,v 1.4 2000/07/08 01:41:22 mike Exp $ (BRL)";
d39 4
a42 4
mk_sketch( fp, name, skt )
FILE *fp;
char *name;
struct rt_sketch_internal *skt;
a43 2
	struct rt_db_internal intern;

d46 1
a46 5
	RT_INIT_DB_INTERNAL( &intern );
	intern.idb_ptr = (genptr_t)skt;
	intern.idb_type = ID_SKETCH;
	intern.idb_meth = &rt_functab[ID_SKETCH];
	return mk_fwrite_internal( fp, name, &intern );
@


1.4
log
@
const RCSid
@
text
@d23 1
a23 1
static const char skt_RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libwdb/skt.c,v 1.3 2000/03/16 13:38:42 jra Exp $ (BRL)";
a44 1
	int ret;
a47 2
	ret = mk_export_fwrite( fp, name, (genptr_t)skt, ID_SKETCH );

d51 2
a52 4

	rt_sketch_ifree( &intern );

	return( ret );
@


1.3
log
@Sketch solid can only have one  curve now
@
text
@d23 1
a23 1
static char skt_RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libwdb/skt.c,v 1.2 2000/03/15 22:44:48 mike Exp $ (BRL)";
@


1.2
log
@
Added missing arg
@
text
@d23 1
a23 1
static char skt_RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libwdb/skt.c,v 1.1 2000/01/31 13:42:04 jra Exp $ (BRL)";
a36 72


/* create a sketch object with no curves or vertices */
struct rt_sketch_internal *
sketch_start( V, u_vec, v_vec )
point_t V;
vect_t u_vec, v_vec;
{
	struct rt_sketch_internal *skt;

	skt = bu_malloc( sizeof( struct rt_sketch_internal ), "sketch" );

	skt->magic = RT_SKETCH_INTERNAL_MAGIC;
	VMOVE( skt->V, V );
	VMOVE( skt->u_vec, u_vec );
	VMOVE( skt->v_vec, v_vec );
	skt->vert_count = 0;
	skt->verts = (point2d_t *)NULL;
	skt->curve_count = 0;
	skt->curves = (struct curve *)NULL;

	return( skt );
}

/* add some vertices to the sketch object
 * note that the array of vertices is copied (caller is responsible for freeing it)
 */
void
sketch_add_verts( skt, vert_count, verts )
struct rt_sketch_internal *skt;
int vert_count;
point2d_t *verts;
{
	RT_SKETCH_CK_MAGIC( skt );

	if( skt->vert_count )
	{
		skt->verts = (point2d_t *)bu_realloc( skt->verts, (skt->vert_count + vert_count)*sizeof( point2d_t), "sketch verts" );
		bcopy( verts, &skt->verts[skt->vert_count],
			vert_count*sizeof( point2d_t) );
		skt->vert_count += vert_count;
	}
	else
	{
		skt->vert_count = vert_count;
		skt->verts = (point2d_t *)bu_calloc( vert_count, sizeof( point2d_t ), "sketch verts" );
		bcopy( verts, skt->verts, vert_count*sizeof( point2d_t ) );
	}
}

/* add a curve to a sketch
 * note that the curve is copied (caller is responsible for freeing it)
 */
void
sketch_add_curve( skt, crv )
struct rt_sketch_internal *skt;
struct curve *crv;
{
	RT_SKETCH_CK_MAGIC( skt );

	if( skt->curve_count )
	{
		skt->curves = (struct curve *)bu_realloc( skt->curves, (++skt->curve_count)*sizeof( struct curve ), "sketch curve " );
		rt_copy_curve( &skt->curves[skt->curve_count-1], crv );
	}
	else
	{
		skt->curves = (struct curve *)bu_malloc( sizeof( struct curve ), "sketch curve" );
		skt->curve_count = 1;
		rt_copy_curve( skt->curves, crv );
	}
}
@


1.1
log
@Routines to create a sketch object
@
text
@d23 1
a23 1
static char skt_RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libwdb/bot.c,v 11.2 1999/11/17 18:14:26 jra Exp $ (BRL)";
d75 2
a76 1
		bcopy( verts, &skt->verts[skt->vert_count] );
@

