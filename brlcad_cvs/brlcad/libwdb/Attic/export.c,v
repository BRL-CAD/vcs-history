head	11.13;
access;
symbols
	ansi-20040405-merged:11.11
	postmerge-20040405-ansi:11.11
	premerge-20040404-ansi:11.11
	postmerge-autoconf:11.11
	autoconf-freeze:11.11
	premerge-autoconf:11.11
	postmerge-20040315-windows:11.11
	premerge-20040315-windows:11.11
	windows-20040315-freeze:11.11
	autoconf-20031203:11.11
	autoconf-20031202:11.11
	autoconf-branch:11.11.0.12
	phong-branch:11.11.0.10
	photonmap-branch:11.11.0.8
	rel-6-1-DP:11.11
	windows-branch:11.11.0.6
	rel-6-0-2:11.11
	ansi-branch:11.11.0.4
	rel-6-0-1-branch:11.11.0.2
	hartley-6-0-post:11.11
	hartley-6-0-pre:11.11
	rel-6-0-1:11.11
	rel-6-0:11.11
	rel-5-4:11.8
	offsite-5-3-pre:11.11
	rel-5-3:11.8
	rel-5-2:11.8
	rel-5-1-branch:11.8.0.2
	rel-5-1:11.8
	rel-5-0:11.5
	rel-5-0-beta:11.4
	rel-4-5:11.3
	ctj-4-5-post:11.3
	ctj-4-5-pre:11.3
	rel-4-4:11.1
	rel-4-0:10.1;
locks; strict;
comment	@ * @;


11.13
date	2004.05.21.18.07.37;	author morrison;	state dead;
branches;
next	11.12;

11.12
date	2004.05.10.15.30.47;	author erikg;	state Exp;
branches;
next	11.11;

11.11
date	2000.07.12.21.58.03;	author mike;	state Exp;
branches;
next	11.10;

11.10
date	2000.07.08.04.01.10;	author mike;	state Exp;
branches;
next	11.9;

11.9
date	2000.07.08.01.41.21;	author mike;	state Exp;
branches;
next	11.8;

11.8
date	2000.01.07.19.46.17;	author mike;	state Exp;
branches;
next	11.7;

11.7
date	2000.01.07.03.25.21;	author mike;	state Exp;
branches;
next	11.6;

11.6
date	99.11.24.14.44.29;	author jra;	state Exp;
branches;
next	11.5;

11.5
date	99.07.02.19.18.30;	author mike;	state Exp;
branches;
next	11.4;

11.4
date	98.03.26.05.24.27;	author mike;	state Exp;
branches;
next	11.3;

11.3
date	97.01.31.16.24.31;	author jra;	state Exp;
branches;
next	11.2;

11.2
date	96.08.31.11.12.44;	author mike;	state Exp;
branches;
next	11.1;

11.1
date	95.01.04.09.51.34;	author mike;	state Rel4_4;
branches;
next	10.2;

10.2
date	94.08.09.19.54.56;	author gdurf;	state Exp;
branches;
next	10.1;

10.1
date	91.10.12.06.36.46;	author mike;	state Rel4_0;
branches;
next	1.2;

1.2
date	91.02.08.21.15.04;	author mike;	state Exp;
branches;
next	1.1;

1.1
date	91.02.08.21.13.17;	author mike;	state Exp;
branches;
next	;


desc
@Interface to LIBRT's geometry import/export interface
@


11.13
log
@moved to src/
@
text
@/*
 *			E X P O R T . C
 *
 *  Routines to allow libwdb to use librt's import/export interface,
 *  rather than having to know about the database formats directly.
 *
 *  Author -
 *	Michael John Muuss
 *  
 *  Source -
 *	SECAD/VLD Computing Consortium, Bldg 394
 *	The U. S. Army Ballistic Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5066
 *  
 *  Distribution Status -
 *	Public Domain, Distribution Unlimitied.
 */
#ifndef lint
static const char RCSid[] = "@@(#)$Header: /n/xoff/cvs/brlcad/libwdb/export.c,v 11.12 2004/05/10 15:30:47 erikg Exp $ (BRL)";
#endif

#ifdef HAVE_CONFIG_H
# include "config.h"
#endif



#include <stdio.h>
#include <math.h>
#include "machine.h"
#include "bu.h"
#include "vmath.h"
#include "bn.h"
#include "raytrace.h"
#include "wdb.h"

int	mk_version = 5;		/* which version of the database to write */
@


11.12
log
@change conf.h to a wrapped config.h
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/libwdb/export.c,v 11.11 2000/07/12 21:58:03 mike Exp $ (BRL)";
@


11.11
log
@
New version of LIBWDB which takes a (struct rt_wdb *) rather than a
(FILE *) as the first parameter.
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libwdb/export.c,v 11.10 2000/07/08 04:01:10 mike Exp $ (BRL)";
d22 5
a26 1
#include "conf.h"
@


11.10
log
@
Modified to allow mk_fwrite_internal() to free the objects.
Added flag variable mk_version to indicate what database version to be written.
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libwdb/export.c,v 11.9 2000/07/08 01:41:21 mike Exp $ (BRL)";
a33 54

/*
 *			M K _ F W R I T E _ I N T E R N A L
 *
 *  Applies scalling (units change) as specified in mk_conv2mm.
 *  'ip' is freed by the library.
 *
 *  Returns -
 *	 0	OK
 *	<0	error
 */
int
mk_fwrite_internal( FILE *fp, const char *name, struct rt_db_internal *ip )
{
	RT_CK_DB_INTERNAL(ip);

	if( mk_version <= 4 )
		return rt_fwrite_internal( fp, name, ip, mk_conv2mm );
	return rt_fwrite_internal5( fp, name, ip, mk_conv2mm );
}

/*
 *			M K _ E X P O R T _ F W R I T E
 *
 *  Applies scalling (units change) as specified in mk_conv2mm.
 *  'gp' is freed by the library.  Be careful it isn't an automatic struct
 *  on the stack.
 *
 *  Returns -
 *	 0	OK
 *	<0	error
 */
int
mk_export_fwrite( fp, name, gp, id )
FILE		*fp;
CONST char	*name;
genptr_t	gp;
int		id;
{
	struct rt_db_internal	intern;

	if( (id <= 0 || id > ID_MAXIMUM) && id != ID_COMBINATION )  {
		bu_log("mk_export_fwrite(%s): id=%d bad\n",
			name, id );
		return -1;
	}

	RT_INIT_DB_INTERNAL( &intern );
	intern.idb_type = id;
	intern.idb_meth = &rt_functab[id];
	intern.idb_ptr = gp;

	return mk_fwrite_internal( fp, name, &intern );
}
@


11.9
log
@
const RCSid
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libwdb/export.c,v 11.8 2000/01/07 19:46:17 mike Exp $ (BRL)";
d33 2
d36 2
d39 22
a60 1
 *  The caller must free "gp".
d78 1
a78 1
		return(-1);
d86 1
a86 6
	if( rt_fwrite_internal( fp, name, &intern, mk_conv2mm ) < 0 )  {
		bu_log("mk_export_fwrite(%s): rt_fwrite_internal failure\n",
			name );
		return(-2);				/* FAIL */
	}
	return 0;					/* OK */
@


11.8
log
@
Added mk_submodel
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libwdb/export.c,v 11.7 2000/01/07 03:25:21 mike Exp $ (BRL)";
@


11.7
log
@
Changed to use rt_fwrite_internal(), which removes our dependence
on knowing anything about the external format of objects.
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libwdb/export.c,v 11.6 1999/11/24 14:44:29 jra Exp $ (BRL)";
d44 1
a44 1
char		*name;
@


11.6
log
@Needed an idb_meth set in an rt_db_internal struct
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libwdb/export.c,v 11.5 1999/07/02 19:18:30 mike Exp $ (BRL)";
a27 1
#include "db.h"
a29 1
#include "rtgeom.h"
a48 2
	struct bu_external	ext;
	union record		*rec;
d61 2
a62 3
	/* Scale change on export is from global "mk_conv2mm" */
	if( rt_functab[id].ft_export( &ext, &intern, mk_conv2mm, NULL ) < 0 )  {
		bu_log("mk_export_fwrite(%s): solid export failure\n",
a63 1
		db_free_external( &ext );
d66 1
a66 14
	BU_CK_EXTERNAL( &ext );

	/* Depends on solid names always being in the same place */
	rec = (union record *)ext.ext_buf;
	NAMEMOVE( name, rec->s.s_name );

	if( fwrite( ext.ext_buf, ext.ext_nbytes, 1, fp ) != 1 )  {
		bu_log("mk_export_fwrite(%s): fwrite error\n",
			name );
		db_free_external( &ext );
		return(-3);
	}
	db_free_external( &ext );
	return(0);
@


11.5
log
@
Eliminated dependency on compat4.h
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libwdb/export.c,v 11.4 1998/03/26 05:24:27 mike Exp $ (BRL)";
d62 1
@


11.4
log
@Suppled NULL for new extra parameter to ft_export(), just to compile.
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/libwdb/RCS/export.c,v 11.3 1997/01/31 16:24:31 jra Exp mike $ (BRL)";
d51 1
a51 1
	struct rt_external	ext;
d55 1
a55 1
		rt_log("mk_export_fwrite(%s): id=%d bad\n",
d66 1
a66 1
		rt_log("mk_export_fwrite(%s): solid export failure\n",
d71 1
a71 1
	RT_CK_EXTERNAL( &ext );
d78 1
a78 1
		rt_log("mk_export_fwrite(%s): fwrite error\n",
@


11.3
log
@Allow using mk_export_fwrite() with combinations.
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/libwdb/RCS/export.c,v 11.2 1996/08/31 11:12:44 mike Exp jra $ (BRL)";
d65 1
a65 1
	if( rt_functab[id].ft_export( &ext, &intern, mk_conv2mm ) < 0 )  {
@


11.2
log
@bu.h
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/libwdb/RCS/export.c,v 11.1 1995/01/04 09:51:34 mike Rel4_4 mike $ (BRL)";
d54 1
a54 1
	if( id <= 0 || id > ID_MAXIMUM )  {
@


11.1
log
@Release_4.4
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/libwdb/RCS/export.c,v 10.2 94/08/09 19:54:56 gdurf Exp $ (BRL)";
d27 1
d30 1
a30 1
#include "rtlist.h"
@


10.2
log
@++include
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/libwdb/RCS/export.c,v 10.1 1991/10/12 06:36:46 mike Rel4_0 gdurf $ (BRL)";
@


10.1
log
@Release_4.0
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/libwdb/RCS/export.c,v 1.2 91/02/08 21:15:04 mike Exp $ (BRL)";
d21 2
@


1.2
log
@Arg order change
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/libwdb/RCS/export.c,v 1.1 91/02/08 21:13:17 mike Exp $ (BRL)";
@


1.1
log
@Initial revision
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header$ (BRL)";
d41 1
a41 1
mk_export_fwrite( fp, gp, id, name )
d43 1
a45 1
char		*name;
@
