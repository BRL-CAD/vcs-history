head	11.16;
access;
symbols
	ansi-20040405-merged:11.13.4.1
	postmerge-20040405-ansi:11.14
	premerge-20040404-ansi:11.14
	postmerge-autoconf:11.14
	autoconf-freeze:11.13.12.2
	premerge-autoconf:11.14
	postmerge-20040315-windows:11.14
	premerge-20040315-windows:11.14
	windows-20040315-freeze:11.13.6.1
	autoconf-20031203:11.13
	autoconf-20031202:11.13
	autoconf-branch:11.13.0.12
	phong-branch:11.13.0.10
	photonmap-branch:11.13.0.8
	rel-6-1-DP:11.13
	windows-branch:11.13.0.6
	rel-6-0-2:11.13
	ansi-branch:11.13.0.4
	rel-6-0-1-branch:11.13.0.2
	hartley-6-0-post:11.13
	hartley-6-0-pre:11.13
	rel-6-0-1:11.13
	rel-6-0:11.13
	rel-5-4:11.8
	offsite-5-3-pre:11.13
	rel-5-3:11.8
	rel-5-2:11.8
	rel-5-1-branch:11.8.0.2
	rel-5-1:11.8
	rel-5-0:11.7
	rel-5-0-beta:11.6
	rel-4-5:11.4
	ctj-4-5-post:11.4
	ctj-4-5-pre:11.4
	rel-4-4:11.1
	rel-4-0:10.1;
locks; strict;
comment	@ * @;


11.16
date	2004.05.21.18.07.38;	author morrison;	state dead;
branches;
next	11.15;

11.15
date	2004.05.10.15.30.47;	author erikg;	state Exp;
branches;
next	11.14;

11.14
date	2004.02.02.17.39.30;	author morrison;	state Exp;
branches;
next	11.13;

11.13
date	2000.07.25.22.40.48;	author mike;	state Exp;
branches
	11.13.4.1
	11.13.6.1
	11.13.12.1;
next	11.12;

11.12
date	2000.07.25.16.49.31;	author butler;	state Exp;
branches;
next	11.11;

11.11
date	2000.07.12.21.58.03;	author mike;	state Exp;
branches;
next	11.10;

11.10
date	2000.07.08.04.01.10;	author mike;	state Exp;
branches;
next	11.9;

11.9
date	2000.07.08.01.41.21;	author mike;	state Exp;
branches;
next	11.8;

11.8
date	2000.05.23.01.41.52;	author mike;	state Exp;
branches;
next	11.7;

11.7
date	99.07.02.19.18.31;	author mike;	state Exp;
branches;
next	11.6;

11.6
date	99.05.12.18.51.35;	author jra;	state Exp;
branches;
next	11.5;

11.5
date	98.07.30.19.51.57;	author jra;	state Exp;
branches;
next	11.4;

11.4
date	96.09.03.14.06.55;	author jra;	state Exp;
branches;
next	11.3;

11.3
date	96.08.31.11.12.44;	author mike;	state Exp;
branches;
next	11.2;

11.2
date	95.10.31.18.59.23;	author jra;	state Exp;
branches;
next	11.1;

11.1
date	95.01.04.09.51.37;	author mike;	state Rel4_4;
branches;
next	10.6;

10.6
date	94.08.09.19.55.28;	author gdurf;	state Exp;
branches;
next	10.5;

10.5
date	93.12.18.08.14.33;	author cjohnson;	state Exp;
branches;
next	10.4;

10.4
date	93.11.18.03.51.25;	author butler;	state Exp;
branches;
next	10.3;

10.3
date	93.11.18.03.28.31;	author butler;	state Exp;
branches;
next	10.2;

10.2
date	93.10.20.09.12.15;	author jra;	state Exp;
branches;
next	10.1;

10.1
date	91.10.12.06.36.48;	author mike;	state Rel4_0;
branches;
next	1.2;

1.2
date	91.06.23.00.44.59;	author mike;	state Exp;
branches;
next	1.1;

1.1
date	91.02.27.19.57.10;	author mike;	state Exp;
branches;
next	;

11.13.4.1
date	2004.03.17.21.21.47;	author morrison;	state Exp;
branches;
next	;

11.13.6.1
date	2004.03.11.23.45.47;	author morrison;	state Exp;
branches;
next	;

11.13.12.1
date	2004.02.12.19.41.24;	author erikg;	state Exp;
branches;
next	11.13.12.2;

11.13.12.2
date	2004.03.15.14.07.33;	author erikg;	state Exp;
branches;
next	;


desc
@libwdb support to export NMG solids.
@


11.16
log
@moved to src/
@
text
@/*
 *			N M G . C
 *
 *  libwdb support for writing an NMG to disk.
 *
 *  Author -
 *	Michael John Muuss
 *
 *  Source -
 *	SECAD/VLD Computing Consortium, Bldg 394
 *	The U. S. Army Ballistic Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5066
 *  
 *  Copyright Notice -
 *	This software is Copyright (C) 1989-2004 by the United States Army.
 *	All rights reserved.
 */
#ifndef lint
static const char RCSid[] = "@@(#)$Header: /n/xoff/cvs/brlcad/libwdb/nmg.c,v 11.15 2004/05/10 15:30:47 erikg Exp $ (BRL)";
#endif

#ifdef HAVE_CONFIG_H
# include "config.h"
#endif



#include <stdio.h>
#include <math.h>
#include "machine.h"
#include "bu.h"
#include "vmath.h"
#include "bn.h"
#include "rtgeom.h"
#include "nmg.h"
#include "raytrace.h"
#include "wdb.h"

/*
 *			M K _ N M G
 *
 *  The NMG is freed after being written.
 *
 *  Returns -
 *	<0	error
 *	 0	OK
 */
int
mk_nmg( struct rt_wdb *filep, const char *name, struct model *m )
{
	NMG_CK_MODEL( m );

	return wdb_export( filep, name, (genptr_t)m, ID_NMG, mk_conv2mm );
}

/*
 *			M K _ B O T _ F R O M _ N M G
 *
 *  For ray-tracing speed, many database conversion routines like to
 *  offer the option of converting NMG objects to bags of triangles (BoT).
 *  Here is a convenience routine to replace the old
 *  (now obsolete in BRL-CAD 6.0) routine write_shell_as_polysolid.
 */
int
mk_bot_from_nmg( struct rt_wdb *ofp, const char *name, struct shell *s )
{
	struct rt_bot_internal *botp;

	botp = nmg_bot( s, &ofp->wdb_tol );

	return wdb_export( ofp, name, (genptr_t)botp, ID_BOT, mk_conv2mm );
}
@


11.15
log
@change conf.h to a wrapped config.h
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/libwdb/nmg.c,v 11.14 2004/02/02 17:39:30 morrison Exp $ (BRL)";
@


11.14
log
@update copyright to include span through 2003
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libwdb/nmg.c,v 11.13 2000/07/25 22:40:48 mike Exp $ (BRL)";
d22 5
a26 1
#include "conf.h"
@


11.13
log
@
libwdb additions for writing NMGs at BoTs.
Initial support for writing region-id-based-color table.
@
text
@d15 1
a15 1
 *	This software is Copyright (C) 1989 by the United States Army.
d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libwdb/nmg.c,v 11.12 2000/07/25 16:49:31 butler Exp $ (BRL)";
@


11.13.4.1
log
@sync branch with HEAD
@
text
@d15 1
a15 1
 *	This software is Copyright (C) 1989-2004 by the United States Army.
d19 1
a19 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
@


11.13.6.1
log
@sync to HEAD...
@
text
@d15 1
a15 1
 *	This software is Copyright (C) 1989-2004 by the United States Army.
d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /n/cad/c/CVS/brlcad/libwdb/nmg.c,v 11.14 2004/02/02 17:39:30 morrison Exp $ (BRL)";
@


11.13.12.1
log
@merge from HEAD
@
text
@d15 1
a15 1
 *	This software is Copyright (C) 1989-2004 by the United States Army.
d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libwdb/nmg.c,v 11.14 2004/02/02 17:39:30 morrison Exp $ (BRL)";
@


11.13.12.2
log
@merge from head
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libwdb/nmg.c,v 11.13.12.1 2004/02/12 19:41:24 erikg Exp $ (BRL)";
@


11.12
log
@Better structure for #if code in nmg.c, added needed extern in pipe.c
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libwdb/nmg.c,v 11.11 2000/07/12 21:58:03 mike Exp $ (BRL)";
d52 2
a53 11
/*	W R I T E _ S H E L L _ A S _ P O L Y S O L I D
 *
 *	This routine take an NMG shell and writes it out to the file
 *	out_fp as a polysolid with the indicated name.  Obviously,
 *	the shell should be a 3-manifold (winged edge).
 *	since polysolids may only have up to 5 vertices per face,
 *	any face with a loop of more than 5 vertices is triangulated
 *	using "nmg_triangulate_fu" prior to output.
 *
 *	XXX Since the nmg_triangulate_fu needs a tolerance structure, we
 *		have to invent one for the moment.  This is bogus.
d55 4
a58 1
 *	XXX This should really write the shell as a BoT solid.
d60 2
a61 5
void
write_shell_as_polysolid( out_fp, name, s)
FILE *out_fp;
char *name;
struct shell *s;
d63 3
a65 2
#if 1
bu_bomb("write_shell_as_polysolid -- use nmg_to_bot converter routine\n");
d67 1
a67 100
#else
	struct faceuse *fu;
	struct loopuse *lu;
	struct edgeuse *eu;
	point_t verts[5];
	int count_npts;
	int max_count;
	int i;
	struct bn_tol tol;
	NMG_CK_SHELL( s );

	/* XXX Need support for v5 here */
	BU_ASSERT_LONG( mk_version, <=, 4 );

	/* XXX Yet another tol structure is "faked" */
	tol.magic = BN_TOL_MAGIC;
	tol.dist = 0.005;
	tol.dist_sq = tol.dist * tol.dist;
	tol.perp = 1e-6;
	tol.para = 1 - tol.perp;

	for( BU_LIST_FOR( fu , faceuse , &s->fu_hd ) )
	{
		NMG_CK_FACEUSE( fu );

		/* only do OT_SAME faces */
		if( fu->orientation != OT_SAME )
			continue;

		/* count vertices in loops */
		max_count = 0;
		for( BU_LIST_FOR( lu , loopuse , &fu->lu_hd ) )
		{
			NMG_CK_LOOPUSE( lu );
			if( BU_LIST_FIRST_MAGIC(&lu->down_hd) != NMG_EDGEUSE_MAGIC )
				continue;

			if( lu->orientation != OT_SAME )
			{
				/* must triangulate if there is a hole */
				max_count = 6;
				break;
			}

			count_npts = 0;
			for( BU_LIST_FOR( eu , edgeuse , &lu->down_hd ) )
				count_npts++;

			if( count_npts > max_count )
				max_count = count_npts;

			if( !nmg_lu_is_convex( lu, &tol ) )
			{
				/* must triangulate non-convex faces */
				max_count = 6;
				break;
			}
		}

		/* if any loop has more than 5 vertices, triangulate the face */
		if( max_count > 5 ) {
			if( rt_g.NMG_debug & DEBUG_BASIC )
				bu_log( "write_shell_as_polysolid: triangulating fu x%x\n", fu );
			nmg_triangulate_fu( fu, (CONST struct bn_tol *)&tol );
		}
	}

	 mk_polysolid( out_fp , name );

	for( BU_LIST_FOR( fu , faceuse , &s->fu_hd ) )
	{
		/* only do OT_SAME faces */
		if( fu->orientation != OT_SAME )
			continue;

		for( BU_LIST_FOR( lu , loopuse , &fu->lu_hd ) )
		{
			NMG_CK_LOOPUSE( lu );
			if( BU_LIST_FIRST_MAGIC(&lu->down_hd) != NMG_EDGEUSE_MAGIC )
				continue;

			count_npts = 0;
			for( BU_LIST_FOR( eu , edgeuse , &lu->down_hd ) )
			{
				for( i=0 ; i<3 ; i++ )
					verts[count_npts][i] = eu->vu_p->v_p->vg_p->coord[i];
				count_npts++;
			}

			if( count_npts < 3 )
				continue;

			if( mk_fpoly( out_fp , count_npts , verts ) )
			{
				bu_log( "write_shell_as_polysolid: mk_fpoly failed for object %s\n" , name );
				bu_bomb( "write_shell_as_polysolid: mk_fpoly failed\n" );
			}
		}
	}
#endif
@


11.11
log
@
New version of LIBWDB which takes a (struct rt_wdb *) rather than a
(FILE *) as the first parameter.
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libwdb/nmg.c,v 11.10 2000/07/08 04:01:10 mike Exp $ (BRL)";
d72 4
a83 4

bu_bomb("write_shell_as_polysolid -- use nmg_to_bot converter routine\n");

#if 0
@


11.10
log
@
Modified to allow mk_fwrite_internal() to free the objects.
Added flag variable mk_version to indicate what database version to be written.
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libwdb/nmg.c,v 11.9 2000/07/08 01:41:21 mike Exp $ (BRL)";
d45 1
a45 4
mk_nmg( filep, name, m )
FILE		*filep;
char		*name;
struct model	*m;
d49 1
a49 1
	return mk_export_fwrite( filep, name, (genptr_t)m, ID_NMG );
d81 3
d174 1
@


11.9
log
@
const RCSid
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libwdb/nmg.c,v 11.8 2000/05/23 01:41:52 mike Exp $ (BRL)";
d38 1
a38 1
 *  Caller is responsible for freeing the NMG, if desired.
d66 2
d85 3
@


11.8
log
@
Changed to bu_bomb() to avoid library-link-order dependencies w/librt
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libwdb/nmg.c,v 11.7 1999/07/02 19:18:31 mike Exp $ (BRL)";
@


11.7
log
@
Eliminated dependency on compat4.h
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libwdb/nmg.c,v 11.6 1999/05/12 18:51:35 jra Exp $ (BRL)";
d165 1
a165 1
				rt_bomb( "write_shell_as_polysolid: mk_fpoly failed\n" );
@


11.6
log
@Modified write_shell_as_polysolid to attempt triangulation prior to startng to write the polysolid.
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libwdb/nmg.c,v 11.5 1998/07/30 19:51:57 jra Exp $ (BRL)";
d80 1
a80 1
	struct rt_tol tol;
d85 1
a85 1
	tol.magic = RT_TOL_MAGIC;
d91 1
a91 1
	for( RT_LIST_FOR( fu , faceuse , &s->fu_hd ) )
d101 1
a101 1
		for( RT_LIST_FOR( lu , loopuse , &fu->lu_hd ) )
d104 1
a104 1
			if( RT_LIST_FIRST_MAGIC(&lu->down_hd) != NMG_EDGEUSE_MAGIC )
d115 1
a115 1
			for( RT_LIST_FOR( eu , edgeuse , &lu->down_hd ) )
d132 2
a133 2
				rt_log( "write_shell_as_polysolid: triangulating fu x%x\n", fu );
			nmg_triangulate_fu( fu, (CONST struct rt_tol *)&tol );
d139 1
a139 1
	for( RT_LIST_FOR( fu , faceuse , &s->fu_hd ) )
d145 1
a145 1
		for( RT_LIST_FOR( lu , loopuse , &fu->lu_hd ) )
d148 1
a148 1
			if( RT_LIST_FIRST_MAGIC(&lu->down_hd) != NMG_EDGEUSE_MAGIC )
d152 1
a152 1
			for( RT_LIST_FOR( eu , edgeuse , &lu->down_hd ) )
d164 1
a164 1
				rt_log( "write_shell_as_polysolid: mk_fpoly failed for object %s\n" , name );
@


11.5
log
@Added some checks to write_nmg_as_polysolid().
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libwdb/nmg.c,v 11.4 1996/09/03 14:06:55 jra Exp $ (BRL)";
a90 2
	mk_polysolid( out_fp , name );

d135 10
@


11.4
log
@Added code to write_shell_as_polysolid() to insure polysolid faces are convex.
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/libwdb/RCS/nmg.c,v 11.3 1996/08/31 11:12:44 mike Exp jra $ (BRL)";
d109 7
d123 1
a123 1
			if( max_count < 5 && !nmg_lu_is_convex( lu, &tol ) )
d125 1
d151 3
d155 1
d157 2
@


11.3
log
@bu.h
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/libwdb/RCS/nmg.c,v 11.2 1995/10/31 18:59:23 jra Exp mike $ (BRL)";
d84 7
d115 6
a124 6
			/* XXX Yet another tol structure is "faked" */
			tol.magic = RT_TOL_MAGIC;
			tol.dist = 0.005;
			tol.dist_sq = tol.dist * tol.dist;
			tol.perp = 1e-6;
			tol.para = 1 - tol.perp;
@


11.2
log
@Added a debug message.
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/libwdb/RCS/nmg.c,v 11.1 1995/01/04 09:51:37 mike Rel4_4 jra $ (BRL)";
d27 1
d29 1
a29 1
#include "rtlist.h"
@


11.1
log
@Release_4.4
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/libwdb/RCS/nmg.c,v 10.6 94/08/09 19:55:28 gdurf Exp $ (BRL)";
d117 2
@


10.6
log
@Added include of conf.h
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/libwdb/RCS/nmg.c,v 10.5 1993/12/18 08:14:33 cjohnson Exp gdurf $ (BRL)";
@


10.5
log
@Make sure that nmg.c compiles on K&C compilers.
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/libwdb/RCS/nmg.c,v 10.4 1993/11/18 03:51:25 butler Exp cjohnson $ (BRL)";
d21 2
@


10.4
log
@fixed call to nmg_triangulate_fu() by "inventing" a struct rt_tol to pass in
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/libwdb/RCS/nmg.c,v 10.3 93/11/18 03:28:31 butler Exp Locker: butler $ (BRL)";
d65 4
a68 1
write_shell_as_polysolid( FILE *out_fp , char *name , struct shell *s )
@


10.3
log
@changed nmg_triangulate_face() to nmg_triangulate_fu()
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /n/wolf/m/cad/libwdb/RCS/nmg.c,v 10.2 93/10/20 09:12:15 jra Exp Locker: butler $ (BRL)";
d60 3
d74 1
d105 9
a113 3
		if( max_count > 5 )
			nmg_triangulate_fu( fu );

@


10.2
log
@Added write_shell_as_polysolid
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/libwdb/RCS/nmg.c,v 10.1 91/10/12 06:36:48 mike Rel4_0 Locker: jra $ (BRL)";
d59 1
a59 1
 *	using "nmg_triangulate_face" prior to output.
d102 1
a102 1
			nmg_triangulate_face( fu );
@


10.1
log
@Release_4.0
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/libwdb/RCS/nmg.c,v 1.2 91/06/23 00:44:59 mike Exp $ (BRL)";
d50 72
@


1.2
log
@Oops
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/libwdb/RCS/nmg.c,v 1.1 91/02/27 19:57:10 mike Exp $ (BRL)";
@


1.1
log
@Initial revision
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/libwdb/RCS/arbn.c,v 1.3 91/02/08 22:43:20 mike Exp $ (BRL)";
d49 1
a49 1
	return mk_export_fwrite( filep, name, (genptr_t)&m, ID_NMG );
@
