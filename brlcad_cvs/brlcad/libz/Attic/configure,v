head	1.10;
access;
symbols
	ansi-20040405-merged:1.7.6.1
	postmerge-20040405-ansi:1.9
	premerge-20040404-ansi:1.9
	postmerge-autoconf:1.9
	autoconf-freeze:1.9
	premerge-autoconf:1.9
	postmerge-20040315-windows:1.9
	premerge-20040315-windows:1.9
	windows-20040315-freeze:1.7.8.1
	autoconf-20031203:1.9
	autoconf-20031202:1.9
	autoconf-branch:1.9.0.2
	phong-branch:1.8.0.4
	photonmap-branch:1.8.0.2
	rel-6-1-DP:1.7
	windows-branch:1.7.0.8
	rel-6-0-2:1.7
	ansi-branch:1.7.0.6
	rel-6-0-1-branch:1.7.0.4
	hartley-6-0-post:1.7
	hartley-6-0-pre:1.7
	rel-6-0-1:1.7
	rel-6-0:1.7
	rel-5-4:1.7
	offsite-5-3-pre:1.7
	rel-5-3:1.7
	rel-5-2:1.7
	rel-5-1-branch:1.7.0.2
	rel-5-1:1.7
	rel-5-0:1.7
	rel-5-0-beta:1.7
	zlib_1_0_4:1.1.1.1
	zlib:1.1.1;
locks; strict;
comment	@# @;


1.10
date	2004.05.21.17.59.19;	author morrison;	state dead;
branches;
next	1.9;

1.9
date	2003.09.27.01.13.42;	author morrison;	state Exp;
branches;
next	1.8;

1.8
date	2002.12.23.21.47.38;	author jra;	state Exp;
branches;
next	1.7;

1.7
date	99.05.21.13.41.02;	author jra;	state Exp;
branches
	1.7.6.1
	1.7.8.1;
next	1.6;

1.6
date	99.05.19.19.01.46;	author jra;	state Exp;
branches;
next	1.5;

1.5
date	99.05.19.18.34.56;	author jra;	state Exp;
branches;
next	1.4;

1.4
date	98.11.06.14.43.48;	author jra;	state Exp;
branches;
next	1.3;

1.3
date	98.06.25.17.16.46;	author jra;	state Exp;
branches;
next	1.2;

1.2
date	98.06.24.18.33.15;	author jra;	state Exp;
branches;
next	1.1;

1.1
date	98.06.24.13.19.59;	author jra;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.06.24.13.19.59;	author jra;	state Exp;
branches;
next	;

1.7.6.1
date	2004.03.17.21.21.49;	author morrison;	state Exp;
branches;
next	;

1.7.8.1
date	2004.03.11.23.45.54;	author morrison;	state Exp;
branches;
next	;


desc
@@


1.10
log
@moved from top-level to src/other/.
@
text
@#!/bin/sh
# configure script for zlib. This script is needed only if
# you wish to build a shared library and your system supports them,
# of if you need special compiler, flags or install directory.
# Otherwise, you can just use directly "make test; make install"
#
# To create a shared library, use "configure --shared"; by default a static
# library is created. If the primitive shared library support provided here
# does not work, use ftp://prep.ai.mit.edu/pub/gnu/libtool-*.tar.gz
#
# To impose specific compiler or flags or install directory, use for example:
#    prefix=$HOME CC=cc CFLAGS="-O4" ./configure
# or for csh/tcsh users:
#    (setenv prefix $HOME; setenv CC cc; setenv CFLAGS "-O4"; ./configure)
# LDSHARED is the command to be used to create a shared library

# Incorrect settings of CC or CFLAGS may prevent creating a shared library.
# If you have problems, try without defining CC and CFLAGS before reporting
# an error.

LIBS=libz.a
SHAREDLIB=libz.so
VER=`sed -n -e '/VERSION "/s/.*"\(.*\)".*/\1/p' < zlib.h`
AR=${AR-"ar rc"}
RANLIB=${RANLIB-"ranlib"}
prefix=${prefix-/usr/local}
exec_prefix=${exec_prefix-'${prefix}'}
libdir=${libdir-'${exec_prefix}/lib'}
includedir=${includedir-'${prefix}/include'}
shared_ext='.so'
shared=0
gcc=0
old_cc="$CC"
old_cflags="$CFLAGS"

while test $# -ge 1
do
case "$1" in
    -h* | --h*)
      echo 'usage:'
      echo '  configure [--shared] [--prefix=PREFIX]  [--exec_prefix=EXPREFIX]'
      echo '     [--libdir=LIBDIR] [--includedir=INCLUDEDIR]'
        exit 0;;
    -p*=* | --p*=*) prefix=`echo $1 | sed 's/[-a-z_]*=//'`; shift;;
    -e*=* | --e*=*) exec_prefix=`echo $1 | sed 's/[-a-z_]*=//'`; shift;;
    -l*=* | --libdir=*) libdir=`echo $1 | sed 's/[-a-z_]*=//'`; shift;;
    -i*=* | --includedir=*) includedir=`echo $1 | sed 's/[-a-z_]*=//'`;shift;;
    -p* | --p*) prefix="$2"; shift; shift;;
    -e* | --e*) exec_prefix="$2"; shift; shift;;
    -l* | --l*) libdir="$2"; shift; shift;;
    -i* | --i*) includedir="$2"; shift; shift;;
    -s* | --s*) shared=1; shift;;
    esac
done

test=ztest$$
cat > ${test}.c <<EOF
extern int getchar();
int hello() {return getchar();}
EOF

test -z "$CC" && echo Checking for gcc...
cc=${CC-gcc}
cflags=${CFLAGS-"-O3"}
# to force the asm version use: CFLAGS="-O3 -DASMV" ./configure
case "$cc" in
  *gcc*) gcc=1;;
esac

if test "$gcc" -eq 1 && ($cc -c $cflags ${test}.c) 2>/dev/null; then
  CC="$cc"
  SFLAGS=${CFLAGS-"-fPIC -O3"}
  CFLAGS="$cflags"
  case `(uname -s || echo unknown) 2>/dev/null` in
  Linux | linux) LDSHARED=${LDSHARED-"gcc -shared -Wl,-soname,libz.so.1"};;
  *)             LDSHARED=${LDSHARED-"gcc -shared"};;
  esac
else
  # find system name and corresponding cc options
  CC=${CC-cc}
  case `(uname -sr || echo unknown) 2>/dev/null` in
  HP-UX*)    SFLAGS=${CFLAGS-"-O +z"}
	     CFLAGS=${CFLAGS-"-O"}
#	     LDSHARED=${LDSHARED-"ld -b +vnocompatwarnings"}
	     LDSHARED=${LDSHARED-"ld -b"}
	     shared_ext='.sl'
	     SHAREDLIB='libz.sl';;
  IRIX*)     SFLAGS=${CFLAGS-"-ansi -O2 -rpath ."}
	     CFLAGS=${CFLAGS-"-ansi -O2"}
	     LDSHARED=${LDSHARED-"cc -shared"};;
  OSF1\ V4*) SFLAGS=${CFLAGS-"-O -std1"}
	     CFLAGS=${CFLAGS-"-O -std1"}
	     LDSHARED=${LDSHARED-"cc -shared  -Wl,-soname,$SHAREDLIB -Wl,-msym -Wl,-rpath,$(libdir) -Wl,-set_version,${VER}:1.0"};;
  OSF1*)     SFLAGS=${CFLAGS-"-O -std1"}
	     CFLAGS=${CFLAGS-"-O -std1"}
	     LDSHARED=${LDSHARED-"cc -shared"};;
  QNX*)      SFLAGS=${CFLAGS-"-4 -O"}
             CFLAGS=${CFLAGS-"-4 -O"}
	     LDSHARED=${LDSHARED-"cc"}
             RANLIB=${RANLIB-"true"}
             AR="cc -A";;
  SCO_SV\ 3.2*) SFLAGS=${CFLAGS-"-O3 -dy -KPIC "}
	     CFLAGS=${CFLAGS-"-O3"}
	     LDSHARED=${LDSHARED-"cc -dy -KPIC -G"};;
  SunOS\ 5*) SFLAGS=${CFLAGS-"-fast -xcg89 -KPIC -R."}
             CFLAGS=${CFLAGS-"-fast -xcg89"}
	     LDSHARED=${LDSHARED-"cc -G"};;
  SunOS\ 4*) SFLAGS=${CFLAGS-"-O2 -PIC"}
	     CFLAGS=${CFLAGS-"-O2"}
	     LDSHARED=${LDSHARED-"ld"};;
  UNIX_System_V\ 4.2.0) 
	     SFLAGS=${CFLAGS-"-KPIC -O"}
	     CFLAGS=${CFLAGS-"-O"}
	     LDSHARED=${LDSHARED-"cc -G"};;
  UNIX_SV\ 4.2MP)
	     SFLAGS=${CFLAGS-"-Kconform_pic -O"}
	     CFLAGS=${CFLAGS-"-O"}
	     LDSHARED=${LDSHARED-"cc -G"};;
  AIX*)     SFLAGS=${CFLAGS-"-O4 -64"}
	     CFLAGS=${CFLAGS-"-O4"}
	     LDSHARED=${LDSHARED-"$CC -G"};;
  # send working options for other systems to support@@gzip.org
  *)         SFLAGS=${CFLAGS-"-O"}
	     CFLAGS=${CFLAGS-"-O"}
	     LDSHARED=${LDSHARED-"cc -shared"};;
  esac
fi

if test $shared -eq 1; then
  echo Checking for shared library support...
  # we must test in two steps (cc then ld), required at least on SunOS 4.x
  echo "CC is $CC;"
  echo "LDSHARED is $LDSHARED;"
  echo "test is $test"
  echo "$CC -c $SFLAGS ${test}.c"
  echo "$LDSHARED -o ${test}${shared_ext} ${test}.o"
#  if test "`($CC -c $SFLAGS ${test.}c) 2>&1`" = "" &&
#     test "`($LDSHARED -o ${test}${shared_ext} ${test}.o) 2>&1`" = ""; then
  rm -f ${test}${shared_ext}
  __COMPILE_RESULT="`($CC -c $SFLAGS ${test}.c)`"
  __SHARED_RESULT="`($LDSHARED -o ${test}${shared_ext} ${test}.o)`"
  if test -f "${test}${shared_ext}" ; then
    CFLAGS="$SFLAGS"
    LIBS="${SHAREDLIB}.${VER}"
    echo Building shared library $SHAREDLIB.$VER with $CC.
  elif test -z "$old_cc" -a -z "$old_cflags"; then
    echo No shared library suppport.
    shared=0;
  else
    echo 'No shared library suppport; try without defining CC and CFLAGS'
    shared=0;
  fi
fi
if test $shared -eq 0; then
  LDSHARED="$CC"
  echo Building static library $LIBS version $VER with $CC.
fi

cat > $test.c <<EOF
#include <unistd.h>
int main() { return 0; }
EOF
if test "`($CC -c $CFLAGS $test.c) 2>&1`" = ""; then
  CFLAGS="$CFLAGS -DHAVE_UNISTD_H"
  echo "Checking for unistd.h... Yes."
else
  echo "Checking for unistd.h... No."
fi

cat > $test.c <<EOF
#include <errno.h>
int main() { return 0; }
EOF
if test "`($CC -c $CFLAGS $test.c) 2>&1`" = ""; then
  echo "Checking for errno.h...	 Yes."
else
  echo "Checking for errno.h...	 No."
  CFLAGS="$CFLAGS -DNO_ERRNO_H"
fi

cat > $test.c <<EOF
#include <sys/types.h>
#include <sys/mman.h>
#include <sys/stat.h>
caddr_t hello() {
  return mmap((caddr_t)0, (off_t)0, PROT_READ, MAP_SHARED, 0, (off_t)0); 
}
EOF
if test "`($CC -c $CFLAGS $test.c) 2>&1`" = ""; then
  CFLAGS="$CFLAGS -DUSE_MMAP"
  echo Checking for mmap support... Yes.
else
  echo Checking for mmap support... No.
fi

CPP=${CPP-"$CC -E"}
case $CFLAGS in
  *ASMV*)
    if test "`nm $test.o | grep _hello`" = ""; then
      CPP="$CPP -DNO_UNDERLINE"
      echo Checking for underline in external names... No.
    else
      echo Checking for underline in external names... Yes.
    fi;;
esac

rm -f $test.[co] $test$shared_ext

# udpate Makefile
sed < Makefile.in "
/^CC *=/s%=.*%=$CC%
/^CFLAGS *=/s%=.*%=$CFLAGS%
/^CPP *=/s%=.*%=$CPP%
/^LDSHARED *=/s%=.*%=$LDSHARED%
/^LIBS *=/s%=.*%=$LIBS%
/^SHAREDLIB *=/s%=.*%=$SHAREDLIB%
/^AR *=/s%=.*%=$AR%
/^RANLIB *=/s%=.*%=$RANLIB%
/^VER *=/s%=.*%=$VER%
/^prefix *=/s%=.*%=$prefix%
/^exec_prefix *=/s%=.*%=$exec_prefix%
/^libdir *=/s%=.*%=$libdir%
/^includedir *=/s%=.*%=$includedir%
" > Makefile
@


1.9
log
@made test for shared libraries non-dependant on the actual output of the link step, but on the creation/existance of the file; this was necessary for aix, which reports the name of the file during ld; added support for 64-bit building for aix
@
text
@@


1.8
log
@Update to zlib version 1.1.4
@
text
@d57 1
a57 1
cat > $test.c <<EOF
d70 1
a70 1
if test "$gcc" -eq 1 && ($cc -c $cflags $test.c) 2>/dev/null; then
d119 3
d132 11
a142 2
  if test "`($CC -c $SFLAGS $test.c) 2>&1`" = "" &&
     test "`($LDSHARED -o $test$shared_ext $test.o) 2>&1`" = ""; then
d144 1
a144 1
    LIBS="$SHAREDLIB.$VER"
@


1.7
log
@Made seperate entry for IRIX 5* to set correct command to create a shared library
@
text
@a20 1
SRCDIR=../libz
d23 1
a23 1
VER=`sed -n -e '/VERSION "/s/.*"\(.*\)".*/\1/p' < ${SRCDIR}/zlib.h`
d27 3
d36 2
d39 16
a54 5
  -h* | --h*) echo 'syntax: configure [ --shared ] [--prefix PREFIX]'; exit 0;;
  -p*=* | --p*=*) prefix=`echo $1 | sed 's/[-a-z_]*=//'`; shift;;
  -p* | --p*) prefix="$2"; shift; shift;;
  -s* | --s*) shared=1; shift;;
esac
d65 1
a87 6
  IRIX\ 5*)  SFLAGS=${CFLAGS-"-ansi -O2 -rpath ."}
	     CFLAGS=${CFLAGS-"-ansi -O2"}
	     LDSHARED=${LDSHARED-"ld -shared"};;
  IRIX64*)   SFLAGS=${CFLAGS-"-ansi -O2 -rpath ."}
	     CFLAGS=${CFLAGS-"-ansi -O2"}
	     LDSHARED=${LDSHARED-"cc -64 -shared"};;
d90 5
a94 2
	     LDSHARED=${LDSHARED-"cc -n32 -shared"};;
  OSF1)      SFLAGS=${CFLAGS-"-O -std1"}
d147 5
a151 1
if test -f /usr/include/unistd.h; then
d153 3
d158 8
a165 1
if test ! -f /usr/include/errno.h; then
d184 11
a197 1
echo "SHAREDVER=$SHAREDVER"
d201 1
a204 1
/^SHAREDVER *=/s%=.*%=$SHAREDVER%
d209 3
@


1.7.6.1
log
@sync branch with HEAD
@
text
@d21 1
d24 1
a24 1
VER=`sed -n -e '/VERSION "/s/.*"\(.*\)".*/\1/p' < zlib.h`
a27 3
exec_prefix=${exec_prefix-'${prefix}'}
libdir=${libdir-'${exec_prefix}/lib'}
includedir=${includedir-'${prefix}/include'}
a33 2
while test $# -ge 1
do
d35 5
a39 16
    -h* | --h*)
      echo 'usage:'
      echo '  configure [--shared] [--prefix=PREFIX]  [--exec_prefix=EXPREFIX]'
      echo '     [--libdir=LIBDIR] [--includedir=INCLUDEDIR]'
        exit 0;;
    -p*=* | --p*=*) prefix=`echo $1 | sed 's/[-a-z_]*=//'`; shift;;
    -e*=* | --e*=*) exec_prefix=`echo $1 | sed 's/[-a-z_]*=//'`; shift;;
    -l*=* | --libdir=*) libdir=`echo $1 | sed 's/[-a-z_]*=//'`; shift;;
    -i*=* | --includedir=*) includedir=`echo $1 | sed 's/[-a-z_]*=//'`;shift;;
    -p* | --p*) prefix="$2"; shift; shift;;
    -e* | --e*) exec_prefix="$2"; shift; shift;;
    -l* | --l*) libdir="$2"; shift; shift;;
    -i* | --i*) includedir="$2"; shift; shift;;
    -s* | --s*) shared=1; shift;;
    esac
done
d42 1
a42 1
cat > ${test}.c <<EOF
a49 1
# to force the asm version use: CFLAGS="-O3 -DASMV" ./configure
d54 1
a54 1
if test "$gcc" -eq 1 && ($cc -c $cflags ${test}.c) 2>/dev/null; then
d72 6
d80 2
a81 5
	     LDSHARED=${LDSHARED-"cc -shared"};;
  OSF1\ V4*) SFLAGS=${CFLAGS-"-O -std1"}
	     CFLAGS=${CFLAGS-"-O -std1"}
	     LDSHARED=${LDSHARED-"cc -shared  -Wl,-soname,$SHAREDLIB -Wl,-msym -Wl,-rpath,$(libdir) -Wl,-set_version,${VER}:1.0"};;
  OSF1*)     SFLAGS=${CFLAGS-"-O -std1"}
a105 3
  AIX*)     SFLAGS=${CFLAGS-"-O4 -64"}
	     CFLAGS=${CFLAGS-"-O4"}
	     LDSHARED=${LDSHARED-"$CC -G"};;
d116 2
a117 11
  echo "CC is $CC;"
  echo "LDSHARED is $LDSHARED;"
  echo "test is $test"
  echo "$CC -c $SFLAGS ${test}.c"
  echo "$LDSHARED -o ${test}${shared_ext} ${test}.o"
#  if test "`($CC -c $SFLAGS ${test.}c) 2>&1`" = "" &&
#     test "`($LDSHARED -o ${test}${shared_ext} ${test}.o) 2>&1`" = ""; then
  rm -f ${test}${shared_ext}
  __COMPILE_RESULT="`($CC -c $SFLAGS ${test}.c)`"
  __SHARED_RESULT="`($LDSHARED -o ${test}${shared_ext} ${test}.o)`"
  if test -f "${test}${shared_ext}" ; then
d119 1
a119 1
    LIBS="${SHAREDLIB}.${VER}"
d134 1
a134 5
cat > $test.c <<EOF
#include <unistd.h>
int main() { return 0; }
EOF
if test "`($CC -c $CFLAGS $test.c) 2>&1`" = ""; then
a135 3
  echo "Checking for unistd.h... Yes."
else
  echo "Checking for unistd.h... No."
d138 1
a138 8
cat > $test.c <<EOF
#include <errno.h>
int main() { return 0; }
EOF
if test "`($CC -c $CFLAGS $test.c) 2>&1`" = ""; then
  echo "Checking for errno.h...	 Yes."
else
  echo "Checking for errno.h...	 No."
a156 11
CPP=${CPP-"$CC -E"}
case $CFLAGS in
  *ASMV*)
    if test "`nm $test.o | grep _hello`" = ""; then
      CPP="$CPP -DNO_UNDERLINE"
      echo Checking for underline in external names... No.
    else
      echo Checking for underline in external names... Yes.
    fi;;
esac

d160 1
a163 1
/^CPP *=/s%=.*%=$CPP%
d167 1
a171 3
/^exec_prefix *=/s%=.*%=$exec_prefix%
/^libdir *=/s%=.*%=$libdir%
/^includedir *=/s%=.*%=$includedir%
@


1.7.8.1
log
@sync to HEAD...
@
text
@d21 1
d24 1
a24 1
VER=`sed -n -e '/VERSION "/s/.*"\(.*\)".*/\1/p' < zlib.h`
a27 3
exec_prefix=${exec_prefix-'${prefix}'}
libdir=${libdir-'${exec_prefix}/lib'}
includedir=${includedir-'${prefix}/include'}
a33 2
while test $# -ge 1
do
d35 5
a39 16
    -h* | --h*)
      echo 'usage:'
      echo '  configure [--shared] [--prefix=PREFIX]  [--exec_prefix=EXPREFIX]'
      echo '     [--libdir=LIBDIR] [--includedir=INCLUDEDIR]'
        exit 0;;
    -p*=* | --p*=*) prefix=`echo $1 | sed 's/[-a-z_]*=//'`; shift;;
    -e*=* | --e*=*) exec_prefix=`echo $1 | sed 's/[-a-z_]*=//'`; shift;;
    -l*=* | --libdir=*) libdir=`echo $1 | sed 's/[-a-z_]*=//'`; shift;;
    -i*=* | --includedir=*) includedir=`echo $1 | sed 's/[-a-z_]*=//'`;shift;;
    -p* | --p*) prefix="$2"; shift; shift;;
    -e* | --e*) exec_prefix="$2"; shift; shift;;
    -l* | --l*) libdir="$2"; shift; shift;;
    -i* | --i*) includedir="$2"; shift; shift;;
    -s* | --s*) shared=1; shift;;
    esac
done
d42 1
a42 1
cat > ${test}.c <<EOF
a49 1
# to force the asm version use: CFLAGS="-O3 -DASMV" ./configure
d54 1
a54 1
if test "$gcc" -eq 1 && ($cc -c $cflags ${test}.c) 2>/dev/null; then
d72 6
d80 2
a81 5
	     LDSHARED=${LDSHARED-"cc -shared"};;
  OSF1\ V4*) SFLAGS=${CFLAGS-"-O -std1"}
	     CFLAGS=${CFLAGS-"-O -std1"}
	     LDSHARED=${LDSHARED-"cc -shared  -Wl,-soname,$SHAREDLIB -Wl,-msym -Wl,-rpath,$(libdir) -Wl,-set_version,${VER}:1.0"};;
  OSF1*)     SFLAGS=${CFLAGS-"-O -std1"}
a105 3
  AIX*)     SFLAGS=${CFLAGS-"-O4 -64"}
	     CFLAGS=${CFLAGS-"-O4"}
	     LDSHARED=${LDSHARED-"$CC -G"};;
d116 2
a117 11
  echo "CC is $CC;"
  echo "LDSHARED is $LDSHARED;"
  echo "test is $test"
  echo "$CC -c $SFLAGS ${test}.c"
  echo "$LDSHARED -o ${test}${shared_ext} ${test}.o"
#  if test "`($CC -c $SFLAGS ${test.}c) 2>&1`" = "" &&
#     test "`($LDSHARED -o ${test}${shared_ext} ${test}.o) 2>&1`" = ""; then
  rm -f ${test}${shared_ext}
  __COMPILE_RESULT="`($CC -c $SFLAGS ${test}.c)`"
  __SHARED_RESULT="`($LDSHARED -o ${test}${shared_ext} ${test}.o)`"
  if test -f "${test}${shared_ext}" ; then
d119 1
a119 1
    LIBS="${SHAREDLIB}.${VER}"
d134 1
a134 5
cat > $test.c <<EOF
#include <unistd.h>
int main() { return 0; }
EOF
if test "`($CC -c $CFLAGS $test.c) 2>&1`" = ""; then
a135 3
  echo "Checking for unistd.h... Yes."
else
  echo "Checking for unistd.h... No."
d138 1
a138 8
cat > $test.c <<EOF
#include <errno.h>
int main() { return 0; }
EOF
if test "`($CC -c $CFLAGS $test.c) 2>&1`" = ""; then
  echo "Checking for errno.h...	 Yes."
else
  echo "Checking for errno.h...	 No."
a156 11
CPP=${CPP-"$CC -E"}
case $CFLAGS in
  *ASMV*)
    if test "`nm $test.o | grep _hello`" = ""; then
      CPP="$CPP -DNO_UNDERLINE"
      echo Checking for underline in external names... No.
    else
      echo Checking for underline in external names... Yes.
    fi;;
esac

d160 1
a163 1
/^CPP *=/s%=.*%=$CPP%
d167 1
a171 3
/^exec_prefix *=/s%=.*%=$exec_prefix%
/^libdir *=/s%=.*%=$libdir%
/^includedir *=/s%=.*%=$includedir%
@


1.6
log
@Fixed shared library version number handling
@
text
@d72 3
@


1.5
log
@Added -n32 flag for shared library build on IRIX's other han IRIX64
@
text
@d157 1
d164 1
@


1.4
log
@Mods to get Irix64 to use -64 flag.
@
text
@d77 1
a77 1
	     LDSHARED=${LDSHARED-"cc -shared"};;
@


1.3
log
@Mods to get it to compile when NFS is 1.
@
text
@d72 3
@


1.2
log
@zlib version 1.1.2
@
text
@d21 1
d24 1
a24 1
VER=`sed -n -e '/VERSION "/s/.*"\(.*\)".*/\1/p' < zlib.h`
@


1.1
log
@Initial revision
@
text
@d7 4
d17 4
d22 1
d27 12
a38 1
exec_prefix=${exec_prefix-$prefix}
a39 1
test -z "$CC" && echo Checking for gcc...
d42 2
a43 1
int hello() { printf("hello\n"); }
d45 10
a54 2
if test -z "$CC" && (gcc -c -O3 $test.c) 2>/dev/null; then
  CC=gcc
d56 5
a60 2
  CFLAGS=${CFLAGS-"-O3"}
  LDSHARED=${LDSHARED-"gcc -shared"}
d65 6
a70 6
  SunOS\ 5*) SFLAGS=${CFLAGS-"-fast -xcg89 -KPIC -R."}
             CFLAGS=${CFLAGS-"-fast -xcg89"}
	     LDSHARED=${LDSHARED-"cc -G"};;
  SunOS\ 4*) SFLAGS=${CFLAGS-"-O2 -PIC"}
	     CFLAGS=${CFLAGS-"-O2"}
	     LDSHARED=${LDSHARED-"ld"};;
d74 3
d85 12
a96 1
  HP-UX*)    SFLAGS=${CFLAGS-"-O +z"}
d98 2
a99 3
	     LDSHARED=${LDSHARED-"ld -b"}
	     SHAREDLIBS='libz.sl';;
  # send working options for other systems to gzip@@prep.ai.mit.edu
d106 17
a122 8
echo Checking for shared library support...
# we must test in two steps (cc then ld), required at least on SunOS 4.x
if test "`($CC -c $SFLAGS $test.c) 2>&1`" = "" &&
   test "`($LDSHARED -o $test.so $test.o) 2>&1`" = ""; then
  CFLAGS="$SFLAGS"
  LIBS='libz.so.$(VER)'
  echo Building shared library libz.so.$VER with $CC.
else
d126 25
a150 1
rm -f $test.[co] $test.so
d154 9
a162 9
/^CC *=/s/=.*/=$CC/
/^CFLAGS *=/s/=.*/=$CFLAGS/
/^LDSHARED *=/s/=.*/=$LDSHARED/
/^LIBS *=/s,=.*,=$LIBS,
/^AR *=/s/=.*/=$AR/
/^RANLIB *=/s,=.*,=$RANLIB,
/^VER *=/s/=.*/=$VER/
/^prefix *=/s,=.*,=$prefix,
/^exec_prefix *=/s,=.*,=$exec_prefix,
@


1.1.1.1
log
@Initial inclusion of zlib (version 1.0.4).
@
text
@@
