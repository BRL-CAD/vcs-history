head	1.11;
access;
symbols
	ansi-20040405-merged:1.7.6.1
	premerge-autoconf:1.10
	postmerge-20040315-windows:1.10
	premerge-20040315-windows:1.10
	windows-20040315-freeze:1.7.8.1
	autoconf-20031203:1.10
	autoconf-20031202:1.10
	phong-branch:1.8.0.4
	photonmap-branch:1.8.0.2
	rel-6-1-DP:1.7
	windows-branch:1.7.0.8
	rel-6-0-2:1.7
	ansi-branch:1.7.0.6
	rel-6-0-1-branch:1.7.0.4
	hartley-6-0-post:1.7
	hartley-6-0-pre:1.7
	rel-6-0-1:1.7
	rel-6-0:1.7
	rel-5-4:1.7
	offsite-5-3-pre:1.7
	rel-5-3:1.7
	rel-5-2:1.7
	rel-5-1-branch:1.7.0.2
	rel-5-1:1.7
	rel-5-0:1.7
	rel-5-0-beta:1.6
	AUTOCONF:1.10.0.2
	zlib_1_0_4:1.1.1.1
	zlib:1.1.1;
locks; strict;
comment	@# @;


1.11
date	2004.03.18.18.25.16;	author erikg;	state dead;
branches;
next	1.10;

1.10
date	2003.10.01.22.15.39;	author morrison;	state Exp;
branches
	1.10.2.1;
next	1.9;

1.9
date	2003.09.26.20.26.17;	author morrison;	state Exp;
branches;
next	1.8;

1.8
date	2002.12.23.21.47.37;	author jra;	state Exp;
branches;
next	1.7;

1.7
date	99.07.08.12.29.14;	author jra;	state Exp;
branches
	1.7.6.1
	1.7.8.1;
next	1.6;

1.6
date	99.05.21.12.44.23;	author jra;	state Exp;
branches;
next	1.5;

1.5
date	99.05.19.19.01.46;	author jra;	state Exp;
branches;
next	1.4;

1.4
date	98.10.29.03.29.50;	author jra;	state Exp;
branches;
next	1.3;

1.3
date	98.10.28.17.17.47;	author jra;	state Exp;
branches;
next	1.2;

1.2
date	98.06.24.18.33.15;	author jra;	state Exp;
branches;
next	1.1;

1.1
date	98.06.24.13.19.59;	author jra;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.06.24.13.19.59;	author jra;	state Exp;
branches;
next	;

1.7.6.1
date	2004.03.17.21.21.49;	author morrison;	state Exp;
branches;
next	;

1.7.8.1
date	2004.03.11.23.45.54;	author morrison;	state Exp;
branches;
next	;

1.10.2.1
date	2003.12.04.19.20.00;	author erikg;	state dead;
branches;
next	1.10.2.2;

1.10.2.2
date	2004.02.12.19.18.00;	author erikg;	state Exp;
branches;
next	1.10.2.3;

1.10.2.3
date	2004.02.12.20.07.05;	author erikg;	state dead;
branches;
next	;


desc
@@


1.11
log
@merge of AUTOCONF branch in to HEAD
@
text
@# Makefile for zlib
# Copyright (C) 1995-2002 Jean-loup Gailly.
# For conditions of distribution and use, see copyright notice in zlib.h 

# To compile and test, type:
#   ./configure; make test
# The call of configure is optional if you don't have special requirements
# If you wish to build zlib as a shared library, use: ./configure -s

# To install /usr/local/lib/libz.* and /usr/local/include/zlib.h, type:
#    make install
# To install in $HOME instead of /usr/local, use:
#    make install prefix=$HOME

CC=cc

CFLAGS=-O
#CFLAGS=-O -DMAX_WBITS=14 -DMAX_MEM_LEVEL=7
#CFLAGS=-g -DDEBUG
#CFLAGS=-O3 -Wall -Wwrite-strings -Wpointer-arith -Wconversion \
#           -Wstrict-prototypes -Wmissing-prototypes

LDFLAGS=-L. -lz
LDSHARED=$(LDSHARED)
CPP=$(CC) -E

VER=1.1.4
LIBS=libz.a
SHAREDLIB=libz.so

AR=ar rc
RANLIB=ranlib
TAR=tar
SHELL=/bin/sh

prefix = /usr/local
exec_prefix = ${prefix}
libdir = ${exec_prefix}/lib
includedir = ${prefix}/include

OBJS = adler32.o compress.o crc32.o gzio.o uncompr.o deflate.o trees.o \
       zutil.o inflate.o infblock.o inftrees.o infcodes.o infutil.o inffast.o

OBJA =
# to use the asm code: make OBJA=match.o

TEST_OBJS = example.o minigzip.o

DISTFILES = README FAQ INDEX ChangeLog configure Make*[a-z0-9] *.[ch] *.mms \
  algorithm.txt zlib.3 zlib.html \
  msdos/Make*[a-z0-9] msdos/zlib.def msdos/zlib.rc \
  nt/Make*[a-z0-9] nt/zlib.dnt amiga/Make*.??? os2/M*.os2 os2/zlib.def \
  contrib/RE*.contrib contrib/*.txt contrib/asm386/*.asm contrib/asm386/*.c \
  contrib/asm386/*.bat contrib/asm386/zlibvc.d?? contrib/asm[56]86/*.?86 \
  contrib/asm[56]86/*.S contrib/iostream/*.cpp \
  contrib/iostream/*.h  contrib/iostream2/*.h contrib/iostream2/*.cpp \
  contrib/untgz/Makefile contrib/untgz/*.c contrib/untgz/*.w32 \
  contrib/minizip/[CM]*[pe] contrib/minizip/*.[ch] contrib/minizip/*.[td]?? \
  contrib/delphi*/*.???

all: example minigzip

test: all
	@@LD_LIBRARY_PATH=.:$(LD_LIBRARY_PATH) ; export LD_LIBRARY_PATH; \
	echo hello world | ./minigzip | ./minigzip -d || \
	  echo '		*** minigzip test FAILED ***' ; \
	if ./example; then \
	  echo '		*** zlib test OK ***'; \
	else \
	  echo '		*** zlib test FAILED ***'; \
	fi

libz.a: $(OBJS) $(OBJA)
	$(AR) $@@ $(OBJS) $(OBJA)
	-@@ ($(RANLIB) $@@ || true) >/dev/null 2>&1

match.o: match.S
	$(CPP) match.S > _match.s
	$(CC) -c _match.s
	mv _match.o match.o
	rm -f _match.s

$(SHAREDLIB).$(VER): $(OBJS)
	$(LDSHARED) -o $@@ $(OBJS)
	rm -f $(SHAREDLIB) $(SHAREDLIB).1
	ln -s $@@ $(SHAREDLIB)
	ln -s $@@ $(SHAREDLIB).1

example: example.o $(LIBS)
	$(CC) $(CFLAGS) -o $@@ example.o $(LDFLAGS)

minigzip: minigzip.o $(LIBS)
	$(CC) $(CFLAGS) -o $@@ minigzip.o $(LDFLAGS)

install: $(LIBS)
	-@@if [ ! -d $(includedir)  ]; then mkdir $(includedir); fi
	-@@if [ ! -d $(libdir) ]; then mkdir $(libdir); fi
	cp ../h/zlib.h ../h/zconf.h $(includedir)
	chmod 644 $(includedir)/zlib.h $(includedir)/zconf.h
	cp $(LIBS) $(libdir)
	cd $(libdir); chmod 755 $(LIBS)
	-@@(cd $(libdir); $(RANLIB) libz.a || true) >/dev/null 2>&1
	cd $(libdir); if test -f $(SHAREDLIB).$(VER); then \
	  rm -f $(SHAREDLIB) $(SHAREDLIB).1; \
	  ln -s $(SHAREDLIB).$(VER) $(SHAREDLIB); \
	  ln -s $(SHAREDLIB).$(VER) $(SHAREDLIB).1; \
	  (ldconfig || true)  >/dev/null 2>&1; \
	fi
# The ranlib in install is needed on NeXTSTEP which checks file times
# ldconfig is for Linux

uninstall:
	cd $(includedir); \
	v=$(VER); \
	if test -f zlib.h; then \
	  v=`sed -n '/VERSION "/s/.*"\(.*\)".*/\1/p' < zlib.h`; \
          rm -f zlib.h zconf.h; \
	fi; \
	cd $(libdir); rm -f libz.a; \
	if test -f $(SHAREDLIB).$$v; then \
	  rm -f $(SHAREDLIB).$$v $(SHAREDLIB) $(SHAREDLIB).1; \
	fi

clean:
	rm -f *.o *~ example minigzip libz.a libz.so* foo.gz so_locations \
	   _match.s maketree

distclean:	clean

zip:
	mv Makefile Makefile~; cp -p Makefile.in Makefile
	rm -f test.c ztest*.c contrib/minizip/test.zip
	v=`sed -n -e 's/\.//g' -e '/VERSION "/s/.*"\(.*\)".*/\1/p' < zlib.h`;\
	zip -ul9 zlib$$v $(DISTFILES)
	mv Makefile~ Makefile

dist:
	mv Makefile Makefile~; cp -p Makefile.in Makefile
	rm -f test.c ztest*.c contrib/minizip/test.zip
	d=zlib-`sed -n '/VERSION "/s/.*"\(.*\)".*/\1/p' < zlib.h`;\
	rm -f $$d.tar.gz; \
	if test ! -d ../$$d; then rm -f ../$$d; ln -s `pwd` ../$$d; fi; \
	files=""; \
	for f in $(DISTFILES); do files="$$files $$d/$$f"; done; \
	cd ..; \
	GZIP=-9 $(TAR) chofz $$d/$$d.tar.gz $$files; \
	if test ! -d $$d; then rm -f $$d; fi
	mv Makefile~ Makefile

tags:	
	etags *.[ch]

depend:
	makedepend -- $(CFLAGS) -- *.[ch]

# DO NOT DELETE THIS LINE -- make depend depends on it.

adler32.o: zlib.h zconf.h
compress.o: zlib.h zconf.h
crc32.o: zlib.h zconf.h
deflate.o: deflate.h zutil.h zlib.h zconf.h
example.o: zlib.h zconf.h
gzio.o: zutil.h zlib.h zconf.h
infblock.o: infblock.h inftrees.h infcodes.h infutil.h zutil.h zlib.h zconf.h
infcodes.o: zutil.h zlib.h zconf.h
infcodes.o: inftrees.h infblock.h infcodes.h infutil.h inffast.h
inffast.o: zutil.h zlib.h zconf.h inftrees.h
inffast.o: infblock.h infcodes.h infutil.h inffast.h
inflate.o: zutil.h zlib.h zconf.h infblock.h
inftrees.o: zutil.h zlib.h zconf.h inftrees.h
infutil.o: zutil.h zlib.h zconf.h infblock.h inftrees.h infcodes.h infutil.h
minigzip.o:  zlib.h zconf.h 
trees.o: deflate.h zutil.h zlib.h zconf.h trees.h
uncompr.o: zlib.h zconf.h
zutil.o: zutil.h zlib.h zconf.h  
@


1.10
log
@make the makefile use the headerfiles we put in the h/ dir anyways to further nullify the persistent reinstall annoyance
@
text
@@


1.10.2.1
log
@adding more automake stuff
removed some files that are now generated
@
text
@@


1.10.2.2
log
@merge from HEAD
@
text
@@


1.10.2.3
log
@generated now...
@
text
@@


1.9
log
@make ldshared be ldshared, not cc...
@
text
@d98 1
a98 1
	cp zlib.h zconf.h $(includedir)
@


1.8
log
@Update to zlib version 1.1.4
@
text
@d24 1
a24 1
LDSHARED=$(CC)
@


1.7
log
@eliminated duplicate install of header files
@
text
@d2 1
a2 1
# Copyright (C) 1995-1998 Jean-loup Gailly.
d25 1
d27 1
a27 1
VER=1.1.2
a29 1
SHAREDVER=.11
d38 2
d44 3
d49 7
a55 5
DISTFILES = README INDEX ChangeLog configure Make*[a-z0-9] *.[ch] descrip.mms \
  algorithm.txt zlib.3 msdos/Make*[a-z0-9] msdos/zlib.def msdos/zlib.rc \
  nt/Makefile.nt nt/zlib.dnt amiga/Make*.??? contrib/README.contrib \
  contrib/*.txt contrib/asm386/*.asm contrib/asm386/*.c \
  contrib/asm386/*.bat contrib/asm386/zlibvc.d?? contrib/iostream/*.cpp \
d58 2
a59 2
  contrib/minizip/[CM]*[pe] contrib/minizip/*.[ch] contrib/minizip/*.[td]??

d73 2
a74 2
libz.a: $(OBJS)
	$(AR) $@@ $(OBJS)
d77 7
a83 1
libz.so: $(OBJS)
d85 3
a87 1
	rm -f $(SHAREDLIB).11.1 $(SHAREDLIB).1
d96 11
a106 11
	-@@if [ ! -d $(prefix)/include  ]; then mkdir $(prefix)/include; fi
	-@@if [ ! -d $(exec_prefix)/lib ]; then mkdir $(exec_prefix)/lib; fi
#	cp zlib.h zconf.h $(prefix)/include
#	chmod 644 $(prefix)/include/zlib.h $(prefix)/include/zconf.h
	cp $(LIBS) $(exec_prefix)/lib
	cd $(exec_prefix)/lib; chmod 755 $(LIBS)
	-@@(cd $(exec_prefix)/lib; $(RANLIB) libz.a || true) >/dev/null 2>&1
	cd $(exec_prefix)/lib; if test -f $(SHAREDLIB); then \
	  rm -f $(SHAREDLIB).* ; \
	  ln -s $(SHAREDLIB) $(SHAREDLIB)$(SHAREDVER).1; \
	  ln -s $(SHAREDLIB) $(SHAREDLIB).1; \
d113 1
a113 1
	cd $(prefix)/include; \
d119 1
a119 1
	cd $(exec_prefix)/lib; rm -f libz.a; \
d125 2
a126 1
	rm -f *.o *~ example minigzip libz.a libz.so* foo.gz
@


1.7.6.1
log
@sync branch with HEAD
@
text
@d2 1
a2 1
# Copyright (C) 1995-2002 Jean-loup Gailly.
d24 1
a24 2
LDSHARED=$(LDSHARED)
CPP=$(CC) -E
d26 1
a26 1
VER=1.1.4
d29 1
a37 2
libdir = ${exec_prefix}/lib
includedir = ${prefix}/include
a41 3
OBJA =
# to use the asm code: make OBJA=match.o

d44 5
a48 7
DISTFILES = README FAQ INDEX ChangeLog configure Make*[a-z0-9] *.[ch] *.mms \
  algorithm.txt zlib.3 zlib.html \
  msdos/Make*[a-z0-9] msdos/zlib.def msdos/zlib.rc \
  nt/Make*[a-z0-9] nt/zlib.dnt amiga/Make*.??? os2/M*.os2 os2/zlib.def \
  contrib/RE*.contrib contrib/*.txt contrib/asm386/*.asm contrib/asm386/*.c \
  contrib/asm386/*.bat contrib/asm386/zlibvc.d?? contrib/asm[56]86/*.?86 \
  contrib/asm[56]86/*.S contrib/iostream/*.cpp \
d51 2
a52 2
  contrib/minizip/[CM]*[pe] contrib/minizip/*.[ch] contrib/minizip/*.[td]?? \
  contrib/delphi*/*.???
d66 2
a67 2
libz.a: $(OBJS) $(OBJA)
	$(AR) $@@ $(OBJS) $(OBJA)
d70 1
a70 7
match.o: match.S
	$(CPP) match.S > _match.s
	$(CC) -c _match.s
	mv _match.o match.o
	rm -f _match.s

$(SHAREDLIB).$(VER): $(OBJS)
d72 1
a72 3
	rm -f $(SHAREDLIB) $(SHAREDLIB).1
	ln -s $@@ $(SHAREDLIB)
	ln -s $@@ $(SHAREDLIB).1
d81 11
a91 11
	-@@if [ ! -d $(includedir)  ]; then mkdir $(includedir); fi
	-@@if [ ! -d $(libdir) ]; then mkdir $(libdir); fi
	cp ../h/zlib.h ../h/zconf.h $(includedir)
	chmod 644 $(includedir)/zlib.h $(includedir)/zconf.h
	cp $(LIBS) $(libdir)
	cd $(libdir); chmod 755 $(LIBS)
	-@@(cd $(libdir); $(RANLIB) libz.a || true) >/dev/null 2>&1
	cd $(libdir); if test -f $(SHAREDLIB).$(VER); then \
	  rm -f $(SHAREDLIB) $(SHAREDLIB).1; \
	  ln -s $(SHAREDLIB).$(VER) $(SHAREDLIB); \
	  ln -s $(SHAREDLIB).$(VER) $(SHAREDLIB).1; \
d98 1
a98 1
	cd $(includedir); \
d104 1
a104 1
	cd $(libdir); rm -f libz.a; \
d110 1
a110 2
	rm -f *.o *~ example minigzip libz.a libz.so* foo.gz so_locations \
	   _match.s maketree
@


1.7.8.1
log
@sync to HEAD...
@
text
@d2 1
a2 1
# Copyright (C) 1995-2002 Jean-loup Gailly.
d24 1
a24 2
LDSHARED=$(LDSHARED)
CPP=$(CC) -E
d26 1
a26 1
VER=1.1.4
d29 1
a37 2
libdir = ${exec_prefix}/lib
includedir = ${prefix}/include
a41 3
OBJA =
# to use the asm code: make OBJA=match.o

d44 5
a48 7
DISTFILES = README FAQ INDEX ChangeLog configure Make*[a-z0-9] *.[ch] *.mms \
  algorithm.txt zlib.3 zlib.html \
  msdos/Make*[a-z0-9] msdos/zlib.def msdos/zlib.rc \
  nt/Make*[a-z0-9] nt/zlib.dnt amiga/Make*.??? os2/M*.os2 os2/zlib.def \
  contrib/RE*.contrib contrib/*.txt contrib/asm386/*.asm contrib/asm386/*.c \
  contrib/asm386/*.bat contrib/asm386/zlibvc.d?? contrib/asm[56]86/*.?86 \
  contrib/asm[56]86/*.S contrib/iostream/*.cpp \
d51 2
a52 2
  contrib/minizip/[CM]*[pe] contrib/minizip/*.[ch] contrib/minizip/*.[td]?? \
  contrib/delphi*/*.???
d66 2
a67 2
libz.a: $(OBJS) $(OBJA)
	$(AR) $@@ $(OBJS) $(OBJA)
d70 1
a70 7
match.o: match.S
	$(CPP) match.S > _match.s
	$(CC) -c _match.s
	mv _match.o match.o
	rm -f _match.s

$(SHAREDLIB).$(VER): $(OBJS)
d72 1
a72 3
	rm -f $(SHAREDLIB) $(SHAREDLIB).1
	ln -s $@@ $(SHAREDLIB)
	ln -s $@@ $(SHAREDLIB).1
d81 11
a91 11
	-@@if [ ! -d $(includedir)  ]; then mkdir $(includedir); fi
	-@@if [ ! -d $(libdir) ]; then mkdir $(libdir); fi
	cp ../h/zlib.h ../h/zconf.h $(includedir)
	chmod 644 $(includedir)/zlib.h $(includedir)/zconf.h
	cp $(LIBS) $(libdir)
	cd $(libdir); chmod 755 $(LIBS)
	-@@(cd $(libdir); $(RANLIB) libz.a || true) >/dev/null 2>&1
	cd $(libdir); if test -f $(SHAREDLIB).$(VER); then \
	  rm -f $(SHAREDLIB) $(SHAREDLIB).1; \
	  ln -s $(SHAREDLIB).$(VER) $(SHAREDLIB); \
	  ln -s $(SHAREDLIB).$(VER) $(SHAREDLIB).1; \
d98 1
a98 1
	cd $(includedir); \
d104 1
a104 1
	cd $(libdir); rm -f libz.a; \
d110 1
a110 2
	rm -f *.o *~ example minigzip libz.a libz.so* foo.gz so_locations \
	   _match.s maketree
@


1.6
log
@Eliminated last vestiges of shared library version #11
@
text
@d83 2
a84 2
	cp zlib.h zconf.h $(prefix)/include
	chmod 644 $(prefix)/include/zlib.h $(prefix)/include/zconf.h
@


1.5
log
@Fixed shared library version number handling
@
text
@d89 1
a89 1
	  rm -f $(SHAREDLIB).11.1 $(SHAREDLIB).1; \
@


1.4
log
@Mods to handle shared libraries.
@
text
@d29 1
d90 1
a90 1
	  ln -s $(SHAREDLIB) $(SHAREDLIB).11.1; \
@


1.3
log
@Mods for shard libraries under Linux.
@
text
@d69 1
a69 1
$(SHAREDLIB): $(OBJS)
a71 2
	ln -s $@@ $(SHAREDLIB).11.1
	ln -s $@@ $(SHAREDLIB).1
d87 4
a90 4
	cd $(exec_prefix)/lib; if test -f $(SHAREDLIB).$(VER); then \
	  rm -f $(SHAREDLIB) $(SHAREDLIB).1; \
	  ln -s $(SHAREDLIB).$(VER) $(SHAREDLIB); \
	  ln -s $(SHAREDLIB).$(VER) $(SHAREDLIB).1; \
@


1.2
log
@zlib version 1.1.2
@
text
@d69 1
a69 1
$(SHAREDLIB).$(VER): $(OBJS)
d71 2
a72 2
	rm -f $(SHAREDLIB) $(SHAREDLIB).1
	ln -s $@@ $(SHAREDLIB)
@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
# Copyright (C) 1995-1996 Jean-loup Gailly.
d8 1
d26 1
a26 1
VER=1.0.4
d28 1
d33 1
d35 2
a36 2
prefix=/usr/local
exec_prefix = $(prefix)
d43 8
a50 2
DISTFILES = README INDEX ChangeLog configure Make*[a-z0-9] descrip.mms \
	    zlib.def zlib.rc algorithm.doc  *.[ch]
d52 1
d56 8
a63 2
	./example
	echo hello world | ./minigzip | ./minigzip -d 
d67 1
a67 1
	-@@ ($(RANLIB) $@@ || true) 2>/dev/null
d69 1
a69 1
libz.so.$(VER): $(OBJS)
d71 3
a73 1
	rm -f libz.so; ln -s $@@ libz.so
d82 2
a83 2
	-@@if [ ! $(prefix)/include  ]; then mkdir $(prefix)/include; fi
	-@@if [ ! $(exec_prefix)/lib ]; then mkdir $(exec_prefix)/lib; fi
d87 1
a87 1
	cd $(exec_prefix)/lib; chmod 644 $(LIBS)
d89 5
a93 2
	cd $(exec_prefix)/lib; if test -f libz.so.$(VER); then \
	  ln -s libz.so.$(VER) libz.so; \
d96 1
d99 9
a107 4
	cd $(exec_prefix)/lib; rm -f $(LIBS); \
	if test -f libz.so; then \
	 v=`sed -n '/VERSION "/s/.*"\(.*\)".*/\1/p'<$(prefix)/include/zlib.h`;\
	 rm -f libz.so.$$v libz.so; \
a108 1
	cd $(prefix)/include; rm -f zlib.h zconf.h
d113 2
d117 1
d124 1
d158 1
a158 1
trees.o: deflate.h zutil.h zlib.h zconf.h 
@


1.1.1.1
log
@Initial inclusion of zlib (version 1.0.4).
@
text
@@
