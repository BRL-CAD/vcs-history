head	1.4;
access;
symbols
	ansi-20040405-merged:1.3.4.1
	postmerge-20040405-ansi:1.3
	premerge-20040404-ansi:1.3
	postmerge-autoconf:1.3
	autoconf-freeze:1.1.6.3
	premerge-autoconf:1.3
	postmerge-20040315-windows:1.3
	premerge-20040315-windows:1.3
	windows-20040315-freeze:1.3.2.1
	autoconf-20031203:1.1.6.1
	autoconf-20031202:1.1
	autoconf-branch:1.1.0.6
	phong-branch:1.1.0.4
	photonmap-branch:1.1.0.2
	windows-branch:1.3.0.2
	ansi-branch:1.3.0.4;
locks; strict;
comment	@# @;


1.4
date	2004.05.21.18.00.57;	author morrison;	state dead;
branches;
next	1.3;

1.3
date	2004.03.04.19.49.18;	author morrison;	state Exp;
branches
	1.3.2.1
	1.3.4.1;
next	1.2;

1.2
date	2003.11.07.14.58.21;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2003.03.13.20.04.21;	author jra;	state Exp;
branches
	1.1.6.1;
next	;

1.1.6.1
date	2003.12.03.16.25.20;	author erikg;	state Exp;
branches;
next	1.1.6.2;

1.1.6.2
date	2004.02.12.19.02.41;	author erikg;	state Exp;
branches;
next	1.1.6.3;

1.1.6.3
date	2004.03.15.13.56.01;	author erikg;	state Exp;
branches;
next	;

1.3.2.1
date	2004.03.12.10.00.12;	author morrison;	state Exp;
branches;
next	;

1.3.4.1
date	2004.03.17.21.20.55;	author morrison;	state Exp;
branches;
next	;


desc
@@


1.4
log
@moved from top-level to src/other/.
@
text
@#!/bin/sh
# the next line restarts using wish \
exec wish "$0" ${1+"$@@"}

# browse --
# This script generates a directory browser, which lists the working
# directory and allows you to open files or subdirectories by
# double-clicking.
#
# RCS: @@(#) $Id: browse,v 1.3 2004/03/04 19:49:18 morrison Exp $

# Create a scrollbar on the right side of the main window and a listbox
# on the left side.

scrollbar .scroll -command ".list yview"
pack .scroll -side right -fill y
listbox .list -yscroll ".scroll set" -relief sunken -width 20 -height 20 \
	-setgrid yes
pack .list -side left -fill both -expand yes
wm minsize . 1 1

# The procedure below is invoked to open a browser on a given file;  if the
# file is a directory then another instance of this program is invoked; if
# the file is a regular file then the Mx editor is invoked to display
# the file.

set browseScript [file join [pwd] $argv0]
proc browse {dir file} {
    global env browseScript
    if {[string compare $dir "."] != 0} {set file $dir/$file}
    switch [file type $file] {
	directory {
	    exec [info nameofexecutable] $browseScript $file &
	}
	file {
	    if {[info exists env(EDITOR)]} {
		eval exec $env(EDITOR) $file &
	    } else {
		exec xedit $file &
	    }
	}
	default {
	    puts stdout "\"$file\" isn't a directory or regular file"
	}
    }
}

# Fill the listbox with a list of all the files in the directory.

if {$argc>0} {set dir [lindex $argv 0]} else {set dir "."}
foreach i [lsort [glob * .* *.*]] {
    if {[file type $i] eq "directory"} {
	# Safe to do since it is still a directory.
	append i /
    }
    .list insert end $i
}

# Set up bindings for the browser.

bind all <Control-c> {destroy .}
bind .list <Double-Button-1> {foreach i [selection get] {browse $dir $i}}

# Local Variables:
# mode: tcl
# End:
@


1.3
log
@Updated to tk 8.4.6
@
text
@d10 1
a10 1
# RCS: @@(#) $Id: browse,v 1.4 2001/11/05 10:13:53 dkf Exp $
@


1.3.4.1
log
@sync branch with HEAD
@
text
@d10 1
a10 1
# RCS: @@(#) $Id$
@


1.3.2.1
log
@merge from HEAD
@
text
@d10 1
a10 1
# RCS: @@(#) $Id$
@


1.2
log
@updated tk to 8.4.4
@
text
@@


1.1
log
@*** empty log message ***
@
text
@@


1.1.6.1
log
@updates from HEAD, part 1
@
text
@d10 1
a10 1
# RCS: @@(#) $Id: browse,v 1.2 2003/11/07 14:58:21 morrison Exp $
@


1.1.6.2
log
@merge from HEAD
@
text
@@


1.1.6.3
log
@merge from head
@
text
@d10 1
a10 1
# RCS: @@(#) $Id: browse,v 1.1.6.2 2004/02/12 19:02:41 erikg Exp $
@


