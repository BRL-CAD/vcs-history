head	1.2;
access;
symbols
	ansi-20040405-merged:1.1.10.1
	postmerge-20040405-ansi:1.1
	premerge-20040404-ansi:1.1
	postmerge-autoconf:1.1
	autoconf-freeze:1.1
	premerge-autoconf:1.1
	postmerge-20040315-windows:1.1
	premerge-20040315-windows:1.1
	windows-20040315-freeze:1.1.8.1
	autoconf-20031203:1.1
	autoconf-20031202:1.1
	autoconf-branch:1.1.0.6
	phong-branch:1.1.0.4
	photonmap-branch:1.1.0.2
	windows-branch:1.1.0.8
	ansi-branch:1.1.0.10;
locks; strict;
comment	@ * @;


1.2
date	2004.05.21.18.01.21;	author morrison;	state dead;
branches;
next	1.1;

1.1
date	2003.03.13.20.04.31;	author jra;	state Exp;
branches
	1.1.8.1
	1.1.10.1;
next	;

1.1.8.1
date	2004.03.12.10.00.23;	author morrison;	state Exp;
branches;
next	;

1.1.10.1
date	2004.03.17.21.21.05;	author morrison;	state Exp;
branches;
next	;


desc
@@


1.2
log
@moved from top-level to src/other/.
@
text
@/* 
 * tkMacAppearanceStubs.c --
 *
 *	This file contains stubs for some MacOS8.6+ Toolbox calls that
 *      are not contained in any of the CFM68K stubs libraries.  Their
 *      use must be conditionalized by checks (usually for Appearance version
 *      greater than 1.1), so they will never get called on a CFM68k system.
 *      Putting in the stubs means I don't have to clutter the code BOTH
 *      with appearance version checks & #ifdef GENERATING_CFM68K...
 *
 * Copyright (c) 1999 Scriptics Inc.
 *
 * See the file "license.terms" for information on usage and redistribution
 * of this file, and for a DISCLAIMER OF ALL WARRANTIES.
 *
 * 
 */

#include <MacWindows.h>
#include <Appearance.h>

/* Export these calls from the Tk library, since we may need to use
 * them in shell calls.
 */
  
pascal OSStatus
MoveWindowStructure(
    WindowPtr window, 
    short hGlobal, 
    short vGlobal)
{
    panic("Error: Running stub for PPC-Only routine");
    return noErr;

}

pascal OSStatus
CreateNewWindow(
    WindowClass windowClass, 
    WindowAttributes attributes, 
    const Rect *bounds, 
    WindowPtr *outWindow)
{
    panic("Error: Running stub for PPC-Only routine");
    return noErr;

}

pascal WindowPtr
FrontNonFloatingWindow()
{
    panic("Error: Running stub for PPC-Only routine");
    return NULL;
}

pascal OSStatus
GetWindowClass(
    WindowPtr window,
    WindowClass *outClass)
{
    panic("Error: Running stub for PPC-Only routine");
    return noErr;
}

pascal OSStatus
ApplyThemeBackground(
    ThemeBackgroundKind inKind,
    const Rect* bounds,
    ThemeDrawState inState,
    SInt16 inDepth,
    Boolean inColorDev)
{
    panic("Error: Running stub for PPC-Only routine");
    return noErr;
}

pascal OSStatus
InitFloatingWindows(void)
{
    panic("Error: Running stub for PPC-Only routine");
    return noErr;
}

pascal OSStatus
ShowFloatingWindows(void)
{
    panic("Error: Running stub for PPC-Only routine");
    return noErr;
}

pascal OSStatus
HideFloatingWindows(void)
{
    panic("Error: Running stub for PPC-Only routine");
    return noErr;
}

pascal Boolean
IsValidWindowPtr(GrafPtr grafPort)
{
    panic("Error: Running stub for PPC-Only routine");
    return true;
}

@


1.1
log
@*** empty log message ***
@
text
@@


1.1.10.1
log
@sync branch with HEAD
@
text
@@


1.1.8.1
log
@merge from HEAD
@
text
@@

