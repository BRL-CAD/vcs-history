head	14.19;
access;
symbols
	rel-7-10-4:14.19
	STABLE:14.19.0.2
	stable-branch:14.6
	rel-7-10-2:14.19
	rel-7-10-0:14.19
	rel-7-8-4:14.10
	rel-7-8-2:14.10
	rel-7-8-0:14.10
	trimnurbs-branch:14.10.0.2
	help:14.10
	temp_tag:14.9
	bobWinPort-20051223-freeze:14.7
	postmerge-20051223-bobWinPort:14.9
	premerge-20051223-bobWinPort:14.9
	rel-7-6-6:14.9
	rel-7-6-4:14.9
	rel-7-6-2:14.7
	rel-7-6-branch:14.7.0.6
	rel-7-6-0:14.7
	rel-7-4-2:14.7
	rel-7-4-branch:14.7.0.4
	bobWinPort:14.7.0.2
	rel-7-4-0:14.7
	rel-7-2-6:14.7
	rel-7-2-4:14.6
	rel-7-2-2:14.6
	rel-7-2-0:14.6
	rel-7-0-4:14.4
	rel-7-0-2:14.4
	rel-7-0-1:14.4
	opensource-post:14.4
	opensource-pre:1.6
	rel-7-0-branch:1.6.0.2
	rel-7-0:1.6
	ansi-20040405-merged:1.5.6.1
	postmerge-20040405-ansi:1.5
	premerge-20040404-ansi:1.5
	postmerge-autoconf:1.5
	autoconf-freeze:1.5.2.1
	premerge-autoconf:1.5
	postmerge-20040315-windows:1.5
	premerge-20040315-windows:1.5
	windows-20040315-freeze:1.5.4.1
	autoconf-branch:1.5.0.2
	windows-branch:1.5.0.4
	ansi-branch:1.5.0.6;
locks; strict;
comment	@# @;


14.19
date	2007.01.27.07.04.38;	author brlcad;	state Exp;
branches;
next	14.18;

14.18
date	2007.01.26.23.32.26;	author brlcad;	state Exp;
branches;
next	14.17;

14.17
date	2007.01.26.07.49.33;	author brlcad;	state Exp;
branches;
next	14.16;

14.16
date	2007.01.20.22.42.08;	author brlcad;	state Exp;
branches;
next	14.15;

14.15
date	2007.01.20.22.07.25;	author brlcad;	state Exp;
branches;
next	14.14;

14.14
date	2007.01.20.21.26.03;	author brlcad;	state Exp;
branches;
next	14.13;

14.13
date	2007.01.20.16.08.57;	author brlcad;	state Exp;
branches;
next	14.12;

14.12
date	2007.01.20.15.47.37;	author brlcad;	state Exp;
branches;
next	14.11;

14.11
date	2007.01.20.13.57.25;	author brlcad;	state Exp;
branches;
next	14.10;

14.10
date	2006.01.18.06.42.50;	author brlcad;	state Exp;
branches;
next	14.9;

14.9
date	2005.10.23.04.44.27;	author brlcad;	state Exp;
branches;
next	14.8;

14.8
date	2005.10.22.17.36.02;	author brlcad;	state Exp;
branches;
next	14.7;

14.7
date	2005.06.01.19.35.59;	author brlcad;	state Exp;
branches
	14.7.6.1;
next	14.6;

14.6
date	2005.02.21.18.02.46;	author brlcad;	state Exp;
branches;
next	14.5;

14.5
date	2005.01.30.16.44.36;	author brlcad;	state Exp;
branches;
next	14.4;

14.4
date	2004.12.21.06.58.41;	author morrison;	state Exp;
branches;
next	14.3;

14.3
date	2004.12.21.06.44.31;	author morrison;	state Exp;
branches;
next	14.2;

14.2
date	2004.12.17.21.01.05;	author morrison;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.12;	author morrison;	state Exp;
branches;
next	1.6;

1.6
date	2004.06.21.19.30.02;	author morrison;	state Exp;
branches;
next	1.5;

1.5
date	2004.02.02.17.11.01;	author morrison;	state Exp;
branches
	1.5.2.1
	1.5.4.1
	1.5.6.1;
next	1.4;

1.4
date	2004.02.02.16.16.26;	author morrison;	state Exp;
branches;
next	1.3;

1.3
date	2004.02.02.06.13.42;	author morrison;	state Exp;
branches;
next	1.2;

1.2
date	2004.01.30.15.50.18;	author morrison;	state Exp;
branches;
next	1.1;

1.1
date	2004.01.27.23.20.32;	author morrison;	state Exp;
branches;
next	;

1.5.2.1
date	2004.02.12.20.07.05;	author erikg;	state Exp;
branches;
next	;

1.5.4.1
date	2004.03.11.23.48.24;	author morrison;	state Exp;
branches;
next	;

1.5.6.1
date	2004.03.17.21.23.02;	author morrison;	state Exp;
branches;
next	;

14.7.6.1
date	2005.11.13.13.46.10;	author brlcad;	state Exp;
branches;
next	;


desc
@@


14.19
log
@no need to find configure.ac -- just let it use the current directory if no arguments are specified.
@
text
@#!/bin/sh
#                    C O P Y R I G H T . S H
# BRL-CAD
#
# Copyright (c) 2004-2007 United States Government as represented by
# the U.S. Army Research Laboratory.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
# 1. Redistributions of source code must retain the above copyright
# notice, this list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above
# copyright notice, this list of conditions and the following
# disclaimer in the documentation and/or other materials provided
# with the distribution.
#
# 3. The name of the author may not be used to endorse or promote
# products derived from this software without specific prior written
# permission.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS
# OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
# GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
# NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
###
#
# This script updates BRL-CAD Copyright notices to include the current
# year in the copyright lines.  If provided an argument, the script
# will process just a single file so that it may be used in
# conjunction with find or be used to update files manually.
#
# Author -
#   Christopher Sean Morrison
#
# Source -
#   The U.S. Army Research Laboratory
#   Aberdeen Proving Ground, Maryland 21005-5068  USA
#
###

files="$*"

# force locale setting to C so things like date output as expected
LC_ALL=C

# if we weren't already provided with a list of files, generate a list
# of files to check, excluding directories that are not BRL-CAD source
# files, CVS foo, or known binary files.
if [ "x$files" = "x" ] ; then
    files="`find . -type f | \
	    grep -v '/.#' | \
	    grep -v '.deps/' | \
	    grep -v '.libs/' | \
	    grep -v 'CVS' | \
	    grep -v 'Makefile$' |\
	    grep -v 'Makefile.in$' |\
	    grep -v 'autom4te.cache' | \
	    grep -v 'config.cache' | \
	    grep -v 'config.status' | \
	    grep -v 'misc/enigma/' | \
	    grep -v 'misc/vfont/' | \
	    grep -v 'other/' | \
	    grep -v '\.bak$' |\
	    grep -v '\.bmp$' |\
	    grep -v '\.dll$' |\
	    grep -v '\.g$' | \
	    grep -v '\.gif$' |\
	    grep -v '\.ico$' |\
	    grep -v '\.jpg$' |\
	    grep -v '\.lo$' |\
	    grep -v '\.log' |\
	    grep -v '\.mpg$' |\
	    grep -v '\.o$' |\
	    grep -v '\.old$' |\
	    grep -v '\.pdf$' |\
	    grep -v '\.pix' |\
	    grep -v '\.png$' |\
	    grep -v '#$' |\
	    grep -v '~$' \
	  `"
fi

# process the files
for file in $files ; do
    echo -n $file

  # sanity checks
    if [ -d "$file" ] ; then
	echo ""
	echo "WARNING: $file is a directory, skipping"
	continue
    elif [ ! -f "$file" ] ; then
	echo ""
	echo "WARNING: $file does not exist, skipping"
	continue
    elif [ ! -r "$file" ] ; then
	echo ""
	echo "WARNING: $file is not readable"
	continue
    elif [ ! -w "$file" ] ; then
	echo ""
	echo "WARNING: $file is not writeable"
	continue
    fi

    echo -n "."

    if [ -f "$file.copyright.new" ] ; then
	# echo ""
	# echo "WARNING: $file.copyright.new is in the way (moving it to .bak)"
	mv $file.copyright.new $file.copyright.new.bak
    elif [ -f "$file.copyright.old" ] ; then
	# echo ""
	# echo "WARNING: $file.copyright.old is in the way (moving it to .bak)"
	mv $file.copyright.old $file.copyright.old.bak
    fi
    echo -n "."

    year=`date +%Y`
    sed "s/[cC][oO][pP][yY][rR][iI][gG][hH][tT] \{0,1\}(\{0,1\}[cC]\{0,1\})\{0,1\}.\{0,1\} \{0,1\}\([0-9][0-9][0-9][0-9]\) \{0,1\}-\{0,1\} \{0,1\}[0-9]\{0,1\}[0-9]\{0,1\}[0-9]\{0,1\}[0-9]\{0,1\}\([ .;]\{1,\}\)\(.*United \{1,\}States\)/Copyright (c) \1-$year\2\3/" < $file > $file.copyright.new
    echo -n "."

    modified=no
    filediff="`diff $file $file.copyright.new`"
    if [ "x$filediff" = "x" ] ; then
	echo -n "."
	rm -f $file.copyright.new
    elif [ ! "x`echo $filediff | grep \"No newline at end of file\"`" = "x" ] ; then
	echo ". `basename $file` has no newline -- SKIPPING"
	rm -f $file.copyright.new
	continue
    elif [ ! "x`echo $filediff | grep \"Binary files\"`" = "x" ] ; then
	echo ". `basename $file` is binary -- SKIPPING"
	rm -f $file.copyright.new
	continue
    else
	echo -n "."
	modified=yes
	mv $file $file.copyright.old
	mv $file.copyright.new $file
    fi

    if [ "x$modified" = "xyes" ] ; then
	# make sure it's not a current year
	sed "s/Copyright ([cC]) $year-$year/Copyright (c) $year/" < $file > $file.copyright.new
	echo -n "."

	filediff="`diff $file $file.copyright.new`"
	if [ "x$filediff" = "x" ] ; then
	    echo -n "."
	    rm -f $file.copyright.new
	elif [ ! "x`echo $filediff | grep \"No newline at end of file\"`" = "x" ] ; then
	    echo -n "."
	    rm -f $file.copyright.new
	elif [ ! "x`echo $filediff | grep \"Binary files\"`" = "x" ] ; then
	    echo -n "."
	    rm -f $file.copyright.new
	else
	    echo -n "."
	    modified=no
	    mv $file $file.repeat.copyright.old
	    mv $file.copyright.new $file
	fi

	if [ "x$modified" = "xyes" ] ; then
	    echo -n ". `basename $file` is MODIFIED"
	fi
    fi

    echo ""

done  # iteration over files

echo ""
echo "Done."

# Local Variables:
# mode: sh
# tab-width: 8
# sh-indentation: 4
# sh-basic-offset: 4
# indent-tabs-mode: t
# End:
# ex: shiftwidth=4 tabstop=8
@


14.18
log
@ws
@
text
@a53 24
# if provided arguments, assume those will be the files we are to
# process.  otherwise, locate ourselves for generating a file list.
findgen="."
if [ "x$files" = "x" ] ; then

    if [ -f "`dirname $0`/../configure.ac" ] ; then
	findgen="`dirname $0`/.."
    else
	for dir in . .. brlcad ; do
	    if [ -f "$dir/configure.ac" ] ; then
		findgen="$dir"
		break
	    fi
	done
    fi

  # sanity check
    if [ ! -d "$findgen/sh" ] ; then
	echo "ERROR: Unable to find our path relative to configure.ac"
	exit 1
    fi

fi

d61 1
a61 1
    files="`find $findgen -type f | \
@


14.17
log
@sanity checking - don't care if configure.ac is readable, just see if it exists
@
text
@d89 1
a89 1
            grep -v 'CVS' | \
d92 24
a115 24
            grep -v 'autom4te.cache' | \
            grep -v 'config.cache' | \
            grep -v 'config.status' | \
            grep -v 'misc/enigma/' | \
            grep -v 'misc/vfont/' | \
            grep -v 'other/' | \
            grep -v '\.bak$' |\
            grep -v '\.bmp$' |\
            grep -v '\.dll$' |\
            grep -v '\.g$' | \
            grep -v '\.gif$' |\
            grep -v '\.ico$' |\
            grep -v '\.jpg$' |\
            grep -v '\.lo$' |\
            grep -v '\.log' |\
            grep -v '\.mpg$' |\
            grep -v '\.o$' |\
            grep -v '\.old$' |\
            grep -v '\.pdf$' |\
            grep -v '\.pix' |\
            grep -v '\.png$' |\
            grep -v '#$' |\
            grep -v '~$' \
          `"
d182 1
a182 1
	
@


14.16
log
@rm -f
@
text
@d59 1
a59 1
    if [ -r "`dirname $0`/../configure.ac" ] ; then
d63 1
a63 1
	    if [ -r "$dir/configure.ac" ] ; then
@


14.15
log
@init var safety
@
text
@d162 1
a162 1
	rm $file.copyright.new
d165 1
a165 1
	rm $file.copyright.new
d169 1
a169 1
	rm $file.copyright.new
d186 1
a186 1
	    rm $file.copyright.new
d189 1
a189 1
	    rm $file.copyright.new
d192 1
a192 1
	    rm $file.copyright.new
@


14.14
log
@clean up the progress printing a little bit, remove the sed duplication and false modification report on current-year copyrighted files. ws too.
@
text
@d56 1
@


14.13
log
@oop, the dotfiles thing caused automatic to go all empty list crazy.  remove that contraint, but add a slew of other exemptions of stuff it should be able to safely ignore
@
text
@d58 10
a67 10
  if [ -r "`dirname $0`/../configure.ac" ] ; then
    findgen="`dirname $0`/.."
  else
    for dir in . .. brlcad ; do
      if [ -r "$dir/configure.ac" ] ; then
	findgen="$dir"
	break
      fi
    done
  fi
d70 4
a73 4
  if [ ! -d "$findgen/sh" ] ; then
    echo "ERROR: Unable to find our path relative to configure.ac"
    exit 1
  fi
d119 1
a119 1
  echo -n $file
d122 81
a202 61
  if [ -d "$file" ] ; then
    echo "."
    echo "WARNING: $file is a directory, skipping"
    continue
  elif [ ! -f "$file" ] ; then
    echo "."
    echo "WARNING: $file does not exist, skipping"
    continue
  elif [ ! -r "$file" ] ; then
    echo "."
    echo "WARNING: $file is not readable"
    continue
  elif [ ! -w "$file" ] ; then
    echo "."
    echo "WARNING: $file is not writeable"
    continue
  fi
  echo -n "."
  if [ -f "$file.copyright.new" ] ; then
    echo "."
    echo "WARNING: $file.copyright.new is in the way (moving it to .bak)"
    mv $file.copyright.new $file.copyright.new.bak
  elif [ -f "$file.copyright.old" ] ; then
    echo "."
    echo "WARNING: $file.copyright.old is in the way (moving it to .bak)"
    mv $file.copyright.old $file.copyright.old.bak
  fi
  echo -n "."

  year=`date +%Y`
  sed "s/[cC][oO][pP][yY][rR][iI][gG][hH][tT] \{0,1\}(\{0,1\}[cC]\{0,1\})\{0,1\}.\{0,1\} \{0,1\}\([0-9][0-9][0-9][0-9]\) \{0,1\}-\{0,1\} \{0,1\}[0-9]\{0,1\}[0-9]\{0,1\}[0-9]\{0,1\}[0-9]\{0,1\}\([ .;]\{1,\}\)\(.*United \{1,\}States\)/Copyright (c) \1-$year\2\3/" < $file > $file.copyright.new

  filediff="`diff $file $file.copyright.new`"
  if [ "x$filediff" = "x" ] ; then
    echo "."
    rm $file.copyright.new
  elif [ ! "x`echo $filediff | grep \"No newline at end of file\"`" = "x" ] ; then
    echo ". `basename $file` has no newline -- SKIPPING"
    rm $file.copyright.new
  elif [ ! "x`echo $filediff | grep \"Binary files\"`" = "x" ] ; then
    echo ". `basename $file` is binary -- SKIPPING"
    rm $file.copyright.new
  else
    echo ". `basename $file` modified"
    mv $file $file.copyright.old
    mv $file.copyright.new $file
  fi

  sed "s/Copyright ([cC]) $year-$year/Copyright (c) $year/" < $file > $file.copyright.new

  filediff="`diff $file $file.copyright.new`"
  if [ "x$filediff" = "x" ] ; then
    rm $file.copyright.new
  elif [ ! "x`echo $filediff | grep \"No newline at end of file\"`" = "x" ] ; then
    rm $file.copyright.new
  elif [ ! "x`echo $filediff | grep \"Binary files\"`" = "x" ] ; then
    rm $file.copyright.new
  else
    mv $file $file.repeat.copyright.old
    mv $file.copyright.new $file
  fi
d204 6
a209 2
  # done iteration over files
done
@


14.12
log
@add support to detect/convert \a9 copyright symbols, convert them to (c) for consistency just like everything else. also, more importantly, add the ability to use this script to process individual files (e.g. in conjunction with find).  if there's an argument list, that is what will be processed.  otherwise, it will do the usual task of processing everything under the src root that it recognizes (and that isn't exempted).
@
text
@d82 1
a82 1
# files, CVS foo, known binary files, or stuff that starts with a dot.
d85 3
a87 1
            grep -v 'other/' | \
d89 5
d96 4
a99 2
            grep -v '/\.' | \
            grep -v 'autom4te.cache' | \
d101 2
a102 1
            grep -v '\.pix$' |\
d104 5
d110 1
a110 2
            grep -v '\.dll$' |\
            grep -v '\.gif$' |\
d112 2
a113 2
            grep -v '\.bak$' |\
            grep -v '\.old$' \
@


14.11
log
@update copyright to 2007
@
text
@d39 3
a41 1
# year in the copyright lines.
d52 1
a52 2
# locate ourselves for generating a file list
findgen="$1"
d54 3
a56 1
if [ ! -d "$findgen" ] ; then
d69 1
a69 1
# sanity check
d80 22
a101 18
# generate a list of files to check, excluding directories that are
# not BRL-CAD sources, CVS, or start with a dot.
files="`find $findgen -type f | \
        grep -v 'other/' | \
        grep -v 'CVS' | \
        grep -v 'misc/' | \
        grep -v \"$findgen/\.\" | \
        grep -v 'autom4te.cache' | \
        grep -v '\.g$' | \
        grep -v '\.pix$' |\
        grep -v '\.jpg$' |\
        grep -v '\.pdf$' |\
        grep -v '\.dll$' |\
        grep -v '\.gif$' |\
        grep -v '\.png$' |\
        grep -v '\.bak$' |\
        grep -v '\.old$' \
      `"
d103 1
d108 5
a112 1
  if [ ! -f "$file" ] ; then
d114 1
a114 1
    echo "WARNING: $file was lost, skipping"
d138 1
a138 1
  sed "s/[cC]opyright \{0,1\}([cC]) \{0,1\}\([0-9][0-9][0-9][0-9]\) \{0,1\}-\{0,1\} \{0,1\}[0-9]\{0,1\}[0-9]\{0,1\}[0-9]\{0,1\}[0-9]\{0,1\}\([ .;]\{1,\}\)\(.*United \{1,\}States\)/Copyright (c) \1-$year\2\3/" < $file > $file.copyright.new
d166 1
a166 2
    echo "WARNING: $file had Copyright span for the same year"
    mv $file $file.copyright.2.old
@


14.10
log
@convert/update the copyright script from a BSD sed using the -E option for extended regular expressions (an option which the GNU sed doesn't recognize).  convert the sed expressions to basic regular expressions instead so it works with either without needing to test sed for option support or limiting to one versus the other.
@
text
@d5 1
a5 1
# Copyright (c) 2004-2006 United States Government as represented by
@


14.9
log
@trailing ws
@
text
@d5 1
a5 1
# Copyright (C) 2004-2005 United States Government as represented by
d126 1
a126 1
  sed -E "s/[cC]opyright ?\([cC]\) ?([0-9][0-9][0-9][0-9]) ?-? ?[0-9]?[0-9]?[0-9]?[0-9]?([ .;]+)(.*United +States)/Copyright (C) \1-$year\2\3/" < $file > $file.copyright.new
d144 1
a144 1
  sed -E "s/Copyright \(c\) $year-$year/Copyright (c) $year/" < $file > $file.copyright.new
@


14.8
log
@ws
@
text
@d41 2
a42 2
# Author - 
#   Christopher Sean Morrison 
d53 1
a53 1
if [ ! -d "$findgen" ] ; then 
d65 1
a65 1
  
d72 1
a72 1
fi  
d98 1
a98 1
  
@


14.7
log
@remove empty lines
@
text
@d15 1
a15 1
# 2. Redistributions in binary form must reproduce the above 
@


14.7.6.1
log
@merge changes from HEAD aka rel-7-6-4 to the rel-7-6-branch just in case someone peeks a gander or tries to continue/build the branch
@
text
@d15 1
a15 1
# 2. Redistributions in binary form must reproduce the above
d41 2
a42 2
# Author -
#   Christopher Sean Morrison
d53 1
a53 1
if [ ! -d "$findgen" ] ; then
d65 1
a65 1

d72 1
a72 1
fi
d98 1
a98 1

@


14.6
log
@force locale setting to C so things like date output as expected
@
text
@a47 2
#
#
@


14.5
log
@headers use a different copyright line now, so just look for United States.  ignore all of other/ now too.
@
text
@d76 3
@


14.4
log
@remove the old copyright notice section as it's been supplanted (and copyright is now claimable in the us via assignmgent)
@
text
@d5 2
a6 2
# Copyright (c) 2004 United States Government as represented by the
# U.S. Army Research Laboratory.
d60 2
a61 2
    for dir in . .. ; do
      if [ -r "$findgen/configure.ac" ] ; then
d79 1
a79 8
        grep -v 'libtcl' | \
        grep -v 'libtk' | \
        grep -v 'incrTcl' | \
        grep -v 'iwidgets' | \
        grep -v 'jove' | \
        grep -v 'libutahrle' | \
        grep -v 'libz' | \
        grep -v 'libpng' | \
d83 1
d125 1
a125 1
  sed -E "s/Copyright ?\([cC]\) ?([0-9][0-9][0-9][0-9]) ?-? ?[0-9]?[0-9]?[0-9]?[0-9]?([ .;]+)(by +the +United +States +Army)/Copyright (C) \1-$year\2\3/" < $file > $file.copyright.new
d143 1
a143 1
  sed -E "s/Copyright \(C\) $year-$year/Copyright (C) $year/" < $file > $file.copyright.new
@


14.3
log
@remove the old distribution notice section
@
text
@a48 3
# Copyright Notice -
#   This software is Copyright (C) 2004 by the United States Army
#   in all countries except the USA.  All rights reserved.
@


14.2
log
@assignment of copyright and BSD license
@
text
@a47 4
# Distribution Notice -
#   Re-distribution of this software is restricted, as described in
#   your "Statement of Terms and Conditions for the Release of The
#   BRL-CAD Package" agreement.
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d2 35
@


1.6
log
@gen.sh is no more, libitcl is renamed
@
text
@d139 8
a146 8
# Local Variables: ***
# mode:sh ***
# tab-width: 8 ***
# sh-indentation: 2 ***
# sh-basic-offset: 2 ***
# indent-tabs-mode: t ***
# End: ***
# ex: shiftwidth=2 tabstop=8
@


1.5
log
@allow user to specify a directory and protect against same-year spans
@
text
@d29 1
a29 1
  if [ -r "`dirname $0`/../gen.sh" ] ; then
d33 1
a33 1
      if [ -r "$findgen/gen.sh" ] ; then
d42 1
a42 1
    echo "ERROR: Unable to find our path relative to gen.sh"
d53 1
a53 1
        grep -v 'libitcl' | \
@


1.5.6.1
log
@sync branch with HEAD
@
text
@@


1.5.4.1
log
@sync to HEAD...
@
text
@@


1.5.2.1
log
@generated now...
@
text
@@


1.4
log
@added checks for jpg images, binary files in general and files that don't have a terminating newline
@
text
@d19 1
a19 1
#   This software is Copyright (C) 2004-2004 by the United States Army
d25 1
a25 10
findgen=""
if [ -r "`dirname $0`/../gen.sh" ] ; then
  findgen="`dirname $0`/.."
else
  for findgen in . .. ; do
    if [ -r "$findgen/gen.sh" ] ; then
      break;
    fi
  done
fi
d27 13
d41 6
a46 4
if [ ! -d "$findgen/sh" ] ; then
  echo "ERROR: Unable to find our path relative to gen.sh"
  exit 1
fi
d68 3
a70 1
        grep -v '\.png$' \
d118 15
@


1.3
log
@only match US Army copyright lines
@
text
@d19 1
a19 1
#   This software is Copyright (c) 2004 by the United States Army
d58 1
d70 1
d74 1
d78 1
d84 1
d88 1
d97 2
a98 1
  if [ "x`diff $file $file.copyright.new`" = "x" ] ; then
d101 6
d108 1
a108 1
    echo ". $file modified"
@


1.2
log
@ignore more binary files.  don't die if we find intermediate files from previous run.  make expression output latest year correctly.
@
text
@d89 2
a90 1
  sed -E "s/Copyright ?\([cC]\) ?([0-9][0-9][0-9][0-9]) ?-? ?[0-9]?[0-9]?[0-9]?[0-9]?([ .;])/Copyright (C) \1-$year\2/" < $file > $file.copyright.new
@


1.1
log
@initial script to update the copyright year to include the current year
@
text
@d57 5
a61 1
        grep -v '\.pix$' \
d80 2
a81 2
    echo "ERROR: $file.copyright.new is in the way (delete or move it)"
    exit 2
d83 2
a84 2
    echo "ERROR: $file.copyright.old is in the way (delete or move it)"
    exit 3
d88 2
a89 1
  sed -E 's/Copyright \([cC]\) ([0-9][0-9][0-9][0-9]) ?-? ?[0-9]?[0-9]?[0-9]?[0-9]?([ .;])/Copyright (C) \1-`date +%Y`\2/' < $file > $file.copyright.new
@

