head	14.4;
access;
symbols
	stable-branch:14.3
	rel-7-4-2:14.3
	rel-7-4-branch:14.3.0.2
	rel-7-4-0:14.3
	rel-7-2-6:14.3
	rel-7-2-4:14.3
	rel-7-2-2:14.3
	rel-7-2-0:14.3
	rel-7-0-4:14.2
	rel-7-0-2:14.2
	rel-7-0-1:14.2
	opensource-post:14.2
	opensource-pre:11.19
	rel-7-0-branch:11.19.0.2
	rel-7-0:11.19
	ansi-20040405-merged:11.15.4.1
	postmerge-20040405-ansi:11.17
	premerge-20040404-ansi:11.17
	postmerge-autoconf:11.17
	autoconf-freeze:11.17
	premerge-autoconf:11.17
	postmerge-20040315-windows:11.17
	premerge-20040315-windows:11.17
	windows-20040315-freeze:11.15.6.1
	autoconf-20031203:11.17
	autoconf-20031202:11.17
	autoconf-branch:11.17.0.6
	phong-branch:11.17.0.4
	photonmap-branch:11.17.0.2
	rel-6-1-DP:11.17
	windows-branch:11.15.0.6
	rel-6-0-2:11.15
	ansi-branch:11.15.0.4
	rel-6-0-1-branch:11.15.0.2
	hartley-6-0-post:11.15
	hartley-6-0-pre:11.15
	rel-6-0-1:11.15
	rel-6-0:11.15
	rel-5-4:11.14
	offsite-5-3-pre:11.14
	rel-5-3:11.14
	rel-5-2:11.14
	rel-5-1-branch:11.14.0.2
	rel-5-1:11.14
	rel-5-0:11.14
	rel-5-0-beta:11.14
	rel-4-5:11.8
	ctj-4-5-post:11.8
	ctj-4-5-pre:11.8
	rel-4-4:11.1
	rel-4-0:10.1
	rel-3-5:9.1
	rel-3-0:8.1;
locks; strict;
comment	@# @;


14.4
date	2005.07.17.01.04.19;	author brlcad;	state dead;
branches;
next	14.3;

14.3
date	2005.01.30.20.30.12;	author brlcad;	state Exp;
branches;
next	14.2;

14.2
date	2004.12.17.21.01.05;	author morrison;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.12;	author morrison;	state Exp;
branches;
next	11.19;

11.19
date	2004.09.15.13.50.02;	author kermit;	state Exp;
branches;
next	11.18;

11.18
date	2004.09.02.13.01.35;	author morrison;	state Exp;
branches;
next	11.17;

11.17
date	2002.10.21.22.55.36;	author morrison;	state Exp;
branches;
next	11.16;

11.16
date	2002.10.11.08.30.57;	author kermit;	state Exp;
branches;
next	11.15;

11.15
date	2001.10.15.19.58.04;	author morrison;	state Exp;
branches
	11.15.4.1
	11.15.6.1;
next	11.14;

11.14
date	98.08.22.23.25.29;	author mike;	state Exp;
branches;
next	11.13;

11.13
date	98.08.22.22.27.25;	author mike;	state Exp;
branches;
next	11.12;

11.12
date	98.08.21.21.21.20;	author mike;	state Exp;
branches;
next	11.11;

11.11
date	98.08.21.21.16.00;	author mike;	state Exp;
branches;
next	11.10;

11.10
date	98.07.07.14.33.23;	author bparker;	state Exp;
branches;
next	11.9;

11.9
date	98.07.06.19.05.39;	author bparker;	state Exp;
branches;
next	11.8;

11.8
date	97.11.19.09.56.59;	author butler;	state Exp;
branches;
next	11.7;

11.7
date	97.11.19.09.52.52;	author butler;	state Exp;
branches;
next	11.6;

11.6
date	97.11.19.07.02.00;	author butler;	state Exp;
branches;
next	11.5;

11.5
date	97.10.23.19.11.29;	author cjohnson;	state Exp;
branches;
next	11.4;

11.4
date	97.05.20.17.18.27;	author mike;	state Exp;
branches;
next	11.3;

11.3
date	96.11.12.15.57.32;	author jra;	state Exp;
branches;
next	11.2;

11.2
date	95.01.09.16.47.33;	author mike;	state Exp;
branches;
next	11.1;

11.1
date	95.01.04.09.43.42;	author mike;	state Rel4_4;
branches;
next	10.28;

10.28
date	95.01.04.08.18.25;	author mike;	state Exp;
branches;
next	10.27;

10.27
date	95.01.03.23.00.49;	author mike;	state Exp;
branches;
next	10.26;

10.26
date	95.01.03.22.52.57;	author mike;	state Exp;
branches;
next	10.25;

10.25
date	94.12.27.23.46.22;	author mike;	state Exp;
branches;
next	10.24;

10.24
date	94.12.27.23.24.13;	author mike;	state Exp;
branches;
next	10.23;

10.23
date	94.12.23.16.32.01;	author mike;	state Exp;
branches;
next	10.22;

10.22
date	94.12.21.23.45.59;	author mike;	state Exp;
branches;
next	10.21;

10.21
date	94.12.19.18.38.16;	author mike;	state Exp;
branches;
next	10.20;

10.20
date	94.12.07.16.43.34;	author mike;	state Exp;
branches;
next	10.19;

10.19
date	94.10.31.16.42.11;	author mike;	state Exp;
branches;
next	10.18;

10.18
date	94.10.19.15.01.21;	author mike;	state Exp;
branches;
next	10.17;

10.17
date	94.10.17.23.36.24;	author mike;	state Exp;
branches;
next	10.16;

10.16
date	94.10.17.23.30.41;	author mike;	state Exp;
branches;
next	10.15;

10.15
date	94.09.30.05.50.52;	author phil;	state Exp;
branches;
next	10.14;

10.14
date	94.09.29.23.19.46;	author mike;	state Exp;
branches;
next	10.13;

10.13
date	94.09.28.21.40.30;	author mike;	state Exp;
branches;
next	10.12;

10.12
date	94.09.28.21.36.41;	author mike;	state Exp;
branches;
next	10.11;

10.11
date	94.09.01.06.01.23;	author gdurf;	state Exp;
branches;
next	10.10;

10.10
date	94.07.21.22.20.52;	author gdurf;	state Exp;
branches;
next	10.9;

10.9
date	94.07.21.18.11.00;	author mike;	state Exp;
branches;
next	10.8;

10.8
date	93.11.04.17.51.39;	author mike;	state Exp;
branches;
next	10.7;

10.7
date	93.08.25.17.06.26;	author mike;	state Exp;
branches;
next	10.6;

10.6
date	93.05.20.20.23.16;	author mike;	state Exp;
branches;
next	10.5;

10.5
date	93.04.01.00.32.03;	author mike;	state Exp;
branches;
next	10.4;

10.4
date	93.02.22.21.18.01;	author mike;	state Exp;
branches;
next	10.3;

10.3
date	92.07.17.11.56.27;	author butler;	state Exp;
branches;
next	10.2;

10.2
date	92.02.01.04.06.11;	author butler;	state Exp;
branches;
next	10.1;

10.1
date	91.10.12.06.35.02;	author mike;	state Rel4_0;
branches;
next	9.16;

9.16
date	91.09.27.22.05.35;	author phil;	state Exp;
branches;
next	9.15;

9.15
date	91.08.31.03.05.21;	author mike;	state Exp;
branches;
next	9.14;

9.14
date	91.08.28.04.30.36;	author mike;	state Exp;
branches;
next	9.13;

9.13
date	91.07.23.02.25.56;	author mike;	state Exp;
branches;
next	9.12;

9.12
date	91.07.10.00.49.20;	author mike;	state Exp;
branches;
next	9.11;

9.11
date	91.07.04.01.41.29;	author mike;	state Exp;
branches;
next	9.10;

9.10
date	91.07.03.21.20.49;	author mike;	state Exp;
branches;
next	9.9;

9.9
date	91.07.03.21.09.06;	author mike;	state Exp;
branches;
next	9.8;

9.8
date	90.11.29.22.38.12;	author phil;	state Exp;
branches;
next	9.7;

9.7
date	90.11.27.13.28.46;	author mike;	state Exp;
branches;
next	9.6;

9.6
date	90.11.26.22.59.03;	author mike;	state Exp;
branches;
next	9.5;

9.5
date	90.11.22.04.39.18;	author mike;	state Exp;
branches;
next	9.4;

9.4
date	90.09.27.21.50.12;	author mike;	state Exp;
branches;
next	9.3;

9.3
date	90.07.20.09.15.49;	author cjohnson;	state Exp;
branches;
next	9.2;

9.2
date	89.07.28.04.58.51;	author mike;	state Exp;
branches;
next	9.1;

9.1
date	89.05.19.05.43.32;	author mike;	state Rel3_5;
branches;
next	8.5;

8.5
date	89.03.01.03.46.00;	author mike;	state Exp;
branches;
next	8.4;

8.4
date	89.02.27.02.10.32;	author phil;	state Exp;
branches;
next	8.3;

8.3
date	89.02.13.08.34.18;	author mike;	state Exp;
branches;
next	8.2;

8.2
date	88.12.30.01.50.05;	author mike;	state Exp;
branches;
next	8.1;

8.1
date	88.10.05.00.23.18;	author mike;	state Rel3_0;
branches;
next	1.7;

1.7
date	88.10.03.23.02.26;	author mike;	state Exp;
branches;
next	1.6;

1.6
date	88.10.01.09.15.17;	author mike;	state Exp;
branches;
next	1.5;

1.5
date	88.10.01.06.48.24;	author mike;	state Exp;
branches;
next	1.4;

1.4
date	88.09.21.01.19.44;	author mike;	state Exp;
branches;
next	1.3;

1.3
date	88.09.21.01.02.47;	author mike;	state Exp;
branches;
next	1.2;

1.2
date	88.09.17.02.30.14;	author mike;	state Exp;
branches;
next	1.1;

1.1
date	88.05.10.07.26.50;	author mike;	state Exp;
branches;
next	;

11.15.4.1
date	2004.03.17.21.23.03;	author morrison;	state Exp;
branches;
next	;

11.15.6.1
date	2004.03.11.23.48.24;	author morrison;	state Exp;
branches;
next	;


desc
@Shell script to determine machine type, using CPP like Cake would.
@


14.4
log
@retire the venerable machinetype.sh script from the former build system after a good 20 years of service.  it's no longer required and should there arise a need, config.guess should be incorporated
@
text
@#!/bin/sh
#                  M A C H I N E T Y P E . S H
# BRL-CAD
#
# Copyright (C) 2004-2005 United States Government as represented by
# the U.S. Army Research Laboratory.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
# 1. Redistributions of source code must retain the above copyright
# notice, this list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above 
# copyright notice, this list of conditions and the following
# disclaimer in the documentation and/or other materials provided
# with the distribution.
#
# 3. The name of the author may not be used to endorse or promote
# products derived from this software without specific prior written
# permission.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS
# OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
# GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
# NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
###
#
# A Shell script to determine the machine architecture type, operating
# system variant (Berkeley or SysV), and the presence of
# Berkeley-style TCP networking capability.  The machine type must be
# FOUR characters or less.
# 
# This is useful to permit the separation of incompatible binary
# program files, and to drive proper tailoring of some of the
# Makefiles.
#
# The old way of operating is described here:
# Note that this Shell script uses the same mechanism (ie, CPP) to
# determine the system type as the main Cakefile (Cakefile.defs) uses.
# To support a new type of machine, the same #ifdef construction will
# be required both here and in Cakefile.defs
#
# The new way of operating is this:
# If /bin/uname exists, run it, and base all decisions on it's output.
# In either case, when CAKE is built it's Makefile includes
# `machinetype.sh -d` to define __MACHINETYPE__foo,
# and cake/conf.h makes all it's decisions based upon that string now.
#
# Command args:
#	[none]	Print only machine type
#	-d	Print C compiler -D type defines.
#	-m	Print only machine type
#	-s	Print only system type, BRL style: (BSD, SYSV)
#	-a	Print only system type, ATT style: (BSD, ATT)
#	-n	Print only HAS_TCP variable
#	-b | -v	Print all, in Bourne-Shell legible form
#
# Info note: On a VAX-11/780, this script takes about 1.3 CPU seconds
# to run.
#
# Mike Muuss, BRL, 10-May-1988
# With thanks to Terry Slattery and Bob Reschly for assistance.
# With thanks to Timothy G. Smith for the /bin/uname idea.
#
#  $Header: /cvsroot/brlcad/brlcad/sh/machinetype.sh,v 14.3 2005/01/30 20:30:12 brlcad Exp $

# Ensure /bin/sh.  Make no remarks here, just do it.
export PATH || (sh $0 $*; kill $$)

# A major efficiency for machines running Doug Gwyn's SysV-under-BSD software.
PATH=/bin:/usr/bin:/usr/5bin:$PATH

ARG="$1"

#  Base directory for the entire package.
if test "$BRLCAD_ROOT" != ""
then
	BASEDIR=$BRLCAD_ROOT
else
	#  This next line may be / may have been modified by
	#  newbindir.sh or setup.sh as part of the installation process.
	BASEDIR=/usr/brlcad
fi

if test -x /bin/uname -o -x /usr/bin/uname -o -x /usr/5bin/uname
then
	OS_TYPE=`uname -s`
	HARDWARE_TYPE=`uname -m`
	SAVE_IFS="$IFS"
	IFS=".$IFS"		# Add dot (.) as a separator
	set -- `uname -r`
	IFS="$SAVE_IFS"		# Restore normal field separators.
	# Now $1, $2, and $3 have OS revision levels.
	OS_REVISION="$1"
	OS_MINOR="$2"

	case "$HARDWARE_TYPE" in
        "Power Macintosh")
                case "$OS_TYPE" in
                Darwin) MACHINE=pmac; UNIXTYPE=BSD; HAS_TCP=1; HAS_SYMLINKS=1;
                esac ;;
	"CRAY C90") MACHINE=xmp; UNIXTYPE=SYSV; HAS_TCP=1; HAS_SYMLINKS=1;;
	vax)	MACHINE=vax; UNIXTYPE=BSD; HAS_TCP=1; HAS_SYMLINKS=1;;
	sun3*)  MACHINE=sun3; UNIXTYPE=BSD; HAS_TCP=1; HAS_SYMLINKS=1;;
	sun4*)  HAS_TCP=1; HAS_SYMLINKS=1;
		case "$OS_REVISION" in
		4)  UNIXTYPE=BSD; MACHINE=sun4;;
		5)  UNIXTYPE=SYSV; MACHINE=sun5;;
		esac;;
	alpha)  
		case "$OS_TYPE" in
		Linux) ;;
		Ultrix)
			MACHINE=alpha
			UNIXTYPE=BSD
			HAS_TCP=1
			HAS_SYMLINKS=1 ;;
		esac ;;
	ia64)
		case "$OS_TYPE" in
		Linux)
			MACHINE=altix
			UNIXTYPE=BSD
			HAS_TCP=1
			HAS_SYMLINKS=1 ;;
		esac ;;
	i[3456]86 | ppc)
		UNIXTYPE=BSD; HAS_TCP=1; HAS_SYMLINKS=1
		case "$OS_TYPE" in
		Linux)	MACHINE=li ;;
		FreeBSD) MACHINE=fbsd ;;
		BSD/OS)	MACHINE=bsdi ;;
		esac ;;
	# SGI is ugly, returning IP## here.
	IP?*) 
		case "$OS_TYPE" in
		IRIX)  	UNIXTYPE=SYSV; HAS_TCP=1; HAS_SYMLINKS=1;
			case "$OS_REVISION" in
			4)	MACHINE=5d;;
			5)	MACHINE=6d;;
			6)	MACHINE=7d;;
			*)	echo Warning unknown SGI OS version `uname -a` 1>&2;;
			esac ;;
		IRIX64) UNIXTYPE=SYSV; HAS_TCP=1; HAS_SYMLINKS=1;
			PROCESSOR=` hinv | sed -n -e 's/^CPU: MIPS \(.*\) Proc.*$/\1/p' `
			case "$PROCESSOR" in
			R4*)	MACHINE=m3i$OS_REVISION$OS_MINOR ;;
			*)	MACHINE=m4i$OS_REVISION$OS_MINOR ;;
			esac ;;
		esac ;;
	# IBM is ugly, returns number code here.  From IBM's man page on uname:
	# The machine ID number contains 12 characters in the following digit
	# format: xxyyyyyymmss. The xx positions indicate the system and is
	# always 00. The yyyyyy positions contain the unique ID number for
	# the entire system. The mm position represents the model ID. The
	# ss position is the submodel number and is always 00. The model ID
	# describes the ID of the CPU Planar, not the model of the System
	# as a whole. Many new machines share a common machine ID of 4C.
	# xxyyyyyymmss	xx=00, mm=4C, ss=00
	# 00******4C00
	#
	# 006020514C00	-brainerd1	IBM,9076-N80
	# 006004604C00	-brainerd2	IBM,9076-N80
	#
	# 00212ACA4C00	-shelton	IBM,7040-681
	#
	00??????4C00)
		HARDWARE_TYPE=`uname -M`
		case "$HARDWARE_TYPE" in
		"IBM,9076-N80")
			case "$OS_TYPE" in
			"AIX")
				MACHINE=sp3; UNIXTYPE=BSD;
				HAS_TCP=1; HAS_SYMLINKS=1 ;;
			esac;;
		"IBM,7040-681")
			case "$OS_TYPE" in
			"AIX")
				MACHINE=sp4; UNIXTYPE=BSD;
				HAS_TCP=1; HAS_SYMLINKS=1 ;;
			esac;;
		esac ;;
	esac
fi

if test "$MACHINE" = ""
then
#	If we didn't learn anything, fall back to old way.

IN_FILE=/tmp/machty$$.c
OUT_FILE=/tmp/machty$$
trap '/bin/rm -f ${IN_FILE} ${OUT_FILE}; exit 1' 1 2 3 15	# Clean up temp file

cat << EOF > ${IN_FILE}
#line 1 "$0"

#if defined(unix) && defined(m68k)
#	undef	aux
	MACHINE=aux;
	UNIXTYPE=SYSV;
	HAS_TCP=1;
	HAS_SYMLINKS=1;
#endif

#ifdef vax
#	undef	vax
	MACHINE=vax;
	UNIXTYPE=BSD;
	HAS_TCP=1;
	HAS_SYMLINKS=1;
#endif

#if defined(mips) && defined (ultrix)
/*	DECStation-5200, ULTRIX v4.2a, MIPS chip */
#	undef mips
	MACHINE=mips;
	UNIXTYPE=BSD;
	HAS_TCP=1;
	HAS_SYMLINKS=1;
#endif

#ifdef ipsc860
/*	iPSC/860 Hypercube */
#	undef	i386
#	undef	i860
	MACHINE=ipsc;
	UNIXTYPE=SYSV;
	HAS_TCP=0;
	HAS_SYMLINKS=0;
#endif

#if defined(unix) && defined(i386) && !defined(__bsdi__) && \
	!defined(__386BSD__) && !defined(__NetBSD__) && !defined(linux)
/* PC/AT with Interactive Systems Unix V/386 3.2 */
#	undef	at
	MACHINE=at;
	UNIXTYPE=SYSV;
	HAS_TCP=1;
	HAS_SYMLINKS=0;
#endif


#if defined(__unix__) && defined(__i386__) && defined(__386BSD__)
/* IBM PC with 386BSD from William Jolitz */
	MACHINE=386
	UNIXTYPE=BSD
	HAS_TCP=1
	HAS_SYMLINKS=1
#endif

#if defined(__NetBSD__)
/* NetBSD 1.0 from Chris Demetriou and friends */
#	if defined(i386)
		MACHINE=nb86
#	else
		MACHINE=nb
#	endif
	UNIXTYPE=BSD
	HAS_TCP=1
	HAS_SYMLINKS=1
#endif


#if !defined(alliant) && defined(i860) && defined(unix) && __STDC__ == 0
/*	Stardent VISTRA i860 machine.  No vendor symbols found in cpp */
/*	The network code is not tested yet */
	MACHINE=stad;
	UNIXTYPE=SYSV;
	HAS_TCP=1;
	HAS_SYMLINKS=1;
#endif

#ifdef gould
#	undef	sel
	MACHINE=sel;
	UNIXTYPE=BSD;
	HAS_TCP=1;
	HAS_SYMLINKS=1;
#endif

#if defined(sgi) && !defined(mips)
/*	Silicon Graphics 3D */
#	undef	sgi
	MACHINE=3d;
	UNIXTYPE=SYSV;
	HAS_TCP=1;
	HAS_SYMLINKS=1;
#endif

#if defined(NeXT)
#	undef	next
	MACHINE=next
	UNIXTYPE=BSD;
	HAS_TCP=1;
	HAS_SYMLINKS=1;
#endif

#if defined(apollo)
#	undef	apollo
	MACHINE=apollo;
	UNIXTYPE=BSD;
	HAS_TCP=1;
	HAS_SYMLINKS=1;
#endif

#if defined(CRAY1)
/*	Cray X-MP or Y-MP running UNICOS. */
#	undef	xmp
	MACHINE=xmp;
	UNIXTYPE=SYSV;
	HAS_TCP=1;
	HAS_SYMLINKS=1;
#endif

#if defined(CRAY2)
#	undef	cr2
	MACHINE=cr2;
	UNIXTYPE=SYSV;
	HAS_TCP=1;
	HAS_SYMLINKS=0;
#endif

#if defined(convex) || defined(__convex__)
#	undef	c1
	MACHINE=c1;
	UNIXTYPE=BSD;
	HAS_TCP=1;
	HAS_SYMLINKS=1;
#endif

#ifdef ardent
#	undef	ard
/*	The network code is not tested yet */
	MACHINE=ard;
	UNIXTYPE=SYSV;
	HAS_TCP=0;
	HAS_SYMLINKS=1;
#endif

#ifdef stellar
#	undef	stl
/*	The network code is not tested yet */
	MACHINE=stl;
	UNIXTYPE=SYSV;
	HAS_TCP=0;
	HAS_SYMLINKS=0;
#endif

#ifdef pyr
#	undef	pyr
	MACHINE=pyr;
	UNIXTYPE=BSD;	# Pyramid can be dual-environment, assume BSD
	HAS_TCP=1;
	HAS_SYMLINKS=1;
#endif

#ifdef n16
#	undef	mmax
	MACHINE=mmax;
	UNIXTYPE=SYSV;
	HAS_TCP=1;
	HAS_SYMLINKS=1;
#endif

#ifdef _AIX
/*	IBM RS/6000 running AIX */
#	undef	ibm
	MACHINE=ibm;
	UNIXTYPE=SYSV;
	HAS_TCP=1;
	HAS_SYMLINKS=1;
#endif

#if defined(hppa)
/*      HP9000/700 running HPUX 9.0 */
#       undef   hp
        MACHINE=hp;
        UNIXTYPE=SYSV;
        HAS_TCP=1;
        HAS_SYMLINKS=1;
#endif

EOF

# Run the file through the macro preprocessor.
# Many systems don't provide many built-in symbols with bare CPP,
# so try to run through the compiler.
# Using cc is essential for the IBM RS/6000, and helpful on the SGI.
cc -E ${IN_FILE} > ${OUT_FILE}
if test $? -ne 0
then
	# Must be an old C compiler without -E, fall back to /lib/cpp
	/lib/cpp < ${IN_FILE} > ${OUT_FILE}
fi

# Note that we depend on CPP's "#line" messages to be ignored as comments
# when sourced by the "." command here:
. ${OUT_FILE}
/bin/rm -f ${IN_FILE} ${OUT_FILE}

fi	# End of $MACHINE if-then-else.

# See if we learned anything by all this
if test x${MACHINE} = x
then
	echo "$0: Warning, unable to determine machine type." 1>&2
	echo "$0: Consult installation instructions for details." 1>&2
	MACHINE=//unknown//
	UNIXTYPE=--unknown--
	HAS_TCP=0
	HAS_SYMLINKS=0
	# Performing an "exit 1" here does not help any if this script
	# is being invoked by, eg, grave accents (which is a typical use).
	# So, simply return the error strings invented above,
	# which should cause more sensible errors downstream than
	# having Shell variables competely unset.
fi

# Now, look at first arg to determine output behavior

case x"$ARG" in

x|x-m)
	echo ${MACHINE}; exit 0;;
x-s)
	echo ${UNIXTYPE}; exit 0;;
x-n)
	echo ${HAS_TCP}; exit 0;;
x-a)
	if test ${UNIXTYPE} = BSD
	then	echo BSD
	else	echo ATT
	fi
	exit 0;;
x-v|x-b)
	echo "MACHINE=${MACHINE}; UNIXTYPE=${UNIXTYPE}; HAS_TCP=${HAS_TCP}; HAS_SYMLINKS=${HAS_SYMLINKS}; BASEDIR=${BASEDIR}"
	exit 0;;
x-d)
	# This option is used primarily when building CAKE.
	# This depends on sh `machinetype.sh -d` discarding the newline.
	if test ${UNIXTYPE} = BSD
	then	echo "-D__BSD -D_BSD -DBSD"
	else	echo "-D__SYSV -DATT -DSYSV"
	fi
	echo "-D__MACHINETYPE__${MACHINE}"
	echo "-DBRLCAD_ROOT_STRING=\"${BASEDIR}\""
	exit 0;;
*)
	echo "$0:  Unknown argument /$ARG/" 1>&2; break;;
esac
exit 1

# Local Variables:
# mode: sh
# tab-width: 8
# sh-indentation: 4
# sh-basic-offset: 4
# indent-tabs-mode: t
# End:
# ex: shiftwidth=4 tabstop=8
@


14.3
log
@update copyright to 2005
@
text
@d75 1
a75 1
#  $Header: /cvsroot/brlcad/brlcad/sh/machinetype.sh,v 14.2 2004/12/17 21:01:05 morrison Exp $
@


14.2
log
@assignment of copyright and BSD license
@
text
@d5 2
a6 2
# Copyright (c) 2004 United States Government as represented by the
# U.S. Army Research Laboratory.
d75 1
a75 1
#  $Header: /cvs/brlcad/sh/machinetype.sh,v 14.1 2004/11/16 19:42:12 morrison Exp $
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d2 2
a3 1
#			M A C H I N E T Y P E . S H
d5 37
a41 4
# A Shell script to determine the machine architecture type,
# operating system variant (Berkeley or SysV), and
# the presence of Berkeley-style TCP networking capability.
# The machine type must be FOUR characters or less.
d43 3
a45 3
# This is useful to permit the separation of
# incompatible binary program files, and to drive proper tailoring
# of some of the Makefiles.
d48 4
a51 4
# Note that this Shell script uses the same mechanism (ie, CPP)
# to determine the system type as the main Cakefile (Cakefile.defs)
# uses.  To support a new type of machine, the same #ifdef construction
# will be required both here and in Cakefile.defs
d68 2
a69 1
# Info note:  On a VAX-11/780, this script takes about 1.3 CPU seconds to run
d75 1
a75 1
#  $Header: /cvs/brlcad/sh/machinetype.sh,v 11.19 2004/09/15 13:50:02 kermit Exp $
@


11.19
log
@Added Altix entry.
@
text
@d40 1
a40 1
#  $Header: /cvs/brlcad/sh/machinetype.sh,v 11.18 2004/09/02 13:01:35 morrison Exp $
d427 9
@


11.18
log
@not being able to determine the machine type is no longer an error as the build is no longer dependant upon it's value
@
text
@d40 1
a40 1
#  $Header: /n/xoff/cvs/brlcad/sh/machinetype.sh,v 11.17 2002/10/21 22:55:36 morrison Exp $
d90 8
@


11.17
log
@Added support for YellowDog Linux out of the box.  YDL uses __PPC__ instead of __ppc__ as a preprocessor define of the hardware, otherwise, "li" as a platform is correct and sufficient as exists.
@
text
@d40 1
a40 1
#  $Header: /c/CVS/brlcad/sh/machinetype.sh,v 11.16 2002/10/11 08:30:57 kermit Exp $
d109 1
a109 1
			*)	echo ERROR unknown SGI OS version `uname -a` 1>&2;;
d373 1
a373 1
	echo "$0: ERROR, unable to determine machine type." 1>&2
d375 2
a376 2
	MACHINE=//error//
	UNIXTYPE=--error--
@


11.16
log
@Added initial support for IBM SP "Scalable Parallel" system running AIX.
Static build fully functional, still needs more work on shared build.
OpenGL support works, but there are issues communicatiing with mged.
@
text
@d40 1
a40 1
#  $Header: /c/CVS/brlcad/sh/machinetype.sh,v 11.15 2001/10/15 19:58:04 morrison Exp $
d94 1
a94 1
	i[3456]86)
@


11.15
log
@Added "Darwin on Power Macintosh" support (finally)
@
text
@d40 1
a40 1
#  $Header: /c/CVS/brlcad/sh/machinetype.sh,v 11.14 1998/08/22 23:25:29 mike Exp $
d117 32
@


11.15.4.1
log
@sync branch with HEAD
@
text
@d40 1
a40 1
#  $Header$
d94 1
a94 1
	i[3456]86 | ppc)
a116 32
		esac ;;
	# IBM is ugly, returns number code here.  From IBM's man page on uname:
	# The machine ID number contains 12 characters in the following digit
	# format: xxyyyyyymmss. The xx positions indicate the system and is
	# always 00. The yyyyyy positions contain the unique ID number for
	# the entire system. The mm position represents the model ID. The
	# ss position is the submodel number and is always 00. The model ID
	# describes the ID of the CPU Planar, not the model of the System
	# as a whole. Many new machines share a common machine ID of 4C.
	# xxyyyyyymmss	xx=00, mm=4C, ss=00
	# 00******4C00
	#
	# 006020514C00	-brainerd1	IBM,9076-N80
	# 006004604C00	-brainerd2	IBM,9076-N80
	#
	# 00212ACA4C00	-shelton	IBM,7040-681
	#
	00??????4C00)
		HARDWARE_TYPE=`uname -M`
		case "$HARDWARE_TYPE" in
		"IBM,9076-N80")
			case "$OS_TYPE" in
			"AIX")
				MACHINE=sp3; UNIXTYPE=BSD;
				HAS_TCP=1; HAS_SYMLINKS=1 ;;
			esac;;
		"IBM,7040-681")
			case "$OS_TYPE" in
			"AIX")
				MACHINE=sp4; UNIXTYPE=BSD;
				HAS_TCP=1; HAS_SYMLINKS=1 ;;
			esac;;
@


11.15.6.1
log
@sync to HEAD...
@
text
@d40 1
a40 1
#  $Header: /n/cad/c/CVS/brlcad/sh/machinetype.sh,v 11.17 2002/10/21 22:55:36 morrison Exp $
d94 1
a94 1
	i[3456]86 | ppc)
a116 32
		esac ;;
	# IBM is ugly, returns number code here.  From IBM's man page on uname:
	# The machine ID number contains 12 characters in the following digit
	# format: xxyyyyyymmss. The xx positions indicate the system and is
	# always 00. The yyyyyy positions contain the unique ID number for
	# the entire system. The mm position represents the model ID. The
	# ss position is the submodel number and is always 00. The model ID
	# describes the ID of the CPU Planar, not the model of the System
	# as a whole. Many new machines share a common machine ID of 4C.
	# xxyyyyyymmss	xx=00, mm=4C, ss=00
	# 00******4C00
	#
	# 006020514C00	-brainerd1	IBM,9076-N80
	# 006004604C00	-brainerd2	IBM,9076-N80
	#
	# 00212ACA4C00	-shelton	IBM,7040-681
	#
	00??????4C00)
		HARDWARE_TYPE=`uname -M`
		case "$HARDWARE_TYPE" in
		"IBM,9076-N80")
			case "$OS_TYPE" in
			"AIX")
				MACHINE=sp3; UNIXTYPE=BSD;
				HAS_TCP=1; HAS_SYMLINKS=1 ;;
			esac;;
		"IBM,7040-681")
			case "$OS_TYPE" in
			"AIX")
				MACHINE=sp4; UNIXTYPE=BSD;
				HAS_TCP=1; HAS_SYMLINKS=1 ;;
			esac;;
@


11.14
log
@Added comment
@
text
@d40 1
a40 1
#  $Header: /c/CVS/brlcad/sh/machinetype.sh,v 11.13 1998/08/22 22:27:25 mike Exp $
d73 4
@


11.13
log
@Added output on -d option, changed to BRLCAD_ROOT
@
text
@d40 1
a40 1
#  $Header: /c/CVS/brlcad/sh/machinetype.sh,v 11.12 1998/08/21 21:21:20 mike Exp $
d55 2
a56 1
	#  Modified by newbindir.sh as part of the installation process, if needed.
@


11.12
log
@Added BRLCAD_BASEDIR support to -d option, for building CAKE.
@
text
@d40 1
a40 1
#  $Header: /c/CVS/brlcad/sh/machinetype.sh,v 11.11 1998/08/21 21:16:00 mike Exp $
d51 1
a51 1
if test "$BRLCAD_BASEDIR" != ""
d53 1
a53 1
	BASEDIR=$BRLCAD_BASEDIR
d376 1
a376 1
	echo "-DBRLCAD_BASEDIR=${BASEDIR}"
@


11.11
log
@Added support for BRLCAD_BASEDIR environment variable.
@
text
@d40 1
a40 1
#  $Header: /c/CVS/brlcad/sh/machinetype.sh,v 11.10 1998/07/07 14:33:23 bparker Exp $
d370 1
a370 1
	# This depends on `machinetype.sh -d` discarding the newline.
d376 1
@


11.10
log
@OOPS! ---> put back /usr/brlcad
@
text
@d40 1
a40 1
#  $Header: /c/CVS/brlcad/sh/machinetype.sh,v 11.9 1998/07/06 19:05:39 bparker Exp $
d51 7
a57 2
#  Modified by newbindir.sh as part of the installation process, if needed.
BASEDIR=/usr/brlcad
@


11.9
log
@*- mods to handle HARDWARE_TYPE of "IP?"
@
text
@d40 1
a40 1
#  $Header: /c/CVS/brlcad/sh/machinetype.sh,v 11.8 1997/11/19 09:56:59 butler Exp $
d52 1
a52 1
BASEDIR=/vld/bparker/cad_dev
@


11.8
log
@typo fixed
@
text
@d40 1
a40 1
#  $Header: /m/cad/sh/RCS/machinetype.sh,v 11.7 1997/11/19 09:52:52 butler Exp butler $
d52 1
a52 1
BASEDIR=/usr/brlcad
d92 1
a92 1
	IP??) 
a108 1

@


11.7
log
@Can't have a "." in a #define symbol
@
text
@d40 1
a40 1
#  $Header: /m/cad/sh/RCS/machinetype.sh,v 11.6 1997/11/19 07:02:00 butler Exp butler $
d104 2
a105 2
			R4*)	MACHINE=m3i$OS_REVISION$OS_MINOR
			*)	MACHINE=m4i$OS_REVISION$OS_MINOR
@


11.6
log
@changed to m#i#.# notation for IRIX64 machines
@
text
@d40 1
a40 1
#  $Header: /m/cad/sh/RCS/machinetype.sh,v 11.5 1997/10/23 19:11:29 cjohnson Exp $
d64 1
d104 2
a105 2
			R4*)	MACHINE=m3i`uname -r` ;;
			*)	MACHINE=m4i`uname -r` ;;
@


11.5
log
@Add support for FreeBSD
@
text
@d40 1
a40 1
#  $Header: /vld/cjohnson/cvsroot/brlcad/sh/machinetype.sh,v 11.4 1997/05/20 17:18:27 mike Exp $
d66 2
a67 1
	# SGI is ugly, returning IP## here.
d74 33
a106 3
	alpha)  MACHINE=alpha; UNIXTYPE=BSD; HAS_TCP=1; HAS_SYMLINKS=1;;
	"CRAY C90") MACHINE=xmp; UNIXTYPE=SYSV; HAS_TCP=1; HAS_SYMLINKS=1;;
	vax)	MACHINE=vax; UNIXTYPE=BSD; HAS_TCP=1; HAS_SYMLINKS=1;;
a108 17
	if test "$MACHINE" = ""; then case "$OS_TYPE" in
	FreeBSD) UNIXTYPE=BSD; HAS_TCP=1; HAS_SYMLINKS=1; MACHINE=fbsd;;
	IRIX)  	UNIXTYPE=SYSV; HAS_TCP=1; HAS_SYMLINKS=1;
		case "$OS_REVISION" in
		4)	MACHINE=5d;;
		5)	MACHINE=6d;;
		6)	MACHINE=7d;;
		7)	MACHINE=9d;;
		*)	echo ERROR unknown SGI software version `uname -a` 1>&2;;
		esac;;
	IRIX64)	UNIXTYPE=SYSV; HAS_TCP=1; HAS_SYMLINKS=1;
		PROCESSOR=` hinv | sed -n -e 's/^CPU: MIPS \(.*\) Proc.*$/\1/p' `
		case "$PROCESSOR" in
		R4000|R4400)	MACHINE=7d;;
		R8000|R10000)	MACHINE=8d;;
		esac;;
	esac; fi
a129 7
#if defined(__ksr_cc)
	MACHINE=ksr;
	UNIXTYPE=SYSV;		# MACH
	HAS_TCP=1;
	HAS_SYMLINKS=1;
#endif

a156 9
#if defined(unix) && defined(i386) && defined(__bsdi__)
/* IBM PC/386 with BSD/386 (Berkeley Software Design, Inc.) */
#undef bsdi
	MACHINE=bsdi;
	UNIXTYPE=BSD;
	HAS_TCP=1;
	HAS_SYMLINKS=1;
#endif

a166 7
#if defined(unix) && defined(i386) && defined(linux)
/* IBM PC with Linux */
	MACHINE=li;
	UNIXTYPE=BSD;
	HAS_TCP=1;
	HAS_SYMLINKS=1;
#endif
a187 17
#if defined(alliant) && !defined(i860)
/*	Alliant FX/8 or FX/80 */
#	undef	fx
	MACHINE=fx;
	UNIXTYPE=BSD;
	HAS_TCP=1;
	HAS_SYMLINKS=1;
#endif

#if defined(alliant) && defined(i860)
/*	Alliant FX/2800 */
#	undef	fy
	MACHINE=fy;
	UNIXTYPE=BSD;
	HAS_TCP=1;
	HAS_SYMLINKS=1;
#endif
a273 10
#ifdef eta10
/*	ETA-10 running UNIX System V. */
/*	The network support is different enough that is isn't supported yet */
#	undef	eta
	MACHINE=eta;
	UNIXTYPE=SYSV;
	HAS_TCP=0;
	HAS_SYMLINKS=0;
#endif

d345 1
@


11.4
log
@Added distinction between R4k and R8k/R10k (-mips3 vs -mips4)
@
text
@d40 1
a40 1
#  $Header: /m/cad/sh/RCS/machinetype.sh,v 11.3 1996/11/12 15:57:32 jra Exp mike $
d79 1
@


11.3
log
@Added line for IRIX64
@
text
@d40 1
a40 1
#  $Header: /m/cad/RCS/machinetype.sh,v 11.2 1995/01/09 16:47:33 mike Exp jra $
d84 1
a84 1
		7)	MACHINE=8d;;
d87 6
a92 1
	IRIX64)	UNIXTYPE=SYSV; HAS_TCP=1; HAS_SYMLINKS=1; MACHINE=7d;;
@


11.2
log
@The grave accents (`) around the UNAME command in the "C" program
were being processed by the Shell by the CAT command, *before*
the C compiler had processed the #ifdefs.
This means that on pure-BSD systems with no UNAME command at all,
two "uname: not found" messages would be printed before the compiler
would run.
Fix:  Move the SGI and Sun cases up fully into the "uname" block
of code, and delete them from the "C" block.
@
text
@d40 1
a40 1
#  $Header: /m/cad/RCS/machinetype.sh,v 11.1 95/01/04 09:43:42 mike Rel4_4 Locker: mike $
d87 1
@


11.1
log
@Release_4.4
@
text
@d40 1
a40 1
#  $Header: /m/cad/RCS/machinetype.sh,v 10.28 95/01/04 08:18:25 mike Exp $
d77 11
a231 60
#endif

#if (defined(sgi) && defined(mips)) || (defined(__sgi) && defined(__mips))
/*	Silicon Graphics 4D, which uses the MIPS chip */
#	undef	sgi
#	if __STDC__
/*		Irix 5.0 system or later */
/*		Irix 5.0 = 6d, Irix 6.0 = 7d */
		case `uname -r` in
		4.*)	MACHINE=5d;;
		5.*)	MACHINE=6d;;
		6.*)	MACHINE=7d;;
		7.*)	MACHINE=8d;;
		*)	echo ERROR unknown SGI software version `uname -a` 1>&2;;
		esac
#	else
#		if defined(__sgi)
/*			IRIX 4.0, "cypress" */
			MACHINE=5d;
#		else
/*			IRIX 3.3, now obsolete */
			MACHINE=4d;
#		endif
#	endif
	UNIXTYPE=SYSV;
	HAS_TCP=1;
	HAS_SYMLINKS=1;
#endif

#if defined(sun) && !defined(sparc)
#	undef	sun
#	undef	sun3
	MACHINE=sun3;
	UNIXTYPE=BSD;
	HAS_TCP=1;
	HAS_SYMLINKS=1;
#endif

#if defined(sun) && defined(sparc)
#	undef	sun
#	undef	sun4
#	undef	sun5
	HAS_TCP=1;
	HAS_SYMLINKS=1;

	if [ -x /usr/bin/uname ] ; then
		if expr \`/usr/bin/uname -r\` : '4\.*' > /dev/null; then
			/* Solarix 1.X (BSD based) */
			UNIXTYPE=BSD;
			MACHINE=sun4;
		else
			/* Solaris 2.X (SYSV based) (SunOS 5) */
			UNIXTYPE=SYSV;
			MACHINE=sun5;
		fi
	else
		/* No uname.  Must be Solarix 1.X (SunOS 4) */
		UNIXTYPE=BSD;
		MACHINE=sun4;
	fi
@


10.28
log
@Added C90 support.
@
text
@d40 1
a40 1
#  $Header: /m/cad/RCS/machinetype.sh,v 10.27 95/01/03 23:00:49 mike Exp Locker: mike $
@


10.27
log
@Setting the path this way shaves 2 seconds of runtime off the exec()s
of uname on VGR, total.  Well worthwhile.
@
text
@d40 1
a40 1
#  $Header: /m/cad/RCS/machinetype.sh,v 10.26 95/01/03 22:52:57 mike Exp Locker: mike $
d74 1
@


10.26
log
@Added VAX support.  It needs all the help it can get.
Also added BASEDIR variable to the "-v" set.
@
text
@d40 1
a40 1
#  $Header: /m/cad/RCS/machinetype.sh,v 10.25 94/12/27 23:46:22 mike Exp Locker: mike $
d46 1
a46 1
PATH=$PATH:/usr/5bin
@


10.25
log
@DEC Alpha is a BSD machine.
@
text
@d38 1
a38 1
# With thanks to Timmothy Smith for the /bin/uname idea.
d40 1
a40 1
#  $Header: /m/cad/RCS/machinetype.sh,v 10.24 94/12/27 23:24:13 mike Exp Locker: mike $
d45 3
d50 5
a54 1
if test -x /bin/uname -o -x /usr/bin/uname
d66 1
d74 1
d437 1
a437 1
	echo "MACHINE=${MACHINE}; UNIXTYPE=${UNIXTYPE}; HAS_TCP=${HAS_TCP}; HAS_SYMLINKS=${HAS_SYMLINKS}"
@


10.24
log
@Added DEC Alpha
@
text
@d40 1
a40 1
#  $Header: /m/cad/RCS/machinetype.sh,v 10.23 94/12/23 16:32:01 mike Exp Locker: mike $
d65 1
a65 1
	alpha)  MACHINE=alpha; UNIXTYPE=SYSV; HAS_TCP=1; HAS_SYMLINKS=1;;
d434 1
a434 1
	then	echo "-D__BSD -DBSD"
@


10.23
log
@If /bin/uname is present, use it.
@
text
@d40 1
a40 1
#  $Header: /m/cad/RCS/machinetype.sh,v 10.22 94/12/21 23:45:59 mike Exp Locker: mike $
d65 1
@


10.22
log
@New HP support
From: Ingbert Graf <graf@@conmuc.de.convex.com>
@
text
@d13 1
d19 6
d32 1
a32 1
#	-b -v	Print all, in Bourne-Shell legible form
d37 2
a38 1
# With thanks to Terry Slattery and Bob Reschly for assistance
d40 1
a40 1
#  $Header: /m/cad/RCS/machinetype.sh,v 10.21 94/12/19 18:38:16 mike Exp Locker: mike $
d45 27
d393 2
d412 1
a412 1
case x$1 in
d439 1
a439 1
	echo "$0:  Unknown argument $1" 1>&2; break;;
@


10.21
log
@Changed Linux to a BSD family of system, due to libcursor/cursor.c
requirements.
@
text
@d32 1
a32 1
#  $Header: /m/cad/RCS/machinetype.sh,v 10.20 94/12/07 16:43:34 mike Exp Locker: mike $
d331 7
a337 7
#if defined(hpux)
/*	HP 9000, Model 730 et.al. running HPUX */
#	undef	hp
	MACHINE=hp;
	UNIXTYPE=SYSV;
	HAS_TCP=0;
	HAS_SYMLINKS=1;
@


10.20
log
@Added Linux support
@
text
@d32 1
a32 1
#  $Header: /m/cad/RCS/machinetype.sh,v 10.19 94/10/31 16:42:11 mike Exp Locker: mike $
d108 1
a108 1
	UNIXTYPE=SYSV;
@


10.19
log
@Added more dependable version identification on SGI IRIX systems.
@
text
@d32 1
a32 1
#  $Header: /m/cad/RCS/machinetype.sh,v 10.18 94/10/19 15:01:21 mike Exp Locker: mike $
d95 2
a96 3


#if defined(unix) && defined(i386) && !defined(__bsdi__) && !defined(__386BSD__) && !defined(__NetBSD__)
d103 8
@


10.18
log
@Added $HEADER
@
text
@d32 1
a32 1
#  $Header: /m/cad/RCS/sharedliblink.sh,v 1.5 94/10/19 15:00:47 mike Exp $
d174 9
a182 2
/*		Irix 5.0 system */
		MACHINE=6d;
@


10.17
log
@Fixed bug #134, from Bill Laut.
@
text
@d31 2
a32 1
# $Revision: 10.16 $
@


10.16
log
@Added -d option for CAKE use
@
text
@d31 1
a31 1
# $Revision: 10.15 $
d61 9
@


10.15
log
@Cray UNICOS has had symlinks now for a long time.
@
text
@d20 1
d31 1
a31 1
# $Revision: 10.14 $
d367 9
@


10.14
log
@Split off sun4 and sun5 types
@
text
@d30 1
a30 1
# $Revision: 10.13 $
d229 1
a229 1
/*	Cray X-M/P running UNICOS. */
d234 1
a234 1
	HAS_SYMLINKS=0;
@


10.13
log
@Added comments
@
text
@d30 1
a30 1
# $Revision: 10.12 $
d191 1
a191 1
	MACHINE=sun4;
d199 1
d201 1
a201 1
			/* Solaris 2.X (SYSV based) */
d203 1
d206 1
a206 1
		/* No uname.  Must be Solarix 1.X */
d208 1
@


10.12
log
@Fix from Tim Smith to recognize newer forms of Solaris.
@
text
@d30 1
a30 1
# $Revision: 10.11 $
d197 1
d200 1
d204 1
a204 1
		/* No uname.  Must be 1.X */
@


10.11
log
@Made NetBSD/i386 and NetBSD/other different
@
text
@d30 1
a30 1
# $Revision: 10.10 $
d188 1
a188 1
#if defined(sparc)
a191 7
#if	defined(__STDC__) && __STDC__ == 0
/*		Solaris 2.x (SunOS 5.x), cc default is -Xt */
		UNIXTYPE=SYSV;
#	else
/*		Older SunOS */
		UNIXTYPE=BSD;
#endif
d194 11
@


10.10
log
@Added recognition of NetBSD systems.
@
text
@d30 1
a30 1
# $Revision: 10.9 $
d104 6
a109 2
/* NetBSD from Chris Demetriou and friends */
	MACHINE=nb
@


10.9
log
@Solaris 2 mod
@
text
@d30 1
a30 1
# $Revision: 10.8 $
d86 1
a86 1
#if defined(unix) && defined(i386) && !defined(__bsdi__) && !defined(__386BSD__)
d98 8
@


10.8
log
@SunOS 5 hack
@
text
@d30 1
a30 1
# $Revision: 10.7 $
d180 1
a180 1
#if	__STDC__ == 0
@


10.7
log
@Notices Irix 6 systems automatically.
@
text
@d30 1
a30 1
# $Revision: 10.6 $
d180 7
a186 1
	UNIXTYPE=BSD;
@


10.6
log
@Added support for 386BSD
@
text
@d30 1
a30 1
# $Revision: 10.5 $
d150 3
a152 3
#	if defined(__sgi)
/*		Experimental IRIX 4.0, "cypress" */
		MACHINE=5d;
d154 7
a160 1
		MACHINE=4d;
@


10.5
log
@Added support for Kendal Square Research (KSR) machine.
@
text
@d30 1
a30 1
# $Revision: 10.4 $
d86 1
a86 1
#if defined(unix) && defined(i386) && !defined(__bsdi__)
d93 8
@


10.4
log
@Added HP 9000 support, from Terry Hweitt, Manchester Computing Centre.
@
text
@d30 1
a30 1
# $Revision: 10.3 $
d46 7
@


10.3
log
@changed for BSDI unix support
@
text
@d30 1
a30 1
# $Revision: 10.2 $
d255 9
@


10.2
log
@added entry for i386 PC running BSDI Unix
@
text
@d30 1
a30 1
# $Revision: 10.1 $
d69 3
a71 2
/* BSDI/386 (Berkeley Software Design, Inc.) */
	MACHINE=bsdi386;
d74 1
a74 1
	HAS_SYMLINKS=0;
@


10.1
log
@Release_4.0
@
text
@d30 1
a30 1
# $Revision: 9.16 $
d68 11
a78 1
#if defined(unix) && defined(i386)
@


9.16
log
@Added iPSC/860 defines.
@
text
@d30 1
a30 1
# $Revision: 9.15 $
@


9.15
log
@Added TCP to Stardent
@
text
@d30 1
a30 1
# $Revision: 9.14 $
d56 10
@


9.14
log
@Added Stardent VISTRA i860 machine
@
text
@d30 1
a30 1
# $Revision: 9.13 $
d90 1
a90 1
	HAS_TCP=0;
@


9.13
log
@Added NeXT
@
text
@d30 1
a30 1
# $Revision: 9.12 $
d82 9
@


9.12
log
@More portable "5d" hack
@
text
@d30 1
a30 1
# $Revision: 9.11 $
d129 8
@


9.11
log
@Added "5d" entry, for IRIX 4.0 "cypress" systems.
@
text
@d30 1
a30 1
# $Revision: 9.10 $
d102 1
a102 1
#if defined(sgi) && defined(mips)
@


9.10
log
@Added support for IBM RS/6000
@
text
@d30 1
a30 1
# $Revision: 9.9 $
d105 6
a110 1
	MACHINE=4d;
@


9.9
log
@Changed to use cc -E first, and then fall back to /lib/cpp.
@
text
@d30 1
a30 1
# $Revision: 9.8 $
d201 9
@


9.8
log
@Added i386 definitions
@
text
@d30 1
a30 1
# $Revision: 9.7 $
d35 3
a37 2
FILE=/tmp/machtype$$
trap '/bin/rm -f ${FILE}; exit 1' 1 2 3 15	# Clean up temp file
d39 1
a39 1
/lib/cpp << EOF > ${FILE}
d208 11
d221 2
a222 2
. ${FILE}
/bin/rm -f ${FILE}
@


9.7
log
@Convex symbol has changed.
@
text
@d30 1
a30 1
# $Revision: 9.6 $
d55 9
@


9.6
log
@The Alliant FX/2800 does indeed have TCP
@
text
@d30 1
a30 1
# $Revision: 9.5 $
d144 1
a144 1
#ifdef convex
@


9.5
log
@Added Alliant FX/2800
Eliminated special cases junk at end.
@
text
@d30 1
a30 1
# $Revision: 9.4 $
d71 1
a71 1
	HAS_TCP=0;
@


9.4
log
@Added Encore MultiMax.
@
text
@d30 1
a30 1
# $Revision: 9.3 $
d57 2
a58 1
#ifdef alliant
d66 9
a217 28

# Special cases for discriminating between different versions of
# systems from vendors.
# Try very hard to avoid putting stuff here, because this technique
# is not available for use in "Cakefile.defs", so special handling
# will be required.
#case ${MACHINE} in
#
#4d)
#	if test -d /usr/NeWS
#	then
#		# This is definitely an SGI sw Release 3.? system
#		if test ! -x /tmp/gt
#		then
#			echo 'main(){char b[50];gversion(b);printf("%2.2s\\n",b+4);exit(0);}'>/tmp/gt.c
#			cc /tmp/gt.c -lgl -o /tmp/gt
#		fi
#		case `/tmp/gt` in
#		GT)	MACHINE=4gt;;
#		PI)	MACHINE=4p;;	# Personal Iris
#		*)	MACHINE=4d;;
#		esac
#	else
#		# This is an SGI sw Release 2 system
#		MACHINE=4d2		# Unsupported
#	fi;;
#
#esac
@


9.3
log
@Turn on TCP for aux.
@
text
@d30 1
a30 1
# $Revision: 9.2 $
d174 8
@


9.2
log
@Updated Apollo entry for SR10.1
@
text
@d30 1
a30 1
# $Revision: 9.1 $
d45 1
a45 1
	HAS_TCP=0;
@


9.1
log
@Release_3.5
@
text
@d30 1
a30 1
# $Revision: 8.5 $
d112 3
a114 3
	UNIXTYPE=SYSV;
	HAS_TCP=0;
	HAS_SYMLINKS=0;
@


8.5
log
@All 4d machines are now equal.
@
text
@d30 1
a30 1
# $Revision: 8.4 $
@


8.4
log
@added apollo (in System V world for now because that's the
only one we were able to test).
@
text
@d30 1
a30 1
# $Revision: 8.3 $
d206 22
a227 22
case ${MACHINE} in

4d)
	if test -d /usr/NeWS
	then
		# This is definitely an SGI sw Release 3.? system
		if test ! -x /tmp/gt
		then
			echo 'main(){char b[50];gversion(b);printf("%2.2s\\n",b+4);exit(0);}'>/tmp/gt.c
			cc /tmp/gt.c -lgl -o /tmp/gt
		fi
		case `/tmp/gt` in
		GT)	MACHINE=4gt;;
		PI)	MACHINE=4gt;;	# Personal Iris
		*)	MACHINE=4d;;
		esac
	else
		# This is an SGI sw Release 2 system
		MACHINE=4d2
	fi;;

esac
@


8.3
log
@Added handling of personal iris
@
text
@d30 1
a30 1
# $Revision: 8.2 $
d107 8
@


8.2
log
@Apple MAC II suport from Chris Johnson
@
text
@d30 1
a30 1
# $Revision: 8.1 $
d206 1
a206 1
			echo 'main(){char b[50];gversion(b);exit(strncmp(b+4,"GT",2));}'>/tmp/gt.c
d209 5
a213 4
		if /tmp/gt
		then	MACHINE=4gt;
		else	MACHINE=4d;
		fi
@


8.1
log
@Release_3.0
@
text
@d30 1
a30 1
# $Revision: 1.7 $
d40 8
@


1.7
log
@Pyramid can do TCP
@
text
@d30 1
a30 1
# $Revision: 1.6 $
@


1.6
log
@Working Pyramid version
@
text
@d30 1
a30 1
# $Revision: 1.5 $
d158 1
a158 1
	HAS_TCP=0;
@


1.5
log
@Force script to be run by /bin/sh.
@
text
@d30 1
a30 1
# $Revision: 1.4 $
d154 1
a154 1
#ifdef pyramid
d177 1
@


1.4
log
@Added HAS_SYMLINKS flag
@
text
@d30 4
a33 1
# $Revision: 1.3 $
@


1.3
log
@Added wonderful hackery for SGI, to discriminate
4gt, 4d, 4d2
@
text
@d24 1
a24 2
#	-v	Print all, in verbose human form
#	-b	Print all, in Bourne-Shell legible form
d30 1
a30 1
# $Revision: 1.2 $
d43 1
d51 1
d59 1
d68 1
a72 7
/*	There are three configurations which are supported:
 *	1)  [4d] non-GT hw on SGI sw Release 2
 *	2)  [4d] non-GT hw on SGI sw Release 3.1
 *	3)  [4gt] 4D-GT hw on SGI sw Release 3.1
 *	determining the difference is done partly at compile time,
 *	and partly now.
 */
d77 1
d86 1
d95 1
d104 1
d112 1
d120 1
d129 1
d138 1
d148 1
d155 2
a156 1
	HAS_TCP=1;
d223 2
a224 5
x-v)
	echo MACHINE = ${MACHINE}, UNIXTYPE = ${UNIXTYPE}, HAS_TCP = ${HAS_TCP}
	exit 0;;
x-b)
	echo "MACHINE=${MACHINE}; UNIXTYPE=${UNIXTYPE}; HAS_TCP=${HAS_TCP}"
@


1.2
log
@Fixed bug with -a option.
Added sun4, convex, stellar, ardent, eta-10
@
text
@d31 1
a31 1
# $Revision: 1.1 $
d70 7
d174 27
@


1.1
log
@Initial revision
@
text
@d31 1
a31 1
# $Revision$
d76 1
a76 2
#ifdef sun
/*	Need some way to discriminate sun3 and sun4/sparc */
d84 9
a92 1
#if defined(CRAY) && !defined(CRAY2)
d100 1
a100 1
#ifdef CRAY2
d107 32
d174 1
a174 1
	echo ${SYSTEM}; exit 0;;
d178 1
a178 1
	if test ${SYSTEM} = BSD
@
