head	11.10;
access;
symbols
	ansi-20040405-merged:11.7.2.1
	postmerge-20040405-ansi:11.8
	premerge-20040404-ansi:11.7
	postmerge-autoconf:11.7
	autoconf-freeze:11.7
	premerge-autoconf:11.7
	ansi-20040316-freeze:11.7.2.1
	postmerge-20040315-windows:11.7
	premerge-20040315-windows:11.7
	windows-20040315-freeze:11.7
	autoconf-20031203:11.7
	autoconf-20031202:11.7
	autoconf-branch:11.7.0.10
	phong-branch:11.7.0.8
	photonmap-branch:11.7.0.6
	rel-6-1-DP:11.7
	windows-branch:11.7.0.4
	rel-6-0-2:11.5
	ansi-branch:11.7.0.2
	rel-6-0-1-branch:11.5.0.2
	hartley-6-0-post:11.6
	hartley-6-0-pre:11.5
	rel-6-0-1:11.5
	rel-6-0:11.5
	rel-5-4:11.2
	offsite-5-3-pre:11.5
	rel-5-3:11.2
	rel-5-2:11.2
	rel-5-1-branch:11.2.0.2
	rel-5-1:11.2
	rel-5-0:11.2
	rel-5-0-beta:11.2
	rel-4-5:11.2
	ctj-4-5-post:11.2
	ctj-4-5-pre:11.2
	rel-4-4:11.1
	rel-4-0:10.1
	rel-3-5:9.1
	rel-3-0:8.1
	rel-2-3:7.1
	rel-2-0:6.1
	rel-1-24:5.1
	rel-1-20:4.2
	rel-1-10:4.1
	rt-2:1.3;
locks; strict;
comment	@ * @;


11.10
date	2004.05.24.04.16.11;	author morrison;	state dead;
branches;
next	11.9;

11.9
date	2004.05.10.15.30.41;	author erikg;	state Exp;
branches;
next	11.8;

11.8
date	2004.04.05.07.49.36;	author morrison;	state Exp;
branches;
next	11.7;

11.7
date	2002.08.20.17.07.20;	author jra;	state Exp;
branches
	11.7.2.1;
next	11.6;

11.6
date	2002.08.15.20.54.33;	author hartley;	state Exp;
branches;
next	11.5;

11.5
date	2000.10.19.19.19.44;	author butler;	state Exp;
branches;
next	11.4;

11.4
date	2000.08.24.03.03.15;	author mike;	state Exp;
branches;
next	11.3;

11.3
date	2000.07.10.23.53.55;	author mike;	state Exp;
branches;
next	11.2;

11.2
date	95.03.30.06.06.47;	author mike;	state Exp;
branches;
next	11.1;

11.1
date	95.01.04.09.59.21;	author mike;	state Rel4_4;
branches;
next	10.2;

10.2
date	94.08.10.23.39.18;	author gdurf;	state Exp;
branches;
next	10.1;

10.1
date	91.10.12.06.41.17;	author mike;	state Rel4_0;
branches;
next	9.1;

9.1
date	89.05.19.05.46.08;	author mike;	state Rel3_5;
branches;
next	8.1;

8.1
date	88.10.05.00.25.29;	author mike;	state Rel3_0;
branches;
next	7.1;

7.1
date	87.11.02.23.24.01;	author mike;	state Rel;
branches;
next	6.1;

6.1
date	87.07.11.07.49.38;	author mike;	state Rel;
branches;
next	5.1;

5.1
date	87.06.24.21.48.50;	author mike;	state Rel;
branches;
next	4.2;

4.2
date	87.02.12.22.02.17;	author mike;	state Exp;
branches;
next	4.1;

4.1
date	86.12.29.02.48.22;	author mike;	state Rel1;
branches;
next	1.6;

1.6
date	86.08.06.17.54.31;	author mike;	state Exp;
branches;
next	1.5;

1.5
date	86.08.06.02.27.48;	author mike;	state Exp;
branches;
next	1.4;

1.4
date	86.04.16.16.58.58;	author mike;	state Exp;
branches;
next	1.3;

1.3
date	85.06.08.01.30.34;	author mike;	state Exp;
branches;
next	1.2;

1.2
date	85.06.04.21.36.27;	author mike;	state Exp;
branches;
next	1.1;

1.1
date	85.03.25.13.40.58;	author mike;	state Exp;
branches;
next	;

11.7.2.1
date	2002.09.19.18.00.34;	author morrison;	state Exp;
branches;
next	;


desc
@ASCII to pixel converter
@


11.10
log
@moved to src/conv/
@
text
@/*
 *  			A S C 2 P I X . C
 *
 *  Convert ASCII (hex) pixel files to the binary form.
 *  For portable images.
 *  Can also be used for .bw files, and random file conversion.
 *  White space in the file is ignored.
 *  The input is processed as a byte stream, and need not have a multiple
 *  of three bytes.
 *  
 *  Author -
 *	Michael John Muuss
 *  
 *  Source -
 *	The U. S. Army Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5068  USA
 *  
 *  Distribution Status -
 *	Public Domain, Distribution Unlimited.
 */
#ifndef lint
static const char RCSid[] = "@@(#)$Header: /n/xoff/cvs/brlcad/conv/asc2pix.c,v 11.9 2004/05/10 15:30:41 erikg Exp $ (ARL)";
#endif

#ifdef HAVE_CONFIG_H
# include "config.h"
#endif



#include <stdio.h>
#include <stdlib.h>

int lmap[256];		/* Map HEX ASCII to binary in left nybble */
int rmap[256];		/* Map HEX ASCII to binary in right nybble */

unsigned char line[256];

int
main(void)
{
	register int	a, b;
	register int	i;

	/* Init map */
	for(i=0;i<256;i++) rmap[i] = -1;		/* Unused entries */
	for(i=0; i<10; i++)  rmap['0'+i] = i;
	for(i=10; i<16; i++)  rmap['A'-10+i] = i;
	for(i=10; i<16; i++)  rmap['a'-10+i] = i;
	for(i=0;i<256;i++) {
		if( rmap[i] >= 0 )
			lmap[i] = rmap[i]<<4;
		else
			lmap[i] = -1;
	}

	for(;;)  {
		do {
			if( (a = getchar()) == EOF || a > 255 )  goto out;
		} while( (i = lmap[a]) < 0 );

		if( (b = getchar()) == EOF || b > 255 )  {
			fprintf(stderr,"asc2pix: unexpected EOF in middle of hex number\n");
			return 1;
		}

		if( (b = rmap[b]) < 0 )  {
			fprintf(stderr,"asc2pix: illegal hex code in file, aborting\n");
			return 1;
		}

		putc( (i | b), stdout );
	}
out:
	fflush(stdout);
	exit(0);
}
@


11.9
log
@change conf.h to a wrapped config.h
@
text
@d22 1
a22 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/conv/asc2pix.c,v 11.8 2004/04/05 07:49:36 morrison Exp $ (ARL)";
@


11.8
log
@merge of ansi-6-0-branch into HEAD
@
text
@d22 1
a22 1
static const char RCSid[] = "@@(#)$Header$ (ARL)";
d25 5
a29 1
#include "conf.h"
@


11.7
log
@Restoration of entire source tree to Pre-Hartley state
@
text
@d22 1
a22 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/conv/asc2pix.c,v 11.5 2000/10/19 19:19:44 butler Exp $ (ARL)";
d36 1
a36 1
main()
@


11.7.2.1
log
@Initial ANSIfication
@
text
@d22 1
a22 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/conv/asc2pix.c,v 11.7 2002/08/20 17:07:20 jra Exp $ (ARL)";
d36 1
a36 1
main(void)
@


11.6
log
@Converted from K&R to ANSI C - RFH
@
text
@d36 1
a36 1
main(void)
@


11.5
log
@Changes to compile under RedHat 7.0
@
text
@d22 1
a22 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/conv/asc2pix.c,v 11.4 2000/08/24 03:03:15 mike Exp $ (ARL)";
d36 1
a36 1
main()
@


11.4
log
@
lint
@
text
@d22 1
a22 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/conv/asc2pix.c,v 11.3 2000/07/10 23:53:55 mike Exp $ (ARL)";
d28 1
@


11.3
log
@
lint
@
text
@d22 1
a22 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/conv/asc2pix.c,v 11.2 1995/03/30 06:06:47 mike Exp $ (ARL)";
d34 1
@


11.2
log
@Fully general. Will eat any 2-char hex string, and spew it as a binary
byte stream.
@
text
@d22 1
a22 1
static char RCSid[] = "@@(#)$Header$ (ARL)";
@


11.1
log
@Release_4.4
@
text
@d6 4
d15 2
a16 3
 *	SECAD/VLD Computing Consortium, Bldg 394
 *	The U. S. Army Ballistic Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005
d18 2
a19 3
 *  Copyright Notice -
 *	This software is Copyright (C) 1985 by the United States Army.
 *	All rights reserved.
d22 1
a22 1
static char RCSid[] = "@@(#)$Header: /m/cad/conv/RCS/asc2pix.c,v 10.2 94/08/10 23:39:18 gdurf Exp $ (BRL)";
d36 2
a37 2
	register unsigned char *cp;
	register int i;
d40 1
d44 6
a49 1
	for(i=0;i<256;i++) lmap[i] = rmap[i]<<4;
d52 13
a64 18
		(void)fgets((char *)line, sizeof(line), stdin);
		if( feof(stdin) )  break;
		cp = line;

		/* R */
		i = lmap[*cp++];
		i |= rmap[*cp++];
		putc( i, stdout );

		/* G */
		i = lmap[*cp++];
		i |= rmap[*cp++];
		putc( i, stdout );

		/* B */
		i = lmap[*cp++];
		i |= rmap[*cp++];
		putc( i, stdout );
d66 1
a66 1
		/* Ignore rest of line, for now */
d68 1
@


10.2
log
@Added include of conf.h
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: /m/cad/conv/RCS/asc2pix.c,v 10.1 1991/10/12 06:41:17 mike Rel4_0 gdurf $ (BRL)";
@


10.1
log
@Release_4.0
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: asc2pix.c,v 9.1 89/05/19 05:46:08 mike Rel3_5 $ (BRL)";
d22 2
@


9.1
log
@Release_3.5
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: asc2pix.c,v 8.1 88/10/05 00:25:29 mike Rel3_0 $ (BRL)";
@


8.1
log
@Release_3.0
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: asc2pix.c,v 7.1 87/11/02 23:24:01 mike Rel $ (BRL)";
@


7.1
log
@Release 2.3
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: asc2pix.c,v 6.1 87/07/11 07:49:38 mike Rel $ (BRL)";
@


6.1
log
@Release 2.0
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: asc2pix.c,v 5.1 87/06/24 21:48:50 mike Rel $ (BRL)";
@


5.1
log
@Release 1.24
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: asc2pix.c,v 4.2 87/02/12 22:02:17 mike Exp $ (BRL)";
@


4.2
log
@Release 1.20 -- First Formal Release
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: asc2pix.c,v 4.1 86/12/29 02:48:22 mike Rel1 $ (BRL)";
@


4.1
log
@BRL CAD Distribution Release 1.10
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: asc2pix.c,v 1.6 86/08/06 17:54:31 mike Exp $ (BRL)";
@


1.6
log
@Converted to more compact ASCII format.
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: asc2pix.c,v 1.5 86/08/06 02:27:48 mike Exp $ (BRL)";
@


1.5
log
@New version which uses exclusively stdio,
and is insensitive to the size of the file
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: asc2pix.c,v 1.4 86/04/16 16:58:58 mike Exp $ (BRL)";
d25 5
d32 2
a33 1
	static int r,g,b;
d35 27
a61 5
	while( !feof( stdin )  &&
	    scanf( "%x %x %x", &r, &g, &b ) == 3 )  {
		putc( r, stdout );
		putc( g, stdout );
		putc( b, stdout );
@


1.4
log
@Added decent exit code.
@
text
@d3 3
d20 1
a20 1
static char RCSid[] = "@@(#)$Header: asc2pix.c,v 1.3 85/06/08 01:30:34 mike Exp $ (BRL)";
a24 2
unsigned char line[512*3];		/* R, G, B per pixel */

d27 1
a27 2
	register unsigned char *ip;
	auto int r,g,b;
d29 5
a33 10
	ip = line;
	while( !feof( stdin ) )  {
		scanf( "%x %x %x", &r, &g, &b );
		*ip++ = r;
		*ip++ = g;
		*ip++ = b;
		if( ip >= &line[512*3] )  {
			ip = line;
			write( 1, line, sizeof(line) );
		}
d35 1
@


1.3
log
@Altered for new pixel file format.
@
text
@d17 1
a17 1
static char RCSid[] = "@@(#)$Header: asc2pix.c,v 1.2 85/06/04 21:36:27 mike Exp $ (BRL)";
d40 1
@


1.2
log
@Provided bzero() for non-4.2 UNIX systems.
@
text
@d17 1
a17 1
static char RCSid[] = "@@(#)$Header: asc2pix.c,v 1.1 85/03/25 13:40:58 mike Exp $ (BRL)";
d22 1
a22 1
unsigned long line[512];
d26 2
a27 1
	register unsigned long *ip;
d31 5
a35 2
		scanf( "%x", ip++ );
		if( ip >= &line[512] )  {
a37 1
			bzero( line, sizeof(line) );
a40 11

#ifndef BSD42

bzero( str, n )
register char *str;
register int n;
{
	while( n-- > 0 )
		*str++ = '\0';
}
#endif
@


1.1
log
@Initial revision
@
text
@d17 1
a17 1
static char RCSid[] = "@@(#)$Header$ (BRL)";
d39 2
a40 1
#ifdef SYS5
d42 2
d45 2
a46 1
	memset( str, '\0', n );
@
