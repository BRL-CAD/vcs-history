head	1.2;
access;
symbols
	ansi-20040405-merged:1.1
	postmerge-20040405-ansi:1.1
	premerge-20040404-ansi:1.1
	postmerge-autoconf:1.1
	autoconf-freeze:1.1
	premerge-autoconf:1.1
	ansi-20040316-freeze:1.1
	postmerge-20040315-windows:1.1
	premerge-20040315-windows:1.1
	windows-20040315-freeze:1.1
	autoconf-20031203:1.1
	autoconf-20031202:1.1
	autoconf-branch:1.1.0.14
	phong-branch:1.1.0.12
	photonmap-branch:1.1.0.10
	rel-6-1-DP:1.1
	windows-branch:1.1.0.8
	rel-6-0-2:1.1
	ansi-branch:1.1.0.6
	rel-6-0-1-branch:1.1.0.4
	hartley-6-0-post:1.1
	hartley-6-0-pre:1.1
	rel-6-0-1:1.1
	rel-6-0:1.1
	rel-5-4:1.1
	offsite-5-3-pre:1.1
	rel-5-3:1.1
	rel-5-2:1.1
	rel-5-1-branch:1.1.0.2
	rel-5-1:1.1
	rel-5-0:1.1
	rel-5-0-beta:1.1
	rel-4-5:1.1
	ctj-4-5-post:1.1
	ctj-4-5-pre:1.1
	rel-4-4:1.1
	rel-4-0:1.1;
locks; strict;
comment	@# @;


1.2
date	2004.05.24.04.16.11;	author morrison;	state dead;
branches;
next	1.1;

1.1
date	91.05.13.10.05.51;	author sue;	state Exp;
branches;
next	;


desc
@This program is a shell script.  It uses asc2g and g2asc to compact mged
database: elliminate "holes" left by the kill and killall commands.
Caveat: when a record cannot be translated by the underlying converters,
i.e., when they skip a record, this too will cause the database to be
compacted.
@


1.2
log
@moved to src/conv/
@
text
@#!/bin/sh

# This shell program compacts mged (.g) databases to remove spaces left
# by the kill/killall commands.  This is achieved by converting the
# database to ASCII and then back to .g format.
# Note: when the converters are unable to convert a solid and it is skipped,
# the conversions will go to completion and a new database --- without those
# solids --- results.  Caveat Emptor.

# Author: Susanne Muuss, J.D.
# Copyright (C), 1991, U.S. Army



# Test to see that two command line arguments are seen: the original
# database name, and a new database name.

if test "$#" -lt 2
then
	echo "Usage: $0 in.g out.g"
	exit 1
fi

# Test to check whether the name of the input database is the same
# as that of the output database.  If so, complain and abort to
# prevent loosing the original database.

if test $1 = $2
then
	echo " $0 ERROR: input and output name must be different"
	exit 1
fi

# Set a temp file to be in /usr/tmp and include the process id.  That
# way, the directory wherein dbclean is invoked need not be writable for
# the user, and also, it prevents a clash if two users compact the same
# database at the same time. Note: TMP=/user.... cannot be written with
# spaces around the equal sign or else the output from the first conversion
# goes to standard out.
# Trap sudden interrupts and clean up any debris left by dbclean at that
# time.

TMP=/usr/tmp/tmp.$$
echo $TMP
rm -f $2
trap "rm -f $TMP; exit 1"  1 2 3 15 

# Check to see that the output file is writeable.  If not, complain and
# abort

if touch $2
then
	eval
else
	echo "$0 ERROR: $2 permission denied"
	exit 1
fi

# Do the conversions with g2asc and asc2g.  If either conversion does
# not succeed, put out an error message and abort.  Finally, at the
# end of the conversion, remove the temporary file.

if g2asc < $1 > $TMP
then
	eval
else
	echo "$0 ERROR: g2asc failed on $1"
	rm -f $TMP
	exit 1
fi

if asc2g < $TMP > $2
then
	eval
else
	echo "$0 ERROR: asc2g failed on $2"
	rm -f $TMP $2
	exit 1
fi

# Now clean up after a successful conversion and exit.

rm -f $TMP
exit 0
@


1.1
log
@Initial revision
@
text
@@

