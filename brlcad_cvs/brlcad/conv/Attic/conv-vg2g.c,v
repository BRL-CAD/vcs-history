head	11.10;
access;
symbols
	ansi-20040405-merged:11.6.2.2
	postmerge-20040405-ansi:11.8
	premerge-20040404-ansi:11.7
	postmerge-autoconf:11.7
	autoconf-freeze:11.6.10.2
	premerge-autoconf:11.7
	ansi-20040316-freeze:11.6.2.1
	postmerge-20040315-windows:11.7
	premerge-20040315-windows:11.7
	windows-20040315-freeze:11.6.4.1
	autoconf-20031203:11.6
	autoconf-20031202:11.6
	autoconf-branch:11.6.0.10
	phong-branch:11.6.0.8
	photonmap-branch:11.6.0.6
	rel-6-1-DP:11.6
	windows-branch:11.6.0.4
	rel-6-0-2:11.4
	ansi-branch:11.6.0.2
	rel-6-0-1-branch:11.4.0.2
	hartley-6-0-post:11.5
	hartley-6-0-pre:11.4
	rel-6-0-1:11.4
	rel-6-0:11.4
	rel-5-4:11.2
	offsite-5-3-pre:11.4
	rel-5-3:11.2
	rel-5-2:11.2
	rel-5-1-branch:11.2.0.2
	rel-5-1:11.2
	rel-5-0:11.2
	rel-5-0-beta:11.2
	rel-4-5:11.1
	ctj-4-5-post:11.1
	ctj-4-5-pre:11.1
	rel-4-4:11.1
	rel-4-0:10.1
	rel-3-5:9.1
	rel-3-0:8.1
	rel-2-3:7.1
	rel-2-0:6.1
	rel-1-24:5.1
	rel-1-20:4.2
	rel-1-10:4.1
	rt-2:1.8;
locks; strict;
comment	@ * @;


11.10
date	2004.05.24.04.16.11;	author morrison;	state dead;
branches;
next	11.9;

11.9
date	2004.05.10.15.30.41;	author erikg;	state Exp;
branches;
next	11.8;

11.8
date	2004.04.05.07.49.36;	author morrison;	state Exp;
branches;
next	11.7;

11.7
date	2004.02.02.17.39.00;	author morrison;	state Exp;
branches;
next	11.6;

11.6
date	2002.08.20.17.07.20;	author jra;	state Exp;
branches
	11.6.2.1
	11.6.4.1
	11.6.10.1;
next	11.5;

11.5
date	2002.08.15.20.54.33;	author hartley;	state Exp;
branches;
next	11.4;

11.4
date	2000.08.24.03.02.41;	author mike;	state Exp;
branches;
next	11.3;

11.3
date	2000.07.10.23.53.55;	author mike;	state Exp;
branches;
next	11.2;

11.2
date	98.06.28.01.53.22;	author mike;	state Exp;
branches;
next	11.1;

11.1
date	95.01.04.09.59.22;	author mike;	state Rel4_4;
branches;
next	10.3;

10.3
date	94.08.10.23.40.22;	author gdurf;	state Exp;
branches;
next	10.2;

10.2
date	94.08.04.20.30.43;	author gdurf;	state Exp;
branches;
next	10.1;

10.1
date	91.10.12.06.41.18;	author mike;	state Rel4_0;
branches;
next	9.3;

9.3
date	90.12.08.05.10.38;	author mike;	state Exp;
branches;
next	9.2;

9.2
date	90.12.07.02.06.45;	author mike;	state Exp;
branches;
next	9.1;

9.1
date	89.05.19.05.46.12;	author mike;	state Rel3_5;
branches;
next	8.2;

8.2
date	88.10.06.03.28.55;	author mike;	state Rel3_0;
branches;
next	8.1;

8.1
date	88.10.05.00.25.33;	author mike;	state Rel3_0;
branches;
next	7.2;

7.2
date	88.05.13.21.30.25;	author mike;	state Exp;
branches;
next	7.1;

7.1
date	87.11.02.23.24.05;	author mike;	state Rel;
branches;
next	6.1;

6.1
date	87.07.11.07.49.42;	author mike;	state Rel;
branches;
next	5.1;

5.1
date	87.06.24.21.48.55;	author mike;	state Rel;
branches;
next	4.2;

4.2
date	87.02.12.22.02.35;	author mike;	state Exp;
branches;
next	4.1;

4.1
date	86.12.29.02.48.25;	author mike;	state Rel1;
branches;
next	1.11;

1.11
date	86.11.18.20.35.10;	author mike;	state Exp;
branches;
next	1.10;

1.10
date	86.08.13.06.25.42;	author mike;	state Exp;
branches;
next	1.9;

1.9
date	86.06.16.20.21.33;	author mike;	state Exp;
branches;
next	1.8;

1.8
date	85.03.11.21.13.46;	author mike;	state Exp;
branches;
next	1.7;

1.7
date	85.03.11.21.04.55;	author mike;	state Exp;
branches;
next	1.6;

1.6
date	85.03.08.20.00.38;	author mike;	state Exp;
branches;
next	1.5;

1.5
date	85.02.22.14.07.56;	author mike;	state Exp;
branches;
next	1.4;

1.4
date	85.02.14.00.23.00;	author mike;	state Exp;
branches;
next	1.3;

1.3
date	85.02.01.01.06.29;	author mike;	state Exp;
branches;
next	1.2;

1.2
date	85.01.16.01.56.51;	author mike;	state Exp;
branches;
next	1.1;

1.1
date	84.11.16.19.49.19;	author mike;	state Exp;
branches;
next	;

11.6.2.1
date	2002.09.19.18.00.35;	author morrison;	state Exp;
branches;
next	11.6.2.2;

11.6.2.2
date	2004.03.17.21.15.54;	author morrison;	state Exp;
branches;
next	;

11.6.4.1
date	2004.03.11.23.40.29;	author morrison;	state Exp;
branches;
next	;

11.6.10.1
date	2004.02.12.19.24.23;	author erikg;	state Exp;
branches;
next	11.6.10.2;

11.6.10.2
date	2004.03.15.14.06.07;	author erikg;	state Exp;
branches;
next	;


desc
@Convert old databases to new format.
@


11.10
log
@moved to src/conv/
@
text
@/*
 *  			C O N V - V G 2 G . C
 *  
 *  Converts .vg files to .g (latest style, with idents).
 *  
 *  Authors -
 *	Mike Muuss, BRL, 5/25/84.
 *	Keith A. Applin
 *  
 *  Source -
 *	SECAD/VLD Computing Consortium, Bldg 394
 *	The U. S. Army Ballistic Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005
 *  
 *  Copyright Notice -
 *	This software is Copyright (C) 1985-2004 by the United States Army.
 *	All rights reserved.
 */
#ifndef lint
static const char RCSid[] = "@@(#)$Header: /n/xoff/cvs/brlcad/conv/conv-vg2g.c,v 11.9 2004/05/10 15:30:41 erikg Exp $ (BRL)";
#endif

#ifdef HAVE_CONFIG_H
# include "config.h"
#endif



#include <stdio.h>
#ifdef USE_STRING_H
#include <string.h>
#else
#include <strings.h>
#endif
#include "machine.h"
#include "externs.h"
#include "db.h"

void	mat_pr(char *title, float *mp);

union record rec;

char line[256];

int
main(int argc, char **argv)
{
	static int ifd, ofd;
	static int units;
	static int count;
	static int i;
	double factor = 1.0;

	if( argc != 3 )  {
		printf("Usage: conv-vg2g file.vg file.g\n");
		exit(11);
	}
	if( (ifd = open( argv[1], 0 )) < 0 )  {
		perror(argv[1]);
		exit(12);
	}
	if( (ofd = creat(argv[2], 0664)) < 0 )  {
		perror(argv[2]);
		exit(13);
	}

	/* check for conversion from version 3 to version 4 */
	read(ifd, &rec, sizeof rec);
	if(rec.u_id == ID_IDENT) {
		/* have an mged type file - check its version */
		if( strcmp(rec.i.i_version, ID_VERSION) == 0 ) {
			(void)printf("%s: NO conversion necessary\n", argv[1]);
			(void)putchar(7);
			exit(0);
		}

		else {
			/* convert from version 3 to version 4 */
			(void)printf("convert from ver 3 to ver 4\n");
			units = ID_IN_UNIT;
			rec.i.i_version[0] = '\0';
			strcpy(rec.i.i_version, ID_VERSION);
		}
	}
	else {
		lseek(ifd, (off_t)0L, 0);
		/* have an old vged file to convert */

		/* units are inportant now because:
		 *	The ged data records will be stored in a constant BASE unit
		 *	of MiliMeters (MM).
		 *	At any time the ged user can change his local units.
		 *    	Hence cv must know the original units of the ".vg" file so
		 *	that they can be converted to BASE units.
		 */
		(void)printf("* *  V E R Y    I M P O R T A N T    N O T I C E  * *\n");
		(void)printf("    You must KNOW the units of the %s file\n",argv[1]);
		(void)printf("    If you don't know, DON'T guess....find out\n");
		(void)putchar( 7 );

		rec.i.i_id = ID_IDENT;
		strcpy( rec.i.i_version, ID_VERSION );
		rec.i.i_units = 100;
		while( rec.i.i_units < ID_MM_UNIT || rec.i.i_units > ID_FT_UNIT )  {
			printf("Units: 1=mm, 2=cm, 3=meters, 4=inches, 5=feet\nUnits? ");
			fgets( line, sizeof(line), stdin );
			sscanf( line, "%d", &units );
			rec.i.i_units = units;
			printf("units=%d\n", rec.i.i_units);
		}
		printf("Title? "); fflush(stdout);
		fgets( line, sizeof(line), stdin );
		line[strlen(line)-1] = '\0';		/* discard \n */
		strncpy( rec.i.i_title, line, 71 );
		rec.i.i_title[71] = '\0';
		printf("Title=%s\n", rec.i.i_title );
	}

	write( ofd, &rec, sizeof rec );
	count = 1;

	/* find the units scale factor */
	switch( units ) {

	case ID_MM_UNIT:
		factor = 1.0;			/* from MM to MM */
		break;

	case ID_CM_UNIT:
		factor = 10.0;			/* from CM to MM */
		break;

	case ID_M_UNIT:
		factor = 1000.0;		/* from M to MM */
		break;

	case ID_IN_UNIT:
		factor = 25.4;			/* from IN to MM */
		break;

	case ID_FT_UNIT:
		factor = 304.8;			/* from FT to MM */
		break;
	default:
		printf("eh?\n");
	}

top:
	while( read( ifd, &rec, sizeof rec ) == sizeof rec )  {
after_read:
		switch( rec.u_id )  {

		case ID_IDENT:
			printf("Unexpected ID record encountered in input\n");
			printf("Title=%s\n", rec.i.i_title );
			break;
		case ID_FREE:
			goto top;
		case ID_SOLID:
			if( rec.s.s_name[0] == '\0' )
				goto top;
			for(i=0; i<24; i++)
				rec.s.s_values[i] *= factor;
			break;
		case ID_COMB:
			if( rec.c.c_name[0] == '\0' )  {
				/* This is an old-style flag for a deleted combination */
				/* Skip any folowing member records */
				do  {
					(void)read( ifd, &rec, sizeof(rec) );
				} while( rec.u_id == ID_MEMB );
				goto after_read;
			}
			break;
		case ID_ARS_B:
			for(i=0; i<24; i++)
				rec.b.b_values[i] *= factor;
			break;
		case ID_ARS_A:
			if( rec.a.a_name[0] == '\0' )  {
				/* Skip deleted junk */
				lseek( ifd, (off_t)(rec.a.a_totlen) *
					(long)(sizeof rec), 1 );
				goto top;
			}
			rec.a.a_xmin *= factor;
			rec.a.a_xmax *= factor;
			rec.a.a_ymin *= factor;
			rec.a.a_ymax *= factor;
			rec.a.a_zmin *= factor;
			rec.a.a_zmax *= factor;
			break;
		case ID_P_HEAD:
		case ID_P_DATA:
			break;

		default:
			printf("Garbage record in database\n");
			exit(42);
		case ID_MEMB:
			/* flip translation to other side */
#define m rec.M.m_mat
			m[3] *= factor;
			m[7] *= factor;
			m[11] *= factor;
			break;
		}
		write( ofd, &rec, sizeof(rec) );
		count++;
	}
	printf("%d database granules written\n", count);
	return 0;
}

void
mat_pr(char *title, float *mp)
{
	register int i;

	printf("MATRIX %s:\n  ", title);
	for(i=0; i<16; i++)  {
		printf(" %8.3f", mp[i]);
		if( (i&3) == 3 ) printf("\n  ");
	}
}
@


11.9
log
@change conf.h to a wrapped config.h
@
text
@d20 1
a20 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/conv/conv-vg2g.c,v 11.8 2004/04/05 07:49:36 morrison Exp $ (BRL)";
@


11.8
log
@merge of ansi-6-0-branch into HEAD
@
text
@d20 1
a20 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
d23 5
a27 1
#include "conf.h"
@


11.7
log
@update copyright to include span through 2003
@
text
@d20 1
a20 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/conv/conv-vg2g.c,v 11.6 2002/08/20 17:07:20 jra Exp $ (BRL)";
d35 1
a35 1
void	mat_pr();
d42 1
a42 3
main(argc, argv)
int argc;
char *argv[];
d212 1
a212 3
mat_pr( title, mp )
char *title;
float *mp;
@


11.6
log
@Restoration of entire source tree to Pre-Hartley state
@
text
@d16 1
a16 1
 *	This software is Copyright (C) 1985 by the United States Army.
d20 1
a20 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/conv/conv-vg2g.c,v 11.4 2000/08/24 03:02:41 mike Exp $ (BRL)";
@


11.6.4.1
log
@sync to HEAD...
@
text
@d16 1
a16 1
 *	This software is Copyright (C) 1985-2004 by the United States Army.
d20 1
a20 1
static const char RCSid[] = "@@(#)$Header: /n/cad/c/CVS/brlcad/conv/conv-vg2g.c,v 11.7 2004/02/02 17:39:00 morrison Exp $ (BRL)";
@


11.6.10.1
log
@merge from HEAD
@
text
@d16 1
a16 1
 *	This software is Copyright (C) 1985-2004 by the United States Army.
d20 1
a20 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/conv/conv-vg2g.c,v 11.7 2004/02/02 17:39:00 morrison Exp $ (BRL)";
@


11.6.10.2
log
@merge from head
@
text
@d20 1
a20 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/conv/conv-vg2g.c,v 11.6.10.1 2004/02/12 19:24:23 erikg Exp $ (BRL)";
@


11.6.2.1
log
@Initial ANSIfication
@
text
@d20 1
a20 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/conv/conv-vg2g.c,v 11.6 2002/08/20 17:07:20 jra Exp $ (BRL)";
d35 1
a35 1
void	mat_pr(char *title, float *mp);
d42 3
a44 1
main(int argc, char **argv)
d214 3
a216 1
mat_pr(char *title, float *mp)
@


11.6.2.2
log
@sync branch with HEAD
@
text
@d16 1
a16 1
 *	This software is Copyright (C) 1985-2004 by the United States Army.
d20 1
a20 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
@


11.5
log
@Converted from K&R to ANSI C - RFH
@
text
@d35 1
a35 1
void	mat_pr(char *title, float *mp);
d42 3
a44 1
main(int argc, char **argv)
d214 3
a216 1
mat_pr(char *title, float *mp)
@


11.4
log
@
lint
@
text
@d20 1
a20 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/conv/conv-vg2g.c,v 11.3 2000/07/10 23:53:55 mike Exp $ (BRL)";
d35 1
a35 1
void	mat_pr();
d42 1
a42 3
main(argc, argv)
int argc;
char *argv[];
d212 1
a212 3
mat_pr( title, mp )
char *title;
float *mp;
@


11.3
log
@
lint
@
text
@d2 1
a2 1
 *  			C V . C
d20 1
a20 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/conv/conv-vg2g.c,v 11.2 1998/06/28 01:53:22 mike Exp $ (BRL)";
d26 5
d41 1
d210 1
@


11.2
log
@Changed gets() to fgets() for safety.
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/conv/conv-vg2g.c,v 11.1 1995/01/04 09:59:22 mike Rel4_4 $ (BRL)";
@


11.1
log
@Release_4.4
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: /m/cad/conv/RCS/conv-vg2g.c,v 10.3 94/08/10 23:40:22 gdurf Exp $ (BRL)";
d98 1
a98 1
			gets( line );
d104 2
a105 1
		gets( line );
@


10.3
log
@Added include of conf.h
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: /m/cad/conv/RCS/conv-vg2g.c,v 10.2 1994/08/04 20:30:43 gdurf Exp gdurf $ (BRL)";
@


10.2
log
@Corrected lseek() to work with off_t instead of long.
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: /m/cad/conv/RCS/conv-vg2g.c,v 10.1 1991/10/12 06:41:18 mike Rel4_0 gdurf $ (BRL)";
d23 2
d27 1
@


10.1
log
@Release_4.0
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: /m/cad/conv/RCS/conv-vg2g.c,v 9.3 90/12/08 05:10:38 mike Exp $ (BRL)";
d75 1
a75 1
		lseek(ifd, 0L, 0);
d170 1
a170 1
				lseek( ifd, (long)(rec.a.a_totlen) *
@


9.3
log
@Because of the subroutine extern's in db.h, now need machine.h
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: /m/cad/conv/RCS/conv-vg2g.c,v 9.2 90/12/07 02:06:45 mike Exp $ (BRL)";
@


9.2
log
@Eliminated use of c_length
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: /m/cad/conv/RCS/conv-vg2g.c,v 9.1 89/05/19 05:46:12 mike Rel3_5 $ (BRL)";
d24 1
@


9.1
log
@Release_3.5
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: conv-vg2g.c,v 8.2 88/10/06 03:28:55 mike Rel3_0 $ (BRL)";
d137 1
d154 6
a159 4
				/* Skip deleted junk */
				lseek( ifd, (long)rec.c.c_length *
					(long)(sizeof rec), 1 );
				goto top;
@


8.2
log
@Fixed case where "factor" could be used before set.
really Rel 3.0
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: conv-vg2g.c,v 8.1 88/10/05 00:25:33 mike Locked $ (BRL)";
@


8.1
log
@Release_3.0
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: conv-vg2g.c,v 7.2 88/05/13 21:30:25 mike Exp $ (BRL)";
d40 1
a40 1
	double factor;
@


7.2
log
@Added exit() from main, fixed declaration on mat_pr();
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: conv-vg2g.c,v 7.1 87/11/02 23:24:05 mike Locked $ (BRL)";
@


7.1
log
@Release 2.3
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: conv-vg2g.c,v 6.1 87/07/11 07:49:42 mike Rel $ (BRL)";
d26 2
d62 1
a62 1
			return;
d198 1
@


6.1
log
@Release 2.0
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: conv-vg2g.c,v 5.1 87/06/24 21:48:55 mike Rel $ (BRL)";
@


5.1
log
@Release 1.24
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: conv-vg2g.c,v 4.2 87/02/12 22:02:35 mike Exp $ (BRL)";
@


4.2
log
@Release 1.20 -- First Formal Release
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: conv-vg2g.c,v 4.1 86/12/29 02:48:25 mike Rel1 $ (BRL)";
@


4.1
log
@BRL CAD Distribution Release 1.10
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: conv-vg2g.c,v 1.11 86/11/18 20:35:10 mike Exp $ (BRL)";
@


1.11
log
@Fixed usage message
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: conv-vg2g.c,v 1.10 86/08/13 06:25:42 mike Locked $ (BRL)";
@


1.10
log
@New #include conventions
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: cv.c,v 1.9 86/06/16 20:21:33 mike Exp $ (BRL)";
d41 1
a41 1
		printf("Usage: cv file.vg file.g\n");
@


1.9
log
@Removed rotation zapping based on advice from
Keith and Ed Davisson.
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: cv.c,v 1.8 85/03/11 21:13:46 mike Exp $ (BRL)";
d24 1
a24 1
#include "../h/db.h"
@


1.8
log
@Revised to use ../h for headers
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: cv.c,v 1.7 85/03/11 21:04:55 mike Exp $ (BRL)";
d183 1
a183 1
			/* Zap rotation part, flip scale */
a184 7
/*mat_pr("before", m); */
			m[0] = 1; m[1] = 0; m[2] = 0;
			m[4] = 0; m[5] = 1; m[6] = 0;
			m[8] = 0; m[9] = 0; m[10] = 1;

			/* m[15] we leave alone */
/*mat_pr("after", m); */
@


1.7
log
@Revised header, added copyright notice.
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header$ (BRL)";
d24 2
a25 2
#include "ged_types.h"
#include "db.h"
@


1.6
log
@KAA fixed lseek problem which lost header.
@
text
@d6 3
a8 1
 *  Quick hack to get underway with MGED.
d10 8
a17 1
 *  Mike Muuss, BRL, 5/25/84.
d19 4
@


1.5
log
@Added lseek to rewind input on old vg files.  (Per Applin, by DPK)
@
text
@d59 1
d61 1
a61 2
		lseek (ifd, 0L, 0);
		
@


1.4
log
@Latest KAA version.  Does old-->new, and v3-->v4.
@
text
@d60 2
a61 1

@


1.3
log
@Added Keith's global/local units code.
@
text
@d40 9
a48 11
	/* units are inportant now because:
	 *	The ged data records will be stored in a constant BASE unit
	 *	of MiliMeters (MM).
	 *	At any time the ged user can change his local units.
	 *    	Hence cv must know the original units of the ".vg" file so
	 *	that they can be converted to BASE units.
	 */
	(void)printf("* *  V E R Y    I M P O R T A N T    N O T I C E  * *\n");
	(void)printf("    You must KNOW the units of the %s file\n",argv[1]);
	(void)printf("    If you don't know, DON'T guess....find out\n");
	(void)putchar( 7 );
d50 34
a83 5
	rec.i.i_id = ID_IDENT;
	strcpy( rec.i.i_version, ID_VERSION );
	rec.i.i_units = 100;
	while( rec.i.i_units < ID_MM_UNIT || rec.i.i_units > ID_FT_UNIT )  {
		printf("Units: 1=mm, 2=cm, 3=meters, 4=inches, 5=feet\nUnits? ");
d85 3
a87 3
		sscanf( line, "%d", &units );
		rec.i.i_units = units;
		printf("units=%d\n", rec.i.i_units);
d89 1
a89 5
	printf("Title? "); fflush(stdout);
	gets( line );
	strncpy( rec.i.i_title, line, 71 );
	rec.i.i_title[71] = '\0';
	printf("Title=%s\n", rec.i.i_title );
@


1.2
log
@pre-Keith version
@
text
@d6 1
a6 1
 *  Quick hack to get underway with the new GED.
d24 2
d39 13
d55 2
a56 2
	while( rec.i.i_units < ID_NO_UNIT || rec.i.i_units > ID_FT_UNIT )  {
		printf("Units: 0=none, 1=mm, 2=cm, 3=meters, 4=inches, 5=feet\nUnits? ");
d70 26
d109 2
d121 2
a122 1
			/* No changes */
d131 6
d155 3
@


1.1
log
@Initial revision
@
text
@d12 1
a12 1
#include "3d.h"
@
