head	11.12;
access;
symbols
	ansi-20040405-merged:11.10.4.1
	postmerge-20040405-ansi:11.11
	premerge-20040404-ansi:11.11
	postmerge-autoconf:11.11
	autoconf-freeze:11.10.12.1
	premerge-autoconf:11.11
	ansi-20040316-freeze:11.10
	postmerge-20040315-windows:11.11
	premerge-20040315-windows:11.11
	windows-20040315-freeze:11.10.6.1
	autoconf-20031203:11.10
	autoconf-20031202:11.10
	autoconf-branch:11.10.0.12
	phong-branch:11.10.0.10
	photonmap-branch:11.10.0.8
	rel-6-1-DP:11.10
	windows-branch:11.10.0.6
	rel-6-0-2:11.10
	ansi-branch:11.10.0.4
	rel-6-0-1-branch:11.10.0.2
	hartley-6-0-post:11.10
	hartley-6-0-pre:11.10
	rel-6-0-1:11.10
	rel-6-0:11.10
	rel-5-4:11.9
	offsite-5-3-pre:11.10
	rel-5-3:11.9
	rel-5-2:11.9
	rel-5-1-branch:11.9.0.2
	rel-5-1:11.9
	rel-5-0:11.8
	rel-5-0-beta:11.8
	rel-4-5:11.8
	ctj-4-5-post:11.8
	ctj-4-5-pre:11.8
	rel-4-4:11.6
	rel-4-0:10.1;
locks; strict;
comment	@ * @;


11.12
date	2004.05.24.04.01.07;	author morrison;	state dead;
branches;
next	11.11;

11.11
date	2004.02.02.17.39.04;	author morrison;	state Exp;
branches;
next	11.10;

11.10
date	2001.02.06.15.13.41;	author jra;	state Exp;
branches
	11.10.4.1
	11.10.6.1
	11.10.12.1;
next	11.9;

11.9
date	2000.03.29.18.42.41;	author mike;	state Exp;
branches;
next	11.8;

11.8
date	95.12.06.13.25.06;	author jra;	state Exp;
branches;
next	11.7;

11.7
date	95.11.28.21.35.45;	author jra;	state Exp;
branches;
next	11.6;

11.6
date	95.01.04.10.07.32;	author mike;	state Rel4_4;
branches;
next	11.5;

11.5
date	94.11.08.14.49.59;	author jra;	state Exp;
branches;
next	11.4;

11.4
date	94.08.22.19.31.40;	author gdurf;	state Exp;
branches;
next	11.3;

11.3
date	93.09.24.16.31.41;	author jra;	state Exp;
branches;
next	11.2;

11.2
date	93.09.17.10.32.38;	author jra;	state Exp;
branches;
next	11.1;

11.1
date	93.06.28.10.00.09;	author jra;	state Exp;
branches;
next	10.1;

10.1
date	91.10.12.06.45.09;	author mike;	state Rel4_0;
branches;
next	1.4;

1.4
date	91.06.14.08.05.45;	author mike;	state Exp;
branches;
next	1.3;

1.3
date	91.06.14.07.24.03;	author mike;	state Exp;
branches;
next	1.2;

1.2
date	91.06.12.20.27.35;	author mike;	state Exp;
branches;
next	1.1;

1.1
date	91.06.12.19.59.08;	author mike;	state Exp;
branches;
next	;

11.10.4.1
date	2004.03.17.21.16.30;	author morrison;	state Exp;
branches;
next	;

11.10.6.1
date	2004.03.11.23.41.13;	author morrison;	state Exp;
branches;
next	;

11.10.12.1
date	2004.02.12.19.41.38;	author erikg;	state Exp;
branches;
next	;


desc
@IGES converter
@


11.12
log
@moved to src/iges/
@
text
@/*
 *  Authors -
 *	John R. Anderson
 *	Susanne L. Muuss
 *	Earl P. Weaver
 *
 *  Source -
 *	VLD/ASB Building 1065
 *	The U. S. Army Ballistic Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005
 *  
 *  Copyright Notice -
 *	This software is Copyright (C) 1990-2004 by the United States Army.
 *	All rights reserved.
 */

#include "./iges_struct.h"
#include "./iges_extern.h"

int
cone( entityno )
int entityno;
{ 
	fastf_t		rad1=0.0;
	fastf_t		rad2;
	point_t		base;		/* center point of base */
	vect_t		hdir;		/* direction in which to grow height */
	fastf_t		scale_height=0.0;
	fastf_t		x1;
	fastf_t		y1;
	fastf_t		z1;
	fastf_t		x2;
	fastf_t		y2;
	fastf_t		z2;
	int		sol_num;		/* IGES solid type number */

	/* Default values */
	x1 = 0.0;
	y1 = 0.0;
	z1 = 0.0;
	x2 = 0.0;
	y2 = 0.0;
	z2 = 1.0;
	rad2 = 0.0;

	/* Acquiring Data */
	if( dir[entityno]->param <= pstart )
	{
		bu_log( "Illegal parameter pointer for entity D%07d (%s)\n" ,
				dir[entityno]->direct , dir[entityno]->name );
		return(0);
	}
	Readrec( dir[entityno]->param );
	Readint( &sol_num , "" );
	Readcnv( &scale_height , "" );
	Readcnv( &rad1 , "" );
	Readcnv( &rad2 , "" );
	Readcnv( &x1 , "" );
	Readcnv( &y1 , "" );
	Readcnv( &z1 , "" );
	Readcnv( &x2 , "" );
	Readcnv( &y2 , "" );
	Readcnv( &z2 , "" );

	if( scale_height <= 0.0 || rad1 < rad2 || rad2 < 0.0 )
	{
		bu_log( "Illegal parameters for entity D%07d (%s)\n" ,
				dir[entityno]->direct , dir[entityno]->name );
		if( scale_height == 0.0 )
		{
			bu_log( "\tCone height is zero!!\n" );
			return( 0 );
		}
		if( rad1 == 0.0 && rad2 == 0.0 )
		{
			bu_log( "\tBoth radii for cone are zero!!!\n" );
			return( 0 );
		}
		if( rad1 < 0.0 )
		{
			bu_log( "\tUsing absloute value of a negative face radius (%f)\n" , rad1 );
			rad1 = (-rad1);
		}
		else if( rad1 == 0.0 )
			rad1 = SMALL_FASTF;

		if( rad2 < 0.0 )
		{
			bu_log( "\tUsing absloute value of a negative face radius (%f)\n" , rad2 );
			rad2 = (-rad2);
		}
		else if( rad2 == 0.0 )
			rad2 = SMALL_FASTF;

		if(scale_height < 0.0 )
		{
			bu_log( "\tUsing absloute value of a negative height (%f)\n" , scale_height );
			bu_log( "\t\tand reversing height direction\n" );
			x2 = (-x2);
			y2 = (-y2);
			z2 = (-z2);
		}
	}


	/*
	 * Making the necessaries. First an id is made for the new entity, then
	 * the x, y, z coordinates for its vertices are converted to a point with
	 * VSET(), and x2, y2, z2 are combined with the scalar height to make a
	 * direction vector.  Now it is necessary to use this information to
	 * construct a, b, c, and d vectors.  These represent the two radius
	 * vectors for the base and the nose respectively.
	 * Finally the libwdb routine that makes an analogous BRL-CAD
	 * solid is called.
	 */

	VSET(base, x1, y1, z1);		/* the center pt of base plate */
	VSET(hdir, x2, y2, z2);
	if( MAGNITUDE(hdir) <= SQRT_SMALL_FASTF )  {
		bu_log("Illegal height vector %g,%g,%g for entity D%07d (%s)\n",
			V3ARGS(hdir),
			dir[entityno]->direct , dir[entityno]->name );
		return(0);
	}
	VUNITIZE(hdir);

	if( mk_cone( fdout, dir[entityno]->name, base, hdir, scale_height, rad1, rad2 ) < 0 )  {
		bu_log("Unable to write entity D%07d (%s)\n",
			dir[entityno]->direct , dir[entityno]->name );
		return(0);
	}
	return( 1 );
} 
@


11.11
log
@update copyright to include span through 2003
@
text
@@


11.10
log
@Mods to get IGES working with new database format (v5)
@
text
@d13 1
a13 1
 *	This software is Copyright (C) 1990 by the United States Army.
@


11.10.4.1
log
@sync branch with HEAD
@
text
@d13 1
a13 1
 *	This software is Copyright (C) 1990-2004 by the United States Army.
@


11.10.6.1
log
@sync to HEAD...
@
text
@d13 1
a13 1
 *	This software is Copyright (C) 1990-2004 by the United States Army.
@


11.10.12.1
log
@merge from HEAD
@
text
@d13 1
a13 1
 *	This software is Copyright (C) 1990-2004 by the United States Army.
@


11.9
log
@
Converted from Release 4 names to know about libbu and libbn
@
text
@d20 1
@


11.8
log
@All logging done via rt_log
@
text
@d48 1
a48 1
		rt_log( "Illegal parameter pointer for entity D%07d (%s)\n" ,
d66 1
a66 1
		rt_log( "Illegal parameters for entity D%07d (%s)\n" ,
d70 1
a70 1
			rt_log( "\tCone height is zero!!\n" );
d75 1
a75 1
			rt_log( "\tBoth radii for cone are zero!!!\n" );
d80 1
a80 1
			rt_log( "\tUsing absloute value of a negative face radius (%f)\n" , rad1 );
d88 1
a88 1
			rt_log( "\tUsing absloute value of a negative face radius (%f)\n" , rad2 );
d96 2
a97 2
			rt_log( "\tUsing absloute value of a negative height (%f)\n" , scale_height );
			rt_log( "\t\tand reversing height direction\n" );
d119 1
a119 1
		rt_log("Illegal height vector %g,%g,%g for entity D%07d (%s)\n",
d127 1
a127 1
		rt_log("Unable to write entity D%07d (%s)\n",
@


11.7
log
@Mods to handle TNURB BREP. Also added RT_EXTERNS to iges_struct.h.
@
text
@d48 1
a48 1
		printf( "Illegal parameter pointer for entity D%07d (%s)\n" ,
d66 1
a66 1
		printf( "Illegal parameters for entity D%07d (%s)\n" ,
d70 1
a70 1
			printf( "\tCone height is zero!!\n" );
d75 1
a75 1
			printf( "\tBoth radii for cone are zero!!!\n" );
d80 1
a80 1
			printf( "\tUsing absloute value of a negative face radius (%f)\n" , rad1 );
d88 1
a88 1
			printf( "\tUsing absloute value of a negative face radius (%f)\n" , rad2 );
d96 2
a97 2
			printf( "\tUsing absloute value of a negative height (%f)\n" , scale_height );
			printf( "\t\tand reversing height direction\n" );
d119 1
a119 1
		printf("Illegal height vector %g,%g,%g for entity D%07d (%s)\n",
d127 1
a127 1
		printf("Unable to write entity D%07d (%s)\n",
@


11.6
log
@Release_4.4
@
text
@a16 6
#include "conf.h"

#include <stdio.h>

#include "machine.h"
#include "vmath.h"
a18 1
#include "wdb.h"
@


11.5
log
@Mods for Irix 6.
@
text
@@


11.4
log
@Factored ifdefs
@
text
@a31 1
	fastf_t		*inp, *outp;
a32 1
	vect_t		height;
a33 4
	vect_t		a, avec;	/* one base radius vector */
	vect_t		b, bvec;	/* another base radius vector */
	vect_t		c, cvec;	/* one nose radius vector */
	vect_t		d, dvec;	/* another nose radius vector */
@


11.3
log
@Fixed error check
@
text
@d17 2
d20 1
@


11.2
log
@ modified to attempt a fix of possible erroneous input.
@
text
@d74 1
a74 1
	if( scale_height <= 0.0 || rad2 < rad1 || rad2 < 0.0 )
@


11.1
log
@Major Upgrade to IGES 5.1
@
text
@d37 1
a37 1
	fastf_t		scale=0.0;
d64 1
a64 1
	Readcnv( &scale , "" );
d74 1
a74 1
	if( scale <= 0.0 || (rad1 <= 0.0 && rad2 <= 0.0) )
d78 34
a111 1
		return(0);
d136 1
a136 1
	if( mk_cone( fdout, dir[entityno]->name, base, hdir, scale, rad1, rad2 ) < 0 )  {
@


10.1
log
@Release_4.0
@
text
@@


1.4
log
@Changed for more modern LIBWBD interface.
Added error checking
@
text
@@


1.3
log
@Changed to use mk_cone
@
text
@d95 6
d103 5
a107 2
	mk_cone( fdout, dir[entityno]->name, base, hdir, scale, rad1, rad2 );

@


1.2
log
@Modified for Release 4.0
@
text
@a44 1
	void		vec_ortho();
d97 1
a97 21
	/* Multiply the hdir * scale to obtain height. */

	VSCALE(height, hdir, scale);

	/* Now make the a, b, c, and d vectors. */

	inp = hdir;
	outp = a;
	vec_ortho(outp, inp);
	VUNITIZE(a);
	VCROSS(b, hdir, a);
	VSCALE(avec, a, rad1);
	VSCALE(bvec, b, rad1);
	outp = c;
	vec_ortho(outp, inp);
	VUNITIZE(c);
	VCROSS(d, hdir, c);
	VSCALE(cvec, c, rad2);
	VSCALE(dvec, d, rad2);
		
	mk_tgc(fdout, dir[entityno]->name, base, height, avec, bvec, cvec, dvec);
@


1.1
log
@Initial revision
@
text
@d18 2
@
