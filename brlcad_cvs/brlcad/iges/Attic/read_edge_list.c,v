head	11.10;
access;
symbols
	ansi-20040405-merged:11.8.6.1
	postmerge-20040405-ansi:11.9
	premerge-20040404-ansi:11.9
	postmerge-autoconf:11.9
	autoconf-freeze:11.8.14.1
	premerge-autoconf:11.9
	ansi-20040316-freeze:11.8
	postmerge-20040315-windows:11.9
	premerge-20040315-windows:11.9
	windows-20040315-freeze:11.8.8.1
	autoconf-20031203:11.8
	autoconf-20031202:11.8
	autoconf-branch:11.8.0.14
	phong-branch:11.8.0.12
	photonmap-branch:11.8.0.10
	rel-6-1-DP:11.8
	windows-branch:11.8.0.8
	rel-6-0-2:11.8
	ansi-branch:11.8.0.6
	rel-6-0-1-branch:11.8.0.4
	hartley-6-0-post:11.8
	hartley-6-0-pre:11.8
	rel-6-0-1:11.8
	rel-6-0:11.8
	rel-5-4:11.8
	offsite-5-3-pre:11.8
	rel-5-3:11.8
	rel-5-2:11.8
	rel-5-1-branch:11.8.0.2
	rel-5-1:11.8
	rel-5-0:11.7
	rel-5-0-beta:11.7
	rel-4-5:11.7
	ctj-4-5-post:11.7
	ctj-4-5-pre:11.7
	rel-4-4:11.5;
locks; strict;
comment	@ * @;


11.10
date	2004.05.24.04.01.09;	author morrison;	state dead;
branches;
next	11.9;

11.9
date	2004.02.02.17.39.05;	author morrison;	state Exp;
branches;
next	11.8;

11.8
date	2000.03.29.18.42.47;	author mike;	state Exp;
branches
	11.8.6.1
	11.8.8.1
	11.8.14.1;
next	11.7;

11.7
date	95.12.06.13.25.06;	author jra;	state Exp;
branches;
next	11.6;

11.6
date	95.11.28.21.35.45;	author jra;	state Exp;
branches;
next	11.5;

11.5
date	95.01.04.10.08.00;	author mike;	state Rel4_4;
branches;
next	11.4;

11.4
date	94.08.26.09.02.00;	author jra;	state Exp;
branches;
next	11.3;

11.3
date	94.08.22.19.31.53;	author gdurf;	state Exp;
branches;
next	11.2;

11.2
date	94.01.07.15.16.11;	author jra;	state Exp;
branches;
next	11.1;

11.1
date	93.06.28.10.09.37;	author jra;	state Exp;
branches;
next	;

11.8.6.1
date	2004.03.17.21.16.33;	author morrison;	state Exp;
branches;
next	;

11.8.8.1
date	2004.03.11.23.41.15;	author morrison;	state Exp;
branches;
next	;

11.8.14.1
date	2004.02.12.19.41.39;	author erikg;	state Exp;
branches;
next	;


desc
@Read an IGES edge list entity
@


11.10
log
@moved to src/iges/
@
text
@/*
 *  Authors -
 *	John R. Anderson
 *
 *  Source -
 *	SLAD/BVLD/VMB
 *	The U. S. Army Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005
 *  
 *  Copyright Notice -
 *	This software is Copyright (C) 1993-2004 by the United States Army.
 *	All rights reserved.
 */

#include "./iges_struct.h"
#include "./iges_extern.h"

struct iges_edge_list *
Read_edge_list( edge )
struct iges_edge_use *edge;
{
	struct iges_edge_list	*edge_list;
	int			entityno;
	int			sol_num;
	int			i;

	entityno = (edge->edge_de - 1)/2;

	/* Acquiring Data */

	if( dir[entityno]->param <= pstart )
	{
		bu_log( "Illegal parameter pointer for entity D%07d (%s)\n" ,
				dir[entityno]->direct , dir[entityno]->name );
		return( (struct iges_edge_list *)NULL );
	}

	Readrec( dir[entityno]->param );
	Readint( &sol_num , "" );
	if( sol_num != 504 )
	{
		/* this is not an edge list entity */
		bu_log( "Read_edge_list: entity at DE %d is not an edge list entity\n" , edge->edge_de );
		return( (struct iges_edge_list *)NULL );
	}

	edge_list = (struct iges_edge_list *)bu_malloc( sizeof( struct iges_edge_list )  ,
			"Read_edge_list: iges_edge_list" );

	edge_list->edge_de = edge->edge_de;
	edge_list->next = NULL;
	Readint( &edge_list->no_of_edges , "" );
	edge_list->i_edge = (struct iges_edge *)bu_calloc( edge_list->no_of_edges , sizeof( struct iges_edge ) ,
			"Read_edge_list: iges_edge" );

	for( i=0 ; i<edge_list->no_of_edges ; i++ )
	{
		Readint( &edge_list->i_edge[i].curve_de , "" );
		Readint( &edge_list->i_edge[i].start_vert_de , "" );
		Readint( &edge_list->i_edge[i].start_vert_index , "" );
		Readint( &edge_list->i_edge[i].end_vert_de , "" );
		Readint( &edge_list->i_edge[i].end_vert_index , "" );
	}

	return( edge_list );
}
@


11.9
log
@update copyright to include span through 2003
@
text
@@


11.8
log
@
Converted from Release 4 names to know about libbu and libbn
@
text
@d11 1
a11 1
 *	This software is Copyright (C) 1993 by the United States Army.
@


11.8.6.1
log
@sync branch with HEAD
@
text
@d11 1
a11 1
 *	This software is Copyright (C) 1993-2004 by the United States Army.
@


11.8.8.1
log
@sync to HEAD...
@
text
@d11 1
a11 1
 *	This software is Copyright (C) 1993-2004 by the United States Army.
@


11.8.14.1
log
@merge from HEAD
@
text
@d11 1
a11 1
 *	This software is Copyright (C) 1993-2004 by the United States Army.
@


11.7
log
@All logging done via rt_log
@
text
@d33 1
a33 1
		rt_log( "Illegal parameter pointer for entity D%07d (%s)\n" ,
d43 1
a43 1
		rt_log( "Read_edge_list: entity at DE %d is not an edge list entity\n" , edge->edge_de );
d47 1
a47 1
	edge_list = (struct iges_edge_list *)rt_malloc( sizeof( struct iges_edge_list )  ,
d53 1
a53 1
	edge_list->i_edge = (struct iges_edge *)rt_calloc( edge_list->no_of_edges , sizeof( struct iges_edge ) ,
@


11.6
log
@Mods to handle TNURB BREP. Also added RT_EXTERNS to iges_struct.h.
@
text
@d33 1
a33 1
		printf( "Illegal parameter pointer for entity D%07d (%s)\n" ,
@


11.5
log
@Release_4.4
@
text
@a14 13
#include "conf.h"

#include <stdio.h>
#ifdef USE_STRING_H
#include <string.h>
#else
#include <string.h>
#endif

#include "machine.h"
#include "vmath.h"
#include "raytrace.h"
#include "wdb.h"
@


11.4
log
@Cleanup.
@
text
@@


11.3
log
@Factored ifdefs
@
text
@d52 1
a52 1
	Readint( &sol_num , "EDGE LIST: " );
d65 1
a65 1
	Readint( &edge_list->no_of_edges , "\tNo of edges: " );
d71 5
a75 6
		printf( "--- Edge index %d:\n" , i+1 );
		Readint( &edge_list->i_edge[i].curve_de , "\t\tCurve DE: " );
		Readint( &edge_list->i_edge[i].start_vert_de , "\t\t\tStart vertex DE: " );
		Readint( &edge_list->i_edge[i].start_vert_index , "\t\t\tStart index: " );
		Readint( &edge_list->i_edge[i].end_vert_de , "\t\t\tEnd vertex DE: " );
		Readint( &edge_list->i_edge[i].end_vert_index , "\t\t\tEnd index: " );
@


11.2
log
@Modified header files
@
text
@d14 3
d18 2
a19 4
#include "machine.h"
#include "vmath.h"
#ifdef BSD
#include <strings.h>
d23 3
@


11.1
log
@Major Upgrade to IGES 5.1
@
text
@d22 2
a25 5
#include "rtlist.h"
#include "rtstring.h"
#include "nmg.h"
#include "raytrace.h"
#include "wdb.h"
d48 1
a48 1
	Readint( &sol_num , "" );
d61 1
a61 1
	Readint( &edge_list->no_of_edges , "" );
d67 6
a72 5
		Readint( &edge_list->i_edge[i].curve_de , "" );
		Readint( &edge_list->i_edge[i].start_vert_de , "" );
		Readint( &edge_list->i_edge[i].start_vert_index , "" );
		Readint( &edge_list->i_edge[i].end_vert_de , "" );
		Readint( &edge_list->i_edge[i].end_vert_index , "" );
@
