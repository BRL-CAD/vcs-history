head	11.12;
access;
symbols
	ansi-20040405-merged:11.10.4.1
	postmerge-20040405-ansi:11.11
	premerge-20040404-ansi:11.11
	postmerge-autoconf:11.11
	autoconf-freeze:11.10.12.1
	premerge-autoconf:11.11
	ansi-20040316-freeze:11.10
	postmerge-20040315-windows:11.11
	premerge-20040315-windows:11.11
	windows-20040315-freeze:11.10.6.1
	autoconf-20031203:11.10
	autoconf-20031202:11.10
	autoconf-branch:11.10.0.12
	phong-branch:11.10.0.10
	photonmap-branch:11.10.0.8
	rel-6-1-DP:11.10
	windows-branch:11.10.0.6
	rel-6-0-2:11.10
	ansi-branch:11.10.0.4
	rel-6-0-1-branch:11.10.0.2
	hartley-6-0-post:11.10
	hartley-6-0-pre:11.10
	rel-6-0-1:11.10
	rel-6-0:11.10
	rel-5-4:11.9.2.1
	offsite-5-3-pre:11.10
	rel-5-3:11.9.2.1
	rel-5-2:11.9
	rel-5-1-branch:11.9.0.2
	rel-5-1:11.9
	rel-5-0:11.8
	rel-5-0-beta:11.8
	rel-4-5:11.8
	ctj-4-5-post:11.8
	ctj-4-5-pre:11.8
	rel-4-4:11.4
	rel-4-0:10.1;
locks; strict;
comment	@ * @;


11.12
date	2004.05.24.04.01.09;	author morrison;	state dead;
branches;
next	11.11;

11.11
date	2004.02.02.17.39.05;	author morrison;	state Exp;
branches;
next	11.10;

11.10
date	2001.02.06.15.13.42;	author jra;	state Exp;
branches
	11.10.4.1
	11.10.6.1
	11.10.12.1;
next	11.9;

11.9
date	2000.03.29.18.42.49;	author mike;	state Exp;
branches
	11.9.2.1;
next	11.8;

11.8
date	97.03.14.20.53.37;	author jra;	state Exp;
branches;
next	11.7;

11.7
date	95.12.06.13.25.06;	author jra;	state Exp;
branches;
next	11.6;

11.6
date	95.11.28.21.35.45;	author jra;	state Exp;
branches;
next	11.5;

11.5
date	95.06.28.15.23.43;	author jra;	state Exp;
branches;
next	11.4;

11.4
date	95.01.04.10.08.09;	author mike;	state Rel4_4;
branches;
next	11.3;

11.3
date	94.11.08.14.50.19;	author jra;	state Exp;
branches;
next	11.2;

11.2
date	94.08.22.19.13.50;	author gdurf;	state Exp;
branches;
next	11.1;

11.1
date	93.06.28.10.10.37;	author jra;	state Exp;
branches;
next	10.1;

10.1
date	91.10.12.06.45.31;	author mike;	state Rel4_0;
branches;
next	1.2;

1.2
date	91.06.12.20.27.56;	author mike;	state Exp;
branches;
next	1.1;

1.1
date	91.06.12.19.59.41;	author mike;	state Exp;
branches;
next	;

11.9.2.1
date	2000.12.26.16.28.28;	author jra;	state Exp;
branches;
next	;

11.10.4.1
date	2004.03.17.21.16.34;	author morrison;	state Exp;
branches;
next	;

11.10.6.1
date	2004.03.11.23.41.16;	author morrison;	state Exp;
branches;
next	;

11.10.12.1
date	2004.02.12.19.41.39;	author erikg;	state Exp;
branches;
next	;


desc
@IGES converter
@


11.12
log
@moved to src/iges/
@
text
@/*
 *  Authors -
 *	John R. Anderson
 *	Susanne L. Muuss
 *	Earl P. Weaver
 *
 *  Source -
 *	VLD/ASB Building 1065
 *	The U. S. Army Ballistic Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005
 *  
 *  Copyright Notice -
 *	This software is Copyright (C) 1990-2004 by the United States Army.
 *	All rights reserved.
 */

/*		Read and construct a boolean tree		*/

#include "./iges_struct.h"
#include "./iges_extern.h"

union tree *Readtree( matp )
mat_t *matp;
{
	int length,i,k,op;
	union tree *ptr,*Pop();
	matp_t new_mat;

	Readint( &i , "" );
	if( i != 180 )
	{
		bu_log( "Expecting a Boolean Tree, found type %d\n" , i );
		return( (union tree *)NULL );
	}

	Freestack();
	Readint( &length , "" );
	for( i=0 ; i<length ; i++ )
	{
		Readint( &op , "" );
		if( op < 0 )	/* This is an operand */
		{
			ptr = (union tree *)bu_malloc( sizeof( union tree ),
				"Readtree: ptr" );
			ptr->magic = RT_TREE_MAGIC;
			ptr->tr_l.tl_op = OP_DB_LEAF;
			k = ((-op)-1)/2;
			if( k < 0 || k >= totentities )
			{
				bu_log( "Readtree(): pointer in tree is out of bounds (%d)\n", -op );
				return( (union tree *)NULL );
			}
			if( dir[k]->type <= 0 )
			{
				bu_log( "Unknown entity type (%d) at D%07d\n", -dir[k]->type, dir[k]->direct );
				return( (union tree *)NULL );
			}
			ptr->tr_l.tl_name = bu_strdup( dir[k]->name );
			if( matp && dir[k]->rot )
			{
				new_mat = (matp_t)bu_malloc( sizeof( mat_t ), "new_mat" );
				bn_mat_mul( new_mat, *matp, *dir[k]->rot );
			}
			else if( dir[k]->rot )
				new_mat = *dir[k]->rot;
			else if( matp )
				new_mat = *matp;
			else
				new_mat = (matp_t)NULL;
			ptr->tr_l.tl_mat = new_mat;
			Push( ptr );
		}
		else	/* This is an operator */
		{
			ptr = (union tree *)bu_malloc( sizeof( union tree ),
				"Readtree: ptr" );
			ptr->magic = RT_TREE_MAGIC;
			switch( op )
			{
				case 1:
					ptr->tr_b.tb_op = OP_UNION;
					break;
				case 2:
					ptr->tr_b.tb_op = OP_INTERSECT;
					break;
				case 3:
					ptr->tr_b.tb_op = OP_SUBTRACT;
					break;
				default:
					bu_log( "Readtree(): illegal operator code (%d)\n", op );
					exit( 1 );
			}
			ptr->tr_b.tb_right = Pop();
			ptr->tr_b.tb_left = Pop();
			Push( ptr );
		}
	}

	return( Pop() );
}

@


11.11
log
@update copyright to include span through 2003
@
text
@@


11.10
log
@Mods to get IGES working with new database format (v5)
@
text
@d13 1
a13 1
 *	This software is Copyright (C) 1990 by the United States Army.
@


11.10.4.1
log
@sync branch with HEAD
@
text
@d13 1
a13 1
 *	This software is Copyright (C) 1990-2004 by the United States Army.
@


11.10.6.1
log
@sync to HEAD...
@
text
@d13 1
a13 1
 *	This software is Copyright (C) 1990-2004 by the United States Army.
@


11.10.12.1
log
@merge from HEAD
@
text
@d13 1
a13 1
 *	This software is Copyright (C) 1990-2004 by the United States Army.
@


11.9
log
@
Converted from Release 4 names to know about libbu and libbn
@
text
@d58 1
a58 1
			ptr->tr_l.tl_name = strdup( dir[k]->name );
@


11.9.2.1
log
@Now uses bu_strdup() instead of strdup() for object names
@
text
@d58 1
a58 1
			ptr->tr_l.tl_name = bu_strdup( dir[k]->name );
@


11.8
log
@Converted to use rt_comb_internal.
@
text
@d32 1
a32 1
		rt_log( "Expecting a Boolean Tree, found type %d\n" , i );
d43 1
a43 1
			ptr = (union tree *)rt_malloc( sizeof( union tree ),
d61 1
a61 1
				new_mat = (matp_t)rt_malloc( sizeof( mat_t ), "new_mat" );
d75 1
a75 1
			ptr = (union tree *)rt_malloc( sizeof( union tree ),
@


11.7
log
@All logging done via rt_log
@
text
@d20 1
d22 2
a23 1
struct node *Readtree()
d25 3
a27 2
	int length,i,op;
	struct node *ptr,*Pop();
d33 1
a33 1
		return( (struct node *)NULL );
d36 1
d43 1
a43 1
			ptr = (struct node *)rt_malloc( sizeof( struct node ),
d45 26
a70 4
			ptr->op = op;
			ptr->left = NULL;
			ptr->right = NULL;
			ptr->parent = NULL;
d75 1
a75 1
			ptr = (struct node *)rt_malloc( sizeof( struct node ),
d77 18
a94 6
			ptr->op = op;
			ptr->right = Pop();
			ptr->left = Pop();
			ptr->parent = NULL;
			ptr->left->parent = ptr;
			ptr->right->parent = ptr;
@


11.6
log
@Mods to handle TNURB BREP. Also added RT_EXTERNS to iges_struct.h.
@
text
@d29 1
a29 1
		fprintf( stderr , "Expecting a Boolean Tree, found type %d\n" , i );
@


11.5
log
@Converted to use rt_malloc family.
@
text
@a18 5
#include "conf.h"

#include <stdio.h>
#include "machine.h"
#include "vmath.h"
@


11.4
log
@Release_4.4
@
text
@d44 2
a45 1
			ptr = (struct node *)malloc( sizeof( struct node ) );
d54 2
a55 1
			ptr = (struct node *)malloc( sizeof( struct node ) );
@


11.3
log
@Mods for Irix 6.
@
text
@@


11.2
log
@Added include of conf.h
@
text
@d28 1
a28 1
	int length,i,op,prop_de,att_de;
@


11.1
log
@Major Upgrade to IGES 5.1
@
text
@d19 2
@


10.1
log
@Release_4.0
@
text
@d26 1
a26 1
	int length,i,op;
d61 1
@


1.2
log
@Modified for Release 4.0
@
text
@@


1.1
log
@Initial revision
@
text
@d20 2
@
