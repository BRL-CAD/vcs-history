head	11.11;
access;
symbols
	ansi-20040405-merged:11.9.4.1
	postmerge-20040405-ansi:11.10
	premerge-20040404-ansi:11.10
	postmerge-autoconf:11.10
	autoconf-freeze:11.9.12.1
	premerge-autoconf:11.10
	ansi-20040316-freeze:11.9
	postmerge-20040315-windows:11.10
	premerge-20040315-windows:11.10
	windows-20040315-freeze:11.9.6.1
	autoconf-20031203:11.9
	autoconf-20031202:11.9
	autoconf-branch:11.9.0.12
	phong-branch:11.9.0.10
	photonmap-branch:11.9.0.8
	rel-6-1-DP:11.9
	windows-branch:11.9.0.6
	rel-6-0-2:11.9
	ansi-branch:11.9.0.4
	rel-6-0-1-branch:11.9.0.2
	hartley-6-0-post:11.9
	hartley-6-0-pre:11.9
	rel-6-0-1:11.9
	rel-6-0:11.9
	rel-5-4:11.8
	offsite-5-3-pre:11.9
	rel-5-3:11.8
	rel-5-2:11.8
	rel-5-1-branch:11.8.0.2
	rel-5-1:11.8
	rel-5-0:11.7
	rel-5-0-beta:11.7
	rel-4-5:11.7
	ctj-4-5-post:11.7
	ctj-4-5-pre:11.7
	rel-4-4:11.3
	rel-4-0:10.1;
locks; strict;
comment	@ * @;


11.11
date	2004.05.24.04.01.08;	author morrison;	state dead;
branches;
next	11.10;

11.10
date	2004.02.02.17.39.04;	author morrison;	state Exp;
branches;
next	11.9;

11.9
date	2000.12.08.16.07.42;	author jra;	state Exp;
branches
	11.9.4.1
	11.9.6.1
	11.9.12.1;
next	11.8;

11.8
date	2000.03.29.18.42.44;	author mike;	state Exp;
branches;
next	11.7;

11.7
date	95.12.08.17.49.39;	author jra;	state Exp;
branches;
next	11.6;

11.6
date	95.12.06.13.25.06;	author jra;	state Exp;
branches;
next	11.5;

11.5
date	95.12.05.22.02.45;	author jra;	state Exp;
branches;
next	11.4;

11.4
date	95.11.28.21.35.45;	author jra;	state Exp;
branches;
next	11.3;

11.3
date	95.01.04.10.07.41;	author mike;	state Rel4_4;
branches;
next	11.2;

11.2
date	94.08.22.19.31.43;	author gdurf;	state Exp;
branches;
next	11.1;

11.1
date	93.06.28.10.01.13;	author jra;	state Exp;
branches;
next	10.1;

10.1
date	91.10.12.06.45.17;	author mike;	state Rel4_0;
branches;
next	1.3;

1.3
date	91.06.23.03.55.41;	author mike;	state Exp;
branches;
next	1.2;

1.2
date	91.06.12.20.27.45;	author mike;	state Exp;
branches;
next	1.1;

1.1
date	91.06.12.19.59.21;	author mike;	state Exp;
branches;
next	;

11.9.4.1
date	2004.03.17.21.16.31;	author morrison;	state Exp;
branches;
next	;

11.9.6.1
date	2004.03.11.23.41.14;	author morrison;	state Exp;
branches;
next	;

11.9.12.1
date	2004.02.12.19.41.38;	author erikg;	state Exp;
branches;
next	;


desc
@IGES converter
@


11.11
log
@moved to src/iges/
@
text
@/*
 *  Authors -
 *	John R. Anderson
 *	Susanne L. Muuss
 *	Earl P. Weaver
 *
 *  Source -
 *	VLD/ASB Building 1065
 *	The U. S. Army Ballistic Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005
 *  
 *  Copyright Notice -
 *	This software is Copyright (C) 1990-2004 by the United States Army.
 *	All rights reserved.
 */

/* This routine reads the last record in the IGES file.
	That record contains the nunber of records in each section.
	These numbers are used to calculate the starting record number
	for the parameter section and the directory section.
	space is then reserved for the directory.  This routine depends on
	"fseek" and "ftell" operating with offsets given in bytes.	*/

#include "./iges_struct.h"
#include "./iges_extern.h"

int
Findp()
{
	int saverec,rec2,i;
	long offset;
	char str[8];

	str[7] = '\0';


	saverec = currec;	/* save current record number */

	if( fseek( fd , 0L , 2 ) )	/* go to end of file */
	{
		bu_log( "Cannot seek to end of file\n" );
		perror( "Findp" );
		exit( 1 );
	}
	offset = ftell( fd );	/* get file length */
	rec2 = offset/reclen;	/* calculate record number for last record */
	Readrec( rec2 );	/* read last record into "card" buffer */
	dstart = 0;
	pstart = 0;
	for( i=0 ; i<3 ; i++ )
	{
		counter++;	/* skip the single letter section ID */
		Readcols( str , 7 );	/* read the number of records in the section */
		pstart += atoi( str );	/* increment pstart */
		if( i == 1 )	/* Global section */
		{
			/* set record number for start of directory section */
			dstart = pstart;
		}
	}

	/* restore current record */
	currec = saverec;
	Readrec( currec );

	/* make space for directory entries */
	totentities = (pstart - dstart)/2;
	if( totentities > 0 )
	{
		dir = (struct iges_directory **)bu_calloc( totentities ,
			sizeof( struct iges_directory *),
			"IGES directory*" );

		for( i=0 ; i<totentities ; i++ )
		{
			dir[i] = (struct iges_directory *)bu_malloc( sizeof( struct iges_directory ) , "IGES directory" );
			dir[i]->name = (char *)NULL;
			dir[i]->trans = (-1);
		}
	}
	else
		totentities = 0;

	dirarraylen = totentities;

	return( pstart );
}

void
Free_dir()
{
	int i;

	for( i=0 ; i<totentities ; i++ )
	{
		if( dir[i]->type == 124 || dir[i]->type == 700 )
			bu_free( (char *)dir[i]->rot, "Free_dir: dir[i]->rot" );
		bu_free( (char *)dir[i], "Free_dir: dir[i]" );
	}

	if( totentities > 0 )
		bu_free( (char *)dir, "Free_dir: dir" );
}
@


11.10
log
@update copyright to include span through 2003
@
text
@@


11.9
log
@Findp() returns an int
@
text
@d13 1
a13 1
 *	This software is Copyright (C) 1990 by the United States Army.
@


11.9.4.1
log
@sync branch with HEAD
@
text
@d13 1
a13 1
 *	This software is Copyright (C) 1990-2004 by the United States Army.
@


11.9.6.1
log
@sync to HEAD...
@
text
@d13 1
a13 1
 *	This software is Copyright (C) 1990-2004 by the United States Army.
@


11.9.12.1
log
@merge from HEAD
@
text
@d13 1
a13 1
 *	This software is Copyright (C) 1990-2004 by the United States Army.
@


11.8
log
@
Converted from Release 4 names to know about libbu and libbn
@
text
@d27 1
@


11.7
log
@Mods to get trimmed surfaces with subfigures working.
@
text
@d40 1
a40 1
		rt_log( "Cannot seek to end of file\n" );
d69 1
a69 1
		dir = (struct iges_directory **)rt_calloc( totentities ,
d75 1
a75 1
			dir[i] = (struct iges_directory *)rt_malloc( sizeof( struct iges_directory ) , "IGES directory" );
d96 2
a97 2
			rt_free( (char *)dir[i]->rot, "Free_dir: dir[i]->rot" );
		rt_free( (char *)dir[i], "Free_dir: dir[i]" );
d101 1
a101 1
		rt_free( (char *)dir, "Free_dir: dir" );
@


11.6
log
@All logging done via rt_log
@
text
@d67 5
a71 4
	dirarraylen = totentities;
	dir = (struct iges_directory **)rt_calloc( totentities ,
		sizeof( struct iges_directory *),
		"IGES directory*" );
d73 6
a78 4
	for( i=0 ; i<totentities ; i++ )
	{
		dir[i] = (struct iges_directory *)rt_malloc( sizeof( struct iges_directory ) , "IGES directory" );
		dir[i]->name = (char *)NULL;
d80 4
d100 2
a101 1
	rt_free( (char *)dir, "Free_dir: dir" );
@


11.5
log
@Checkpoint in mods for handling assemblies (subfigures).
@
text
@d40 1
a40 1
		fprintf( stderr , "Cannot seek to end of file\n" );
@


11.4
log
@Mods to handle TNURB BREP. Also added RT_EXTERNS to iges_struct.h.
@
text
@d80 15
@


11.3
log
@Release_4.4
@
text
@a23 7
#include "conf.h"

#include <stdio.h>
#include <errno.h>

#include "machine.h"
#include "vmath.h"
@


11.2
log
@Factored ifdefs
@
text
@@


11.1
log
@Major Upgrade to IGES 5.1
@
text
@d24 2
d27 2
a32 2

extern int errno;
@


10.1
log
@Release_4.0
@
text
@d73 4
a76 7
	dir = (struct iges_directory **)malloc( totentities*sizeof( struct iges_directory *) );
	if( dir == NULL )
	{
		fprintf( stderr , "Cannot allocate space for directory\n" );
		perror( "Findp" );
		exit( 1 );
	}
d79 2
a80 8
		dir[i] = (struct iges_directory *)malloc( sizeof( struct iges_directory ) );
		if( dir[i] == NULL )
		{
			fprintf( stderr , "Cannot allocate space for entire directory\n" );
			fprintf( stderr , "\t there is space for %d out of the total %d entities\n" , i , totentities );
			perror( "Findp" );
			exit( 1 );
		}
@


1.3
log
@Changed struct directory to struct iges_directory, to
avoid conflict with raytrace.h
INFINITY now defined in raytrace.h
 
 
@
text
@@


1.2
log
@Modified for Release 4.0
@
text
@d73 1
a73 1
	dir = (struct directory **)malloc( totentities*sizeof( struct directory *) );
d82 1
a82 1
		dir[i] = (struct directory *)malloc( sizeof( struct directory ) );
@


1.1
log
@Initial revision
@
text
@d25 2
@
