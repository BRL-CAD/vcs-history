head	11.27;
access;
symbols
	ansi-20040405-merged:11.25.4.1
	postmerge-20040405-ansi:11.26
	premerge-20040404-ansi:11.26
	postmerge-autoconf:11.26
	autoconf-freeze:11.25.12.2
	premerge-autoconf:11.26
	ansi-20040316-freeze:11.25
	postmerge-20040315-windows:11.26
	premerge-20040315-windows:11.26
	windows-20040315-freeze:11.25.6.1
	autoconf-20031203:11.25
	autoconf-20031202:11.25
	autoconf-branch:11.25.0.12
	phong-branch:11.25.0.10
	photonmap-branch:11.25.0.8
	rel-6-1-DP:11.25
	windows-branch:11.25.0.6
	rel-6-0-2:11.25
	ansi-branch:11.25.0.4
	rel-6-0-1-branch:11.25.0.2
	hartley-6-0-post:11.25
	hartley-6-0-pre:11.25
	rel-6-0-1:11.25
	rel-6-0:11.25
	rel-5-4:11.18.2.1
	offsite-5-3-pre:11.22
	rel-5-3:11.18.2.1
	rel-5-2:11.18
	rel-5-1-branch:11.18.0.2
	rel-5-1:11.18
	rel-5-0:11.17
	rel-5-0-beta:11.17
	rel-4-5:11.15
	ctj-4-5-post:11.15
	ctj-4-5-pre:11.15
	rel-4-4:11.8
	rel-4-0:10.1;
locks; strict;
comment	@ * @;


11.27
date	2004.05.24.04.01.08;	author morrison;	state dead;
branches;
next	11.26;

11.26
date	2004.02.02.17.39.05;	author morrison;	state Exp;
branches;
next	11.25;

11.25
date	2001.08.08.20.25.12;	author jra;	state Exp;
branches
	11.25.4.1
	11.25.6.1
	11.25.12.1;
next	11.24;

11.24
date	2001.05.17.20.05.03;	author morrison;	state Exp;
branches;
next	11.23;

11.23
date	2001.03.19.22.19.30;	author butler;	state Exp;
branches;
next	11.22;

11.22
date	2001.02.06.15.13.42;	author jra;	state Exp;
branches;
next	11.21;

11.21
date	2000.08.24.22.52.56;	author mike;	state Exp;
branches;
next	11.20;

11.20
date	2000.08.24.04.10.48;	author mike;	state Exp;
branches;
next	11.19;

11.19
date	2000.07.20.15.35.26;	author jra;	state Exp;
branches;
next	11.18;

11.18
date	2000.03.29.18.42.46;	author mike;	state Exp;
branches
	11.18.2.1;
next	11.17;

11.17
date	99.02.12.15.03.48;	author jra;	state Exp;
branches;
next	11.16;

11.16
date	98.05.12.18.31.50;	author jra;	state Exp;
branches;
next	11.15;

11.15
date	97.01.08.02.57.20;	author mike;	state Exp;
branches;
next	11.14;

11.14
date	95.12.08.17.49.39;	author jra;	state Exp;
branches;
next	11.13;

11.13
date	95.12.06.13.25.06;	author jra;	state Exp;
branches;
next	11.12;

11.12
date	95.12.05.22.02.45;	author jra;	state Exp;
branches;
next	11.11;

11.11
date	95.11.28.21.35.45;	author jra;	state Exp;
branches;
next	11.10;

11.10
date	95.06.28.15.23.43;	author jra;	state Exp;
branches;
next	11.9;

11.9
date	95.01.11.11.37.41;	author jra;	state Exp;
branches;
next	11.8;

11.8
date	95.01.04.10.07.54;	author mike;	state Rel4_4;
branches;
next	11.7;

11.7
date	94.10.14.10.52.34;	author jra;	state Exp;
branches;
next	11.6;

11.6
date	94.10.12.08.14.28;	author jra;	state Exp;
branches;
next	11.5;

11.5
date	94.08.26.09.05.19;	author jra;	state Exp;
branches;
next	11.4;

11.4
date	94.08.22.19.31.50;	author gdurf;	state Exp;
branches;
next	11.3;

11.3
date	94.08.22.18.55.10;	author gdurf;	state Exp;
branches;
next	11.2;

11.2
date	93.09.24.10.16.22;	author jra;	state Exp;
branches;
next	11.1;

11.1
date	93.06.28.10.06.48;	author jra;	state Exp;
branches;
next	10.1;

10.1
date	91.10.12.06.45.21;	author mike;	state Rel4_0;
branches;
next	1.4;

1.4
date	91.06.23.03.55.42;	author mike;	state Exp;
branches;
next	1.3;

1.3
date	91.06.14.08.06.07;	author mike;	state Exp;
branches;
next	1.2;

1.2
date	91.06.12.20.27.47;	author mike;	state Exp;
branches;
next	1.1;

1.1
date	91.06.12.19.59.08;	author mike;	state Exp;
branches;
next	;

11.18.2.1
date	2001.01.08.02.57.24;	author jra;	state Exp;
branches;
next	;

11.25.4.1
date	2004.03.17.21.16.32;	author morrison;	state Exp;
branches;
next	;

11.25.6.1
date	2004.03.11.23.41.14;	author morrison;	state Exp;
branches;
next	;

11.25.12.1
date	2004.02.12.19.41.39;	author erikg;	state Exp;
branches;
next	11.25.12.2;

11.25.12.2
date	2004.03.15.14.06.12;	author erikg;	state Exp;
branches;
next	;


desc
@IGES converter
@


11.27
log
@moved to src/iges/
@
text
@/*
 *			I G E S - G / M A I N . C
 *
 *  Authors -
 *	John R. Anderson
 *	Susanne L. Muuss
 *	Earl P. Weaver
 *
 *  Source -
 *	VLD/ASB Building 1065
 *	The U. S. Army Ballistic Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005
 *  
 *  Copyright Notice -
 *	This software is Copyright (C) 1990-2004 by the United States Army.
 *	All rights reserved.
 */
#ifndef lint
static const char RCSid[] = "@@(#)$Header: /n/xoff/cvs/brlcad/iges/main.c,v 11.26 2004/02/02 17:39:05 morrison Exp $ (BRL)";
#endif

#include "./iges_struct.h"
#include "./iges_types.h"
#include "../librt/debug.h"

extern char *optarg;
extern int optind, opterr, optopt;

int do_projection=1;
char eor,eof,card[256];
fastf_t scale,inv_scale,conv_factor;
int units,counter,pstart,dstart,totentities,dirarraylen;
FILE *fd;
struct rt_wdb *fdout;
char brlcad_file[256];
int reclen,currec,ntypes;
int brlcad_att_de=0;
struct iges_directory **dir;
struct reglist *regroot;
struct iges_edge_list *edge_root;
struct iges_vertex_list *vertex_root;
struct bn_tol tol;
char *solid_name=(char *)NULL;
struct file_list iges_list;
struct file_list *curr_file;
struct name_list *name_root;

char operator[]={
	' ',
	'u',
	'+',
	'-' };

mat_t *identity;

extern char	version[];

static int do_splines=0;
static int do_drawings=0;
static int trimmed_surf=0;
int do_bots=1;

static char *iges_file;

static char *msg1=
"\nThis IGES file contains solid model entities, but your options do not permit\n\
converting them to BRL-CAD. You may want to try 'iges-g -o file.g %s' to\n\
convert the solid model elements\n";

static char *msg2=
"\nThis IGES file contains drawing entities, but no solid model entities. You may\n\
convert the drawing to BRL-CAD by 'iges-g -d -o file.g %s'. Note that the resulting\n\
BRL-CAD object will be a 2D drawing, not a solid object. You might also try the\n\
'-3' option to get 3D drawings\n";

static char *msg3=
"\nThis IGES file contains spline surfaces, but no solid model entities. All the spline\n\
surfaces in the IGES file may be combined into a single BRL-CAD spline solid by\n\
'iges-g -n -o file.g %s'\n";

static char *msg4=
"\nThis IGES file contains trimmed surfaces, but no solid model entities.\n\
Try the '-t' option to convert all the trimmed surfaces into one BRL-CAD solid.\n\
'iges-g -t -o file.g %s'\n";

void
Suggestions()
{
	int i;
	int csg=0;
	int brep=0;
	int splines=0;
	int tsurfs=0;
	int drawing=0;

	/* categorize the elements in the IGES file as to whether they are
	 * CSG, BREP, Trimmed surfaces, Spline surfaces, or drawing elements
	 */
	for( i=0 ; i<NTYPES ; i++ )
	{
		if( (typecount[i].type >= 150 && typecount[i].type <= 184) ||
		    typecount[i].type == 430 )
			csg += typecount[i].count;
		else if( typecount[i].type == 186 ||
			 (typecount[i].type >= 502 && typecount[i].type <=514) )
			brep += typecount[i].count;
		else if( typecount[i].type == 128 )
			splines += typecount[i].count;
		else if( typecount[i].type == 144 )
			tsurfs += typecount[i].count;
		else if( (typecount[i].type >= 100 && typecount[i].type <= 112) ||
			 typecount[i].type == 126 ||
			 (typecount[i].type >= 202 && typecount[i].type <= 230) ||
			 typecount[i].type == 404 || typecount[i].type == 410 )
			drawing += typecount[i].count;
	}

	if( (csg || brep) && (do_splines || do_drawings || trimmed_surf ) )
		bu_log( msg1 , iges_file );

	if( drawing && csg == 0 && brep == 0 && !do_drawings )
		bu_log( msg2 , iges_file );

	if( splines && csg == 0 && brep == 0 && !do_splines )
		bu_log( msg3 , iges_file );

	if( tsurfs && csg == 0 && brep == 0 && !trimmed_surf )
		bu_log( msg4 , iges_file );
}

int
main( argc , argv )
int argc;
char *argv[];
{
	int i;
	int c;
	int file_count=0;
	char *output_file=(char *)NULL;


	while( (c=getopt( argc , argv , "3dntpo:x:X:N:" )) != EOF )
	{
		switch( c )
		{
			case '3':
				do_drawings = 1;
				do_projection = 0;
				break;
			case 'd':
				do_drawings = 1;
				break;
			case 'n':
				do_splines = 1;
				break;
			case 'o':
				output_file = optarg;
				break;
			case 't':
				trimmed_surf = 1;
				break;
			case 'p':
				do_bots = 0;
				break;
			case 'N':
				solid_name = optarg;
				break;
			case 'x':
				sscanf( optarg, "%x", (unsigned int *)&rt_g.debug );
				if( RT_G_DEBUG & DEBUG_MEM )
					bu_debug |= BU_DEBUG_MEM_LOG;
				if( RT_G_DEBUG & DEBUG_MEM_FULL )
					bu_debug |= BU_DEBUG_MEM_CHECK;
				break;
			case 'X':
				sscanf( optarg, "%x", (unsigned int *)&rt_g.NMG_debug );
				break;
			default:
				usage();
				exit(1);
				break;
		}
	}

	if (optind >= argc || output_file == (char *)NULL || do_drawings+do_splines+trimmed_surf > 1) {
		usage();
		exit(1);
	}

	if( bu_debug & BU_DEBUG_MEM_CHECK )
	{
		bu_log( "Memory checking enabled\n" );
		bu_mem_barriercheck();
	}

	bu_log( "%s", version+5);
	bu_log( "Please direct bug reports to <jra@@brl.mil>\n\n" );

	/* Initialize some variables */
	ntypes = NTYPES;
	regroot = NULL;
	edge_root = NULL;
	vertex_root = NULL;
	name_root = NULL;
	tol.magic = BN_TOL_MAGIC;
	tol.dist = 0.005;
	tol.dist_sq = tol.dist * tol.dist;
	tol.perp = 1e-6;
	tol.para = 1 - tol.perp;

	Initstack();	/* Initialize node stack */

	identity = (mat_t *)bu_malloc( sizeof( mat_t ), "main: identity" );
	for( i=0 ; i<16 ; i++ )
	{
		if( !(i%5) )
			(*identity)[i] = 1.0;
		else
			(*identity)[i] = 0.0;
	}

	if( (fdout = wdb_fopen( output_file )) == NULL )
	{
		bu_log( "Cannot open %s\n" , output_file );
		perror( "iges-g" );
		usage();
		exit( 1 );
	}
	strcpy( brlcad_file ,  output_file );

	argc -= optind;
	argv += optind;

	BU_LIST_INIT( &iges_list.l );
	curr_file = (struct file_list *)bu_malloc( sizeof( struct file_list ), "iges-g: curr_file" );
	if( solid_name )
		strcpy( curr_file->obj_name, Make_unique_brl_name( solid_name ) );
	else
		strcpy( curr_file->obj_name, Make_unique_brl_name( "all" ) );

	curr_file->file_name = (char *)bu_malloc( strlen( argv[0] ) + 1, "iges-g: curr_file->file_name" );
	strcpy( curr_file->file_name, argv[0] );
	BU_LIST_APPEND( &iges_list.l, &curr_file->l );

	while( BU_LIST_NON_EMPTY( &iges_list.l ) )
	{
		if( RT_G_DEBUG & DEBUG_MEM_FULL )
			bu_mem_barriercheck();

		curr_file = BU_LIST_FIRST( file_list, &iges_list.l );
		iges_file = curr_file->file_name;

		fd = fopen( iges_file , "r" );	/* open IGES file */
		if( fd == NULL )
		{
			bu_log( "Cannot open %s\n" , iges_file );
			perror( "iges-g" );
			usage();
			exit( 1 );
		}

		bu_log( "\n\n\nIGES FILE: %s\n", iges_file );

		reclen = Recsize() * sizeof( char ); /* Check length of records */
		if( reclen == 0 )
		{
			bu_log( "File (%s) not in IGES ASCII format\n", iges_file );
			exit(1);
		}

		Freestack();	/* Set node stack to empty */

		Zero_counts();	/* Set summary information to all zeros */

		Readstart();	/* Read start section */

		Readglobal( file_count);	/* Read global section */

		pstart = Findp();	/* Find start of parameter section */

		Makedir();	/* Read directory section and build a linked list of entries */

		Summary();	/* Print a summary of what is in the IGES file */

		Docolor();	/* Get color info from color definition entities */

		Get_att();	/* Look for a BRLCAD attribute definition */

		Evalxform();	/* Accumulate the transformation matrices */

		Check_names();	/* Look for name entities */

		if( do_drawings )
			Conv_drawings();	/* convert drawings to wire edges */
		else if( trimmed_surf )
		{
			Do_subfigs();		/* Look for Singular Subfigure Instances */

			Convtrimsurfs();	/* try to convert trimmed surfaces to a single solid */
		}
		else if( do_splines )
			Convsurfs();		/* Convert NURBS to a single solid */
		else
		{
			Convinst();	/* Handle Instances */

			Convsolids();	/* Convert solid entities */

			Convtree();	/* Convert Boolean Trees */

			Convassem();	/* Convert solid assemblies */
		}

		if( RT_G_DEBUG & DEBUG_MEM_FULL )
			bu_mem_barriercheck();

		Free_dir();

		if( RT_G_DEBUG & DEBUG_MEM_FULL )
			bu_mem_barriercheck();

		BU_LIST_DEQUEUE( &curr_file->l );
		bu_free( (char *)curr_file->file_name, "iges-g: curr_file->file_name" );
		bu_free( (char *)curr_file, "iges-g: curr_file" );
		file_count++;

		if( RT_G_DEBUG & DEBUG_MEM_FULL )
			bu_mem_barriercheck();

	}

	iges_file = argv[0];
	Suggestions();
	return 0;
}
@


11.26
log
@update copyright to include span through 2003
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/iges/main.c,v 11.25 2001/08/08 20:25:12 jra Exp $ (BRL)";
@


11.25
log
@Lint
@
text
@d15 1
a15 1
 *	This software is Copyright (C) 1990 by the United States Army.
d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/iges/main.c,v 11.24 2001/05/17 20:05:03 morrison Exp $ (BRL)";
@


11.25.4.1
log
@sync branch with HEAD
@
text
@d15 1
a15 1
 *	This software is Copyright (C) 1990-2004 by the United States Army.
d19 1
a19 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
@


11.25.6.1
log
@sync to HEAD...
@
text
@d15 1
a15 1
 *	This software is Copyright (C) 1990-2004 by the United States Army.
d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /n/cad/c/CVS/brlcad/iges/main.c,v 11.26 2004/02/02 17:39:05 morrison Exp $ (BRL)";
@


11.25.12.1
log
@merge from HEAD
@
text
@d15 1
a15 1
 *	This software is Copyright (C) 1990-2004 by the United States Army.
d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/iges/main.c,v 11.26 2004/02/02 17:39:05 morrison Exp $ (BRL)";
@


11.25.12.2
log
@merge from head
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/iges/main.c,v 11.25.12.1 2004/02/12 19:41:39 erikg Exp $ (BRL)";
@


11.24
log
@rt_g.debug -> RT_G_DEBUG
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/iges/main.c,v 11.23 2001/03/19 22:19:30 butler Exp $ (BRL)";
d169 1
a169 1
				sscanf( optarg, "%x", &rt_g.debug );
d176 1
a176 1
				sscanf( optarg, "%x", &rt_g.NMG_debug );
@


11.23
log
@patches to merge 5.3 into 6.0
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /d/CVS/brlcad/iges/main.c,v 11.22 2001/02/06 15:13:42 jra Exp $ (BRL)";
d170 1
a170 1
				if( rt_g.debug & DEBUG_MEM )
d172 1
a172 1
				if( rt_g.debug & DEBUG_MEM_FULL )
d247 1
a247 1
		if( rt_g.debug & DEBUG_MEM_FULL )
d314 1
a314 1
		if( rt_g.debug & DEBUG_MEM_FULL )
d319 1
a319 1
		if( rt_g.debug & DEBUG_MEM_FULL )
d327 1
a327 1
		if( rt_g.debug & DEBUG_MEM_FULL )
@


11.22
log
@Mods to get IGES working with new database format (v5)
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/iges/main.c,v 11.21 2000/08/24 22:52:56 mike Exp $ (BRL)";
d61 1
a61 1
int do_bots=0;
d142 1
a142 1
	while( (c=getopt( argc , argv , "3dntbo:x:X:N:" )) != EOF )
d162 2
a163 2
			case 'b':
				do_bots = 1;
@


11.21
log
@
lint
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/iges/main.c,v 11.20 2000/08/24 04:10:48 mike Exp $ (BRL)";
d61 1
a61 1
int do_polysolids=0;
d141 2
a142 1
	while( (c=getopt( argc , argv , "3dntpo:x:X:N:" )) != EOF )
d162 2
a163 2
			case 'p':
				do_polysolids = 1;
d190 3
a192 1
	if( rt_g.debug & DEBUG_MEM_FULL )
d194 1
@


11.20
log
@
mk_addmember
RCSid
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/iges/main.c,v 11.19 2000/07/20 15:35:26 jra Exp $ (BRL)";
d101 1
a101 1
		if( typecount[i].type >= 150 && typecount[i].type <= 184 ||
d105 1
a105 1
			 typecount[i].type >= 502 && typecount[i].type <=514 )
d111 1
a111 1
		else if( typecount[i].type >= 100 && typecount[i].type <= 112 ||
d113 1
a113 1
			 typecount[i].type >= 202 && typecount[i].type <= 230 ||
d131 1
d330 1
@


11.19
log
@Converted to using wdb_fopen()
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/iges/main.c,v 11.18 2000/03/29 18:42:46 mike Exp $ (BRL)";
@


11.18
log
@
Converted from Release 4 names to know about libbu and libbn
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/iges/main.c,v 11.17 1999/02/12 15:03:48 jra Exp $ (BRL)";
d33 2
a34 1
FILE *fd,*fdout;
d217 1
a217 1
	if( (fdout = fopen( output_file , "w" )) == NULL )
@


11.18.2.1
log
@BOT's are now the default for BREP
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/iges/main.c,v 11.18 2000/03/29 18:42:46 mike Exp $ (BRL)";
d60 1
a60 1
int do_polysolids=1;
d160 1
a160 1
				do_polysolids = 0;
@


11.17
log
@Fixed a bug in readflt.c and added -3 option.
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/iges/main.c,v 11.16 1998/05/12 18:31:50 jra Exp $ (BRL)";
d41 1
a41 1
struct rt_tol tol;
d118 1
a118 1
		rt_log( msg1 , iges_file );
d121 1
a121 1
		rt_log( msg2 , iges_file );
d124 1
a124 1
		rt_log( msg3 , iges_file );
d127 1
a127 1
		rt_log( msg4 , iges_file );
d188 1
a188 1
		rt_mem_barriercheck();
d190 2
a191 2
	rt_log( "%s", version+5);
	rt_log( "Please direct bug reports to <jra@@brl.mil>\n\n" );
d199 1
a199 1
	tol.magic = RT_TOL_MAGIC;
d207 1
a207 1
	identity = (mat_t *)rt_malloc( sizeof( mat_t ), "main: identity" );
d218 1
a218 1
		rt_log( "Cannot open %s\n" , output_file );
d228 2
a229 2
	RT_LIST_INIT( &iges_list.l );
	curr_file = (struct file_list *)rt_malloc( sizeof( struct file_list ), "iges-g: curr_file" );
d235 1
a235 1
	curr_file->file_name = (char *)rt_malloc( strlen( argv[0] ) + 1, "iges-g: curr_file->file_name" );
d237 1
a237 1
	RT_LIST_APPEND( &iges_list.l, &curr_file->l );
d239 1
a239 1
	while( RT_LIST_NON_EMPTY( &iges_list.l ) )
d242 1
a242 1
			rt_mem_barriercheck();
d244 1
a244 1
		curr_file = RT_LIST_FIRST( file_list, &iges_list.l );
d250 1
a250 1
			rt_log( "Cannot open %s\n" , iges_file );
d256 1
a256 1
		rt_log( "\n\n\nIGES FILE: %s\n", iges_file );
d261 1
a261 1
			rt_log( "File (%s) not in IGES ASCII format\n", iges_file );
d309 1
a309 1
			rt_mem_barriercheck();
d314 1
a314 1
			rt_mem_barriercheck();
d316 3
a318 3
		RT_LIST_DEQUEUE( &curr_file->l );
		rt_free( (char *)curr_file->file_name, "iges-g: curr_file->file_name" );
		rt_free( (char *)curr_file, "iges-g: curr_file" );
d322 1
a322 1
			rt_mem_barriercheck();
@


11.16
log
@added bu_debug.
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/iges/RCS/main.c,v 11.15 1997/01/08 02:57:20 mike Exp jra $ (BRL)";
d29 1
d72 2
a73 1
BRL-CAD object will be a 2D drawing, not a solid object\n";
d139 1
a139 1
	while( (c=getopt( argc , argv , "dntpo:x:X:N:" )) != EOF )
d143 4
@


11.15
log
@Used relative path on #include
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/iges/RCS/main.c,v 11.14 1995/12/08 17:49:39 jra Exp mike $ (BRL)";
d80 2
a81 3
A '-t' option for 'iges-g' is under construction that will eventually allow you\n\
to convert all the trimmed surfaces in an IGES file into one BRL-CAD solid.\n\
Sorry this isn't complete yet.\n";
d161 4
@


11.14
log
@Mods to get trimmed surfaces with subfigures working.
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/iges/RCS/main.c,v 11.13 1995/12/06 13:25:06 jra Exp $ (BRL)";
d24 1
a24 1
#include "/m/cad/librt/debug.h"
@


11.13
log
@All logging done via rt_log
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/iges/RCS/main.c,v 11.12 1995/12/05 22:02:45 jra Exp jra $ (BRL)";
d24 1
d178 3
d232 3
d247 2
d258 2
a277 2
		Do_subfigs();	/* Look for Singular Subfigure Instances */

d281 3
d285 1
d299 3
d304 3
d311 4
@


11.12
log
@Checkpoint in mods for handling assemblies (subfigures).
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/iges/RCS/main.c,v 11.11 1995/11/28 21:35:45 jra Exp jra $ (BRL)";
d116 1
a116 1
		printf( msg1 , iges_file );
d119 1
a119 1
		printf( msg2 , iges_file );
d122 1
a122 1
		printf( msg3 , iges_file );
d125 1
a125 1
		printf( msg4 , iges_file );
d177 2
a178 2
	printf( "%s", version+5);
	printf( "Please direct bug reports to <jra@@brl.mil>\n\n" );
d205 1
a205 1
		fprintf( stderr , "Cannot open %s\n" , output_file );
d234 1
a234 1
			fprintf( stderr , "Cannot open %s\n" , iges_file );
d243 1
a243 1
			fprintf( stderr , "File (%s) not in IGES ASCII format\n", iges_file );
@


11.11
log
@Mods to handle TNURB BREP. Also added RT_EXTERNS to iges_struct.h.
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/iges/RCS/main.c,v 11.10 1995/06/28 15:23:43 jra Exp jra $ (BRL)";
d41 3
d134 1
d185 1
d192 4
a195 5
	argc -= optind;
	argv += optind;
	iges_file = argv[0];
	fd = fopen( argv[0] , "r" );	/* open IGES file */
	if( fd == NULL )
d197 4
a200 4
		fprintf( stderr , "Cannot open %s\n" , argv[0] );
		perror( "iges-g" );
		usage();
		exit( 1 );
d212 15
a226 2
	reclen = Recsize() * sizeof( char ); /* Check length of records */
	if( reclen == 0 )
d228 22
a249 3
		fprintf( stderr , "File not in IGES ASCII format\n" );
		exit(1);
	}
d251 1
a251 8
	identity = (mat_t *)rt_malloc( sizeof( mat_t ), "main: identity" );
	for( i=0 ; i<16 ; i++ )
	{
		if( !(i%5) )
			(*identity)[i] = 1.0;
		else
			(*identity)[i] = 0.0;
	}
d253 1
a253 1
	Initstack();	/* Initialize node stack */
d255 1
a255 1
	Readstart();	/* Read start section */
d257 1
a257 1
	Readglobal();	/* Read global section */
d259 1
a259 1
	pstart = Findp();	/* Find start of parameter section */
d261 1
a261 1
	Makedir();	/* Read directory section and build a linked list of entries */
d263 1
a263 1
	Summary();	/* Print a summary of what is in the IGES file */
d265 1
a265 1
	Docolor();	/* Get color info from color definition entities */
d267 1
a267 1
	Get_att();	/* Look for a BRLCAD attribute definition */
d269 9
a277 1
	Evalxform();	/* Accumulate the transformation matrices */
d279 1
a279 1
	Check_names();	/* Look for name entities */
d281 1
a281 9
	if( do_drawings )
		Conv_drawings();	/* convert drawings to wire edges */
	else if( trimmed_surf )
		Convtrimsurfs();	/* try to convert trimmed surfaces to a single solid */
	else if( do_splines )
		Convsurfs();		/* Convert NURBS to a single solid */
	else
	{
		Convinst();	/* Handle Instances */
d283 2
a284 1
		Convsolids();	/* Convert solid entities */
d286 1
a286 1
		Convtree();	/* Convert Boolean Trees */
d288 4
a291 1
		Convassem();	/* Convert solid assemblies */
d294 1
@


11.10
log
@Converted to use rt_malloc family.
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/iges/RCS/main.c,v 11.9 1995/01/11 11:37:41 jra Exp jra $ (BRL)";
a21 8
#include "conf.h"

#include <stdio.h>
#include <errno.h>

#include "machine.h"
#include "externs.h"		/* For getopt */
#include "vmath.h"
d25 3
d40 1
d133 1
a133 1
	while( (c=getopt( argc , argv , "dntpo:x:X:" )) != EOF )
d151 3
@


11.9
log
@Added -p option to write polysolids rather than NMG's.
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/iges/RCS/main.c,v 11.8 95/01/04 10:07:54 mike Rel4_4 Locker: jra $ (BRL)";
d137 1
a137 1
	while( (c=getopt( argc , argv , "dntpo:" )) != EOF )
d156 10
d216 1
a216 1
	identity = (mat_t *)malloc( sizeof( mat_t ) );
@


11.8
log
@Release_4.4
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/iges/RCS/main.c,v 11.7 94/10/14 10:52:34 jra Exp $ (BRL)";
d59 1
d137 1
a137 1
	while( (c=getopt( argc , argv , "dnto:" )) != EOF )
d152 3
@


11.7
log
@Added "Suggestions" to give the user a hint when supplied options
don't match the contents of the IGES file.
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/iges/RCS/main.c,v 11.6 94/10/12 08:14:28 jra Exp Locker: jra $ (BRL)";
@


11.6
log
@Added t option for trimmed surfaces.
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /n/wolf/m/cad/iges/RCS/main.c,v 11.5 94/08/26 09:05:19 jra Exp Locker: jra $ (BRL)";
d56 72
a133 3
	int do_splines=0;
	int do_drawings=0;
	int trimmed_surf=0;
d176 1
d234 3
a236 1
		Convtrimsurfs();
a242 3
		if( do_splines )
			Convsurfs();	/* Convert NURBS */

d248 1
@


11.5
log
@Added tolerance structure.
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/iges-g/RCS/main.c,v 11.4 1994/08/22 19:31:50 gdurf Exp jra $ (BRL)";
d64 1
d67 1
a67 1
	while( (c=getopt( argc , argv , "dno:" )) != EOF )
d80 3
d86 1
a86 1
	if (optind >= argc || output_file == (char *)NULL) {
d163 2
d178 1
@


11.4
log
@Factored ifdefs
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/iges-g/RCS/main.c,v 11.3 1994/08/22 18:55:10 gdurf Exp gdurf $ (BRL)";
d44 1
d53 1
d90 1
d95 5
@


11.3
log
@Changes by jra
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/iges-g/RCS/main.c,v 11.2 93/09/24 10:16:22 jra Exp Locker: jra $ (BRL)";
d22 2
d25 2
d28 1
a51 4
extern int errno;
extern char *optarg;
extern int optind,opterr;

@


11.2
log
@Added option for spline solids
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/iges-g/RCS/main.c,v 11.1 93/06/28 10:06:48 jra Exp Locker: jra $ (BRL)";
d48 2
d58 1
d60 2
d63 17
a79 1
	if( argc != 3 && argc != 4 )
d81 2
d92 4
a95 1
	if( argc == 4 )
d97 4
a100 4
		if( strcmp( *++argv , "-n" ) )
			usage();
		else
			do_splines = 1;
d103 1
a103 2
	fd = fopen( *++argv , "r" );	/* open IGES file */
	if( fd == NULL )
d105 1
a105 1
		fprintf( stderr , "Cannot open %s\n" , *argv );
d107 1
d110 1
a118 10
	strcpy( brlcad_file ,  *++argv );

	fdout = fopen( brlcad_file , "w" );	/* open BRLCAD file */
	if( fdout == NULL )
	{
		fprintf( stderr , "Cannot open %s\n" , brlcad_file );
		perror( "iges-g" );
		exit( 1 );
	}

d148 5
a152 1
	Convinst();	/* Handle Instances */
d154 1
a154 1
	Convsolids();	/* Convert solid entities */
d156 2
a157 2
	if( do_splines )
		Convsurfs();	/* Convert NURBS */
d159 1
a159 1
	Convtree();	/* Convert Boolean Trees */
d161 2
a162 2
	Convassem();	/* Convert solid assemblies */

@


11.1
log
@Major Upgrade to IGES 5.1
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/iges-g/RCS/main.c,v 10.1 91/10/12 06:45:21 mike Rel4_0 Locker: jra $ (BRL)";
d56 1
d58 1
a58 1
	if( argc != 3 )
d69 8
d135 2
a136 1
	Convsurfs();	/* Convert NURBS */
@


10.1
log
@Release_4.0
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/iges-g/RCS/main.c,v 1.4 91/06/23 03:55:42 mike Exp $ (BRL)";
d28 1
a28 1
char eor,eof,card[256],crdate[9],crtime[9];
d32 1
d34 1
d37 2
d65 2
d72 1
a72 1
		perror( "Conv-igs2g" );
d83 3
a85 1
	fdout = fopen( *++argv , "w" );	/* open BRLCAD file	*/
d88 2
a89 2
		fprintf( stderr , "Cannot open %s\n" , *argv );
		perror( "Conv-igs2g" );
d110 1
a110 1
	Makedir();	/* Read drectory section and build a linked list of entries */
d116 2
d120 2
a130 2

	Makegroup();	/* Make a top level group */
@


1.4
log
@Changed struct directory to struct iges_directory, to
avoid conflict with raytrace.h
INFINITY now defined in raytrace.h
 
 
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/iges-g/RCS/main.c,v 1.3 91/06/14 08:06:07 mike Exp $ (BRL)";
@


1.3
log
@Changed to use Cakefile-provided version string
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/iges-g/RCS/main.c,v 1.2 91/06/12 20:27:47 mike Exp $ (BRL)";
d33 1
a33 1
struct directory **dir;
@


1.2
log
@Modified for Release 4.0
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header$ (BRL)";
a21 2
#define	IGS_VERSION	"4.0"

d45 2
d56 2
a57 2
	printf( "IGES-to-BRLCAD translator version %s\n" , IGS_VERSION );
	printf( "Please direct bug reports to 'jra@@brl.mil'\n" );
@


1.1
log
@Initial revision
@
text
@d2 2
d18 3
d25 2
@
