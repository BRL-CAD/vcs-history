head	11.11;
access;
symbols
	ansi-20040405-merged:11.7.2.2
	postmerge-20040405-ansi:11.9
	premerge-20040404-ansi:11.8
	postmerge-autoconf:11.8
	autoconf-freeze:11.7.10.1
	premerge-autoconf:11.8
	ansi-20040316-freeze:11.7.2.1
	postmerge-20040315-windows:11.8
	premerge-20040315-windows:11.8
	windows-20040315-freeze:11.7.4.1
	autoconf-20031203:11.7
	autoconf-20031202:11.7
	autoconf-branch:11.7.0.10
	phong-branch:11.7.0.8
	photonmap-branch:11.7.0.6
	rel-6-1-DP:11.7
	windows-branch:11.7.0.4
	rel-6-0-2:11.5
	ansi-branch:11.7.0.2
	rel-6-0-1-branch:11.5.0.2
	hartley-6-0-post:11.6
	hartley-6-0-pre:11.5
	rel-6-0-1:11.5
	rel-6-0:11.5
	rel-5-4:11.4
	offsite-5-3-pre:11.4
	rel-5-3:11.4
	rel-5-2:11.4
	rel-5-1-branch:11.4.0.2
	rel-5-1:11.4
	rel-5-0:11.4
	rel-5-0-beta:11.4
	rel-4-5:11.4
	ctj-4-5-post:11.3
	ctj-4-5-pre:11.3
	rel-4-4:11.1;
locks; strict;
comment	@ * @;


11.11
date	2004.05.24.04.17.00;	author morrison;	state dead;
branches;
next	11.10;

11.10
date	2004.05.10.15.30.41;	author erikg;	state Exp;
branches;
next	11.9;

11.9
date	2004.04.05.07.50.19;	author morrison;	state Exp;
branches;
next	11.8;

11.8
date	2004.02.02.17.38.57;	author morrison;	state Exp;
branches;
next	11.7;

11.7
date	2002.08.20.17.07.18;	author jra;	state Exp;
branches
	11.7.2.1
	11.7.4.1
	11.7.10.1;
next	11.6;

11.6
date	2002.08.15.20.54.06;	author hartley;	state Exp;
branches;
next	11.5;

11.5
date	2001.08.21.19.03.54;	author jra;	state Exp;
branches;
next	11.4;

11.4
date	97.08.22.22.48.24;	author mike;	state Exp;
branches;
next	11.3;

11.3
date	96.07.30.21.13.44;	author cnuzman;	state Exp;
branches;
next	11.2;

11.2
date	95.07.10.23.35.09;	author cnuzman;	state Exp;
branches;
next	11.1;

11.1
date	95.01.04.10.34.04;	author mike;	state Rel4_4;
branches;
next	1.3;

1.3
date	94.11.30.09.22.27;	author jra;	state Exp;
branches;
next	1.2;

1.2
date	94.08.25.11.04.37;	author cnuzman;	state Exp;
branches;
next	1.1;

1.1
date	94.08.04.21.55.03;	author cnuzman;	state Exp;
branches;
next	;

11.7.2.1
date	2002.09.19.18.00.31;	author morrison;	state Exp;
branches;
next	11.7.2.2;

11.7.2.2
date	2004.03.17.21.15.48;	author morrison;	state Exp;
branches;
next	;

11.7.4.1
date	2004.03.11.23.40.25;	author morrison;	state Exp;
branches;
next	;

11.7.10.1
date	2004.02.12.19.40.40;	author erikg;	state Exp;
branches;
next	;


desc
@animation filter for an objehich is rigidly attached to another.
@


11.11
log
@moved to src/anim/
@
text
@/*			A N I M _ O F F S E T . C
 *
 *	Animate an object which is rigidly attached to another.
 *
 *  Given an animation table specifying the position and orientation of
 *  one object, anim_offset produces a similar table specifying the
 *  position of an object rigidly attached to it. 
 *
 *
 *  Author -
 *	Carl J. Nuzman
 *  
 *  Source -
 *      The U. S. Army Research Laboratory
 *      Aberdeen Proving Ground, Maryland  21005-5068  USA
 *  
 *  Distribution Notice -
 *      Re-distribution of this software is restricted, as described in
 *      your "Statement of Terms and Conditions for the Release of
 *      The BRL-CAD Pacakge" agreement.
 *
 *  Copyright Notice -
 *      This software is Copyright (C) 1993-2004 by the United States Army
 *      in all countries except the USA.  All rights reserved.
 */

#ifdef HAVE_CONFIG_H
# include "config.h"
#endif


#include <math.h>
#include <stdio.h>
#include "machine.h"
#include "vmath.h"
#include "bu.h"
#include "anim.h"

extern int bu_optind;
extern char *bu_optarg;

int full_print = 0;
vect_t offset;

int get_args(int argc, char **argv);
extern void anim_dy_p_r2mat(fastf_t *, double, double, double);
extern void anim_add_trans(fastf_t *, const fastf_t *, const fastf_t *);

int
main(int argc, char **argv)
{
	int val;
	fastf_t yaw, pitch, roll, time;
	vect_t temp,point,zero;
	mat_t mat;

	VSETALL( temp , 0.0 );
	VSETALL( point , 0.0 );
	VSETALL( zero , 0.0 );
	
	(void) get_args(argc,argv);


	while (1) {
		/*read line from table */
		val = scanf("%lf%*[^-0123456789]",&time); /*read time,ignore garbage*/
		val = scanf("%lf %lf %lf", point, point+1, point +2);
		val = scanf("%lf %lf %lf", &yaw, &pitch, &roll);
		if (val < 3) {
			break;
		}

		anim_dy_p_r2mat(mat,yaw, pitch,roll);
		anim_add_trans(mat,point,zero);
		MAT4X3PNT(temp,mat,offset);
		
		printf("%.10g\t%.10g\t%.10g\t%.10g",time, temp[0], temp[1], temp[2]);
		if (full_print)
			printf("\t%.10g\t%.10g\t%.10g", yaw, pitch, roll);
		printf("\n");
	}
	return( 0 );
}

#define OPT_STR "ro:"

int get_args(int argc, char **argv)
{
	int c;
	while ( (c=bu_getopt(argc,argv,OPT_STR)) != EOF) {
		switch(c){
		case 'r':
			full_print = 1;
			break;
		case 'o':
			sscanf(argv[bu_optind-1],"%lf",offset+0);
			sscanf(argv[bu_optind],"%lf",offset+1);
			sscanf(argv[bu_optind+1],"%lf",offset+2);
			bu_optind += 2;
			break;
		default:
			fprintf(stderr,"Unknown option: -%c\n",c);
			return(0);
		}
	}
	return(1);
}



@


11.10
log
@change conf.h to a wrapped config.h
@
text
@@


11.9
log
@merge of ansi-6-0-branch into HEAD
@
text
@d27 5
a31 1
#include "conf.h"
@


11.8
log
@update copyright to include span through 2003
@
text
@d41 3
a43 3
int get_args();
extern void anim_dy_p_r2mat();
extern void anim_add_trans();
d46 1
a46 3
main(argc,argv)
int argc;
char **argv;
d83 1
a83 3
int get_args(argc,argv)
int argc;
char **argv;
@


11.7
log
@Restoration of entire source tree to Pre-Hartley state
@
text
@d23 1
a23 1
 *      This software is Copyright (C) 1993 by the United States Army
@


11.7.4.1
log
@sync to HEAD...
@
text
@d23 1
a23 1
 *      This software is Copyright (C) 1993-2004 by the United States Army
@


11.7.10.1
log
@merge from HEAD
@
text
@d23 1
a23 1
 *      This software is Copyright (C) 1993-2004 by the United States Army
@


11.7.2.1
log
@Initial ANSIfication
@
text
@d41 3
a43 3
int get_args(int argc, char **argv);
extern void anim_dy_p_r2mat(fastf_t *, double, double, double);
extern void anim_add_trans(fastf_t *, const fastf_t *, const fastf_t *);
d46 3
a48 1
main(int argc, char **argv)
d85 3
a87 1
int get_args(int argc, char **argv)
@


11.7.2.2
log
@sync branch with HEAD
@
text
@d23 1
a23 1
 *      This software is Copyright (C) 1993-2004 by the United States Army
@


11.6
log
@Converted from K&R to ANSI C - RFH
@
text
@d41 3
a43 3
int get_args(int argc, char **argv);
extern void anim_dy_p_r2mat(fastf_t *, double, double, double);
extern void anim_add_trans(fastf_t *, const fastf_t *, const fastf_t *);
d46 3
a48 1
main(int argc, char **argv)
d85 3
a87 1
int get_args(int argc, char **argv)
@


11.5
log
@lint
@
text
@d41 3
a43 3
int get_args();
extern void anim_dy_p_r2mat();
extern void anim_add_trans();
d46 1
a46 3
main(argc,argv)
int argc;
char **argv;
d83 1
a83 3
int get_args(argc,argv)
int argc;
char **argv;
@


11.4
log
@Made dependence on bu_getopt() explicit.
@
text
@d32 1
d41 5
d80 1
a80 1

@


11.3
log
@output formatting
@
text
@d34 2
a35 2
extern int optind;
extern char *optarg;
d84 1
a84 1
	while ( (c=getopt(argc,argv,OPT_STR)) != EOF) {
d90 4
a93 4
			sscanf(argv[optind-1],"%lf",offset+0);
			sscanf(argv[optind],"%lf",offset+1);
			sscanf(argv[optind+1],"%lf",offset+2);
			optind += 2;
@


11.2
log
@updated anim.c routine names
@
text
@d69 1
a69 1
		printf("%f\t%f\t%f\t%f",time, temp[0], temp[1], temp[2]);
d71 1
a71 1
			printf("\t%f\t%f\t%f", yaw, pitch, roll);
@


11.1
log
@Release_4.4
@
text
@d65 2
a66 2
		dy_p_r2mat(mat,yaw, pitch,roll);
		add_trans(mat,point,zero);
@


1.3
log
@Initialized some variables.
@
text
@@


1.2
log
@included conf.h
@
text
@d48 4
@


1.1
log
@Initial revision
@
text
@d27 1
@
