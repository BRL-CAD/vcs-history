head	1.16;
access;
symbols
	ansi-20040405-merged:1.12.2.2
	postmerge-20040405-ansi:1.14
	premerge-20040404-ansi:1.13
	postmerge-autoconf:1.13
	autoconf-freeze:1.12.10.1
	premerge-autoconf:1.13
	ansi-20040316-freeze:1.12.2.1
	postmerge-20040315-windows:1.13
	premerge-20040315-windows:1.13
	windows-20040315-freeze:1.12.4.1
	autoconf-20031203:1.12
	autoconf-20031202:1.12
	autoconf-branch:1.12.0.10
	phong-branch:1.12.0.8
	photonmap-branch:1.12.0.6
	rel-6-1-DP:1.12
	windows-branch:1.12.0.4
	rel-6-0-2:1.10
	ansi-branch:1.12.0.2
	rel-6-0-1-branch:1.10.0.2
	hartley-6-0-post:1.11
	hartley-6-0-pre:1.10
	rel-6-0-1:1.10
	rel-6-0:1.10
	rel-5-4:1.9
	offsite-5-3-pre:1.9
	rel-5-3:1.9
	rel-5-2:1.9
	rel-5-1-branch:1.9.0.2
	rel-5-1:1.9
	rel-5-0:1.7
	rel-5-0-beta:1.7
	rel-4-5:1.5
	ctj-4-5-post:1.3
	ctj-4-5-pre:1.3;
locks; strict;
comment	@ * @;


1.16
date	2004.05.21.18.06.26;	author morrison;	state dead;
branches;
next	1.15;

1.15
date	2004.05.10.15.30.44;	author erikg;	state Exp;
branches;
next	1.14;

1.14
date	2004.04.05.07.45.07;	author morrison;	state Exp;
branches;
next	1.13;

1.13
date	2004.02.02.17.39.08;	author morrison;	state Exp;
branches;
next	1.12;

1.12
date	2002.08.20.17.07.45;	author jra;	state Exp;
branches
	1.12.2.1
	1.12.4.1
	1.12.10.1;
next	1.11;

1.11
date	2002.08.15.20.54.58;	author hartley;	state Exp;
branches;
next	1.10;

1.10
date	2001.04.02.21.20.39;	author bparker;	state Exp;
branches;
next	1.9;

1.9
date	2000.05.18.21.45.10;	author bparker;	state Exp;
branches;
next	1.8;

1.8
date	99.12.01.13.53.27;	author bparker;	state Exp;
branches;
next	1.7;

1.7
date	99.04.26.19.15.07;	author bparker;	state Exp;
branches;
next	1.6;

1.6
date	98.02.26.15.36.36;	author bparker;	state Exp;
branches;
next	1.5;

1.5
date	97.11.21.21.09.27;	author bparker;	state Exp;
branches;
next	1.4;

1.4
date	97.09.23.21.18.14;	author bparker;	state Exp;
branches;
next	1.3;

1.3
date	97.05.21.13.06.37;	author bparker;	state Exp;
branches;
next	1.2;

1.2
date	97.03.03.18.32.28;	author bparker;	state Exp;
branches;
next	1.1;

1.1
date	96.12.04.21.26.34;	author bparker;	state Exp;
branches;
next	;

1.12.2.1
date	2002.09.19.18.01.17;	author morrison;	state Exp;
branches;
next	1.12.2.2;

1.12.2.2
date	2004.03.17.21.16.58;	author morrison;	state Exp;
branches;
next	;

1.12.4.1
date	2004.03.11.23.42.01;	author morrison;	state Exp;
branches;
next	;

1.12.10.1
date	2004.02.12.19.45.19;	author erikg;	state Exp;
branches;
next	;


desc
@routine for handling options for dm_open
@


1.16
log
@moved to src/
@
text
@/*
 *				O P T I O N S . C
 *
 * Option processing routines.
 * 
 * Source -
 *	SLAD CAD Team
 *	The U. S. Army Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005
 *
 * Author -
 *	Robert G. Parker
 *
 *  Distribution Notice -
 *	Re-distribution of this software is restricted, as described in
 *	your "Statement of Terms and Conditions for the Release of
 *	The BRL-CAD Package" agreement.
 *
 *  Copyright Notice -
 *	This software is Copyright (C) 1999-2004 by the United States Army
 *	in all countries except the USA.  All rights reserved.
 */
#ifdef HAVE_CONFIG_H
# include "config.h"
#endif



#include "tcl.h"

#include "machine.h"
#include "externs.h"
#include "bu.h"
#include "vmath.h"
#include "dm.h"

int
dm_processOptions(struct dm *dmp, struct bu_vls *init_proc_vls, int argc, char **argv)
{
  register int c;

  bu_optind = 0;	 /* re-init bu_getopt */
  bu_opterr = 0;
  while((c = bu_getopt(argc, argv, "N:S:W:s:d:i:n:t:")) != EOF){
    switch(c){
    case 'N':
      dmp->dm_height = atoi(bu_optarg);
      break;
    case 'S':
    case 's':
      dmp->dm_width = dmp->dm_height = atoi(bu_optarg);
      break;
    case 'W':
      dmp->dm_width = atoi(bu_optarg);
      break;
    case 'd':
      bu_vls_strcpy(&dmp->dm_dName, bu_optarg);
      break;
    case 'i':
      bu_vls_strcpy(init_proc_vls, bu_optarg);
      break;
    case 'n':
      if(*bu_optarg != '.')
	bu_vls_printf(&dmp->dm_pathName, ".%s", bu_optarg);
      else
	bu_vls_strcpy(&dmp->dm_pathName, bu_optarg);
      break;
    case 't':
      dmp->dm_top = atoi(bu_optarg);
      break;
    default:
      bu_log("dm_processOptions: option '%c' unknown\n", bu_optopt);
      break;
    }
  }

  return bu_optind;
}
@


1.15
log
@change conf.h to a wrapped config.h
@
text
@@


1.14
log
@merge of ansi-6-0-branch into HEAD
@
text
@d23 5
a27 1
#include "conf.h"
@


1.13
log
@update copyright to include span through 2003
@
text
@d34 1
a34 5
dm_processOptions(dmp, init_proc_vls, argc, argv)
struct dm *dmp;
struct bu_vls *init_proc_vls;
int argc;
char *argv[];
@


1.12
log
@Restoration of entire source tree to Pre-Hartley state
@
text
@d20 1
a20 1
 *	This software is Copyright (C) 1999 by the United States Army
@


1.12.4.1
log
@sync to HEAD...
@
text
@d20 1
a20 1
 *	This software is Copyright (C) 1999-2004 by the United States Army
@


1.12.10.1
log
@merge from HEAD
@
text
@d20 1
a20 1
 *	This software is Copyright (C) 1999-2004 by the United States Army
@


1.12.2.1
log
@Initial ANSIfication
@
text
@d34 5
a38 1
dm_processOptions(struct dm *dmp, struct bu_vls *init_proc_vls, int argc, char **argv)
@


1.12.2.2
log
@sync branch with HEAD
@
text
@d20 1
a20 1
 *	This software is Copyright (C) 1999-2004 by the United States Army
@


1.11
log
@Converted from K&R to ANSI C - RFH
@
text
@d34 5
a38 1
dm_processOptions(struct dm *dmp, struct bu_vls *init_proc_vls, int argc, char **argv)
@


1.10
log
@*- remove Tk dependencies
@
text
@d34 1
a34 5
dm_processOptions(dmp, init_proc_vls, argc, argv)
struct dm *dmp;
struct bu_vls *init_proc_vls;
int argc;
char *argv[];
@


1.9
log
@*- add header comments
@
text
@d25 2
a26 1
#include "tk.h"
@


1.8
log
@*- include vmath.h
@
text
@d1 22
@


1.7
log
@*-
@
text
@d7 1
@


1.6
log
@*- 's' and 'S' are now both use to specify size
@
text
@d9 2
a10 1
int dm_processOptions(dmp, init_proc_vls, argc, argv)
@


1.5
log
@changed dm_process_options to dm_processOptions
@
text
@d18 2
a19 1
  while((c = bu_getopt(argc, argv, "N:S:W:sd:i:n:t:")) != EOF){
d25 1
a30 2
    case 's':
      dmp->dm_stereo = 1;
d47 1
@


1.4
log
@add option for stereo
@
text
@d9 1
a9 2
int
dm_process_options(dmp, init_proc_vls, argc, argv)
@


1.3
log
@mods to dm_process_options
@
text
@d19 1
a19 1
  while((c = bu_getopt(argc, argv, "N:S:W:d:i:n:t:")) != EOF){
d30 2
@


1.2
log
@add a few more options
@
text
@d10 1
a10 1
dm_process_options(dmp, width, height, argc, argv)
d12 1
a12 2
int *width;
int *height;
d22 1
a22 1
      *height = atoi(bu_optarg);
d25 1
a25 1
      *width = *height = atoi(bu_optarg);
d28 1
a28 1
      *width = atoi(bu_optarg);
d34 1
a34 1
      bu_vls_strcpy(&dmp->dm_initWinProc, bu_optarg);
@


1.1
log
@Initial revision
@
text
@d10 1
a10 1
dm_process_options(dmp, argc, argv)
d12 2
d19 2
a20 2
  bu_optind = 1;	 /* re-init bu_getopt */
  while((c = bu_getopt(argc, argv, "n:i:")) != EOF){
d22 11
a32 2
    case 'n':
      bu_vls_strcpy(&dmp->dm_pathName, bu_optarg);
d36 9
@
