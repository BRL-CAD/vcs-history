head	1.25;
access;
symbols
	ansi-20040405-merged:1.20.2.2
	postmerge-20040405-ansi:1.23
	premerge-20040404-ansi:1.22
	postmerge-autoconf:1.22
	autoconf-freeze:1.20.10.2
	premerge-autoconf:1.22
	ansi-20040316-freeze:1.20.2.1
	postmerge-20040315-windows:1.22
	premerge-20040315-windows:1.21
	windows-20040315-freeze:1.20.4.2
	autoconf-20031203:1.20
	autoconf-20031202:1.20
	autoconf-branch:1.20.0.10
	phong-branch:1.20.0.8
	photonmap-branch:1.20.0.6
	rel-6-1-DP:1.20
	windows-branch:1.20.0.4
	rel-6-0-2:1.18
	ansi-branch:1.20.0.2
	rel-6-0-1-branch:1.18.0.2
	hartley-6-0-post:1.19
	hartley-6-0-pre:1.18
	rel-6-0-1:1.18
	rel-6-0:1.18
	rel-5-4:1.14.2.2
	offsite-5-3-pre:1.16
	rel-5-3:1.14.2.2
	rel-5-2:1.14.2.1
	rel-5-1-branch:1.14.0.2
	rel-5-1:1.14
	rel-5-0:1.11
	rel-5-0-beta:1.11
	rel-4-5:1.5
	ctj-4-5-post:1.1
	ctj-4-5-pre:1.1;
locks; strict;
comment	@ * @;


1.25
date	2004.05.21.18.06.25;	author morrison;	state dead;
branches;
next	1.24;

1.24
date	2004.05.10.15.30.44;	author erikg;	state Exp;
branches;
next	1.23;

1.23
date	2004.04.05.07.45.07;	author morrison;	state Exp;
branches;
next	1.22;

1.22
date	2004.03.16.19.41.54;	author morrison;	state Exp;
branches;
next	1.21;

1.21
date	2004.02.02.17.39.08;	author morrison;	state Exp;
branches;
next	1.20;

1.20
date	2002.08.20.17.07.44;	author jra;	state Exp;
branches
	1.20.2.1
	1.20.4.1
	1.20.10.1;
next	1.19;

1.19
date	2002.08.15.20.54.57;	author hartley;	state Exp;
branches;
next	1.18;

1.18
date	2001.04.03.18.48.29;	author bparker;	state Exp;
branches;
next	1.17;

1.17
date	2001.04.02.21.20.39;	author bparker;	state Exp;
branches;
next	1.16;

1.16
date	2000.10.19.13.07.22;	author jra;	state Exp;
branches;
next	1.15;

1.15
date	2000.08.31.18.17.23;	author bparker;	state Exp;
branches;
next	1.14;

1.14
date	2000.05.19.18.53.30;	author bparker;	state Exp;
branches
	1.14.2.1;
next	1.13;

1.13
date	99.12.27.21.13.46;	author bparker;	state Exp;
branches;
next	1.12;

1.12
date	99.12.01.13.53.27;	author bparker;	state Exp;
branches;
next	1.11;

1.11
date	99.04.26.19.17.57;	author bparker;	state Exp;
branches;
next	1.10;

1.10
date	99.01.27.14.49.16;	author bparker;	state Exp;
branches;
next	1.9;

1.9
date	99.01.12.21.02.05;	author bparker;	state Exp;
branches;
next	1.8;

1.8
date	99.01.12.17.52.22;	author bparker;	state Exp;
branches;
next	1.7;

1.7
date	98.06.11.14.30.26;	author bparker;	state Exp;
branches;
next	1.6;

1.6
date	98.03.06.23.04.02;	author bparker;	state Exp;
branches;
next	1.5;

1.5
date	97.11.21.21.10.24;	author bparker;	state Exp;
branches;
next	1.4;

1.4
date	97.10.10.12.56.48;	author bparker;	state Exp;
branches;
next	1.3;

1.3
date	97.09.23.21.00.28;	author jra;	state Exp;
branches;
next	1.2;

1.2
date	97.08.01.21.15.57;	author bparker;	state Exp;
branches;
next	1.1;

1.1
date	97.05.21.13.05.06;	author bparker;	state Exp;
branches;
next	;

1.14.2.1
date	2000.09.01.17.24.43;	author bparker;	state Exp;
branches;
next	1.14.2.2;

1.14.2.2
date	2000.10.19.13.14.20;	author jra;	state Exp;
branches;
next	;

1.20.2.1
date	2002.09.19.18.01.17;	author morrison;	state Exp;
branches;
next	1.20.2.2;

1.20.2.2
date	2004.03.17.21.16.57;	author morrison;	state Exp;
branches;
next	;

1.20.4.1
date	2002.09.26.23.03.53;	author morrison;	state Exp;
branches;
next	1.20.4.2;

1.20.4.2
date	2004.03.11.23.42.00;	author morrison;	state Exp;
branches;
next	;

1.20.10.1
date	2004.02.12.19.45.18;	author erikg;	state Exp;
branches;
next	1.20.10.2;

1.20.10.2
date	2004.03.18.18.10.27;	author erikg;	state Exp;
branches;
next	;


desc
@generic libdm routines
@


1.25
log
@moved to src/
@
text
@/*
 *				D M - G E N E R I C . C
 *
 * Generic display manager routines.
 * 
 * Source -
 *	SLAD CAD Team
 *	The U. S. Army Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005
 *
 * Author -
 *	Robert G. Parker
 *
 *  Distribution Notice -
 *	Re-distribution of this software is restricted, as described in
 *	your "Statement of Terms and Conditions for the Release of
 *	The BRL-CAD Package" agreement.
 *
 *  Copyright Notice -
 *	This software is Copyright (C) 1999-2004 by the United States Army
 *	in all countries except the USA.  All rights reserved.
 */
#ifdef HAVE_CONFIG_H
# include "config.h"
#endif


#ifdef USE_STRING_H
#include <string.h>
#else
#include <strings.h>
#endif

#include "tcl.h"

#include "machine.h"
#include "externs.h"
#include "bu.h"
#include "vmath.h"
#include "dm.h"

extern struct dm *Nu_open(Tcl_Interp *interp, int argc, char **argv);
extern struct dm *plot_open(Tcl_Interp *interp, int argc, char **argv);
extern struct dm *ps_open(Tcl_Interp *interp, int argc, char **argv);

#ifdef DM_X
extern struct dm *X_open();

#ifdef DM_OGL
extern struct dm *ogl_open();
extern void ogl_fogHint();
extern int ogl_share_dlist();
#endif /* DM_OGL */
#endif /* DM_X */

#ifdef WIN32
extern struct dm *ogl_open();
extern void ogl_fogHint();
extern int ogl_share_dlist();
#endif


struct dm *
dm_open(Tcl_Interp *interp, int type, int argc, char **argv)
{
	switch (type) {
	case DM_TYPE_NULL:
		return Nu_open(interp, argc, argv);
	case DM_TYPE_PLOT:
		return plot_open(interp, argc, argv);
	case DM_TYPE_PS:
		return ps_open(interp, argc, argv);
#ifndef WIN32
#ifdef DM_X
	case DM_TYPE_X:
		return X_open(interp, argc, argv);
#endif
#endif
#ifdef DM_OGL
	case DM_TYPE_OGL:
		return ogl_open(interp, argc, argv);
#endif
  default:
    break;
  }

  return DM_NULL;
}

/*
 * Provides a way to (un)share display lists. If dmp2 is
 * NULL, then dmp1 will no longer share its display lists.
 */
int
dm_share_dlist(struct dm *dmp1, struct dm *dmp2)
{
  if(dmp1 == DM_NULL)
    return TCL_ERROR;

  /*
   * Only display managers of the same type and using the 
   * same OGL server are allowed to share display lists.
   *
   * XXX - need a better way to check if using the same OGL server.
   */
  if(dmp2 != DM_NULL)
    if(dmp1->dm_type != dmp2->dm_type ||
       strcmp(bu_vls_addr(&dmp1->dm_dName), bu_vls_addr(&dmp2->dm_dName)))
      return TCL_ERROR;

  switch(dmp1->dm_type){
#ifdef DM_OGL
  case DM_TYPE_OGL:
    return ogl_share_dlist(dmp1, dmp2);
#endif
  default:
    return TCL_ERROR;
  }
}

fastf_t
dm_Xx2Normal(struct dm *dmp, register int x)
{
  return ((x / (fastf_t)dmp->dm_width - 0.5) * 2.0);
}

int
dm_Normal2Xx(struct dm *dmp, register fastf_t f)
{
  return (f * 0.5 + 0.5) * dmp->dm_width;
}

fastf_t
dm_Xy2Normal(struct dm *dmp, register int y, int use_aspect)
{
  if(use_aspect)
    return ((0.5 - y / (fastf_t)dmp->dm_height) / dmp->dm_aspect * 2.0);
  else
    return ((0.5 - y / (fastf_t)dmp->dm_height) * 2.0);
}

int
dm_Normal2Xy(struct dm *dmp, register fastf_t f, int use_aspect)
{
  if(use_aspect)
    return (0.5 - f * 0.5 * dmp->dm_aspect) * dmp->dm_height;
  else
    return (0.5 - f * 0.5) * dmp->dm_height;
}

void
dm_fogHint(struct dm *dmp, int fastfog)
{
  switch(dmp->dm_type){
#ifdef DM_OGL
  case DM_TYPE_OGL:
    ogl_fogHint(dmp, fastfog);
    return;
#endif
  default:
    return;
  }
}
@


1.24
log
@change conf.h to a wrapped config.h
@
text
@@


1.23
log
@merge of ansi-6-0-branch into HEAD
@
text
@d23 5
a27 1
#include "conf.h"
@


1.22
log
@merge of windows-6-0-branch into head
@
text
@d38 3
a40 3
extern struct dm *Nu_open();
extern struct dm *plot_open();
extern struct dm *ps_open();
d60 1
a60 5
dm_open(interp, type, argc, argv)
     Tcl_Interp *interp;
     int type;
     int argc;
     char *argv[];
d91 1
a91 3
dm_share_dlist(dmp1, dmp2)
struct dm *dmp1;
struct dm *dmp2;
d118 1
a118 3
dm_Xx2Normal(dmp, x)
struct dm *dmp;
register int x;
d124 1
a124 3
dm_Normal2Xx(dmp, f)
struct dm *dmp;
register fastf_t f;
d130 1
a130 4
dm_Xy2Normal(dmp, y, use_aspect)
struct dm *dmp;
register int y;
int use_aspect;
d139 1
a139 4
dm_Normal2Xy(dmp, f, use_aspect)
struct dm *dmp;
register fastf_t f;
int use_aspect;
d148 1
a148 3
dm_fogHint(dmp, fastfog)
struct dm *dmp;
int fastfog;
@


1.21
log
@update copyright to include span through 2003
@
text
@d52 7
d73 1
d77 1
@


1.20
log
@Restoration of entire source tree to Pre-Hartley state
@
text
@d20 1
a20 1
 *	This software is Copyright (C) 1999 by the United States Army
@


1.20.10.1
log
@merge from HEAD
@
text
@d20 1
a20 1
 *	This software is Copyright (C) 1999-2004 by the United States Army
@


1.20.10.2
log
@merge from head
@
text
@a51 7
#ifdef WIN32
extern struct dm *ogl_open();
extern void ogl_fogHint();
extern int ogl_share_dlist();
#endif


a65 1
#ifndef WIN32
a68 1
#endif
@


1.20.4.1
log
@Modifications (on a 6.0 source distribution) for initial port to windows (merged with sources close to 6.0.2)
@
text
@a51 7
#ifdef WIN32
extern struct dm *ogl_open();
extern void ogl_fogHint();
extern int ogl_share_dlist();
#endif


a65 1
#ifndef WIN32
a68 1
#endif
@


1.20.4.2
log
@sync to HEAD...
@
text
@d20 1
a20 1
 *	This software is Copyright (C) 1999-2004 by the United States Army
@


1.20.2.1
log
@Initial ANSIfication
@
text
@d38 3
a40 3
extern struct dm *Nu_open(Tcl_Interp *interp, int argc, char **argv);
extern struct dm *plot_open(Tcl_Interp *interp, int argc, char **argv);
extern struct dm *ps_open(Tcl_Interp *interp, int argc, char **argv);
d53 5
a57 1
dm_open(Tcl_Interp *interp, int type, int argc, char **argv)
d86 3
a88 1
dm_share_dlist(struct dm *dmp1, struct dm *dmp2)
d115 3
a117 1
dm_Xx2Normal(struct dm *dmp, register int x)
d123 3
a125 1
dm_Normal2Xx(struct dm *dmp, register fastf_t f)
d131 4
a134 1
dm_Xy2Normal(struct dm *dmp, register int y, int use_aspect)
d143 4
a146 1
dm_Normal2Xy(struct dm *dmp, register fastf_t f, int use_aspect)
d155 3
a157 1
dm_fogHint(struct dm *dmp, int fastfog)
@


1.20.2.2
log
@sync branch with HEAD
@
text
@d20 1
a20 1
 *	This software is Copyright (C) 1999-2004 by the United States Army
a51 7
#ifdef WIN32
extern struct dm *ogl_open();
extern void ogl_fogHint();
extern int ogl_share_dlist();
#endif


a61 1
#ifndef WIN32
a64 1
#endif
@


1.19
log
@Converted from K&R to ANSI C - RFH
@
text
@d38 3
a40 3
extern struct dm *Nu_open(Tcl_Interp *interp, int argc, char **argv);
extern struct dm *plot_open(Tcl_Interp *interp, int argc, char **argv);
extern struct dm *ps_open(Tcl_Interp *interp, int argc, char **argv);
d53 5
a57 1
dm_open(Tcl_Interp *interp, int type, int argc, char **argv)
d86 3
a88 1
dm_share_dlist(struct dm *dmp1, struct dm *dmp2)
d115 3
a117 1
dm_Xx2Normal(struct dm *dmp, register int x)
d123 3
a125 1
dm_Normal2Xx(struct dm *dmp, register fastf_t f)
d131 4
a134 1
dm_Xy2Normal(struct dm *dmp, register int y, int use_aspect)
d143 4
a146 1
dm_Normal2Xy(struct dm *dmp, register fastf_t f, int use_aspect)
d155 3
a157 1
dm_fogHint(struct dm *dmp, int fastfog)
@


1.18
log
@*- get rid of warnings
@
text
@d38 3
a40 3
extern struct dm *Nu_open();
extern struct dm *plot_open();
extern struct dm *ps_open();
d53 1
a53 5
dm_open(interp, type, argc, argv)
     Tcl_Interp *interp;
     int type;
     int argc;
     char *argv[];
d82 1
a82 3
dm_share_dlist(dmp1, dmp2)
struct dm *dmp1;
struct dm *dmp2;
d109 1
a109 3
dm_Xx2Normal(dmp, x)
struct dm *dmp;
register int x;
d115 1
a115 3
dm_Normal2Xx(dmp, f)
struct dm *dmp;
register fastf_t f;
d121 1
a121 4
dm_Xy2Normal(dmp, y, use_aspect)
struct dm *dmp;
register int y;
int use_aspect;
d130 1
a130 4
dm_Normal2Xy(dmp, f, use_aspect)
struct dm *dmp;
register fastf_t f;
int use_aspect;
d139 1
a139 3
dm_fogHint(dmp, fastfog)
struct dm *dmp;
int fastfog;
@


1.17
log
@*- remove Tk dependencies
@
text
@d48 1
@


1.16
log
@XXX_open() calls were missing "interp" args
@
text
@d29 3
a31 1
#include "tk.h"
d41 1
d44 1
a44 4
#if 0
extern void X_configureWindowShape();
#endif
#endif
a46 5
#if 0
extern void ogl_configureWindowShape();
extern void ogl_zbuffer();
extern void ogl_lighting();
#endif
d48 2
a49 1
#endif
a151 54

#if 0
void
dm_configureWindowShape(dmp)
struct dm *dmp;
{
  switch(dmp->dm_type){
#ifdef DM_X
  case DM_TYPE_X:
    X_configureWindowShape(dmp);
    return;
#endif
#ifdef DM_OGL
  case DM_TYPE_OGL:
    ogl_configureWindowShape(dmp);
    return;
#endif
  default:
    return;
  }
}

void
dm_zbuffer(dmp, zbuffer_on)
struct dm *dmp;
int zbuffer_on;
{
  switch(dmp->dm_type){
#ifdef DM_OGL
  case DM_TYPE_OGL:
    ogl_zbuffer(dmp, zbuffer_on);
    return;
#endif
  default:
    return;
  }
}

void
dm_lighting(dmp, lighting_on)
struct dm *dmp;
int lighting_on;
{
  switch(dmp->dm_type){
#ifdef DM_OGL
  case DM_TYPE_OGL:
    ogl_lighting(dmp, lighting_on);
    return;
#endif
  default:
    return;
  }
}
#endif
@


1.15
log
@Mods to rid libdm of two globals: tkwin and interp
@
text
@d64 1
a64 1
		return Nu_open(argc, argv);
d66 1
a66 1
		return plot_open(argc, argv);
d68 1
a68 1
		return ps_open(argc, argv);
@


1.14
log
@*- add header comments
@
text
@d56 5
a60 4
dm_open(type, argc, argv)
int type;
int argc;
char *argv[];
d62 7
a68 7
  switch(type){
  case DM_TYPE_NULL:
    return Nu_open(argc, argv);
  case DM_TYPE_PLOT:
    return plot_open(argc, argv);
  case DM_TYPE_PS:
    return ps_open(argc, argv);
d70 2
a71 2
  case DM_TYPE_X:
    return X_open(argc, argv);
d74 2
a75 2
  case DM_TYPE_OGL:
    return ogl_open(argc, argv);
@


1.14.2.1
log
@Removed two globals: interp and tkwin
@
text
@d56 4
a59 5
dm_open(interp, type, argc, argv)
     Tcl_Interp *interp;
     int type;
     int argc;
     char *argv[];
d61 7
a67 7
	switch (type) {
	case DM_TYPE_NULL:
		return Nu_open(argc, argv);
	case DM_TYPE_PLOT:
		return plot_open(argc, argv);
	case DM_TYPE_PS:
		return ps_open(argc, argv);
d69 2
a70 2
	case DM_TYPE_X:
		return X_open(interp, argc, argv);
d73 2
a74 2
	case DM_TYPE_OGL:
		return ogl_open(interp, argc, argv);
@


1.14.2.2
log
@XXX_open() routines were missing interp arg
@
text
@d64 1
a64 1
		return Nu_open(interp, argc, argv);
d66 1
a66 1
		return plot_open(interp, argc, argv);
d68 1
a68 1
		return ps_open(interp, argc, argv);
@


1.13
log
@*- a little clean up
@
text
@d1 22
@


1.12
log
@*- include vmath.h
@
text
@d19 1
d22 1
d25 1
d29 1
d134 1
d186 1
@


1.11
log
@*- cleanup
*- changed parameters to dm_zbuffer() and dm_lighting
*- add dm_fogHint()
@
text
@d11 1
d53 2
a54 1
  return( (struct dm *)NULL );
d66 1
a66 1
  if(dmp1 == (struct dm *)NULL)
d75 1
a75 1
  if(dmp2 != (struct dm *)NULL)
@


1.10
log
@*- return TCL_OK only when actually sharing display lists
@
text
@d25 1
a26 9
#ifdef DM_GLX
extern struct dm *glx_open();
extern void glx_configureWindowShape();
extern void glx_lighting();
extern void glx_zbuffer();
#endif
#ifdef DM_PEX
extern struct dm *pex_open();
#endif
a48 7
#ifdef DM_GLX
  case DM_TYPE_GLX:
    return glx_open(argc, argv);;
#endif
#ifdef DM_PEX
  case DM_TYPE_PEX:
#endif
d143 1
a143 3
#ifdef DM_GLX
  case DM_TYPE_GLX:
    glx_configureWindowShape(dmp);
d145 12
a156 4
#endif
#ifdef DM_PEX
  case DM_TYPE_PEX:
    Pex_configureWindowShape(dmp);
a158 3
  case DM_TYPE_PLOT:
  case DM_TYPE_PS:
  case DM_TYPE_NULL:
d165 1
a165 1
dm_zbuffer(dmp)
d167 1
d172 1
a172 1
    ogl_zbuffer(dmp);
a174 14
#ifdef DM_GLX
  case DM_TYPE_GLX:
   glx_zbuffer(dmp);
    return;
#endif
#ifdef DM_X
  case DM_TYPE_X:
#endif
#ifdef DM_PEX
  case DM_TYPE_PEX:
#endif
  case DM_TYPE_PLOT:
  case DM_TYPE_PS:
  case DM_TYPE_NULL:
d181 1
a181 1
dm_lighting(dmp)
d183 1
d188 1
a188 1
    ogl_lighting(dmp);
a190 14
#ifdef DM_GLX
  case DM_TYPE_GLX:
    glx_lighting(dmp);
    return;
#endif
#ifdef DM_X
  case DM_TYPE_X:
#endif
#ifdef DM_PEX
  case DM_TYPE_PEX:
#endif
  case DM_TYPE_PLOT:
  case DM_TYPE_PS:
  case DM_TYPE_NULL:
@


1.9
log
@*- add ifdef around OGL code
@
text
@d99 1
a99 1
    return TCL_OK;
@


1.8
log
@*- code to support sharing display lists
@
text
@d94 1
d97 1
@


1.7
log
@*- remove the following ifdef: USE_RT_ASPECT
@
text
@d70 31
@


1.6
log
@*- mods to reverse the sense of LIBDM's
	notion of aspect ratio (i.e. now width/height)
@
text
@a69 1
#ifdef USE_RT_ASPECT
a108 43

#else

fastf_t
dm_Xx2Normal(dmp, x, use_aspect)
struct dm *dmp;
register int x;
int use_aspect;
{
  if(use_aspect)
    return ((x / (fastf_t)dmp->dm_width - 0.5) / dmp->dm_aspect * 2.0);
  else
    return ((x / (fastf_t)dmp->dm_width - 0.5) * 2.0);
}

int
dm_Normal2Xx(dmp, f, use_aspect)
struct dm *dmp;
register fastf_t f;
int use_aspect;
{
  if(use_aspect)
    return (f * 0.5 * dmp->dm_aspect + 0.5) * dmp->dm_width;
  else
    return (f * 0.5 + 0.5) * dmp->dm_width;
}

fastf_t
dm_Xy2Normal(dmp, y)
struct dm *dmp;
register int y;
{
  return ((0.5 - y / (fastf_t)dmp->dm_height) * 2.0);
}

int
dm_Normal2Xy(dmp, f)
struct dm *dmp;
register fastf_t f;
{
  return (0.5 - f * 0.5) * dmp->dm_height;
}
#endif
@


1.5
log
@add dm_configureWindowShape(), dm_zbuffer(), dm_lighting()
@
text
@d70 1
d72 1
a72 1
dm_X2Normal(dmp, x, use_aspect)
d75 42
d125 12
d138 1
a138 1
dm_Y2Normal(dmp, y)
d144 9
@


1.4
log
@got rid of eventHandler
@
text
@d18 1
d22 3
d28 3
d88 91
@


1.3
log
@dm-open() needed a return.
@
text
@d30 1
a30 1
dm_open(type, eventHandler, argc, argv)
a31 1
int (*eventHandler)();
d37 1
a37 1
    return Nu_open(eventHandler, argc, argv);
d39 1
a39 1
    return plot_open(eventHandler, argc, argv);
d41 1
a41 1
    return ps_open(eventHandler, argc, argv);
d44 1
a44 1
    return X_open(eventHandler, argc, argv);
d48 1
a48 1
    return ogl_open(eventHandler, argc, argv);
d52 1
a52 1
    return glx_open(eventHandler, argc, argv);;
@


1.2
log
@new functions dm_X2Normal() and dm_Y2Normal()
@
text
@d61 1
@


1.1
log
@Initial revision
@
text
@d62 20
@
