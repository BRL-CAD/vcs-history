head	1.9;
access;
symbols
	rel-7-10-4:1.9
	STABLE:1.9.0.2
	rel-7-10-2:1.9
	rel-7-10-0:1.8
	rel-7-8-4:1.6
	rel-7-8-2:1.6
	rel-7-8-0:1.5
	trimnurbs-branch:1.5.0.2
	help:1.5
	temp_tag:1.4
	bobWinPort-20051223-freeze:1.2
	postmerge-20051223-bobWinPort:1.4
	premerge-20051223-bobWinPort:1.4
	rel-7-6-6:1.4
	rel-7-6-4:1.3
	rel-7-6-2:1.2
	rel-7-6-branch:1.2.0.6
	rel-7-6-0:1.2
	rel-7-4-2:1.2
	rel-7-4-branch:1.2.0.4
	bobWinPort:1.2.0.2
	rel-7-4-0:1.2
	rel-7-2-6:1.2
	rel-7-2-4:1.2;
locks; strict;
comment	@# @;


1.9
date	2007.07.31.07.54.03;	author brlcad;	state Exp;
branches;
next	1.8;

1.8
date	2007.01.27.01.41.29;	author brlcad;	state Exp;
branches;
next	1.7;

1.7
date	2007.01.20.14.36.40;	author brlcad;	state Exp;
branches;
next	1.6;

1.6
date	2006.06.05.00.25.08;	author brlcad;	state Exp;
branches;
next	1.5;

1.5
date	2006.01.18.06.46.10;	author brlcad;	state Exp;
branches;
next	1.4;

1.4
date	2005.12.05.15.42.28;	author brlcad;	state Exp;
branches;
next	1.3;

1.3
date	2005.10.23.04.26.14;	author brlcad;	state Exp;
branches;
next	1.2;

1.2
date	2005.05.11.02.24.23;	author brlcad;	state Exp;
branches
	1.2.6.1;
next	1.1;

1.1
date	2005.04.24.22.54.31;	author brlcad;	state Exp;
branches;
next	;

1.2.6.1
date	2005.11.13.13.46.10;	author brlcad;	state Exp;
branches;
next	;


desc
@@


1.9
log
@add support for --with-cxxflags
@
text
@#                        A R G S . M 4
# BRL-CAD
#
# Copyright (c) 2005-2007 United States Government as represented by
# the U.S. Army Research Laboratory.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
# 1. Redistributions of source code must retain the above copyright
# notice, this list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above
# copyright notice, this list of conditions and the following
# disclaimer in the documentation and/or other materials provided
# with the distribution.
#
# 3. The name of the author may not be used to endorse or promote
# products derived from this software without specific prior written
# permission.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS
# OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
# GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
# NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
###
#
# BC_ARG_ENABLE
#
# creates a configure --enable argument that simply sets a VARIABLE as
# to whether the feature is enabled or not.  The arguments expected
# include the variable name, the --enable-FEATURE name, a help string,
# and a default value.  provides bc_VARIABLE and bc_VARIABLE_default
# variables.
#
#
# BC_ARG_ALIAS
#
# creates an --enable alias.  argument aliases do not show up in help,
# so the only expected arguments to the macro is the variable name,
# and the FEATURE alias name.
#
#
# BC_ARG_WITH
#
# creates a configure --with argument setting one FEATURE VARIABLE if
# the value was with or without (yes/no) and another FEATURE_val for
# the actual value. provides bc_VARIABLE and bc_VARIABLE_default
# variables.
#
#
# BC_ARG_WITH_ALIAS
#
# same as BC_ARG_ALIAS except that it sets the FEATURE_val VARIABLE
# too.  BC_ARG_ALIAS will work as a simplified alternative if the
# FEATURE_val variable is not used (i.e. only a yes/no matters)
#
#
# BC_WITH_FLAG_ARGS
#
# provides convenience argument handlers for specifying CFLAGS,
# CXXFLAGS, LDFLAGS, CPPFLAGS, and LIBS.  more specifically, it adds
# --with-cflags, --with-cxxflags, --with-cppflags, --with-ldflags, and
# --with-libs.
#
###

AC_DEFUN([BC_ARG_ENABLE], [

dnl XXX this was a failed attempt to get AC_ARG_ENABLE to grok an argument name
dnl ifelse([$1], [], [errprint([ERROR: missing first argument (the variable name) to BC_ARG_ENABLE])])
dnl _bc_arg_name=ifelse([$2], [], [$1], [$2])
dnl _bc_arg_help=ifelse([$4], [],
dnl	[ifelse([$3], [], [enable $2], [$3])],
dnl	[ifelse([$3], [], [enable $2 (default=$4)], [$3 (default=$4)] )]
dnl)

# BC_ARG_ENABLE 1:[$1] 2:[$2] 3:[$3] 4:[$4]
bc_[$1]=[$4]
bc_[$1]_default=[$4]
bc_[$1]_set=no
AC_ARG_ENABLE([$2], AC_HELP_STRING([--enable-$2], [$3 (default=$4)]),
	[
	bc_[$1]_set=yes
	case "x$enableval" in
		x[[yY]][[eE]][[sS]])
			bc_[$1]=yes
			;;
		x[[nN]][[oO]])
			bc_[$1]=no
			;;
		x)
			bc_[$1]=yes
			;;
		x*)
			AC_MSG_NOTICE([*** WARNING *** WARNING *** WARNING *** WARNING *** WARNING ***])
			AC_MSG_NOTICE([Unexpected value of [$enableval] to --enable-[$2] (expecting yes/no)])
			bc_[$1]="$enableval"
			;;
	esac
	]
)
])


AC_DEFUN([BC_ARG_ALIAS], [
# BC_ARG_ALIAS 1:[$1] 2:[$2]
AC_ARG_ENABLE([$2],,
	[
	bc_[$1]_set=yes
	case "x$enableval" in
		x[[yY]][[eE]][[sS]])
			bc_[$1]=yes
			;;
		x[[nN]][[oO]])
			bc_[$1]=no
			;;
		x)
			bc_[$1]=yes
			;;
		x*)
			bc_[$1]="$enableval"
			;;
	esac
	]
)
])


AC_DEFUN([BC_ARG_WITH], [
# BC_ARG_WITH 1:[$1] 2:[$2] 3:[$3] 4:[$4] 5:[$5]
bc_[$1]=[$4]
bc_[$1]_val=[$5]
bc_[$1]_default=[$4]
bc_[$1]_set=no
AC_ARG_WITH([$2], AC_HELP_STRING([--with-$2], [$3]),
	[
	bc_[$1]_set=yes
	case "x$withval" in
		x[[yY]][[eE]][[sS]])
			bc_[$1]=yes
			bc_[$1]_val=yes
			;;
		x[[nN]][[oO]])
			bc_[$1]=no
			bc_[$1]_val=no
			;;
		x)
			bc_[$1]=yes
			bc_[$1]_val="$withval"
			;;
		x*)
			bc_[$1]=yes
			bc_[$1]_val="$withval"
			;;
	esac
	]
)
])


AC_DEFUN([BC_ARG_WITH_ALIAS], [
# BC_ARG_WITH_ALIAS 1:[$1] 2:[$2]
AC_ARG_WITH([$2],,
	[
	bc_[$1]_set=yes
	case "x$withval" in
		x[[yY]][[eE]][[sS]])
			bc_[$1]=yes
			bc_[$1]_val=yes
			;;
		x[[nN]][[oO]])
			bc_[$1]=no
			bc_[$1]_val=no
			;;
		x)
			bc_[$1]=yes
			bc_[$1]_val="$withval"
			;;
		x*)
			bc_[$1]=yes
			bc_[$1]_val="$withval"
			;;
	esac
	]
)
])


AC_DEFUN([BC_WITH_FLAG_ARGS], [
AC_ARG_WITH(cflags, AC_HELP_STRING(--with-cflags,
		[Specify additional flags to pass to the C compiler]),
	[
		if test "x$withval" != "xno" ; then
			CFLAGS="$CFLAGS $withval"
		fi
	]
)
AC_ARG_WITH(cxxflags, AC_HELP_STRING(--with-cxxflags,
		[Specify additional flags to pass to the C++ compiler]),
	[
		if test "x$withval" != "xno" ; then
			CXXFLAGS="$CXXFLAGS $withval"
		fi
	]
)
AC_ARG_WITH(cppflags, AC_HELP_STRING(--with-cppflags,
		[Specify additional flags to pass to C preprocessor]),
	[
		if test "x$withval" != "xno"; then
			CPPFLAGS="$CPPFLAGS $withval"
		fi
	]
)
AC_ARG_WITH(ldflags, AC_HELP_STRING(--with-ldflags,
		[Specify additional flags to pass to linker]),
	[
		if test "x$withval" != "xno" ; then
			LDFLAGS="$LDFLAGS $withval"
		fi
	]
)
AC_ARG_WITH(libs, AC_HELP_STRING(--with-libs,
		[Specify additional libraries to link against]),
	[
		if test "x$withval" != "xno" ; then
			LIBS="$LIBS $withval"
		fi
	]
)
])

# Local Variables:
# mode: m4
# tab-width: 8
# standard-indent: 4
# indent-tabs-mode: t
# End:
# ex: shiftwidth=4 tabstop=8
@


1.8
log
@ws. lots and lots of ws.  see sh/ws.sh for details (cases 'abcdeg').
@
text
@d71 3
a73 2
# LDFLAGS, CPPFLAGS, and LIBS.  more specifically, it adds
# --with-cflags, --with-cppflags, --with-ldflags, --with-libs.
d208 8
@


1.7
log
@update copyright to 2007
@
text
@a137 1

@


1.6
log
@record whether a configure option was set or not since it may be set yet still be the default
@
text
@d4 1
a4 1
# Copyright (c) 2005-2006 United States Government as represented by
@


1.5
log
@update copyright to 2006
@
text
@d89 1
d92 1
d118 1
d144 1
d147 1
d175 1
@


1.4
log
@create bc_VARIABLE_default variables that are set to the original default variable value
@
text
@d4 1
a4 1
# Copyright (C) 2005 United States Government as represented by
@


1.3
log
@trailing ws
@
text
@d39 1
a39 1
# creates a configure --enable argument that simply sets a variable as
d42 2
a43 1
# and a default value.
d55 4
a58 3
# creates a configure --with argument setting one FEATURE variable if
# the value was with or without (yes/no) and another FEATURE_var for
# the actual value.
d63 1
a63 1
# same as BC_ARG_ALIAS except that it sets the FEATURE_var variable
d65 1
a65 1
# FEATURE_var variable is not used (i.e. only a yes/no matters)
d88 1
d140 1
@


1.2
log
@prefix the ARG macro variables with bc_ so that they do not conflict with potential argument variables being tested (e.g. with_java was the var and java was an alias, causing an overwrite of with_java)
@
text
@d14 1
a14 1
# 2. Redistributions in binary form must reproduce the above 
d50 1
a50 1
# 
d86 1
a86 1
AC_ARG_ENABLE([$2], AC_HELP_STRING([--enable-$2], [$3 (default=$4)]), 
d137 1
a137 1
AC_ARG_WITH([$2], AC_HELP_STRING([--with-$2], [$3]), 
d196 1
a196 1
	]	
d212 1
a212 1
	]	
d220 1
a220 1
	]	
@


1.2.6.1
log
@merge changes from HEAD aka rel-7-6-4 to the rel-7-6-branch just in case someone peeks a gander or tries to continue/build the branch
@
text
@d14 1
a14 1
# 2. Redistributions in binary form must reproduce the above
d50 1
a50 1
#
d86 1
a86 1
AC_ARG_ENABLE([$2], AC_HELP_STRING([--enable-$2], [$3 (default=$4)]),
d137 1
a137 1
AC_ARG_WITH([$2], AC_HELP_STRING([--with-$2], [$3]),
d196 1
a196 1
	]
d212 1
a212 1
	]
d220 1
a220 1
	]
@


1.1
log
@rename flags.m4 to args.m4 and add new macro definitions for adding new arguments and argument aliases.  BC_ARG_ENABLE, BC_ARG_ALIAS, BC_ARG_WTIH, BC_ARG_WITH_ALIAS macros are added.
@
text
@d85 1
a85 1
[$1]=[$4]
d90 1
a90 1
			[$1]=yes
d93 1
a93 1
			[$1]=no
d96 1
a96 1
			[$1]=yes
d99 3
a101 3
			echo "*** WARNING *** WARNING *** WARNING *** WARNING *** WARNING ***"
			echo "Unexpected value of [$enableval] to --enable-[$2] (expecting yes/no)"
			[$1]="$enableval"
d115 1
a115 1
			[$1]=yes
d118 1
a118 1
			[$1]=no
d121 1
a121 2
			echo "FOUND DEFAULT ENABLE"
			[$1]=yes
d124 1
a124 1
			[$1]="$enableval"
d135 2
a136 2
[$1]=[$4]
[$1]_val=[$5]
d141 2
a142 2
			[$1]=yes
			[$1]_val=yes
d145 2
a146 2
			[$1]=no
			[$1]_val=no
d149 2
a150 2
			[$1]=yes
			[$1]_val="$withval"
d153 2
a154 2
			[$1]=yes
			[$1]_val="$withval"
d168 2
a169 2
			[$1]=yes
			[$1]_val=yes
d172 2
a173 2
			[$1]=no
			[$1]_val=no
d176 2
a177 2
			[$1]=yes
			[$1]_val="$withval"
d180 2
a181 2
			[$1]=yes
			[$1]_val="$withval"
@

