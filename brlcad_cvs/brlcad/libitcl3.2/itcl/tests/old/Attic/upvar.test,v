head	1.3;
access;
symbols
	ansi-20040316-freeze:1.1.1.1
	autoconf-20031203:1.2
	autoconf-20031202:1.2
	phong-branch:1.2.0.4
	photonmap-branch:1.2.0.2
	rel-6-1-DP:1.1.1.1
	rel-6-0-2:1.1.1.1
	rel-6-0-1-branch:1.1.1.1.0.4
	hartley-6-0-post:1.1.1.1
	hartley-6-0-pre:1.1.1.1
	rel-6-0-1:1.1.1.1
	rel-6-0:1.1.1.1
	rel-5-4:1.1.1.1
	offsite-5-3-pre:1.1.1.1
	rel-5-3:1.1.1.1
	rel-5-1-branch:1.1.1.1.0.2
	AUTOCONF:1.2.0.6
	windows-6-0-branch:1.1.1.1.0.8
	ansi-6-0-branch:1.1.1.1.0.6
	itcl3-2:1.1.1.1
	scriptics:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2004.03.09.21.07.23;	author morrison;	state dead;
branches;
next	1.2;

1.2
date	2003.03.13.19.05.52;	author jra;	state Exp;
branches
	1.2.6.1;
next	1.1;

1.1
date	2000.12.06.21.35.14;	author bparker;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.12.06.21.35.14;	author bparker;	state Exp;
branches
	1.1.1.1.6.1
	1.1.1.1.8.1;
next	;

1.1.1.1.6.1
date	2004.03.17.07.13.07;	author morrison;	state dead;
branches;
next	;

1.1.1.1.8.1
date	2004.03.15.17.27.18;	author morrison;	state dead;
branches;
next	;

1.2.6.1
date	2004.03.15.14.07.00;	author erikg;	state dead;
branches;
next	;


desc
@@


1.3
log
@libitcl3.2 was moved to libitcl and updated to latest developer cvs (3.3 pre-release)
@
text
@#
# Tests for "upvar" across interpreter boundaries
# ----------------------------------------------------------------------
#   AUTHOR:  Michael J. McLennan
#            Bell Labs Innovations for Lucent Technologies
#            mmclennan@@lucent.com
#            http://www.tcltk.com/itcl
#
#      RCS:  $Id: upvar.test,v 1.2 2003/03/13 19:05:52 jra Exp $
# ----------------------------------------------------------------------
#            Copyright (c) 1993-1998  Lucent Technologies, Inc.
# ======================================================================
# See the file "license.terms" for information on usage and
# redistribution of this file, and for a DISCLAIMER OF ALL WARRANTIES.

# ----------------------------------------------------------------------
#  DEFINE SOME USEFUL ROUTINES
# ----------------------------------------------------------------------
proc upvarTest_show_var {var val} {
	return "$var>>$val"
}

proc upvarTest_upvar_in_procs {} {
	set upvarTest_var_local "value in main interp"
	foo do {
		upvar upvarTest_var_local var
		set var
	}
}

# ----------------------------------------------------------------------
#  CREATE SOME OBJECTS
# ----------------------------------------------------------------------
Foo foo
Baz baz

# ----------------------------------------------------------------------
#  UPVAR TESTS
# ----------------------------------------------------------------------
test {"::" sends command to global interp but preserves
local variables.  This ensures that when control
shifts to the global scope for Extended Tcl commands,
Expect commands, etc., local variables will be
recognized.} {
	foo do {
		set localvar "special"
		::eval {upvarTest_show_var localvar $localvar}
	}
} {
	$result == "Foo says 'localvar>>special'"
}


test {"upvar" can cross interp boundaries to access local variables} {
	upvarTest_upvar_in_procs
} {
	$result == "Foo says 'value in main interp'"
}

test {"upvar" can cross interp boundaries to access global variables} {
	set upvarTest_var_global "value in main interp"
	foo do {
		upvar upvarTest_var_global var
		set var
	}
} {
	$result == "Foo says 'value in main interp'"
}

test {"upvar" can handle multiple call frames on the stack} {
	set upvarTest_var_global "new value"
	foo do {
		foo do {
			upvar #0 upvarTest_var_global var
			set var
		}
	}
} {
	$result == "Foo says 'Foo says 'new value''"
}

test {"upvar" can cross class interp boundaries} {
	baz do {
		set localvar "value in Baz"
		foo do {
			upvar localvar var
			set var
		}
	}
} {
	$result == "Baz says 'Foo says 'value in Baz''"
}

test {"upvar" can cross class interp boundaries back to main interp} {
	set upvarTest_var_global "global value"
	baz do {
		foo do {
			upvar 2 upvarTest_var_global var
			set var
		}
	}
} {
	$result == "Baz says 'Foo says 'global value''"
}

# ----------------------------------------------------------------------
#  CLEAN UP
# ----------------------------------------------------------------------
foo delete
baz delete
@


1.2
log
@*** empty log message ***
@
text
@d9 1
a9 1
#      RCS:  $Id: upvar.test,v 1.1 1998/07/27 18:41:27 stanton Exp $
@


1.2.6.1
log
@merge from head
@
text
@d9 1
a9 1
#      RCS:  $Id: upvar.test,v 1.2 2003/03/13 19:05:52 jra Exp $
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import itcl3.2
@
text
@@


1.1.1.1.6.1
log
@sync branch with HEAD
@
text
@d9 1
a9 1
#      RCS:  $Id: upvar.test,v 1.1.1.1 2000/12/06 21:35:14 bparker Exp $
@


1.1.1.1.8.1
log
@sync with HEAD -- libitcl3.2 is not in libitcl (v3.3)
@
text
@d9 1
a9 1
#      RCS:  $Id: upvar.test,v 1.1.1.1 2000/12/06 21:35:14 bparker Exp $
@

