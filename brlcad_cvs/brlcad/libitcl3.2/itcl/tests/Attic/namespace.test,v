head	1.3;
access;
symbols
	ansi-20040316-freeze:1.1.1.1
	autoconf-20031203:1.2
	autoconf-20031202:1.2
	phong-branch:1.2.0.4
	photonmap-branch:1.2.0.2
	rel-6-1-DP:1.1.1.1
	rel-6-0-2:1.1.1.1
	rel-6-0-1-branch:1.1.1.1.0.4
	hartley-6-0-post:1.1.1.1
	hartley-6-0-pre:1.1.1.1
	rel-6-0-1:1.1.1.1
	rel-6-0:1.1.1.1
	rel-5-4:1.1.1.1
	offsite-5-3-pre:1.1.1.1
	rel-5-3:1.1.1.1
	rel-5-1-branch:1.1.1.1.0.2
	AUTOCONF:1.2.0.6
	windows-6-0-branch:1.1.1.1.0.8
	ansi-6-0-branch:1.1.1.1.0.6
	itcl3-2:1.1.1.1
	scriptics:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2004.03.09.21.07.22;	author morrison;	state dead;
branches;
next	1.2;

1.2
date	2003.03.13.19.05.49;	author jra;	state Exp;
branches
	1.2.6.1;
next	1.1;

1.1
date	2000.12.06.21.35.13;	author bparker;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.12.06.21.35.13;	author bparker;	state Exp;
branches
	1.1.1.1.6.1
	1.1.1.1.8.1;
next	;

1.1.1.1.6.1
date	2004.03.17.07.13.05;	author morrison;	state dead;
branches;
next	;

1.1.1.1.8.1
date	2004.03.15.17.27.17;	author morrison;	state dead;
branches;
next	;

1.2.6.1
date	2004.03.15.14.06.58;	author erikg;	state dead;
branches;
next	;


desc
@@


1.3
log
@libitcl3.2 was moved to libitcl and updated to latest developer cvs (3.3 pre-release)
@
text
@#
# Tests for classes within namespaces
# ----------------------------------------------------------------------
#   AUTHOR:  Michael J. McLennan
#            Bell Labs Innovations for Lucent Technologies
#            mmclennan@@lucent.com
#            http://www.tcltk.com/itcl
#
#      RCS:  $Id: namespace.test,v 1.2 2003/03/13 19:05:49 jra Exp $
# ----------------------------------------------------------------------
#            Copyright (c) 1993-1998  Lucent Technologies, Inc.
# ======================================================================
# See the file "license.terms" for information on usage and
# redistribution of this file, and for a DISCLAIMER OF ALL WARRANTIES.

package require tcltest
namespace import -force ::tcltest::*

if {[string compare test [info procs test]] == 1} then {source defs}

package require Itcl

# ----------------------------------------------------------------------
#  Classes within namespaces
# ----------------------------------------------------------------------
test namespace-1.1 {same class name can be used in different namespaces} {
    namespace eval test_ns_1 {
        itcl::class Counter {
            variable num 0
            method ++ {{by 1}} {
                incr num $by
            }
            method do {args} {
                return [eval $args]
            }
            common tag 1
        }
        proc exists {} { return "don't clobber me!" }
    }
    namespace eval test_ns_2 {
        itcl::class Counter {
            variable num 0
            method ++ {{by 2}} {
                if {$num == 0} {
                    set num 1
                } else {
                    set num [expr $num*$by]
                }
            }
            method do {args} {
                return [eval $args]
            }
            common tag 2
        }
    }
} ""

test namespace-1.2 {classes in different namespaces are different} {
    list [namespace eval test_ns_1::Counter {info variable tag}] \
         [namespace eval test_ns_2::Counter {info variable tag}] \
} {{protected common ::test_ns_1::Counter::tag 1 1} {protected common ::test_ns_2::Counter::tag 2 2}}

test namespace-1.3 {create an object in one namespace} {
    namespace eval test_ns_1 {
        list [Counter c] [c ++] [c ++] [c ++] [c ++]
    }
} {c 1 2 3 4}

test namespace-1.4 {create an object in another namespace} {
    namespace eval test_ns_2 {
        list [Counter c] [c ++] [c ++] [c ++] [c ++]
    }
} {c 1 2 4 8}

test namespace-1.5 {can find classes wrapped in a namespace} {
    list [catch {test_ns_1::c do itcl::find objects -isa Counter} msg] $msg \
         [catch {test_ns_1::c do itcl::find objects -class Counter} msg] $msg
} {0 ::test_ns_1::c 0 ::test_ns_1::c}

test namespace-1.6 {can't create an object that clobbers a command in this namespace} {
    list [catch {namespace eval test_ns_1 {Counter exists}} msg] $msg
} {1 {command "exists" already exists in namespace "::test_ns_1"}}

test namespace-1.7 {can create an object that shadows a command in the global namespace} {
    list [catch {namespace eval test_ns_1 {Counter lreplace}} msg] $msg \
         [catch {itcl::find objects *lreplace} msg] $msg \
         [namespace eval test_ns_1 {namespace which lreplace}]
} {0 lreplace 0 ::test_ns_1::lreplace ::test_ns_1::lreplace}

namespace delete test_ns_1 test_ns_2

::tcltest::cleanupTests
return
@


1.2
log
@*** empty log message ***
@
text
@d9 1
a9 1
#      RCS:  $Id: namespace.test,v 1.4 2000/07/06 06:43:30 mmc Exp $
@


1.2.6.1
log
@merge from head
@
text
@d9 1
a9 1
#      RCS:  $Id: namespace.test,v 1.2 2003/03/13 19:05:49 jra Exp $
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import itcl3.2
@
text
@@


1.1.1.1.6.1
log
@sync branch with HEAD
@
text
@d9 1
a9 1
#      RCS:  $Id: namespace.test,v 1.1.1.1 2000/12/06 21:35:13 bparker Exp $
@


1.1.1.1.8.1
log
@sync with HEAD -- libitcl3.2 is not in libitcl (v3.3)
@
text
@d9 1
a9 1
#      RCS:  $Id: namespace.test,v 1.1.1.1 2000/12/06 21:35:13 bparker Exp $
@

