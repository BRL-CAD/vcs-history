head	1.2;
access;
symbols
	ansi-20040316-freeze:1.1.1.1
	rel-6-1-DP:1.1.1.1
	rel-6-0-2:1.1.1.1
	rel-6-0-1-branch:1.1.1.1.0.4
	hartley-6-0-post:1.1.1.1
	hartley-6-0-pre:1.1.1.1
	rel-6-0-1:1.1.1.1
	rel-6-0:1.1.1.1
	rel-5-4:1.1.1.1
	offsite-5-3-pre:1.1.1.1
	rel-5-3:1.1.1.1
	rel-5-1-branch:1.1.1.1.0.2
	windows-6-0-branch:1.1.1.1.0.8
	ansi-6-0-branch:1.1.1.1.0.6
	itcl3-2:1.1.1.1
	scriptics:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2003.03.13.18.37.35;	author jra;	state dead;
branches;
next	1.1;

1.1
date	2000.12.06.21.35.18;	author bparker;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.12.06.21.35.18;	author bparker;	state Exp;
branches
	1.1.1.1.6.1
	1.1.1.1.8.1;
next	;

1.1.1.1.6.1
date	2004.03.17.07.14.00;	author morrison;	state dead;
branches;
next	;

1.1.1.1.8.1
date	2004.03.15.17.28.14;	author morrison;	state dead;
branches;
next	;


desc
@@


1.2
log
@*** empty log message ***
@
text
@# This file is a Tcl script to test out [incr Widgets] Labeledframe class.
# It is organized in the standard fashion for Tcl tests with the following
# notation for test case labels:
#
#   1.x - Construction/Destruction tests
#   2.x - Configuration option tests
#   3.x - Method tests
#
# Copyright (c) 1995 DSC Technologies Corporation
#
# See the file "license.terms" for information on usage and redistribution
# of this file, and for a DISCLAIMER OF ALL WARRANTIES.
#
# @@(#) $Id: labeledframe.test,v 1.1 2000/12/06 21:35:18 bparker Exp $

package require tcltest
namespace import -force ::tcltest::*

package require Iwidgets 3.0

if {[string compare test [info procs test]] == 1} {
    source defs
}

wm geometry . {}
raise .

set c 1
set o 1
set m 1

#
# Initial construction test
#
test Labeledframe-1.$c {Labeledframe construction} {
    iwidgets::Labeledframe .lf
    set cs [.lf childsite]
    .lf configure -background yellow
    pack [radiobutton $cs.w1 -anchor w -text "Button1"] -anchor w -fill x
    pack [radiobutton $cs.w2 -anchor w -text "Button2"] -anchor w -fill x
    pack [radiobutton $cs.w3 -anchor w -text "Button3"] -anchor w -fill x
    pack [radiobutton $cs.w4 -anchor w -text "Button4"] -anchor w -fill x
    pack [radiobutton $cs.w5 -anchor w -text "Button5"] -anchor w -fill x
    pack [radiobutton $cs.w6 -anchor w -text "Button6"] -anchor w -fill x
    pack [radiobutton $cs.w7 -anchor w -text "Button7"] -anchor w -fill x
    pack [radiobutton $cs.w8 -anchor w -text "Button8"] -anchor w -fill x

    pack .lf -fill both -expand yes
    update 
} {}

incr c

#
# Option tests which are successful.
#
test Labeledframe-2.$o {configuration option} {
    llength [.lf configure]
} {15}

incr o

foreach test {
    {-labeltext "Label" "Label"}
    {-labelpos nw nw}
    {-labelpos n n}
    {-labelpos ne ne}
    {-labelpos en en}
    {-labelpos e e}
    {-labelpos es es}
    {-labelpos sw sw}
    {-labelpos s s}
    {-labelpos se se}
    {-labelpos wn wn}
    {-labelpos w w}
    {-labelpos ws ws}
    {-labelfont 6x13 6x13}
    {-labelpos nw nw}
    {-labelpos n n}
    {-labelpos ne ne}
    {-labelpos en en}
    {-labelpos e e}
    {-labelpos es es}
    {-labelpos sw sw}
    {-labelpos s s}
    {-labelpos se se}
    {-labelpos wn wn}
    {-labelpos w w}
    {-labelpos ws ws}
    {-relief groove groove}
    {-relief sunken sunken}
    {-relief raised raised}
    {-relief ridge  ridge}
    {-relief flat   flat}
    {-borderwidth 2 2}
    {-borderwidth 4 4}
    {-borderwidth 6 6}
    {-borderwidth 8 8}
    {-borderwidth 10 10}
    {-ipadx 20 20}
    {-ipady 20 20}
    {-ipadx 10 10}
    {-ipady 10 10}
    {-ipadx 0 0}
    {-ipady 0 0}
    } {
	set option [lindex $test 0]
	test Labeledframe-1.$o "configuration options, $option" {
	    .lf configure $option [lindex $test 1]
	    lindex [.lf configure $option] 4
	} [lindex $test 2]
        update 
	incr o
    }

#
# Method tests which are successful.
#
test Labeledframe-3.$m {object method, childsite} {
    list [catch {.lf childsite} msg] $msg
} [list 0 .lf.childsite]

incr m

test Labeledframe-3.$m {object static method, initTable} {

} {}

incr m

#
# Method tests which fail and produce errors
#
test Labeledframe-3.$m {initTable static method} {
    button .b

} {.b}

incr m

test Labeledframe-1.$c {Labeledframe destruction} {
    destroy .b
    destroy .lf
    update 
} {}

incr c

test Labeledframe-1.$c {Labeledframe construction} {
    iwidgets::labeledframe .lf -labeltext "ListBox" -labelpos s
    set cs [.lf childsite]
    .lf configure -background yellow
    pack [radiobutton $cs.w1 -anchor w -text "Button1"] -anchor w -fill x
    pack [radiobutton $cs.w2 -anchor w -text "Button2"] -anchor w -fill x
    pack [radiobutton $cs.w3 -anchor w -text "Button3"] -anchor w -fill x
    pack [radiobutton $cs.w4 -anchor w -text "Button4"] -anchor w -fill x
    pack [radiobutton $cs.w5 -anchor w -text "Button5"] -anchor w -fill x
    pack [radiobutton $cs.w6 -anchor w -text "Button6"] -anchor w -fill x
    pack [radiobutton $cs.w7 -anchor w -text "Button7"] -anchor w -fill x
    pack [radiobutton $cs.w8 -anchor w -text "Button8"] -anchor w -fill x
    pack .lf -fill both -expand yes
    update 
} {}

incr c

test Labeledframe-1.$c {Labeledframe destruction} {
    destroy .lf
    update 
} {}

incr c

test Labeledframe-1.$c {Labeledframe construction} {
    iwidgets::labeledframe .lf 
    pack .lf 
    destroy .lf
    update 
} {}



::tcltest::cleanupTests
exit
@


1.1
log
@Initial revision
@
text
@d14 1
a14 1
# @@(#) $Id: labeledframe.test,v 1.2 2000/06/06 01:37:29 wart Exp $
@


1.1.1.1
log
@Import itcl3.2
@
text
@@


1.1.1.1.6.1
log
@sync branch with HEAD
@
text
@d14 1
a14 1
# @@(#) $Id: labeledframe.test,v 1.1.1.1 2000/12/06 21:35:18 bparker Exp $
@


1.1.1.1.8.1
log
@sync with HEAD -- libitcl3.2 is not in libitcl (v3.3)
@
text
@d14 1
a14 1
# @@(#) $Id: labeledframe.test,v 1.1.1.1 2000/12/06 21:35:18 bparker Exp $
@

