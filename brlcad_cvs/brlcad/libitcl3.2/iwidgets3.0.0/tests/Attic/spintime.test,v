head	1.2;
access;
symbols
	ansi-20040316-freeze:1.1.1.1
	rel-6-1-DP:1.1.1.1
	rel-6-0-2:1.1.1.1
	rel-6-0-1-branch:1.1.1.1.0.4
	hartley-6-0-post:1.1.1.1
	hartley-6-0-pre:1.1.1.1
	rel-6-0-1:1.1.1.1
	rel-6-0:1.1.1.1
	rel-5-4:1.1.1.1
	offsite-5-3-pre:1.1.1.1
	rel-5-3:1.1.1.1
	rel-5-1-branch:1.1.1.1.0.2
	windows-6-0-branch:1.1.1.1.0.8
	ansi-6-0-branch:1.1.1.1.0.6
	itcl3-2:1.1.1.1
	scriptics:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2003.03.13.18.37.38;	author jra;	state dead;
branches;
next	1.1;

1.1
date	2000.12.06.21.35.18;	author bparker;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.12.06.21.35.18;	author bparker;	state Exp;
branches
	1.1.1.1.6.1
	1.1.1.1.8.1;
next	;

1.1.1.1.6.1
date	2004.03.17.07.14.02;	author morrison;	state dead;
branches;
next	;

1.1.1.1.8.1
date	2004.03.15.17.28.16;	author morrison;	state dead;
branches;
next	;


desc
@@


1.2
log
@*** empty log message ***
@
text
@# This file is a Tcl script to test out [incr Widgets] Spintime class.
# It is organized in the standard fashion for Tcl tests with the following
# notation for test case labels:
#
#   1.x - Construction/Destruction tests
#   2.x - Configuration option tests
#   3.x - Method tests
#
# Copyright (c) 1995 DSC Technologies Corporation
#
# See the file "license.terms" for information on usage and redistribution
# of this file, and for a DISCLAIMER OF ALL WARRANTIES.
#
# @@(#) $Id: spintime.test,v 1.1 2000/12/06 21:35:18 bparker Exp $

package require tcltest
namespace import -force ::tcltest::*

package require Iwidgets 3.0

if {[string compare test [info procs test]] == 1} {
    source defs
}

wm geometry . {}
raise .

set c 1
set o 1
set m 1

#
# Initial construction test
#
test Spintime-1.$c {Spintime construction} {
    iwidgets::Spintime .st
    pack .st -padx 10 -pady 10 -fill both -expand yes
    update 
} {}

incr c

#
# Option tests which are successful.
#
test Spintime-2.$o {configuration option} {
    llength [.st configure]
} {25}

incr o

foreach test {
    {-arroworient horizontal horizontal}
    {-arroworient vertical vertical}
    {-background #d9d9d9 #d9d9d9}
    {-cursor gumby gumby}
    {-hourlabel Hour: Hour:}
    {-houron false false}
    {-houron true true}
    {-hourwidth 4 4}
    {-labelmargin 4 4}
    {-labelpos n n}
    {-labelpos s s}
    {-labelpos e e}
    {-labelpos w w}
    {-militaryon no no}
    {-militaryon yes yes}
    {-minutelabel Minute: Minute:}
    {-minuteon false false}
    {-minuteon true true}
    {-minutewidth 4 4}
    {-orient horizontal horizontal}
    {-orient vertical vertical}
    {-secondlabel Second: Second:}
    {-secondon false false}
    {-secondon true true}
    {-secondwidth 4 4}
    {-textbackground GhostWhite GhostWhite}
    {-timemargin 3 3}} {
	set option [lindex $test 0]
	test Spintime-2.$o "configuration options, $option" {
	    .st configure $option [lindex $test 1]
	    lindex [.st configure $option] 4
	} [lindex $test 2]
	update 
	incr o
}

#
# Method tests which are successful.
#
foreach test {
    {{.st show "21:21:21"} {}}
    {{.st get -string} "21:21:21"}} {
	set method [lindex [lindex $test 0] 1]
	test Spintime-3.$m "object methods, $method" {
	    list [catch {eval [lindex $test 0]} msg] $msg
	} [list 0 [lindex $test 1]]
	update 
	incr m
}

foreach test {
    {{.st show bogus} {bad time: "bogus", must be a valid time string, clock clicks value or the keyword now}}
    {{.st get bogus} {bad format option "bogus": should be -string or -clicks}}} {
	set method [lindex [lindex $test 0] 1]
	test ScrolledListBox-3.$m "object methods, $method" {
	    list [catch {eval [lindex $test 0]} msg] $msg
	} [list 1 [lindex $test 1]]
	incr m
}

#
# Conclusion of constrcution/destruction tests
#
test Spintime-1.$c {Spintime destruction} {
    destroy .st
    update 
} {}

incr c

test Spintime-1.$c {Spintime construction} {
    iwidgets::spintime .st 
    pack .st -padx 10 -pady 10 -fill both -expand yes
    update 
} {}

incr c

test Spintime-1.$c {Spintime destruction} {
    destroy .st 
    update 
} {}

incr c

test Spintime-1.$c {Spintime destruction} {
    iwidgets::spintime .st
    pack .st
    destroy .st 
    update 
} {}

::tcltest::cleanupTests
exit
@


1.1
log
@Initial revision
@
text
@d14 1
a14 1
# @@(#) $Id: spintime.test,v 1.2 2000/06/06 01:37:31 wart Exp $
@


1.1.1.1
log
@Import itcl3.2
@
text
@@


1.1.1.1.6.1
log
@sync branch with HEAD
@
text
@d14 1
a14 1
# @@(#) $Id: spintime.test,v 1.1.1.1 2000/12/06 21:35:18 bparker Exp $
@


1.1.1.1.8.1
log
@sync with HEAD -- libitcl3.2 is not in libitcl (v3.3)
@
text
@d14 1
a14 1
# @@(#) $Id: spintime.test,v 1.1.1.1 2000/12/06 21:35:18 bparker Exp $
@

