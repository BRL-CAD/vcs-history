head	1.2;
access;
symbols
	ansi-20040316-freeze:1.1.1.1
	rel-6-1-DP:1.1.1.1
	rel-6-0-2:1.1.1.1
	rel-6-0-1-branch:1.1.1.1.0.4
	hartley-6-0-post:1.1.1.1
	hartley-6-0-pre:1.1.1.1
	rel-6-0-1:1.1.1.1
	rel-6-0:1.1.1.1
	rel-5-4:1.1.1.1
	offsite-5-3-pre:1.1.1.1
	rel-5-3:1.1.1.1
	rel-5-1-branch:1.1.1.1.0.2
	windows-6-0-branch:1.1.1.1.0.8
	ansi-6-0-branch:1.1.1.1.0.6
	itcl3-2:1.1.1.1
	scriptics:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2003.03.13.18.37.32;	author jra;	state dead;
branches;
next	1.1;

1.1
date	2000.12.06.21.35.18;	author bparker;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.12.06.21.35.18;	author bparker;	state Exp;
branches
	1.1.1.1.6.1
	1.1.1.1.8.1;
next	;

1.1.1.1.6.1
date	2004.03.17.07.13.59;	author morrison;	state dead;
branches;
next	;

1.1.1.1.8.1
date	2004.03.15.17.28.13;	author morrison;	state dead;
branches;
next	;


desc
@@


1.2
log
@*** empty log message ***
@
text
@# This file is a Tcl script to test out [incr Widgets] Buttonbox class.
# It is organized in the standard fashion for Tcl tests with the following
# notation for test case labels:
#
#   1.x - Construction/Destruction tests
#   2.x - Configuration option tests
#   3.x - Method tests
#
# Copyright (c) 1995 DSC Technologies Corporation
#
# See the file "license.terms" for information on usage and redistribution
# of this file, and for a DISCLAIMER OF ALL WARRANTIES.
#
# @@(#) $Id: buttonbox.test,v 1.1 2000/12/06 21:35:18 bparker Exp $

package require tcltest
namespace import -force ::tcltest::*

package require Iwidgets 3.0

if {[string compare test [info procs test]] == 1} {
    source defs
}

wm geometry . {}
raise .

set c 1
set o 1
set m 1

#
# Initial construction test
#
test Buttonbox-1.$c {Buttonbox construction} {
    iwidgets::Buttonbox .bb
    pack .bb 
    update 
} {}

incr c

#
# Button additions
#
test Buttonbox-1.$c {Buttonbox construction} {
    .bb add Yes -text Yes
    update 
    .bb add No -text No
    update 
    .bb default Yes
    update 
} {}

incr c

#
# Option tests which are successful.
#
test Buttonbox-2.$o {configuration option} {
    llength [.bb configure]
} {14}

incr o

foreach test {
    {-activebackground #ececec #ececec}
    {-activeforeground Black Black}
    {-orient vertical vertical} 
    {-background #d9d9d9 #d9d9d9} 
    {-cursor gumby gumby} 
    {-disabledforeground #a3a3a3 #a3a3a3}
    {-foreground Black Black}
    {-highlightcolor Black Black}
    {-highlightthickness 2 2}
    {-orient horizontal horizontal} 
    {-padx 10 10} 
    {-pady 10 10}} {
	set option [lindex $test 0]
	test Buttonbox-2.$o "configuration options, $option" {
	    .bb configure $option [lindex $test 1]
	    lindex [.bb configure $option] 4
	} [lindex $test 2]
	update 
	incr o
}

#
# Option tests which fail and produce errors.
#
foreach test {
  {-orient bogus {bad orientation option "bogus", should be either horizontal or vertical}}} {
	set option [lindex $test 0]
        test Buttonbox-2.$o "configuration options, $option" {
	    list [catch {.bb configure $option [lindex $test 1]} msg] $msg
	} [list 1 [lindex $test 2]]
	incr o
}

#
# Method tests which are successful.
#
foreach test {
    {{.bb index 0} {0}}
    {{.bb index end} {1}}
    {{.bb index default} {0}}
    {{.bb index No} {1}}
    {{.bb index Y*} {0}}
    {{.bb add Maybe -text Maybe} {}}
    {{.bb insert 0 Never -text Never} {}}
    {{.bb default Never} {}}
    {{.bb hide Yes} {}}
    {{.bb show Yes } {}}
    {{.bb hide end} {}}
    {{.bb show end} {}}
    {{.bb hide 1} {}}
    {{.bb show 1} {}}
    {{.bb hide N*} {}}
    {{.bb show N*} {}}
    {{.bb invoke Yes} {}}
    {{.bb invoke} {}}
    {{.bb invoke default} {}}
    {{.bb delete Maybe} {}}
    {{.bb buttonconfigure Yes -text YES} {}}
    {{.bb buttonconfigure N* -defaultring no} {}}
    {{.bb buttonconfigure end -defaultring true} {}}} {
	set method [lindex [lindex $test 0] 1]
	test Buttonbox-3.$m "object methods, $method" {
	    list [catch {eval [lindex $test 0]} msg] $msg
	} [list 0 [lindex $test 1]]
	update 
	incr m
}

#
# Method tests which fail and produce errors
#
foreach test {
    {{.bb index 12} {Buttonbox index "12" is out of range}}
    {{.bb index bogus} {bad Buttonbox index "bogus": must be number, end, default, or pattern}}} {
	set method [lindex [lindex $test 0] 1]
	test Buttonbox-3.$m "object methods, $method" {
	    list [catch {eval [lindex $test 0]} msg] $msg
	} [list 1 [lindex $test 1]]
	incr m
}

#
# Conclusion of constrcution/destruction tests
#
test Buttonbox-1.$c {Buttonbox destruction} {
    destroy .bb
    update 
} {}

incr c

test Buttonbox-1.$c {Buttonbox construction} {
    iwidgets::buttonbox .bb
    pack .bb 
    update 
    .bb add Hello -text Hello
    update 
    .bb insert end GoodBye -text GoodBye
    update 
    .bb default Hello
    update 
    .bb default GoodBye
    update 
} {}

incr c

test Buttonbox-1.$c {Buttonbox destruction} {
    destroy .bb
    update 
} {}

incr c

test Buttonbox-1.$c {Buttonbox destruction} {
    iwidgets::buttonbox .bb
    pack .bb
    destroy .bb
    update 
} {}

::tcltest::cleanupTests
exit
@


1.1
log
@Initial revision
@
text
@d14 1
a14 1
# @@(#) $Id: buttonbox.test,v 1.2 2000/06/06 01:37:27 wart Exp $
@


1.1.1.1
log
@Import itcl3.2
@
text
@@


1.1.1.1.6.1
log
@sync branch with HEAD
@
text
@d14 1
a14 1
# @@(#) $Id: buttonbox.test,v 1.1.1.1 2000/12/06 21:35:18 bparker Exp $
@


1.1.1.1.8.1
log
@sync with HEAD -- libitcl3.2 is not in libitcl (v3.3)
@
text
@d14 1
a14 1
# @@(#) $Id: buttonbox.test,v 1.1.1.1 2000/12/06 21:35:18 bparker Exp $
@

