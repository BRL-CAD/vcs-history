head	1.2;
access;
symbols
	ansi-20040316-freeze:1.1.1.1
	rel-6-1-DP:1.1.1.1
	rel-6-0-2:1.1.1.1
	rel-6-0-1-branch:1.1.1.1.0.4
	hartley-6-0-post:1.1.1.1
	hartley-6-0-pre:1.1.1.1
	rel-6-0-1:1.1.1.1
	rel-6-0:1.1.1.1
	rel-5-4:1.1.1.1
	offsite-5-3-pre:1.1.1.1
	rel-5-3:1.1.1.1
	rel-5-1-branch:1.1.1.1.0.2
	windows-6-0-branch:1.1.1.1.0.8
	ansi-6-0-branch:1.1.1.1.0.6
	itcl3-2:1.1.1.1
	scriptics:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2003.03.13.18.33.57;	author jra;	state dead;
branches;
next	1.1;

1.1
date	2000.12.06.21.35.14;	author bparker;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.12.06.21.35.14;	author bparker;	state Exp;
branches
	1.1.1.1.6.1
	1.1.1.1.8.1;
next	;

1.1.1.1.6.1
date	2004.03.17.07.13.20;	author morrison;	state dead;
branches;
next	;

1.1.1.1.8.1
date	2004.03.15.17.27.32;	author morrison;	state dead;
branches;
next	;


desc
@@


1.2
log
@Update to iwidgets 4.0.1
@
text
@dnl	This file is an input file used by the GNU "autoconf" program to
dnl	generate the file "configure", which is run during [incr Tcl]
dnl installation to configure the system for the local environment.

AC_INIT(generic/buttonbox.itk)
# RCS: $Id: configure.in,v 1.1 2000/12/06 21:35:14 bparker Exp $

#--------------------------------------------------------------------
# We should really cache the ITCL_VERSION when we configure itcl,
# and pick up the version from the cache here.
#--------------------------------------------------------------------

ITCL_VERSION=3.2
AC_SUBST(ITCL_VERSION)

PACKAGE=iwidgets
MAJOR_VERSION=2
MINOR_VERSION=2
PATCHLEVEL=.0

VERSION=${MAJOR_VERSION}.${MINOR_VERSION}${PATCHLEVEL}

AC_SUBST(PACKAGE)
AC_SUBST(VERSION)

AC_CONFIG_AUX_DIR(../config)
AC_PREREQ(2.0)

AC_PROG_INSTALL

case "`uname -s`" in
    *win32* | *WIN32* | *CYGWIN_NT*|*CYGWIN_98*|*CYGWIN_95*)
	CYGPATH="cygpath -w"
	RELPATH=".. .. bin"
    ;;
    *)
	CYGPATH=echo
	RELPATH=..
    ;;
esac

AC_SUBST(CYGPATH)
AC_SUBST(RELPATH)

#--------------------------------------------------------------------
#   See if there was a command-line option for where Tcl is;  if
#   not, search for Tcl.
#--------------------------------------------------------------------

SC_PATH_TCLCONFIG
SC_LOAD_TCLCONFIG

#--------------------------------------------------------------------
#   See if there was a command-line option for where Tk is;  if
#   not, search for Tk.
#--------------------------------------------------------------------

SC_PATH_TKCONFIG
SC_LOAD_TKCONFIG

#--------------------------------------------------------------------
#   See if there was a command-line option for where Itcl is;  if
#   not, search for Itcl.
#--------------------------------------------------------------------

AC_ARG_WITH(itcl, [  --with-itcl=DIR         use Itcl 3.0 binaries from DIR],
        itcl_search=$withval, itcl_search=`cd ${srcdir}/../itcl; pwd`)

ITCL_LIB_DIR=""
for dir in $exec_prefix/lib $TCL_LIB_DIR $itcl_search ; do
    if test -r $dir/library/itcl.tcl; then
        ITCL_LIB_DIR=$dir
	ITCL_SRC_DIR=$dir
        break
    fi
done

if test -z "$ITCL_LIB_DIR"; then
    AC_MSG_ERROR(Can't find Itcl libraries.  Use --with-itcl to specify the directory containing itcl.tcl on your system.)
fi

#--------------------------------------------------------------------
#   See if there was a command-line option for where Itk is;  if
#   not, search for Itk.
#--------------------------------------------------------------------

AC_ARG_WITH(itk, [  --with-itk=DIR          use Itk 3.0 binaries from DIR],
        itk_search=$withval, itk_search=`cd ${srcdir}/../itk; pwd`)

ITK_LIB_DIR=""
for dir in $exec_prefix/lib $TCL_LIB_DIR $itk_search ; do
    if test -r $dir/library/itk.tcl; then
        ITK_LIB_DIR=$dir
        ITK_SRC_DIR=$dir
        break
    fi
done

if test -z "$ITK_LIB_DIR"; then
    AC_MSG_ERROR(Can't find Itk libraries.  Use --with-itk to specify the directory containing itk.tcl on your system.)
fi

#--------------------------------------------------------------------
#   Fill in template files with the proper info.
#--------------------------------------------------------------------
#AC_SUBST(BUILD_DIR)
AC_SUBST(TCL_LIB_DIR)
AC_SUBST(TCL_SRC_DIR)
AC_SUBST(TK_LIB_DIR)
AC_SUBST(TK_SRC_DIR)
AC_SUBST(ITCL_LIB_DIR)
AC_SUBST(ITCL_SRC_DIR)
AC_SUBST(ITK_LIB_DIR)
AC_SUBST(ITK_SRC_DIR)

#--------------------------------------------------------------------
# A tcl shell is needed to run the test suite.
#--------------------------------------------------------------------

SC_PROG_TCLSH

#AC_SUBST(ITCL_VERSION)
#AC_SUBST(IWIDGETS_VERSION)
#AC_SUBST(IWIDGETS_LIBRARY)
#AC_SUBST(IWIDGETS_SRC_DIR)

AC_OUTPUT(Makefile \
	iwidgets.tcl \
	pkgIndex.tcl)
@


1.1
log
@Initial revision
@
text
@d6 1
a6 1
# RCS: $Id: configure.in,v 1.3 2000/06/06 00:03:45 wart Exp $
@


1.1.1.1
log
@Import itcl3.2
@
text
@@


1.1.1.1.6.1
log
@sync branch with HEAD
@
text
@d6 1
a6 1
# RCS: $Id: configure.in,v 1.1.1.1 2000/12/06 21:35:14 bparker Exp $
@


1.1.1.1.8.1
log
@sync with HEAD -- libitcl3.2 is not in libitcl (v3.3)
@
text
@d6 1
a6 1
# RCS: $Id: configure.in,v 1.1.1.1 2000/12/06 21:35:14 bparker Exp $
@

