head	11.10;
access;
symbols
	ansi-20040405-merged:11.6.2.2
	postmerge-20040405-ansi:11.8
	premerge-20040404-ansi:11.7
	postmerge-autoconf:11.7
	autoconf-freeze:11.6.10.2
	premerge-autoconf:11.7
	ansi-20040316-freeze:11.6.2.1
	postmerge-20040315-windows:11.7
	premerge-20040315-windows:11.7
	windows-20040315-freeze:11.6.4.1
	autoconf-20031203:11.6
	autoconf-20031202:11.6
	autoconf-branch:11.6.0.10
	phong-branch:11.6.0.8
	photonmap-branch:11.6.0.6
	rel-6-1-DP:11.6
	windows-branch:11.6.0.4
	rel-6-0-2:11.4
	ansi-branch:11.6.0.2
	rel-6-0-1-branch:11.4.0.2
	hartley-6-0-post:11.5
	hartley-6-0-pre:11.4
	rel-6-0-1:11.4
	rel-6-0:11.4
	rel-5-4:11.1
	offsite-5-3-pre:11.2
	rel-5-3:11.1
	rel-5-2:11.1
	rel-5-1-branch:11.1.0.2
	rel-5-1:11.1
	rel-5-0:11.1
	rel-5-0-beta:11.1
	rel-4-5:11.1
	ctj-4-5-post:11.1
	ctj-4-5-pre:11.1
	rel-4-4:11.1
	rel-4-0:10.1
	rel-3-5:9.1
	rel-3-0:8.1
	rel-2-3:7.1
	rel-2-0:5.1
	rel-1-24:5.1
	rel-1-20:4.2
	rel-1-10:4.1
	rt-2:1.1;
locks; strict;
comment	@ * @;


11.10
date	2004.05.24.04.13.25;	author morrison;	state dead;
branches;
next	11.9;

11.9
date	2004.05.10.15.30.42;	author erikg;	state Exp;
branches;
next	11.8;

11.8
date	2004.04.05.07.49.23;	author morrison;	state Exp;
branches;
next	11.7;

11.7
date	2004.02.02.17.39.01;	author morrison;	state Exp;
branches;
next	11.6;

11.6
date	2002.08.20.17.07.24;	author jra;	state Exp;
branches
	11.6.2.1
	11.6.4.1
	11.6.10.1;
next	11.5;

11.5
date	2002.08.15.20.54.37;	author hartley;	state Exp;
branches;
next	11.4;

11.4
date	2001.10.12.18.37.41;	author butler;	state Exp;
branches;
next	11.3;

11.3
date	2001.04.12.17.44.07;	author bparker;	state Exp;
branches;
next	11.2;

11.2
date	2000.08.24.03.58.27;	author mike;	state Exp;
branches;
next	11.1;

11.1
date	95.01.04.10.09.09;	author mike;	state Rel4_4;
branches;
next	10.3;

10.3
date	94.08.25.17.54.30;	author gdurf;	state Exp;
branches;
next	10.2;

10.2
date	94.08.23.18.49.01;	author gdurf;	state Exp;
branches;
next	10.1;

10.1
date	91.10.12.06.46.15;	author mike;	state Rel4_0;
branches;
next	9.1;

9.1
date	89.05.19.06.08.31;	author mike;	state Rel3_5;
branches;
next	8.4;

8.4
date	89.03.07.00.38.44;	author mike;	state Exp;
branches;
next	8.3;

8.3
date	89.01.09.06.27.50;	author mike;	state Exp;
branches;
next	8.2;

8.2
date	88.12.29.20.51.34;	author mike;	state Exp;
branches;
next	8.1;

8.1
date	88.10.05.00.41.13;	author mike;	state Rel3_0;
branches;
next	7.3;

7.3
date	88.08.10.05.15.23;	author phil;	state Exp;
branches;
next	7.2;

7.2
date	88.05.16.00.06.29;	author mike;	state Exp;
branches;
next	7.1;

7.1
date	87.11.03.00.06.53;	author mike;	state Rel;
branches;
next	6.1;

6.1
date	87.07.11.08.10.03;	author mike;	state Rel;
branches;
next	5.1;

5.1
date	87.06.24.22.38.02;	author mike;	state Rel;
branches;
next	4.2;

4.2
date	87.02.13.00.40.37;	author mike;	state Exp;
branches;
next	4.1;

4.1
date	86.12.29.03.12.36;	author mike;	state Rel1;
branches;
next	1.11;

1.11
date	86.11.15.06.06.17;	author mike;	state Exp;
branches;
next	1.10;

1.10
date	86.11.05.06.21.44;	author mike;	state Exp;
branches;
next	1.9;

1.9
date	86.10.03.08.16.27;	author mike;	state Exp;
branches;
next	1.8;

1.8
date	86.10.03.06.11.24;	author mike;	state Exp;
branches;
next	1.7;

1.7
date	86.10.03.05.47.39;	author mike;	state Exp;
branches;
next	1.6;

1.6
date	86.09.23.01.51.05;	author mike;	state Exp;
branches;
next	1.5;

1.5
date	86.08.13.22.11.08;	author mike;	state Exp;
branches;
next	1.4;

1.4
date	86.08.13.03.56.04;	author mike;	state Exp;
branches;
next	1.3;

1.3
date	86.04.16.23.11.25;	author mike;	state Exp;
branches;
next	1.2;

1.2
date	85.09.15.09.37.39;	author mike;	state Exp;
branches;
next	1.1;

1.1
date	85.08.08.07.47.13;	author mike;	state Exp;
branches;
next	;

11.6.2.1
date	2002.09.19.18.00.40;	author morrison;	state Exp;
branches;
next	11.6.2.2;

11.6.2.2
date	2004.03.17.21.16.06;	author morrison;	state Exp;
branches;
next	;

11.6.4.1
date	2004.03.11.23.40.40;	author morrison;	state Exp;
branches;
next	;

11.6.10.1
date	2004.02.12.19.40.45;	author erikg;	state Exp;
branches;
next	11.6.10.2;

11.6.10.2
date	2004.03.15.13.28.06;	author erikg;	state Exp;
branches;
next	;


desc
@Animate sub-frame images on the Ikonas.
@


11.10
log
@moved to src/fb/
@
text
@/*
 *			F B A N I M . C
 *
 * Function -
 *	Dynamicly modify framebuffer Zoom and Window parameters,
 *	to flip betwen sub-images, giving an inexpensive animation
 *	effect.
 *
 *  Author -
 *	Michael John Muuss
 *  
 *  Source -
 *	SECAD/VLD Computing Consortium, Bldg 394
 *	The U. S. Army Ballistic Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005
 *  
 *  Copyright Notice -
 *	This software is Copyright (C) 1985-2004 by the United States Army.
 *	All rights reserved.
 */
#ifndef lint
static const char RCSid[] = "@@(#)$Header: /n/xoff/cvs/brlcad/fb/fbanim.c,v 11.9 2004/05/10 15:30:42 erikg Exp $ (BRL)";
#endif

#ifdef HAVE_CONFIG_H
# include "config.h"
#endif



#include <stdio.h>
#include <string.h>
#include <sys/time.h>		/* For struct timeval */

#include "machine.h"
#include "externs.h"		/* For getopt() */
#include "fb.h"

int		sec;
int		usec;

void		newframe(register int i);

FBIO	*fbp;
int	screen_width;		/* Number of pixels/line in frame buffer */
int	screen_height;
int	verbose = 0;
int	rocking = 0;

int	subimage_width;		/* subimage width */
int	subimage_height;		/* subimage height */
int nframes;			/* number of frames */
int im_line;			/* Number of images across the screen */
int fps;			/* frames/sec */
int passes = 100;		/* limit on number of passes */
int inverse;			/* for old 4th quadrant sequences */

char Usage[] = "\
Usage: fbanim [-h -i -r -v] [-p passes]\n\
	[-S squarescrsize] [-W scr_width] [-N scr_height]\n\
	[-s square_subimage_size] [-w subimage_width] [-n subimage_height]\n\
	subimage_width nframes [fps]\n";

int
get_args(int argc, register char **argv)
{
	register int c;

	while ( (c = getopt( argc, argv, "s:w:n:hirvp:S:W:N:" )) != EOF )  {
		switch( c )  {
		case 's':
			subimage_width = subimage_height = atoi(optarg);
			break;
		case 'w':
			subimage_width = atoi(optarg);
			break;
		case 'n':
			subimage_height = atoi(optarg);
			break;
		case 'i':
			inverse = 1;
			break;
		case 'p':
			passes = atoi(optarg);
			if(passes<1)  passes=1;
			break;
		case 'r':
			rocking = 1;
			break;
		case 'v':
			verbose = 1;
			break;
		case 'h':
			/* high-res screen */
			screen_width = screen_height = 1024;
			break;
		case 'S':
			screen_height = screen_width = atoi(optarg);
			break;
		case 'W':
			screen_width = atoi(optarg);
			break;
		case 'N':
			screen_height = atoi(optarg);
			break;

		default:		/* '?' */
			return(0);
		}
	}

	if( optind+1 >= argc )	/* two mandatory positional args */
		return(0);
	return(1);		/* OK */
}

int
main(int argc, char **argv)
{
	register int i;

	if ( !get_args( argc, argv ) )  {
		(void)fputs(Usage, stderr);
		exit( 1 );
	}

	/* If not given with -s & -n, use (old) positional param (compat) */
	if( subimage_width <= 0 || subimage_height <= 0 )  {
		subimage_width = subimage_height = atoi(argv[optind]);
		if( subimage_width == 0 ) {
			fprintf(stderr,"fbanim: must specify image size\n");
			exit( 2 );
		}
	}
	nframes = atoi(argv[optind+1]);
	if( optind+2 >= argc )
		fps = 8;
	else
		fps = atoi(argv[optind+2]);

	if( fps <= 1 )  {
		sec = fps ? 1 : 4;
		usec = 0;
	} else {
		sec = 0;
		usec = 1000000/fps;
	}

	if( (fbp = fb_open( NULL, screen_width, screen_height )) == NULL )  {
		fprintf(stderr,"fbanim: fb_open failed\n");
		exit(12);
	}
	screen_width = fb_getwidth(fbp);
	screen_height = fb_getheight(fbp);

	im_line = screen_width/subimage_width;	/* number of images across line */

	fb_zoom( fbp, screen_width/subimage_width, screen_height/subimage_height );

	while(passes-- > 0)  {
		if( !rocking )  {
			/* Play from start to finish, over and over */
			for( i=0; i<nframes; i++ )
				newframe(i);
		} else {
			/* Play from start to finish and back */
			for( i=0; i<nframes; i++ )
				newframe(i);
			while(i-->0)
				newframe(i);
		}
	}
	fb_close( fbp );
	return(0);
}

void
newframe(register int i)
{
	register int	xPan, yPan;		/* Pan Location */
	struct timeval tv;
	fd_set fds;

	xPan = (i%im_line)*subimage_width+subimage_width/2;
	yPan = (i/im_line)*subimage_height+subimage_height/2;
	if( inverse )
		yPan = screen_width - yPan;
	if( verbose )  {
		printf("%3d: %3d %3d\n", i, xPan, yPan);
		fflush( stdout );
	}
	fb_window( fbp, xPan, yPan );

	FD_ZERO(&fds);
	FD_SET(fileno(stdin), &fds);	

	tv.tv_sec = sec;
	tv.tv_usec = usec;

	select(fileno(stdin)+1, &fds, (fd_set *)0, (fd_set *)0, &tv);
}
@


11.9
log
@change conf.h to a wrapped config.h
@
text
@d22 1
a22 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/fb/fbanim.c,v 11.8 2004/04/05 07:49:23 morrison Exp $ (BRL)";
@


11.8
log
@merge of ansi-6-0-branch into HEAD
@
text
@d22 1
a22 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
d25 5
a29 1
#include "conf.h"
@


11.7
log
@update copyright to include span through 2003
@
text
@d22 1
a22 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/fb/fbanim.c,v 11.6 2002/08/20 17:07:24 jra Exp $ (BRL)";
d38 1
a38 1
void		newframe();
d61 1
a61 2
get_args( argc, argv )
register char **argv;
d114 1
a114 2
main(argc, argv )
char **argv;
d174 1
a174 2
newframe(i)
register int i;
@


11.6
log
@Restoration of entire source tree to Pre-Hartley state
@
text
@d18 1
a18 1
 *	This software is Copyright (C) 1985 by the United States Army.
d22 1
a22 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/fb/fbanim.c,v 11.4 2001/10/12 18:37:41 butler Exp $ (BRL)";
@


11.6.4.1
log
@sync to HEAD...
@
text
@d18 1
a18 1
 *	This software is Copyright (C) 1985-2004 by the United States Army.
d22 1
a22 1
static const char RCSid[] = "@@(#)$Header: /n/cad/c/CVS/brlcad/fb/fbanim.c,v 11.7 2004/02/02 17:39:01 morrison Exp $ (BRL)";
@


11.6.10.1
log
@merge from HEAD
@
text
@d18 1
a18 1
 *	This software is Copyright (C) 1985-2004 by the United States Army.
d22 1
a22 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/fb/fbanim.c,v 11.7 2004/02/02 17:39:01 morrison Exp $ (BRL)";
@


11.6.10.2
log
@merge from head
@
text
@d22 1
a22 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/fb/fbanim.c,v 11.6.10.1 2004/02/12 19:40:45 erikg Exp $ (BRL)";
@


11.6.2.1
log
@Initial ANSIfication
@
text
@d22 1
a22 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/fb/fbanim.c,v 11.6 2002/08/20 17:07:24 jra Exp $ (BRL)";
d38 1
a38 1
void		newframe(register int i);
d61 2
a62 1
get_args(int argc, register char **argv)
d115 2
a116 1
main(int argc, char **argv)
d176 2
a177 1
newframe(register int i)
@


11.6.2.2
log
@sync branch with HEAD
@
text
@d18 1
a18 1
 *	This software is Copyright (C) 1985-2004 by the United States Army.
d22 1
a22 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
@


11.5
log
@Converted from K&R to ANSI C - RFH
@
text
@d38 1
a38 1
void		newframe(register int i);
d61 2
a62 1
get_args(int argc, register char **argv)
d115 2
a116 1
main(int argc, char **argv)
d176 2
a177 1
newframe(register int i)
@


11.4
log
@Misc warnings eliminated
@
text
@d22 1
a22 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/fb/fbanim.c,v 11.3 2001/04/12 17:44:07 bparker Exp $ (BRL)";
d38 1
a38 1
void		newframe();
d61 1
a61 2
get_args( argc, argv )
register char **argv;
d114 1
a114 2
main(argc, argv )
char **argv;
d174 1
a174 2
newframe(i)
register int i;
@


11.3
log
@*- get rid of warnings
@
text
@d22 1
a22 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/fb/fbanim.c,v 11.2 2000/08/24 03:58:27 mike Exp $ (BRL)";
d28 1
@


11.2
log
@
const RCSid
@
text
@d22 1
a22 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/fb/fbanim.c,v 11.1 1995/01/04 10:09:09 mike Rel4_4 $ (BRL)";
d59 1
d113 1
d171 1
@


11.1
log
@Release_4.4
@
text
@d22 1
a22 1
static char RCSid[] = "@@(#)$Header: /m/cad/fb/RCS/fbanim.c,v 10.3 94/08/25 17:54:30 gdurf Exp $ (BRL)";
@


10.3
log
@Removed bsdselect
@
text
@d22 1
a22 1
static char RCSid[] = "@@(#)$Header: /m/cad/fb/RCS/fbanim.c,v 10.2 1994/08/23 18:49:01 gdurf Exp gdurf $ (BRL)";
@


10.2
log
@Added includes, factored ifdefs
@
text
@d22 1
a22 1
static char RCSid[] = "@@(#)$Header: /m/cad/fb/RCS/fbanim.c,v 10.1 1991/10/12 06:46:15 mike Rel4_0 gdurf $ (BRL)";
d28 1
d176 2
d188 8
a195 1
	bsdselect( 0, sec, usec );
@


10.1
log
@Release_4.0
@
text
@d22 1
a22 1
static char RCSid[] = "@@(#)$Header: /m/cad/fb/RCS/fbanim.c,v 9.1 89/05/19 06:08:31 mike Rel3_5 $ (BRL)";
d25 2
d28 3
a34 4

extern int	getopt();
extern char	*optarg;
extern int	optind;
@


9.1
log
@Release_3.5
@
text
@d22 1
a22 1
static char RCSid[] = "@@(#)$Header: fbanim.c,v 8.4 89/03/07 00:38:44 mike Exp $ (BRL)";
@


8.4
log
@Converted to bsdselect() for sub-second timing
@
text
@d22 1
a22 1
static char RCSid[] = "@@(#)$Header: fbanim.c,v 8.3 89/01/09 06:27:50 mike Locked $ (BRL)";
@


8.3
log
@Improved support on SGI
@
text
@d22 1
a22 1
static char RCSid[] = "@@(#)$Header: /n/spark/m/cad/util/RCS/fbanim.c,v 8.2 88/12/29 20:51:34 mike Exp $ (BRL)";
d28 2
a29 4
#if defined(BSD)
#include <sys/time.h>		/* for struct timeval */
#define HAS_TIMEVAL	yes
#endif
a30 17
#if defined(sgi)
#	if !defined(mips) || defined(SGI4D_Rel2)
		/* 3D systems, and Rel2 4D systems. */
#		include <bsd/sys/types.h>
#		include <bsd/sys/time.h>
#	else
		/* Rel3 4D systems got it right */
#		include <sys/types.h>
#		include <sys/time.h>
#	endif
#	define HAS_TIMEVAL yes
#endif

#ifdef HAS_TIMEVAL
struct timeval	tv;
#endif

a133 1
#ifdef HAS_TIMEVAL
d135 2
a136 2
		tv.tv_sec = fps ? 1 : 4;
		tv.tv_usec = 0;
d138 2
a139 2
		tv.tv_sec = 0;
		tv.tv_usec = 1000000/fps;
a140 1
#endif
d184 1
a184 5
#ifdef HAS_TIMEVAL
	(void)select( 0, 0, 0, 0, &tv );
#else
	(void)sleep(1);	/* best I can do, sorry */
#endif
@


8.2
log
@Added additional option handling.
This brings the program more into line with the newer conventions
(so that it works).
The positional subimage_width parameter still remains (for now),
for compatability.
@
text
@d22 1
a22 1
static char RCSid[] = "@@(#)$Header: fbanim.c,v 8.1 88/10/05 00:41:13 mike Locked $ (BRL)";
d28 1
a28 1
#ifdef BSD
d30 1
a30 1
struct timeval tv;
d33 17
d153 1
a153 1
#ifdef BSD
d205 1
a205 1
#ifdef BSD
@


8.1
log
@Release_3.0
@
text
@d22 1
a22 1
static char RCSid[] = "@@(#)$Header: fbanim.c,v 7.3 88/08/10 05:15:23 phil Exp $ (BRL)";
d39 5
a43 7
FBIO *fbp;
int pix_line;		/* Number of pixels/line in frame buffer */
int zoom;		/* Zoom Factor */
int xPan, yPan;		/* Pan Location */
int xoff, yoff;		/* Ikonas farbling */
int verbose = 0;
int rocking = 0;
d45 2
a46 2
int w;				/* image width */
int n;				/* image height */
d48 1
a48 1
int im_line;
d54 4
a57 2
Usage: fbanim [-h -i -r -v] [-s squaresize] [-w width] [-n height]\n\
        [-p passes] width nframes [fps]\n";
d64 1
a64 1
	while ( (c = getopt( argc, argv, "s:w:n:hirvp:" )) != EOF )  {
a65 4
		case 'h':
			/* high-res */
			pix_line = 1024;
			break;
d67 1
a67 1
			w = n = atoi(optarg);
d70 1
a70 1
			w = atoi(optarg);
d73 1
a73 1
			n = atoi(optarg);
d88 13
a116 1
	pix_line = 512;
d122 7
a128 4
	w = atoi(argv[optind]);
	if( w == 0 || n == 0 ) {
		fprintf(stderr,"fbanim: must specify image size\n");
		exit( 2 );
d146 2
a147 2
	if( (fbp = fb_open( NULL, pix_line, pix_line )) == NULL )  {
		fprintf(stderr,"fb_open failed\n");
d150 2
d153 1
a153 3
	zoom = pix_line/w;
	im_line = pix_line/w;	/* number of images across line */
	xPan = yPan = 0;
d155 1
a155 1
	fb_zoom( fbp, pix_line/w, pix_line/n );
d177 4
a180 2
	xPan = (i%im_line)*w+w/2;
	yPan = (i/im_line)*n+n/2;
d182 1
a182 1
		yPan = pix_line - yPan;
d190 1
a190 2
#endif
#ifdef SYSV
@


7.3
log
@added -s -w -n flags to handle non-square images (sort of)
the width positional parameter is still required (sigh)
what to do about zooms on non-square images is unclear (nonuniform now)
@
text
@d22 1
a22 1
static char RCSid[] = "@@(#)$Header: fbanim.c,v 7.2 88/05/16 00:06:29 phil Locked $ (BRL)";
@


7.2
log
@lint fixes
@
text
@d22 1
a22 1
static char RCSid[] = "@@(#)$Header: fbanim.c,v 7.1 87/11/03 00:06:53 mike Locked $ (BRL)";
d40 3
a42 3
int pix_line;		/* Number of pixels/line */
int zoom;		/* Zoom Factor.			*/
int xPan, yPan;		/* Pan Location.		*/
d47 3
a49 1
int w, n;
d56 2
a57 1
Usage: fbanim [-h -i -r -v] [-p passes] width nframes [fps]\n";
d64 1
a64 1
	while ( (c = getopt( argc, argv, "hirvp:" )) != EOF )  {
d70 9
d115 3
a117 3
	if( w < 4 || w > 512 )  {
		printf("w=%d out of range\n");
		exit(12);
d119 1
a119 1
	n = atoi(argv[optind+1]);
d144 1
a144 1
	fb_zoom( fbp, pix_line/w, pix_line/w );
d149 1
a149 1
			for( i=0; i<n; i++ )
d153 1
a153 1
			for( i=0; i<n; i++ )
d167 1
a167 1
	yPan = (i/im_line)*w+w/2;
@


7.1
log
@Release 2.3
@
text
@d22 1
a22 1
static char RCSid[] = "@@(#)$Header: fbanim.c,v 6.1 87/07/11 08:10:03 mike Rel $ (BRL)";
d37 2
d150 1
@


6.1
log
@Release 2.0
@
text
@d22 1
a22 1
static char RCSid[] = "@@(#)$Header: fbanim.c,v 5.1 87/06/24 22:38:02 mike Rel $ (BRL)";
@


5.1
log
@Release 1.24
@
text
@d22 1
a22 1
static char RCSid[] = "@@(#)$Header: fbanim.c,v 4.2 87/02/13 00:40:37 mike Exp $ (BRL)";
@


4.2
log
@Release 1.20 -- First Formal Release
@
text
@d22 1
a22 1
static char RCSid[] = "@@(#)$Header: fbanim.c,v 4.1 86/12/29 03:12:36 mike Rel1 $ (BRL)";
@


4.1
log
@BRL CAD Distribution Release 1.10
@
text
@d22 1
a22 1
static char RCSid[] = "@@(#)$Header: fbanim.c,v 1.11 86/11/15 06:06:17 mike Exp $ (BRL)";
@


1.11
log
@Converted to getopt
@
text
@d22 1
a22 1
static char RCSid[] = "@@(#)$Header: fbanim.c,v 1.10 86/11/05 06:21:44 mike Locked $ (BRL)";
@


1.10
log
@Added -i flag to allow display of old 4th quadrant images
from long ago.
@
text
@d22 1
a22 1
static char RCSid[] = "@@(#)$Header: fbanim.c,v 1.9 86/10/03 08:16:27 mike Locked $ (BRL)";
d33 4
d51 2
a52 1
char Usage[] = "Usage: fbanim [-h] [-i] [-r] [-p#pass] width nframes [fps]\n";
d54 2
a55 2
main(argc, argv )
char **argv;
d57 1
a57 1
	register int i;
d59 2
a60 8
	if( argc < 3 )  {
		printf(Usage);
		exit(12);
	}

	pix_line = 512;
	while( argc > 1 && argv[1][0] == '-' )  {
		switch( argv[1][1] )  {
d62 1
d65 3
d69 1
a69 1
			passes = atoi(&argv[1][2]);
a71 3
		case 'i':
			inverse = 1;
			break;
d78 3
a80 3
		default:
			printf(Usage);
			exit(12);
a81 2
		argc--;
		argv++;
d84 17
a100 1
	w = atoi(argv[1]);
d105 3
a107 3
	n = atoi(argv[2]);
	if( argc == 4 )
		fps = atoi(argv[3]);
d109 2
a110 1
		fps = 8;
@


1.9
log
@argc bug
@
text
@d22 1
a22 1
static char RCSid[] = "@@(#)$Header: fbanim.c,v 1.8 86/10/03 06:11:24 mike Exp $ (BRL)";
d45 1
d47 1
a47 1
char Usage[] = "Usage: fbanim [-h] [-v] [-r] [-p#pass] width nframes [fps]\n";
d69 3
d115 1
a115 3
	fb_zoom( fbp,
		pix_line==w? 0 : pix_line/w,
		pix_line==w? 0 : pix_line/w );
d138 2
@


1.8
log
@Added fb_close
@
text
@d22 1
a22 1
static char RCSid[] = "@@(#)$Header: fbanim.c,v 1.7 86/10/03 05:47:39 mike Exp $ (BRL)";
d59 1
a59 1
	while( argv[1][0] == '-' )  {
@


1.7
log
@Converted to new libfb
@
text
@d22 1
a22 1
static char RCSid[] = "@@(#)$Header: fbanim.c,v 1.6 86/09/23 01:51:05 mike Exp $ (BRL)";
d128 1
@


1.6
log
@Fixed BSD include for 4.3 (still works with 4.2)
@
text
@d22 1
a22 1
static char RCSid[] = "@@(#)$Header: fbanim.c,v 1.5 86/08/13 22:11:08 mike Locked $ (BRL)";
d33 1
a100 2
	if( pix_line > 512 )
		fbsetsize(pix_line);
d102 2
a103 2
	if( fbopen( NULL, APPEND ) < 0 )  {
		fprintf(stderr,"fbopen failed\n");
d111 2
a112 1
	fbzoom( pix_line==w? 0 : pix_line/w,
d139 1
a139 1
	fbwindow( xPan, yPan );
@


1.5
log
@Typo.
@
text
@d22 1
a22 1
static char RCSid[] = "@@(#)$Header: fbanim.c,v 1.4 86/08/13 03:56:04 mike Exp $ (BRL)";
d29 1
a29 1
#include <time.h>		/* for struct timeval */
@


1.4
log
@Fixed typo.
@
text
@d22 1
a22 1
static char RCSid[] = "@@(#)$Header$ (BRL)";
d144 1
a144 1
	(soid)sleep(1);	/* best I can do, sorry */
@


1.3
log
@animate framebuffer full of small images by zooming in
and changing window information.
@
text
@d2 1
a2 1
 *			M O V . C
d6 2
a7 1
 *	to flip betwen sub-images.
d9 11
a19 1
 *  Mike Muuss, 8/7/85.
d21 4
d26 3
a29 3

#include "/vld/include/fb.h"

d31 1
d37 2
d40 4
a43 1
char Usage[] = "Usage: mov [-h] [-p#pass] width nframes [fps]\n";
d45 2
a49 1
	register int w, n;
a50 3
	register int im_line;
	int fps;			/* frames/sec */
	int passes = 100;		/* limit on number of passes */
d67 6
d82 2
a83 2
	if( w < 4 || w > 256 )  {
		printf("w of %d out of range\n");
d91 1
d99 1
d115 14
a128 5
	while(passes-- > 0)  for( i=0; i<n; i++ )  {
		xPan = (i%im_line)*w+w/2;
		yPan = (i/im_line)*w+w/2;
		if( fps < 6 )
			printf("%3d: %3d %3d\n", i, xPan, yPan);
d130 7
a136 1
		fbwindow( xPan, yPan );
a137 1
		(void)select( 0, 0, 0, 0, &tv );
d139 7
@


1.2
log
@Added ability to specify number of passes.
Useful for demo scripts.
@
text
@d5 1
a5 1
 *	Dynamicly modify Ikonas Zoom and Window parameters,
d10 1
a10 2
#include <stdio.h>	
#include <sys/ioctl.h>
d13 2
a16 6
extern int ikfd;	/* Ikonas FD */
extern int ikhires;

#include <vaxuba/ikio.h>
long invis = INVISIBLEIO;
		
a41 1
			ikhires = 1;
d73 2
d76 4
a79 1
	ikopen();
d85 2
a86 1
	ikzoom( zoom-1, zoom-1 );
d89 2
a90 2
		xPan = (i%im_line)*w;
		yPan = (i/im_line)*w;
d94 1
a94 21
		/* Attempt to use "invisible I/O" -- between frames */
		if( ioctl( ikfd, IKSETCONTROL, &invis ) < 0 )
			perror("IKSETCONTROL");

		if( ikhires )
			xPan = xPan;
		else
			xPan = (xPan*4)-2;

		yPan += 4063;
		if( w <= 32 )  {
			ikwindow( xPan, yPan+27);
		} else if( w <= 64 )  {
			ikwindow( xPan, yPan+(ikhires?29:30));
		} else if( w <= 128 )  {
			ikwindow( xPan, yPan+25);
		} else if ( w <= 256 )  {
			ikwindow( xPan, yPan+17);
		} else if ( w <= 512 )  {
			ikwindow( xPan, yPan );
		}
@


1.1
log
@Initial revision
@
text
@d27 1
a27 1
char Usage[] = "Usage: mov [-h] width nframes [fps]\n";
d35 2
a36 1
	int fps;
d42 16
a57 1
	if( strcmp( argv[1], "-h" ) == 0 )  {
a59 4
		ikhires = 1;
		pix_line = 1024;
	} else {
		pix_line = 512;
d61 1
d63 4
d88 1
a88 1
	while(1)  for( i=0; i<n; i++ )  {
@
