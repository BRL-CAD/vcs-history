head	11.11;
access;
symbols
	ansi-20040405-merged:11.7.2.3
	postmerge-20040405-ansi:11.9
	premerge-20040404-ansi:11.8
	postmerge-autoconf:11.8
	autoconf-freeze:11.7.10.2
	premerge-autoconf:11.8
	ansi-20040316-freeze:11.7.2.1
	postmerge-20040315-windows:11.8
	premerge-20040315-windows:11.8
	windows-20040315-freeze:11.7.4.1
	autoconf-20031203:11.7
	autoconf-20031202:11.7
	autoconf-branch:11.7.0.10
	phong-branch:11.7.0.8
	photonmap-branch:11.7.0.6
	rel-6-1-DP:11.7
	windows-branch:11.7.0.4
	rel-6-0-2:11.5
	ansi-branch:11.7.0.2
	rel-6-0-1-branch:11.5.0.2
	hartley-6-0-post:11.6
	hartley-6-0-pre:11.5
	rel-6-0-1:11.5
	rel-6-0:11.5
	rel-5-4:11.2
	offsite-5-3-pre:11.3
	rel-5-3:11.2
	rel-5-2:11.2
	rel-5-1-branch:11.2.0.2
	rel-5-1:11.2
	rel-5-0:11.1
	rel-5-0-beta:11.1
	rel-4-5:11.1
	ctj-4-5-post:11.1
	ctj-4-5-pre:11.1
	rel-4-4:11.1
	rel-4-0:10.1
	rel-3-5:9.1
	rel-3-0:8.1;
locks; strict;
comment	@ * @;


11.11
date	2004.05.24.04.13.25;	author morrison;	state dead;
branches;
next	11.10;

11.10
date	2004.05.10.15.30.42;	author erikg;	state Exp;
branches;
next	11.9;

11.9
date	2004.04.05.07.49.23;	author morrison;	state Exp;
branches;
next	11.8;

11.8
date	2004.02.02.17.39.01;	author morrison;	state Exp;
branches;
next	11.7;

11.7
date	2002.08.20.17.07.24;	author jra;	state Exp;
branches
	11.7.2.1
	11.7.4.1
	11.7.10.1;
next	11.6;

11.6
date	2002.08.15.20.54.37;	author hartley;	state Exp;
branches;
next	11.5;

11.5
date	2001.04.12.17.44.07;	author bparker;	state Exp;
branches;
next	11.4;

11.4
date	2001.04.05.19.35.03;	author morrison;	state Exp;
branches;
next	11.3;

11.3
date	2000.08.24.03.58.26;	author mike;	state Exp;
branches;
next	11.2;

11.2
date	99.12.24.23.29.57;	author mike;	state Exp;
branches;
next	11.1;

11.1
date	95.01.04.10.09.07;	author mike;	state Rel4_4;
branches;
next	10.5;

10.5
date	94.12.23.08.43.06;	author jra;	state Exp;
branches;
next	10.4;

10.4
date	94.11.08.04.30.17;	author mike;	state Exp;
branches;
next	10.3;

10.3
date	94.08.23.18.49.00;	author gdurf;	state Exp;
branches;
next	10.2;

10.2
date	94.08.11.15.06.00;	author mike;	state Exp;
branches;
next	10.1;

10.1
date	91.10.12.06.46.13;	author mike;	state Rel4_0;
branches;
next	9.7;

9.7
date	91.08.29.23.15.59;	author mike;	state Exp;
branches;
next	9.6;

9.6
date	91.07.06.01.28.22;	author mike;	state Exp;
branches;
next	9.5;

9.5
date	91.07.02.01.59.28;	author butler;	state Exp;
branches;
next	9.4;

9.4
date	91.02.09.01.21.59;	author mike;	state Exp;
branches;
next	9.3;

9.3
date	91.01.12.08.52.57;	author butler;	state Exp;
branches;
next	9.2;

9.2
date	89.11.16.01.28.00;	author mike;	state Exp;
branches;
next	9.1;

9.1
date	89.05.19.06.08.27;	author mike;	state Rel3_5;
branches;
next	8.2;

8.2
date	88.10.11.18.17.56;	author stay;	state Rel3_0;
branches;
next	8.1;

8.1
date	88.10.05.00.41.10;	author mike;	state Rel3_0;
branches;
next	1.2;

1.2
date	88.09.23.22.50.47;	author mike;	state Exp;
branches;
next	1.1;

1.1
date	88.09.20.02.13.18;	author mike;	state Exp;
branches;
next	;

11.7.2.1
date	2002.09.19.18.00.40;	author morrison;	state Exp;
branches;
next	11.7.2.2;

11.7.2.2
date	2004.03.17.21.16.06;	author morrison;	state Exp;
branches;
next	11.7.2.3;

11.7.2.3
date	2004.04.04.20.46.22;	author morrison;	state Exp;
branches;
next	;

11.7.4.1
date	2004.03.11.23.40.40;	author morrison;	state Exp;
branches;
next	;

11.7.10.1
date	2004.02.12.19.40.45;	author erikg;	state Exp;
branches;
next	11.7.10.2;

11.7.10.2
date	2004.03.15.13.28.06;	author erikg;	state Exp;
branches;
next	;


desc
@Save framebuffer image using Utah Raster Toolkit RLE format
@


11.11
log
@moved to src/fb/
@
text
@/*
 *			F B - R L E . C
 *
 *  Encode a framebuffer image using the Utah Raster Toolkit RLE library
 *
 *  Author -
 *	Michael John Muuss
 *  
 *  Source -
 *	SECAD/VLD Computing Consortium, Bldg 394
 *	The U. S. Army Ballistic Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5066
 *  
 *  Copyright Notice -
 *	This software is Copyright (C) 1986-2004 by the United States Army.
 *	All rights reserved.
 */
#ifndef lint
static const char RCSid[] = "@@(#)$Id: fb-rle.c,v 11.10 2004/05/10 15:30:42 erikg Exp $ (BRL)";
#endif

#ifdef HAVE_CONFIG_H
# include "config.h"
#endif



#include <stdio.h>
#include <time.h>

#include "machine.h"
#include "externs.h"
#include "bu.h"
#include "fb.h"
#include "rle.h"

static rle_hdr	outrle;
#define		outfp		outrle.rle_file
static char			comment[128];
#if HAVE_GETHOSTNAME
static char			host[128];
#endif
static rle_pixel		**rows;
static time_t			now;
static char			*who;

static rle_map			rlemap[3*256];		/* Utah format map */
static ColorMap			cmap;			/* libfb format map */

static int	crunch;

static int	background[3];	/* default background is black */

static int	screen_width;
static int	screen_height;
static int	file_width;
static int	file_height;
static int	screen_xoff;
static int	screen_yoff;

static char	*framebuffer;

static char	usage[] = "\
Usage: fb-rle [-c -h -d] [-F framebuffer] [-C r/g/b]\n\
	[-S squarescrsize] [-W screen_width] [-N screen_height]\n\
	[-X screen_xoff] [-Y screen_yoff]\n\
	[-s squarefilesize] [-w file_width] [-n file_height]\n\
	[file.rle]\n\
\n\
If omitted, the .rle file is written to stdout\n";

extern void	cmap_crunch(register RGBpixel (*scan_buf), register int pixel_ct, ColorMap *colormap);

/*
 *			G E T _ A R G S
 */
static int
get_args(int argc, register char **argv)
{
	register int	c;

	while( (c = getopt( argc, argv, "cF:hds:w:n:S:W:N:X:Y:C:" )) != EOF )  {
		switch( c )  {
		case 'c':
			crunch = 1;
			break;
		case 'F':
			framebuffer = optarg;
			break;
		case 'h':
			/* high-res */
			screen_height = screen_width = 1024;
			break;
		case 's':
			/* square file size */
			file_height = file_width = atoi(optarg);
			break;
		case 'S':
			screen_height = screen_width = atoi(optarg);
			break;
		case 'w':
			file_width = atoi(optarg);
			break;
		case 'W':
			screen_width = atoi(optarg);
			break;
		case 'n':
			file_height = atoi(optarg);
			break;
		case 'N':
			screen_height = atoi(optarg);
			break;
		case 'X':
			screen_xoff = atoi(optarg);
			break;
		case 'Y':
			screen_yoff = atoi(optarg);
			break;
		case 'C':
			{
				register char *cp = optarg;
				register int *conp = background;

				/* premature null => atoi gives zeros */
				for( c=0; c < 3; c++ )  {
					*conp++ = atoi(cp);
					while( *cp && *cp++ != '/' ) ;
				}
			}
			break;
		default:
		case '?':
			return	0;
		}
	}
	if( argv[optind] != NULL )  {
		if( access( argv[optind], 0 ) == 0 )  {
			(void) fprintf( stderr,
				"\"%s\" already exists.\n",
				argv[optind] );
			exit( 1 );
		}
		if( (outfp = fopen( argv[optind], "w" )) == NULL )  {
			perror(argv[optind]);
			return	0;
		}
	}
	if( argc > ++optind )
		(void) fprintf( stderr, "fb-rle: Excess arguments ignored\n" );

	if( isatty(fileno(outfp)) )
		return 0;
	return	1;
}

/*
 *			M A I N
 */
int
main(int argc, char **argv)
{
	register FBIO	*fbp;
	register unsigned char *scan_buf;
	register int	y;
	int		cm_save_needed;

	outfp = stdout;
	if( !get_args( argc, argv ) )  {
		(void)fputs(usage, stderr);
		exit( 1 );
	}

	/* If screen size = default & file size is given, track file size */
	if( screen_width == 0 && file_width > 0 )
		screen_width = file_width;
	if( screen_height == 0 && file_height > 0 )
		screen_height = file_height;

	if( (fbp = fb_open( framebuffer, screen_width, screen_height )) == FBIO_NULL )
		exit(12);

	/* Honor original screen size desires, if set, unless they shrank */
	if( screen_width == 0 || fb_getwidth(fbp) < screen_width )
		screen_width = fb_getwidth(fbp);
	if( screen_height == 0 || fb_getheight(fbp) < screen_height )
		screen_height = fb_getheight(fbp);

	/* If not specified, output file size tracks screen size */
	if( file_width == 0 )
		file_width = screen_width;
	if( file_height == 0 )
		file_height = screen_height;

	/* Clip below and to left of (0,0) */
	if( screen_xoff < 0 )  {
		file_width += screen_xoff;
		screen_xoff = 0;
	}
	if( screen_yoff < 0 )  {
		file_height += screen_yoff;
		screen_yoff = 0;
	}

	/* Clip up and to the right */
	if( screen_xoff + file_width > screen_width )
		file_width = screen_width - screen_xoff;
	if( screen_yoff + file_height > screen_height )
		file_height = screen_height - screen_yoff;

	if( file_width <= 0 || file_height <= 0 )  {
		fprintf(stderr,
			"fb-rle: Error: image rectangle entirely off screen\n");
		exit(1);
	}

	/* Read color map, see if it is linear */
	cm_save_needed = 1;
	if( fb_rmap( fbp, &cmap ) == -1 )
		cm_save_needed = 0;
	if( cm_save_needed && fb_is_linear_cmap( &cmap ) )
		cm_save_needed = 0;
	if( crunch && (cm_save_needed == 0) )
		crunch = 0;

	/* Convert to Utah format */
	if( cm_save_needed )  for( y=0; y<256; y++ )  {
		rlemap[y+0*256] = cmap.cm_red[y];
		rlemap[y+1*256] = cmap.cm_green[y];
		rlemap[y+2*256] = cmap.cm_blue[y];
	}

	scan_buf = (unsigned char *)malloc( sizeof(RGBpixel) * screen_width );

	/* Build RLE header */
	outrle.ncolors = 3;
	RLE_SET_BIT(outrle, RLE_RED);
	RLE_SET_BIT(outrle, RLE_GREEN);
	RLE_SET_BIT(outrle, RLE_BLUE);
	outrle.background = 2;		/* use background */
	outrle.bg_color = background;
	outrle.alpha = 0;			/* no alpha channel */
	if( cm_save_needed && !crunch ) {
		outrle.ncmap = 3;
		outrle.cmaplen = 8;		/* 1<<8 = 256 */
		outrle.cmap = rlemap;
	} else {
		outrle.ncmap = 0;		/* no color map */
		outrle.cmaplen = 0;
		outrle.cmap = (rle_map *)0;
	}
	outrle.xmin = screen_xoff;
	outrle.ymin = screen_yoff;
	outrle.xmax = screen_xoff + file_width - 1;
	outrle.ymax = screen_yoff + file_height - 1;
	outrle.comments = (const char **)0;

	/* Add comments to the header file, since we have one */
	if( framebuffer == (char *)0 )
		framebuffer = fbp->if_name;
	sprintf( comment, "encoded_from=%s", framebuffer );
	rle_putcom( bu_strdup(comment), &outrle );
	now = time(0);
	sprintf( comment, "encoded_date=%24.24s", ctime(&now) );
	rle_putcom( bu_strdup(comment), &outrle );
	if( (who = getenv("USER")) != (char *)0 ) {
		sprintf( comment, "encoded_by=%s", who);
		rle_putcom( bu_strdup(comment), &outrle );
	}
#	if HAVE_GETHOSTNAME
	gethostname( host, sizeof(host) );
	sprintf( comment, "encoded_host=%s", host);
	rle_putcom( bu_strdup(comment), &outrle );
#	endif

	rle_put_setup( &outrle );
	rle_row_alloc( &outrle, &rows );

	/* Read the image a scanline at a time, and encode it */
	for( y = 0; y < file_height; y++ )  {
		if( fb_read( fbp, screen_xoff, y+screen_yoff, scan_buf,
		    file_width ) == -1 )  {
			(void) fprintf(	stderr,
				"fb-rle: read of %d pixels on line %d failed!\n",
				file_width, y+screen_yoff );
			exit(1);
		}

		if( crunch )
			cmap_crunch( (RGBpixel *)scan_buf, file_width, &cmap );

		/* Grumble, convert to Utah layout */
		{
			register unsigned char	*pp = (unsigned char *)scan_buf;
			register rle_pixel	*rp = rows[0];
			register rle_pixel	*gp = rows[1];
			register rle_pixel	*bp = rows[2];
			register int		i;

			for( i=0; i<file_width; i++ )  {
				*rp++ = *pp++;
				*gp++ = *pp++;
				*bp++ = *pp++;
			}
		}
		rle_putrow( rows, file_width, &outrle );
	}
	rle_puteof( &outrle );

	fb_close( fbp );
	fclose( outfp );
	exit(0);
}
@


11.10
log
@change conf.h to a wrapped config.h
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Id: fb-rle.c,v 11.9 2004/04/05 07:49:23 morrison Exp $ (BRL)";
@


11.9
log
@merge of ansi-6-0-branch into HEAD
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Id$ (BRL)";
d22 5
a26 1
#include "conf.h"
@


11.8
log
@update copyright to include span through 2003
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Id: fb-rle.c,v 11.7 2002/08/20 17:07:24 jra Exp $ (BRL)";
d68 1
a68 1
extern void	cmap_crunch();
d74 1
a74 2
get_args( argc, argv )
register char	**argv;
d156 1
a156 3
main( argc, argv )
int	argc;
char	*argv[];
d285 1
a285 1
			cmap_crunch( scan_buf, file_width, &cmap );
@


11.7
log
@Restoration of entire source tree to Pre-Hartley state
@
text
@d15 1
a15 1
 *	This software is Copyright (C) 1986 by the United States Army.
d19 1
a19 1
static const char RCSid[] = "@@(#)$Id: fb-rle.c,v 11.5 2001/04/12 17:44:07 bparker Exp $ (BRL)";
@


11.7.4.1
log
@sync to HEAD...
@
text
@d15 1
a15 1
 *	This software is Copyright (C) 1986-2004 by the United States Army.
d19 1
a19 1
static const char RCSid[] = "@@(#)$Id: fb-rle.c,v 11.8 2004/02/02 17:39:01 morrison Exp $ (BRL)";
@


11.7.10.1
log
@merge from HEAD
@
text
@d15 1
a15 1
 *	This software is Copyright (C) 1986-2004 by the United States Army.
d19 1
a19 1
static const char RCSid[] = "@@(#)$Id: fb-rle.c,v 11.8 2004/02/02 17:39:01 morrison Exp $ (BRL)";
@


11.7.10.2
log
@merge from head
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Id: fb-rle.c,v 11.7.10.1 2004/02/12 19:40:45 erikg Exp $ (BRL)";
@


11.7.2.1
log
@Initial ANSIfication
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Id: fb-rle.c,v 11.7 2002/08/20 17:07:24 jra Exp $ (BRL)";
d68 1
a68 1
extern void	cmap_crunch(register RGBpixel (*scan_buf), register int pixel_ct, ColorMap *cmap);
d74 2
a75 1
get_args(int argc, register char **argv)
d157 3
a159 1
main(int argc, char **argv)
d288 1
a288 1
			cmap_crunch( (RGBpixel *)scan_buf, file_width, &cmap );
@


11.7.2.2
log
@sync branch with HEAD
@
text
@d15 1
a15 1
 *	This software is Copyright (C) 1986-2004 by the United States Army.
d19 1
a19 1
static const char RCSid[] = "@@(#)$Id$ (BRL)";
@


11.7.2.3
log
@quell warnings
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Id: fb-rle.c,v 11.7.2.2 2004/03/17 21:16:06 morrison Exp $ (BRL)";
d68 1
a68 1
extern void	cmap_crunch(register RGBpixel (*scan_buf), register int pixel_ct, ColorMap *colormap);
@


11.6
log
@Converted from K&R to ANSI C - RFH
@
text
@d68 1
a68 1
extern void	cmap_crunch(register RGBpixel (*scan_buf), register int pixel_ct, ColorMap *cmap);
d74 2
a75 1
get_args(int argc, register char **argv)
d157 3
a159 1
main(int argc, char **argv)
d288 1
a288 1
			cmap_crunch( (RGBpixel *)scan_buf, file_width, &cmap );
@


11.5
log
@*- get rid of warnings
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Id: fb-rle.c,v 11.4 2001/04/05 19:35:03 morrison Exp $ (BRL)";
d68 1
a68 1
extern void	cmap_crunch();
d74 1
a74 2
get_args( argc, argv )
register char	**argv;
d156 1
a156 3
main( argc, argv )
int	argc;
char	*argv[];
d285 1
a285 1
			cmap_crunch( scan_buf, file_width, &cmap );
@


11.4
log
@updated SIGNED to signed
updated CONST to const
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Id: fb-rle.c,v 11.3 2000/08/24 03:58:26 mike Exp $ (BRL)";
d156 1
@


11.3
log
@
const RCSid
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Id: fb-rle.c,v 11.2 1999/12/24 23:29:57 mike Exp $ (BRL)";
d253 1
a253 1
	outrle.comments = (CONST char **)0;
@


11.2
log
@
Removed local version of strdup in favor of bu_strdup().
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Id: fb-rle.c,v 11.1 1995/01/04 10:09:07 mike Rel4_4 $ (BRL)";
@


11.1
log
@Release_4.4
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Id: fb-rle.c,v 10.5 94/12/23 08:43:06 jra Exp $ (BRL)";
d29 1
a67 23
#ifndef HAVE_STRDUP
/*
 *			S T R D U P
 *
 * Given a string, allocate enough memory to hold it using malloc(),
 * duplicate the strings, returns a pointer to the new string.
 */
char *
strdup( cp )
register CONST char *cp;
{
	register char	*base;
	register int	len;

	len = strlen( cp )+2;
	if( (base = (char *)malloc( len )) == (char *)0 )
		return( (char *)0 );

	bcopy( cp, base, len );
	return(base);
}
#endif

d259 1
a259 1
	rle_putcom( strdup(comment), &outrle );
d262 1
a262 1
	rle_putcom( strdup(comment), &outrle );
d265 1
a265 1
		rle_putcom( strdup(comment), &outrle );
d270 1
a270 1
	rle_putcom( strdup(comment), &outrle );
@


10.5
log
@Surrounded "strdup()" with "#ifndef HAVE_STRDUP".
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Id: fb-rle.c,v 10.4 94/11/08 04:30:17 mike Exp Locker: jra $ (BRL)";
@


10.4
log
@Irix 6
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Id: fb-rle.c,v 10.3 94/08/23 18:49:00 gdurf Exp Locker: mike $ (BRL)";
d67 1
d88 1
@


10.3
log
@Added includes, factored ifdefs
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Id: fb-rle.c,v 10.2 1994/08/11 15:06:00 mike Exp gdurf $ (BRL)";
d35 1
d37 1
d39 1
a39 1
static long			now;
d287 1
a287 1
#	ifdef BSD
@


10.2
log
@Reduced use of RGBpixel
Now use (unsigned char *)
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Id: fb-rle.c,v 10.1 91/10/12 06:46:13 mike Rel4_0 Locker: mike $ (BRL)";
d22 2
d73 1
a73 1
register char *cp;
d79 1
a79 1
	if( (base = malloc( len )) == (char *)0 )
a81 1
#ifdef BSD
a82 3
#else
	memcpy( base, cp, len );
#endif
a95 2
	extern int	optind;
	extern char	*optarg;
d271 1
a271 1
	outrle.comments = (CONST_DECL char **)0;
@


10.1
log
@Release_4.0
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Id: /f/cad/util/RCS/fb-rle.c,v 1.1 91/01/03 23:11:34 butler Exp $ (BRL)";
d25 2
a29 3
extern char	*malloc();
extern char	*getenv();

d183 1
a183 1
	register RGBpixel *scan_buf;
d252 1
a252 1
	scan_buf = (RGBpixel *)malloc( sizeof(RGBpixel) * screen_width );
@


9.7
log
@Stardent ANSI lint
@
text
@@


9.6
log
@Added inboard strdup().
@
text
@d276 1
a276 1
	outrle.comments = (char **)0;
@


9.5
log
@Fixed stupid bug
@
text
@d64 25
a88 1
extern char	*strdup();
@


9.4
log
@Now uses library version
@
text
@d173 1
a173 1
	if( screen_height == 0 && screen_height > 0 )
@


9.3
log
@changes in names to work with Release 3 of URT library
@
text
@d217 1
a217 1
	if( cm_save_needed && is_linear_cmap( &cmap ) )
@


9.2
log
@Added -F to getopt list.
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: fb-rle.c,v 9.1 89/05/19 06:08:27 mike Locked $ (BRL)";
d26 1
a26 1
#include "svfb_global.h"
d31 2
a32 2
static struct sv_globals	outrle;
#define		outfp		outrle.svfb_fd
d232 7
a238 7
	outrle.sv_ncolors = 3;
	SV_SET_BIT(outrle, SV_RED);
	SV_SET_BIT(outrle, SV_GREEN);
	SV_SET_BIT(outrle, SV_BLUE);
	outrle.sv_background = 2;		/* use background */
	outrle.sv_bg_color = background;
	outrle.sv_alpha = 0;			/* no alpha channel */
d240 3
a242 3
		outrle.sv_ncmap = 3;
		outrle.sv_cmaplen = 8;		/* 1<<8 = 256 */
		outrle.sv_cmap = rlemap;
d244 3
a246 3
		outrle.sv_ncmap = 0;		/* no color map */
		outrle.sv_cmaplen = 0;
		outrle.sv_cmap = (rle_map *)0;
d248 5
a252 5
	outrle.sv_xmin = screen_xoff;
	outrle.sv_ymin = screen_yoff;
	outrle.sv_xmax = screen_xoff + file_width - 1;
	outrle.sv_ymax = screen_yoff + file_height - 1;
	outrle.sv_comments = (char **)0;
d272 1
a272 1
	sv_setup( RUN_DISPATCH, &outrle );
d302 1
a302 1
		sv_putrow( rows, file_width, &outrle );
d304 1
a304 1
	sv_puteof( &outrle );
@


9.1
log
@Release_3.5
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: fb-rle.c,v 8.2 88/10/11 18:17:56 stay Exp $ (BRL)";
d78 1
a78 1
	while( (c = getopt( argc, argv, "chds:w:n:S:W:N:X:Y:C:" )) != EOF )  {
@


8.2
log
@problem with reading the color map off by 1 so
thanks to Ed Davisson we didn't ship it out....
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: fb-rle.c,v 8.1 88/10/05 00:41:10 stay Locked $ (BRL)";
@


8.1
log
@Release_3.0
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: fb-rle.c,v 1.2 88/09/23 22:50:47 mike Exp $ (BRL)";
d223 1
a223 1
	if( cm_save_needed )  for( y=0; y<255; y++ )  {
@


1.2
log
@Fixed problem in crunch mode, where colormap was also saved.
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: fb-rle.c,v 1.1 88/09/20 02:13:18 mike Locked $ (BRL)";
@


1.1
log
@Initial revision
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header$ (BRL)";
d239 1
a239 1
	if( cm_save_needed ) {
@
