head	11.9;
access;
symbols
	ansi-20040405-merged:11.5.2.2
	postmerge-20040405-ansi:11.7
	premerge-20040404-ansi:11.6
	postmerge-autoconf:11.6
	autoconf-freeze:11.5.10.2
	premerge-autoconf:11.6
	ansi-20040316-freeze:11.5.2.1
	postmerge-20040315-windows:11.6
	premerge-20040315-windows:11.6
	windows-20040315-freeze:11.5.4.1
	autoconf-20031203:11.5
	autoconf-20031202:11.5
	autoconf-branch:11.5.0.10
	phong-branch:11.5.0.8
	photonmap-branch:11.5.0.6
	rel-6-1-DP:11.5
	windows-branch:11.5.0.4
	rel-6-0-2:11.3
	ansi-branch:11.5.0.2
	rel-6-0-1-branch:11.3.0.2
	hartley-6-0-post:11.4
	hartley-6-0-pre:11.3
	rel-6-0-1:11.3
	rel-6-0:11.3
	rel-5-4:11.1
	offsite-5-3-pre:11.2
	rel-5-3:11.1
	rel-5-2:11.1
	rel-5-1-branch:11.1.0.2
	rel-5-1:11.1
	rel-5-0:11.1
	rel-5-0-beta:11.1
	rel-4-5:11.1
	ctj-4-5-post:11.1
	ctj-4-5-pre:11.1
	rel-4-4:11.1
	rel-4-0:10.1
	rel-3-5:9.1
	rel-3-0:8.1
	rel-2-3:7.1
	rel-2-0:5.1
	rel-1-24:5.1
	rel-1-20:4.5
	rel-1-10:4.1;
locks; strict;
comment	@ * @;


11.9
date	2004.05.24.04.13.26;	author morrison;	state dead;
branches;
next	11.8;

11.8
date	2004.05.10.15.30.42;	author erikg;	state Exp;
branches;
next	11.7;

11.7
date	2004.04.05.07.49.23;	author morrison;	state Exp;
branches;
next	11.6;

11.6
date	2004.02.02.17.39.01;	author morrison;	state Exp;
branches;
next	11.5;

11.5
date	2002.08.20.17.07.25;	author jra;	state Exp;
branches
	11.5.2.1
	11.5.4.1
	11.5.10.1;
next	11.4;

11.4
date	2002.08.15.20.54.38;	author hartley;	state Exp;
branches;
next	11.3;

11.3
date	2001.04.12.17.44.08;	author bparker;	state Exp;
branches;
next	11.2;

11.2
date	2000.08.24.03.58.31;	author mike;	state Exp;
branches;
next	11.1;

11.1
date	95.01.04.10.09.28;	author mike;	state Rel4_4;
branches;
next	10.2;

10.2
date	94.08.23.18.49.07;	author gdurf;	state Exp;
branches;
next	10.1;

10.1
date	91.10.12.06.46.33;	author mike;	state Rel4_0;
branches;
next	9.1;

9.1
date	89.05.19.06.09.09;	author mike;	state Rel3_5;
branches;
next	8.2;

8.2
date	89.03.07.00.32.12;	author mike;	state Exp;
branches;
next	8.1;

8.1
date	88.10.05.00.41.50;	author mike;	state Rel3_0;
branches;
next	7.2;

7.2
date	88.05.16.00.06.43;	author mike;	state Exp;
branches;
next	7.1;

7.1
date	87.11.03.00.07.34;	author mike;	state Rel;
branches;
next	6.1;

6.1
date	87.07.11.08.10.47;	author mike;	state Rel;
branches;
next	5.1;

5.1
date	87.06.24.22.38.54;	author mike;	state Rel;
branches;
next	4.5;

4.5
date	87.02.13.00.41.52;	author mike;	state Exp;
branches;
next	4.4;

4.4
date	87.01.28.21.39.49;	author mike;	state Exp;
branches;
next	4.3;

4.3
date	87.01.09.17.37.41;	author phil;	state Exp;
branches;
next	4.2;

4.2
date	87.01.09.17.21.06;	author phil;	state Exp;
branches;
next	4.1;

4.1
date	86.12.29.03.13.00;	author mike;	state Rel1;
branches;
next	1.6;

1.6
date	86.12.09.01.55.22;	author mike;	state Exp;
branches;
next	1.5;

1.5
date	86.11.29.02.52.46;	author phil;	state Exp;
branches;
next	1.4;

1.4
date	86.11.28.20.46.24;	author phil;	state Exp;
branches;
next	1.3;

1.3
date	86.11.25.04.04.32;	author phil;	state Exp;
branches;
next	1.2;

1.2
date	86.11.14.23.20.44;	author phil;	state Exp;
branches;
next	1.1;

1.1
date	86.11.05.08.50.06;	author mike;	state Exp;
branches;
next	;

11.5.2.1
date	2002.09.19.18.00.42;	author morrison;	state Exp;
branches;
next	11.5.2.2;

11.5.2.2
date	2004.03.17.21.16.08;	author morrison;	state Exp;
branches;
next	;

11.5.4.1
date	2004.03.11.23.40.43;	author morrison;	state Exp;
branches;
next	;

11.5.10.1
date	2004.02.12.19.40.46;	author erikg;	state Exp;
branches;
next	11.5.10.2;

11.5.10.2
date	2004.03.15.13.28.06;	author erikg;	state Exp;
branches;
next	;


desc
@Point at pixels on the screen in a non-destructive way,
with coordinates on stdout.
@


11.9
log
@moved to src/fb/
@
text
@/*
 *			F B P O I N T . C
 *
 *  Tool to identify X,Y coordinates on the screen.
 *
 *  Authors -
 *	Michael Johns Muuss
 *	Bob Suckling
 *
 *  Source -
 *	SECAD/VLD Computing Consortium, Bldg 394
 *	The U. S. Army Ballistic Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5066
 *
 *  Copyright Notice -
 *	This software is Copyright (C) 1986-2004 by the United States Army.
 *	All rights reserved.
 */
#ifndef lint
static const char RCSid[] = "@@(#)$Header: /n/xoff/cvs/brlcad/fb/fbpoint.c,v 11.8 2004/05/10 15:30:42 erikg Exp $ (BRL)";
#endif

#ifdef HAVE_CONFIG_H
# include "config.h"
#endif



#include <stdio.h>
#ifdef USE_STRING_H
#include <string.h>
#else
#include <strings.h>
#endif
#include "machine.h"
#include "externs.h"		/* For malloc() */
#include "fb.h"
#include "libtermio.h"

FBIO *fbp;

int	JumpSpeed;		/* # pixels skiped with fast commands. */

RGBpixel curPix; 		/* Current pixel value */
int	curX, curY;		/* current position */
int	oldX, oldY;		/* previous position */

int	Run = 1;		/* Tells when to stop the main loop */

int	xflag, yflag;
char	*xprefix = NULL;
char	*yprefix = NULL;
char	null_str = '\0';

void	SimpleInput(void);

char usage[] = "\
Usage: fbpoint [-h] [-x[prefix]] [-y[prefix]] [initx inity]\n";

static char *help = "\
Char:   Command:                                                \r\n\
h B	Left (1)\r\n\
j N	Down (1)\r\n\
k P	Up (1)\r\n\
l F	Right (1)\r\n\
H ^B	Left (many)\r\n\
J ^N	Down (many)\r\n\
K ^P	Up (many)\r\n\
L ^F	Right (many)\r\n\
q Q cr	QUIT\r\n\
";

#define ctl(x)	(x&037)

void
SimpleInput(void)	/* ==== get keyboard input.	*/
{
	register char ch;
	static char c;

	if( read( 0, &c, 1) <= 0 ) {
		Run = 0;
		return;
	}
	ch = c & ~0x80;		/* strip off parity bit */
	switch( ch ) {
	default:
		fprintf( stderr,
		"Unknown command(%c:0%o). Type '?' for help!           \r\n",
			ch, ch );
		break;

	case '?':
		fprintf( stderr, "%s", help );
		return;

	case 'q':
	case 'Q':
	case '\r':
		Run = 0;
		return;

	case 'B':
	case 'h':
		--curX;		/* Go left.	*/
		return;
	case 'N':
	case 'j':
		--curY;		/* Go down.	*/
		return;
	case 'P':
	case 'k':
		++curY;		/* Go up.	*/
		return;
	case 'F':
	case 'l':
		++curX;		/* Go right.	*/
		return;
	case ctl('b'):
	case 'H':
		curX -= JumpSpeed;	/* Go LEFT.	*/
		return;
	case ctl('n'):
	case 'J':
		curY -= JumpSpeed;	/* Go DOWN.	*/
		return;
	case ctl('p'):
	case 'K':
		curY += JumpSpeed;	/* Go UP.	*/
		return;
	case ctl('f'):
	case 'L':
		curX += JumpSpeed;	/* Go RIGHT.	*/
		return;
	}
}

int
main(int argc, char **argv)
{
	int width, height;

	setbuf( stderr, malloc( BUFSIZ ) );
	width = height = 0;
	curX = curY = -1;

	while( argc > 1 ) {
		if( strcmp( argv[1], "-h" ) == 0 ) {
			width = height = 1024;
		} else if( strncmp( argv[1], "-x", 2 ) == 0 ) {
			if( xflag++ != 0 )
				break;
			xprefix = &argv[1][2];
		} else if( strncmp( argv[1], "-y", 2 ) == 0 ) {
			if( yflag++ != 0 )
				break;
			yprefix = &argv[1][2];
		} else
			break;
		argc--;
		argv++;
	}
	/*
	 * Check for optional starting coordinate.
	 * Test for bad flags while we're at it.
	 */
	if( argc > 1 && argv[1][0] != '-' ) {
		curX = atoi( argv[1] );
		argc--;
		argv++;
	}
	if( argc > 1 && argv[1][0] != '-' ) {
		curY = atoi( argv[1] );
		argc--;
		argv++;
	}
	if( argc > 1 ) {
		fprintf( stderr, usage );
		exit( 1 );
	}

	/* fix up pointers for printf */
	if( xprefix == NULL )
		xprefix = &null_str;
	if( yprefix == NULL )
		yprefix = &null_str;

	if( (fbp = fb_open( NULL, width, height )) == NULL )
		exit(12);

	JumpSpeed = fb_getwidth(fbp)/16;
	if( JumpSpeed < 2 )  JumpSpeed = 2;
	/* check for default starting positions */
	if( curX < 0 )
		curX = fb_getwidth(fbp)/2;
	if( curY < 0 )
		curY = fb_getheight(fbp)/2;
	oldX = oldY = -1;

	/* Set RAW mode */
	save_Tty( 0 );
	set_Raw( 0 );
	clr_Echo( 0 );

	while( Run )  {
		if( curX < 0 )
			curX = 0;
		if( curX >= fb_getwidth(fbp) )
			curX = fb_getwidth(fbp) -1;
		if( curY < 0 )
			curY = 0;
		if( curY >= fb_getheight(fbp) )
			curY = fb_getheight(fbp) -1;

		if( oldX != curX || oldY != curY ) {
			/* get pixel value, move cursor */
			fb_read( fbp, curX, curY, curPix, 1 );
			fb_cursor( fbp, 1, curX, curY );
			oldX = curX;
			oldY = curY;
		}
		fprintf( stderr, "xy=(%4d,%4d)  [%3d,%3d,%3d]      \r",
			curX, curY, curPix[RED], curPix[GRN], curPix[BLU] );
		fflush( stderr );

		SimpleInput();			/* read and do keybord	*/
	}

	fb_cursor( fbp, 0, curX, curY );	/* turn off */

	fprintf( stderr, "\n" );
	fflush( stderr );

	reset_Tty( 0 );

	/* write final location on stdout */
	if( xflag != 0 && yflag == 0 )
		printf( "%s%d\n", xprefix, curX );
	else if( yflag != 0 && xflag == 0 )
		printf( "%s%d\n", yprefix, curY );
	else
		printf( "%s%d %s%d\n", xprefix, curX, yprefix, curY );

	fb_close( fbp );
	exit( 0 );
}
@


11.8
log
@change conf.h to a wrapped config.h
@
text
@d20 1
a20 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/fb/fbpoint.c,v 11.7 2004/04/05 07:49:23 morrison Exp $ (BRL)";
@


11.7
log
@merge of ansi-6-0-branch into HEAD
@
text
@d20 1
a20 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
d23 5
a27 1
#include "conf.h"
@


11.6
log
@update copyright to include span through 2003
@
text
@d20 1
a20 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/fb/fbpoint.c,v 11.5 2002/08/20 17:07:25 jra Exp $ (BRL)";
d51 1
a51 1
void	SimpleInput();
d72 1
a72 1
SimpleInput()	/* ==== get keyboard input.	*/
d135 1
a135 2
main(argc, argv)
char **argv;
@


11.5
log
@Restoration of entire source tree to Pre-Hartley state
@
text
@d16 1
a16 1
 *	This software is Copyright (C) 1986 by the United States Army.
d20 1
a20 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/fb/fbpoint.c,v 11.3 2001/04/12 17:44:08 bparker Exp $ (BRL)";
@


11.5.4.1
log
@sync to HEAD...
@
text
@d16 1
a16 1
 *	This software is Copyright (C) 1986-2004 by the United States Army.
d20 1
a20 1
static const char RCSid[] = "@@(#)$Header: /n/cad/c/CVS/brlcad/fb/fbpoint.c,v 11.6 2004/02/02 17:39:01 morrison Exp $ (BRL)";
@


11.5.10.1
log
@merge from HEAD
@
text
@d16 1
a16 1
 *	This software is Copyright (C) 1986-2004 by the United States Army.
d20 1
a20 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/fb/fbpoint.c,v 11.6 2004/02/02 17:39:01 morrison Exp $ (BRL)";
@


11.5.10.2
log
@merge from head
@
text
@d20 1
a20 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/fb/fbpoint.c,v 11.5.10.1 2004/02/12 19:40:46 erikg Exp $ (BRL)";
@


11.5.2.1
log
@Initial ANSIfication
@
text
@d20 1
a20 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/fb/fbpoint.c,v 11.5 2002/08/20 17:07:25 jra Exp $ (BRL)";
d51 1
a51 1
void	SimpleInput(void);
d72 1
a72 1
SimpleInput(void)	/* ==== get keyboard input.	*/
d135 2
a136 1
main(int argc, char **argv)
@


11.5.2.2
log
@sync branch with HEAD
@
text
@d16 1
a16 1
 *	This software is Copyright (C) 1986-2004 by the United States Army.
d20 1
a20 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
@


11.4
log
@Converted from K&R to ANSI C - RFH
@
text
@d51 1
a51 1
void	SimpleInput(void);
d72 1
a72 1
SimpleInput(void)	/* ==== get keyboard input.	*/
d135 2
a136 1
main(int argc, char **argv)
@


11.3
log
@*- get rid of warnings
@
text
@d20 1
a20 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/fb/fbpoint.c,v 11.2 2000/08/24 03:58:31 mike Exp $ (BRL)";
d51 1
a51 1
void	SimpleInput();
d72 1
a72 1
SimpleInput()	/* ==== get keyboard input.	*/
d135 1
a135 2
main(argc, argv)
char **argv;
@


11.2
log
@
const RCSid
@
text
@d20 1
a20 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/fb/fbpoint.c,v 11.1 1995/01/04 10:09:28 mike Rel4_4 $ (BRL)";
d26 5
d34 1
d134 1
@


11.1
log
@Release_4.4
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: /m/cad/fb/RCS/fbpoint.c,v 10.2 94/08/23 18:49:07 gdurf Exp $ (BRL)";
@


10.2
log
@Added includes, factored ifdefs
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: /m/cad/fb/RCS/fbpoint.c,v 10.1 1991/10/12 06:46:33 mike Rel4_0 gdurf $ (BRL)";
@


10.1
log
@Release_4.0
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: /m/cad/fb/RCS/fbpoint.c,v 9.1 89/05/19 06:09:09 mike Rel3_5 $ (BRL)";
d23 2
d26 3
a28 1
#include "../h/fb.h"
a131 1
	char *malloc();
@


9.1
log
@Release_3.5
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: fbpoint.c,v 8.2 89/03/07 00:32:12 mike Exp $ (BRL)";
@


8.2
log
@ANSII-ified, by changing ctl() macro
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: fbpoint.c,v 8.1 88/10/05 00:41:50 mike Locked $ (BRL)";
@


8.1
log
@Release_3.0
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: fbpoint.c,v 7.2 88/05/16 00:06:43 mike Exp $ (BRL)";
d59 2
a87 1
#define ctl(x)	('x'&037)
d105 1
a105 1
	case ctl(b):
d109 1
a109 1
	case ctl(n):
d113 1
a113 1
	case ctl(p):
d117 1
a117 1
	case ctl(f):
@


7.2
log
@lint fixes
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: fbpoint.c,v 7.1 87/11/03 00:07:34 mike Locked $ (BRL)";
@


7.1
log
@Release 2.3
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: fbpoint.c,v 6.1 87/07/11 08:10:47 mike Rel $ (BRL)";
d41 2
d59 1
@


6.1
log
@Release 2.0
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: fbpoint.c,v 5.1 87/06/24 22:38:54 mike Rel $ (BRL)";
@


5.1
log
@Release 1.24
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: fbpoint.c,v 4.5 87/02/13 00:41:52 mike Exp $ (BRL)";
@


4.5
log
@Release 1.20 -- First Formal Release
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: fbpoint.c,v 4.4 87/01/28 21:39:49 mike Exp $ (BRL)";
@


4.4
log
@Release 1.16:  Masked off parity bit when reading chars in raw mode.
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: fbpoint.c,v 4.3 87/01/09 17:37:41 mike Locked $ (BRL)";
@


4.3
log
@make starting position "flagless"
added CR quit command
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: fbpoint.c,v 4.2 87/01/09 17:21:06 phil Locked $ (BRL)";
d59 2
a60 1
	char ch;
d62 1
a62 1
	if( read( 0, &ch, 1) <= 0 ) {
d66 1
d70 1
a70 1
		"Unknown command(%c:%o). Type '?' for help!           \r\n",
@


4.2
log
@added optional starting position
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: fbpoint.c,v 4.1 86/12/29 03:13:00 phil Locked $ (BRL)";
d42 1
a42 1
Usage: fbpoint [-h] [-x[prefix]] [-y[prefix]] [-X init_x] [-Y init_y]\n";
d54 1
a54 1
q Q	QUIT\r\n\
d78 1
a138 16
		} else if( strncmp( argv[1], "-X", 2 ) == 0 ) {
			if( strlen(argv[1]) > 2 )
				curX = atoi( &argv[1][2] );
			else if( argc > 1 ) {
				curX = atoi( argv[2] );
				argc--; argv++;
			} else
				;	/* no value given */
		} else if( strncmp( argv[1], "-Y", 2 ) == 0 ) {
			if( strlen(argv[1]) > 2 )
				curY = atoi( &argv[1][2] );
			else if( argc > 1 ) {
				curY = atoi( argv[2] );
				argc--; argv++;
			} else
				;	/* no value given */
d141 14
@


4.1
log
@BRL CAD Distribution Release 1.10
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: fbpoint.c,v 1.6 86/12/09 01:55:22 mike Exp $ (BRL)";
d42 1
a42 1
Usage: fbpoint [-h] [-x[prefix]] [-y[prefix]]\n";
d125 1
d138 16
d175 5
a179 2
	curX = fb_getwidth(fbp)/2;
	curY = fb_getheight(fbp)/2;
@


1.6
log
@Made jump for normal commands cover 1/16th of the original image,
regardless of zoom.
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: fbpoint.c,v 1.5 86/11/29 02:52:46 mike Locked $ (BRL)";
@


1.5
log
@null string problem
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: fbpoint.c,v 1.4 86/11/28 20:46:24 phil Locked $ (BRL)";
d28 1
a28 1
#define	JumpSpeed 30 /* number of pixels skiped with UPPERCASE commands. */
d31 2
a32 2
int curX, curY;			/* current position */
int oldX, oldY;			/* previous position */
d34 1
a34 1
int	Run = 1;	/* Tells when to stop the main loop.	*/
d156 2
@


1.4
log
@added x and y prefixes
removed dot, cleaned up
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: fbpoint.c,v 1.3 86/11/25 04:04:32 phil Locked $ (BRL)";
d39 1
d146 6
@


1.3
log
@added fb_close
@
text
@d9 1
a9 1
 *  
d14 1
a14 1
 *  
d20 1
a20 1
static char RCSid[] = "@@(#)$Header: fbpoint.c,v 1.2 86/11/14 23:20:44 phil Locked $ (BRL)";
d30 3
a32 2
RGBpixel flashPix;		/* Different pixel */
RGBpixel savePix; 		/* Old Pixel for restoring the image.	*/
a33 4
int curX, curY;			/* current (new) position */
int markX, markY;		/* Save the mark.	*/
int oldX, oldY;			/* saved (previous) position */

d36 3
a38 2
#define PrtLast	fprintf( stderr, "xy=(%d, %d)      \r",\
				 curX, curY ); fflush( stderr )
d40 3
d57 1
a57 1
{ 
d65 1
a65 1
	default:	
a68 1
		PrtLast;
d71 1
a71 1
	case '?':	
a72 1
		PrtLast;
d76 1
a76 1
	case 'Q':	
d86 1
a86 1
	case 'j':		
d90 1
a90 1
	case 'k':		
d94 1
a94 1
	case 'l':		
d98 1
a98 1
	case 'H':		
d102 1
a102 1
	case 'J':		
d106 1
a106 1
	case 'K':		
a112 1
/**	case 'Z':		driver(); **/
d118 1
a118 1
{ 
d123 1
d125 20
a144 4
	if( argc > 1 && strcmp( argv[1], "-h" ) == 0 )
		width = height = 1024;
	else
		width = height = 512;
d149 3
a151 2
	curX = markX = oldX = fb_getwidth(fbp)/2;
	curY = markY = oldY = fb_getheight(fbp)/2;
a157 5
	/* save : old pixel.	*/
	fb_read( fbp, oldX, oldY, savePix, 1 );
	fb_cursor( fbp, 1, curX, curY );
	PrtLast;

a158 6
		SimpleInput();			/* read and do keybord	*/
		if( oldX == curX && oldY == curY )
			continue;

		/* replace saved pixel.	*/
		fb_write( fbp, oldX, oldY, savePix, 1 );
d160 1
a160 1
			curX = 0;	
d164 1
a164 1
			curY = 0;		
d168 10
a177 6
		/* save : new pixel.	*/
		fb_read( fbp, curX, curY, savePix, 1 );
		oldX = curX;
		oldY = curY;
		fb_cursor( fbp, 1, curX, curY );
		PrtLast;
d179 1
a179 4
		flashPix[RED] = (255 - savePix[RED]) + 32;
		flashPix[GRN] = (255 - savePix[GRN]) + 32;
		flashPix[BLU] = (255 - savePix[BLU]) + 32;
		fb_write( fbp, curX, curY, flashPix, 1 );
d184 2
a185 3
	/* replace saved pixel.	*/
	fb_write( fbp, oldX, oldY, savePix, 1 );
	fprintf( stderr, "\n\r" );
d190 7
a196 1
	fprintf( stdout, "%d %d\n", curX, curY );
@


1.2
log
@added initial fb_cursor to turn it on.
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: fbpoint.c,v 1.1 86/11/05 08:50:06 phil Locked $ (BRL)";
d186 2
a187 1
	exit( 0 );    
@


1.1
log
@Initial revision
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header$ (BRL)";
d144 1
@
