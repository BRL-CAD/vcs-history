head	11.9;
access;
symbols
	ansi-20040405-merged:11.5.2.2
	postmerge-20040405-ansi:11.7
	premerge-20040404-ansi:11.6
	postmerge-autoconf:11.6
	autoconf-freeze:11.5.10.2
	premerge-autoconf:11.6
	ansi-20040316-freeze:11.5.2.1
	postmerge-20040315-windows:11.6
	premerge-20040315-windows:11.6
	windows-20040315-freeze:11.5.4.1
	autoconf-20031203:11.5
	autoconf-20031202:11.5
	autoconf-branch:11.5.0.10
	phong-branch:11.5.0.8
	photonmap-branch:11.5.0.6
	rel-6-1-DP:11.5
	windows-branch:11.5.0.4
	rel-6-0-2:11.3
	ansi-branch:11.5.0.2
	rel-6-0-1-branch:11.3.0.2
	hartley-6-0-post:11.4
	hartley-6-0-pre:11.3
	rel-6-0-1:11.3
	rel-6-0:11.3
	rel-5-4:11.1
	offsite-5-3-pre:11.2
	rel-5-3:11.1
	rel-5-2:11.1
	rel-5-1-branch:11.1.0.2
	rel-5-1:11.1
	rel-5-0:11.1
	rel-5-0-beta:11.1
	rel-4-5:11.1
	ctj-4-5-post:11.1
	ctj-4-5-pre:11.1
	rel-4-4:11.1
	rel-4-0:10.1
	rel-3-5:9.1;
locks; strict;
comment	@ * @;


11.9
date	2004.05.24.04.13.27;	author morrison;	state dead;
branches;
next	11.8;

11.8
date	2004.05.10.15.30.42;	author erikg;	state Exp;
branches;
next	11.7;

11.7
date	2004.04.05.07.49.23;	author morrison;	state Exp;
branches;
next	11.6;

11.6
date	2004.02.02.17.39.01;	author morrison;	state Exp;
branches;
next	11.5;

11.5
date	2002.08.20.17.07.25;	author jra;	state Exp;
branches
	11.5.2.1
	11.5.4.1
	11.5.10.1;
next	11.4;

11.4
date	2002.08.15.20.54.38;	author hartley;	state Exp;
branches;
next	11.3;

11.3
date	2001.04.12.17.44.08;	author bparker;	state Exp;
branches;
next	11.2;

11.2
date	2000.08.24.03.58.34;	author mike;	state Exp;
branches;
next	11.1;

11.1
date	95.01.04.10.09.41;	author mike;	state Rel4_4;
branches;
next	10.7;

10.7
date	94.12.30.03.28.15;	author mike;	state Exp;
branches;
next	10.6;

10.6
date	94.11.14.22.29.55;	author mike;	state Exp;
branches;
next	10.5;

10.5
date	94.08.25.17.55.15;	author gdurf;	state Exp;
branches;
next	10.4;

10.4
date	94.08.23.18.49.17;	author gdurf;	state Exp;
branches;
next	10.3;

10.3
date	94.08.11.15.06.17;	author mike;	state Exp;
branches;
next	10.2;

10.2
date	91.11.20.12.56.41;	author phil;	state Exp;
branches;
next	10.1;

10.1
date	91.10.12.06.46.45;	author mike;	state Rel4_0;
branches;
next	9.1;

9.1
date	89.05.19.06.10.26;	author mike;	state Rel3_5;
branches;
next	1.2;

1.2
date	89.03.07.00.33.57;	author mike;	state Exp;
branches;
next	1.1;

1.1
date	89.01.04.12.13.36;	author mike;	state Exp;
branches;
next	;

11.5.2.1
date	2002.09.19.18.00.43;	author morrison;	state Exp;
branches;
next	11.5.2.2;

11.5.2.2
date	2004.03.17.21.16.08;	author morrison;	state Exp;
branches;
next	;

11.5.4.1
date	2004.03.11.23.40.44;	author morrison;	state Exp;
branches;
next	;

11.5.10.1
date	2004.02.12.19.40.46;	author erikg;	state Exp;
branches;
next	11.5.10.2;

11.5.10.2
date	2004.03.15.13.28.06;	author erikg;	state Exp;
branches;
next	;


desc
@Program to flip through several .pix files,
sending from memory to libfb.
The "framebuffer" analog is pixtile & fbanim
@


11.9
log
@moved to src/fb/
@
text
@/*
 *  			P I X F L I P - F B . C
 *  
 *  Given multiple .pix files with ordinary lines of pixels,
 *  sequence through them on the current framebuffer.
 *  A window-system version of "pixtile and fbanim".
 *  This program depends heavily on having lots of virtual memory
 *  in which to buffer all the images.
 *
 *  Author -
 *	Michael John Muuss
 *  
 *  Source -
 *	SECAD/VLD Computing Consortium, Bldg 394
 *	The U. S. Army Ballistic Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5066
 *  
 *  Copyright Notice -
 *	This software is Copyright (C) 1988-2004 by the United States Army.
 *	All rights reserved.
 */
#ifndef lint
static const char RCSid[] = "@@(#)$Header: /n/xoff/cvs/brlcad/fb/pixflip-fb.c,v 11.8 2004/05/10 15:30:42 erikg Exp $ (BRL)";
#endif

#ifdef HAVE_CONFIG_H
# include "config.h"
#endif



#include <stdio.h>
#ifdef USE_STRING_H
#include <string.h>
#else
#include <strings.h>
#endif
#include <sys/time.h>		/* For struct timeval */

#include "machine.h"
#include "externs.h"		/* For getopt and malloc */
#include "fb.h"

int	file_width = 512;	/* width of input sub-images in pixels */
int	file_height = 512;	/* height of input sub-images in scanlines */
int	screen_width = 0;	/* number of screen pixels/line */
int	screen_height = 0;	/* number of screen lines */
char	*basename;		/* basename of input file(s) */
int	framenumber = 0;	/* starting frame number (default is 0) */
int	fps = 8;		/* frames/second */

void		showframe(register int i);

FBIO	*fbp;
int	verbose = 0;
int	rocking = 0;
int	passes = 100;		/* limit on number of passes */
int	zoom = 1;

#define MAXFRAMES	1000
unsigned char	*frames[MAXFRAMES];	/* Pointers to pixel arrays */
int	maxframe = 0;		/* Index of first unused slot in frames[] */

char usage[] = "\
Usage: pixflip-fb [-h]\n\
	[-s square_file_size] [-w file_width] [-n file_height]\n\
	[-S square_scr_size] [-W scr_width] [-N scr_height]\n\
	[-f frames/sec] [-p passes] [-r] [-v] [-z]\n\
	[-o startframe] basename [file2 ... fileN]\n";

int
get_args(int argc, register char **argv)
{
	register int c;

	while ( (c = getopt( argc, argv, "hs:w:n:S:W:N:o:f:p:rzv" )) != EOF )  {
		switch( c )  {
		case 'h':
			/* high-res */
			screen_height = screen_width = 1024;
			break;
		case 's':
			/* square input file size */
			file_height = file_width = atoi(optarg);
			break;
		case 'w':
			file_width = atoi(optarg);
			break;
		case 'n':
			file_height = atoi(optarg);
			break;
		case 'S':
			screen_height = screen_width = atoi(optarg);
			break;
		case 'W':
			screen_width = atoi(optarg);
			break;
		case 'N':
			screen_height = atoi(optarg);
			break;
		case 'o':
			framenumber = atoi(optarg);
			break;
		case 'f':
			fps = atoi(optarg);
			break;
		case 'p':
			passes = atoi(optarg);
			if(passes<1)  passes=1;
			break;
		case 'r':
			rocking = 1;
			break;
		case 'z':
			zoom = 0;
			break;
		case 'v':
			verbose = 1;
			break;
		default:		/* '?' */
			return(0);	/* Bad */
		}
	}

	if( optind >= argc )  {
		fprintf(stderr, "pixflip-fb: basename or filename(s) missing\n");
		return(0);	/* Bad */
	}

	return(1);		/* OK */
}

int
main(int argc, char **argv)
{
	register int i;
	unsigned char	*obuf;
	int	scanbytes;		/* bytes per input image */
	int	islist = 0;		/* set if a list, zero if basename */
	char	name[256];
	int	fd;
	struct timeval tv;
	fd_set readfds;

	FD_ZERO(&readfds);
	FD_SET(fileno(stdin), &readfds);

	if( !get_args( argc, argv ) )  {
		(void)fputs(usage, stderr);
		exit( 1);
	}

	if( optind+1 == argc )  {
		basename = argv[optind];
		islist = 0;
	} else {
		islist = 1;
	}

	if( file_width < 1 ) {
		fprintf(stderr,"pixflip-fb: width of %d out of range\n", file_width);
		exit(12);
	}

	if( (fbp = fb_open( NULL, screen_width, screen_height )) == FBIO_NULL )  {
		fprintf(stderr,"pixflip-fb: fb_open failed\n");
		exit(12);
	}
	screen_width = fb_getwidth(fbp);
	screen_height = fb_getheight(fbp);

	if (zoom) {
		if (verbose) fprintf(stderr,
			"pixflip-fb: zoom = %d x %d\n",
			screen_width/file_width,
			screen_height/file_height);
		fb_view(fbp, file_width/2, file_height/2,
			screen_width/file_width,
			screen_height/file_height);
	}

	if( fps <= 1 )  {
		tv.tv_sec = fps ? 1L : 4L;
		tv.tv_usec = 0L;
	} else {
		tv.tv_sec = 0L;
		tv.tv_usec = (long) (1000000/fps);
	}

	scanbytes = file_width * file_height * sizeof(RGBpixel);

	for( maxframe = 0; maxframe < MAXFRAMES;  )  {

		if( (obuf = (unsigned char *)malloc( scanbytes )) == (unsigned char *)0 )  {
			(void)fprintf(stderr,"pixflip-fb:  malloc %d failure\n", scanbytes );
			break;
		}
		bzero( (char *)obuf, scanbytes );
		frames[maxframe] = obuf;

		fprintf(stderr,"%d ", framenumber);  fflush(stdout);
		if( islist )  {
			/* See if we read all the files */
			if( optind >= argc )
				goto done;
			strcpy(name, argv[optind++]);
		} else {
			sprintf(name,"%s.%d", basename, framenumber);
		}
		if( (fd=open(name,0))<0 )  {
			perror(name);
			goto done;
		}

		/* Read in .pix file.  Bottom to top */
		i = read( fd, obuf, scanbytes );
		if( i <= 0 )  {
			perror(name);
		} else if( i != scanbytes ) {
			fprintf(stderr,"\npixflip-fb:  %s wanted %d got %d\n",
				name, scanbytes, i );
		}
		close(fd);

		/* Show user the frame that was just read */
		showframe( maxframe++ );
		framenumber++;
	}
done:
	while(passes-- > 0)  {
		if( !rocking )  {
			/* Play from start to finish, over and over */
			for( i=0; i<maxframe; i++ )  {
				showframe(i);
				select( fileno(stdin)+1, &readfds, 
					(fd_set *)0, (fd_set *)0, &tv );
			}
		} else {
			/* Play from start to finish and back */
			for( i=0; i<maxframe; i++ )  {
				showframe(i);
				select( fileno(stdin)+1, &readfds, 
					(fd_set *)0, (fd_set *)0, &tv );
			}
			while(i-->0)  {
				showframe(i);
				select( fileno(stdin)+1, &readfds, 
					(fd_set *)0, (fd_set *)0, &tv );
			}
		}
	}
	fb_close( fbp );

	fprintf(stderr,"\n");
	exit(0);
}

void
showframe(register int i)
{
	if( verbose )  {
		fprintf(stderr, " %d", i);
		fflush( stderr );
	}

	if( i < 0 || i > maxframe )  {
		fprintf(stderr,"pixflip-fb:  %d out of range\n", i);
		return;
	}

	fb_writerect( fbp, 0, 0, file_width, file_height, frames[i] );

	if( verbose )  {
		fprintf(stderr, ",");
		fflush( stderr );
	}
}
@


11.8
log
@change conf.h to a wrapped config.h
@
text
@d23 1
a23 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/fb/pixflip-fb.c,v 11.7 2004/04/05 07:49:23 morrison Exp $ (BRL)";
@


11.7
log
@merge of ansi-6-0-branch into HEAD
@
text
@d23 1
a23 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
d26 5
a30 1
#include "conf.h"
@


11.6
log
@update copyright to include span through 2003
@
text
@d23 1
a23 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/fb/pixflip-fb.c,v 11.5 2002/08/20 17:07:25 jra Exp $ (BRL)";
d48 1
a48 1
void		showframe();
d68 1
a68 2
get_args( argc, argv )
register char **argv;
d130 1
a130 2
main( argc, argv )
char **argv;
d255 1
a255 2
showframe(i)
register int i;
@


11.5
log
@Restoration of entire source tree to Pre-Hartley state
@
text
@d19 1
a19 1
 *	This software is Copyright (C) 1988 by the United States Army.
d23 1
a23 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/fb/pixflip-fb.c,v 11.3 2001/04/12 17:44:08 bparker Exp $ (BRL)";
@


11.5.4.1
log
@sync to HEAD...
@
text
@d19 1
a19 1
 *	This software is Copyright (C) 1988-2004 by the United States Army.
d23 1
a23 1
static const char RCSid[] = "@@(#)$Header: /n/cad/c/CVS/brlcad/fb/pixflip-fb.c,v 11.6 2004/02/02 17:39:01 morrison Exp $ (BRL)";
@


11.5.10.1
log
@merge from HEAD
@
text
@d19 1
a19 1
 *	This software is Copyright (C) 1988-2004 by the United States Army.
d23 1
a23 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/fb/pixflip-fb.c,v 11.6 2004/02/02 17:39:01 morrison Exp $ (BRL)";
@


11.5.10.2
log
@merge from head
@
text
@d23 1
a23 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/fb/pixflip-fb.c,v 11.5.10.1 2004/02/12 19:40:46 erikg Exp $ (BRL)";
@


11.5.2.1
log
@Initial ANSIfication
@
text
@d23 1
a23 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/fb/pixflip-fb.c,v 11.5 2002/08/20 17:07:25 jra Exp $ (BRL)";
d48 1
a48 1
void		showframe(register int i);
d68 2
a69 1
get_args(int argc, register char **argv)
d131 2
a132 1
main(int argc, char **argv)
d257 2
a258 1
showframe(register int i)
@


11.5.2.2
log
@sync branch with HEAD
@
text
@d19 1
a19 1
 *	This software is Copyright (C) 1988-2004 by the United States Army.
d23 1
a23 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
@


11.4
log
@Converted from K&R to ANSI C - RFH
@
text
@d48 1
a48 1
void		showframe(register int i);
d68 2
a69 1
get_args(int argc, register char **argv)
d131 2
a132 1
main(int argc, char **argv)
d257 2
a258 1
showframe(register int i)
@


11.3
log
@*- get rid of warnings
@
text
@d23 1
a23 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/fb/pixflip-fb.c,v 11.2 2000/08/24 03:58:34 mike Exp $ (BRL)";
d48 1
a48 1
void		showframe();
d68 1
a68 2
get_args( argc, argv )
register char **argv;
d130 1
a130 2
main( argc, argv )
char **argv;
d255 1
a255 2
showframe(i)
register int i;
@


11.2
log
@
const RCSid
@
text
@d23 1
a23 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/fb/pixflip-fb.c,v 11.1 1995/01/04 10:09:41 mike Rel4_4 $ (BRL)";
d29 5
d67 1
d130 1
@


11.1
log
@Release_4.4
@
text
@d23 1
a23 1
static char RCSid[] = "@@(#)$Header: /m/cad/fb/RCS/pixflip-fb.c,v 10.7 94/12/30 03:28:15 mike Exp $ (BRL)";
@


10.7
log
@DEC Alpha
@
text
@d23 1
a23 1
static char RCSid[] = "@@(#)$Header: /m/cad/fb/RCS/pixflip-fb.c,v 10.6 94/11/14 22:29:55 mike Exp Locker: mike $ (BRL)";
@


10.6
log
@Irix 6
@
text
@d23 1
a23 1
static char RCSid[] = "@@(#)$Header: /m/cad/fb/RCS/pixflip-fb.c,v 10.5 94/08/25 17:55:15 gdurf Exp Locker: mike $ (BRL)";
d189 1
a189 1
		bzero( obuf, scanbytes );
@


10.5
log
@Removed bsdselect
@
text
@d23 1
a23 1
static char RCSid[] = "@@(#)$Header: /m/cad/fb/RCS/pixflip-fb.c,v 10.4 1994/08/23 18:49:17 gdurf Exp gdurf $ (BRL)";
a252 2
	register int	y;

@


10.4
log
@Added includes, factored ifdefs
@
text
@d23 1
a23 1
static char RCSid[] = "@@(#)$Header: /m/cad/fb/RCS/pixflip-fb.c,v 10.3 1994/08/11 15:06:17 mike Exp gdurf $ (BRL)";
d29 1
d133 2
a134 1
	int	sec, usec;
d136 3
d174 2
a175 2
		sec = fps ? 1 : 4;
		usec = 0;
d177 2
a178 2
		sec = 0;
		usec = 1000000/fps;
d226 2
a227 1
				bsdselect( 0, sec, usec );
d233 2
a234 1
				bsdselect( 0, sec, usec );
d238 2
a239 1
				bsdselect( 0, sec, usec );
@


10.3
log
@Reduced use of RGBpixel
Now use (unsigned char *)
@
text
@d23 1
a23 1
static char RCSid[] = "@@(#)$Header: /m/cad/fb/RCS/pixflip-fb.c,v 10.2 91/11/20 12:56:41 phil Exp Locker: mike $ (BRL)";
d26 2
d29 1
d31 1
a31 1
#include "externs.h"
@


10.2
log
@"Modernized" it - 512x512 default, use fb_view and fb_writerect.
Added -z for no-zoom option (probably ought to be -z FOR zoom as
in pix-fb).
@
text
@d23 1
a23 1
static char RCSid[] = "@@(#)$Header: /m/cad/fb/RCS/pixflip-fb.c,v 10.1 91/10/12 06:46:45 mike Rel4_0 Locker: phil $ (BRL)";
a25 4
#ifdef SYSV
#define bzero(p,cnt)	memset(p,'\0',cnt);
#endif

d27 2
a30 6
extern int	getopt();
extern char	*optarg;
extern int	optind;

extern char	*malloc();

d48 1
a48 1
char	*frames[MAXFRAMES];	/* Pointers to pixel arrays */
d124 1
a124 1
	char	*obuf;
d177 1
a177 1
		if( (obuf = (char *)malloc( scanbytes )) == (char *)0 )  {
@


10.1
log
@Release_4.0
@
text
@d23 1
a23 1
static char RCSid[] = "@@(#)$Header: /m/cad/fb/RCS/pixflip-fb.c,v 9.1 89/05/19 06:10:26 mike Rel3_5 $ (BRL)";
d39 2
a40 2
int	file_width = 64;	/* width of input sub-images in pixels (64) */
int	file_height = 64;	/* height of input sub-images in scanlines (64) */
a49 1
int	sizes_match = 0;
d53 1
d63 1
a63 1
	[-f frames/sec] [-p passes] [-r] [-v]\n\
d71 1
a71 1
	while ( (c = getopt( argc, argv, "hs:w:n:S:W:N:o:f:p:rv" )) != EOF )  {
d109 3
d163 9
a171 6
	if( file_width == screen_width && file_height == screen_height )  {
		if(verbose) fprintf(stderr,
			"pixflip-fb:  screen & file sizes match\n");
		sizes_match = 1;
	}  else
		sizes_match = 0;
a172 6
	/* Library wants zoom before window */
	fb_zoom( fbp,
		screen_width/file_width,
		screen_height/file_height );
	fb_window( fbp, file_width/2, file_height/2 );

d262 2
a263 12
	if( sizes_match )  {
		fb_write( fbp, 0, 0, frames[i], file_width * file_height );
	} else {
#if 0
		for( y=0; y < file_height; y++ )
			fb_write( fbp, 0, y,
				frames[i] + (y * file_width * 3),
				file_width );
#else
		fb_writerect( fbp, 0, 0, file_width, file_height, frames[i] );
#endif
	}
@


9.1
log
@Release_3.5
@
text
@d23 1
a23 1
static char RCSid[] = "@@(#)$Header: pixflip-fb.c,v 1.2 89/03/07 00:33:57 mike Exp $ (BRL)";
@


1.2
log
@Changed to bsdselect(), fb_writerect()
@
text
@d23 1
a23 1
static char RCSid[] = "@@(#)$Header: pixflip-fb.c,v 1.1 89/01/04 12:13:36 mike Locked $ (BRL)";
@


1.1
log
@Initial revision
@
text
@d23 1
a23 1
static char RCSid[] = "@@(#)$Header: pixtile.c,v 8.1 88/10/05 00:43:20 mike Rel3_0 $ (BRL)";
a32 22
#if defined(BSD)
#include <sys/time.h>		/* for struct timeval */
#define HAS_TIMEVAL	yes
#endif

#if defined(sgi)
#	if !defined(mips) || defined(SGI4D_Rel2)
		/* 3D systems, and Rel2 4D systems. */
#		include <bsd/sys/types.h>
#		include <bsd/sys/time.h>
#	else
		/* Rel3 4D systems got it right */
#		include <sys/types.h>
#		include <sys/time.h>
#	endif
#	define HAS_TIMEVAL yes
#endif

#ifdef HAS_TIMEVAL
struct timeval	tv;
#endif

d134 1
a172 1
#ifdef HAS_TIMEVAL
d174 2
a175 2
		tv.tv_sec = fps ? 1 : 4;
		tv.tv_usec = 0;
d177 2
a178 2
		tv.tv_sec = 0;
		tv.tv_usec = 1000000/fps;
a179 1
#endif
d226 1
a226 1
				delay();
d232 1
a232 1
				delay();
d236 1
a236 1
				delay();
d265 1
d270 3
a277 9
}

delay()
{
#ifdef HAS_TIMEVAL
	(void)select( 0, 0, 0, 0, &tv );
#else
	(void)sleep(1);	/* best I can do, sorry */
#endif
@
