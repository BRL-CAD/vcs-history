head	11.9;
access;
symbols
	ansi-20040405-merged:11.5.2.2
	postmerge-20040405-ansi:11.7
	premerge-20040404-ansi:11.6
	postmerge-autoconf:11.6
	autoconf-freeze:11.5.10.2
	premerge-autoconf:11.6
	ansi-20040316-freeze:11.5.2.1
	postmerge-20040315-windows:11.6
	premerge-20040315-windows:11.6
	windows-20040315-freeze:11.5.4.1
	autoconf-20031203:11.5
	autoconf-20031202:11.5
	autoconf-branch:11.5.0.10
	phong-branch:11.5.0.8
	photonmap-branch:11.5.0.6
	rel-6-1-DP:11.5
	windows-branch:11.5.0.4
	rel-6-0-2:11.3
	ansi-branch:11.5.0.2
	rel-6-0-1-branch:11.3.0.2
	hartley-6-0-post:11.4
	hartley-6-0-pre:11.3
	rel-6-0-1:11.3
	rel-6-0:11.3
	rel-5-4:11.1
	offsite-5-3-pre:11.2
	rel-5-3:11.1
	rel-5-2:11.1
	rel-5-1-branch:11.1.0.2
	rel-5-1:11.1
	rel-5-0:11.1
	rel-5-0-beta:11.1
	rel-4-5:11.1
	ctj-4-5-post:11.1
	ctj-4-5-pre:11.1
	rel-4-4:11.1
	rel-4-0:10.1
	rel-3-5:9.1
	rel-3-0:8.1;
locks; strict;
comment	@ * @;


11.9
date	2004.05.24.04.13.26;	author morrison;	state dead;
branches;
next	11.8;

11.8
date	2004.05.10.15.30.42;	author erikg;	state Exp;
branches;
next	11.7;

11.7
date	2004.04.05.07.49.23;	author morrison;	state Exp;
branches;
next	11.6;

11.6
date	2004.02.02.17.39.01;	author morrison;	state Exp;
branches;
next	11.5;

11.5
date	2002.08.20.17.07.25;	author jra;	state Exp;
branches
	11.5.2.1
	11.5.4.1
	11.5.10.1;
next	11.4;

11.4
date	2002.08.15.20.54.38;	author hartley;	state Exp;
branches;
next	11.3;

11.3
date	2001.04.12.17.44.08;	author bparker;	state Exp;
branches;
next	11.2;

11.2
date	2000.08.24.03.58.31;	author mike;	state Exp;
branches;
next	11.1;

11.1
date	95.01.04.10.09.27;	author mike;	state Rel4_4;
branches;
next	10.4;

10.4
date	94.11.14.22.27.13;	author mike;	state Exp;
branches;
next	10.3;

10.3
date	94.08.23.18.49.06;	author gdurf;	state Exp;
branches;
next	10.2;

10.2
date	94.08.11.15.06.09;	author mike;	state Exp;
branches;
next	10.1;

10.1
date	91.10.12.06.46.32;	author mike;	state Rel4_0;
branches;
next	9.1;

9.1
date	89.05.19.06.09.06;	author mike;	state Rel3_5;
branches;
next	8.1;

8.1
date	88.10.05.00.41.48;	author mike;	state Rel3_0;
branches;
next	1.4;

1.4
date	88.07.15.01.13.15;	author phil;	state Exp;
branches;
next	1.3;

1.3
date	88.05.22.23.53.05;	author mike;	state Exp;
branches;
next	1.2;

1.2
date	88.05.16.00.06.41;	author mike;	state Exp;
branches;
next	1.1;

1.1
date	88.01.13.21.37.50;	author mike;	state Exp;
branches;
next	;

11.5.2.1
date	2002.09.19.18.00.41;	author morrison;	state Exp;
branches;
next	11.5.2.2;

11.5.2.2
date	2004.03.17.21.16.08;	author morrison;	state Exp;
branches;
next	;

11.5.4.1
date	2004.03.11.23.40.41;	author morrison;	state Exp;
branches;
next	;

11.5.10.1
date	2004.02.12.19.40.46;	author erikg;	state Exp;
branches;
next	11.5.10.2;

11.5.10.2
date	2004.03.15.13.28.06;	author erikg;	state Exp;
branches;
next	;


desc
@Program to draw lines on a framebuffer
@


11.9
log
@moved to src/fb/
@
text
@/*
 *			F B L I N E . C
 *
 *  Draw a single 2-D line on the framebuffer, in a given color
 *
 *  Author -
 *	Michael John Muuss
 *
 * Acknowledgment:
 * 	Based rather heavily on plot-fb.c
 *
 *  Source -
 *	SECAD/VLD Computing Consortium, Bldg 394
 *	The U. S. Army Ballistic Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5066
 *  
 *  Copyright Notice -
 *	This software is Copyright (C) 1988-2004 by the United States Army.
 *	All rights reserved.
 */
#ifndef lint
static const char RCSid[] = "@@(#)$Header: /n/xoff/cvs/brlcad/fb/fbline.c,v 11.8 2004/05/10 15:30:42 erikg Exp $ (BRL)";
#endif

#ifdef HAVE_CONFIG_H
# include "config.h"
#endif



#include <stdio.h>
#include <ctype.h>
#include "machine.h"
#include "externs.h"			/* For getopt() */
#include "fb.h"

typedef int	bool;			/* boolean data type */
#define false	0
#define true	1

struct  coords {
	short		x;
	short		y;
}; 		/* Cartesian coordinates */

struct stroke {
	struct stroke	*next;		/* next in list, or NULL */
	struct coords	pixel;		/* starting scan, nib */
	short		xsign;		/* 0 or +1 */
	short		ysign;		/* -1, 0, or +1 */
	bool		ymajor; 	/* true iff Y is major dir. */
#undef major
#undef minor
	short		major;		/* major dir delta (nonneg) */
	short		minor;		/* minor dir delta (nonneg) */
	short		e;		/* DDA error accumulator */
	short		de;		/* increment for `e' */
}; 		/* rasterization descriptor */

static char	*framebuffer = NULL;
FBIO		*fbp;			/* Current framebuffer */

static int	screen_width = 512;	/* default input width */
static int	screen_height = 512;	/* default input height */
static int	clear = 0;

RGBpixel	pixcolor = { 255, 255, 255 };

static int	x1, y1, x2, y2;

void		edgelimit(register struct coords *ppos);
void		BuildStr(struct coords *pt1, struct coords *pt2);
void		Raster(register struct stroke *vp);

static char usage[] = "\
Usage: fbline [-h -c ] [-F framebuffer]\n\
	[-W screen_width] [-N screen_height]\n\
	[-r red] [-g green] [-b blue] x1 y1 x2 y2\n";

/*
 *			G E T_ A R G S
 */
int
get_args(int argc, register char **argv)
{

	register int c;

	while ( (c = getopt( argc, argv, "hW:w:N:n:cF:r:g:b:" )) != EOF )  {
		switch( c )  {
		case 'h':
			/* high-res */
			screen_height = screen_width = 1024;
			break;
		case 'W':
		case 'w':
			screen_width = atoi(optarg);
			break;
		case 'N':
		case 'n':
			screen_height = atoi(optarg);
			break;
		case 'c':
			clear = 1;
			break;
		case 'F':
			framebuffer = optarg;
			break;
		case 'r':
			pixcolor[RED] = atoi( optarg );
			break;
		case 'g':
			pixcolor[GRN] = atoi( optarg );
			break;
		case 'b':
			pixcolor[BLU] = atoi( optarg );
			break;
		default:		/* '?' */
			return(0);
		}
	}

	if( optind+4 > argc )
		return(0);		/* BAD */
	x1 = atoi( argv[optind++]);
	y1 = atoi( argv[optind++]);
	x2 = atoi( argv[optind++]);
	y2 = atoi( argv[optind++]);

	if ( argc > optind )
		(void)fprintf( stderr, "fbline: excess argument(s) ignored\n" );

	return(1);		/* OK */
}

/*
 *			M A I N
 */
int
main(int argc, char **argv)
{
	struct coords	start, end;

	if ( !get_args( argc, argv ) ) {
		fputs( usage, stderr);
		exit(1);
	}

	if( (fbp = fb_open( framebuffer, screen_width, screen_height )) == NULL )
		exit(12);

	if( clear ) {
		fb_clear( fbp, PIXEL_NULL);
	}
	screen_width = fb_getwidth(fbp);
	screen_height = fb_getheight(fbp);

	start.x = x1;
	start.y = y1;
	end.x = x2;
	end.y = y2;
	edgelimit( &start );
	edgelimit( &end );
	BuildStr( &start, &end );	/* pixels */

	fb_close( fbp );
	exit(0);
}

/*
 *			E D G E L I M I T
 *
 *	Limit generated positions to edges of screen
 *	Really should clip to screen, instead.
 */
void
edgelimit(register struct coords *ppos)
{
	if( ppos->x >= screen_width )
		ppos->x = screen_width -1;

	if( ppos->y >= screen_height )
		ppos->y = screen_height -1;
}

/*
 *			B U I L D S T R
 *
 *  set up DDA parameters
 */
void
BuildStr(struct coords *pt1, struct coords *pt2)
{
	struct stroke cur_stroke;
	register struct stroke *vp = &cur_stroke;

	/* arrange for pt1 to have the smaller Y-coordinate: */
	if ( pt1->y > pt2->y )  {
		register struct coords *temp;	/* temporary for swap */

		temp = pt1;		/* swap pointers */
		pt1 = pt2;
		pt2 = temp;
	}

	/* set up DDA parameters for stroke */
	vp->pixel = *pt1;		/* initial pixel */
	vp->major = pt2->y - vp->pixel.y;	/* always nonnegative */
	vp->ysign = vp->major ? 1 : 0;
	vp->minor = pt2->x - vp->pixel.x;
	if ( (vp->xsign = vp->minor ? (vp->minor > 0 ? 1 : -1) : 0) < 0 )
		vp->minor = -vp->minor;

	/* if Y is not really major, correct the assignments */
	if ( !(vp->ymajor = vp->minor <= vp->major) )  {
		register short	temp;	/* temporary for swap */

		temp = vp->minor;
		vp->minor = vp->major;
		vp->major = temp;
	}

	vp->e = vp->major / 2 - vp->minor;	/* initial DDA error */
	vp->de = vp->major - vp->minor;

	Raster( vp );
}

/*
 *			R A S T E R
 *
 *	Raster - rasterize stroke. 
 *
 * Method:
 *	Modified Bresenham algorithm.  Guaranteed to mark a dot for
 *	a zero-length stroke.
 */
void
Raster(register struct stroke *vp)
{
	register short	dy;		/* raster within active band */

	/*
	 *  Write the color of this vector on all pixels.
	 */
	for ( dy = vp->pixel.y; dy < screen_height; )  {

		/* set the appropriate pixel in the buffer */
		fb_write( fbp, vp->pixel.x, dy, pixcolor, 1 );

		if ( vp->major-- == 0 )
			return;		/* Done */

		if ( vp->e < 0 )  {
			/* advance major & minor */
			dy += vp->ysign;
			vp->pixel.x += vp->xsign;
			vp->e += vp->de;
		}  else	{
			/* advance major only */
			if ( vp->ymajor )	/* Y is major dir */
				++dy;
			else			/* X is major dir */
				vp->pixel.x += vp->xsign;
			vp->e -= vp->minor;
		}
	}
	fprintf(stderr,"line left screen?\n");
}
@


11.8
log
@change conf.h to a wrapped config.h
@
text
@d22 1
a22 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/fb/fbline.c,v 11.7 2004/04/05 07:49:23 morrison Exp $ (BRL)";
@


11.7
log
@merge of ansi-6-0-branch into HEAD
@
text
@d22 1
a22 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
d25 5
a29 1
#include "conf.h"
@


11.6
log
@update copyright to include span through 2003
@
text
@d22 1
a22 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/fb/fbline.c,v 11.5 2002/08/20 17:07:25 jra Exp $ (BRL)";
d67 3
a69 1
void		edgelimit(), BuildStr(), Raster();
d80 1
a80 2
get_args( argc, argv )
register char **argv;
d136 1
a136 3
main(argc, argv)
int argc;
char **argv;
d173 1
a173 2
edgelimit( ppos )
register struct coords *ppos;
d188 1
a188 2
BuildStr( pt1, pt2 )
struct coords		*pt1, *pt2;
d235 1
a235 2
Raster( vp )
register struct stroke *vp;
@


11.5
log
@Restoration of entire source tree to Pre-Hartley state
@
text
@d18 1
a18 1
 *	This software is Copyright (C) 1988 by the United States Army.
d22 1
a22 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/fb/fbline.c,v 11.3 2001/04/12 17:44:08 bparker Exp $ (BRL)";
@


11.5.4.1
log
@sync to HEAD...
@
text
@d18 1
a18 1
 *	This software is Copyright (C) 1988-2004 by the United States Army.
d22 1
a22 1
static const char RCSid[] = "@@(#)$Header: /n/cad/c/CVS/brlcad/fb/fbline.c,v 11.6 2004/02/02 17:39:01 morrison Exp $ (BRL)";
@


11.5.10.1
log
@merge from HEAD
@
text
@d18 1
a18 1
 *	This software is Copyright (C) 1988-2004 by the United States Army.
d22 1
a22 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/fb/fbline.c,v 11.6 2004/02/02 17:39:01 morrison Exp $ (BRL)";
@


11.5.10.2
log
@merge from head
@
text
@d22 1
a22 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/fb/fbline.c,v 11.5.10.1 2004/02/12 19:40:46 erikg Exp $ (BRL)";
@


11.5.2.1
log
@Initial ANSIfication
@
text
@d22 1
a22 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/fb/fbline.c,v 11.5 2002/08/20 17:07:25 jra Exp $ (BRL)";
d67 1
a67 3
void		edgelimit(register struct coords *ppos);
void		BuildStr(struct coords *pt1, struct coords *pt2);
void		Raster(register struct stroke *vp);
d78 2
a79 1
get_args(int argc, register char **argv)
d135 3
a137 1
main(int argc, char **argv)
d174 2
a175 1
edgelimit(register struct coords *ppos)
d190 2
a191 1
BuildStr(struct coords *pt1, struct coords *pt2)
d238 2
a239 1
Raster(register struct stroke *vp)
@


11.5.2.2
log
@sync branch with HEAD
@
text
@d18 1
a18 1
 *	This software is Copyright (C) 1988-2004 by the United States Army.
d22 1
a22 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
@


11.4
log
@Converted from K&R to ANSI C - RFH
@
text
@d67 1
a67 3
void		edgelimit(register struct coords *ppos);
void		BuildStr(struct coords *pt1, struct coords *pt2);
void		Raster(register struct stroke *vp);
d78 2
a79 1
get_args(int argc, register char **argv)
d135 3
a137 1
main(int argc, char **argv)
d174 2
a175 1
edgelimit(register struct coords *ppos)
d190 2
a191 1
BuildStr(struct coords *pt1, struct coords *pt2)
d238 2
a239 1
Raster(register struct stroke *vp)
@


11.3
log
@*- get rid of warnings
@
text
@d22 1
a22 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/fb/fbline.c,v 11.2 2000/08/24 03:58:31 mike Exp $ (BRL)";
d67 3
a69 1
void		edgelimit(), BuildStr(), Raster();
d80 1
a80 2
get_args( argc, argv )
register char **argv;
d136 1
a136 3
main(argc, argv)
int argc;
char **argv;
d173 1
a173 2
edgelimit( ppos )
register struct coords *ppos;
d188 1
a188 2
BuildStr( pt1, pt2 )
struct coords		*pt1, *pt2;
d235 1
a235 2
Raster( vp )
register struct stroke *vp;
@


11.2
log
@
const RCSid
@
text
@d22 1
a22 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/fb/fbline.c,v 11.1 1995/01/04 10:09:27 mike Rel4_4 $ (BRL)";
d77 1
d134 1
@


11.1
log
@Release_4.4
@
text
@d22 1
a22 1
static char RCSid[] = "@@(#)$Header: /m/cad/fb/RCS/fbline.c,v 10.4 94/11/14 22:27:13 mike Exp $ (BRL)";
@


10.4
log
@Irix 6
@
text
@d22 1
a22 1
static char RCSid[] = "@@(#)$Header: /m/cad/fb/RCS/fbline.c,v 10.3 94/08/23 18:49:06 gdurf Exp Locker: mike $ (BRL)";
@


10.3
log
@Added includes, factored ifdefs
@
text
@d22 1
a22 1
static char RCSid[] = "@@(#)$Header: /m/cad/fb/RCS/fbline.c,v 10.2 1994/08/11 15:06:09 mike Exp gdurf $ (BRL)";
a137 3
	register int	i;
	register char	*filename = NULL;
	char		*cp;
@


10.2
log
@Reduced use of RGBpixel
Now use (unsigned char *)
@
text
@d22 1
a22 1
static char RCSid[] = "@@(#)$Header: /m/cad/fb/RCS/fbline.c,v 10.1 91/10/12 06:46:32 mike Rel4_0 Locker: mike $ (BRL)";
d25 2
d29 2
d48 2
a54 4

extern int	getopt();
extern char	*optarg;
extern int	optind;
@


10.1
log
@Release_4.0
@
text
@d22 1
a22 1
static char RCSid[] = "@@(#)$Header: /m/cad/fb/RCS/fbline.c,v 9.1 89/05/19 06:09:06 mike Rel3_5 $ (BRL)";
d69 1
d81 1
a81 1
	while ( (c = getopt( argc, argv, "hcF:r:g:b:" )) != EOF )  {
d86 8
@


9.1
log
@Release_3.5
@
text
@d22 1
a22 1
static char RCSid[] = "@@(#)$Header: fbline.c,v 8.1 88/10/05 00:41:48 mike Rel3_0 $ (BRL)";
@


8.1
log
@Release_3.0
@
text
@d22 1
a22 1
static char RCSid[] = "@@(#)$Header: fbline.c,v 1.4 88/07/15 01:13:15 phil Exp $ (BRL)";
@


1.4
log
@added fb_close()
@
text
@d22 1
a22 1
static char RCSid[] = "@@(#)$Header: fbline.c,v 1.3 88/05/22 23:53:05 phil Locked $ (BRL)";
@


1.3
log
@Removed colormap diddling
@
text
@d22 1
a22 1
static char RCSid[] = "@@(#)$Header: fbline.c,v 1.2 88/05/16 00:06:41 mike Locked $ (BRL)";
d153 1
@


1.2
log
@lint fixes
@
text
@d22 1
a22 1
static char RCSid[] = "@@(#)$Header: fbline.c,v 1.1 88/01/13 21:37:50 mike Locked $ (BRL)";
a140 1
		fb_wmap( fbp, COLORMAP_NULL );
@


1.1
log
@Initial revision
@
text
@d22 1
a22 1
static char RCSid[] = "@@(#)$Header: plot-fb.c,v 7.1 87/11/03 00:09:20 mike Rel $ (BRL)";
d65 2
d163 1
d179 1
d227 1
@
