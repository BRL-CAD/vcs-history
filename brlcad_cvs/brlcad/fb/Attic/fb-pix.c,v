head	11.10;
access;
symbols
	ansi-20040405-merged:11.6.2.2
	postmerge-20040405-ansi:11.8
	premerge-20040404-ansi:11.7
	postmerge-autoconf:11.7
	autoconf-freeze:11.6.10.2
	premerge-autoconf:11.7
	ansi-20040316-freeze:11.6.2.1
	postmerge-20040315-windows:11.7
	premerge-20040315-windows:11.7
	windows-20040315-freeze:11.6.4.1
	autoconf-20031203:11.6
	autoconf-20031202:11.6
	autoconf-branch:11.6.0.10
	phong-branch:11.6.0.8
	photonmap-branch:11.6.0.6
	rel-6-1-DP:11.6
	windows-branch:11.6.0.4
	rel-6-0-2:11.4
	ansi-branch:11.6.0.2
	rel-6-0-1-branch:11.4.0.2
	hartley-6-0-post:11.5
	hartley-6-0-pre:11.4
	rel-6-0-1:11.4
	rel-6-0:11.4
	rel-5-4:11.1
	offsite-5-3-pre:11.2
	rel-5-3:11.1
	rel-5-2:11.1
	rel-5-1-branch:11.1.0.2
	rel-5-1:11.1
	rel-5-0:11.1
	rel-5-0-beta:11.1
	rel-4-5:11.1
	ctj-4-5-post:11.1
	ctj-4-5-pre:11.1
	rel-4-4:11.1
	rel-4-0:10.1
	rel-3-5:9.1
	rel-3-0:8.1
	rel-2-3:7.1
	rel-2-0:6.1
	rel-1-24:5.1
	rel-1-20:4.2
	rel-1-10:4.1;
locks; strict;
comment	@ * @;


11.10
date	2004.05.24.04.13.25;	author morrison;	state dead;
branches;
next	11.9;

11.9
date	2004.05.10.15.30.42;	author erikg;	state Exp;
branches;
next	11.8;

11.8
date	2004.04.05.07.49.23;	author morrison;	state Exp;
branches;
next	11.7;

11.7
date	2004.02.02.17.39.01;	author morrison;	state Exp;
branches;
next	11.6;

11.6
date	2002.08.20.17.07.24;	author jra;	state Exp;
branches
	11.6.2.1
	11.6.4.1
	11.6.10.1;
next	11.5;

11.5
date	2002.08.15.20.54.37;	author hartley;	state Exp;
branches;
next	11.4;

11.4
date	2001.10.12.18.37.41;	author butler;	state Exp;
branches;
next	11.3;

11.3
date	2001.04.12.17.44.07;	author bparker;	state Exp;
branches;
next	11.2;

11.2
date	2000.08.24.03.58.26;	author mike;	state Exp;
branches;
next	11.1;

11.1
date	95.01.04.10.09.06;	author mike;	state Rel4_4;
branches;
next	10.3;

10.3
date	94.08.23.18.48.59;	author gdurf;	state Exp;
branches;
next	10.2;

10.2
date	94.08.11.15.05.59;	author mike;	state Exp;
branches;
next	10.1;

10.1
date	91.10.12.06.46.12;	author mike;	state Rel4_0;
branches;
next	9.2;

9.2
date	91.07.02.01.58.17;	author mike;	state Exp;
branches;
next	9.1;

9.1
date	89.05.19.06.08.24;	author mike;	state Rel3_5;
branches;
next	8.2;

8.2
date	88.12.31.02.06.32;	author mike;	state Exp;
branches;
next	8.1;

8.1
date	88.10.05.00.41.07;	author mike;	state Rel3_0;
branches;
next	7.1;

7.1
date	87.11.03.00.06.41;	author mike;	state Rel;
branches;
next	6.2;

6.2
date	87.11.02.23.53.44;	author phil;	state Exp;
branches;
next	6.1;

6.1
date	87.07.11.08.09.53;	author mike;	state Rel;
branches;
next	5.3;

5.3
date	87.07.10.00.57.39;	author mike;	state Exp;
branches;
next	5.2;

5.2
date	87.06.27.00.23.02;	author mike;	state Exp;
branches;
next	5.1;

5.1
date	87.06.24.22.37.49;	author mike;	state Rel;
branches;
next	4.2;

4.2
date	87.02.13.00.40.17;	author mike;	state Exp;
branches;
next	4.1;

4.1
date	86.12.29.03.12.30;	author mike;	state Rel1;
branches;
next	1.9;

1.9
date	86.11.14.23.17.21;	author phil;	state Exp;
branches;
next	1.8;

1.8
date	86.10.30.22.30.48;	author phil;	state Exp;
branches;
next	1.7;

1.7
date	86.10.25.08.13.32;	author mike;	state Exp;
branches;
next	1.6;

1.6
date	86.10.06.21.07.57;	author mike;	state Exp;
branches;
next	1.5;

1.5
date	86.10.03.08.18.48;	author mike;	state Exp;
branches;
next	1.4;

1.4
date	86.10.03.04.51.43;	author mike;	state Exp;
branches;
next	1.3;

1.3
date	86.08.13.04.40.57;	author mike;	state Exp;
branches;
next	1.2;

1.2
date	86.06.13.19.41.24;	author mike;	state Exp;
branches;
next	1.1;

1.1
date	85.09.15.09.34.07;	author mike;	state Exp;
branches;
next	;

11.6.2.1
date	2002.09.19.18.00.39;	author morrison;	state Exp;
branches;
next	11.6.2.2;

11.6.2.2
date	2004.03.17.21.16.06;	author morrison;	state Exp;
branches;
next	;

11.6.4.1
date	2004.03.11.23.40.40;	author morrison;	state Exp;
branches;
next	;

11.6.10.1
date	2004.02.12.19.40.45;	author erikg;	state Exp;
branches;
next	11.6.10.2;

11.6.10.2
date	2004.03.15.13.28.05;	author erikg;	state Exp;
branches;
next	;


desc
@Read a .fb file and write a .pix file.
@


11.10
log
@moved to src/fb/
@
text
@/*
 *  			F B - P I X . C
 *  
 *  Program to take a frame buffer image and write a .pix image.
 *  
 *  Author -
 *	Michael John Muuss
 *  
 *  Source -
 *	SECAD/VLD Computing Consortium, Bldg 394
 *	The U. S. Army Ballistic Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5066
 *  
 *  Copyright Notice -
 *	This software is Copyright (C) 1986-2004 by the United States Army.
 *	All rights reserved.
 */
#ifndef lint
static const char RCSid[] = "@@(#)$Header: /n/xoff/cvs/brlcad/fb/fb-pix.c,v 11.9 2004/05/10 15:30:42 erikg Exp $ (BRL)";
#endif

#ifdef HAVE_CONFIG_H
# include "config.h"
#endif



#include <stdio.h>
#include <sys/stat.h>
#include "machine.h"
#include "externs.h"			/* For getopt() */
#include "fb.h"

static unsigned char	*scanline;		/* 1 scanline pixel buffer */
static int	scanbytes;		/* # of bytes of scanline */
static int	scanpix;		/* # of pixels of scanline */
static ColorMap	cmap;			/* libfb color map */

char	*framebuffer = NULL;
char	*file_name;
FILE	*outfp;

static int	crunch = 0;		/* Color map crunch? */
static int	inverse = 0;		/* Draw upside-down */
int	screen_height;			/* input height */
int	screen_width;			/* input width */

extern void	cmap_crunch(register RGBpixel (*scan_buf), register int pixel_ct, ColorMap *cmap);

char usage[] = "\
Usage: fb-pix [-h -i -c] [-F framebuffer]\n\
	[-s squaresize] [-w width] [-n height] [file.pix]\n";

int
get_args(int argc, register char **argv)
{
	register int c;

	while ( (c = getopt( argc, argv, "chiF:s:w:n:" )) != EOF )  {
		switch( c )  {
		case 'c':
			crunch = 1;
			break;
		case 'h':
			/* high-res */
			screen_height = screen_width = 1024;
			break;
		case 'i':
			inverse = 1;
			break;
		case 'F':
			framebuffer = optarg;
			break;
		case 's':
			/* square size */
			screen_height = screen_width = atoi(optarg);
			break;
		case 'w':
			screen_width = atoi(optarg);
			break;
		case 'n':
			screen_height = atoi(optarg);
			break;

		default:		/* '?' */
			return(0);
		}
	}

	if( optind >= argc )  {
		if( isatty(fileno(stdout)) )
			return(0);
		file_name = "-";
		outfp = stdout;
	} else {
		file_name = argv[optind];
		if( (outfp = fopen(file_name, "w")) == NULL )  {
			(void)fprintf( stderr,
				"fb-pix: cannot open \"%s\" for writing\n",
				file_name );
			return(0);
		}
		(void)chmod(file_name, 0444);
	}

	if ( argc > ++optind )
		(void)fprintf( stderr, "fb-pix: excess argument(s) ignored\n" );

	return(1);		/* OK */
}

int
main(int argc, char **argv)
{
	register FBIO *fbp;
	register int y;

	screen_height = screen_width = 512;		/* Defaults */

	if ( !get_args( argc, argv ) )  {
		(void)fputs(usage, stderr);
		exit( 1 );
	}

	scanpix = screen_width;
	scanbytes = scanpix * sizeof(RGBpixel);
	if( (scanline = (unsigned char *)malloc(scanbytes)) == RGBPIXEL_NULL )  {
		fprintf(stderr,
			"fb-pix:  malloc(%d) failure\n", scanbytes );
		exit(2);
	}

	if( (fbp = fb_open( framebuffer, screen_width, screen_height )) == NULL )
		exit(12);

	if( screen_height > fb_getheight(fbp) )
		screen_height = fb_getheight(fbp);
	if( screen_width > fb_getwidth(fbp) )
		screen_width = fb_getwidth(fbp);

	if( crunch )  {
		if( fb_rmap( fbp, &cmap ) == -1 )  {
			crunch = 0;
		} else if( fb_is_linear_cmap( &cmap ) ) {
			crunch = 0;
		}
	}

	if( !inverse )  {
		/*  Regular -- read bottom to top */
		for( y=0; y < screen_height; y++ )  {
			fb_read( fbp, 0, y, scanline, screen_width );
			if( crunch )
				cmap_crunch( (RGBpixel *)scanline, scanpix, &cmap );
			if( fwrite( (char *)scanline, scanbytes, 1, outfp ) != 1 )  {
				perror("fwrite");
				break;
			}
		}
	}  else  {
		/*  Inverse -- read top to bottom */
		for( y = screen_height-1; y >= 0; y-- )  {
			fb_read( fbp, 0, y, scanline, screen_width );
			if( crunch )
				cmap_crunch( (RGBpixel *)scanline, scanpix, &cmap );
			if( fwrite( (char *)scanline, scanbytes, 1, outfp ) != 1 )  {
				perror("fwrite");
				break;
			}
		}
	}
	fb_close( fbp );
	exit(0);
}
@


11.9
log
@change conf.h to a wrapped config.h
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/fb/fb-pix.c,v 11.8 2004/04/05 07:49:23 morrison Exp $ (BRL)";
@


11.8
log
@merge of ansi-6-0-branch into HEAD
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
d22 5
a26 1
#include "conf.h"
@


11.7
log
@update copyright to include span through 2003
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/fb/fb-pix.c,v 11.6 2002/08/20 17:07:24 jra Exp $ (BRL)";
d44 1
a44 1
extern void	cmap_crunch();
d51 1
a51 2
get_args( argc, argv )
register char **argv;
d109 1
a109 3
main(argc, argv)
int argc;
char **argv;
d150 1
a150 1
				cmap_crunch( scanline, scanpix, &cmap );
d161 1
a161 1
				cmap_crunch( scanline, scanpix, &cmap );
@


11.6
log
@Restoration of entire source tree to Pre-Hartley state
@
text
@d15 1
a15 1
 *	This software is Copyright (C) 1986 by the United States Army.
d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/fb/fb-pix.c,v 11.4 2001/10/12 18:37:41 butler Exp $ (BRL)";
@


11.6.4.1
log
@sync to HEAD...
@
text
@d15 1
a15 1
 *	This software is Copyright (C) 1986-2004 by the United States Army.
d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /n/cad/c/CVS/brlcad/fb/fb-pix.c,v 11.7 2004/02/02 17:39:01 morrison Exp $ (BRL)";
@


11.6.10.1
log
@merge from HEAD
@
text
@d15 1
a15 1
 *	This software is Copyright (C) 1986-2004 by the United States Army.
d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/fb/fb-pix.c,v 11.7 2004/02/02 17:39:01 morrison Exp $ (BRL)";
@


11.6.10.2
log
@merge from head
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/fb/fb-pix.c,v 11.6.10.1 2004/02/12 19:40:45 erikg Exp $ (BRL)";
@


11.6.2.1
log
@Initial ANSIfication
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/fb/fb-pix.c,v 11.6 2002/08/20 17:07:24 jra Exp $ (BRL)";
d44 1
a44 1
extern void	cmap_crunch(register RGBpixel (*scan_buf), register int pixel_ct, ColorMap *cmap);
d51 2
a52 1
get_args(int argc, register char **argv)
d110 3
a112 1
main(int argc, char **argv)
d153 1
a153 1
				cmap_crunch( (RGBpixel *)scanline, scanpix, &cmap );
d164 1
a164 1
				cmap_crunch( (RGBpixel *)scanline, scanpix, &cmap );
@


11.6.2.2
log
@sync branch with HEAD
@
text
@d15 1
a15 1
 *	This software is Copyright (C) 1986-2004 by the United States Army.
d19 1
a19 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
@


11.5
log
@Converted from K&R to ANSI C - RFH
@
text
@d44 1
a44 1
extern void	cmap_crunch(register RGBpixel (*scan_buf), register int pixel_ct, ColorMap *cmap);
d51 2
a52 1
get_args(int argc, register char **argv)
d110 3
a112 1
main(int argc, char **argv)
d153 1
a153 1
				cmap_crunch( (RGBpixel *)scanline, scanpix, &cmap );
d164 1
a164 1
				cmap_crunch( (RGBpixel *)scanline, scanpix, &cmap );
@


11.4
log
@Misc warnings eliminated
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/fb/fb-pix.c,v 11.3 2001/04/12 17:44:07 bparker Exp $ (BRL)";
d44 1
a44 1
extern void	cmap_crunch();
d51 1
a51 2
get_args( argc, argv )
register char **argv;
d109 1
a109 3
main(argc, argv)
int argc;
char **argv;
d150 1
a150 1
				cmap_crunch( scanline, scanpix, &cmap );
d161 1
a161 1
				cmap_crunch( scanline, scanpix, &cmap );
@


11.3
log
@*- get rid of warnings
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/fb/fb-pix.c,v 11.2 2000/08/24 03:58:26 mike Exp $ (BRL)";
d25 1
@


11.2
log
@
const RCSid
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/fb/fb-pix.c,v 11.1 1995/01/04 10:09:06 mike Rel4_4 $ (BRL)";
d49 1
d108 1
@


11.1
log
@Release_4.4
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/fb/RCS/fb-pix.c,v 10.3 94/08/23 18:48:59 gdurf Exp $ (BRL)";
@


10.3
log
@Added includes, factored ifdefs
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/fb/RCS/fb-pix.c,v 10.2 1994/08/11 15:05:59 mike Exp gdurf $ (BRL)";
@


10.2
log
@Reduced use of RGBpixel
Now use (unsigned char *)
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/fb/RCS/fb-pix.c,v 10.1 91/10/12 06:46:12 mike Rel4_0 Locker: mike $ (BRL)";
d22 2
d25 2
a27 4

extern int	getopt();
extern char	*optarg;
extern int	optind;
@


10.1
log
@Release_4.0
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/fb/RCS/fb-pix.c,v 9.2 91/07/02 01:58:17 mike Exp $ (BRL)";
d29 1
a29 1
static RGBpixel	*scanline;		/* 1 scanline pixel buffer */
d123 1
a123 1
	if( (scanline = (RGBpixel *)malloc(scanbytes)) == RGBPIXEL_NULL )  {
@


9.2
log
@Changed to fb_is_linear_cmap
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/util/RCS/fb-pix.c,v 9.1 89/05/19 06:08:24 mike Rel3_5 $ (BRL)";
@


9.1
log
@Release_3.5
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: fb-pix.c,v 8.2 88/12/31 02:06:32 mike Exp $ (BRL)";
d140 1
a140 1
		} else if( is_linear_cmap( &cmap ) ) {
@


8.2
log
@Added crunch (-c) option.
Added dynamic allocation of scanline buffer
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: fb-pix.c,v 8.1 88/10/05 00:41:07 mike Locked $ (BRL)";
@


8.1
log
@Release_3.0
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: fb-pix.c,v 7.1 87/11/03 00:06:41 mike Rel $ (BRL)";
d29 4
a32 3
#define MAX_LINE	2048		/* Max pixels/line */
RGBpixel scanline[MAX_LINE];	/* 1 scanline pixel buffer */
static int scanbytes;			/* # of bytes of scanline */
d38 4
a41 3
int inverse = 0;			/* Draw upside-down */
int height;				/* input height */
int width;				/* input width */
d43 2
d46 1
a46 1
Usage: fb-pix [-h -i] [-F framebuffer]\n\
d54 1
a54 1
	while ( (c = getopt( argc, argv, "hiF:s:w:n:" )) != EOF )  {
d56 3
d61 1
a61 1
			height = width = 1024;
d71 1
a71 1
			height = width = atoi(optarg);
d74 1
a74 1
			width = atoi(optarg);
d77 1
a77 1
			height = atoi(optarg);
d114 1
a114 1
	height = width = 512;		/* Defaults */
d121 7
a127 1
	scanbytes = width * sizeof(RGBpixel);
d129 1
a129 1
	if( (fbp = fb_open( framebuffer, width, height )) == NULL )
d132 4
a135 4
	if( height > fb_getheight(fbp) )
		height = fb_getheight(fbp);
	if( width > fb_getwidth(fbp) )
		width = fb_getwidth(fbp);
d137 8
d147 4
a150 2
		for( y=0; y < height; y++ )  {
			fb_read( fbp, 0, y, scanline, width );
d158 4
a161 2
		for( y = height-1; y >= 0; y-- )  {
			fb_read( fbp, 0, y, scanline, width );
@


7.1
log
@Release 2.3
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: fb-pix.c,v 6.2 87/11/02 23:53:44 phil Exp $ (BRL)";
@


6.2
log
@crop reads to screen size if smaller than asked for
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: fb-pix.c,v 6.1 87/07/11 08:09:53 phil Locked $ (BRL)";
@


6.1
log
@Release 2.0
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: fb-pix.c,v 5.3 87/07/10 00:57:39 mike Exp $ (BRL)";
d119 5
d125 1
a125 1
		/*  Regular -- draw bottom to top */
d134 1
a134 1
		/*  Inverse -- draw top to bottom */
@


5.3
log
@Added F to getopt string.
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: fb-pix.c,v 5.2 87/06/27 00:23:02 mike Locked $ (BRL)";
@


5.2
log
@Added -F framebuffer flag
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: fb-pix.c,v 5.1 87/06/24 22:37:49 mike Locked $ (BRL)";
d50 1
a50 1
	while ( (c = getopt( argc, argv, "hics:w:n:" )) != EOF )  {
@


5.1
log
@Release 1.24
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: fb-pix.c,v 4.2 87/02/13 00:40:17 mike Exp $ (BRL)";
d33 3
a35 2
char *file_name;
FILE *outfp;
d42 2
a43 1
Usage: fb-pix [-h -i] [-s squaresize] [-w width] [-n height] [file.pix]\n";
d59 3
d116 1
a116 1
	if( (fbp = fb_open( NULL, width, height )) == NULL )
@


4.2
log
@Release 1.20 -- First Formal Release
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: fb-pix.c,v 4.1 86/12/29 03:12:30 mike Rel1 $ (BRL)";
@


4.1
log
@BRL CAD Distribution Release 1.10
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: fb-pix.c,v 1.9 86/11/14 23:17:21 phil Exp $ (BRL)";
@


1.9
log
@arg convention
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: fb-pix.c,v 1.8 86/10/30 22:30:48 phil Locked $ (BRL)";
@


1.8
log
@return 1
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: fb-pix.c,v 1.7 86/10/25 08:13:32 phil Locked $ (BRL)";
d41 1
a41 1
Usage: fb-pix [-h -i] [-s squaresize] [-W width] [-H height] [file.pix]\n";
d48 1
a48 1
	while ( (c = getopt( argc, argv, "hics:W:H:" )) != EOF )  {
d61 1
a61 1
		case 'W':
d64 1
a64 1
		case 'H':
@


1.7
log
@Converted to new RGBpixel
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: fb-pix.c,v 1.6 86/10/06 21:07:57 mike Exp $ (BRL)";
d106 1
a106 1
		return 1;
@


1.6
log
@Converted to new libfb with 1st Quadrant semantics
@
text
@d4 1
a4 2
 *  Dumb little program to take a frame buffer image and
 *  write a .pix image.
d19 1
a19 1
static char RCSid[] = "@@(#)$Header: fb-pix.c,v 1.5 86/10/03 08:18:48 mike Exp $ (BRL)";
d25 4
d30 1
a30 1
static char scanline[MAX_LINE*3];	/* 1 scanline pixel buffer */
d33 2
a34 1
Pixel outline[MAX_LINE];
d37 2
d40 2
a41 1
FBIO *fbp;
d43 4
a46 1
char usage[] = "Usage: fb-pix [-h] [-i] [width] > file.pix\n";
d48 47
d99 2
a100 3
	static int y;
	static int nlines;		/* Square:  nlines, npixels/line */
	static int fbsize;
d102 1
a102 4
	if( argc < 1 || isatty(fileno(stdout)) )  {
		fprintf(stderr,"%s", usage);
		exit(1);
	}
d104 3
a106 14
	fbsize = 512;
	nlines = 512;
	while( argc > 1 && argv[1][0] == '-' )  {
		if( strcmp( argv[1], "-h" ) == 0 )  {
			fbsize = 1024;
			nlines = 1024;
			argc--; argv++;
			continue;
		}
		if( strcmp( argv[1], "-i" ) == 0 )  {
			inverse = 1;
			argc--; argv++;
			continue;
		}
a107 6
	if( argc == 2 )
		nlines = atoi(argv[1]);
	if( argc > 2 )  {
		fprintf(stderr,"%s", usage);
		exit(1);
	}
d109 1
a109 1
	scanbytes = nlines * 3;
d111 1
a111 2
	if( (fbp = fb_open( NULL, fbsize, fbsize )) == NULL )  {
		fprintf(stderr,"fbopen failed\n");
a112 1
	}
d116 3
a118 16
		for( y=0; y < nlines; y++ )  {
			register char *in;
			register Pixel *out;
			register int i;

			fb_read( fbp, 0, y, outline, nlines );

			in = scanline;
			out = outline;
			for( i=0; i<nlines; i++ )  {
				*in++ = out->red;
				*in++ = out->green;
				*in++ = out->blue;
				out++;
			}
			if( fwrite( (char *)scanline, scanbytes, 1, stdout ) != 1 )  {
d120 1
a120 1
				exit(1);
d125 3
a127 16
		for( y = nlines-1; y >= 0; y-- )  {
			register char *in;
			register Pixel *out;
			register int i;

			fb_read( fbp, 0, y, outline, nlines );

			in = scanline;
			out = outline;
			for( i=0; i<nlines; i++ )  {
				*in++ = out->red;
				*in++ = out->green;
				*in++ = out->blue;
				out++;
			}
			if( fwrite( (char *)scanline, scanbytes, 1, stdout ) != 1 )  {
d129 1
a129 1
				exit(1);
@


1.5
log
@argc bug
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: fb-pix.c,v 1.4 86/10/03 04:51:43 mike Exp $ (BRL)";
d82 1
a82 1
		for( y = nlines-1; y >= 0; y-- )  {
d104 1
a104 1
		for( y=0; y < nlines; y++ )  {
@


1.4
log
@Modified for new libfb calling sequences.
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: fb-pix.c,v 1.3 86/08/13 04:40:57 mike Locked $ (BRL)";
d53 1
a53 1
	while( argv[1] != NULL && argv[1][0] == '-' )  {
@


1.3
log
@Cleanup for distribution
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header$ (BRL)";
d26 1
a26 1
#define MAX_LINE	1024		/* Max pixels/line */
d30 1
a30 1
struct pixel outline[MAX_LINE];
d34 2
d53 1
a53 1
	while( argv[1][0] == '-' )  {
a71 2
	if( nlines > 512 )
		fbsetsize(fbsize);
d75 1
a75 1
	if( fbopen( NULL, APPEND ) < 0 )  {
d84 1
a84 1
			register struct pixel *out;
d87 1
a87 1
			fbread( 0, y, outline, nlines );
d97 2
a98 2
			if( write( 1, (char *)scanline, scanbytes ) != scanbytes )  {
				perror("write");
d106 1
a106 1
			register struct pixel *out;
d109 1
a109 1
			fbread( 0, y, outline, nlines );
d119 2
a120 2
			if( write( 1, (char *)scanline, scanbytes ) != scanbytes )  {
				perror("write");
d125 1
@


1.2
log
@Added -i flag to invert top-to-bottom.
@
text
@d2 1
a2 1
 *  			P I X - F B . C
d7 11
a17 3
 *  Mike Muuss, BRL.
 *
 *  $Revision: 1.1 $
d19 4
d24 1
a25 2
#include "/vld/include/fb.h"

d34 1
a34 1
char usage[] = "Usage: fb-pix [-h] [-i] file.pix [width]\n";
a40 1
	static int diskfd;
d44 1
a44 1
	if( argc < 2 )  {
d51 12
a62 4
	if( strcmp( argv[1], "-h" ) == 0 )  {
		fbsize = 1024;
		nlines = 1024;
		argc--; argv++;
d64 5
a68 3
	if( strcmp( argv[1], "-i" ) == 0 )  {
		inverse = 1;
		argc--; argv++;
a69 6
	if( (diskfd = creat( argv[1], 0444 )) < 0 )  {
		perror( argv[1] );
		exit(3);
	}
	if( argc >= 3 )
		nlines = atoi(argv[2] );
d97 1
a97 1
			if( write( diskfd, (char *)scanline, scanbytes ) != scanbytes )  {
d119 1
a119 1
			if( write( diskfd, (char *)scanline, scanbytes ) != scanbytes )  {
@


1.1
log
@Initial revision
@
text
@d21 1
a21 1
char usage[] = "Usage: fb-pix [-h] file.pix [width]\n";
d23 2
d46 4
d66 2
a67 1
	{
d69 22
@
