head	11.10;
access;
symbols
	ansi-20040405-merged:11.6.2.2
	postmerge-20040405-ansi:11.8
	premerge-20040404-ansi:11.7
	postmerge-autoconf:11.7
	autoconf-freeze:11.6.10.2
	premerge-autoconf:11.7
	ansi-20040316-freeze:11.6.2.1
	postmerge-20040315-windows:11.7
	premerge-20040315-windows:11.7
	windows-20040315-freeze:11.6.4.1
	autoconf-20031203:11.6
	autoconf-20031202:11.6
	autoconf-branch:11.6.0.10
	phong-branch:11.6.0.8
	photonmap-branch:11.6.0.6
	rel-6-1-DP:11.6
	windows-branch:11.6.0.4
	rel-6-0-2:11.4
	ansi-branch:11.6.0.2
	rel-6-0-1-branch:11.4.0.2
	hartley-6-0-post:11.5
	hartley-6-0-pre:11.4
	rel-6-0-1:11.4
	rel-6-0:11.4
	rel-5-4:11.2
	offsite-5-3-pre:11.3
	rel-5-3:11.2
	rel-5-2:11.2
	rel-5-1-branch:11.2.0.2
	rel-5-1:11.2
	rel-5-0:11.2
	rel-5-0-beta:11.2
	rel-4-5:11.2
	ctj-4-5-post:11.2
	ctj-4-5-pre:11.2
	rel-4-4:11.1
	rel-4-0:10.1
	rel-3-5:9.1
	rel-3-0:8.1
	rel-2-3:7.1
	rel-2-0:5.1
	rel-1-24:5.1
	rel-1-20:4.2
	rel-1-10:4.1;
locks; strict;
comment	@ * @;


11.10
date	2004.05.24.04.13.26;	author morrison;	state dead;
branches;
next	11.9;

11.9
date	2004.05.10.15.30.42;	author erikg;	state Exp;
branches;
next	11.8;

11.8
date	2004.04.05.07.49.23;	author morrison;	state Exp;
branches;
next	11.7;

11.7
date	2004.02.02.17.39.01;	author morrison;	state Exp;
branches;
next	11.6;

11.6
date	2002.08.20.17.07.24;	author jra;	state Exp;
branches
	11.6.2.1
	11.6.4.1
	11.6.10.1;
next	11.5;

11.5
date	2002.08.15.20.54.37;	author hartley;	state Exp;
branches;
next	11.4;

11.4
date	2001.04.12.17.44.07;	author bparker;	state Exp;
branches;
next	11.3;

11.3
date	2000.08.24.03.58.29;	author mike;	state Exp;
branches;
next	11.2;

11.2
date	96.07.16.22.05.28;	author jra;	state Exp;
branches;
next	11.1;

11.1
date	95.01.04.10.09.16;	author mike;	state Rel4_4;
branches;
next	10.3;

10.3
date	94.08.11.19.21.13;	author gdurf;	state Exp;
branches;
next	10.2;

10.2
date	94.08.11.15.06.03;	author mike;	state Exp;
branches;
next	10.1;

10.1
date	91.10.12.06.46.22;	author mike;	state Rel4_0;
branches;
next	9.5;

9.5
date	91.08.29.23.16.59;	author mike;	state Exp;
branches;
next	9.4;

9.4
date	91.07.12.17.38.36;	author butler;	state Exp;
branches;
next	9.3;

9.3
date	90.12.08.06.18.39;	author mike;	state Exp;
branches;
next	9.2;

9.2
date	90.12.07.01.31.09;	author mike;	state Exp;
branches;
next	9.1;

9.1
date	89.05.19.06.08.45;	author mike;	state Rel3_5;
branches;
next	8.2;

8.2
date	89.04.24.05.00.40;	author mike;	state Exp;
branches;
next	8.1;

8.1
date	88.10.05.00.41.30;	author mike;	state Rel3_0;
branches;
next	7.2;

7.2
date	88.05.16.00.06.34;	author mike;	state Exp;
branches;
next	7.1;

7.1
date	87.11.03.00.07.13;	author mike;	state Rel;
branches;
next	6.1;

6.1
date	87.07.11.08.10.22;	author mike;	state Rel;
branches;
next	5.1;

5.1
date	87.06.24.22.38.24;	author mike;	state Rel;
branches;
next	4.2;

4.2
date	87.02.13.00.41.24;	author mike;	state Exp;
branches;
next	4.1;

4.1
date	86.12.29.03.12.51;	author mike;	state Rel1;
branches;
next	1.1;

1.1
date	86.10.29.03.09.31;	author mike;	state Exp;
branches;
next	;

11.6.2.1
date	2002.09.19.18.00.40;	author morrison;	state Exp;
branches;
next	11.6.2.2;

11.6.2.2
date	2004.03.17.21.16.07;	author morrison;	state Exp;
branches;
next	;

11.6.4.1
date	2004.03.11.23.40.41;	author morrison;	state Exp;
branches;
next	;

11.6.10.1
date	2004.02.12.19.40.45;	author erikg;	state Exp;
branches;
next	11.6.10.2;

11.6.10.2
date	2004.03.15.13.28.06;	author erikg;	state Exp;
branches;
next	;


desc
@Allow user to select a color
@


11.10
log
@moved to src/fb/
@
text
@/*
 *			F B C O L O R . C
 *
 * Function -
 *	Dynamicly show the desired color as the background,
 *	and in bargraph form, using the color map.
 *
 *  Author -
 *	Michael John Muuss
 *  
 *  Source -
 *	SECAD/VLD Computing Consortium, Bldg 394
 *	The U. S. Army Ballistic Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5066
 *  
 *  Copyright Notice -
 *	This software is Copyright (C) 1986-2004 by the United States Army.
 *	All rights reserved.
 */
#ifndef lint
static const char RCSid[] = "@@(#)$Header: /n/xoff/cvs/brlcad/fb/fbcolor.c,v 11.9 2004/05/10 15:30:42 erikg Exp $ (BRL)";
#endif

#ifdef HAVE_CONFIG_H
# include "config.h"
#endif



#include <stdio.h>	
#ifdef USE_STRING_H
#include <string.h>
#else
#include <strings.h>
#endif
#include "machine.h"
#include "externs.h"
#include "fb.h"
#include "libtermio.h"

int curchan = 0;	/* 0=r, 1=g, 2=b */

int col[6] = {128,128,128};		/* r,g,b h,s,v */

unsigned char buf[3*2048];
ColorMap old_map;
ColorMap cm;

static char	*framebuffer = NULL;
static FBIO	*fbp;
static int	scr_height;
static int	scr_width;

void	new_rgb(void), rgbhsv(register int *rgb, register int *hsv), hsvrgb(register int *hsv, register int *rgb);
int	pars_Argv(int argc, register char **argv);
int	doKeyPad(void);

static char usage[] = "\
Usage: fbcolor [-h] [-F framebuffer]\n\
	[-s squarescrsize] [-w scr_width] [-n scr_height]\n\
	[-S squarescrsize] [-W scr_width] [-N scr_height]\n";

int
main(int argc, char **argv)
{
	register int i;

	if( ! pars_Argv( argc, argv ) )  {
		(void)fputs(usage, stderr);
		return	1;
	}
	if( (fbp = fb_open( framebuffer, scr_width, scr_height )) == FBIO_NULL )  {
		fprintf(stderr,"fbcolor:  fb_open(%s) failure\n", framebuffer);
		return	1;
	}

	/* Get the actual screen size we were given */
	scr_width = fb_getwidth(fbp);
	scr_height = fb_getheight(fbp);

	fb_rmap( fbp, &old_map );
	fb_clear( fbp, RGBPIXEL_NULL );

	rgbhsv( col, &col[3] );

	/* Note that color 0,0,0 is special;  use 1,1,1 for black */
	/* Red */
	for( i=0; i<255; i++)  {
		buf[3*i+RED] = i;
		buf[3*i+GRN] = 1;
		buf[3*i+BLU] = 1;
	}
	for( i=0; i<99; i++ )
		fb_write( fbp, 0, i, buf, 256 );

	/* Green */
	bzero( (char *)buf, sizeof(buf) );
	for( i=0; i<255; i++) {
		buf[3*i+RED] = 1;
		buf[3*i+GRN] = i;
		buf[3*i+BLU] = 1;
	}
	for( i=100; i<199; i++ )
		fb_write( fbp, 0, i, buf, 256 );

	/* Blue */
	bzero( (char *)buf, sizeof(buf) );
	for( i=0; i<255; i++)  {
		buf[3*i+RED] = 1;
		buf[3*i+GRN] = 1;
		buf[3*i+BLU] = i;
	}
	for( i=200; i<299; i++ )
		fb_write( fbp, 0, i, buf, 256 );

	/* Set RAW mode */
	save_Tty( 0 );
	set_Raw( 0 );
	clr_Echo( 0 );

	do  {
		/* Build color map for current value */
		bzero( (char *)&cm, sizeof(cm) );
		for( i=0; i<col[RED]; i++ )
			cm.cm_red[i] = 0xFFFF;
		for( ; i<255; i++ )
			cm.cm_red[i] = 0;

		for( i=0; i<col[GRN]; i++ )
			cm.cm_green[i] = 0xFFFF;
		for( ; i<255; i++ )
			cm.cm_green[i] = 0;

		for( i=0; i<col[BLU]; i++ )
			cm.cm_blue[i] = 0xFFFF;
		for( ; i<255; i++ )
			cm.cm_blue[i] = 0;

		/* 0,0,0 is color chosen */
		cm.cm_red[0] = col[RED]<<8;
		cm.cm_green[0] = col[GRN]<<8;
		cm.cm_blue[0] = col[BLU]<<8;

		/* 1,1,1 is for black */
		cm.cm_red[1] = 0;
		cm.cm_green[1] = 0;
		cm.cm_blue[1] = 0;

		fb_wmap( fbp, &cm );

		(void) fprintf( stdout,
				"%c rgb=%3d,%3d,%3d hsv=%3d,%3d,%3d   \r",
				"RGBHSIx"[curchan],
				col[0], col[1], col[2],
				col[3], col[4], col[5]	);
		(void) fflush( stdout );
	} while( doKeyPad() );

	fb_wmap( fbp, &old_map );
	reset_Tty( 0 );
	(void) fprintf( stdout,  "\n");	/* Move off of the output line.	*/
	return	0;
}

char help[] = "\r\n\
+ .	increase by 1\r\n\
- ,	decrease by 1\r\n\
>	increase by 16\r\n\
<	decrease by 16\r\n\
r	select red\r\n\
g	select green\r\n\
b	select blue\r\n\
h	select hue\r\n\
s	select saturation\r\n\
i v	select intensity value\r\n\
q	quit\r\n\
\\n	Exit\r\n";

int
doKeyPad(void)
{ 
	register int ch;	

	if( (ch = getchar()) == EOF )
		return	0;		/* done */

	switch( ch )  {
	default :
		(void) fprintf( stdout,
				"\r\n'%c' bad -- Type ? for help\r\n",
				ch
				);
		break;
	case '?' :
		(void) fprintf( stdout, "\r\n%s", help );
		break;
	case '\r' :    
	case '\n' :				/* Done, return to normal */
	case 'q' :
		return	0;
	case 'Q' :				/* Done, leave "as is" */
		return	0;

	case 'r':
		curchan = 0;
		break;
	case 'g':
		curchan = 1;
		break;
	case 'b':
		curchan = 2;
		break;
	case 'h':
		curchan = 3;
		break;
	case 's':
		curchan = 4;
		break;
	case 'v':
	case 'i':
		curchan = 5;
		break;
	case '/':
		if( ++curchan >= 6 )  curchan = 0;
		break;

	/* unit changes with -+ or ,. */
	case '+':
	case '.':
		col[curchan]++;
		new_rgb();
		break;
	case '-':
	case ',':
		col[curchan]--;
		new_rgb();
		break;

	/* big changes with <> */
	case '>':
		col[curchan]+=16;
		new_rgb();
		break;
	case '<':
		col[curchan]-=16;
		new_rgb();
		break;
	}
	return	1;		/* keep going */
}

void
new_rgb(void) {
	/* Wrap values to stay in range 0..255 */
	if( col[curchan] < 0 ) col[curchan] = 255;
	if( col[curchan] > 255 ) col[curchan] = 0;
	/* recompute either rgb or hsv from the other */
	if( curchan < 3 )
		rgbhsv( col, &col[3] );
	else
		hsvrgb( &col[3], col );
}

/*	p a r s _ A r g v ( )
 */
int
pars_Argv(int argc, register char **argv)
{
	register int	c;
	while( (c = getopt( argc, argv, "F:s:S:w:W:n:N:h" )) != EOF )  {
		switch( c )  {
		case 'F':
			framebuffer = optarg;
			break;
		case 'h' : /* High resolution frame buffer.	*/
			scr_height = scr_width = 1024;
			break;
		case 's':
		case 'S':
			scr_height = scr_width = atoi(optarg);
			break;
		case 'w':
		case 'W':
			scr_width = atoi(optarg);
			break;
		case 'n':
		case 'N':
			scr_height = atoi(optarg);
			break;
		case '?' :
			return	0;
		}
	}
	return	1;
}

/* rgbhsv
 * 
 * convert red green blue to hue saturation value
 */
void
rgbhsv(register int *rgb, register int *hsv)
{
        int	s, v;
        int	r, g, b;
        int	x;
	static int h;
        double dif = 0;

        r = rgb[0];
        g = rgb[1];
        b = rgb[2];
        v = ((r > g) ? r : g);
        v = ((v > b) ? v : b);
        x = ((r < g) ? r : g);
        x = ((x < b) ? x : b);
	if (v != x)  {
            dif = (double) (v - x);
            if (r != v)  {
                if (g == v)  {
                    if (b != x)
                        h = (int) (42.5 * (3. - (double)(v-b) / dif));
                    else
                        h = (int) (42.5 * (1. + (double)(v-r) / dif));
                } else {
                    if (r != x)
                        h = (int) (42.5 * (5. - (double)(v-r) / dif));
                    else
                        h = (int) (42.5 * (3. + (double)(v-g) / dif));
                }
            } else {
                if (g != x)
                    h = (int) (42.5 * (1. - (double)(v-g) / dif));
                else
                    h = (int) (42.5 * (5. + (double)(v-b) / dif));
            }
	}

	if (v != 0)
            s = (int)(255. * dif / (double)v);
        else
            s = 0;

        hsv[0] = h;
        hsv[1] = s;
        hsv[2] = v;
}

/* hsvrgb
 * 
 * convert hue saturation and value to red, green, blue
 */

double modf(double, double *);

void
hsvrgb(register int *hsv, register int *rgb)
{
  	int r, g, b, m, n, k;
        double h, s, v, foo;
        double f;

	if(hsv[1] != 0) 
        {
            s = (double)hsv[1] / 255.;
            h = (double)hsv[0] / 42.666;
            f = modf(h, &(foo));
            v = (double)hsv[2];
            m = (int) (v * (1. - s) + .5);
            n = (int) (v * (1. - s*f) + .5);
            k = (int) (v * (1. - (s * (1.-f))) + .5);
            switch((int) h)
            {
            case 0:
                r = hsv[2];
                g = k;
                b = m;
                break;
            case 1:
                r = n;
                g = hsv[2];
                b = m;
                break;
            case 2:
                r = m;
                g = hsv[2];
                b = k;
                break;
            case 3:
                r = m;
                g = n;
                b = hsv[2];
                break;
            case 4:
                r = k;
                g = m;
                b = hsv[2];
                break;
            default:
            case 5:
                r = hsv[2];
                g = m;
                b = n;
                break;
            }
        }
        else
            r = g = b = hsv[2];

        rgb[0] = r;
        rgb[1] = g;
        rgb[2] = b;
}
@


11.9
log
@change conf.h to a wrapped config.h
@
text
@d21 1
a21 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/fb/fbcolor.c,v 11.8 2004/04/05 07:49:23 morrison Exp $ (BRL)";
@


11.8
log
@merge of ansi-6-0-branch into HEAD
@
text
@d21 1
a21 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
d24 5
a28 1
#include "conf.h"
@


11.7
log
@update copyright to include span through 2003
@
text
@d21 1
a21 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/fb/fbcolor.c,v 11.6 2002/08/20 17:07:24 jra Exp $ (BRL)";
d50 3
a52 3
void	new_rgb(), rgbhsv(), hsvrgb();
int	pars_Argv();
int	doKeyPad();
d60 1
a60 2
main(argc, argv )
char **argv;
d176 1
a176 1
doKeyPad()
d249 1
a249 1
new_rgb()  {
d263 1
a263 2
pars_Argv( argc, argv )
register char	**argv;
d298 1
a298 3
rgbhsv(rgb, hsv)
register int *rgb;
register int *hsv;
d350 1
a350 1
double modf();
d353 1
a353 3
hsvrgb(hsv, rgb)
register int *hsv;
register int *rgb;
d355 2
a356 2
        int r, g, b, m, n, k, foo;
        double h, s, v;
d363 1
a363 1
            f = modf(h, &foo);
@


11.6
log
@Restoration of entire source tree to Pre-Hartley state
@
text
@d17 1
a17 1
 *	This software is Copyright (C) 1986 by the United States Army.
d21 1
a21 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/fb/fbcolor.c,v 11.4 2001/04/12 17:44:07 bparker Exp $ (BRL)";
@


11.6.4.1
log
@sync to HEAD...
@
text
@d17 1
a17 1
 *	This software is Copyright (C) 1986-2004 by the United States Army.
d21 1
a21 1
static const char RCSid[] = "@@(#)$Header: /n/cad/c/CVS/brlcad/fb/fbcolor.c,v 11.7 2004/02/02 17:39:01 morrison Exp $ (BRL)";
@


11.6.10.1
log
@merge from HEAD
@
text
@d17 1
a17 1
 *	This software is Copyright (C) 1986-2004 by the United States Army.
d21 1
a21 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/fb/fbcolor.c,v 11.7 2004/02/02 17:39:01 morrison Exp $ (BRL)";
@


11.6.10.2
log
@merge from head
@
text
@d21 1
a21 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/fb/fbcolor.c,v 11.6.10.1 2004/02/12 19:40:45 erikg Exp $ (BRL)";
@


11.6.2.1
log
@Initial ANSIfication
@
text
@d21 1
a21 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/fb/fbcolor.c,v 11.6 2002/08/20 17:07:24 jra Exp $ (BRL)";
d50 3
a52 3
void	new_rgb(void), rgbhsv(register int *rgb, register int *hsv), hsvrgb(register int *hsv, register int *rgb);
int	pars_Argv(int argc, register char **argv);
int	doKeyPad(void);
d60 2
a61 1
main(int argc, char **argv)
d177 1
a177 1
doKeyPad(void)
d250 1
a250 1
new_rgb(void) {
d264 2
a265 1
pars_Argv(int argc, register char **argv)
d300 3
a302 1
rgbhsv(register int *rgb, register int *hsv)
d354 1
a354 1
double modf(double, double *);
d357 3
a359 1
hsvrgb(register int *hsv, register int *rgb)
d361 2
a362 2
  	int r, g, b, m, n, k;
        double h, s, v, foo;
d369 1
a369 1
            f = modf(h, &(foo));
@


11.6.2.2
log
@sync branch with HEAD
@
text
@d17 1
a17 1
 *	This software is Copyright (C) 1986-2004 by the United States Army.
d21 1
a21 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
@


11.5
log
@Converted from K&R to ANSI C - RFH
@
text
@d50 3
a52 3
void	new_rgb(void), rgbhsv(register int *rgb, register int *hsv), hsvrgb(register int *hsv, register int *rgb);
int	pars_Argv(int argc, register char **argv);
int	doKeyPad(void);
d60 2
a61 1
main(int argc, char **argv)
d177 1
a177 1
doKeyPad(void)
d250 1
a250 1
new_rgb(void) {
d264 2
a265 1
pars_Argv(int argc, register char **argv)
d300 3
a302 1
rgbhsv(register int *rgb, register int *hsv)
d354 1
a354 1
double modf(double, double *);
d357 3
a359 1
hsvrgb(register int *hsv, register int *rgb)
d361 2
a362 2
  	int r, g, b, m, n, k;
        double h, s, v, foo;
d369 1
a369 1
            f = modf(h, &(foo));
@


11.4
log
@*- get rid of warnings
@
text
@d21 1
a21 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/fb/fbcolor.c,v 11.3 2000/08/24 03:58:29 mike Exp $ (BRL)";
d50 3
a52 3
void	new_rgb(), rgbhsv(), hsvrgb();
int	pars_Argv();
int	doKeyPad();
d60 1
a60 2
main(argc, argv )
char **argv;
d176 1
a176 1
doKeyPad()
d249 1
a249 1
new_rgb()  {
d263 1
a263 2
pars_Argv( argc, argv )
register char	**argv;
d298 1
a298 3
rgbhsv(rgb, hsv)
register int *rgb;
register int *hsv;
d350 1
a350 1
double modf();
d353 1
a353 3
hsvrgb(hsv, rgb)
register int *hsv;
register int *rgb;
d355 2
a356 2
        int r, g, b, m, n, k, foo;
        double h, s, v;
d363 1
a363 1
            f = modf(h, &foo);
@


11.3
log
@
const RCSid
@
text
@d21 1
a21 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/fb/fbcolor.c,v 11.2 1996/07/16 22:05:28 jra Exp $ (BRL)";
d27 5
d35 1
d51 2
d59 1
d176 1
@


11.2
log
@Minor Mods for IRIX 6.2
@
text
@d21 1
a21 1
static char RCSid[] = "@@(#)$Header: /m/cad/fb/RCS/fbcolor.c,v 11.1 1995/01/04 10:09:16 mike Rel4_4 jra $ (BRL)";
@


11.1
log
@Release_4.4
@
text
@d21 1
a21 1
static char RCSid[] = "@@(#)$Header: /m/cad/fb/RCS/fbcolor.c,v 10.3 94/08/11 19:21:13 gdurf Exp $ (BRL)";
d169 1
a169 1
	register ch;	
@


10.3
log
@Added include of conf.h
@
text
@d21 1
a21 1
static char RCSid[] = "@@(#)$Header: /m/cad/fb/RCS/fbcolor.c,v 10.2 1994/08/11 15:06:03 mike Exp gdurf $ (BRL)";
@


10.2
log
@Reduced use of RGBpixel
Now use (unsigned char *)
@
text
@d21 1
a21 1
static char RCSid[] = "@@(#)$Header: /m/cad/fb/RCS/fbcolor.c,v 10.1 91/10/12 06:46:22 mike Rel4_0 Locker: mike $ (BRL)";
d23 2
@


10.1
log
@Release_4.0
@
text
@d21 1
a21 1
static char RCSid[] = "@@(#)$Header: /m/cad/fb/RCS/fbcolor.c,v 9.5 91/08/29 23:16:59 mike Exp $ (BRL)";
d26 1
a28 4
extern int	getopt();
extern char	*optarg;
extern int	optind;

d33 1
a33 1
RGBpixel buf[512];
d75 3
a77 3
		buf[i][RED] = i;
		buf[i][GRN] = 1;
		buf[i][BLU] = 1;
d85 3
a87 3
		buf[i][RED] = 1;
		buf[i][GRN] = i;
		buf[i][BLU] = 1;
d95 3
a97 3
		buf[i][RED] = 1;
		buf[i][GRN] = 1;
		buf[i][BLU] = i;
@


9.5
log
@Eliminated non-ANSI macro definition, which was not being used anyway.
@
text
@d21 1
a21 1
static char RCSid[] = "@@(#)$Header: /m/cad/fb/RCS/fbcolor.c,v 9.4 91/07/12 17:38:36 butler Exp $ (BRL)";
@


9.4
log
@added option string to fbcolor call to getopt so that options will be
processed & used.
@
text
@d21 1
a21 1
static char RCSid[] = "@@(#)$Header: /m/cad/fb/RCS/fbcolor.c,v 9.3 90/12/08 06:18:39 mike Exp $ (BRL)";
a166 2

#define ctl(x)	('x'&037)
@


9.3
log
@lint
@
text
@d21 1
a21 1
static char RCSid[] = "@@(#)$Header: /m/cad/util/RCS/fbcolor.c,v 9.2 90/12/07 01:31:09 mike Exp $ (BRL)";
d261 1
a261 1
	while( (c = getopt( argc, argv, "h" )) != EOF )  {
@


9.2
log
@lint
@
text
@d21 1
a21 1
static char RCSid[] = "@@(#)$Header: /m/cad/util/RCS/fbcolor.c,v 9.1 89/05/19 06:08:45 mike Rel3_5 $ (BRL)";
d394 1
@


9.1
log
@Release_3.5
@
text
@d21 1
a21 1
static char RCSid[] = "@@(#)$Header: fbcolor.c,v 8.2 89/04/24 05:00:40 mike Exp $ (BRL)";
d297 3
a299 1
        int s, v, r, g, b, x;
d301 1
a301 1
        double dif;
d310 1
a310 2
	if (v != x)
        {
d312 2
a313 2
            if (r != v)
                if (g == v)
d318 1
a318 1
                else
d323 2
a324 1
            else
d329 1
@


8.2
log
@Eliminated use of global variable "size", which conflicts on the XMP.
@
text
@d21 1
a21 1
static char RCSid[] = "@@(#)$Header: fbcolor.c,v 8.1 88/10/05 00:41:30 mike Locked $ (BRL)";
@


8.1
log
@Release_3.0
@
text
@d2 1
a2 1
 *			F B C O L . C
d6 1
a6 1
 *	and in bargraph form.
d21 1
a21 1
static char RCSid[] = "@@(#)$Header: fbcolor.c,v 7.2 88/05/16 00:06:34 mike Exp $ (BRL)";
d25 1
d28 3
a30 3
#ifdef SYSV
#define bzero(p,cnt)	memset(p,'\0',cnt);
#endif
d40 4
a43 2
FBIO *fbp;
int size = 512;
d47 5
d58 1
a58 1
		(void) fprintf( stderr, "Usage : fbcolor [-h]\n" );
d61 2
a62 2
	if( (fbp = fb_open( NULL, size, size )) == FBIO_NULL )  {
		fprintf(stderr,"fbcolor:  fb_open failure\n");
d65 5
d259 1
a259 1
	{
d261 22
a282 10
	while( (c = getopt( argc, argv, "h" )) != EOF )
		{
		switch( c )
			{
			case 'h' : /* High resolution frame buffer.	*/
				size = 1024;
				break;
			case '?' :
				return	0;
			}
d284 1
@


7.2
log
@lint fixes
@
text
@d21 1
a21 1
static char RCSid[] = "@@(#)$Header: fbcolor.c,v 7.1 87/11/03 00:07:13 mike Locked $ (BRL)";
@


7.1
log
@Release 2.3
@
text
@d21 1
a21 1
static char RCSid[] = "@@(#)$Header: fbcolor.c,v 6.1 87/07/11 08:10:22 mike Rel $ (BRL)";
d42 2
d229 1
d266 1
d320 1
@


6.1
log
@Release 2.0
@
text
@d21 1
a21 1
static char RCSid[] = "@@(#)$Header: fbcolor.c,v 5.1 87/06/24 22:38:24 mike Rel $ (BRL)";
@


5.1
log
@Release 1.24
@
text
@d21 1
a21 1
static char RCSid[] = "@@(#)$Header: fbcolor.c,v 4.2 87/02/13 00:41:24 mike Exp $ (BRL)";
@


4.2
log
@Release 1.20 -- First Formal Release
@
text
@d21 1
a21 1
static char RCSid[] = "@@(#)$Header: fbcolor.c,v 4.1 86/12/29 03:12:51 mike Rel1 $ (BRL)";
@


4.1
log
@BRL CAD Distribution Release 1.10
@
text
@d21 1
a21 1
static char RCSid[] = "@@(#)$Header: fbcolor.c,v 1.1 86/10/29 03:09:31 mike Exp $ (BRL)";
@


1.1
log
@Initial revision
@
text
@d21 1
a21 1
static char RCSid[] = "@@(#)$Header$ (BRL)";
@
