head	11.15;
access;
symbols
	ansi-20040405-merged:11.10.2.2
	postmerge-20040405-ansi:11.13
	premerge-20040404-ansi:11.12
	postmerge-autoconf:11.12
	autoconf-freeze:11.11.6.2
	premerge-autoconf:11.12
	ansi-20040316-freeze:11.10.2.1
	postmerge-20040315-windows:11.12
	premerge-20040315-windows:11.12
	windows-20040315-freeze:11.10.4.1
	autoconf-20031203:11.11
	autoconf-20031202:11.11
	autoconf-branch:11.11.0.6
	phong-branch:11.11.0.4
	photonmap-branch:11.11.0.2
	rel-6-1-DP:11.10
	windows-branch:11.10.0.4
	rel-6-0-2:11.8
	ansi-branch:11.10.0.2
	rel-6-0-1-branch:11.8.0.2
	hartley-6-0-post:11.9
	hartley-6-0-pre:11.8
	rel-6-0-1:11.8
	rel-6-0:11.8
	rel-5-4:11.5
	offsite-5-3-pre:11.7
	rel-5-3:11.5
	rel-5-2:11.5
	rel-5-1-branch:11.5.0.2
	rel-5-1:11.5
	rel-5-0:11.5
	rel-5-0-beta:11.5;
locks; strict;
comment	@ * @;


11.15
date	2004.05.24.04.13.25;	author morrison;	state dead;
branches;
next	11.14;

11.14
date	2004.05.10.15.30.42;	author erikg;	state Exp;
branches;
next	11.13;

11.13
date	2004.04.05.07.49.23;	author morrison;	state Exp;
branches;
next	11.12;

11.12
date	2004.02.02.17.39.01;	author morrison;	state Exp;
branches;
next	11.11;

11.11
date	2002.12.26.15.13.36;	author jra;	state Exp;
branches
	11.11.6.1;
next	11.10;

11.10
date	2002.08.20.17.07.24;	author jra;	state Exp;
branches
	11.10.2.1
	11.10.4.1;
next	11.9;

11.9
date	2002.08.15.20.54.37;	author hartley;	state Exp;
branches;
next	11.8;

11.8
date	2001.10.12.18.37.41;	author butler;	state Exp;
branches;
next	11.7;

11.7
date	2000.08.24.22.54.43;	author mike;	state Exp;
branches;
next	11.6;

11.6
date	2000.08.24.03.58.26;	author mike;	state Exp;
branches;
next	11.5;

11.5
date	98.08.28.21.15.00;	author mike;	state Exp;
branches;
next	11.4;

11.4
date	98.08.24.23.41.33;	author mike;	state Exp;
branches;
next	11.3;

11.3
date	98.08.24.23.06.24;	author mike;	state Exp;
branches;
next	11.2;

11.2
date	98.08.24.23.02.43;	author mike;	state Exp;
branches;
next	11.1;

11.1
date	98.06.30.14.00.31;	author jra;	state Exp;
branches;
next	;

11.10.2.1
date	2002.09.19.18.00.39;	author morrison;	state Exp;
branches;
next	11.10.2.2;

11.10.2.2
date	2004.03.17.21.16.06;	author morrison;	state Exp;
branches;
next	;

11.10.4.1
date	2004.03.11.23.40.40;	author morrison;	state Exp;
branches;
next	;

11.11.6.1
date	2004.02.12.19.40.45;	author erikg;	state Exp;
branches;
next	11.11.6.2;

11.11.6.2
date	2004.03.15.13.28.05;	author erikg;	state Exp;
branches;
next	;


desc
@@


11.15
log
@moved to src/fb/
@
text
@/*
 *  			F B - P N G . C
 *  
 *  Program to take a frame buffer image and write a PNG (Portable Network Graphics) format file.
 *  
 *  Authors -
 *	John R. Anderson
 *	Michael John Muuss
 *  
 *  Source -
 *	The U. S. Army Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5068  USA
 *  
 *  Distribution Notice -
 *      Re-distribution of this software is restricted, as described in
 *      your "Statement of Terms and Conditions for the Release of
 *      The BRL-CAD Package" agreement.
 *
 *  Copyright Notice -
 *      This software is Copyright (C) 1998-2004 by the United States Army
 *      in all countries except the USA.  All rights reserved.
 */

#ifndef lint
static const char RCSid[] = "@@(#)$Header: /n/xoff/cvs/brlcad/fb/fb-png.c,v 11.14 2004/05/10 15:30:42 erikg Exp $ (BRL)";
#endif

#ifdef HAVE_CONFIG_H
# include "config.h"
#endif



#include <stdio.h>
#include <sys/stat.h>
#include "png.h"
#include "machine.h"
#include "externs.h"			/* For getopt() */
#include "bu.h"
#include "fb.h"

static unsigned char	*scanline;	/* scanline pixel buffers */
static int	scanbytes;		/* # of bytes of scanline */
static int	scanpix;		/* # of pixels of scanline */
static ColorMap	cmap;			/* libfb color map */

char	*framebuffer = NULL;
char	*file_name;
FILE	*outfp;

static int	crunch = 0;		/* Color map crunch? */
static int	inverse = 0;		/* Draw upside-down */
static int	pixbytes = 3;		/* Default is 3 bytes/pixel */
int	screen_height;			/* input height */
int	screen_width;			/* input width */

double	out_gamma = 1.0;		/* Gamma the image was created at */

extern void	cmap_crunch(register RGBpixel (*scan_buf), register int pixel_ct, ColorMap *cmap);

char usage[] = "\
Usage: fb-png [-h -i -c] [-# nbytes/pixel] [-F framebuffer] [-g gamma]\n\
	[-s squaresize] [-w width] [-n height] [file.png]\n";

int
get_args(int argc, register char **argv)
{
	register int c;

	while ( (c = getopt( argc, argv, "chiF:s:w:n:g:#:" )) != EOF )  {
		switch( c )  {
		case 'c':
			crunch = 1;
			break;
		case 'h':
			/* high-res */
			screen_height = screen_width = 1024;
			break;
		case 'i':
			inverse = 1;
			break;
		case 'F':
			framebuffer = optarg;
			break;
		case 's':
			/* square size */
			screen_height = screen_width = atoi(optarg);
			break;
		case 'w':
			screen_width = atoi(optarg);
			break;
		case 'n':
			screen_height = atoi(optarg);
			break;
		case 'g':
			out_gamma = atof(optarg);
			break;
		case '#':
			pixbytes = atoi(optarg);
			if( pixbytes != 1 && pixbytes != 3 )
				bu_bomb("fb-png: Only able to handle 1 and 3 byte pixels\n");
			break;

		default:		/* '?' */
			return(0);
		}
	}

	if( optind >= argc )  {
		if( isatty(fileno(stdout)) )
			return(0);
		file_name = "-";
		outfp = stdout;
	} else {
		file_name = argv[optind];
		if( (outfp = fopen(file_name, "w")) == NULL )  {
			(void)fprintf( stderr,
				"fb-png: cannot open \"%s\" for writing\n",
				file_name );
			return(0);
		}
		(void)chmod(file_name, 0444);
	}

	if ( argc > ++optind )
		(void)fprintf( stderr, "fb-png: excess argument(s) ignored\n" );

	return(1);		/* OK */
}

int
main(int argc, char **argv)
{
	register FBIO *fbp;
	register int y;
	int got;
	png_structp png_p;
	png_infop info_p;

	screen_height = screen_width = 512;		/* Defaults */

	if ( !get_args( argc, argv ) )  {
		(void)fputs(usage, stderr);
		exit( 1 );
	}

	png_p = png_create_write_struct( PNG_LIBPNG_VER_STRING, NULL, NULL, NULL );
	if( !png_p )
		bu_bomb( "Could not create PNG write structure\n" );

	info_p = png_create_info_struct( png_p );
	if( !info_p )
		bu_bomb( "Could not create PNG info structure\n" );

	if( (fbp = fb_open( framebuffer, screen_width, screen_height )) == NULL )
		exit(12);

	/* If actual screen is smaller than requested size, trim down */
	if( screen_height > fb_getheight(fbp) )
		screen_height = fb_getheight(fbp);
	if( screen_width > fb_getwidth(fbp) )
		screen_width = fb_getwidth(fbp);

	scanpix = screen_width;
	scanbytes = scanpix * sizeof(RGBpixel);
	scanline = (unsigned char *)bu_malloc( scanbytes, "scanline" );

	if( crunch )  {
		if( fb_rmap( fbp, &cmap ) == -1 )  {
			crunch = 0;
		} else if( fb_is_linear_cmap( &cmap ) ) {
			crunch = 0;
		}
	}

	png_init_io( png_p, outfp );
	png_set_filter( png_p, 0, PNG_FILTER_NONE );
	png_set_compression_level( png_p, Z_BEST_COMPRESSION );
	png_set_IHDR( png_p, info_p,
		screen_width, screen_height, 8,
		pixbytes == 3 ? PNG_COLOR_TYPE_RGB : PNG_COLOR_TYPE_GRAY,
		PNG_INTERLACE_NONE,
		PNG_COMPRESSION_TYPE_DEFAULT,
		PNG_FILTER_TYPE_DEFAULT );

	png_set_gAMA( png_p, info_p, out_gamma );

	png_write_info( png_p, info_p );

	if( inverse )
	{
		/*  Read bottom to top */
		for( y=0; y < screen_height; y++ )
		{
			if( pixbytes == 3 )
				got = fb_read( fbp, 0, y,
					scanline, screen_width );
			else
				got = fb_bwreadrect( fbp, 0, y,
					screen_width, 1,
					scanline );

			if( got != screen_width )  {
				fprintf(stderr,"fb-png: Read of scanline %d returned %d, expected %d, aborting.\n",
					y, got, screen_width);
				break;
			}
			if( crunch )
				cmap_crunch( (RGBpixel *)scanline, scanpix, &cmap );
			png_write_row( png_p, scanline );
		}
	}
	else
	{
		/*  Read top to bottom */
		for( y = screen_height-1; y >= 0; y-- )
		{
			if( pixbytes == 3 )
				got = fb_read( fbp, 0, y,
					scanline, screen_width );
			else
				got = fb_bwreadrect( fbp, 0, y,
					screen_width, 1,
					scanline );

			if( got != screen_width )  {
				fprintf(stderr,"fb-png: Read of scanline %d returned %d, expected %d, aborting.\n",
					y, got, screen_width);
				break;
			}
			if( crunch )
				cmap_crunch( (RGBpixel *)scanline, scanpix, &cmap );
			png_write_row( png_p, scanline );
		}
	}
	fb_close( fbp );
	png_write_end( png_p, NULL );
	exit(0);
}
@


11.14
log
@change conf.h to a wrapped config.h
@
text
@d25 1
a25 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/fb/fb-png.c,v 11.13 2004/04/05 07:49:23 morrison Exp $ (BRL)";
@


11.13
log
@merge of ansi-6-0-branch into HEAD
@
text
@d25 1
a25 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
d28 5
a32 1
#include "conf.h"
@


11.12
log
@update copyright to include span through 2003
@
text
@d25 1
a25 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/fb/fb-png.c,v 11.11 2002/12/26 15:13:36 jra Exp $ (BRL)";
d55 1
a55 1
extern void	cmap_crunch();
d62 1
a62 2
get_args( argc, argv )
register char **argv;
d128 1
a128 3
main(argc, argv)
int argc;
char **argv;
d205 1
a205 1
				cmap_crunch( scanline, scanpix, &cmap );
d228 1
a228 1
				cmap_crunch( scanline, scanpix, &cmap );
@


11.11
log
@Update to libpng 1.2.5
@
text
@d20 1
a20 1
 *      This software is Copyright (C) 1998 by the United States Army
d25 1
a25 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/fb/fb-png.c,v 11.10 2002/08/20 17:07:24 jra Exp $ (BRL)";
@


11.11.6.1
log
@merge from HEAD
@
text
@d20 1
a20 1
 *      This software is Copyright (C) 1998-2004 by the United States Army
d25 1
a25 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/fb/fb-png.c,v 11.12 2004/02/02 17:39:01 morrison Exp $ (BRL)";
@


11.11.6.2
log
@merge from head
@
text
@d25 1
a25 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/fb/fb-png.c,v 11.11.6.1 2004/02/12 19:40:45 erikg Exp $ (BRL)";
@


11.10
log
@Restoration of entire source tree to Pre-Hartley state
@
text
@d25 1
a25 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/fb/fb-png.c,v 11.8 2001/10/12 18:37:41 butler Exp $ (BRL)";
d32 1
a36 1
#include "png.h"
@


11.10.4.1
log
@sync to HEAD...
@
text
@d20 1
a20 1
 *      This software is Copyright (C) 1998-2004 by the United States Army
d25 1
a25 1
static const char RCSid[] = "@@(#)$Header: /n/cad/c/CVS/brlcad/fb/fb-png.c,v 11.12 2004/02/02 17:39:01 morrison Exp $ (BRL)";
a31 1
#include "png.h"
d36 1
@


11.10.2.1
log
@Initial ANSIfication
@
text
@d25 1
a25 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/fb/fb-png.c,v 11.10 2002/08/20 17:07:24 jra Exp $ (BRL)";
d55 1
a55 1
extern void	cmap_crunch(register RGBpixel (*scan_buf), register int pixel_ct, ColorMap *cmap);
d62 2
a63 1
get_args(int argc, register char **argv)
d129 3
a131 1
main(int argc, char **argv)
d208 1
a208 1
				cmap_crunch( (RGBpixel *)scanline, scanpix, &cmap );
d231 1
a231 1
				cmap_crunch( (RGBpixel *)scanline, scanpix, &cmap );
@


11.10.2.2
log
@sync branch with HEAD
@
text
@d20 1
a20 1
 *      This software is Copyright (C) 1998-2004 by the United States Army
d25 1
a25 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
a31 1
#include "png.h"
d36 1
@


11.9
log
@Converted from K&R to ANSI C - RFH
@
text
@d55 1
a55 1
extern void	cmap_crunch(register RGBpixel (*scan_buf), register int pixel_ct, ColorMap *cmap);
d62 2
a63 1
get_args(int argc, register char **argv)
d129 3
a131 1
main(int argc, char **argv)
d208 1
a208 1
				cmap_crunch( (RGBpixel *)scanline, scanpix, &cmap );
d231 1
a231 1
				cmap_crunch( (RGBpixel *)scanline, scanpix, &cmap );
@


11.8
log
@Misc warnings eliminated
@
text
@d25 1
a25 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/fb/fb-png.c,v 11.7 2000/08/24 22:54:43 mike Exp $ (BRL)";
d55 1
a55 1
extern void	cmap_crunch();
d62 1
a62 2
get_args( argc, argv )
register char **argv;
d128 1
a128 3
main(argc, argv)
int argc;
char **argv;
d205 1
a205 1
				cmap_crunch( scanline, scanpix, &cmap );
d228 1
a228 1
				cmap_crunch( scanline, scanpix, &cmap );
@


11.7
log
@
lint
@
text
@d25 1
a25 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/fb/fb-png.c,v 11.6 2000/08/24 03:58:26 mike Exp $ (BRL)";
d31 1
@


11.6
log
@
const RCSid
@
text
@d25 1
a25 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/fb/fb-png.c,v 11.5 1998/08/28 21:15:00 mike Exp $ (BRL)";
d33 1
d60 1
d127 1
a133 1
	int i;
@


11.5
log
@Added support for handling monochrome (.bw) images off the framebuffer.
@
text
@d25 1
a25 1
static char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/fb/fb-png.c,v 11.4 1998/08/24 23:41:33 mike Exp $ (BRL)";
@


11.4
log
@Added error checking for reads from framebuffer
@
text
@d6 1
a6 1
 *  Author -
d8 1
d25 1
a25 1
static char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/fb/fb-png.c,v 11.3 1998/08/24 23:06:24 mike Exp $ (BRL)";
d47 1
d56 1
a56 1
Usage: fb-png [-h -i -c] [-F framebuffer] [-g gamma]\n\
d64 1
a64 1
	while ( (c = getopt( argc, argv, "chiF:s:w:n:g:" )) != EOF )  {
d92 5
d175 6
a180 3
	png_set_IHDR( png_p, info_p, screen_width, screen_height, 8,
		PNG_COLOR_TYPE_RGB, PNG_INTERLACE_NONE,
		PNG_COMPRESSION_TYPE_DEFAULT, PNG_FILTER_TYPE_DEFAULT );
d188 1
a188 1
		/*  Regular -- read bottom to top */
d191 8
a198 1
			got = fb_read( fbp, 0, y, scanline, screen_width );
d211 1
a211 1
		/*  Inverse -- read top to bottom */
d214 8
a221 1
			got = fb_read( fbp, 0, y, scanline, screen_width );
@


11.3
log
@Allowed gamma that image was created at to be noted in the PNG file,
via -g# option.
@
text
@d24 1
a24 1
static char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/fb/fb-png.c,v 11.2 1998/08/24 23:02:43 mike Exp $ (BRL)";
d125 1
d181 6
a186 1
			fb_read( fbp, 0, y, scanline, screen_width );
d197 6
a202 1
			fb_read( fbp, 0, y, scanline, screen_width );
@


11.2
log
@Fixed bug where buffer was allocated before final size determined.
@
text
@d24 1
a24 1
static char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/fb/fb-png.c,v 11.1 1998/06/30 14:00:31 jra Exp $ (BRL)";
d49 2
d54 1
a54 1
Usage: fb-png [-h -i -c] [-F framebuffer]\n\
d62 1
a62 1
	while ( (c = getopt( argc, argv, "chiF:s:w:n:" )) != EOF )  {
d87 3
d171 1
a171 1
	png_set_gAMA( png_p, info_p, 1.0 );
@


11.1
log
@Routine to store images from a framebuffer into PNG (Portable Network Graphics) format file.
@
text
@d24 1
a24 1
static char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/fb/fb-pix.c,v 11.1 1995/01/04 10:09:06 mike Rel4_4 $ (BRL)";
a137 4
	scanpix = screen_width;
	scanbytes = scanpix * sizeof(RGBpixel);
	scanline = (unsigned char *)bu_malloc( scanbytes, "scanline" );

d141 1
d146 4
@
