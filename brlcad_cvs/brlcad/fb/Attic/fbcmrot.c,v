head	11.10;
access;
symbols
	ansi-20040405-merged:11.6.2.2
	postmerge-20040405-ansi:11.8
	premerge-20040404-ansi:11.7
	postmerge-autoconf:11.7
	autoconf-freeze:11.6.10.2
	premerge-autoconf:11.7
	ansi-20040316-freeze:11.6.2.1
	postmerge-20040315-windows:11.7
	premerge-20040315-windows:11.7
	windows-20040315-freeze:11.6.4.1
	autoconf-20031203:11.6
	autoconf-20031202:11.6
	autoconf-branch:11.6.0.10
	phong-branch:11.6.0.8
	photonmap-branch:11.6.0.6
	rel-6-1-DP:11.6
	windows-branch:11.6.0.4
	rel-6-0-2:11.4
	ansi-branch:11.6.0.2
	rel-6-0-1-branch:11.4.0.2
	hartley-6-0-post:11.5
	hartley-6-0-pre:11.4
	rel-6-0-1:11.4
	rel-6-0:11.4
	rel-5-4:11.1
	offsite-5-3-pre:11.2
	rel-5-3:11.1
	rel-5-2:11.1
	rel-5-1-branch:11.1.0.2
	rel-5-1:11.1
	rel-5-0:11.1
	rel-5-0-beta:11.1
	rel-4-5:11.1
	ctj-4-5-post:11.1
	ctj-4-5-pre:11.1
	rel-4-4:11.1
	rel-4-0:10.1
	rel-3-5:9.1
	rel-3-0:8.1
	rel-2-3:7.1
	rel-2-0:5.1
	rel-1-24:5.1
	rel-1-20:4.2
	rel-1-10:4.1;
locks; strict;
comment	@ * @;


11.10
date	2004.05.24.04.13.26;	author morrison;	state dead;
branches;
next	11.9;

11.9
date	2004.05.10.15.30.42;	author erikg;	state Exp;
branches;
next	11.8;

11.8
date	2004.04.05.07.49.23;	author morrison;	state Exp;
branches;
next	11.7;

11.7
date	2004.02.02.17.39.01;	author morrison;	state Exp;
branches;
next	11.6;

11.6
date	2002.08.20.17.07.24;	author jra;	state Exp;
branches
	11.6.2.1
	11.6.4.1
	11.6.10.1;
next	11.5;

11.5
date	2002.08.15.20.54.37;	author hartley;	state Exp;
branches;
next	11.4;

11.4
date	2001.10.12.18.37.41;	author butler;	state Exp;
branches;
next	11.3;

11.3
date	2001.04.12.17.44.07;	author bparker;	state Exp;
branches;
next	11.2;

11.2
date	2000.08.24.03.58.28;	author mike;	state Exp;
branches;
next	11.1;

11.1
date	95.01.04.10.09.14;	author mike;	state Rel4_4;
branches;
next	10.4;

10.4
date	94.08.25.17.54.57;	author gdurf;	state Exp;
branches;
next	10.3;

10.3
date	94.08.11.19.20.55;	author gdurf;	state Exp;
branches;
next	10.2;

10.2
date	93.10.26.02.01.42;	author mike;	state Exp;
branches;
next	10.1;

10.1
date	91.10.12.06.46.20;	author mike;	state Rel4_0;
branches;
next	9.1;

9.1
date	89.05.19.06.08.43;	author mike;	state Rel3_5;
branches;
next	8.2;

8.2
date	89.03.07.00.36.10;	author mike;	state Exp;
branches;
next	8.1;

8.1
date	88.10.05.00.41.26;	author mike;	state Rel3_0;
branches;
next	7.2;

7.2
date	88.05.16.00.06.33;	author mike;	state Exp;
branches;
next	7.1;

7.1
date	87.11.03.00.07.08;	author mike;	state Rel;
branches;
next	6.1;

6.1
date	87.07.11.08.10.18;	author mike;	state Rel;
branches;
next	5.1;

5.1
date	87.06.24.22.38.19;	author mike;	state Rel;
branches;
next	4.3;

4.3
date	87.04.23.00.42.38;	author phil;	state Exp;
branches;
next	4.2;

4.2
date	87.02.13.00.40.58;	author mike;	state Exp;
branches;
next	4.1;

4.1
date	86.12.29.03.12.49;	author mike;	state Rel1;
branches;
next	1.3;

1.3
date	86.11.20.00.41.57;	author phil;	state Exp;
branches;
next	1.2;

1.2
date	86.11.06.08.00.36;	author mike;	state Exp;
branches;
next	1.1;

1.1
date	86.10.29.03.49.40;	author mike;	state Exp;
branches;
next	;

11.6.2.1
date	2002.09.19.18.00.40;	author morrison;	state Exp;
branches;
next	11.6.2.2;

11.6.2.2
date	2004.03.17.21.16.06;	author morrison;	state Exp;
branches;
next	;

11.6.4.1
date	2004.03.11.23.40.41;	author morrison;	state Exp;
branches;
next	;

11.6.10.1
date	2004.02.12.19.40.45;	author erikg;	state Exp;
branches;
next	11.6.10.2;

11.6.10.2
date	2004.03.15.13.28.06;	author erikg;	state Exp;
branches;
next	;


desc
@Rotate color map
@


11.10
log
@moved to src/fb/
@
text
@/*
 *			F B C M R O T . C
 *
 * Function -
 *	Dynamicly rotate the color map
 *
 *  Author -
 *	Michael John Muuss
 *  
 *  Source -
 *	SECAD/VLD Computing Consortium, Bldg 394
 *	The U. S. Army Ballistic Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5066
 *  
 *  Copyright Notice -
 *	This software is Copyright (C) 1986-2004 by the United States Army.
 *	All rights reserved.
 */
#ifndef lint
static const char RCSid[] = "@@(#)$Header: /n/xoff/cvs/brlcad/fb/fbcmrot.c,v 11.9 2004/05/10 15:30:42 erikg Exp $ (BRL)";
#endif

#ifdef HAVE_CONFIG_H
# include "config.h"
#endif



#include <stdio.h>	
#include <string.h>	
#include <math.h>
#include <sys/time.h>		/* For struct timeval */

#include "machine.h"
#include "externs.h"
#include "fb.h"

ColorMap cm1, cm2;
ColorMap *inp, *outp;

int size = 512;
double fps = 0.0;	/* frames per second */
int increment = 1;
int onestep = 0;

FBIO *fbp;

static char usage[] = "\
Usage: fbcmrot [-h] [-i increment] steps_per_second\n";

int
get_args(int argc, register char **argv)
{
	register int c;

	while ( (c = getopt( argc, argv, "hi:" )) != EOF )  {
		switch( c )  {
		case 'h':
			/* high-res */
			size = 1024;
			break;
		case 'i':
			/* increment */
			increment = atoi(optarg);
			break;

		default:		/* '?' */
			return(0);
		}
	}

	if( optind >= argc )  {
		/* no fps specified */
		fps = 0;
	} else {
		fps = atof(argv[optind]);
		if( fps == 0 )
			onestep++;
	}

	if ( argc > ++optind )
		(void)fprintf( stderr, "fbcmrot: excess argument(s) ignored\n" );

	return(1);		/* OK */
}

int
main(int argc, char **argv)
{
	register int i;
	struct timeval tv;

	if ( !get_args( argc, argv ) )  {
		(void)fputs(usage, stderr);
		exit( 1 );
	}

	if( fps > 0.0 ) {
		tv.tv_sec = (long) (1.0 / fps);
		tv.tv_usec = (long) (((1.0 / fps) - tv.tv_sec) * 1000000);
	}

	if( (fbp = fb_open( NULL, size, size)) == FBIO_NULL )  {
		fprintf(stderr, "fbcmrot:  fb_open failed\n");
		return	1;
	}

	inp = &cm1;
	outp = &cm2;
	fb_rmap( fbp, inp );

	while(1)  {
		register int from;
		ColorMap *tp;

		/* Build color map for current value */
		for( i=0, from = increment; i < 256; i++, from++ ) {
			if( from < 0 )
				from += 256;
			else if( from > 255 )
				from -= 256;
			outp->cm_red[i]   = inp->cm_red[from];
			outp->cm_green[i] = inp->cm_green[from];
			outp->cm_blue[i]  = inp->cm_blue[from];
		}

		fb_wmap( fbp, outp );
		tp = outp;
		outp = inp;
		inp = tp;

		if( fps > 0.0 )  {
			fd_set readfds;

			FD_ZERO(&readfds);
			FD_SET(fileno(stdin), &readfds);
			select(fileno(stdin)+1, &readfds, (fd_set *)0, (fd_set *)0, &tv);
		}
		if( onestep )
			break;
	}
	fb_close( fbp );
	return	0;
}
@


11.9
log
@change conf.h to a wrapped config.h
@
text
@d20 1
a20 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/fb/fbcmrot.c,v 11.8 2004/04/05 07:49:23 morrison Exp $ (BRL)";
@


11.8
log
@merge of ansi-6-0-branch into HEAD
@
text
@d20 1
a20 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
d23 5
a27 1
#include "conf.h"
@


11.7
log
@update copyright to include span through 2003
@
text
@d20 1
a20 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/fb/fbcmrot.c,v 11.6 2002/08/20 17:07:24 jra Exp $ (BRL)";
d48 1
a48 2
get_args( argc, argv )
register char **argv;
d84 1
a84 2
main(argc, argv )
char **argv;
@


11.6
log
@Restoration of entire source tree to Pre-Hartley state
@
text
@d16 1
a16 1
 *	This software is Copyright (C) 1986 by the United States Army.
d20 1
a20 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/fb/fbcmrot.c,v 11.4 2001/10/12 18:37:41 butler Exp $ (BRL)";
@


11.6.4.1
log
@sync to HEAD...
@
text
@d16 1
a16 1
 *	This software is Copyright (C) 1986-2004 by the United States Army.
d20 1
a20 1
static const char RCSid[] = "@@(#)$Header: /n/cad/c/CVS/brlcad/fb/fbcmrot.c,v 11.7 2004/02/02 17:39:01 morrison Exp $ (BRL)";
@


11.6.10.1
log
@merge from HEAD
@
text
@d16 1
a16 1
 *	This software is Copyright (C) 1986-2004 by the United States Army.
d20 1
a20 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/fb/fbcmrot.c,v 11.7 2004/02/02 17:39:01 morrison Exp $ (BRL)";
@


11.6.10.2
log
@merge from head
@
text
@d20 1
a20 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/fb/fbcmrot.c,v 11.6.10.1 2004/02/12 19:40:45 erikg Exp $ (BRL)";
@


11.6.2.1
log
@Initial ANSIfication
@
text
@d20 1
a20 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/fb/fbcmrot.c,v 11.6 2002/08/20 17:07:24 jra Exp $ (BRL)";
d48 2
a49 1
get_args(int argc, register char **argv)
d85 2
a86 1
main(int argc, char **argv)
@


11.6.2.2
log
@sync branch with HEAD
@
text
@d16 1
a16 1
 *	This software is Copyright (C) 1986-2004 by the United States Army.
d20 1
a20 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
@


11.5
log
@Converted from K&R to ANSI C - RFH
@
text
@d48 2
a49 1
get_args(int argc, register char **argv)
d85 2
a86 1
main(int argc, char **argv)
@


11.4
log
@Misc warnings eliminated
@
text
@d20 1
a20 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/fb/fbcmrot.c,v 11.3 2001/04/12 17:44:07 bparker Exp $ (BRL)";
d48 1
a48 2
get_args( argc, argv )
register char **argv;
d84 1
a84 2
main(argc, argv )
char **argv;
@


11.3
log
@*- get rid of warnings
@
text
@d20 1
a20 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/fb/fbcmrot.c,v 11.2 2000/08/24 03:58:28 mike Exp $ (BRL)";
d26 1
@


11.2
log
@
const RCSid
@
text
@d20 1
a20 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/fb/fbcmrot.c,v 11.1 1995/01/04 10:09:14 mike Rel4_4 $ (BRL)";
d46 1
d83 1
@


11.1
log
@Release_4.4
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: /m/cad/fb/RCS/fbcmrot.c,v 10.4 94/08/25 17:54:57 gdurf Exp $ (BRL)";
@


10.4
log
@Removed bsdselect
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: /m/cad/fb/RCS/fbcmrot.c,v 10.3 1994/08/11 19:20:55 gdurf Exp gdurf $ (BRL)";
@


10.3
log
@Added include of conf.h
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: /m/cad/fb/RCS/fbcmrot.c,v 10.2 1993/10/26 02:01:42 mike Exp gdurf $ (BRL)";
d27 2
d86 1
a86 1
	int sec, usec;
d94 2
a95 2
		sec = 1.0 / fps;
		usec = ((1.0 / fps) - sec) * 1000000;
d128 5
a132 2
			/* From libsysv */
			bsdselect( 0L, sec, usec );
@


10.2
log
@Take advantage of existing headerfiles.
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: /m/cad/fb/RCS/fbcmrot.c,v 10.1 91/10/12 06:46:20 mike Rel4_0 Locker: mike $ (BRL)";
d22 2
@


10.1
log
@Release_4.0
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: /m/cad/fb/RCS/fbcmrot.c,v 9.1 89/05/19 06:08:43 mike Rel3_5 $ (BRL)";
d24 3
a28 8
double	atof();

extern int	getopt();
extern char	*optarg;
extern int	optind;

extern double	atof();

a30 4

#ifdef SYSV
#define bzero(p,cnt)	memset(p,'\0',cnt);
#endif
@


9.1
log
@Release_3.5
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: fbcmrot.c,v 8.2 89/03/07 00:36:10 mike Exp $ (BRL)";
@


8.2
log
@Changed to bsdselect().
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: fbcmrot.c,v 8.1 88/10/05 00:41:26 mike Locked $ (BRL)";
@


8.1
log
@Release_3.0
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: fbcmrot.c,v 7.2 88/05/16 00:06:33 mike Exp $ (BRL)";
d32 2
a45 2
void	delay();

d76 1
a76 1
		fps = atoi(argv[optind]);
d98 1
a98 1
	if( fps != 0 ) {
d132 4
a135 1
		if( fps ) delay( sec, usec );
a141 19

#ifdef BSD
#include <sys/time.h>
void
delay( s, us )
{
	struct timeval tv;

	tv.tv_sec = s;
	tv.tv_usec = us;
	select( 2, (char *)0, (char *)0, (char *)0, &tv );
}
#else
void
delay( s, us )
{
	sleep( s + (us/1000000) );
}
#endif
@


7.2
log
@lint fixes
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: fbcmrot.c,v 7.1 87/11/03 00:07:08 mike Locked $ (BRL)";
@


7.1
log
@Release 2.3
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: fbcmrot.c,v 6.1 87/07/11 08:10:18 mike Rel $ (BRL)";
d44 2
d142 1
d152 1
@


6.1
log
@Release 2.0
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: fbcmrot.c,v 5.1 87/06/24 22:38:19 mike Rel $ (BRL)";
@


5.1
log
@Release 1.24
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: fbcmrot.c,v 4.3 87/04/23 00:42:38 phil Exp $ (BRL)";
@


4.3
log
@made step size arbitrary via -i flag
added getopt!
steps_per_second of zero now shifts once and exits
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: fbcmrot.c,v 4.2 87/02/13 00:40:58 mike Exp $ (BRL)";
@


4.2
log
@Release 1.20 -- First Formal Release
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: fbcmrot.c,v 4.1 86/12/29 03:12:49 mike Rel1 $ (BRL)";
d28 3
a30 2
ColorMap old_map;
ColorMap cm;
d32 3
d41 2
d46 39
d91 3
a93 4
	if( argc > 1 && argv[1][0] == '-' && argv[1][1] == 'h' )  {
		argc--;
		argv++;
		size = 1024;
d95 4
a98 6
	if( argc > 1 )  {
		fps = atof( argv[1] );
		if( fps != 0 ) {
			sec = 1.0 / fps;
			usec = ((1.0 / fps) - sec) * 1000000;
		}
a104 2
	fb_rmap( fbp, &old_map );
	fb_rmap( fbp, &cm );
d106 4
d111 3
a113 1
		register int t;
d115 9
a123 4
		t = cm.cm_red[0];
		for( i=0; i<255; i++ )
			cm.cm_red[i] = cm.cm_red[i+1];
		cm.cm_red[255] = t;
d125 4
a128 4
		t = cm.cm_green[0];
		for( i=0; i<255; i++ )
			cm.cm_green[i] = cm.cm_green[i+1];
		cm.cm_green[255] = t;
a129 7
		t = cm.cm_blue[0];
		for( i=0; i<255; i++ )
			cm.cm_blue[i] = cm.cm_blue[i+1];
		cm.cm_blue[255] = t;

		fb_wmap( fbp, &cm );

d131 2
d134 2
@


4.1
log
@BRL CAD Distribution Release 1.10
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: fbcmrot.c,v 1.3 86/11/20 00:41:57 phil Exp $ (BRL)";
@


1.3
log
@changed millisecond delay to floating steps per second
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: fbcmrot.c,v 1.2 86/11/06 08:00:36 phil Locked $ (BRL)";
@


1.2
log
@Fixed -h flag
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: fbcmrot.c,v 1.1 86/10/29 03:49:40 mike Locked $ (BRL)";
d26 2
d36 1
a36 1
int wtime = 0;		/* micro-seconds between updates */
d44 1
d52 5
a56 2
		wtime = atoi( argv[1] ) * 1000;	/* ms as arg */
		printf("%d us delay\n", wtime );
d86 1
a86 1
		if(wtime) delay( 0, wtime );
@


1.1
log
@Initial revision
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header$ (BRL)";
d43 1
a43 1
	if( argv[1][0] == '-' && argv[1][1] == 'h' )  {
d46 1
a46 1
		size = 512;
@
