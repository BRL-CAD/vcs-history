head	11.9;
access;
symbols
	ansi-20040405-merged:11.5.2.2
	postmerge-20040405-ansi:11.7
	premerge-20040404-ansi:11.6
	postmerge-autoconf:11.6
	autoconf-freeze:11.5.10.2
	premerge-autoconf:11.6
	ansi-20040316-freeze:11.5.2.1
	postmerge-20040315-windows:11.6
	premerge-20040315-windows:11.6
	windows-20040315-freeze:11.5.4.1
	autoconf-20031203:11.5
	autoconf-20031202:11.5
	autoconf-branch:11.5.0.10
	phong-branch:11.5.0.8
	photonmap-branch:11.5.0.6
	rel-6-1-DP:11.5
	windows-branch:11.5.0.4
	rel-6-0-2:11.3
	ansi-branch:11.5.0.2
	rel-6-0-1-branch:11.3.0.2
	hartley-6-0-post:11.4
	hartley-6-0-pre:11.3
	rel-6-0-1:11.3
	rel-6-0:11.3
	rel-5-4:11.1
	offsite-5-3-pre:11.2
	rel-5-3:11.1
	rel-5-2:11.1
	rel-5-1-branch:11.1.0.2
	rel-5-1:11.1
	rel-5-0:11.1
	rel-5-0-beta:11.1
	rel-4-5:11.1
	ctj-4-5-post:11.1
	ctj-4-5-pre:11.1
	rel-4-4:11.1
	rel-4-0:10.1
	rel-3-5:9.1
	rel-3-0:8.1
	rel-2-3:7.1
	rel-2-0:5.1
	rel-1-24:5.1
	rel-1-20:4.3
	rel-1-10:4.1;
locks; strict;
comment	@ * @;


11.9
date	2004.05.24.04.13.25;	author morrison;	state dead;
branches;
next	11.8;

11.8
date	2004.05.10.15.30.42;	author erikg;	state Exp;
branches;
next	11.7;

11.7
date	2004.04.05.07.49.23;	author morrison;	state Exp;
branches;
next	11.6;

11.6
date	2004.02.02.17.39.01;	author morrison;	state Exp;
branches;
next	11.5;

11.5
date	2002.08.20.17.07.24;	author jra;	state Exp;
branches
	11.5.2.1
	11.5.4.1
	11.5.10.1;
next	11.4;

11.4
date	2002.08.15.20.54.37;	author hartley;	state Exp;
branches;
next	11.3;

11.3
date	2001.04.12.17.44.07;	author bparker;	state Exp;
branches;
next	11.2;

11.2
date	2000.08.24.03.58.28;	author mike;	state Exp;
branches;
next	11.1;

11.1
date	95.01.04.10.09.11;	author mike;	state Rel4_4;
branches;
next	10.2;

10.2
date	94.08.23.18.49.02;	author gdurf;	state Exp;
branches;
next	10.1;

10.1
date	91.10.12.06.46.18;	author mike;	state Rel4_0;
branches;
next	9.5;

9.5
date	91.08.25.03.19.01;	author butler;	state Exp;
branches;
next	9.4;

9.4
date	91.06.18.13.30.51;	author mmark;	state Exp;
branches;
next	9.3;

9.3
date	91.01.10.22.24.30;	author mike;	state Exp;
branches;
next	9.2;

9.2
date	90.12.12.01.17.57;	author phil;	state Exp;
branches;
next	9.1;

9.1
date	89.05.19.06.08.37;	author mike;	state Rel3_5;
branches;
next	8.2;

8.2
date	89.03.09.05.22.16;	author mike;	state Exp;
branches;
next	8.1;

8.1
date	88.10.05.00.41.19;	author mike;	state Rel3_0;
branches;
next	7.1;

7.1
date	87.11.03.00.06.58;	author mike;	state Rel;
branches;
next	6.1;

6.1
date	87.07.11.08.10.08;	author mike;	state Rel;
branches;
next	5.1;

5.1
date	87.06.24.22.38.08;	author mike;	state Rel;
branches;
next	4.3;

4.3
date	87.02.13.00.40.41;	author mike;	state Exp;
branches;
next	4.2;

4.2
date	87.01.06.09.24.33;	author mike;	state Rel1;
branches;
next	4.1;

4.1
date	86.12.29.03.12.43;	author mike;	state Rel1;
branches;
next	1.9;

1.9
date	86.10.25.10.36.43;	author phil;	state Exp;
branches;
next	1.8;

1.8
date	86.10.03.05.53.46;	author phil;	state Exp;
branches;
next	1.7;

1.7
date	86.08.13.05.21.34;	author mike;	state Exp;
branches;
next	1.6;

1.6
date	86.08.13.03.12.25;	author mike;	state Exp;
branches;
next	1.5;

1.5
date	86.08.13.03.12.20;	author mike;	state Exp;
branches;
next	1.4;

1.4
date	86.08.13.03.12.13;	author mike;	state Exp;
branches;
next	1.3;

1.3
date	86.08.13.03.12.06;	author mike;	state Exp;
branches;
next	1.2;

1.2
date	86.08.13.03.12.00;	author mike;	state Exp;
branches;
next	1.1;

1.1
date	86.08.13.03.11.56;	author mike;	state Exp;
branches;
next	;

11.5.2.1
date	2002.09.19.18.00.40;	author morrison;	state Exp;
branches;
next	11.5.2.2;

11.5.2.2
date	2004.03.17.21.16.06;	author morrison;	state Exp;
branches;
next	;

11.5.4.1
date	2004.03.11.23.40.41;	author morrison;	state Exp;
branches;
next	;

11.5.10.1
date	2004.02.12.19.40.45;	author erikg;	state Exp;
branches;
next	11.5.10.2;

11.5.10.2
date	2004.03.15.13.28.06;	author erikg;	state Exp;
branches;
next	;


desc
@@


11.9
log
@moved to src/fb/
@
text
@/*
 *			F B C L E A R . C
 *
 *  This program is intended to be used to clear a frame buffer
 *  to black, or to the specified color
 *
 *  Authors -
 *	Michael John Muuss
 *	Gary S. Moss
 *  
 *  Source -
 *	SECAD/VLD Computing Consortium, Bldg 394
 *	The U. S. Army Ballistic Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5066
 *  
 *  Copyright Notice -
 *	This software is Copyright (C) 1986-2004 by the United States Army.
 *	All rights reserved.
 */
#ifndef lint
static const char RCSid[] = "@@(#)$Header: /n/xoff/cvs/brlcad/fb/fbclear.c,v 11.8 2004/05/10 15:30:42 erikg Exp $ (BRL)";
#endif

#ifdef HAVE_CONFIG_H
# include "config.h"
#endif



#include <stdio.h>

#include "machine.h"
#include "externs.h"			/* for getopt() */
#include "fb.h"

static char	*framebuffer = NULL;
static FBIO	*fbp;
static int	scr_width = 0;		/* use default size */
static int	scr_height = 0;
static int	clear_and_reset = 0;

#define u_char	unsigned char

static char usage[] = "\
Usage: fbclear [-h -c] [-F framebuffer]\n\
	[-S squarescrsize] [-W scr_width] [-N scr_height] [gray | r g b]\n";

int
get_args(int argc, register char **argv)
{
	register int c;

	while ( (c = getopt( argc, argv, "hcF:s:w:n:S:W:N:" )) != EOF )  {
		switch( c )  {
		case 'h':
			/* high-res */
			scr_height = scr_width = 1024;
			break;
		case 'c':
			/* clear only, no cmap, pan, and zoom */
			clear_and_reset++;
			break;
		case 'F':
			framebuffer = optarg;
			break;
		case 's':
		case 'S':
			scr_height = scr_width = atoi(optarg);
			break;
		case 'w':
		case 'W':
			scr_width = atoi(optarg);
			break;
		case 'n':
		case 'N':
			scr_height = atoi(optarg);
			break;

		default:		/* '?' */
			return(0);
		}
	}
	return(1);		/* OK */
}

int
main(int argc, char **argv)
{
	if ( !get_args( argc, argv ) )  {
		(void)fputs(usage, stderr);
		exit( 1 );
	}

	if( (fbp = fb_open( framebuffer, scr_width, scr_height )) == NULL )
		exit(2);

	/* Get the screen size we were given */
	scr_width = fb_getwidth(fbp);
	scr_height = fb_getheight(fbp);

	if( clear_and_reset ) {
		if( fb_wmap( fbp, COLORMAP_NULL ) < 0 )
			exit(3);
		(void)fb_view( fbp, scr_width/2, scr_height/2, 1, 1 );
	} else {
		ColorMap	cmap;
		int		xcent, ycent, xzoom, yzoom;
		if( fb_rmap( fbp, &cmap ) >= 0 )  {
			if( !fb_is_linear_cmap( &cmap ) )  {
				fprintf(stderr, "fbclear: NOTE: non-linear colormap in effect.  -c flag loads linear colormap.\n");
			}
		}
		(void)fb_getview( fbp, &xcent, &ycent, &xzoom, &yzoom );
		if( xzoom != 1 || yzoom != 1 )  {
			fprintf(stderr, "fbclear:  NOTE: framebuffer is zoomed.  -c will un-zoom.\n");
		}
	}

	if( optind+3 == argc ) {
		static RGBpixel	pixel;
		pixel[RED] = (u_char) atoi( argv[optind+0] );
		pixel[GRN] = (u_char) atoi( argv[optind+1] );
		pixel[BLU] = (u_char) atoi( argv[optind+2] );
		fb_clear( fbp, pixel );
	} else if( optind+1 == argc ) {
		static RGBpixel	pixel;
		pixel[RED] = pixel[GRN] = pixel[BLU]
			= (u_char) atoi( argv[optind+0] );
		fb_clear( fbp, pixel );
	} else {
		if( optind != argc )
			fprintf(stderr, "fbclear: extra arguments ignored\n");
		fb_clear( fbp, PIXEL_NULL );
	}
	(void)fb_close( fbp );
	return(0);
}
@


11.8
log
@change conf.h to a wrapped config.h
@
text
@d21 1
a21 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/fb/fbclear.c,v 11.7 2004/04/05 07:49:23 morrison Exp $ (BRL)";
@


11.7
log
@merge of ansi-6-0-branch into HEAD
@
text
@d21 1
a21 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
d24 5
a28 1
#include "conf.h"
@


11.6
log
@update copyright to include span through 2003
@
text
@d21 1
a21 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/fb/fbclear.c,v 11.5 2002/08/20 17:07:24 jra Exp $ (BRL)";
d45 1
a45 2
get_args( argc, argv )
register char **argv;
d83 1
a83 3
main(argc, argv)
int argc;
char **argv;
@


11.5
log
@Restoration of entire source tree to Pre-Hartley state
@
text
@d17 1
a17 1
 *	This software is Copyright (C) 1986 by the United States Army.
d21 1
a21 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/fb/fbclear.c,v 11.3 2001/04/12 17:44:07 bparker Exp $ (BRL)";
@


11.5.4.1
log
@sync to HEAD...
@
text
@d17 1
a17 1
 *	This software is Copyright (C) 1986-2004 by the United States Army.
d21 1
a21 1
static const char RCSid[] = "@@(#)$Header: /n/cad/c/CVS/brlcad/fb/fbclear.c,v 11.6 2004/02/02 17:39:01 morrison Exp $ (BRL)";
@


11.5.10.1
log
@merge from HEAD
@
text
@d17 1
a17 1
 *	This software is Copyright (C) 1986-2004 by the United States Army.
d21 1
a21 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/fb/fbclear.c,v 11.6 2004/02/02 17:39:01 morrison Exp $ (BRL)";
@


11.5.10.2
log
@merge from head
@
text
@d21 1
a21 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/fb/fbclear.c,v 11.5.10.1 2004/02/12 19:40:45 erikg Exp $ (BRL)";
@


11.5.2.1
log
@Initial ANSIfication
@
text
@d21 1
a21 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/fb/fbclear.c,v 11.5 2002/08/20 17:07:24 jra Exp $ (BRL)";
d45 2
a46 1
get_args(int argc, register char **argv)
d84 3
a86 1
main(int argc, char **argv)
@


11.5.2.2
log
@sync branch with HEAD
@
text
@d17 1
a17 1
 *	This software is Copyright (C) 1986-2004 by the United States Army.
d21 1
a21 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
@


11.4
log
@Converted from K&R to ANSI C - RFH
@
text
@d45 2
a46 1
get_args(int argc, register char **argv)
d84 3
a86 1
main(int argc, char **argv)
@


11.3
log
@*- get rid of warnings
@
text
@d21 1
a21 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/fb/fbclear.c,v 11.2 2000/08/24 03:58:28 mike Exp $ (BRL)";
d45 1
a45 2
get_args( argc, argv )
register char **argv;
d83 1
a83 3
main(argc, argv)
int argc;
char **argv;
@


11.2
log
@
const RCSid
@
text
@d21 1
a21 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/fb/fbclear.c,v 11.1 1995/01/04 10:09:11 mike Rel4_4 $ (BRL)";
d44 1
d83 1
@


11.1
log
@Release_4.4
@
text
@d21 1
a21 1
static char RCSid[] = "@@(#)$Header: /m/cad/fb/RCS/fbclear.c,v 10.2 94/08/23 18:49:02 gdurf Exp $ (BRL)";
@


10.2
log
@Added includes, factored ifdefs
@
text
@d21 1
a21 1
static char RCSid[] = "@@(#)$Header: /m/cad/fb/RCS/fbclear.c,v 10.1 1991/10/12 06:46:18 mike Rel4_0 gdurf $ (BRL)";
@


10.1
log
@Release_4.0
@
text
@d21 1
a21 1
static char RCSid[] = "@@(#)$Header: /n/wolf/m/cad/fb/RCS/fbclear.c,v 9.5 91/08/25 03:19:01 butler Exp $ (BRL)";
d24 2
d27 3
a30 4

extern int	getopt();
extern char	*optarg;
extern int	optind;
@


9.5
log
@changed wording on zoom/colormap notices
@
text
@d21 1
a21 1
static char RCSid[] = "@@(#)$Header: /n/wolf/m/cad/fb/RCS/fbclear.c,v 9.4 91/06/18 13:30:51 mmark Exp $ (BRL)";
@


9.4
log
@fixed usage
@
text
@d21 1
a21 1
static char RCSid[] = "@@(#)$Header: /m/cad/util/RCS/fbclear.c,v 9.3 91/01/10 22:24:30 mike Exp $ (BRL)";
d106 1
a106 1
				fprintf(stderr, "fbclear: NOTE: non-linear colormap in effect.  -c flag can correct this.\n");
d111 1
a111 1
			fprintf(stderr, "fbclear:  NOTE: framebuffer is zoomed.  -c can correct this.\n");
@


9.3
log
@The sense of the -c flag has been reversed.
@
text
@d21 1
a21 1
static char RCSid[] = "@@(#)$Header: /m/cad/util/RCS/fbclear.c,v 9.2 90/12/12 01:17:57 phil Exp $ (BRL)";
d41 1
a41 1
	[-S squarescrsize] [-W scr_width] [-N scr_height] [r g b]\n";
@


9.2
log
@Added single gray_value mode, and resetting of pan and zoom.
New -c flag clear only the color planes and leaves the cmap, pan,
and zoom alone.
@
text
@d21 1
a21 1
static char RCSid[] = "@@(#)$Header: /m/cad/util/RCS/fbclear.c,v 9.1 89/05/19 06:08:37 mike Rel3_5 $ (BRL)";
d35 1
a35 1
static int	clear_only = 0;
d56 1
a56 1
			clear_only++;
d97 2
a98 2
	if( !clear_only ) {
		if( fb_wmap( fbp, COLORMAP_NULL ) == -1 )
d100 13
a112 1
		(void)fb_view( fbp, fb_getwidth(fbp)/2, fb_getheight(fbp)/2, 1, 1 );
@


9.1
log
@Release_3.5
@
text
@d21 1
a21 1
static char RCSid[] = "@@(#)$Header: fbclear.c,v 8.2 89/03/09 05:22:16 mike Exp $ (BRL)";
d35 1
a38 1

d40 1
a40 1
Usage: fbclear [-h] [-F framebuffer]\n\
d48 1
a48 1
	while ( (c = getopt( argc, argv, "hF:s:w:n:S:W:N:" )) != EOF )  {
d54 4
a84 1

d97 5
a101 2
	if( fb_wmap( fbp, COLORMAP_NULL ) == -1 )
		exit(3);
d103 1
a103 3
	if( optind+2 >= argc )  {
		fb_clear( fbp, PIXEL_NULL );
	} else {
d109 9
@


8.2
log
@Changed to using getopt(), mostly for -F flag.
@
text
@d21 1
a21 1
static char RCSid[] = "@@(#)$Header: fbclear.c,v 8.1 88/10/05 00:41:19 mike Locked $ (BRL)";
@


8.1
log
@Release_3.0
@
text
@d21 1
a21 1
static char RCSid[] = "@@(#)$Header: fbclear.c,v 7.1 87/11/03 00:06:58 mike Rel $ (BRL)";
d27 3
a29 2
FBIO	*fbp;
int	fbsize = 0;		/* Use FB's "default" size */
d31 5
d38 39
d78 2
a79 2
char	**argv;
int	argc;
d81 4
a84 5
	if( argc > 1 && strcmp (argv[1], "-h") == 0 )
	{
		fbsize = 1024;
		argv++;
		argc--;
d86 14
a99 12
	if( argc != 4 && argc > 1 )
	{
		(void) fprintf( stderr, "Usage:  fbclear [r g b]\n" );
		return	1;
	}
	if(	(fbp = fb_open( NULL, fbsize, fbsize )) == NULL
	    ||	fb_wmap( fbp, COLORMAP_NULL ) == -1
	    )
	{
		return	1;
	}
	if( argc == 4 )  { 
d101 3
a103 3
		pixel[RED] = (u_char) atoi( argv[1] );
		pixel[GRN] = (u_char) atoi( argv[2] );
		pixel[BLU] = (u_char) atoi( argv[3] );
a104 2
	} else {
		fb_clear( fbp, PIXEL_NULL );
d106 2
a107 1
	return	fb_close( fbp ) == -1;
@


7.1
log
@Release 2.3
@
text
@d21 1
a21 1
static char RCSid[] = "@@(#)$Header: fbclear.c,v 6.1 87/07/11 08:10:08 mike Rel $ (BRL)";
@


6.1
log
@Release 2.0
@
text
@d21 1
a21 1
static char RCSid[] = "@@(#)$Header: fbclear.c,v 5.1 87/06/24 22:38:08 mike Rel $ (BRL)";
@


5.1
log
@Release 1.24
@
text
@d21 1
a21 1
static char RCSid[] = "@@(#)$Header: fbclear.c,v 4.3 87/02/13 00:40:41 mike Exp $ (BRL)";
@


4.3
log
@Release 1.20 -- First Formal Release
@
text
@d21 1
a21 1
static char RCSid[] = "@@(#)$Header: fbclear.c,v 4.2 87/01/06 09:24:33 mike Rel1 $ (BRL)";
@


4.2
log
@Changel to clear default size fb by default.
@
text
@d21 1
a21 1
static char RCSid[] = "@@(#)$Header: fbclear.c,v 4.1 86/12/29 03:12:43 mike Locked $ (BRL)";
@


4.1
log
@BRL CAD Distribution Release 1.10
@
text
@d21 1
a21 1
static char RCSid[] = "@@(#)$Header: fbclear.c,v 1.9 86/10/25 10:36:43 phil Exp $ (BRL)";
d28 1
a28 1
int	fbsize = 512;
@


1.9
log
@RGBpixel conversion
@
text
@d21 1
a21 1
static char RCSid[] = "@@(#)$Header: fbclear.c,v 1.8 86/10/03 05:53:46 phil Locked $ (BRL)";
@


1.8
log
@Adapted to new libfb.
@
text
@d21 1
a21 1
static char RCSid[] = "@@(#)$Header$ (BRL)";
d54 5
a58 5
		static Pixel	pixel;
		pixel.red = (u_char) atoi( argv[1] );
		pixel.green = (u_char) atoi( argv[2] );
		pixel.blue = (u_char) atoi( argv[3] );
		fb_clear( fbp, &pixel );
@


1.7
log
@Updated #includes for new conventions
@
text
@d2 20
a21 9
	SCCS id:	@@(#) fbclear.c	1.6
	Last edit: 	6/16/86 at 16:53:04	G S M
	Retrieved: 	8/13/86 at 03:12:23
	SCCS archive:	/m/cad/fb_utils/RCS/s.fbclear.c

*/
#if ! defined( lint )
static
char	sccsTag[] = "@@(#) fbclear.c	1.6	last edit 6/16/86 at 16:53:04";
d27 3
a30 2
/*
			F B C L E A R . C
a31 10
	This program is intended to be used to clear a frame buffer, quickly.
	The special FBC clear-screen command is used, for speed (unless a
	non-black color is specified).

	Mike Muuss, BRL, 10/27/83.

	Conversion to generic frame buffer utility using libfb(3).
	In the process, the name has been changed to fbclear from ikclear.
	Gary S. Moss, BRL. 03/12/85
 */
d37 2
a38 2
		{
		fbsetsize( 1024 );
d41 1
a41 1
		}
d43 1
a43 1
		{
d46 5
a50 5
		}
	if(	fbopen( NULL, APPEND ) == -1
	    ||	fb_wmap( (ColorMap *) NULL ) == -1
		)
		{
d52 3
a54 3
		}
	if( argc == 4 )
		{ static Pixel	pixel;
d58 3
a60 3
		fbsetbackground( &pixel );
		}
	return	fbclear() == -1;
d62 2
@


1.6
log
@Ready for distribution.
@
text
@d12 1
d14 2
a15 1
#include <fb.h>
d36 1
a36 1
		setfbsize( 1024 );
d56 1
a56 1
		setbackground( &pixel );
@


1.5
log
@All utilities seem to work with the Ikonas, will test with 
UNIX files next.
@
text
@d2 3
a4 3
	SCCS id:	@@(#) fbclear.c	1.5
	Last edit: 	3/14/85 at 17:58:06	G S M
	Retrieved: 	8/13/86 at 03:12:17
d10 1
a10 1
char	sccsTag[] = "@@(#) fbclear.c	1.5	last edit 3/14/85 at 17:58:06";
a12 1
#include <std.h>
d14 1
@


1.4
log
@fbclear, fbcmap, fbgrid, fbzoom, fb-rle, rle-fb look good.
@
text
@d2 3
a4 3
	SCCS id:	@@(#) fbclear.c	1.4
	Last edit: 	3/13/85 at 22:13:39	G S M
	Retrieved: 	8/13/86 at 03:12:09
d10 1
a10 1
char	sccsTag[] = "@@(#) fbclear.c	1.4	last edit 3/13/85 at 22:13:39";
d12 1
a12 1
2#include <stdio.h>
@


1.3
log
@Change names to fb*
@
text
@d2 3
a4 3
	SCCS id:	@@(#) fbclear.c	1.3
	Last edit: 	3/13/85 at 19:03:10	G S M
	Retrieved: 	8/13/86 at 03:12:03
d10 1
a10 1
char	sccsTag[] = "@@(#) fbclear.c	1.3	last edit 3/13/85 at 19:03:10";
d12 2
a13 1
#include <stdio.h>
a14 1
typedef unsigned char	u_char;
d16 11
a26 9
 *			I K C L E A R . C
 *
 * This program is intended to be used to clear the screen of
 * the Ikonas display, quickly.
 *
 * The special FBC clear-screen command is used, for speed.
 *
 * Mike Muuss, BRL, 10/27/83.
 * Gary S. Moss, BRL. 03/12/85	Modified to use libfb(3).
a27 2
static int	hires = 0;

a33 1
		hires++;
d40 1
a40 1
		(void) fprintf( stderr, "Usage:  ikclear [r g b]\n" );
d52 2
a53 2
		pixel.blue = (u_char) atoi( argv[2] );
		pixel.green = (u_char) atoi( argv[3] );
@


1.2
log
@Put a slowish implementation of setbackground into the Ikonas 
support.  This allows setbackground to influence fbclear.
@
text
@d2 3
a4 3
	SCCS id:	@@(#) fbclear.c	1.2
	Last edit: 	3/12/85 at 21:55:51	G S M
	Retrieved: 	8/13/86 at 03:11:57
d10 1
a10 1
char	sccsTag[] = "@@(#) fbclear.c	1.2	last edit 3/12/85 at 21:55:51";
@


1.1
log
@Initial revision
@
text
@d2 14
d24 1
d26 1
a26 2
int ikfd;
int ikhires = 0;
d32 4
a35 9
	int	red, green, blue;

	ikopen();

	ikclear();
	load_map(1,0,0,0);		/* standard color map */

	if (argc > 1 && strcmp (argv[1], "-h") == 0) {
		ikhires++;
a37 11
	}
	if (argc == 4) {
		red = atoi(argv[1]);
		blue = atoi(argv[2]);
		green = atoi(argv[3]);

		if (red < 0 || red > 255
		  || blue < 0 || blue > 255
		  || green < 0 || green > 255) {
		  	printf ("ikclear: bad color value\n");
		  	exit (99);
d39 4
a42 30
		fillscreen(red, green, blue);
	} else if (argc > 1) {
		printf ("Usage:  ikclear [r g b]\n");
		exit (9);
	}
	exit (0);
}

fillscreen(r, g, b)
int	r, g, b;
{
	char	buf[1024*4*4];		/* 4 lines hires, 8 lines lores */
	char	*buflim;
	register char *cp;
	register int ycnt;

	cp = buf;
	buflim = buf + sizeof(buf);
	while (cp < buflim) {
		*cp++ = r;
		*cp++ = b;
		*cp++ = g;
		*cp++ = 0;
	}
	lseek (ikfd, 0L, 0);
	ycnt = (ikhires ? (1024/4) : (512/8));
	for (; ycnt > 0; --ycnt) {
		if (write (ikfd, buf, sizeof (buf)) < 0) {
			perror ("ikclear: write");
			exit (98);
d44 14
a58 1
}
@
