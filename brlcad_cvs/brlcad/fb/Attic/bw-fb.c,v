head	11.12;
access;
symbols
	ansi-20040405-merged:11.8.2.3
	postmerge-20040405-ansi:11.10
	premerge-20040404-ansi:11.9
	postmerge-autoconf:11.9
	autoconf-freeze:11.8.10.2
	premerge-autoconf:11.9
	ansi-20040316-freeze:11.8.2.2
	postmerge-20040315-windows:11.9
	premerge-20040315-windows:11.9
	windows-20040315-freeze:11.8.4.1
	autoconf-20031203:11.8
	autoconf-20031202:11.8
	autoconf-branch:11.8.0.10
	phong-branch:11.8.0.8
	photonmap-branch:11.8.0.6
	rel-6-1-DP:11.8
	windows-branch:11.8.0.4
	rel-6-0-2:11.5
	ansi-branch:11.8.0.2
	rel-6-0-1-branch:11.5.0.2
	hartley-6-0-post:11.7
	hartley-6-0-pre:11.5
	rel-6-0-1:11.5
	rel-6-0:11.5
	rel-5-4:11.3
	offsite-5-3-pre:11.4
	rel-5-3:11.3
	rel-5-2:11.3
	rel-5-1-branch:11.3.0.2
	rel-5-1:11.3
	rel-5-0:11.3
	rel-5-0-beta:11.3
	rel-4-5:11.2
	ctj-4-5-post:11.2
	ctj-4-5-pre:11.2
	rel-4-4:11.1
	rel-4-0:10.1
	rel-3-5:9.1
	rel-3-0:8.1
	rel-2-3:7.1
	rel-2-0:6.1
	rel-1-24:5.1
	rel-1-20:4.2
	rel-1-10:4.1;
locks; strict;
comment	@ * @;


11.12
date	2004.05.24.04.13.25;	author morrison;	state dead;
branches;
next	11.11;

11.11
date	2004.05.10.15.30.42;	author erikg;	state Exp;
branches;
next	11.10;

11.10
date	2004.04.05.07.49.23;	author morrison;	state Exp;
branches;
next	11.9;

11.9
date	2004.02.02.17.39.01;	author morrison;	state Exp;
branches;
next	11.8;

11.8
date	2002.08.20.17.07.23;	author jra;	state Exp;
branches
	11.8.2.1
	11.8.4.1
	11.8.10.1;
next	11.7;

11.7
date	2002.08.16.17.37.27;	author morrison;	state Exp;
branches;
next	11.6;

11.6
date	2002.08.15.20.54.36;	author hartley;	state Exp;
branches;
next	11.5;

11.5
date	2001.04.12.17.44.07;	author bparker;	state Exp;
branches;
next	11.4;

11.4
date	2000.08.24.03.58.20;	author mike;	state Exp;
branches;
next	11.3;

11.3
date	98.06.27.04.29.14;	author mike;	state Exp;
branches;
next	11.2;

11.2
date	96.12.31.17.42.58;	author jra;	state Exp;
branches;
next	11.1;

11.1
date	95.01.04.10.08.54;	author mike;	state Rel4_4;
branches;
next	10.4;

10.4
date	94.10.12.15.55.13;	author jra;	state Exp;
branches;
next	10.3;

10.3
date	94.08.11.19.08.57;	author gdurf;	state Exp;
branches;
next	10.2;

10.2
date	94.08.11.15.05.32;	author mike;	state Exp;
branches;
next	10.1;

10.1
date	91.10.12.06.46.00;	author mike;	state Rel4_0;
branches;
next	9.2;

9.2
date	90.11.03.14.36.26;	author mike;	state Exp;
branches;
next	9.1;

9.1
date	89.05.19.06.07.19;	author mike;	state Rel3_5;
branches;
next	8.1;

8.1
date	88.10.05.00.40.08;	author mike;	state Rel3_0;
branches;
next	7.2;

7.2
date	88.05.22.23.52.06;	author mike;	state Exp;
branches;
next	7.1;

7.1
date	87.11.03.00.04.48;	author mike;	state Rel;
branches;
next	6.1;

6.1
date	87.07.11.08.08.21;	author mike;	state Rel;
branches;
next	5.1;

5.1
date	87.06.24.22.36.01;	author mike;	state Rel;
branches;
next	4.2;

4.2
date	87.02.13.00.36.56;	author mike;	state Exp;
branches;
next	4.1;

4.1
date	86.12.29.03.11.42;	author mike;	state Rel1;
branches;
next	1.18;

1.18
date	86.11.28.19.03.35;	author mike;	state Exp;
branches;
next	1.17;

1.17
date	86.11.26.08.36.03;	author mike;	state Exp;
branches;
next	1.16;

1.16
date	86.11.26.04.41.30;	author phil;	state Exp;
branches;
next	1.15;

1.15
date	86.11.24.19.06.02;	author kermit;	state Exp;
branches;
next	1.14;

1.14
date	86.11.14.23.12.05;	author phil;	state Exp;
branches;
next	1.13;

1.13
date	86.11.13.01.22.59;	author phil;	state Exp;
branches;
next	1.12;

1.12
date	86.10.30.22.26.39;	author phil;	state Exp;
branches;
next	1.11;

1.11
date	86.10.25.16.46.33;	author phil;	state Exp;
branches;
next	1.10;

1.10
date	86.10.25.15.00.06;	author phil;	state Exp;
branches;
next	1.9;

1.9
date	86.10.13.03.02.28;	author mike;	state Exp;
branches;
next	1.8;

1.8
date	86.10.13.02.51.10;	author mike;	state Exp;
branches;
next	1.7;

1.7
date	86.10.06.21.07.29;	author mike;	state Exp;
branches;
next	1.6;

1.6
date	86.10.03.08.00.22;	author mike;	state Exp;
branches;
next	1.5;

1.5
date	86.10.03.06.02.34;	author phil;	state Exp;
branches;
next	1.4;

1.4
date	86.10.03.04.54.01;	author phil;	state Exp;
branches;
next	1.3;

1.3
date	86.09.03.21.28.40;	author phil;	state BRL;
branches;
next	1.2;

1.2
date	86.08.15.00.02.55;	author phil;	state BRL;
branches;
next	1.1;

1.1
date	86.08.14.21.51.02;	author mike;	state Exp;
branches;
next	;

11.8.2.1
date	2002.09.19.18.00.38;	author morrison;	state Exp;
branches;
next	11.8.2.2;

11.8.2.2
date	2002.09.25.19.39.24;	author morrison;	state Exp;
branches;
next	11.8.2.3;

11.8.2.3
date	2004.03.17.21.16.04;	author morrison;	state Exp;
branches;
next	;

11.8.4.1
date	2004.03.11.23.40.38;	author morrison;	state Exp;
branches;
next	;

11.8.10.1
date	2004.02.12.19.40.45;	author erikg;	state Exp;
branches;
next	11.8.10.2;

11.8.10.2
date	2004.03.15.13.28.05;	author erikg;	state Exp;
branches;
next	;


desc
@BW image to frame buffer
@


11.12
log
@moved to src/fb/
@
text
@/*
 *			B W - F B . C
 *
 * Write a black and white (.bw) image to the framebuffer.
 * From an 8-bit/pixel, pix order file (i.e. Bottom UP, left to right).
 *
 * This allows an offset into both the display and source file.
 * The color planes to be loaded are also selectable.
 *
 *  Author -
 *	Phillip Dykstra
 *	15 Aug 1985
 *  
 *  Source -
 *	SECAD/VLD Computing Consortium, Bldg 394
 *	The U. S. Army Ballistic Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5066
 *  
 *  Copyright Notice -
 *	This software is Copyright (C) 1986-2004 by the United States Army.
 *	All rights reserved.
 */
#ifndef lint
static const char RCSid[] = "@@(#)$Header: /n/xoff/cvs/brlcad/fb/bw-fb.c,v 11.11 2004/05/10 15:30:42 erikg Exp $ (BRL)";
#endif

#ifdef HAVE_CONFIG_H
# include "config.h"
#endif



#include <stdio.h>

#include "machine.h"
#include "externs.h"		/* For getopt() and friends */
#include "fb.h"

/* defined in libbn/asize.c */
extern int bn_common_file_size(int *, int *, const char *, int);

int mread(int fd, register char *bp, register int num);
int skipbytes(int fd, off_t num);

#define	MAX_LINE	(16*1024)	/* Largest output scan line length */

static char	ibuf[MAX_LINE];
static RGBpixel obuf[MAX_LINE];

static int	fileinput = 0;		/* file of pipe on input? */
static int	autosize = 0;		/* !0 to autosize input */

static int	file_width = 512;	/* default input width */
static int	file_height = 512;	/* default input height */
static int	scr_width = 0;		/* screen tracks file if not given */
static int	scr_height = 0;
static int	file_xoff, file_yoff;
static int	scr_xoff, scr_yoff;
static int	clear = 0;
static int	zoom = 0;
static int	inverse = 0;
static int	redflag   = 0;
static int	greenflag = 0;
static int	blueflag  = 0;

static char	*framebuffer = NULL;
static char	*file_name;
static int	infd;
static FBIO	*fbp;

static char	usage[] = "\
Usage: bw-fb [-a -h -i -c -z -R -G -B] [-F framebuffer]\n\
	[-s squarefilesize] [-w file_width] [-n file_height]\n\
	[-x file_xoff] [-y file_yoff] [-X scr_xoff] [-Y scr_yoff]\n\
	[-S squarescrsize] [-W scr_width] [-N scr_height] [file.bw]\n";
int
get_args(int argc, register char **argv)
{
	register int c;

	while ( (c = getopt( argc, argv, "ahiczRGBF:s:w:n:x:y:X:Y:S:W:N:" )) != EOF )  {
		switch( c )  {
		case 'a':
			autosize = 1;
			break;
		case 'h':
			/* high-res */
			file_height = file_width = 1024;
			scr_height = scr_width = 1024;
			autosize = 0;
			break;
		case 'i':
			inverse = 1;
			break;
		case 'c':
			clear = 1;
			break;
		case 'z':
			zoom = 1;
			break;
		case 'R':
			redflag = 1;
			break;
		case 'G':
			greenflag = 1;
			break;
		case 'B':
			blueflag = 1;
			break;
		case 'F':
			framebuffer = optarg;
			break;
		case 's':
			/* square file size */
			file_height = file_width = atoi(optarg);
			autosize = 0;
			break;
		case 'w':
			file_width = atoi(optarg);
			autosize = 0;
			break;
		case 'n':
			file_height = atoi(optarg);
			autosize = 0;
			break;
		case 'x':
			file_xoff = atoi(optarg);
			break;
		case 'y':
			file_yoff = atoi(optarg);
			break;
		case 'X':
			scr_xoff = atoi(optarg);
			break;
		case 'Y':
			scr_yoff = atoi(optarg);
			break;
		case 'S':
			scr_height = scr_width = atoi(optarg);
			break;
		case 'W':
			scr_width = atoi(optarg);
			break;
		case 'N':
			scr_height = atoi(optarg);
			break;

		default:		/* '?' */
			return(0);
		}
	}

	if( optind >= argc )  {
		if( isatty(fileno(stdin)) )
			return(0);
		file_name = "-";
		infd = 0;
	} else {
		file_name = argv[optind];
		if( (infd = open(file_name, 0)) < 0 )  {
			(void)fprintf( stderr,
				"bw-fb: cannot open \"%s\" for reading\n",
				file_name );
			return(0);
		}
		fileinput++;
	}

	if ( argc > ++optind )
		(void)fprintf( stderr, "bw-fb: excess argument(s) ignored\n" );

	return(1);		/* OK */
}

int
main(int argc, char **argv)
{
	register int	x, y, n;
	int	xout, yout;		/* number of sceen output lines */
	int	xstart, xskip;

	if ( !get_args( argc, argv ) )  {
		(void)fputs(usage, stderr);
		exit( 1 );
	}

	/* autosize input? */
	if( fileinput && autosize ) {
		int	w, h;
		if( bn_common_file_size(&w, &h, file_name, 1) ) {
			file_width = w;
			file_height = h;
		} else {
			fprintf(stderr, "bw-fb: unable to autosize\n");
		}
	}

	/* If no color planes were selected, load them all */
	if( redflag == 0 && greenflag == 0 && blueflag == 0 )
		redflag = greenflag = blueflag = 1;

	/* If screen size was not set, track the file size */
	if( scr_width == 0 )
		scr_width = file_width;
	if( scr_height == 0 )
		scr_height = file_height;

	/* Open Display Device */
	if ((fbp = fb_open( framebuffer, scr_width, scr_height )) == NULL ) {
		fprintf( stderr, "fb_open failed\n");
		exit( 3 );
	}

	/* Get the screen size we were given */
	scr_width = fb_getwidth(fbp);
	scr_height = fb_getheight(fbp);

	/* compute pixels output to screen */
	if( scr_xoff < 0 )
	{
		xout = scr_width + scr_xoff;
		xskip = (-scr_xoff);
		xstart = 0;
	}
	else
	{
		xout = scr_width - scr_xoff;
		xskip = 0;
		xstart = scr_xoff;
	}
	if( xout < 0 ) xout = 0;
	if( xout > (file_width-file_xoff) ) xout = (file_width-file_xoff);

	if( inverse )
		scr_yoff = (-scr_yoff);

	yout = scr_height - scr_yoff;
	if( yout < 0 ) yout = 0;
	if( yout > (file_height-file_yoff) ) yout = (file_height-file_yoff);
	if( xout > MAX_LINE ) {
		fprintf( stderr, "bw-fb: can't output %d pixel lines.\n", xout );
		exit( 2 );
	}

	if( clear ) {
		fb_clear( fbp, PIXEL_NULL );
	}
	if( zoom ) {
		/* Zoom in, and center the file */
		fb_zoom( fbp, scr_width/xout, scr_height/yout );
		if( inverse )
			fb_window( fbp, scr_xoff+xout/2, scr_height-1-(scr_yoff+yout/2) );
		else
			fb_window( fbp, scr_xoff+xout/2, scr_yoff+yout/2 );
	}

	/* Test for simplest case */
	if( inverse == 0 &&
		file_xoff == 0 && file_yoff == 0 &&
		scr_xoff+file_width <= fb_getwidth(fbp)
	)  {
		unsigned char	*buf;
		int		npix = file_width * yout;

		if( (buf = malloc(npix)) == NULL )  {
			perror("bw-fb malloc");
			goto general;
		}
		n = mread( infd, (char *)buf, npix );
		if( n != npix )  {
			fprintf(stderr, "bw-fb: read got %d, s/b %d\n", n, npix );
			if( n <= 0 )  exit(7);
			npix = n;	/* show what we got */
		}
		n = (npix+file_width-1)/file_width;	/* num lines got */
		n = fb_bwwriterect(fbp, scr_xoff, scr_yoff, file_width, n, buf);
		if( npix != n )  {
			fprintf(stderr, "bw-fb: fb_bwwriterect() got %d, s/b %d\n", n, npix );
			exit(8);
		}
		fb_close( fbp );
		exit(0);
	}

	/* Begin general case */
general:
	if( file_yoff != 0 ) skipbytes( infd, file_yoff*file_width );

	for( y = scr_yoff; y < scr_yoff + yout; y++ ) {
		if( y < 0 || y >= scr_height )
		{
			skipbytes( infd , file_width );
			continue;
		}
		if( file_xoff+xskip != 0 )
			skipbytes( infd, file_xoff+xskip );
		n = mread( infd, &ibuf[0], xout );
		if( n <= 0 ) break;
		/*
		 * If we are not loading all color planes, we have
		 * to do a pre-read.
		 */
		if( redflag == 0 || greenflag == 0 || blueflag == 0 ) {
			if( inverse )
				n = fb_read( fbp, scr_xoff, scr_height-1-y,
					(unsigned char *)obuf, xout );
			else
				n = fb_read( fbp, scr_xoff, y,
					(unsigned char *)obuf, xout );
			if( n < 0 )  break;
		}
		for( x = 0; x < xout; x++ ) {
			if( redflag )
				obuf[x][RED] = ibuf[x];
			if( greenflag )
				obuf[x][GRN] = ibuf[x];
			if( blueflag )
				obuf[x][BLU] = ibuf[x];
		}
		if( inverse )
			fb_write( fbp, xstart, scr_height-1-y, (unsigned char *)obuf, xout );
		else
			fb_write( fbp, xstart, y, (unsigned char *)obuf, xout );

		/* slop at the end of the line? */
		if( file_xoff+xskip+xout < file_width )
			skipbytes( infd, file_width-file_xoff-xskip-xout );
	}

	fb_close( fbp );
	exit( 0 );
}

/*
 * Throw bytes away.  Use reads into ibuf buffer if a pipe, else seek.
 */
int
skipbytes(int fd, off_t num)
{
	int	n, try;

	if( fileinput ) {
		(void)lseek( fd, num, 1 );
		return 0;
	}
	
	while( num > 0 ) {
		try = num > MAX_LINE ? MAX_LINE : num;
		n = read( fd, ibuf, try );
		if( n <= 0 ){
			return -1;
		}
		num -= n;
	}
	return	0;
}

/*
 * "Multiple try" read.
 *  Will keep reading until either an error occurs
 *  or the requested number of bytes is read.  This
 *  is important for pipes.
 */
int
mread(int fd, register char *bp, register int num)
{
	register int	n;
	int	count;

	count = 0;

	while( num > 0 ) {
		n = read( fd, bp, num );
		if( n < 0 )
			return	-1;
		if( n == 0 )
			return count;
		bp += n;
		count += n;
		num -= n;
	}
	return count;
}
@


11.11
log
@change conf.h to a wrapped config.h
@
text
@d24 1
a24 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/fb/bw-fb.c,v 11.10 2004/04/05 07:49:23 morrison Exp $ (BRL)";
@


11.10
log
@merge of ansi-6-0-branch into HEAD
@
text
@d24 1
a24 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
d27 5
a31 1
#include "conf.h"
@


11.9
log
@update copyright to include span through 2003
@
text
@d24 1
a24 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/fb/bw-fb.c,v 11.8 2002/08/20 17:07:23 jra Exp $ (BRL)";
d36 1
a36 1
extern int bn_common_file_size();
d38 2
a39 2
int mread();
int skipbytes();
d73 1
a73 2
get_args( argc, argv )
register char **argv;
d172 1
a172 2
main( argc, argv )
int argc; char **argv;
d265 1
a265 1
		n = mread( infd, buf, npix );
d334 1
a334 3
skipbytes( fd, num )
int	fd;
long	num;
d361 1
a361 4
mread( fd, bp, num )
int	fd;
register char	*bp;
register int	num;
@


11.8
log
@Restoration of entire source tree to Pre-Hartley state
@
text
@d20 1
a20 1
 *	This software is Copyright (C) 1986 by the United States Army.
d24 1
a24 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/fb/bw-fb.c,v 11.5 2001/04/12 17:44:07 bparker Exp $ (BRL)";
@


11.8.4.1
log
@sync to HEAD...
@
text
@d20 1
a20 1
 *	This software is Copyright (C) 1986-2004 by the United States Army.
d24 1
a24 1
static const char RCSid[] = "@@(#)$Header: /n/cad/c/CVS/brlcad/fb/bw-fb.c,v 11.9 2004/02/02 17:39:01 morrison Exp $ (BRL)";
@


11.8.10.1
log
@merge from HEAD
@
text
@d20 1
a20 1
 *	This software is Copyright (C) 1986-2004 by the United States Army.
d24 1
a24 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/fb/bw-fb.c,v 11.9 2004/02/02 17:39:01 morrison Exp $ (BRL)";
@


11.8.10.2
log
@merge from head
@
text
@d24 1
a24 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/fb/bw-fb.c,v 11.8.10.1 2004/02/12 19:40:45 erikg Exp $ (BRL)";
@


11.8.2.1
log
@Initial ANSIfication
@
text
@d24 1
a24 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/fb/bw-fb.c,v 11.8 2002/08/20 17:07:23 jra Exp $ (BRL)";
d36 1
a36 1
extern int bn_common_file_size(int *, int *, const char *, int);
d38 2
a39 2
int mread(int fd, register char *bp, register int num);
int skipbytes(int fd, off_t num);
d73 2
a74 1
get_args(int argc, register char **argv)
d173 2
a174 1
main(int argc, char **argv)
d267 1
a267 1
		n = mread( infd, (char *)buf, npix );
d336 3
a338 1
skipbytes(int fd, long int num)
d365 4
a368 1
mread(int fd, register char *bp, register int num)
@


11.8.2.2
log
@fixed compiler type consistency errors being reported
@
text
@d24 1
a24 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/fb/bw-fb.c,v 11.8.2.1 2002/09/19 18:00:38 morrison Exp $ (BRL)";
d334 1
a334 1
skipbytes(int fd, off_t num)
@


11.8.2.3
log
@sync branch with HEAD
@
text
@d20 1
a20 1
 *	This software is Copyright (C) 1986-2004 by the United States Army.
d24 1
a24 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
@


11.7
log
@fixed function declaration mismatch (from ansifying)
@
text
@d24 1
a24 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/fb/bw-fb.c,v 11.6 2002/08/15 20:54:36 hartley Exp $ (BRL)";
d36 1
a36 1
extern int bn_common_file_size(int *, int *, const char *, int);
d38 2
a39 2
int mread(int fd, register char *bp, register int num);
int skipbytes(int fd, long int num);
d73 2
a74 1
get_args(int argc, register char **argv)
d173 2
a174 1
main(int argc, char **argv)
d267 1
a267 1
		n = mread( infd, (char *)buf, npix );
d336 3
a338 1
skipbytes(int fd, long int num)
d365 4
a368 1
mread(int fd, register char *bp, register int num)
@


11.6
log
@Converted from K&R to ANSI C - RFH
@
text
@d24 1
a24 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/fb/bw-fb.c,v 11.5 2001/04/12 17:44:07 bparker Exp $ (BRL)";
d39 1
a39 1
int skipbytes(int fd, off_t num);
@


11.5
log
@*- get rid of warnings
@
text
@d24 1
a24 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/fb/bw-fb.c,v 11.4 2000/08/24 03:58:20 mike Exp $ (BRL)";
d36 1
a36 1
extern int bn_common_file_size();
d38 2
a39 2
int mread();
int skipbytes();
d73 1
a73 2
get_args( argc, argv )
register char **argv;
d172 1
a172 2
main( argc, argv )
int argc; char **argv;
d265 1
a265 1
		n = mread( infd, buf, npix );
d334 1
a334 3
skipbytes( fd, num )
int	fd;
long	num;
d361 1
a361 4
mread( fd, bp, num )
int	fd;
register char	*bp;
register int	num;
@


11.4
log
@
const RCSid
@
text
@d24 1
a24 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/fb/bw-fb.c,v 11.3 1998/06/27 04:29:14 mike Exp $ (BRL)";
d33 4
d38 2
a39 1
#include "fb.h"
d72 1
a72 1

d172 1
d335 1
d364 1
@


11.3
log
@Additions to LIBFB interface and remote framebuffer protocol to
read and write monochrome rectangles.
Particularly important for sending thermal images at high speed.
@
text
@d24 1
a24 1
static char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/fb/bw-fb.c,v 11.2 1996/12/31 17:42:58 jra Exp $ (BRL)";
@


11.2
log
@changed call to fb_common_file_size to bn_common_file_size.
@
text
@d24 1
a24 1
static char RCSid[] = "@@(#)$Header: /m/cad/fb/RCS/bw-fb.c,v 11.1 1995/01/04 10:08:54 mike Rel4_4 jra $ (BRL)";
d249 30
d300 2
a301 1
				n = fb_read( fbp, scr_xoff, y, (unsigned char *)obuf, xout );
@


11.1
log
@Release_4.4
@
text
@d24 1
a24 1
static char RCSid[] = "@@(#)$Header: /m/cad/fb/RCS/bw-fb.c,v 10.4 94/10/12 15:55:13 jra Exp $ (BRL)";
d182 1
a182 1
		if( fb_common_file_size(&w, &h, file_name, 1) ) {
@


10.4
log
@Fixed bug with negative value for -X option.
@
text
@d24 1
a24 1
static char RCSid[] = "@@(#)$Header: /m/cad/fb/RCS/bw-fb.c,v 10.3 94/08/11 19:08:57 gdurf Exp Locker: jra $ (BRL)";
@


10.3
log
@Added includes
@
text
@d24 1
a24 1
static char RCSid[] = "@@(#)$Header: /m/cad/fb/RCS/bw-fb.c,v 10.2 1994/08/11 15:05:32 mike Exp gdurf $ (BRL)";
d172 1
d211 12
a222 1
	xout = scr_width - scr_xoff;
d225 4
d252 7
a258 2
		if( file_xoff != 0 )
			skipbytes( infd, file_xoff );
d282 1
a282 1
			fb_write( fbp, scr_xoff, scr_height-1-y, (unsigned char *)obuf, xout );
d284 1
a284 1
			fb_write( fbp, scr_xoff, y, (unsigned char *)obuf, xout );
d287 2
a288 2
		if( xout < file_width-file_xoff )
			skipbytes( infd, file_width-file_xoff-xout );
@


10.2
log
@Reduced use of RGBpixel
Now use (unsigned char *)
@
text
@d24 1
a24 1
static char RCSid[] = "@@(#)$Header: /m/cad/fb/RCS/bw-fb.c,v 10.1 91/10/12 06:46:00 mike Rel4_0 Locker: mike $ (BRL)";
d27 2
d30 4
a34 4

extern int	getopt();
extern char	*optarg;
extern int	optind;
@


10.1
log
@Release_4.0
@
text
@d24 1
a24 1
static char RCSid[] = "@@(#)$Header: /m/cad/fb/RCS/bw-fb.c,v 9.2 90/11/03 14:36:26 mike Exp $ (BRL)";
d245 1
a245 1
					obuf, xout );
d247 1
a247 1
				n = fb_read( fbp, scr_xoff, y, obuf, xout );
d259 1
a259 1
			fb_write( fbp, scr_xoff, scr_height-1-y, obuf, xout );
d261 1
a261 1
			fb_write( fbp, scr_xoff, y, obuf, xout );
@


9.2
log
@Added Phil's autosize code, on -a flag
@
text
@d24 1
a24 1
static char RCSid[] = "@@(#)$Header: bw-fb.c,v 9.1 89/05/19 06:07:19 phil Locked $ (BRL)";
@


9.1
log
@Release_3.5
@
text
@d24 1
a24 1
static char RCSid[] = "@@(#)$Header: bw-fb.c,v 8.1 88/10/05 00:40:08 mike Rel3_0 $ (BRL)";
d40 1
d61 1
a61 1
Usage: bw-fb [-h -i -c -z -R -G -B] [-F framebuffer]\n\
d71 1
a71 1
	while ( (c = getopt( argc, argv, "hiczRGBF:s:w:n:x:y:X:Y:S:W:N:" )) != EOF )  {
d73 3
d80 1
d106 1
d110 1
d114 1
d174 11
@


8.1
log
@Release_3.0
@
text
@d24 1
a24 1
static char RCSid[] = "@@(#)$Header: bw-fb.c,v 7.2 88/05/22 23:52:06 mike Exp $ (BRL)";
@


7.2
log
@Removed colormap diddling.
@
text
@d24 1
a24 1
static char RCSid[] = "@@(#)$Header: bw-fb.c,v 7.1 87/11/03 00:04:48 mike Locked $ (BRL)";
@


7.1
log
@Release 2.3
@
text
@d24 1
a24 1
static char RCSid[] = "@@(#)$Header: bw-fb.c,v 6.1 87/07/11 08:08:21 mike Rel $ (BRL)";
a201 1
		fb_wmap( fbp, COLORMAP_NULL );
@


6.1
log
@Release 2.0
@
text
@d24 1
a24 1
static char RCSid[] = "@@(#)$Header: bw-fb.c,v 5.1 87/06/24 22:36:01 mike Rel $ (BRL)";
@


5.1
log
@Release 1.24
@
text
@d24 1
a24 1
static char RCSid[] = "@@(#)$Header: bw-fb.c,v 4.2 87/02/13 00:36:56 mike Exp $ (BRL)";
@


4.2
log
@Release 1.20 -- First Formal Release
@
text
@d24 1
a24 1
static char RCSid[] = "@@(#)$Header: bw-fb.c,v 4.1 86/12/29 03:11:42 mike Rel1 $ (BRL)";
@


4.1
log
@BRL CAD Distribution Release 1.10
@
text
@d24 1
a24 1
static char RCSid[] = "@@(#)$Header: bw-fb.c,v 1.18 86/11/28 19:03:35 mike Exp $ (BRL)";
@


1.18
log
@Made variables static, to prevent conflicts with frame buffer
libraries (like "clear" in SGI library).
@
text
@d24 1
a24 1
static char RCSid[] = "@@(#)$Header: bw-fb.c,v 1.17 86/11/26 08:36:03 mike Locked $ (BRL)";
@


1.17
log
@Fixed open error checking.
@
text
@d24 1
a24 1
static char RCSid[] = "@@(#)$Header: bw-fb.c,v 1.16 86/11/26 04:41:30 mike Locked $ (BRL)";
d36 2
a37 2
char	ibuf[MAX_LINE];
RGBpixel obuf[MAX_LINE];
d39 1
a39 1
int	fileinput = 0;		/* file of pipe on input? */
d41 12
a52 12
int	file_width = 512;	/* default input width */
int	file_height = 512;	/* default input height */
int	scr_width = 0;		/* screen tracks file if not given */
int	scr_height = 0;
int	file_xoff, file_yoff;
int	scr_xoff, scr_yoff;
int	clear = 0;
int	zoom = 0;
int	inverse = 0;
int	redflag   = 0;
int	greenflag = 0;
int	blueflag  = 0;
d54 4
a57 4
char	*framebuffer = NULL;
char	*file_name;
int	infd;
FBIO	*fbp;
d59 1
a59 1
char	usage[] = "\
@


1.16
log
@changed file_height default from infinite to 512.
made -h set both screen and file.
@
text
@d24 1
a24 1
static char RCSid[] = "@@(#)$Header: bw-fb.c,v 1.15 86/11/24 19:06:02 phil Locked $ (BRL)";
d142 1
a142 1
		if( (infd = open(file_name, 0)) == NULL )  {
@


1.15
log
@Added -F flag to allow selection of framebuffer.
@
text
@d24 1
a24 1
static char RCSid[] = "@@(#)$Header: bw-fb.c,v 1.14 86/11/14 23:12:05 kermit Locked $ (BRL)";
a33 1
#define	INFIN		999999		/* An "infinite" file size */
d42 1
a42 1
int	file_height = INFIN;	/* default input height */
d74 1
d175 1
a175 1
	if( scr_height == 0 && file_height != INFIN )
a203 5
	/*
	 * We use Xout in the Y values if file_height == INFIN since we
	 * assume files have infinite height! (thus yout is always
	 * scr_height-scr_yoff)
	 */
d205 6
a210 14
		/* Zoom in, in the center of view */
		if( file_height == INFIN ) {
			fb_zoom( fbp, scr_width/xout, scr_height/xout );
			if( inverse )
				fb_window( fbp, scr_xoff+xout/2, scr_height-1-(scr_yoff+xout/2) );
			else
				fb_window( fbp, scr_xoff+xout/2, scr_yoff+xout/2 );
		} else {
			fb_zoom( fbp, scr_width/xout, scr_height/yout );
			if( inverse )
				fb_window( fbp, scr_xoff+xout/2, scr_height-1-(scr_yoff+yout/2) );
			else
				fb_window( fbp, scr_xoff+xout/2, scr_yoff+yout/2 );
		}
@


1.14
log
@arg convention
@
text
@d24 1
a24 1
static char RCSid[] = "@@(#)$Header: bw-fb.c,v 1.13 86/11/13 01:22:59 phil Locked $ (BRL)";
d55 1
d61 1
a61 1
Usage: bw-fb [-h -i -c -z -R -G -B]\n\
d71 1
a71 1
	while ( (c = getopt( argc, argv, "hiczRGBs:w:n:x:y:X:Y:S:W:N:" )) != EOF )  {
d95 3
d179 1
a179 1
	if ((fbp = fb_open( NULL, scr_width, scr_height )) == NULL ) {
@


1.13
log
@removed stdio, generalized positioning, added pipe support.
@
text
@d24 1
a24 1
static char RCSid[] = "@@(#)$Header: bw-fb.c,v 1.12 86/10/30 22:26:39 phil Exp $ (BRL)";
d61 1
a61 1
	[-s squarefilesize] [-w file_width]\n\
d63 1
a63 1
	[-S squarescrsize] [-W scr_width] [-H scr_height] [file.bw]\n";
d70 1
a70 1
	while ( (c = getopt( argc, argv, "hiczRGBs:w:x:y:X:Y:S:W:H:" )) != EOF )  {
d101 3
d122 1
a122 1
		case 'H':
d201 1
a201 1
	 * XXX - we use Xout in the Y values since we currently always
d207 13
a219 5
		fb_zoom( fbp, scr_width/xout, scr_height/xout );
		if( inverse )
			fb_window( fbp, scr_xoff+xout/2, scr_height-1-(scr_yoff+xout/2) );
		else
			fb_window( fbp, scr_xoff+xout/2, scr_yoff+xout/2 );
@


1.12
log
@return 1
@
text
@d24 1
a24 1
static char RCSid[] = "@@(#)$Header: bw-fb.c,v 1.11 86/10/25 16:46:33 phil Locked $ (BRL)";
d34 2
a35 1
#define	MAXSCAN	(16*1024)	/* Largest input file scan line length */
d37 2
a38 1
FBIO	*fbp;
d40 1
a40 2
char	ibuf[MAXSCAN];		/* Allow us to see parts of big files */
RGBpixel obuf[MAXSCAN];
d42 5
a46 2
int	height;				/* input height */
int	width;				/* input width */
a47 1
int	file_xoff, file_yoff;
d49 1
d55 3
a57 2
char *file_name;
FILE *infp;
d60 4
a63 3
Usage: bw-fb [-h -i -c -r -g -b]\n\
	[-x scr_xoff] [-y scr_yoff] [-X file_xoff] [-Y file_yoff]\n\
	[-s squaresize] [-W width] [-H height] [file.bw]\n";
d70 1
a70 1
	while ( (c = getopt( argc, argv, "hicrgbx:y:X:Y:s:W:H:" )) != EOF )  {
d74 1
a74 1
			height = width = 1024;
d82 4
a85 1
		case 'r':
d88 1
a88 1
		case 'g':
d91 1
a91 1
		case 'b':
d94 7
d102 1
a102 1
			scr_xoff = atoi(optarg);
d105 1
a105 1
			scr_yoff = atoi(optarg);
d108 1
a108 1
			file_xoff = atoi(optarg);
d111 1
a111 1
			file_yoff = atoi(optarg);
d113 2
a114 3
		case 's':
			/* square size */
			height = width = atoi(optarg);
d117 1
a117 1
			width = atoi(optarg);
d120 1
a120 1
			height = atoi(optarg);
d132 1
a132 1
		infp = stdin;
d135 1
a135 1
		if( (infp = fopen(file_name, "r")) == NULL )  {
d141 1
a155 2
	height = width = 512;		/* Defaults */

d165 5
a169 5
	/* Check the scan line size */
	if( width-file_xoff > MAXSCAN ) {
		fprintf( stderr, "bw-fb: not compiled for files that wide.\n" );
		exit( 2 );
	}
d172 1
a172 1
	if ((fbp = fb_open( NULL, width, height )) == NULL ) {
d177 6
a182 1
	xout = fb_getwidth(fbp) - scr_xoff;
d184 2
a185 2
	if( xout > width ) xout = width;
	yout = fb_getheight(fbp) - scr_yoff;
d187 5
a191 1
	if( yout > height ) yout = height;
d193 17
a209 1
	if( clear ) fb_clear(fbp, PIXEL_NULL);
d211 1
a211 1
	if( file_yoff != 0 ) fseek( infp, file_yoff*width, 1 );
d215 2
a216 2
			fseek( infp, file_xoff, 1 );
		n = fread( &ibuf[0], sizeof( char ), width-file_xoff, infp );
d224 1
a224 1
				n = fb_read( fbp, scr_xoff, fb_getheight(fbp)-1-y,
d230 1
a230 1
		for( x = 0; x < width; x++ ) {
d239 1
a239 2
			fb_write( fbp, scr_xoff, fb_getheight(fbp)-1-y,
				obuf, xout );
d242 4
d250 54
@


1.11
log
@error message typo.
@
text
@d24 1
a24 1
static char RCSid[] = "@@(#)$Header: bw-fb.c,v 1.10 86/10/25 15:00:06 phil Locked $ (BRL)";
d144 1
a144 1
		return 1;
d207 1
@


1.10
log
@RGBpixel conversion.
Fixed up some positioning problems.
@
text
@d24 1
a24 1
static char RCSid[] = "@@(#)$Header: bw-fb.c,v 1.9 86/10/13 03:02:28 phil Locked $ (BRL)";
d122 1
a122 1
				"pix-fb: cannot open \"%s\" for reading\n",
d129 1
a129 1
		(void)fprintf( stderr, "pix-fb: excess argument(s) ignored\n" );
@


1.9
log
@Regularized argument ordering
@
text
@d2 1
a2 1
 *		B W - F B . C
d24 1
a24 1
static char RCSid[] = "@@(#)$Header: bw-fb.c,v 1.8 86/10/13 02:51:10 mike Locked $ (BRL)";
d39 1
a39 1
Pixel	obuf[MAXSCAN];
d56 2
a57 2
	[-x file_xoff] [-y file_yoff] [-X scr_xoff] [-Y scr_yoff]\n\
	[-s squaresize] [-W width] [-H height] [file.pix]\n";
d86 1
a86 1
			file_xoff = atoi(optarg);
d89 1
a89 1
			file_yoff = atoi(optarg);
d92 1
a92 1
			scr_xoff = atoi(optarg);
d95 1
a95 1
			scr_yoff = atoi(optarg);
d138 1
d163 7
d172 1
a172 1
	if( file_yoff != 0 ) fseek( infp, file_yoff*width*height, 1 );
d174 1
a174 1
	for( y = scr_yoff; y < height; y++ )  {
d186 1
a186 1
					&obuf[0], width );
d188 1
a188 1
				n = fb_read( fbp, scr_xoff, y, &obuf[0], width );
d193 1
a193 1
				obuf[x].red   = ibuf[x];
d195 1
a195 1
				obuf[x].green = ibuf[x];
d197 1
a197 1
				obuf[x].blue  = ibuf[x];
d201 1
a201 1
				&obuf[0], width );
d203 1
a203 1
			fb_write( fbp, scr_xoff, y, &obuf[0], width );
@


1.8
log
@Converted to getopt(), added non-rectangular display capability.
@
text
@d24 1
a24 1
static char RCSid[] = "@@(#)$Header: bw-fb.c,v 1.7 86/10/06 21:07:29 mike Locked $ (BRL)";
d57 1
a57 1
	[-s squaresize] [-H height] [-W width] [file.pix]\n";
d64 1
a64 1
	while ( (c = getopt( argc, argv, "hicrgbx:y:X:Y:s:H:W:" )) != EOF )  {
d101 3
a105 3
			break;
		case 'W':
			width = atoi(optarg);
@


1.7
log
@Converted to new libfb with 1st Quadrant semantics
@
text
@d24 1
a24 1
static char RCSid[] = "@@(#)$Header: bw-fb.c,v 1.6 86/10/03 08:00:22 mike Exp $ (BRL)";
d30 4
d39 6
a44 4
Pixel	obuf[1024];
int	size, initx, inity;
int	outsize;
int	offx, offy;
d46 1
d51 2
a52 1
char	*Usage = "usage: bw-fb [-h -i -c -r -g -b] [-o xoff yoff] [width] [xorig] [yorig] < file.bw\n";
d54 7
a60 2
main( argc, argv )
int argc; char **argv;
d62 1
a62 3
	int	x, y, n;
	int	default_size;
	int	inverted = 0;
d64 2
a65 6
	default_size = 512;
	offx = offy = 0;

	/* Check for flags */
	while( argc > 1 && argv[1][0] == '-' )  {
		switch( argv[1][1] )  {
d67 2
a68 1
			default_size = 1024;
d71 1
a71 1
			inverted++;
d74 1
a74 1
			clear++;
d85 2
a86 5
		case 'o':
			offx = atoi( argv[2] );
			offy = atoi( argv[3] );
			argv += 2;
			argc -= 2;
d88 22
a110 2
		argc--;
		argv++;
d113 33
a149 11
	if( argc > 4 || isatty(fileno(stdin)) ) {
		fputs( Usage, stderr );
		exit( 1 );
	}

	size = ( argc > 1 ) ? atoi( argv[1] ) : default_size;
	initx = ( argc > 2 ) ? atoi( argv[2] ) : 0;
	inity = ( argc > 3 ) ? (atoi( argv[3] )) : 0;

	outsize = (size > default_size) ? default_size : size;

d151 2
a152 2
	if( size-offx > MAXSCAN ) {
		fprintf( stderr, "bw-fb: not compiled for files that large.\n" );
d157 1
a157 1
	if ((fbp = fb_open( NULL, default_size, default_size )) == NULL ) {
d164 7
a170 5
	if( offy != 0 ) fseek( stdin, offy*size, 1 );
	for( y = inity; y < outsize; y++ )  {
		if( offx != 0 ) fseek( stdin, offx, 1 );
		n = fread( &ibuf[0], sizeof( char ), size-offx, stdin );
		if( n <= 0 ) exit( 0 );
d176 3
a178 2
			if( inverted )
				fb_read( fbp, initx, default_size-1-y, &obuf[0], outsize );
d180 2
a181 1
				fb_read( fbp, initx, y, &obuf[0], outsize );
d183 1
a183 1
		for( x = 0; x < outsize; x++ ) {
d191 3
a193 2
		if( inverted )
			fb_write( fbp, initx, default_size-1-y, &obuf[0], outsize );
d195 1
a195 1
			fb_write( fbp, initx, y, &obuf[0], outsize );
@


1.6
log
@argc checking
@
text
@d24 1
a24 1
static char RCSid[] = "@@(#)$Header: bw-fb.c,v 1.5 86/10/03 06:02:34 phil Exp $ (BRL)";
d99 1
a99 1
	inity = ( argc > 3 ) ? (default_size-1 - atoi( argv[3] )) : default_size-1;
d118 1
a118 1
	for( y = inity; y > (inity-outsize); y-- ) {
d128 1
a128 1
				fb_read( fbp, initx, 511-y, &obuf[0], outsize );
@


1.5
log
@new libfb
@
text
@d24 1
a24 1
static char RCSid[] = "@@(#)$Header: bw-fb.c,v 1.4 86/10/03 04:54:01 phil Exp $ (BRL)";
d57 1
a57 1
	while( argv[1][0] == '-' )  {
@


1.4
log
@Updated for new libfb interface.
@
text
@d24 1
a24 1
static char RCSid[] = "@@(#)$Header: bw-fb.c,v 1.3 86/09/03 21:28:40 phil Locked $ (BRL)";
d110 2
a111 2
	if ((fbp = fbopen( 0, default_size, default_size )) == NULL ) {
		perror (framebuffer == NULL ? "$FB_FILE" : framebuffer);
d115 1
a115 1
	if( clear ) fbclear();
@


1.3
log
@Fixed hires inverse problem.
@
text
@d24 1
a24 1
static char RCSid[] = "@@(#)$Header: bw-fb.c,v 1.2 86/08/15 00:02:55 phil BRL $ (BRL)";
d32 1
a32 2
int	fb_fd;
char	*framebuffer = NULL;	/* Default Framebuffer */
a60 1
			fbsetsize(1024);
d110 1
a110 1
	if ((fb_fd = fbopen(framebuffer, APPEND)) < 0) {
d128 1
a128 1
				fbread( initx, 511-y, &obuf[0], outsize );
d130 1
a130 1
				fbread( initx, y, &obuf[0], outsize );
d141 1
a141 1
			fbwrite( initx, default_size-1-y, &obuf[0], outsize );
d143 1
a143 1
			fbwrite( initx, y, &obuf[0], outsize );
d145 2
@


1.2
log
@Added -c option.
@
text
@d24 1
a24 1
static char RCSid[] = "@@(#)$Header: bw-fb.c,v 1.1 86/08/14 21:51:02 mike Exp $ (BRL)";
d143 1
a143 1
			fbwrite( initx, 511-y, &obuf[0], outsize );
@


1.1
log
@Initial revision
@
text
@d24 1
a24 1
static char RCSid[] = "@@(#)$Header$ (BRL)";
d40 1
d45 1
a45 1
char	*Usage = "usage: bw-fb [-h -i -r -g -b] [-o xoff yoff] [width] [xorig] [yorig] < file.bw\n";
d67 3
d116 2
@
