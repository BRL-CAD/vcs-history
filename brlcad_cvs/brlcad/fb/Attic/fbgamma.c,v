head	11.9;
access;
symbols
	ansi-20040405-merged:11.5.2.2
	postmerge-20040405-ansi:11.7
	premerge-20040404-ansi:11.6
	postmerge-autoconf:11.6
	autoconf-freeze:11.5.10.2
	premerge-autoconf:11.6
	ansi-20040316-freeze:11.5.2.1
	postmerge-20040315-windows:11.6
	premerge-20040315-windows:11.6
	windows-20040315-freeze:11.5.4.1
	autoconf-20031203:11.5
	autoconf-20031202:11.5
	autoconf-branch:11.5.0.10
	phong-branch:11.5.0.8
	photonmap-branch:11.5.0.6
	rel-6-1-DP:11.5
	windows-branch:11.5.0.4
	rel-6-0-2:11.3
	ansi-branch:11.5.0.2
	rel-6-0-1-branch:11.3.0.2
	hartley-6-0-post:11.4
	hartley-6-0-pre:11.3
	rel-6-0-1:11.3
	rel-6-0:11.3
	rel-5-4:11.1
	offsite-5-3-pre:11.2
	rel-5-3:11.1
	rel-5-2:11.1
	rel-5-1-branch:11.1.0.2
	rel-5-1:11.1
	rel-5-0:11.1
	rel-5-0-beta:11.1
	rel-4-5:11.1
	ctj-4-5-post:11.1
	ctj-4-5-pre:11.1
	rel-4-4:11.1
	rel-4-0:10.1
	rel-3-5:9.1
	rel-3-0:8.1
	rel-2-3:7.1
	rel-2-0:5.1
	rel-1-24:5.1;
locks; strict;
comment	@ * @;


11.9
date	2004.05.24.04.13.26;	author morrison;	state dead;
branches;
next	11.8;

11.8
date	2004.05.10.15.30.42;	author erikg;	state Exp;
branches;
next	11.7;

11.7
date	2004.04.05.07.49.23;	author morrison;	state Exp;
branches;
next	11.6;

11.6
date	2004.02.02.17.39.01;	author morrison;	state Exp;
branches;
next	11.5;

11.5
date	2002.08.20.17.07.24;	author jra;	state Exp;
branches
	11.5.2.1
	11.5.4.1
	11.5.10.1;
next	11.4;

11.4
date	2002.08.15.20.54.38;	author hartley;	state Exp;
branches;
next	11.3;

11.3
date	2001.04.12.17.44.07;	author bparker;	state Exp;
branches;
next	11.2;

11.2
date	2000.08.24.03.58.30;	author mike;	state Exp;
branches;
next	11.1;

11.1
date	95.01.04.10.09.22;	author mike;	state Rel4_4;
branches;
next	10.4;

10.4
date	94.12.30.03.27.13;	author mike;	state Exp;
branches;
next	10.3;

10.3
date	94.08.11.19.23.54;	author gdurf;	state Exp;
branches;
next	10.2;

10.2
date	94.08.11.15.06.06;	author mike;	state Exp;
branches;
next	10.1;

10.1
date	91.10.12.06.46.27;	author mike;	state Rel4_0;
branches;
next	9.6;

9.6
date	91.09.10.16.03.36;	author butler;	state Exp;
branches;
next	9.5;

9.5
date	91.08.29.23.23.37;	author mike;	state Exp;
branches;
next	9.4;

9.4
date	91.01.15.14.27.58;	author butler;	state Exp;
branches;
next	9.3;

9.3
date	90.12.07.01.27.30;	author mike;	state Exp;
branches;
next	9.2;

9.2
date	89.12.29.22.13.20;	author mike;	state Exp;
branches;
next	9.1;

9.1
date	89.05.19.06.08.54;	author mike;	state Rel3_5;
branches;
next	8.1;

8.1
date	88.10.05.00.41.36;	author mike;	state Rel3_0;
branches;
next	7.3;

7.3
date	88.09.19.22.50.05;	author mike;	state Exp;
branches;
next	7.2;

7.2
date	88.05.16.00.06.36;	author mike;	state Exp;
branches;
next	7.1;

7.1
date	87.11.03.00.07.22;	author mike;	state Rel;
branches;
next	6.1;

6.1
date	87.07.11.08.10.33;	author mike;	state Rel;
branches;
next	5.1;

5.1
date	87.06.24.22.38.35;	author mike;	state Rel;
branches;
next	1.1;

1.1
date	87.04.22.17.48.42;	author phil;	state Exp;
branches;
next	;

11.5.2.1
date	2002.09.19.18.00.41;	author morrison;	state Exp;
branches;
next	11.5.2.2;

11.5.2.2
date	2004.03.17.21.16.07;	author morrison;	state Exp;
branches;
next	;

11.5.4.1
date	2004.03.11.23.40.41;	author morrison;	state Exp;
branches;
next	;

11.5.10.1
date	2004.02.12.19.40.45;	author erikg;	state Exp;
branches;
next	11.5.10.2;

11.5.10.2
date	2004.03.15.13.28.06;	author erikg;	state Exp;
branches;
next	;


desc
@Load a gamma correcting colormap into a framebuffer
@


11.9
log
@moved to src/fb/
@
text
@/*
 *			F B G A M M A . C
 *
 *  Load a gamma correcting colormap into a framebuffer.
 *
 *  Author -
 *	Phillip Dykstra
 *  
 *  Source -
 *	SECAD/VLD Computing Consortium, Bldg 394
 *	The U. S. Army Ballistic Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5066
 *  
 *  Copyright Notice -
 *	This software is Copyright (C) 1986-2004 by the United States Army.
 *	All rights reserved.
 */
#ifndef lint
static const char RCSid[] = "@@(#)$Header: /n/xoff/cvs/brlcad/fb/fbgamma.c,v 11.8 2004/05/10 15:30:42 erikg Exp $ (BRL)";
#endif

#ifdef HAVE_CONFIG_H
# include "config.h"
#endif



#include <stdio.h>
#ifdef USE_STRING_H
#include <string.h>
#else
#include <strings.h>
#endif
#include <math.h>
#include "machine.h"
#include "externs.h"
#include "fb.h"

char *options = "ihoF:";
/* externs.h includes externs for getopt and associated variables */

void	checkgamma(double g);

unsigned char rampval[10] = { 255, 128, 64, 32, 16, 8, 4, 2, 1, 0 };
int x, y, scr_width, scr_height, patch_width, patch_height;
unsigned char	*altline;
unsigned char	*line;
char *framebuffer = (char *)NULL;
int image = 0;

static char usage[] = "\
Usage: fbgamma [-h -o -i] [-F framebuffer] val [gval bval]\n";

void mk_ramp(FBIO *fb, int r, int g, int b, int n)
{

	/* grey ramp */
	for (x=0 ; x < scr_width ; ++x) {
		if (r) line[x*3] = rampval[x / patch_width + 1];
		else line[x*3] = 0;
		if (g) line[x*3+1] = rampval[x / patch_width + 1];
		else line[x*3+1] = 0;
		if (b) line[x*3+2] = rampval[x / patch_width + 1];
		else line[x*3+2] = 0;
	}
	for (y=patch_height*n ; y < patch_height*(n+1) && y < scr_height ; ++y) {
		fb_write(fb, 0, y, line, scr_width);
	}

	for (x=0 ; x < scr_width ; ++x) {
		if (r) line[x*3] = rampval[x / patch_width];
		else line[x*3] = 0;
		if (g) line[x*3+1] = rampval[x / patch_width];
		else line[x*3+1] = 0;
		if (b) line[x*3+2] = rampval[x / patch_width];
		else line[x*3+2] = 0;
	}
	for (y=patch_height*(n+1) ; y < patch_height*(n+2) && y < scr_height ; y += 2) {
		fb_write(fb, 0, y, altline, scr_width);
		fb_write(fb, 0, y+1, line, scr_width);
	}
}

void disp_image(FBIO *fb)
{

	scr_width = fb_getwidth(fb);
	scr_height = fb_getheight(fb);

	patch_width = scr_width / 8;
	patch_height = scr_height / 14;

	if ((line = (unsigned char *) malloc(scr_width*3)) == (unsigned char *)NULL) {
		exit(-1);
	}

	if ((altline = (unsigned char *) malloc(scr_width*3)) == (unsigned char *)NULL) {
		exit(-1);
	} else {
		bzero( (char *)altline, scr_width*3);
	}

	mk_ramp(fb, 1, 1, 1, 0);
	mk_ramp(fb, 1, 0, 0, 2);
	mk_ramp(fb, 1, 1, 0, 4);
	mk_ramp(fb, 0, 1, 0, 6);
	mk_ramp(fb, 0, 1, 1, 8);
	mk_ramp(fb, 0, 0, 1, 10);
	mk_ramp(fb, 1, 0, 1, 12);

	(void)free(line);
	(void)free(altline);
}


int
main(int argc, char **argv)
{
	int	i;
	int	onegamma = 0;
	int	fbsize = 512;
	int	overlay = 0;
	double	gamr = 0, gamg = 0, gamb = 0;	/* gamma's */
	double	f;
	ColorMap cm;
	FBIO	*fbp;

	onegamma = 0;

	/* check for flags */
	opterr = 0;
	while ((i=getopt(argc, argv, options)) != EOF) {
		switch(i) {
		case 'h'	: fbsize = 1024; break;
		case 'o'	: overlay++; break;
		case 'i'	: image = !image; break;
		case 'F'	: framebuffer = optarg; break;
		default		: break;
		}
	}

	if (optind == argc - 1) {
		/* single value for all channels */
		f = atof( argv[optind] );
		checkgamma( f );
		gamr = gamg = gamb = 1.0 / f;
		onegamma++;
	} else if (optind == argc - 4 ) {
		/* different RGB values */
		f = atof( argv[optind] );
		checkgamma( f );
		gamr = 1.0 / f;
		f = atof( argv[optind+1] );
		checkgamma( f );
		gamg = 1.0 / f;
		f = atof( argv[optind+2] );
		checkgamma( f );
		gamb = 1.0 / f;
	} else {
		fprintf( stderr, usage );
		exit( 1 );
	}

	if( (fbp = fb_open( framebuffer, fbsize, fbsize )) == FBIO_NULL ) {
		exit( 2 );
	}

	/* draw the gamma image if requested */
	if (image) disp_image(fbp);

	/* get the starting map */
	if( overlay ) {
		fb_rmap( fbp, &cm );
	} else {
		/* start with a linear map */
		for( i = 0; i < 256; i++ ) {
			cm.cm_red[i] = cm.cm_green[i]
			= cm.cm_blue[i] = i << 8;
		}
	}

	/* apply the gamma(s) */
	for( i = 0; i < 256; i++ ) {
		if( gamr < 0 )
			cm.cm_red[i] = 65535 * pow( (double)cm.cm_red[i] / 65535.0, -1.0/gamr );
		else
			cm.cm_red[i] = 65535 * pow( (double)cm.cm_red[i] / 65535.0, gamr );
		if( onegamma && (overlay == 0) ) {
			cm.cm_green[i] = cm.cm_red[i];
			cm.cm_blue[i]  = cm.cm_red[i];
		} else {
			if( gamg < 0 )
				cm.cm_green[i] = 65535 * pow( (double)cm.cm_green[i] / 65535.0, -1.0/gamg );
			else
				cm.cm_green[i] = 65535 * pow( (double)cm.cm_green[i] / 65535.0, gamg );
			if( gamb < 0 )
				cm.cm_blue[i]  = 65535 * pow( (double)cm.cm_blue[i] / 65535.0, -1.0/gamb );
			else
				cm.cm_blue[i]  = 65535 * pow( (double)cm.cm_blue[i] / 65535.0, gamb );
		}
	}

	fb_wmap( fbp, &cm );
	fb_close( fbp );
	return(0);
}

void
checkgamma(double g)
{
	if( fabs(g) < 1.0e-10 ) {
		fprintf( stderr, "fbgamma: gamma too close to zero\n" );
		fprintf( stderr, usage );
		exit( 3 );
	}
}
@


11.8
log
@change conf.h to a wrapped config.h
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/fb/fbgamma.c,v 11.7 2004/04/05 07:49:23 morrison Exp $ (BRL)";
@


11.7
log
@merge of ansi-6-0-branch into HEAD
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
d22 5
a26 1
#include "conf.h"
@


11.6
log
@update copyright to include span through 2003
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/fb/fbgamma.c,v 11.5 2002/08/20 17:07:24 jra Exp $ (BRL)";
d38 1
a38 1
void	checkgamma();
d50 1
a50 3
void mk_ramp(fb, r, g, b, n)
FBIO *fb;
int r, g, b, n;
d80 1
a80 2
void disp_image(fb)
FBIO *fb;
d113 1
a113 2
main( argc, argv )
int argc; char **argv;
d205 1
a205 2
checkgamma( g )
double g;
@


11.5
log
@Restoration of entire source tree to Pre-Hartley state
@
text
@d15 1
a15 1
 *	This software is Copyright (C) 1986 by the United States Army.
d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/fb/fbgamma.c,v 11.3 2001/04/12 17:44:07 bparker Exp $ (BRL)";
@


11.5.4.1
log
@sync to HEAD...
@
text
@d15 1
a15 1
 *	This software is Copyright (C) 1986-2004 by the United States Army.
d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /n/cad/c/CVS/brlcad/fb/fbgamma.c,v 11.6 2004/02/02 17:39:01 morrison Exp $ (BRL)";
@


11.5.10.1
log
@merge from HEAD
@
text
@d15 1
a15 1
 *	This software is Copyright (C) 1986-2004 by the United States Army.
d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/fb/fbgamma.c,v 11.6 2004/02/02 17:39:01 morrison Exp $ (BRL)";
@


11.5.10.2
log
@merge from head
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/fb/fbgamma.c,v 11.5.10.1 2004/02/12 19:40:45 erikg Exp $ (BRL)";
@


11.5.2.1
log
@Initial ANSIfication
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/fb/fbgamma.c,v 11.5 2002/08/20 17:07:24 jra Exp $ (BRL)";
d38 1
a38 1
void	checkgamma(double g);
d50 3
a52 1
void mk_ramp(FBIO *fb, int r, int g, int b, int n)
d82 2
a83 1
void disp_image(FBIO *fb)
d116 2
a117 1
main(int argc, char **argv)
d209 2
a210 1
checkgamma(double g)
@


11.5.2.2
log
@sync branch with HEAD
@
text
@d15 1
a15 1
 *	This software is Copyright (C) 1986-2004 by the United States Army.
d19 1
a19 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
@


11.4
log
@Converted from K&R to ANSI C - RFH
@
text
@d38 1
a38 1
void	checkgamma(double g);
d50 3
a52 1
void mk_ramp(FBIO *fb, int r, int g, int b, int n)
d82 2
a83 1
void disp_image(FBIO *fb)
d116 2
a117 1
main(int argc, char **argv)
d209 2
a210 1
checkgamma(double g)
@


11.3
log
@*- get rid of warnings
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/fb/fbgamma.c,v 11.2 2000/08/24 03:58:30 mike Exp $ (BRL)";
d38 1
a38 1
void	checkgamma();
d50 1
a50 3
void mk_ramp(fb, r, g, b, n)
FBIO *fb;
int r, g, b, n;
d80 1
a80 2
void disp_image(fb)
FBIO *fb;
d113 1
a113 2
main( argc, argv )
int argc; char **argv;
d205 1
a205 2
checkgamma( g )
double g;
@


11.2
log
@
const RCSid
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/fb/fbgamma.c,v 11.1 1995/01/04 10:09:22 mike Rel4_4 $ (BRL)";
d25 5
d115 1
a115 1

d205 1
@


11.1
log
@Release_4.4
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/fb/RCS/fbgamma.c,v 10.4 94/12/30 03:27:13 mike Exp $ (BRL)";
@


10.4
log
@DEC Alpha
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/fb/RCS/fbgamma.c,v 10.3 94/08/11 19:23:54 gdurf Exp Locker: mike $ (BRL)";
@


10.3
log
@Added include of conf.h
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/fb/RCS/fbgamma.c,v 10.2 1994/08/11 15:06:06 mike Exp gdurf $ (BRL)";
d94 1
a94 1
		bzero(altline, scr_width*3);
@


10.2
log
@Reduced use of RGBpixel
Now use (unsigned char *)
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/fb/RCS/fbgamma.c,v 10.1 91/10/12 06:46:27 mike Rel4_0 Locker: mike $ (BRL)";
d21 2
@


10.1
log
@Release_4.0
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/fb/RCS/fbgamma.c,v 9.6 91/09/10 16:03:36 butler Exp $ (BRL)";
d35 2
a36 1
char *altline, *line;
d85 1
a85 1
	if ((line = malloc(scr_width*3)) == (char *)NULL) {
d89 1
a89 1
	if ((altline = malloc(scr_width*3)) == (char *)NULL) {
@


9.6
log
@removed extern declarations for getopt() and friends, as this is now in
the include file "externs.h"
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/fb/RCS/fbgamma.c,v 9.5 91/08/29 23:23:37 mike Exp $ (BRL)";
@


9.5
log
@Needed machine.h
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/fb/RCS/fbgamma.c,v 9.4 91/01/15 14:27:58 butler Exp $ (BRL)";
d29 1
a29 2
extern char *optarg;
extern int optind, opterr, getopt();
@


9.4
log
@changed command line parsing to use getopt,
added -i flag for calibration image display,
added -F flage for selecting framebuffer
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/util/RCS/fbgamma.c,v 9.3 90/12/07 01:27:30 mike Exp $ (BRL)";
d24 1
@


9.3
log
@lint
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/util/RCS/fbgamma.c,v 9.2 89/12/29 22:13:20 mike Exp $ (BRL)";
d27 4
d33 6
d40 1
a40 1
Usage: fbgamma [-h -o] val [gval bval]\n";
d42 66
d123 9
a131 9
	while( argc > 1 ) {
		if( strcmp(argv[1],"-h") == 0 ) {
			fbsize = 1024;
		} else if( strcmp(argv[1],"-o") == 0 ) {
			overlay++;
		} else
			break;
		argc--;
		argv++;
d134 1
a134 2
	/* now get the gammas */
	if( argc == 2 ) {
d136 1
a136 1
		f = atof( argv[1] );
d140 1
a140 1
	} else if( argc == 4 ) {
d142 1
a142 1
		f = atof( argv[1] );
d145 1
a145 1
		f = atof( argv[2] );
d148 1
a148 1
		f = atof( argv[3] );
d156 1
a156 1
	if( (fbp = fb_open( NULL, fbsize, fbsize )) == FBIO_NULL ) {
d159 3
@


9.2
log
@Included "externs.h" to define atof()
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: fbgamma.c,v 9.1 89/05/19 06:08:54 mike Locked $ (BRL)";
d39 1
a39 1
	double	gamr, gamg, gamb;	/* gamma's */
@


9.1
log
@Release_3.5
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: fbgamma.c,v 8.1 88/10/05 00:41:36 mike Rel3_0 $ (BRL)";
d24 1
@


8.1
log
@Release_3.0
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: fbgamma.c,v 7.3 88/09/19 22:50:05 mike Exp $ (BRL)";
@


7.3
log
@atof() is better defined in <math.h>
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: fbgamma.c,v 7.2 88/05/16 00:06:36 mike Locked $ (BRL)";
@


7.2
log
@lint fixes
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: fbgamma.c,v 7.1 87/11/03 00:07:22 mike Locked $ (BRL)";
a24 2

double	atof();
@


7.1
log
@Release 2.3
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: fbgamma.c,v 6.1 87/07/11 08:10:33 mike Rel $ (BRL)";
d28 2
d122 1
@


6.1
log
@Release 2.0
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: fbgamma.c,v 5.1 87/06/24 22:38:35 mike Rel $ (BRL)";
@


5.1
log
@Release 1.24
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: fbgamma.c,v 1.1 87/04/22 17:48:42 phil Exp $ (BRL)";
@


1.1
log
@Initial revision
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header$ (BRL)";
@
