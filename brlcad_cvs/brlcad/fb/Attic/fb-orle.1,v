head	11.4;
access;
symbols
	ansi-20040405-merged:11.2.6.1
	postmerge-20040405-ansi:11.3
	premerge-20040404-ansi:11.3
	postmerge-autoconf:11.3
	autoconf-freeze:11.3
	premerge-autoconf:11.3
	ansi-20040316-freeze:11.2
	postmerge-20040315-windows:11.3
	premerge-20040315-windows:11.3
	windows-20040315-freeze:11.2.8.1
	autoconf-20031203:11.3
	autoconf-20031202:11.3
	autoconf-branch:11.3.0.6
	phong-branch:11.3.0.4
	photonmap-branch:11.3.0.2
	rel-6-1-DP:11.2
	windows-branch:11.2.0.8
	rel-6-0-2:11.2
	ansi-branch:11.2.0.6
	rel-6-0-1-branch:11.2.0.4
	hartley-6-0-post:11.2
	hartley-6-0-pre:11.2
	rel-6-0-1:11.2
	rel-6-0:11.2
	rel-5-4:11.2
	offsite-5-3-pre:11.2
	rel-5-3:11.2
	rel-5-2:11.2
	rel-5-1-branch:11.2.0.2
	rel-5-1:11.2
	rel-5-0:11.1
	rel-5-0-beta:11.1
	rel-4-5:11.1
	ctj-4-5-post:11.1
	ctj-4-5-pre:11.1
	rel-4-4:11.1
	rel-4-0:10.1
	rel-3-5:9.1
	rel-3-0:8.1
	rel-2-3:7.1
	rel-2-0:6.1
	rel-1-24:5.1
	rel-1-20:1.7
	rel-1-10:1.6;
locks; strict;


11.4
date	2004.05.24.04.13.25;	author morrison;	state dead;
branches;
next	11.3;

11.3
date	2003.01.07.13.41.38;	author jra;	state Exp;
branches;
next	11.2;

11.2
date	2000.02.11.21.43.29;	author mike;	state Exp;
branches
	11.2.6.1
	11.2.8.1;
next	11.1;

11.1
date	95.01.04.10.09.04;	author mike;	state Rel4_4;
branches;
next	10.1;

10.1
date	91.10.12.06.46.10;	author mike;	state Rel4_0;
branches;
next	9.1;

9.1
date	89.05.19.06.08.20;	author mike;	state Rel3_5;
branches;
next	8.1;

8.1
date	88.10.05.00.41.02;	author mike;	state Rel3_0;
branches;
next	7.4;

7.4
date	88.09.18.03.26.38;	author mike;	state Exp;
branches;
next	7.3;

7.3
date	88.09.02.17.54.17;	author phil;	state Exp;
branches;
next	7.2;

7.2
date	88.09.02.14.18.41;	author phil;	state Exp;
branches;
next	7.1;

7.1
date	87.11.03.00.06.44;	author mike;	state Rel;
branches;
next	6.1;

6.1
date	87.07.11.08.09.56;	author mike;	state Rel;
branches;
next	5.1;

5.1
date	87.06.24.22.37.53;	author mike;	state Rel;
branches;
next	1.7;

1.7
date	87.02.13.00.40.20;	author mike;	state Exp;
branches;
next	1.6;

1.6
date	86.08.13.03.10.22;	author mike;	state Exp;
branches;
next	1.5;

1.5
date	86.08.13.03.10.16;	author mike;	state Exp;
branches;
next	1.4;

1.4
date	86.08.13.03.10.11;	author mike;	state Exp;
branches;
next	1.3;

1.3
date	86.08.13.03.10.07;	author mike;	state Exp;
branches;
next	1.2;

1.2
date	86.08.13.03.10.02;	author mike;	state Exp;
branches;
next	1.1;

1.1
date	86.08.13.03.09.59;	author mike;	state Exp;
branches;
next	;

11.2.6.1
date	2004.03.17.21.16.04;	author morrison;	state Exp;
branches;
next	;

11.2.8.1
date	2004.03.11.23.40.40;	author morrison;	state Exp;
branches;
next	;


desc
@@


11.4
log
@moved to src/fb/
@
text
@.TH FB-ORLE 1 BRL-CAD
.SH NAME
fb\(hyorle \- save a frame buffer image in old run-length encoded form
.SH SYNOPSIS
.B fb-orle
.RB [ \-CShvw ]
.RB [ \-c { rgbwBG }]
.RB [ \-l
x y]
.RB [ \-p
x y] [file.rle]
.SH DESCRIPTION
.I fb-orle\^
saves a frame buffer image in a file, using the
old University of Utah standard (Edition-2)
Run-Length Encoded (RLE) format.
This program is provided for compatability with the old RLE image
tools, and generally should not be used for saving new images,
except where compatability with the old tools is a factor.
The equivalent new tool is
.IR fb-rle(1) .
.PP
The environment
variable
.B
.SM FB_FILE
is used to select the display device (see
.IR brlcad(1) ).
If this variable is not set, the default device for your system will
be used.
If
.I file.rle\^
is not specified, the encoded file is written to standard output.
.I fb-orle\^
attempts to compress flat-colored areas
as much as possible.
This means that it is generally reasonable to save an entire
image, since in RLE format it will not take up much more file space
than extracting and saving only the
interesting portion of the image.
The default action is to encode only data
pixels and to save the background color separately, so that when the image
is restored all non-image pixels will be set to the background pixel value
stored in the RLE header.
Images saved in this mode may be displayed normally, or in ``overlay''
mode by the RLE decoder program (see
.IR orle-fb\^ (1)).
Alternatively, the
.B \-S
option may be used to RLE encode the background as well (recommended only
if you don't have a flat background).
.TP
.B \-C
Convert (``crunch'') an image with a non-standard color map so that the
RLE file created will redisplay with a standard color map.
Useful to preserve dramatic images created with wierd color maps
so that Gamma correction (for film) can then also be applied.
This option is recommended when producing images for export to other
display systems, so that variations in the interpretation of color maps
between different types of display hardware do
not affect the displayed image.
.TP
.B \-w
Convert the color image to black and white, and RLE encode that.
The red, green, and blue components of each
pixel are combined via the NTSC transform to get an intensity value (Y) which
is saved.  A more versatile tool for this is
.IR pix-bw (1).
.TP
.B \-S
Save all data in RLE format,
irrespective of whether it is background or not (``straight box save'').
It is not possible to
restore a file saved with 
.B \-S
as an overlay.
.TP
.BI \-c x
Specify a color to use as the ``background''.
The character
.I x\^
is selected from the set
.B rgbwBG
(red, green, blue, white, Black, 18% Grey).
If this option is not specified, the pixel in the lower left corner
of the region being saved is used as the background color.
.TP
.BI \-l "x y"
Specify the size of the saved box.
This is useful if only a portion of the image is to be saved.
.TP
.BI \-p "x y"
Specify the upper left corner of the saved portion
of the image.
.TP
.B \-v
Verbose mode.
The program will provide voluminous status information
on its standard error as it proceeds through encoding the image.
.TP
.B \-h
``hires'' flag.  Set both the height and width of the framebuffer
to 1024.  The default is 512x512.
.SH EXAMPLE
.RS
\fIfb-orle \|\-h \|tank.rle\fR
.RE
.SH AUTHORS
Gary S. Moss
.br
Michael John Muuss
.SH "SEE ALSO"
orle-fb(1), rle-fb(1), rle-pix(1), pix-rle(1), librle(3).
.SH SOURCE
SECAD/VLD Computing Consortium, Bldg 394
.br
The U. S. Army Ballistic Research Laboratory
.br
Aberdeen Proving Ground, Maryland  21005
.SH "BUG REPORTS"
Reports of bugs or problems should be submitted via electronic
mail to <CAD@@ARL.ARMY.MIL>.
@


11.3
log
@Corrected email address
@
text
@@


11.2
log
@
Fixed E-mail address and package name.
@
text
@d122 1
a122 1
mail to <CAD@@ARL.MIL>.
@


11.2.6.1
log
@sync branch with HEAD
@
text
@d122 1
a122 1
mail to <CAD@@ARL.ARMY.MIL>.
@


11.2.8.1
log
@sync to HEAD...
@
text
@d122 1
a122 1
mail to <CAD@@ARL.ARMY.MIL>.
@


11.1
log
@Release_4.4
@
text
@d1 1
a1 1
.TH FB-ORLE 1 BRL/CAD
d122 1
a122 1
mail to <CAD@@BRL.MIL>.
@


10.1
log
@Release_4.0
@
text
@@


9.1
log
@Release_3.5
@
text
@@


8.1
log
@Release_3.0
@
text
@@


7.4
log
@rle --> orle
@
text
@@


7.3
log
@\(em to \(hy
@
text
@d1 1
a1 1
.TH FB-RLE 1 BRL/CAD
d3 1
a3 1
fb\(hyrle \- save a frame buffer image in run-length encoded form
d5 1
a5 1
.B fb-rle
d13 1
a13 1
.I Fb-rle\^
d15 1
a15 1
University of Utah standard
d17 6
d34 1
a34 1
.I Fb-rle\^
d47 1
a47 1
.IR rle-fb\^ (1)).
d106 1
a106 1
\fIfb-rle \|\-h \|tank.rle\fR
d113 1
a113 1
rle-fb(1), rle-pix(1), pix-rle(1), librle(3).
@


7.2
log
@BRL.MIL and \(em changes
@
text
@d3 1
a3 1
fb\(emrle \- save a frame buffer image in run-length encoded form
@


7.1
log
@Release 2.3
@
text
@d3 1
a3 1
fb-rle \- save a frame buffer image in run-length encoded form
d116 1
a116 1
mail to <CAD@@BRL.ARPA>.
@


6.1
log
@Release 2.0
@
text
@@


5.1
log
@Release 1.24
@
text
@@


1.7
log
@Release 1.20 -- First Formal Release
@
text
@@


1.6
log
@Changed example to use /dev/ik1h rather than 0h.
@
text
@d1 1
a1 3
.TH FB-RLE 1V VMB
'\"	last edit:	85/10/01	G. S. Moss
'\"	SCCS ID:	@@(#)fb-rle.1	1.6
d6 6
a11 9
[
.B \-CShvw
] [
.B \-c
x ] [
.B \-l
x y ] [
.B \-p
x y ] [ file.rle ]
d14 4
a17 6
saves a frame buffer image in a file, using the Alpha_1 standard
Run-Length Encoded (RLE) form.
By default, the device
.B /dev/ik0l
is used for input.
This may be changed by setting the environment
d21 4
a24 4
to the name of another device or file name
and exporting it before execution of 
.IR fb-rle\^ .
Images may be read from disk or any supported frame buffer device.
d27 1
a27 1
is not specified, the encoded file is written to the standard output.
d31 3
a33 2
This means that it is reasonable to save the entire
screen, since it will not take up much more file space than saving only the
d35 1
a35 1
The default action is to save only data
d41 1
a41 1
.IR rle-fb\^ (1V)).
d51 1
a51 1
so that Gamma correction (for film) can also be applied.
d53 3
a55 2
display systems, so that variations in the processing of color maps
between display hardware do not affect the displayed image.
d61 2
a62 1
is saved.
d91 1
a91 1
(Verbose mode.)
d96 2
a97 16
.SM
.B HIRES
mode.
This flag causes the image in the frame buffer to be read back
in
.SM
.B HIRES
(1024x1024x24) mode;
the default is to read the image back
in
.SM
.B LORES
(512x512x24) mode.
.TP
.I file.rle
Output file.
d100 1
a100 3
$ \fIFB_FILE=/dev/ik1h \|export \|FB_FILE\fR
.br
$ \fIfb-rle \|\-h \|tank.rle\fR
a101 11
.SH WARNING
If no output file is specified, the user should be careful to re-direct
the output to a file or pipe, as the encoded form is in binary.
In doing
so, be sure not to merge the standard error with the standard output as
this will potentially foil the decoding step, especially if the
verbose option was used.
.SH FILES
/vld/lib/librle.a
.br
/vld/lib/libfb.a
d103 1
a103 1
Gary S. Moss, BRL-VLD
d105 12
a116 15
Michael John Muuss, BRL-SECAD
.SH SEE ALSO
rle-fb(1V).
.SH BUGS
The ability to save less than the whole image is not presently implemented.
It would be nice if this program could determine the mode
.RB ( \s-1HIRES\s0
.I vs.\^
.BR \s-1LORES\s0 )
of the frame buffer, rather than needing the
.B \-h
flag.
Unfortunately,
the hardware control registers may be write-only (as with the Ikonas),
so there is no way of telling.
@


1.5
log
@Added -p and -l options to fb-rle and -p to rle-fb.
@
text
@d2 2
a3 2
'\"	last edit:	85/05/29	G. S. Moss
'\"	SCCS ID:	@@(#)fb-rle.1	1.5
d118 1
a118 1
$ \fIFB_FILE=/dev/ik1l \|export \|FB_FILE\fR
@


1.4
log
@clean up NAME line for VMB manual
@
text
@d2 2
a3 2
'\"	last edit:	85/05/21	G. S. Moss
'\"	SCCS ID:	@@(#)fb-rle.1	1.4
d12 5
a16 1
x ] [ file.rle ]
d85 8
@


1.3
log
@general clean-up
@
text
@d2 2
a3 2
'\"	last edit:	85/04/22	G. S. Moss
'\"	SCCS ID:	@@(#)fb-rle.1	1.3
d5 1
a5 1
fb-rle \- Save a frame buffer image in Run-Length Encoded form
@


1.2
log
@A bug fix.
@
text
@d2 2
a3 2
'\"	last edit:	85/03/28	G. S. Moss
'\"	SCCS ID:	@@(#)fb-rle.1	1.2
d5 1
a5 1
fb-rle \- Save a framebuffer image in Run-Length Encoded form
d9 1
a9 1
.B -CShvw
d11 2
a12 4
.B -cX
] [
.B file.rle
]
d14 7
a20 3
Save a frame buffer image in a file, using the Alpha_1 standard
Run-Length Encoded (RLE) form.  By default, the device ``/dev/ik0l'',
is used for input.  This may be changed by setting the environment
d24 1
a24 1
to the name of another device or file name,
d27 1
a27 1
Images may be read from disk or any supported framebuffer device.
d33 2
a34 1
as much as possible.  This means that it is reasonable to save the entire
d36 4
a39 3
interesting portion of the image.  The default action is to save only data
pixels, and to save the background color seperately, so that when the image
is restored, all non-image pixels will be set to the background pixel value
d41 1
a41 1
Images saved in this mode may be displayed normally, or in "overlay"
d43 1
a43 1
.IR rle-fb (1V).
d45 1
a45 1
.B -S
d49 3
a51 3
.B -C
Convert ("crunch") an image with a non-standard color map so that the
RLE file created will re-display with a standard color map.
d58 1
a58 1
.B -w
d64 1
a64 1
.B -S
d66 1
a66 1
irrespective of whether it is background or not ("straight box save").
d69 1
a69 1
.B -S
d72 6
a77 3
.B -cX
Specify a color to use as the "background".
The character \fBX\fR is selected from the set \fIrgbwBG\fR
d82 3
a84 2
.B -v
Verbose mode.  The program will provide voluminous status information
d87 1
a87 1
.B -h
d90 2
a91 1
mode.  This flag causes the image in the framebuffer to be read back
d95 2
a96 1
(1024x1024x24) mode;  the default is to read the image back
d102 1
a102 1
.B file.rle
d105 2
a106 1
In the Bourne shell :
d108 2
a109 9
$ \f\|IFB_FILE=/dev/ik1l \|export \|FB_FILE\fR
.br
$ \f\|Ifb-rle \|\-h \|tank.rle\fR
.br
In the C shell :
.br
% \fI\|setenv \|FB_FILE \|tank.fb\fR
.br
% \fI\|fb-rle \|\-vw \|> \|monochrome-tank.rle\fR
d112 2
a113 1
the output to a file or pipe, as the encoded form is in binary.  In doing
d118 3
a120 1
/vld/lib/librle.a, /vld/lib/libfb.a
a121 1
.PP 
d126 1
a126 1
rle-fb(1V)
a127 1
.PP 
d130 7
a136 6
.SM
.B (HIRES
\fI-vs-\fR
.SM
.B LORES)
of the framebuffer, rather than needing the \fB-h\fR flag.  Unfortunately,
@


1.1
log
@Initial revision
@
text
@d3 1
a3 1
'\"	SCCS ID:	@@(#)fb-rle.1	1.1
d100 1
@
