head	1.29;
access;
symbols
	ansi-20040405-merged:1.25.2.2
	postmerge-20040405-ansi:1.27
	premerge-20040404-ansi:1.26
	postmerge-autoconf:1.26
	autoconf-freeze:1.25.10.2
	premerge-autoconf:1.26
	ansi-20040316-freeze:1.25.2.1
	postmerge-20040315-windows:1.26
	premerge-20040315-windows:1.26
	windows-20040315-freeze:1.25.4.1
	autoconf-20031203:1.25
	autoconf-20031202:1.25
	autoconf-branch:1.25.0.10
	phong-branch:1.25.0.8
	photonmap-branch:1.25.0.6
	rel-6-1-DP:1.25
	windows-branch:1.25.0.4
	rel-6-0-2:1.23
	ansi-branch:1.25.0.2
	rel-6-0-1-branch:1.23.0.2
	hartley-6-0-post:1.24
	hartley-6-0-pre:1.23
	rel-6-0-1:1.23
	rel-6-0:1.23
	rel-5-4:1.19
	offsite-5-3-pre:1.22
	rel-5-3:1.19
	rel-5-2:1.19
	rel-5-1-branch:1.19.0.2
	rel-5-1:1.19
	rel-5-0:1.16
	rel-5-0-beta:1.14
	rel-4-5:1.10
	ctj-4-5-post:1.9
	ctj-4-5-pre:1.9;
locks; strict;
comment	@ * @;


1.29
date	2004.05.21.18.07.27;	author morrison;	state dead;
branches;
next	1.28;

1.28
date	2004.05.10.15.30.45;	author erikg;	state Exp;
branches;
next	1.27;

1.27
date	2004.04.05.07.43.37;	author morrison;	state Exp;
branches;
next	1.26;

1.26
date	2004.02.02.17.39.14;	author morrison;	state Exp;
branches;
next	1.25;

1.25
date	2002.08.20.17.07.52;	author jra;	state Exp;
branches
	1.25.2.1
	1.25.4.1
	1.25.10.1;
next	1.24;

1.24
date	2002.08.15.20.55.04;	author hartley;	state Exp;
branches;
next	1.23;

1.23
date	2001.10.17.07.40.03;	author morrison;	state Exp;
branches;
next	1.22;

1.22
date	2000.10.19.19.19.45;	author butler;	state Exp;
branches;
next	1.21;

1.21
date	2000.08.20.01.27.48;	author butler;	state Exp;
branches;
next	1.20;

1.20
date	2000.07.25.16.40.38;	author butler;	state Exp;
branches;
next	1.19;

1.19
date	2000.02.19.21.05.02;	author butler;	state Exp;
branches;
next	1.18;

1.18
date	99.12.30.16.15.21;	author jra;	state Exp;
branches;
next	1.17;

1.17
date	99.10.30.03.06.24;	author butler;	state Exp;
branches;
next	1.16;

1.16
date	99.07.02.22.20.41;	author mike;	state Exp;
branches;
next	1.15;

1.15
date	99.07.01.20.08.47;	author mike;	state Exp;
branches;
next	1.14;

1.14
date	99.04.06.21.47.02;	author butler;	state Exp;
branches;
next	1.13;

1.13
date	99.04.06.16.35.14;	author butler;	state Exp;
branches;
next	1.12;

1.12
date	98.09.22.01.29.55;	author mike;	state Exp;
branches;
next	1.11;

1.11
date	98.06.30.22.54.18;	author mike;	state Exp;
branches;
next	1.10;

1.10
date	97.12.31.09.01.40;	author mike;	state Exp;
branches;
next	1.9;

1.9
date	97.05.14.13.14.55;	author jra;	state Exp;
branches;
next	1.8;

1.8
date	96.08.31.08.46.01;	author butler;	state Exp;
branches;
next	1.7;

1.7
date	96.08.31.08.29.28;	author butler;	state Exp;
branches;
next	1.6;

1.6
date	96.08.30.00.08.21;	author butler;	state Exp;
branches;
next	1.5;

1.5
date	96.05.07.19.26.36;	author jra;	state Exp;
branches;
next	1.4;

1.4
date	96.03.28.19.29.07;	author jra;	state Exp;
branches;
next	1.3;

1.3
date	95.12.12.14.41.36;	author jra;	state Exp;
branches;
next	1.2;

1.2
date	95.10.20.04.43.53;	author butler;	state Exp;
branches;
next	1.1;

1.1
date	95.08.24.14.56.11;	author jra;	state Exp;
branches;
next	;

1.25.2.1
date	2002.09.19.18.01.26;	author morrison;	state Exp;
branches;
next	1.25.2.2;

1.25.2.2
date	2004.03.17.21.18.32;	author morrison;	state Exp;
branches;
next	;

1.25.4.1
date	2004.03.11.23.43.02;	author morrison;	state Exp;
branches;
next	;

1.25.10.1
date	2004.02.12.18.38.49;	author erikg;	state Exp;
branches;
next	1.25.10.2;

1.25.10.2
date	2004.03.15.14.07.13;	author erikg;	state Exp;
branches;
next	;


desc
@Random Transparency shader (for use with stacker).
@


1.29
log
@moved to src/
@
text
@/*
 *	S H _ R T R A N S . C
 *
 *	Random transparency shader. A random number from 0 to 1 is drawn
 * for each pixel rendered. If the random number is less than the threshold
 * value, the pixel is rendered as 100% transparent
 *
 *  Author -
 *	John R. Anderson
 *  
 *  Source -
 *	The U. S. Army Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5068  USA
 *  
 *  Distribution Notice -
 *	Re-distribution of this software is restricted, as described in
 *	your "Statement of Terms and Conditions for the Release of
 *	The BRL-CAD Package" license agreement.
 *
 *  Copyright Notice -
 *	This software is Copyright (C) 1998-2004 by the United States Army
 *	in all countries except the USA.  All rights reserved.
 */
#ifndef lint
static const char RCSid[] = "@@(#)$Header: /n/xoff/cvs/brlcad/liboptical/sh_rtrans.c,v 1.28 2004/05/10 15:30:45 erikg Exp $ (ARL)";
#endif

#ifdef HAVE_CONFIG_H
# include "config.h"
#endif



#include <stdio.h>
#ifdef HAVE_STRING_H
#include <string.h>
#endif
#include <math.h>
#include "machine.h"
#include "vmath.h"
#include "raytrace.h"
#include "shadefuncs.h"
#include "shadework.h"
#include "rtprivate.h"

extern int rr_render(struct application	*ap,
		     struct partition	*pp,
		     struct shadework   *swp);
#define RTRANS_MAGIC 0x4a6f686e
struct rtrans_specific {
	long	magic;
	double	threshold;
	int	next_rand;
};
#define CK_RTRANS_SP(_p) BU_CKMAG(_p, RTRANS_MAGIC, "rtrans_specific")

static struct rtrans_specific rtrans_defaults = {
	RTRANS_MAGIC,
	0.5,
	3 } ;

#define SHDR_NULL	((struct rtrans_specific *)0)
#define SHDR_O(m)	offsetof(struct rtrans_specific, m)
#define SHDR_AO(m)	bu_offsetofarray(struct rtrans_specific, m)

struct bu_structparse rtrans_parse[] = {
	{"%f",  1, "threshold",		SHDR_O(threshold),		BU_STRUCTPARSE_FUNC_NULL },
	{"%f",  1, "t",			SHDR_O(threshold),		BU_STRUCTPARSE_FUNC_NULL },
	{"",	0, (char *)0,		0,			BU_STRUCTPARSE_FUNC_NULL }
};

HIDDEN int	rtrans_setup(register struct region *rp, struct bu_vls *matparm, char **dpp, struct mfuncs *mfp, struct rt_i *rtip), rtrans_render(struct application *ap, struct partition *pp, struct shadework *swp, char *dp);
HIDDEN void	rtrans_print(register struct region *rp, char *dp), rtrans_free(char *cp);

struct mfuncs rtrans_mfuncs[] = {
	{MF_MAGIC,	"rtrans",	0,		0,	0,
	rtrans_setup,	rtrans_render,	rtrans_print,	rtrans_free },

	{0,		(char *)0,	0,		0,	0,
	0,		0,		0,		0 }
};


/*	R T R A N S _ S E T U P
 *
 *	This routine is called (at prep time)
 *	once for each region which uses this shader.
 *	Any shader-specific initialization should be done here.
 */
HIDDEN int
rtrans_setup(register struct region *rp, struct bu_vls *matparm, char **dpp, struct mfuncs *mfp, struct rt_i *rtip)
                      	    
             		         
    			      	/* pointer to reg_udata in *rp */
             		     
           		      	/* New since 4.4 release */
{
	register struct rtrans_specific	*rtrans_sp;

	RT_CHECK_RTI(rtip);
	BU_CK_VLS( matparm );
	RT_CK_REGION(rp);
	BU_GETSTRUCT( rtrans_sp, rtrans_specific );
	*dpp = (char *)rtrans_sp;

	memcpy(rtrans_sp, &rtrans_defaults, sizeof(struct rtrans_specific) );

	if (bu_struct_parse( matparm, rtrans_parse, (char *)rtrans_sp ) < 0 )
		return(-1);

	BN_RANDSEED(rtrans_sp->next_rand, 3);

	if (rdebug&RDEBUG_SHADE)
		bu_struct_print( rp->reg_name, rtrans_parse, (char *)rtrans_sp );

	return(1);
}

/*
 *	R T R A N S _ P R I N T
 */
HIDDEN void
rtrans_print(register struct region *rp, char *dp)
{
	bu_struct_print( rp->reg_name, rtrans_parse, (char *)dp );
}

/*
 *	R T R A N S _ F R E E
 */
HIDDEN void
rtrans_free(char *cp)
{
	bu_free( cp, "rtrans_specific" );
}

/*
 *	R T R A N S _ R E N D E R
 *
 *	This is called (from viewshade() in shade.c)
 *	once for each hit point to be shaded.
 */
int
rtrans_render(struct application *ap, struct partition *pp, struct shadework *swp, char *dp)
{
	register struct rtrans_specific *rtrans_sp =
		(struct rtrans_specific *)dp;

	RT_AP_CHECK(ap);
	RT_CHECK_PT(pp);
	CK_RTRANS_SP(rtrans_sp);

	if (rdebug&RDEBUG_SHADE)
		bu_struct_print( "random transparency", rtrans_parse, (char *)rtrans_sp );

	if (rtrans_sp->threshold >= 1.0 ||
	    BN_RANDOM(rtrans_sp->next_rand)  < rtrans_sp->threshold )
	{
		swp->sw_transmit = 1.0;
		swp->sw_reflect = 0.0;
		swp->sw_refrac_index = 1.0;
		VSETALL( swp->sw_basecolor, 1.0 );

		if (swp->sw_reflect > 0 || swp->sw_transmit > 0 )
			(void)rr_render( ap, pp, swp );
	}

	return(1);
}
@


1.28
log
@change conf.h to a wrapped config.h
@
text
@d25 1
a25 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/liboptical/sh_rtrans.c,v 1.27 2004/04/05 07:43:37 morrison Exp $ (ARL)";
@


1.27
log
@merge of ansi-6-0-branch into HEAD
@
text
@d25 1
a25 1
static const char RCSid[] = "@@(#)$Header$ (ARL)";
d28 5
a32 1
#include "conf.h"
@


1.26
log
@update copyright to include span through 2003
@
text
@d25 1
a25 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/liboptical/sh_rtrans.c,v 1.25 2002/08/20 17:07:52 jra Exp $ (ARL)";
d68 2
a69 2
HIDDEN int	rtrans_setup(), rtrans_render();
HIDDEN void	rtrans_print(), rtrans_free();
d87 6
a92 6
rtrans_setup( rp, matparm, dpp, mfp, rtip)
register struct region	*rp;
struct bu_vls		*matparm;
char			**dpp;	/* pointer to reg_udata in *rp */
struct mfuncs		*mfp;
struct rt_i		*rtip;	/* New since 4.4 release */
d119 1
a119 3
rtrans_print( rp, dp )
register struct region *rp;
char	*dp;
d128 1
a128 2
rtrans_free( cp )
char *cp;
d140 1
a140 5
rtrans_render( ap, pp, swp, dp )
struct application	*ap;
struct partition	*pp;
struct shadework	*swp;
char	*dp;
@


1.25
log
@Restoration of entire source tree to Pre-Hartley state
@
text
@d21 1
a21 1
 *	This software is Copyright (C) 1998 by the United States Army
d25 1
a25 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/liboptical/sh_rtrans.c,v 1.23 2001/10/17 07:40:03 morrison Exp $ (ARL)";
@


1.25.4.1
log
@sync to HEAD...
@
text
@d21 1
a21 1
 *	This software is Copyright (C) 1998-2004 by the United States Army
d25 1
a25 1
static const char RCSid[] = "@@(#)$Header: /n/cad/c/CVS/brlcad/liboptical/sh_rtrans.c,v 1.26 2004/02/02 17:39:14 morrison Exp $ (ARL)";
@


1.25.10.1
log
@merge from HEAD
@
text
@d21 1
a21 1
 *	This software is Copyright (C) 1998-2004 by the United States Army
d25 1
a25 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/liboptical/sh_rtrans.c,v 1.26 2004/02/02 17:39:14 morrison Exp $ (ARL)";
@


1.25.10.2
log
@merge from head
@
text
@d25 1
a25 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/liboptical/sh_rtrans.c,v 1.25.10.1 2004/02/12 18:38:49 erikg Exp $ (ARL)";
@


1.25.2.1
log
@Initial ANSIfication
@
text
@d25 1
a25 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/liboptical/sh_rtrans.c,v 1.25 2002/08/20 17:07:52 jra Exp $ (ARL)";
d68 2
a69 2
HIDDEN int	rtrans_setup(register struct region *rp, struct bu_vls *matparm, char **dpp, struct mfuncs *mfp, struct rt_i *rtip), rtrans_render(struct application *ap, struct partition *pp, struct shadework *swp, char *dp);
HIDDEN void	rtrans_print(register struct region *rp, char *dp), rtrans_free(char *cp);
d87 6
a92 6
rtrans_setup(register struct region *rp, struct bu_vls *matparm, char **dpp, struct mfuncs *mfp, struct rt_i *rtip)
                      	    
             		         
    			      	/* pointer to reg_udata in *rp */
             		     
           		      	/* New since 4.4 release */
d119 3
a121 1
rtrans_print(register struct region *rp, char *dp)
d130 2
a131 1
rtrans_free(char *cp)
d143 5
a147 1
rtrans_render(struct application *ap, struct partition *pp, struct shadework *swp, char *dp)
@


1.25.2.2
log
@sync branch with HEAD
@
text
@d21 1
a21 1
 *	This software is Copyright (C) 1998-2004 by the United States Army
d25 1
a25 1
static const char RCSid[] = "@@(#)$Header$ (ARL)";
@


1.24
log
@Converted from K&R to ANSI C - RFH
@
text
@d68 2
a69 2
HIDDEN int	rtrans_setup(register struct region *rp, struct bu_vls *matparm, char **dpp, struct mfuncs *mfp, struct rt_i *rtip), rtrans_render(struct application *ap, struct partition *pp, struct shadework *swp, char *dp);
HIDDEN void	rtrans_print(register struct region *rp, char *dp), rtrans_free(char *cp);
d87 6
a92 6
rtrans_setup(register struct region *rp, struct bu_vls *matparm, char **dpp, struct mfuncs *mfp, struct rt_i *rtip)
                      	    
             		         
    			      	/* pointer to reg_udata in *rp */
             		     
           		      	/* New since 4.4 release */
d119 3
a121 1
rtrans_print(register struct region *rp, char *dp)
d130 2
a131 1
rtrans_free(char *cp)
d143 5
a147 1
rtrans_render(struct application *ap, struct partition *pp, struct shadework *swp, char *dp)
@


1.23
log
@Mac OS X warning and error fixes for non-production build
@
text
@d25 1
a25 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/liboptical/sh_rtrans.c,v 1.22 2000/10/19 19:19:45 butler Exp $ (ARL)";
d68 2
a69 2
HIDDEN int	rtrans_setup(), rtrans_render();
HIDDEN void	rtrans_print(), rtrans_free();
d87 6
a92 6
rtrans_setup( rp, matparm, dpp, mfp, rtip)
register struct region	*rp;
struct bu_vls		*matparm;
char			**dpp;	/* pointer to reg_udata in *rp */
struct mfuncs		*mfp;
struct rt_i		*rtip;	/* New since 4.4 release */
d119 1
a119 3
rtrans_print( rp, dp )
register struct region *rp;
char	*dp;
d128 1
a128 2
rtrans_free( cp )
char *cp;
d140 1
a140 5
rtrans_render( ap, pp, swp, dp )
struct application	*ap;
struct partition	*pp;
struct shadework	*swp;
char	*dp;
@


1.22
log
@Changes to compile under RedHat 7.0
@
text
@d25 1
a25 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/liboptical/sh_rtrans.c,v 1.21 2000/08/20 01:27:48 butler Exp $ (ARL)";
d80 1
a80 1
/*	R T R A N S _ S E T U P
d115 1
a115 1
/*
d136 1
a136 1
/*
@


1.21
log
@Eliminate compilation warnings, enhancements to sh_light.c
@
text
@d25 1
a25 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/liboptical/sh_rtrans.c,v 1.20 2000/07/25 16:40:38 butler Exp $ (ARL)";
d31 3
@


1.20
log
@Changes to use rtprivate.h instead of ../rt/rdebug.h
@
text
@d25 1
a25 1
static char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/liboptical/sh_rtrans.c,v 1.19 2000/02/19 21:05:02 butler Exp $ (ARL)";
@


1.19
log
@Changes to support movement of CLAMP() macro into vmath.h
Altered "if( " statements to "if (" for readability.
@
text
@d25 1
a25 1
static char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/liboptical/sh_rtrans.c,v 1.18 1999/12/30 16:15:21 jra Exp $ (ARL)";
d37 1
a37 1
#include "../rt/rdebug.h"
d39 3
@


1.18
log
@Eliminated some unused variables
@
text
@d25 1
a25 1
static char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/liboptical/sh_rtrans.c,v 1.17 1999/10/30 03:06:24 butler Exp $ (ARL)";
d98 1
a98 1
	if( bu_struct_parse( matparm, rtrans_parse, (char *)rtrans_sp ) < 0 )
d103 1
a103 1
	if( rdebug&RDEBUG_SHADE)
d150 1
a150 1
	if( rdebug&RDEBUG_SHADE)
d153 1
a153 1
	if( rtrans_sp->threshold >= 1.0 ||
d161 1
a161 1
		if( swp->sw_reflect > 0 || swp->sw_transmit > 0 )
@


1.17
log
@Moved mathtab/rand_half from rt into libbn
Expanded structparse to include description and default
@
text
@d25 1
a25 1
static char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/liboptical/sh_rtrans.c,v 1.16 1999/07/02 22:20:41 mike Exp $ (ARL)";
a88 1
	mat_t	tmp;
a144 1
	point_t pt;
@


1.16
log
@
Removed dependence on compat4.h
@
text
@d25 1
a25 1
static char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/liboptical/sh_rtrans.c,v 1.15 1999/07/01 20:08:47 mike Exp $ (ARL)";
a36 1
#include "../rt/mathtab.h"
@


1.15
log
@
compat4
@
text
@d25 1
a25 1
static char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/liboptical/sh_rtrans.c,v 1.14 1999/04/06 21:47:02 butler Exp $ (ARL)";
d58 3
a60 3
	{"%f",  1, "threshold",		SHDR_O(threshold),		FUNC_NULL },
	{"%f",  1, "t",			SHDR_O(threshold),		FUNC_NULL },
	{"",	0, (char *)0,		0,			FUNC_NULL }
@


1.14
log
@Changed to use BN_RANDOM instead of the computationally more expensive MSR
@
text
@d25 1
a25 1
static char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/liboptical/sh_rtrans.c,v 1.13 1999/04/06 16:35:14 butler Exp $ (ARL)";
d46 1
a46 1
#define CK_RTRANS_SP(_p) RT_CKMAG(_p, RTRANS_MAGIC, "rtrans_specific")
d55 1
a55 1
#define SHDR_AO(m)	offsetofarray(struct rtrans_specific, m)
d84 1
a84 1
struct rt_vls		*matparm;
d93 1
a93 1
	RT_VLS_CHECK( matparm );
d95 1
a95 1
	GETSTRUCT( rtrans_sp, rtrans_specific );
d129 1
a129 1
	rt_free( cp, "rtrans_specific" );
@


1.13
log
@Changed call to msr_unif_init to have non-zero seed.
@
text
@d25 1
a25 1
static char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/liboptical/sh_rtrans.c,v 1.12 1998/09/22 01:29:55 mike Exp $ (ARL)";
a34 1
#include "msr.h"
d44 1
a44 1
	struct msr_unif	*msr;
d51 1
a51 1
	(struct msr_unif *)NULL	};
d103 1
a103 1
	rtrans_sp->msr = msr_unif_init( 3, 0 );
d157 1
a157 1
	    0.5 + MSR_UNIF_DOUBLE( rtrans_sp->msr ) < rtrans_sp->threshold )
@


1.12
log
@Moved optical shaders from rt/ to liboptical/
The only modifications involved moving and splitting
rt/material.h into h/shadefuncs.h and h/shadework.h,
and in changing the calling sequence to mlib_setup() in rt/material.c

Now the only shader function called directly by RT is
in liboptical/init.c: optical_shader_init().
It adds all the individual shaders to the "mfuncs" shader list.
@
text
@d25 1
a25 1
static char RCSid[] = "@@(#)$Header$ (ARL)";
d104 1
a104 1
	rtrans_sp->msr = msr_unif_init( 0, 0 );
@


1.11
log
@Can't make "struct mfuncs" a CONST, because the forward link needs
to be filled in at runtime, and some compilers put CONST data into
read-only pages (like FreeBSD).
@
text
@d7 16
d24 4
d36 4
a39 3
#include "./material.h"
#include "./mathtab.h"
#include "./rdebug.h"
@


1.10
log
@Required magic number to be first in mfunc table,
consistent with all other BRL-CAD magic numbers.
Required magic number to be initialized at compile time.
Added code to check the magic numbers.
Made the xxx_mfunc arrays CONST, so they can't get trashed by
runtime runaway pointer problems.
@
text
@d46 1
a46 1
CONST struct mfuncs rtrans_mfuncs[] = {
@


1.9
log
@Added some comments.
@
text
@d46 2
a47 2
struct mfuncs rtrans_mfuncs[] = {
	{"rtrans",	0,	0,		0,	0,
d50 1
a50 1
	{(char *)0,	0,		0,		0,	0,
@


1.8
log
@bu_struct_print
@
text
@d4 3
@


1.7
log
@bu_struct_parse
@
text
@d83 1
a83 1
		bu_structprint( rp->reg_name, rtrans_parse, (char *)rtrans_sp );
d96 1
a96 1
	bu_structprint( rp->reg_name, rtrans_parse, (char *)dp );
d131 1
a131 1
		bu_structprint( "random transparency", rtrans_parse, (char *)rtrans_sp );
@


1.6
log
@structparse moved to libbu
@
text
@d77 1
a77 1
	if( bu_structparse( matparm, rtrans_parse, (char *)rtrans_sp ) < 0 )
@


1.5
log
@Individual shaders now call rr_render() directly.
@
text
@d34 1
a34 1
struct structparse rtrans_parse[] = {
d77 1
a77 1
	if( rt_structparse( matparm, rtrans_parse, (char *)rtrans_sp ) < 0 )
d83 1
a83 1
		rt_structprint( rp->reg_name, rtrans_parse, (char *)rtrans_sp );
d96 1
a96 1
	rt_structprint( rp->reg_name, rtrans_parse, (char *)dp );
d131 1
a131 1
		rt_structprint( "random transparency", rtrans_parse, (char *)rtrans_sp );
@


1.4
log
@Eliminated srand48.
@
text
@d140 3
@


1.3
log
@Set sw_reflect and sw_refrac_index in renderer.
@
text
@d12 1
a16 1

d21 1
d27 2
a28 1
	0.5	};
a41 1
double		drand48();
d80 1
a80 1
	srand48( (long)137 );
d133 2
a134 1
	if( rtrans_sp->threshold >= 1.0 || drand48() < rtrans_sp->threshold )
@


1.2
log
@edited mfuncs table to account for new "mf_flags" element in struct mfuncs.
@
text
@d135 2
@


1.1
log
@Initial revision
@
text
@d43 1
a43 1
	{"rtrans",	0,	0,		0,
d46 1
a46 1
	{(char *)0,	0,		0,		0,
@
