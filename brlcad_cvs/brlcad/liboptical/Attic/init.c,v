head	1.18;
access;
symbols
	ansi-20040405-merged:1.12.4.1
	postmerge-20040405-ansi:1.16
	premerge-20040404-ansi:1.16
	postmerge-autoconf:1.16
	autoconf-freeze:1.14.2.3
	premerge-autoconf:1.16
	ansi-20040316-freeze:1.12
	postmerge-20040315-windows:1.16
	premerge-20040315-windows:1.16
	windows-20040315-freeze:1.12.6.1
	autoconf-20031203:1.14.2.1
	autoconf-20031202:1.14
	autoconf-branch:1.14.0.2
	phong-branch:1.13.0.2
	photonmap-branch:1.12.0.8
	rel-6-1-DP:1.12
	windows-branch:1.12.0.6
	rel-6-0-2:1.12
	ansi-branch:1.12.0.4
	rel-6-0-1-branch:1.12.0.2
	hartley-6-0-post:1.12
	hartley-6-0-pre:1.12
	rel-6-0-1:1.12
	rel-6-0:1.12
	rel-5-4:1.8
	offsite-5-3-pre:1.11
	rel-5-3:1.8
	rel-5-2:1.8
	rel-5-1-branch:1.8.0.2
	rel-5-1:1.8
	rel-5-0:1.5
	rel-5-0-beta:1.5;
locks; strict;
comment	@ * @;


1.18
date	2004.05.21.18.07.27;	author morrison;	state dead;
branches;
next	1.17;

1.17
date	2004.05.10.15.30.45;	author erikg;	state Exp;
branches;
next	1.16;

1.16
date	2004.02.02.17.39.13;	author morrison;	state Exp;
branches;
next	1.15;

1.15
date	2003.10.08.17.12.01;	author morrison;	state Exp;
branches;
next	1.14;

1.14
date	2003.09.27.01.03.20;	author morrison;	state Exp;
branches
	1.14.2.1;
next	1.13;

1.13
date	2003.09.03.06.11.33;	author butler;	state Exp;
branches;
next	1.12;

1.12
date	2002.03.07.23.07.09;	author morrison;	state Exp;
branches
	1.12.4.1
	1.12.6.1;
next	1.11;

1.11
date	2000.08.20.01.27.47;	author butler;	state Exp;
branches;
next	1.10;

1.10
date	2000.08.20.00.44.47;	author butler;	state Exp;
branches;
next	1.9;

1.9
date	2000.07.25.16.40.37;	author butler;	state Exp;
branches;
next	1.8;

1.8
date	2000.01.22.03.23.44;	author mike;	state Exp;
branches;
next	1.7;

1.7
date	99.12.02.21.40.23;	author mike;	state Exp;
branches;
next	1.6;

1.6
date	99.11.24.22.18.52;	author mike;	state Exp;
branches;
next	1.5;

1.5
date	99.02.19.03.38.10;	author butler;	state Exp;
branches;
next	1.4;

1.4
date	99.02.04.02.27.13;	author butler;	state Exp;
branches;
next	1.3;

1.3
date	99.01.29.05.53.31;	author butler;	state Exp;
branches;
next	1.2;

1.2
date	98.12.11.05.53.44;	author mike;	state Exp;
branches;
next	1.1;

1.1
date	98.09.22.03.06.45;	author mike;	state Exp;
branches;
next	;

1.12.4.1
date	2004.03.17.21.18.30;	author morrison;	state Exp;
branches;
next	;

1.12.6.1
date	2004.03.11.23.43.01;	author morrison;	state Exp;
branches;
next	;

1.14.2.1
date	2003.12.03.16.24.06;	author erikg;	state Exp;
branches;
next	1.14.2.2;

1.14.2.2
date	2004.02.12.18.38.49;	author erikg;	state Exp;
branches;
next	1.14.2.3;

1.14.2.3
date	2004.03.15.14.07.12;	author erikg;	state Exp;
branches;
next	;


desc
@@


1.18
log
@moved to src/
@
text
@/*
 *			L I B O P T I C A L / I N I T . C
 *
 *  This file represents the single function exported from the
 *  shader library whose "name" is known.
 *  All other functions are called through the function table.
 *
 *  Shaders are, of course, permitted to "upcall" into LIBRT as
 *  necessary.
 *
 *  Author -
 *	Michael John Muuss
 *  
 *  Source -
 *	The U. S. Army Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5068  USA
 *  
 *  Distribution Notice -
 *	Re-distribution of this software is restricted, as described in
 *	your "Statement of Terms and Conditions for the Release of
 *	The BRL-CAD Package" license agreement.
 *
 *  Copyright Notice -
 *	This software is Copyright (C) 1998-2004 by the United States Army
 *	in all countries except the USA.  All rights reserved.
 */
#ifndef lint
static const char RCSid[] = "@@(#)$Header: /n/xoff/cvs/brlcad/liboptical/init.c,v 1.17 2004/05/10 15:30:45 erikg Exp $ (ARL)";
#endif

#ifdef HAVE_CONFIG_H
# include "config.h"
#endif



#include <stdio.h>
#include "machine.h"
#include "vmath.h"
#include "bu.h"
#include "raytrace.h"
#include "shadefuncs.h"
#include "shadework.h"
#include "rtprivate.h"

int		rdebug;			/* RT program debugging */
double		AmbientIntensity = 0.4;	/* Ambient light intensity */
vect_t		background = { 0.0, 0.0, 0.0 }; /* Black */

#define MFUNCS(_name)	\
	{ extern struct mfuncs _name[]; mlib_add_shader( headp, _name ); }


/*
 *			O P T I C A L _ S H A D E R _ I N I T
 */
void
optical_shader_init(struct mfuncs	**headp)
{
	/*
	 *  Connect up shader ("material") interfaces
	 *  Note that sh_plastic.c defines the required "default" entry.
	 */
	MFUNCS( phg_mfuncs );
	MFUNCS( null_mfuncs ); /* null test shader */
	MFUNCS( light_mfuncs );
	MFUNCS( cloud_mfuncs );
	MFUNCS( spm_mfuncs );
	MFUNCS( txt_mfuncs );
	MFUNCS( stk_mfuncs );
	MFUNCS( cook_mfuncs );
	MFUNCS( stxt_mfuncs );
	MFUNCS( points_mfuncs );
	MFUNCS( toyota_mfuncs );
	MFUNCS( wood_mfuncs );
	MFUNCS( camo_mfuncs ); 
	MFUNCS( scloud_mfuncs );
	MFUNCS( air_mfuncs );
	MFUNCS( rtrans_mfuncs );
	MFUNCS( fire_mfuncs );
	MFUNCS( brdf_mfuncs );
	MFUNCS( gauss_mfuncs );
	MFUNCS( noise_mfuncs );
	MFUNCS( prj_mfuncs );
	MFUNCS( grass_mfuncs );
	MFUNCS( tthrm_mfuncs );
	MFUNCS( flat_mfuncs );
	MFUNCS( bbd_mfuncs );
}
@


1.17
log
@change conf.h to a wrapped config.h
@
text
@d28 1
a28 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/liboptical/init.c,v 1.16 2004/02/02 17:39:13 morrison Exp $ (ARL)";
@


1.16
log
@update copyright to include span through 2003
@
text
@d28 1
a28 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/liboptical/init.c,v 1.15 2003/10/08 17:12:01 morrison Exp $ (ARL)";
d31 5
a35 1
#include "conf.h"
@


1.15
log
@no reason for the library to specify any particular background color
@
text
@d24 1
a24 1
 *	This software is Copyright (C) 1998 by the United States Army
d28 1
a28 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/liboptical/init.c,v 1.14 2003/09/27 01:03:20 morrison Exp $ (ARL)";
@


1.14
log
@rdebug, AmbientIntensity, and background globals were moved to here from the raytrace front-end
@
text
@d28 1
a28 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/liboptical/init.c,v 1.13 2003/09/03 06:11:33 butler Exp $ (ARL)";
d44 1
a48 5
#if 0
vect_t	background = { 0.25, 0, 0.5 };	/* Dark Blue Background */
#else
extern vect_t	background = { 0, 0, 1.0/255 };	/* Nearly Black */
#endif
@


1.14.2.1
log
@updates from HEAD, part 1
@
text
@d28 1
a28 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/liboptical/init.c,v 1.15 2003/10/08 17:12:01 morrison Exp $ (ARL)";
a43 1
vect_t		background = { 0.0, 0.0, 0.0 }; /* Black */
d48 5
@


1.14.2.2
log
@merge from HEAD
@
text
@d24 1
a24 1
 *	This software is Copyright (C) 1998-2004 by the United States Army
d28 1
a28 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/liboptical/init.c,v 1.16 2004/02/02 17:39:13 morrison Exp $ (ARL)";
@


1.14.2.3
log
@merge from head
@
text
@d28 1
a28 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/liboptical/init.c,v 1.14.2.2 2004/02/12 18:38:49 erikg Exp $ (ARL)";
@


1.13
log
@Added "billboard" shader
@
text
@d28 1
a28 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/liboptical/init.c,v 1.12 2002/03/07 23:07:09 morrison Exp $ (ARL)";
d42 3
d47 6
@


1.12
log
@added the null and flat shaders
@
text
@d28 1
a28 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/liboptical/init.c,v 1.11 2000/08/20 01:27:47 butler Exp $ (ARL)";
d79 1
@


1.12.4.1
log
@sync branch with HEAD
@
text
@d24 1
a24 1
 *	This software is Copyright (C) 1998-2004 by the United States Army
d28 1
a28 1
static const char RCSid[] = "@@(#)$Header$ (ARL)";
a41 4
int		rdebug;			/* RT program debugging */
double		AmbientIntensity = 0.4;	/* Ambient light intensity */
vect_t		background = { 0.0, 0.0, 0.0 }; /* Black */

a44 1

a78 1
	MFUNCS( bbd_mfuncs );
@


1.12.6.1
log
@sync to HEAD...
@
text
@d24 1
a24 1
 *	This software is Copyright (C) 1998-2004 by the United States Army
d28 1
a28 1
static const char RCSid[] = "@@(#)$Header: /n/cad/c/CVS/brlcad/liboptical/init.c,v 1.16 2004/02/02 17:39:13 morrison Exp $ (ARL)";
a41 4
int		rdebug;			/* RT program debugging */
double		AmbientIntensity = 0.4;	/* Ambient light intensity */
vect_t		background = { 0.0, 0.0, 0.0 }; /* Black */

a44 1

a78 1
	MFUNCS( bbd_mfuncs );
@


1.11
log
@Eliminate compilation warnings, enhancements to sh_light.c
@
text
@d28 1
a28 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/liboptical/init.c,v 1.10 2000/08/20 00:44:47 butler Exp $ (ARL)";
d56 1
d78 1
@


1.10
log
@Misc commpilation changes and enhancements to light shader
@
text
@d28 1
a28 1
static char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/liboptical/init.c,v 1.9 2000/07/25 16:40:37 butler Exp $ (ARL)";
@


1.9
log
@Changes to use rtprivate.h instead of ../rt/rdebug.h
@
text
@d28 1
a28 1
static char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/liboptical/init.c,v 1.8 2000/01/22 03:23:44 mike Exp $ (ARL)";
d49 1
a49 2
optical_shader_init(headp)
struct mfuncs	**headp;
@


1.8
log
@
Since brick and noiseperlin have been removed from the library,
they need to be removed here too.
@
text
@d28 1
a28 1
static char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/liboptical/init.c,v 1.7 1999/12/02 21:40:23 mike Exp $ (ARL)";
d40 1
a40 1
#include "../rt/rdebug.h"
@


1.7
log
@
Mike Caruso added two shaders!
@
text
@d28 1
a28 1
static char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/liboptical/init.c,v 1.6 1999/11/24 22:18:52 mike Exp $ (ARL)";
a77 3
	MFUNCS( brick_mfuncs );
	MFUNCS( noiseperlin_mfuncs );

@


1.6
log
@
Removed obsolete include files
@
text
@d28 1
a28 1
static char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/liboptical/init.c,v 1.5 1999/02/19 03:38:10 butler Exp $ (ARL)";
d78 2
@


1.5
log
@Added treetherm shader
@
text
@d28 1
a28 1
static char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/liboptical/init.c,v 1.4 1999/02/04 02:27:13 butler Exp $ (ARL)";
d36 1
a36 1
#include "rtlist.h"
@


1.4
log
@The "marble" shader has been deleted and re-implemented using the new noise
functions.  The new marble shader is in sh_camo.c
@
text
@d28 1
a28 1
static char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/liboptical/init.c,v 1.3 1999/01/29 05:53:31 butler Exp $ (ARL)";
d77 1
@


1.3
log
@Changed name of shader in sh_noise from 'gravel' to 'noise'.
fixed pointer bug in sh_stack.c
@
text
@d28 1
a28 1
static char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/liboptical/init.c,v 1.2 1998/12/11 05:53:44 mike Exp $ (ARL)";
a62 1
	MFUNCS( marble_mfuncs );
d77 1
@


1.2
log
@Simplified adding additional shaders.
@
text
@d28 1
a28 1
static char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/liboptical/init.c,v 1.1 1998/09/22 03:06:45 mike Exp $ (ARL)";
d75 1
a75 1
	MFUNCS( gravel_mfuncs );
@


1.1
log
@Main linkage between rt/view.c and the optical shader library
@
text
@d28 1
a28 1
static char RCSid[] = "@@(#)$Header$ (ARL)";
d42 3
d56 22
a77 47
	{
		extern struct mfuncs phg_mfuncs[];
		extern struct mfuncs light_mfuncs[];
		extern struct mfuncs cloud_mfuncs[];
		extern struct mfuncs spm_mfuncs[];
		extern struct mfuncs txt_mfuncs[];
		extern struct mfuncs stk_mfuncs[];
		extern struct mfuncs cook_mfuncs[];
		extern struct mfuncs marble_mfuncs[];
		extern struct mfuncs stxt_mfuncs[];
		extern struct mfuncs points_mfuncs[];
		extern struct mfuncs toyota_mfuncs[];
		extern struct mfuncs wood_mfuncs[];
		extern struct mfuncs camo_mfuncs[]; 
		extern struct mfuncs scloud_mfuncs[];
		extern struct mfuncs air_mfuncs[];
		extern struct mfuncs rtrans_mfuncs[];
		extern struct mfuncs fire_mfuncs[];
		extern struct mfuncs brdf_mfuncs[];
		extern struct mfuncs gauss_mfuncs[];
		extern struct mfuncs gravel_mfuncs[];
		extern struct mfuncs prj_mfuncs[];
		extern struct mfuncs grass_mfuncs[];

		mlib_add_shader( headp, phg_mfuncs );
		mlib_add_shader( headp, light_mfuncs );
		mlib_add_shader( headp, cloud_mfuncs );
		mlib_add_shader( headp, spm_mfuncs );
		mlib_add_shader( headp, txt_mfuncs );
		mlib_add_shader( headp, stk_mfuncs );
		mlib_add_shader( headp, cook_mfuncs );
		mlib_add_shader( headp, marble_mfuncs );
		mlib_add_shader( headp, stxt_mfuncs );
		mlib_add_shader( headp, points_mfuncs );
		mlib_add_shader( headp, toyota_mfuncs );
		mlib_add_shader( headp, wood_mfuncs );
		mlib_add_shader( headp, camo_mfuncs );
		mlib_add_shader( headp, scloud_mfuncs );
		mlib_add_shader( headp, air_mfuncs );
		mlib_add_shader( headp, rtrans_mfuncs );
		mlib_add_shader( headp, fire_mfuncs );
		mlib_add_shader( headp, brdf_mfuncs );
		mlib_add_shader( headp, gauss_mfuncs );
		mlib_add_shader( headp, gravel_mfuncs );
		mlib_add_shader( headp, prj_mfuncs );
		mlib_add_shader( headp, grass_mfuncs );
	}
@
