head	1.10;
access;
symbols
	ansi-20040405-merged:1.8
	postmerge-20040405-ansi:1.8
	premerge-20040404-ansi:1.8
	postmerge-autoconf:1.8
	autoconf-freeze:1.8
	premerge-autoconf:1.8
	ansi-20040316-freeze:1.8
	postmerge-20040315-windows:1.8
	premerge-20040315-windows:1.8
	windows-20040315-freeze:1.8
	autoconf-20031203:1.8
	autoconf-20031202:1.8
	autoconf-branch:1.8.0.12
	phong-branch:1.8.0.10
	photonmap-branch:1.8.0.8
	rel-6-1-DP:1.8
	windows-branch:1.8.0.6
	rel-6-0-2:1.8
	ansi-branch:1.8.0.4
	rel-6-0-1-branch:1.8.0.2
	hartley-6-0-post:1.8
	hartley-6-0-pre:1.8
	rel-6-0-1:1.8
	rel-6-0:1.8
	rel-5-4:1.5
	offsite-5-3-pre:1.7
	rel-5-3:1.5
	rel-5-2:1.5
	rel-5-1-branch:1.5.0.2
	rel-5-1:1.5
	rel-5-0:1.5
	rel-5-0-beta:1.5
	rel-4-5:1.5
	ctj-4-5-post:1.4
	ctj-4-5-pre:1.4
	rel-4-4:1.4
	rel-4-0:1.4
	rel-3-5:1.2;
locks; strict;
comment	@ * @;


1.10
date	2004.05.24.04.18.19;	author morrison;	state dead;
branches;
next	1.9;

1.9
date	2004.05.10.15.30.41;	author erikg;	state Exp;
branches;
next	1.8;

1.8
date	2001.10.17.07.40.00;	author morrison;	state Exp;
branches;
next	1.7;

1.7
date	2000.09.06.20.11.11;	author mike;	state Exp;
branches;
next	1.6;

1.6
date	2000.08.24.23.12.44;	author mike;	state Exp;
branches;
next	1.5;

1.5
date	97.12.16.03.45.56;	author mike;	state Exp;
branches;
next	1.4;

1.4
date	91.01.15.13.53.27;	author moss;	state Exp;
branches;
next	1.3;

1.3
date	89.10.31.12.20.07;	author moss;	state Exp;
branches;
next	1.2;

1.2
date	89.01.20.15.21.27;	author moss;	state Exp;
branches;
next	1.1;

1.1
date	88.10.28.17.02.21;	author moss;	state Exp;
branches;
next	;


desc
@@


1.10
log
@moved to src/burst/
@
text
@/*
	Author:		Gary S. Moss
			U. S. Army Ballistic Research Laboratory
			Aberdeen Proving Ground
			Maryland 21005-5066
*/
#ifndef lint
static const char RCSid[] = "@@(#)$Header: /n/xoff/cvs/brlcad/burst/plot.c,v 1.9 2004/05/10 15:30:41 erikg Exp $ (BRL)";
#endif

#ifdef HAVE_CONFIG_H
# include "config.h"
#endif



#include <stdio.h>
#include <math.h>
#include <signal.h>
#include "machine.h"
#include "bu.h"
#include "vmath.h"
#include "bn.h"
#include "raytrace.h"
#include "plot3.h"
#include "./vecmath.h"
#include "./burst.h"
#include "./extern.h"

void
plotInit()
	{	int	x1, y1, z1, x2, y2, z2;
	if( plotfp == NULL )
		return;
	x1 = (int) rtip->mdl_min[X] - 1;
	y1 = (int) rtip->mdl_min[Y] - 1;
	z1 = (int) rtip->mdl_min[Z] - 1;
	x2 = (int) rtip->mdl_max[X] + 1;
	y2 = (int) rtip->mdl_max[Y] + 1;
	z2 = (int) rtip->mdl_max[Z] + 1;
	pl_3space( plotfp, x1, y1, z1, x2, y2, z2 );
	return;
	}

void
plotGrid( r_pt )
register fastf_t	*r_pt;
	{
	if( plotfp == NULL )
		return;
	pl_color( plotfp, R_GRID, G_GRID, B_GRID );
	pl_3point( plotfp, (int) r_pt[X], (int) r_pt[Y], (int) r_pt[Z] );
	return;
	}

void
plotRay( rayp )
register struct xray	*rayp;
	{	int	endpoint[3];
	if( plotfp == NULL )
		return;
	VJOIN1( endpoint, rayp->r_pt, cellsz, rayp->r_dir );
	bu_semaphore_acquire( BU_SEM_SYSCALL );
	pl_color( plotfp, R_BURST, G_BURST, B_BURST );
#if 0
	pl_3line(	plotfp,
			(int) rayp->r_pt[X],
			(int) rayp->r_pt[Y],
			(int) rayp->r_pt[Z],
			endpoint[X],
			endpoint[Y],
			endpoint[Z]
			);
#else
	pl_3point( plotfp, (int) endpoint[X], (int) endpoint[Y], (int) endpoint[Z] );
#endif
	bu_semaphore_release( BU_SEM_SYSCALL );
	return;
	}

void
plotPartition( ihitp, ohitp, rayp, regp )
struct hit		*ihitp;
register struct hit	*ohitp ;
register struct xray	*rayp;
struct region		*regp;
	{
	if( plotfp == NULL )
		return;
	bu_semaphore_acquire( BU_SEM_SYSCALL );
	pl_3line(	plotfp,
			(int) ihitp->hit_point[X],
			(int) ihitp->hit_point[Y],
			(int) ihitp->hit_point[Z],
			(int) ohitp->hit_point[X],
			(int) ohitp->hit_point[Y],
			(int) ohitp->hit_point[Z]
			);
	bu_semaphore_release( BU_SEM_SYSCALL );
	return;
	}
@


1.9
log
@change conf.h to a wrapped config.h
@
text
@d8 1
a8 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/burst/plot.c,v 1.8 2001/10/17 07:40:00 morrison Exp $ (BRL)";
@


1.8
log
@Mac OS X warning and error fixes for non-production build
@
text
@d8 1
a8 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/burst/plot.c,v 1.7 2000/09/06 20:11:11 mike Exp $ (BRL)";
d11 5
a15 1
#include "conf.h"
@


1.7
log
@
lint
@
text
@d8 1
a8 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/burst/plot.c,v 1.6 2000/08/24 23:12:44 mike Exp $ (BRL)";
d15 1
@


1.6
log
@
RCSid
@
text
@d8 1
a8 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/burst/plot.c,v 1.5 1997/12/16 03:45:56 mike Exp $ (BRL)";
d11 2
d16 1
d18 1
d20 1
@


1.5
log
@UPgraded using h/sed4
@
text
@d8 1
a8 1
static char RCSid[] = "@@(#)$Header: /m/cad/burst/RCS/plot.c,v 1.4 1991/01/15 13:53:27 moss Exp mike $ (BRL)";
@


1.4
log
@Removed author's phone number from top of file comment.  This will be
shipped as version 2.1.
@
text
@d8 1
a8 1
static char RCSid[] = "@@(#)$Header: /vld/moss/src/burst/RCS/plot.c,v 1.3 89/10/31 12:20:07 moss Exp $ (BRL)";
d53 1
a53 1
	RES_ACQUIRE( &rt_g.res_syscall );
d67 1
a67 1
	RES_RELEASE( &rt_g.res_syscall );
d80 1
a80 1
	RES_ACQUIRE( &rt_g.res_syscall );
d89 1
a89 1
	RES_RELEASE( &rt_g.res_syscall );
@


1.3
log
@This version released to Eglin and Service Engineering after BRL-CAD '89
Symposium.
@
text
@a5 1
			(301)278-6647 or AV-298-6647
d8 1
a8 1
static char RCSid[] = "@@(#)$Header: /usr/vld/moss/src/burst/RCS/plot.c,v 1.2 89/01/20 15:21:27 moss Exp $ (BRL)";
@


1.2
log
@Just saving this version for backup purposes, recently added support for
explicitly inputing burst points.
@
text
@d9 1
a9 1
static char RCSid[] = "@@(#)$Header: /usr/vld/moss/src/burst/RCS/plot.c,v 1.1 88/10/28 17:02:21 moss Exp $ (BRL)";
a19 6
#define R_GRID	255
#define G_GRID	255
#define B_GRID	0
#define R_BURST	255
#define G_BURST	0
#define B_BURST	0
a80 13
#if 0
	if(	regp->reg_mater.ma_rgb[0] == 0
	    &&	regp->reg_mater.ma_rgb[1] == 0
	    &&	regp->reg_mater.ma_rgb[2] == 0
		)
		pl_color( plotfp, 255, 255, 255 );
	else
		pl_color(	plotfp,
				(int) regp->reg_mater.ma_rgb[0],
				(int) regp->reg_mater.ma_rgb[1],
				(int) regp->reg_mater.ma_rgb[2]
				);
#endif
a90 17
	return;
	}

void
plotShieldComp( rayp, qp )
register struct xray	*rayp;
register Pt_Queue	*qp;
	{	register struct hit	*ohitp;
	if( qp == PT_Q_NULL )
		return;
	plotShieldComp( rayp, qp->q_next );

	/* Fill in hit point and normal.				*/
	ohitp = qp->q_part->pt_outhit;
	VJOIN1( ohitp->hit_point, rayp->r_pt, ohitp->hit_dist, rayp->r_dir );
	colorPartition( qp->q_part->pt_regionp, C_SHIELD );
	plotPartition( qp->q_part->pt_inhit, ohitp, rayp, qp->q_part->pt_regionp );
@


1.1
log
@Initial revision
@
text
@d9 1
a9 1
static char RCSid[] = "@@(#)$Header$ (BRL)";
d125 1
a125 1
	color_Part( qp->q_part->pt_regionp, C_SHIELD );
@
