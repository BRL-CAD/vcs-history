head	11.9;
access;
symbols
	ansi-20040405-merged:11.6.2.1
	postmerge-20040405-ansi:11.7
	premerge-20040404-ansi:11.6
	postmerge-autoconf:11.6
	autoconf-freeze:11.6
	premerge-autoconf:11.6
	ansi-20040316-freeze:11.6.2.1
	postmerge-20040315-windows:11.6
	premerge-20040315-windows:11.6
	windows-20040315-freeze:11.6
	autoconf-20031203:11.6
	autoconf-20031202:11.6
	autoconf-branch:11.6.0.10
	phong-branch:11.6.0.8
	photonmap-branch:11.6.0.6
	rel-6-1-DP:11.6
	windows-branch:11.6.0.4
	rel-6-0-2:11.4
	ansi-branch:11.6.0.2
	rel-6-0-1-branch:11.4.0.2
	hartley-6-0-post:11.5
	hartley-6-0-pre:11.4
	rel-6-0-1:11.4
	rel-6-0:11.4
	rel-5-4:11.2
	offsite-5-3-pre:11.3
	rel-5-3:11.2
	rel-5-2:11.2
	rel-5-1-branch:11.2.0.2
	rel-5-1:11.2
	rel-5-0:11.2
	rel-5-0-beta:11.1
	rel-4-5:11.1
	ctj-4-5-post:11.1
	ctj-4-5-pre:11.1
	rel-4-4:11.1
	rel-4-0:10.1
	rel-3-5:9.1
	rel-3-0:8.1
	rel-2-3:7.1
	rel-2-0:5.2
	rel-1-24:5.1
	rel-1-20:1.1;
locks; strict;
comment	@ * @;


11.9
date	2004.05.21.17.48.14;	author morrison;	state dead;
branches;
next	11.8;

11.8
date	2004.05.10.15.30.43;	author erikg;	state Exp;
branches;
next	11.7;

11.7
date	2004.04.05.07.46.59;	author morrison;	state Exp;
branches;
next	11.6;

11.6
date	2002.08.20.17.07.33;	author jra;	state Exp;
branches
	11.6.2.1;
next	11.5;

11.5
date	2002.08.15.20.54.45;	author hartley;	state Exp;
branches;
next	11.4;

11.4
date	2001.08.08.21.02.04;	author jra;	state Exp;
branches;
next	11.3;

11.3
date	2000.08.24.22.55.50;	author mike;	state Exp;
branches;
next	11.2;

11.2
date	99.06.03.21.40.50;	author mike;	state Exp;
branches;
next	11.1;

11.1
date	95.01.04.10.17.39;	author mike;	state Rel4_4;
branches;
next	10.2;

10.2
date	94.08.23.19.56.37;	author gdurf;	state Exp;
branches;
next	10.1;

10.1
date	91.10.12.06.49.56;	author mike;	state Rel4_0;
branches;
next	9.2;

9.2
date	89.05.22.12.43.19;	author moss;	state Exp;
branches;
next	9.1;

9.1
date	89.05.19.06.12.51;	author mike;	state Rel3_5;
branches;
next	8.2;

8.2
date	89.05.12.23.27.03;	author moss;	state Exp;
branches;
next	8.1;

8.1
date	88.10.05.00.51.34;	author mike;	state Rel3_0;
branches;
next	7.1;

7.1
date	87.11.03.00.11.44;	author mike;	state Rel;
branches;
next	6.2;

6.2
date	87.10.29.08.50.38;	author moss;	state Exp;
branches;
next	6.1;

6.1
date	87.07.11.08.15.14;	author mike;	state Rel;
branches;
next	5.2;

5.2
date	87.07.01.13.37.41;	author moss;	state Exp;
branches;
next	5.1;

5.1
date	87.06.24.22.46.35;	author mike;	state Rel;
branches;
next	1.2;

1.2
date	87.06.23.12.29.12;	author moss;	state Exp;
branches;
next	1.1;

1.1
date	87.02.04.15.07.49;	author moss;	state Exp;
branches;
next	;

11.6.2.1
date	2002.09.19.18.01.01;	author morrison;	state Exp;
branches;
next	;


desc
@Ready for distribution.
@


11.9
log
@moved to src/lgt/
@
text
@/*
	Authors:	Paul R. Stay
			Gary S. Moss
			Doug A. Gwyn

			U. S. Army Ballistic Research Laboratory
			Aberdeen Proving Ground
			Maryland 21005-5066
			(301)278-6647 or AV-298-6647
*/
#ifndef lint
static const char RCSid[] = "@@(#)$Header: /n/xoff/cvs/brlcad/lgt/char.c,v 11.8 2004/05/10 15:30:43 erikg Exp $ (BRL)";
#endif
/* 
	char.c - routines for displaying a string on a frame buffer.
 */

#ifdef HAVE_CONFIG_H
# include "config.h"
#endif



#include <stdio.h>

#ifdef USE_STRING_H
#include <string.h>
#else
#include <strings.h>
#endif

#include "machine.h"
#include "externs.h"
#include "fb.h"
#include "vmath.h"
#include "raytrace.h"

#include "./hmenu.h"
#include "./lgt.h"
#include "./extern.h"
#include "./font.h"

#define BUFFSIZ 200
STATIC int	bitx(register char *bitstring, register int posn);
STATIC void	do_char(int c, register int xpos, register int ypos);

void
do_line(int xpos, int ypos, register char *line)
{	register int    currx;
		register int    char_count, char_id;
		register int	len = strlen( line );
	if( ffdes == NULL )
		{
		bu_log( "ERROR: do_line() called before get_Font().\n" );
		return;
		}
	currx = xpos;

	for( char_count = 0; char_count < len; char_count++ )
		{
		char_id = (int) line[char_count] & 0377;

		/* Since there is no valid space in font, skip to the right
			using the width of the digit zero.
		 */
		if( char_id == ' ' )
			{
			currx += (SWABV(dir['0'].width) + 2) / ir_aperture;
			continue;
			}

		/* locate the bitmap for the character in the file */
		if( fseek( ffdes, (long)(SWABV(dir[char_id].addr)+offset), 0 )
			== EOF
			)
			{
			bu_log( "fseek() to %ld failed.\n",
				(long)(SWABV(dir[char_id].addr) + offset)
				);
			return;
			}

		/* Read in the dimensions for the character */
		width = dir[char_id].right + dir[char_id].left;
		height = dir[char_id].up + dir[char_id].down;

		if( currx + width > fb_getwidth( fbiop ) - 1 )
			break;		/* won't fit on screen */

		do_char( char_id, currx, ypos );
		currx += (SWABV(dir[char_id].width) + 2) / ir_aperture;
    		}
	return;
	}

/*	d o _ c h a r ( )
	Outputs pixel representation of a chararcter by reading a row of a
	bitmap from the character font file.  The file pointer is assumed
	to be in the correct position.
 */
STATIC void
do_char(int c, register int xpos, register int ypos)
{	int     	up = dir[c].up / ir_aperture;
		int		left = dir[c].left / ir_aperture;
		static char	bitbuf[BUFFSIZ][BUFFSIZ];
		static RGBpixel	pixel;
		register int    h, i, j;
		int		k, x;
	for( k = 0; k < height; k++ )
		{
		/* Read row, rounding width up to nearest byte value. */
		if( fread( bitbuf[k], width/8+(width % 8 == 0 ? 0 : 1), 1, ffdes )
			!= 1 )
			{
			bu_log( "\"%s\" (%d) read of character from font failed.\n",
				__FILE__, __LINE__
				);
			return;
			}
		}
	for( k = 0; k < height; k += ir_aperture, ypos-- )
		{
		x = xpos - left;
		for( j = 0; j < width; j += ir_aperture, x++ )
			{	register int	sum;
				fastf_t		weight;
			/* The bitx routine extracts the bit value.
				Can't just use the j-th bit because
				the bytes are backwards. */
			sum = 0;
			for( i = 0; i < ir_aperture; i++ )
				for( h = 0; h < ir_aperture; h++ )
					sum += bitx(	bitbuf[k+i],
							((j+h)&~7) + (7-((j+h)&7))
							) != 0;
			weight = (fastf_t) sum / sample_sz;
			if( fb_seek( fbiop, x, ypos + up ) == -1 )
				continue;
			if( fb_rpixel( fbiop, (unsigned char *) pixel ) == -1 )
				{
				bu_log( "\"%s\" (%d) read of pixel from <%d,%d> failed.\n",
					__FILE__, __LINE__, x, ypos
					);
				return;
				}
			pixel[RED] = pixel[RED]*(1.0-weight) + FONTCOLOR_RED*weight;
			pixel[GRN] = pixel[GRN]*(1.0-weight) + FONTCOLOR_GRN*weight;
			pixel[BLU] = pixel[BLU]*(1.0-weight) + FONTCOLOR_BLU*weight;
			if( fb_seek( fbiop, x, ypos + up ) == -1 )
				continue;
			if( fb_wpixel( fbiop, (unsigned char *) pixel ) == -1 )
				{
				bu_log( "\"%s\" (%d) write of pixel to <%d,%d> failed.\n",
					__FILE__, __LINE__, x, ypos
					);
				return;
				}
			}
		}
	return;
	}

/*	b i t x ( )
	Extract a bit field from a bit string.
 */
/*ARGSUSED*/
STATIC int
bitx(register char *bitstring, register int posn)
{
#if defined( vax )
   	register field;

   	asm("extzv	r10,$1,(r11),r8");
	return field;
#else
	for( ; posn >= 8; posn -= 8, bitstring++ )
		;
#if defined( CANT_DO_ZERO_SHIFT )
	if( posn == 0 )
		return	(int)(*bitstring) & 1;
	else
#endif
	return	(int)(*bitstring) & (1<<posn);
#endif
	}
@


11.8
log
@change conf.h to a wrapped config.h
@
text
@d12 1
a12 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/lgt/char.c,v 11.7 2004/04/05 07:46:59 morrison Exp $ (BRL)";
@


11.7
log
@merge of ansi-6-0-branch into HEAD
@
text
@d12 1
a12 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
d18 5
a22 1
#include "conf.h"
@


11.6
log
@Restoration of entire source tree to Pre-Hartley state
@
text
@d12 1
a12 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/lgt/char.c,v 11.4 2001/08/08 21:02:04 jra Exp $ (BRL)";
d40 2
a41 2
STATIC int	bitx();
STATIC void	do_char();
d44 2
a45 4
do_line( xpos, ypos, line )
int		xpos, ypos;
register char	*line;
	{	register int    currx;
d98 2
a99 4
do_char( c, xpos, ypos )
int		c;
register int	xpos, ypos;
	{	int     	up = dir[c].up / ir_aperture;
d164 2
a165 4
bitx( bitstring, posn )
register char *bitstring;
register int posn;
	{
@


11.6.2.1
log
@Initial ANSIfication
@
text
@d12 1
a12 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/lgt/char.c,v 11.6 2002/08/20 17:07:33 jra Exp $ (BRL)";
d40 2
a41 2
STATIC int	bitx(register char *bitstring, register int posn);
STATIC void	do_char(int c, register int xpos, register int ypos);
d44 4
a47 2
do_line(int xpos, int ypos, register char *line)
{	register int    currx;
d100 4
a103 2
do_char(int c, register int xpos, register int ypos)
{	int     	up = dir[c].up / ir_aperture;
d168 4
a171 2
bitx(register char *bitstring, register int posn)
{
@


11.5
log
@Converted from K&R to ANSI C - RFH
@
text
@d40 2
a41 2
STATIC int	bitx(register char *bitstring, register int posn);
STATIC void	do_char(int c, register int xpos, register int ypos);
d44 4
a47 2
do_line(int xpos, int ypos, register char *line)
{	register int    currx;
d100 4
a103 2
do_char(int c, register int xpos, register int ypos)
{	int     	up = dir[c].up / ir_aperture;
d168 4
a171 2
bitx(register char *bitstring, register int posn)
{
@


11.4
log
@lint
@
text
@d12 1
a12 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/lgt/char.c,v 11.3 2000/08/24 22:55:50 mike Exp $ (BRL)";
d40 2
a41 2
STATIC int	bitx();
STATIC void	do_char();
d44 2
a45 4
do_line( xpos, ypos, line )
int		xpos, ypos;
register char	*line;
	{	register int    currx;
d98 2
a99 4
do_char( c, xpos, ypos )
int		c;
register int	xpos, ypos;
	{	int     	up = dir[c].up / ir_aperture;
d164 2
a165 4
bitx( bitstring, posn )
register char *bitstring;
register int posn;
	{
@


11.3
log
@
RCSid
@
text
@d12 1
a12 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/lgt/char.c,v 11.2 1999/06/03 21:40:50 mike Exp $ (BRL)";
d21 6
@


11.2
log
@
sed4
@
text
@d12 1
a12 1
static char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/lgt/char.c,v 11.1 1995/01/04 10:17:39 mike Rel4_4 $ (BRL)";
@


11.1
log
@Release_4.4
@
text
@d12 1
a12 1
static char RCSid[] = "@@(#)$Header: /m/cad/lgt/RCS/char.c,v 10.2 94/08/23 19:56:37 gdurf Exp $ (BRL)";
d46 1
a46 1
		rt_log( "ERROR: do_line() called before get_Font().\n" );
d69 1
a69 1
			rt_log( "fseek() to %ld failed.\n",
d109 1
a109 1
			rt_log( "\"%s\" (%d) read of character from font failed.\n",
d135 1
a135 1
				rt_log( "\"%s\" (%d) read of pixel from <%d,%d> failed.\n",
d147 1
a147 1
				rt_log( "\"%s\" (%d) write of pixel to <%d,%d> failed.\n",
@


10.2
log
@Made includes explicit
@
text
@d12 1
a12 1
static char RCSid[] = "@@(#)$Header: /m/cad/lgt/RCS/char.c,v 10.1 1991/10/12 06:49:56 mike Rel4_0 gdurf $ (BRL)";
@


10.1
log
@Release_4.0
@
text
@d12 1
a12 1
static char RCSid[] = "@@(#)$Header: /m/cad/lgt/RCS/char.c,v 9.2 89/05/22 12:43:19 moss Exp $ (BRL)";
d18 2
d21 9
a29 1
#include <fb.h>
d32 1
d133 1
a133 1
			if( fb_rpixel( fbiop, (RGBpixel *) pixel ) == -1 )
d145 1
a145 1
			if( fb_wpixel( fbiop, (RGBpixel *) pixel ) == -1 )
@


9.2
log
@Changed the 2nd arg to fb_[rw]pixel to be a ptr. rather than just an
	RGBpixel.
@
text
@d12 1
a12 1
static char RCSid[] = "@@(#)$Header: char.c,v 9.1 89/05/19 06:12:51 moss Locked $ (BRL)";
@


9.1
log
@Release_3.5
@
text
@d12 1
a12 1
static char RCSid[] = "@@(#)$Header: char.c,v 8.2 89/05/12 23:27:03 moss Exp $ (BRL)";
d122 1
a122 1
			if( fb_rpixel( fbiop, pixel ) == -1 )
d134 1
a134 1
			if( fb_wpixel( fbiop, pixel ) == -1 )
@


8.2
log
@pre release changes
@
text
@d12 1
a12 1
static char RCSid[] = "@@(#)$Header: char.c,v 7.1 87/11/03 00:11:44 mike Rel $ (BRL)";
@


8.1
log
@Release_3.0
@
text
@d12 1
a12 1
static char RCSid[] = "@@(#)$Header: char.c,v 7.1 87/11/03 00:11:44 moss Locked $ (BRL)";
a13 8
/*
	Originally extracted from SCCS archive:

		SCCS id:	@@(#) char.c	2.1
		Modified: 	12/10/86 at 16:04:27	G S M
		Retrieved: 	2/4/87 at 08:53:52
		SCCS archive:	/vld/moss/src/lgt/s.char.c
*/
d20 1
a21 1
#include "./extern.h"
d23 2
a24 2
_LOCAL_ int	bitx();
_LOCAL_ void	do_char();
d82 1
a82 1
_LOCAL_ void
d150 1
a150 1
_LOCAL_ int
@


7.1
log
@Release 2.3
@
text
@d12 1
a12 1
static char RCSid[] = "@@(#)$Header: char.c,v 6.2 87/10/29 08:50:38 moss Exp $ (BRL)";
@


6.2
log
@Ready for release 2.1 of BRL CAD.
@
text
@d12 1
a12 1
static char RCSid[] = "@@(#)$Header: char.c,v 6.1 87/07/11 08:15:14 moss Locked $ (BRL)";
@


6.1
log
@Release 2.0
@
text
@d12 1
a12 1
static char RCSid[] = "@@(#)$Header: char.c,v 5.2 87/07/01 13:37:41 moss Exp $ (BRL)";
d157 1
@


5.2
log
@Fixes to IR module resulting from changes in LIBFB and the restructuring
of the gridding loop for parallel architectures.
@
text
@d12 1
a12 1
static char RCSid[] = "@@(#)$Header: char.c,v 5.1 87/06/24 22:46:35 mike Rel $ (BRL)";
@


5.1
log
@Release 1.24
@
text
@d12 1
a12 1
static char RCSid[] = "@@(#)$Header: char.c,v 1.2 87/06/23 12:29:12 moss Exp $ (BRL)";
d57 1
a57 1
			currx += (SWABV(dir['0'].width) + 2) / aperture_sz;
d80 1
a80 1
		currx += (SWABV(dir[char_id].width) + 2) / aperture_sz;
d94 2
a95 2
	{	int     	up = dir[c].up / aperture_sz;
		int		left = dir[c].left / aperture_sz;
d112 1
a112 1
	for( k = 0; k < height; k += aperture_sz, ypos-- )
d115 1
a115 1
		for( j = 0; j < width; j += aperture_sz, x++ )
d122 2
a123 2
			for( i = 0; i < aperture_sz; i++ )
				for( h = 0; h < aperture_sz; h++ )
@


1.2
log
@Ready for release 1.23.  This includes the a_overlap function support,
and return to 128 byte records on IEEE floating point architectures.
@
text
@d12 1
a12 1
static char RCSid[] = "@@(#)$Header: char.c,v 1.1 87/02/04 15:07:49 moss Locked $ (BRL)";
@


1.1
log
@Initial revision
@
text
@d12 1
a12 1
static char RCSid[] = "@@(#)$Header$ (BRL)";
d98 2
a99 1
		register int    h, i, j, k, x;
@
