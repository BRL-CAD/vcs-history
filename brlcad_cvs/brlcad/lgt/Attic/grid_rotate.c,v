head	11.7;
access;
symbols
	ansi-20040405-merged:11.4.2.1
	postmerge-20040405-ansi:11.5
	premerge-20040404-ansi:11.4
	postmerge-autoconf:11.4
	autoconf-freeze:11.4
	premerge-autoconf:11.4
	ansi-20040316-freeze:11.4.2.1
	postmerge-20040315-windows:11.4
	premerge-20040315-windows:11.4
	windows-20040315-freeze:11.4
	autoconf-20031203:11.4
	autoconf-20031202:11.4
	autoconf-branch:11.4.0.10
	phong-branch:11.4.0.8
	photonmap-branch:11.4.0.6
	rel-6-1-DP:11.4
	windows-branch:11.4.0.4
	rel-6-0-2:11.2
	ansi-branch:11.4.0.2
	rel-6-0-1-branch:11.2.0.2
	hartley-6-0-post:11.3
	hartley-6-0-pre:11.2
	rel-6-0-1:11.2
	rel-6-0:11.2
	rel-5-4:11.1
	offsite-5-3-pre:11.2
	rel-5-3:11.1
	rel-5-2:11.1
	rel-5-1-branch:11.1.0.2
	rel-5-1:11.1
	rel-5-0:11.1
	rel-5-0-beta:11.1
	rel-4-5:11.1
	ctj-4-5-post:11.1
	ctj-4-5-pre:11.1
	rel-4-4:11.1
	rel-4-0:10.1
	rel-3-5:9.1
	rel-3-0:8.1
	rel-2-3:7.1
	rel-2-0:1.2
	rel-1-24:1.2
	rel-1-20:1.2;
locks; strict;
comment	@ * @;


11.7
date	2004.05.21.17.48.15;	author morrison;	state dead;
branches;
next	11.6;

11.6
date	2004.05.10.15.30.43;	author erikg;	state Exp;
branches;
next	11.5;

11.5
date	2004.04.05.07.46.59;	author morrison;	state Exp;
branches;
next	11.4;

11.4
date	2002.08.20.17.07.33;	author jra;	state Exp;
branches
	11.4.2.1;
next	11.3;

11.3
date	2002.08.15.20.54.46;	author hartley;	state Exp;
branches;
next	11.2;

11.2
date	2000.08.24.22.55.51;	author mike;	state Exp;
branches;
next	11.1;

11.1
date	95.01.04.10.17.48;	author mike;	state Rel4_4;
branches;
next	10.2;

10.2
date	94.08.24.13.34.55;	author gdurf;	state Exp;
branches;
next	10.1;

10.1
date	91.10.12.06.50.04;	author mike;	state Rel4_0;
branches;
next	9.1;

9.1
date	89.05.19.06.13.10;	author mike;	state Rel3_5;
branches;
next	8.2;

8.2
date	89.05.12.23.27.27;	author moss;	state Exp;
branches;
next	8.1;

8.1
date	88.10.05.00.51.51;	author mike;	state Rel3_0;
branches;
next	7.1;

7.1
date	87.11.03.00.21.07;	author mike;	state Rel;
branches;
next	1.2;

1.2
date	87.02.06.12.26.10;	author moss;	state Exp;
branches;
next	1.1;

1.1
date	87.02.04.15.14.55;	author moss;	state Exp;
branches;
next	;

11.4.2.1
date	2002.09.19.18.01.02;	author morrison;	state Exp;
branches;
next	;


desc
@This is the initial version as far as the BRL/CAD distribution is concerned.
It is extracted from SCCS archives.
@


11.7
log
@moved to src/lgt/
@
text
@/*
	Author:		Jeff Hanes
			U. S. Army Ballistic Research Laboratory
			Aberdeen Proving Ground
			Maryland 21005-5066
			(301)278-6647 or AV-298-6647

	Modified:	Gary S. Moss	(Added roll rotation.)
*/
#ifndef lint
static const char RCSid[] = "@@(#)$Header: /n/xoff/cvs/brlcad/lgt/grid_rotate.c,v 11.6 2004/05/10 15:30:43 erikg Exp $ (BRL)";
#endif

#ifdef HAVE_CONFIG_H
# include "config.h"
#endif



#include <stdio.h>
#include <math.h>
#include <assert.h>

#include "machine.h"
#include "vmath.h"
#include "raytrace.h"
#include "fb.h"
#include "./hmenu.h"
#include "./lgt.h"
#include "./extern.h"
#include "./vecmath.h"
void	grid_Rotate(fastf_t azim, fastf_t elev, fastf_t roll, register fastf_t *des_H, register fastf_t *des_V);

/*	g r i d _ R o t a t e ( )
	Creates the unit vectors H and V which are the horizontal
	and vertical components of the grid in target coordinates.
	The vectors are found from the azimuth and elivation of the
	viewing angle according to a simplification of the rotation
	matrix from grid coordinates to target coordinates.
	To see that the vectors are, indeed, unit vectors, recall
	the trigonometric relation:

		sin( A )^2  +  cos( A )^2  =  1 .

 */
void
grid_Rotate(fastf_t azim, fastf_t elev, fastf_t roll, register fastf_t *des_H, register fastf_t *des_V)
{	fastf_t	sn_azm = sin( azim );
		fastf_t	cs_azm = cos( azim );
		fastf_t	sn_elv = sin( elev );
	des_H[0] = -sn_azm;
	des_H[1] =  cs_azm;
	des_H[2] =  0.0;
	des_V[0] = -sn_elv*cs_azm;
	des_V[1] = -sn_elv*sn_azm;
	des_V[2] =  cos( elev );

	if( roll != 0.0 )
		{	fastf_t	tmp_V[3], tmp_H[3], prime_V[3];
			fastf_t	sn_roll = sin( roll );
			fastf_t	cs_roll = cos( roll );
		Scale2Vec( des_V, cs_roll, tmp_V );
		Scale2Vec( des_H, sn_roll, tmp_H );
		Add2Vec( tmp_V, tmp_H, prime_V );
		Scale2Vec( des_V, -sn_roll, tmp_V );
		Scale2Vec( des_H, cs_roll, tmp_H );
		Add2Vec( tmp_V, tmp_H, des_H );
		CopyVec( des_V, prime_V );
		}
	return;
	}
@


11.6
log
@change conf.h to a wrapped config.h
@
text
@d11 1
a11 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/lgt/grid_rotate.c,v 11.5 2004/04/05 07:46:59 morrison Exp $ (BRL)";
@


11.5
log
@merge of ansi-6-0-branch into HEAD
@
text
@d11 1
a11 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
d14 5
a18 1
#include "conf.h"
@


11.4
log
@Restoration of entire source tree to Pre-Hartley state
@
text
@d11 1
a11 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/lgt/grid_rotate.c,v 11.2 2000/08/24 22:55:51 mike Exp $ (BRL)";
d28 1
a28 1
void	grid_Rotate();
d43 2
a44 4
grid_Rotate( azim, elev, roll, des_H, des_V )
fastf_t	azim, elev, roll;
register fastf_t	*des_H, *des_V;
	{	fastf_t	sn_azm = sin( azim );
@


11.4.2.1
log
@Initial ANSIfication
@
text
@d11 1
a11 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/lgt/grid_rotate.c,v 11.4 2002/08/20 17:07:33 jra Exp $ (BRL)";
d28 1
a28 1
void	grid_Rotate(fastf_t azim, fastf_t elev, fastf_t roll, register fastf_t *des_H, register fastf_t *des_V);
d43 4
a46 2
grid_Rotate(fastf_t azim, fastf_t elev, fastf_t roll, register fastf_t *des_H, register fastf_t *des_V)
{	fastf_t	sn_azm = sin( azim );
@


11.3
log
@Converted from K&R to ANSI C - RFH
@
text
@d28 1
a28 1
void	grid_Rotate(fastf_t azim, fastf_t elev, fastf_t roll, register fastf_t *des_H, register fastf_t *des_V);
d43 4
a46 2
grid_Rotate(fastf_t azim, fastf_t elev, fastf_t roll, register fastf_t *des_H, register fastf_t *des_V)
{	fastf_t	sn_azm = sin( azim );
@


11.2
log
@
RCSid
@
text
@d11 1
a11 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/lgt/grid_rotate.c,v 11.1 1995/01/04 10:17:48 mike Rel4_4 $ (BRL)";
d28 1
a28 1
void	grid_Rotate();
d43 2
a44 4
grid_Rotate( azim, elev, roll, des_H, des_V )
fastf_t	azim, elev, roll;
register fastf_t	*des_H, *des_V;
	{	fastf_t	sn_azm = sin( azim );
@


11.1
log
@Release_4.4
@
text
@d11 1
a11 1
static char RCSid[] = "@@(#)$Header: /m/cad/lgt/RCS/grid_rotate.c,v 10.2 94/08/24 13:34:55 gdurf Exp $ (BRL)";
@


10.2
log
@Made includes explicit, factored ifdefs
@
text
@d11 1
a11 1
static char RCSid[] = "@@(#)$Header: /m/cad/lgt/RCS/grid_rotate.c,v 10.1 1991/10/12 06:50:04 mike Rel4_0 gdurf $ (BRL)";
@


10.1
log
@Release_4.0
@
text
@d11 1
a11 1
static char RCSid[] = "@@(#)$Header: /m/cad/lgt/RCS/grid_rotate.c,v 9.1 89/05/19 06:13:10 mike Rel3_5 $ (BRL)";
d13 3
d18 8
@


9.1
log
@Release_3.5
@
text
@d11 1
a11 1
static char RCSid[] = "@@(#)$Header: grid_rotate.c,v 8.2 89/05/12 23:27:27 moss Exp $ (BRL)";
@


8.2
log
@pre release changes
@
text
@d11 1
a11 1
static char RCSid[] = "@@(#)$Header: grid_rotate.c,v 7.1 87/11/03 00:21:07 mike Rel $ (BRL)";
@


8.1
log
@Release_3.0
@
text
@d11 1
a11 1
static char RCSid[] = "@@(#)$Header: grid_rotate.c,v 7.1 87/11/03 00:21:07 moss Locked $ (BRL)";
d13 1
a13 8
/*
	Originally extracted from SCCS archive:
		SCCS id:	@@(#) grid_rotate.c	2.1
		Modified: 	12/10/86 at 16:03:10	G S M
		Retrieved: 	2/4/87 at 08:53:18
		SCCS archive:	/vld/moss/src/lgt/s.grid_rotate.c
*/

d15 1
a15 1
#include "machine.h"
@


7.1
log
@Release 2.3
@
text
@d11 1
a11 1
static char RCSid[] = "@@(#)$Header: grid_rotate.c,v 1.2 87/02/06 12:26:10 mike Locked $ (BRL)";
@


1.2
log
@Reorganized includes, pulled prnt_* functions out into module "prnt.c".
@
text
@d11 1
a11 1
static char RCSid[] = "@@(#)$Header: grid_rotate.c,v 1.1 87/02/04 15:14:55 moss Locked $ (BRL)";
@


1.1
log
@Initial revision
@
text
@d11 1
a11 1
static char RCSid[] = "@@(#)$Header$ (BRL)";
d22 2
a23 2
#include <machine.h>
#include <vecmath.h>
@
