head	11.5;
access;
symbols
	ansi-20040405-merged:11.3.2.1
	postmerge-20040405-ansi:11.4
	premerge-20040404-ansi:11.3
	postmerge-autoconf:11.3
	autoconf-freeze:11.3
	premerge-autoconf:11.3
	ansi-20040316-freeze:11.3.2.1
	postmerge-20040315-windows:11.3
	premerge-20040315-windows:11.3
	windows-20040315-freeze:11.3
	autoconf-20031203:11.3
	autoconf-20031202:11.3
	autoconf-branch:11.3.0.10
	phong-branch:11.3.0.8
	photonmap-branch:11.3.0.6
	rel-6-1-DP:11.3
	windows-branch:11.3.0.4
	rel-6-0-2:11.1
	ansi-branch:11.3.0.2
	rel-6-0-1-branch:11.1.0.4
	hartley-6-0-post:11.2
	hartley-6-0-pre:11.1
	rel-6-0-1:11.1
	rel-6-0:11.1
	rel-5-4:11.1
	offsite-5-3-pre:11.1
	rel-5-3:11.1
	rel-5-2:11.1
	rel-5-1-branch:11.1.0.2
	rel-5-1:11.1
	rel-5-0:11.1
	rel-5-0-beta:11.1
	rel-4-5:11.1
	ctj-4-5-post:11.1
	ctj-4-5-pre:11.1
	rel-4-4:11.1
	rel-4-0:10.1
	rel-3-5:9.1
	rel-3-0:8.1
	rel-2-3:7.1;
locks; strict;
comment	@ * @;


11.5
date	2004.05.21.17.48.15;	author morrison;	state dead;
branches;
next	11.4;

11.4
date	2004.04.05.07.46.59;	author morrison;	state Exp;
branches;
next	11.3;

11.3
date	2002.08.20.17.07.34;	author jra;	state Exp;
branches
	11.3.2.1;
next	11.2;

11.2
date	2002.08.15.20.54.46;	author hartley;	state Exp;
branches;
next	11.1;

11.1
date	95.01.04.10.17.50;	author mike;	state Rel4_4;
branches;
next	10.1;

10.1
date	91.10.12.06.50.05;	author mike;	state Rel4_0;
branches;
next	9.1;

9.1
date	89.05.19.06.13.13;	author mike;	state Rel3_5;
branches;
next	8.1;

8.1
date	88.10.05.00.51.54;	author mike;	state Rel3_0;
branches;
next	7.2;

7.2
date	88.06.23.09.29.24;	author moss;	state Exp;
branches;
next	7.1;

7.1
date	87.11.03.00.23.47;	author mike;	state Rel;
branches;
next	1.1;

1.1
date	87.10.15.10.08.59;	author moss;	state Exp;
branches;
next	;

11.3.2.1
date	2002.09.19.18.01.03;	author morrison;	state Exp;
branches;
next	;


desc
@
@


11.5
log
@moved to src/lgt/
@
text
@/*
	SCCS id:	%Z% %M%	%I%
	Modified: 	%G% at %U%
	Retrieved: 	%H% at %T%
	SCCS archive:	%P%

	Authors:	Gary S. Moss
			Douglas A. Gwyn
			U. S. Army Ballistic Research Laboratory
			Aberdeen Proving Ground
			Maryland 21005-5066
			(301)278-6647 or AV-298-6647

	This code is derived in part from menuhit(9.3) in AT&T 9th Edition UNIX,
		Version 1 Programmer's Manual.

*/
#ifndef INCL_HM
#define INCL_HM
struct HMenu;

/*	"dfn()" is called just before the submenu is invoked, and "bfn()"
	is called just afterwards.  These functions are called with the
	current menu item. "hfn()" is called only when a menu item is
	selected.  Its argument is a NULL pointer for now.  "data" is set
	to the return value from "hfn()".
 */
typedef struct HMitem
	{
	char		*text;	/* menu item string			*/
	char		*help;	/* help string				*/
	struct HMenu	*next;	/* sub-menu pointer or NULL		*/
	void		(*dfn)(), (*bfn)();
	int		(*hfn)();
	long		data;
	}
HMitem;

/*	"item" is an array of HMitems, terminated by an item with a
		zero "text" field.
	"generator()" takes an integer parameter and returns a pointer
		to a HMitem.  It only is significant if "item" == 0.
 */
typedef struct HMenu
	{
	HMitem	*item;
	HMitem	*(*generator)();
	short	prevtop;	/* Top entry currently visable		*/
	short	prevhit;	/* Offset from top of last select	*/
	short	sticky;		/* If set, menu stays around after SELECT,
					and until QUIT. */
	void	(*func)();	/* Execute after selection is made.	*/
	}
HMenu;

typedef struct HWin
	{
	struct HWin	*next;
	HMenu	*menup;
	int	menux;
	int	menuy;
	int	width;
	int	height;
	int	submenu;	/* At least one entry has a submenu.	*/
	int	*dirty;		/* Dynamically allocated bitmap. ON bits
					mean character needs a redraw.	*/
	}
HWindow;

extern HMitem	*hmenuhit(HMenu *menup, int menux, int menuy);	/* Application's calls menu.		*/
extern int	hm_getchar(void);	/* Can be supplied by application.	*/
extern int	hm_ungetchar(int c);	/* Can be supplied by application.	*/
extern void	hmredraw(void);	/* Application signals need for redraw.	*/

#define MAXARGS		100
#define MAXLINE 	132
#define MAXVISABLE	10
#endif
@


11.4
log
@merge of ansi-6-0-branch into HEAD
@
text
@@


11.3
log
@Restoration of entire source tree to Pre-Hartley state
@
text
@d70 4
a73 4
extern HMitem	*hmenuhit();	/* Application's calls menu.		*/
extern int	hm_getchar();	/* Can be supplied by application.	*/
extern int	hm_ungetchar();	/* Can be supplied by application.	*/
extern void	hmredraw();	/* Application signals need for redraw.	*/
@


11.3.2.1
log
@Initial ANSIfication
@
text
@d70 4
a73 4
extern HMitem	*hmenuhit(HMenu *menup, int menux, int menuy);	/* Application's calls menu.		*/
extern int	hm_getchar(void);	/* Can be supplied by application.	*/
extern int	hm_ungetchar(int c);	/* Can be supplied by application.	*/
extern void	hmredraw(void);	/* Application signals need for redraw.	*/
@


11.2
log
@Converted from K&R to ANSI C - RFH
@
text
@d70 4
a73 4
extern HMitem	*hmenuhit(HMenu *menup, int menux, int menuy);	/* Application's calls menu.		*/
extern int	hm_getchar(void);	/* Can be supplied by application.	*/
extern int	hm_ungetchar(int c);	/* Can be supplied by application.	*/
extern void	hmredraw(void);	/* Application signals need for redraw.	*/
@


11.1
log
@Release_4.4
@
text
@d70 4
a73 4
extern HMitem	*hmenuhit();	/* Application's calls menu.		*/
extern int	hm_getchar();	/* Can be supplied by application.	*/
extern int	hm_ungetchar();	/* Can be supplied by application.	*/
extern void	hmredraw();	/* Application signals need for redraw.	*/
@


10.1
log
@Release_4.0
@
text
@@


9.1
log
@Release_3.5
@
text
@@


8.1
log
@Release_3.0
@
text
@@


7.2
log
@Smoothing out menu and prompting interface.
@
text
@@


7.1
log
@Release
@
text
@a31 1
	char		*prompt;/* prompt string for "hfn()".		*/
@


1.1
log
@Initial revision
@
text
@@
