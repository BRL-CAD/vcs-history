head	11.3;
access;
symbols
	ansi-20040405-merged:11.2
	postmerge-20040405-ansi:11.2
	premerge-20040404-ansi:11.2
	postmerge-autoconf:11.2
	autoconf-freeze:11.2
	premerge-autoconf:11.2
	ansi-20040316-freeze:11.2
	postmerge-20040315-windows:11.2
	premerge-20040315-windows:11.2
	windows-20040315-freeze:11.2
	autoconf-20031203:11.2
	autoconf-20031202:11.2
	autoconf-branch:11.2.0.12
	phong-branch:11.2.0.10
	photonmap-branch:11.2.0.8
	rel-6-1-DP:11.2
	windows-branch:11.2.0.6
	rel-6-0-2:11.2
	ansi-branch:11.2.0.4
	rel-6-0-1-branch:11.2.0.2
	hartley-6-0-post:11.2
	hartley-6-0-pre:11.2
	rel-6-0-1:11.2
	rel-6-0:11.2
	rel-5-4:11.1
	offsite-5-3-pre:11.1
	rel-5-3:11.1
	rel-5-2:11.1
	rel-5-1-branch:11.1.0.2
	rel-5-1:11.1
	rel-5-0:11.1
	rel-5-0-beta:11.1
	rel-4-5:11.1
	ctj-4-5-post:11.1
	ctj-4-5-pre:11.1
	rel-4-4:11.1
	rel-4-0:10.1
	rel-3-5:9.1
	rel-3-0:8.1
	rel-2-3:7.1
	rel-2-0:5.1
	rel-1-24:5.1
	rel-1-20:1.2;
locks; strict;
comment	@ * @;


11.3
date	2004.05.21.17.48.16;	author morrison;	state dead;
branches;
next	11.2;

11.2
date	2001.08.09.16.42.52;	author jra;	state Exp;
branches;
next	11.1;

11.1
date	95.01.04.10.17.54;	author mike;	state Rel4_4;
branches;
next	10.3;

10.3
date	94.12.12.22.11.10;	author mike;	state Exp;
branches;
next	10.2;

10.2
date	94.08.24.13.35.56;	author gdurf;	state Exp;
branches;
next	10.1;

10.1
date	91.10.12.06.50.08;	author mike;	state Rel4_0;
branches;
next	9.5;

9.5
date	91.07.11.22.40.30;	author butler;	state Exp;
branches;
next	9.4;

9.4
date	91.05.01.15.35.53;	author moss;	state Exp;
branches;
next	9.3;

9.3
date	90.03.29.13.00.07;	author moss;	state Exp;
branches;
next	9.2;

9.2
date	89.12.05.09.49.55;	author moss;	state Exp;
branches;
next	9.1;

9.1
date	89.05.19.06.13.19;	author mike;	state Rel3_5;
branches;
next	8.3;

8.3
date	89.05.12.23.26.48;	author moss;	state Exp;
branches;
next	8.2;

8.2
date	88.12.15.16.13.53;	author moss;	state Exp;
branches;
next	8.1;

8.1
date	88.10.05.00.51.58;	author mike;	state Rel3_0;
branches;
next	7.3;

7.3
date	88.06.23.09.29.30;	author moss;	state Exp;
branches;
next	7.2;

7.2
date	87.12.09.13.51.57;	author moss;	state Exp;
branches;
next	7.1;

7.1
date	87.11.03.00.23.49;	author mike;	state Rel;
branches;
next	6.2;

6.2
date	87.10.15.10.29.12;	author moss;	state Exp;
branches;
next	6.1;

6.1
date	87.07.11.08.15.57;	author mike;	state Rel;
branches;
next	5.1;

5.1
date	87.06.24.22.47.33;	author mike;	state Rel;
branches;
next	1.3;

1.3
date	87.06.23.12.31.40;	author moss;	state Exp;
branches;
next	1.2;

1.2
date	87.02.06.12.27.17;	author moss;	state Exp;
branches;
next	1.1;

1.1
date	87.02.04.15.14.58;	author moss;	state Exp;
branches;
next	;


desc
@This is the initial version as far as the BRL/CAD distribution is concerned.
It is extracted from SCCS archives.
@


11.3
log
@moved to src/lgt/
@
text
@/*
	Author:		Gary S. Moss
			U. S. Army Ballistic Research Laboratory
			Aberdeen Proving Ground
			Maryland 21005-5066
			(301)278-6647 or AV-298-6647

	$Header: /n/xoff/cvs/brlcad/lgt/lgt.h,v 11.2 2001/08/09 16:42:52 jra Exp $ (BRL)
*/
#ifndef INCL_LGT
#define INCL_LGT

#ifdef USE_STRING_H
#include <string.h>
#else
#include <strings.h>
#endif


#define OVERLAPTOL	0.25	/* Thinner overlaps won't be reported. */
#define MAX_SCANSIZE	2048	/* Longest output scanline. */
#define MAX_HL_SIZE	2048	/* Maximum size of hidden-line image. */
#define MAX_LGTS	10	/* Maximum number of light sources. */
#define MAX_LGT_NM	16
#define MAX_LN		81
#ifndef TRUE
#define TRUE		1
#define FALSE		0
#endif
#ifndef true
#define true		1
#define false		0
#endif
#define Swap_Integers( i_, j_ ) \
		{	register int	k_ = i_; \
		i_ = j_; \
		j_ = k_; \
		}
#define Toggle(f)	(f) = !(f)
#define Malloc_Bomb( _bytes_ ) \
		fb_log( "\"%s\"(%d) : allocation of %d bytes failed.\n", \
				__FILE__, __LINE__, _bytes_ )

/* Guess whether or not a frame buffer name is a disk file. (XXX) */
#define DiskFile(fil)	(*fil != '\0'\
			&& strncmp(fil, "/dev", 4 ) != 0 \
			&& strchr( fil, ':' ) == (char *)NULL)

/* Values for grid type. */
#define GT_RPP_CENTERED	0 /* Grid origin aligned with centroid of model RPP. */
#define GT_ORG_CENTERED	1 /* Grid aligned with model origin. */

/* Flag (hiddenln_draw) values for hidden line drawing. */
#define HL_DISABLED		0
#define HL_ENABLED		1
#define HL_REVERSE_VIDEO	2

/* Flag (pix_buffered) values for writing pixels to the frame buffer.	*/
#define B_PIO		0	/* Programmed I/O.			*/
#define B_PAGE		1	/* Buffered I/O (DMA paging scheme).	*/
#define B_LINE		2	/* Line-buffered I/O (DMA).		*/
#define Rotate( f )	(f) = (f) + 1 > 2 ? 0 : (f) + 1

#ifndef DEBUG_OFF /* This is from "librt/debug.h", #include <debug.h> would
			be better.					*/
#define DEBUG_OFF	0	/* No debugging */

/* These definitions are each for one bit */

/* Options useful for debugging applications */
#define DEBUG_ALLRAYS	0x00000001	/* Print calls to shootray() */
#define DEBUG_SHOOT	0x00000002	/* Info about shootray() processing */

/* Options useful for debugging the database */
#define DEBUG_DB	0x00000010	/* Database debugging */
#define DEBUG_SOLIDS	0x00000020	/* Print prep'ed solids */
#define DEBUG_REGIONS	0x00000040	/* Print regions & boolean trees */
#define DEBUG_ARB8	0x00000080	/* Print voluminus ARB8 details */
#define DEBUG_SPLINE	0x00000100	/* Splines */

/* Options useful for debugging the library */
#define DEBUG_ROOTS	0x00001000	/* Print rootfinder details */
#define DEBUG_PARTITION	0x00002000	/* Info about bool_weave() */
#define DEBUG_CUT	0x00004000	/* Print space cutting details */
#define DEBUG_BOXING	0x00008000	/* Object/box checking details */
#define DEBUG_MEM	0x00010000	/* Debug dynamic memory operations */
#define DEBUG_TESTING	0x00020000	/* One-shot debugging flag */
#define DEBUG_FDIFF	0x00040000	/* bool/fdiff debugging */

/* These will cause binary debugging output */
#define DEBUG_PLOTBOX	0x80000000	/* Plot(3) bounding boxes to stdout */
#endif

/* Application debugging flags.						*/
#define DEBUG_RGB	0x80000
#define DEBUG_REFRACT	0x100000
#define DEBUG_NORML	0x200000
#define DEBUG_SHADOW	0x400000
#define DEBUG_CELLSIZE	0x800000
#define DEBUG_OCTREE	0x1000000

typedef int	bool;

/* Light source (LS) specific global information.
	Directions are with respect to the center of the model as calculated
	by 'librt.a'.
 */
typedef struct
	{
	char	name[MAX_LGT_NM];/* Name of entry (i.e. ambient).	*/
	int	beam;	/* Flag denotes gaussian beam intensity.	*/
	int	over;	/* Flag denotes manual overide of position.	*/
	int	rgb[3];	/* Pixel color of LS (0 to 255) for RGB.	*/
	fastf_t	loc[3];	/* Location of LS in model space.		*/
	fastf_t	azim;	/* Azimuthal direction of LS in radians.	*/
	fastf_t	elev;	/* Elevational direction of LS in radians.	*/
	fastf_t	dir[3];	/* Direction vector to LS.			*/
	fastf_t	dist;	/* Distance to LS in from centroid of model.	*/
	fastf_t	energy;	/* Intensity of LS.				*/
	fastf_t	coef[3];/* Color of LS as coefficient (0.0 to 1.0).	*/
	fastf_t	radius;	/* Radius of beam.				*/
	struct soltab	*stp;	/* Solid table pointer to LIGHT solid.	*/
	}
Lgt_Source;
#define LGT_NULL	(Lgt_Source *) NULL

typedef struct
	{
	bool	m_fullscreen;
	bool	m_lgts;
	bool	m_over;
	bool	m_keys;
	int	m_noframes;
	int	m_curframe;
	int	m_endframe;
	int	m_frame_sz;
	FILE	*m_keys_fp;
	fastf_t	m_azim_beg;
	fastf_t m_azim_end;
	fastf_t	m_elev_beg;
	fastf_t m_elev_end;
	fastf_t	m_roll_beg;
	fastf_t m_roll_end;
	fastf_t	m_dist_beg;
	fastf_t m_dist_end;
	fastf_t	m_grid_beg;
	fastf_t m_grid_end;
	fastf_t	m_pers_beg;
	fastf_t m_pers_end;
	}
Movie;
#define MovieSize( sz, nf )	(int)sqrt((double)(nf)+0.5)*(sz)
#define IK_INTENSITY	255.0
#define RGB_INVERSE	(1.0 / IK_INTENSITY)
#define EYE_SIZE	12.7
#define TITLE_LEN	72
#define TIMER_LEN	72

extern Lgt_Source	lgts[];
extern Movie		movie;

#endif /* INCL_LGT */
char		*get_Input();
int		setup_Lgts();
void		user_Input();
int		interpolate_Frame();
int		ready_Output_Device();
int		exec_Shell();
void		set_Cbreak();
void		clr_Echo();
int		pixel_To_Temp();
void		reset_Tty();
int		read_IR();
int		write_Trie();
int		lgt_Save_Db();
int		read_Trie();
int		lgt_Rd_Db();
int		ClrText();
int		MvCursor();
int		InitTermCap();
int		SetScrlReg();
int		ClrEOL();
int		ResetScrlReg();
int		DeleteLn();
int		init_Temp_To_RGB();
int		get_Font();
int		do_More();
int		append_PtList();
int		delete_Node_OcList();
int		SetStandout();
int		ClrStandout();
int		save_Tty();
int		set_Raw();
int		ir_shootray_octree();
int		ir_Chk_Table();
int		tex_Entry();
int		icon_Entry();
int		write_Octree();

@


11.2
log
@lint
@
text
@d8 1
a8 1
	$Header: /c/CVS/brlcad/lgt/lgt.h,v 11.1 1995/01/04 10:17:54 mike Rel4_4 $ (BRL)
@


11.1
log
@Release_4.4
@
text
@d8 1
a8 1
	$Header: /m/cad/lgt/RCS/lgt.h,v 10.3 94/12/12 22:11:10 mike Exp $ (BRL)
d13 7
d163 37
@


10.3
log
@NULL needs type cast, for Linux.
@
text
@d8 1
a8 1
	$Header: /m/cad/lgt/RCS/lgt.h,v 10.2 94/08/24 13:35:56 gdurf Exp Locker: mike $ (BRL)
@


10.2
log
@Made includes explicit, factored ifdefs
@
text
@d8 1
a8 1
	$Header: /m/cad/lgt/RCS/lgt.h,v 10.1 1991/10/12 06:50:08 mike Rel4_0 gdurf $ (BRL)
d39 2
a40 1
			&& strncmp(fil, "/dev", 4 ) && strchr( fil, ':' )==NULL)
@


10.1
log
@Release_4.0
@
text
@d8 1
a8 1
	$Header: /m/cad/lgt/RCS/lgt.h,v 9.5 91/07/11 22:40:30 butler Exp $ (BRL)
a11 5
#include "machine.h"	/* has once-only latch */
#include "vmath.h"	/* has once-only latch */
#include "raytrace.h"	/* has once-only latch */
#include "fb.h"		/* has once-only latch */
#include "./hmenu.h"	/* has once-only latch */
@


9.5
log
@removed macro definition of strchr,strrchr because it's now in machine.h
@
text
@d8 1
a8 1
	$Header: /m/cad/lgt/RCS/lgt.h,v 9.4 91/05/01 15:35:53 moss Exp $ (BRL)
@


9.4
log
@Enlarged MAX_HL_SIZE and fixed bug in diagnostic when limit is overrun.
@
text
@d8 1
a8 1
	$Header: lgt.h,v 9.1 89/05/19 06:13:19 moss Locked $ (BRL)
a16 5

#ifdef BSD
#define strchr	index
#define strrchr	rindex
#endif
@


9.3
log
@Fixed animation on SGIs, and other routines using getorigin() to check
the device type to make sure that /dev/sgi* is being used.  This prevents
core dumps associated with calling getorigin() when the remote frame
buffer is being used.
@
text
@d25 1
a25 1
#define MAX_HL_SIZE	1024	/* Maximum size of hidden-line image. */
@


9.2
log
@Improved hidden line stuff.  Normals now stored in memory rather than
in frame buffer.  Anti-aliasing now done in double precision, also
using memory rather than the frame buffer.
@
text
@d37 5
@


9.1
log
@Release_3.5
@
text
@d8 1
a8 1
	$Header: lgt.h,v 8.3 89/05/12 23:26:48 moss Exp $ (BRL)
d23 4
a26 3
#define OVERLAPTOL	0.25	/* Thinner overlaps won't be reported.	*/
#define MAX_COLOR	15
#define MAX_LGTS	10	/* Maximum number of light sources.	*/
@


8.3
log
@pre release changes
@
text
@d8 1
a8 1
	$Header$ (BRL)
@


8.2
log
@Fixed the material id lookup logic to check for a reg_mater entry with
mid=<digits> as part of the parameter string.  If found, this is used
as the material id rather than looking in reg_gmater.
This capability allows material id to be inherited from groups downward
rather than necessitating creating super-regions.
@
text
@d12 5
d18 5
d41 13
d148 1
@


8.1
log
@Release_3.0
@
text
@d8 1
a8 1
	$Header: lgt.h,v 7.3 88/06/23 09:29:30 moss Locked $ (BRL)
d22 4
d75 2
a98 2

typedef int	bool;
@


7.3
log
@Smoothing out menu and prompting interface.
@
text
@d8 1
a8 1
	$Header$ (BRL)
@


7.2
log
@Added debug flag for cell size.
@
text
@d7 2
d94 2
d98 4
d103 2
a105 3
	int	m_lgts_bool;
	int	m_over_bool;
	int	m_keys_bool;
@


7.1
log
@Release
@
text
@d8 2
a9 7
/*
	Originally extracted from SCCS archive:
		SCCS id:	@@(#) lgt.h	2.2
		Modified: 	1/30/87 at 17:20:43	G S M
		Retrieved: 	2/4/87 at 08:52:50
		SCCS archive:	/vld/moss/src/lgt/s.lgt.h
*/
d11 1
a11 1
#define INCL_LGT
d13 1
a13 1
#define MAX_LGTS	10
d66 1
a66 1
#define DEBUG_GAUSS	0x800000
d122 2
@


6.2
log
@Inserted DEBUG_* defines from cad/librt/debug.h for convenience.  Probably
	should be changed into an include statement.
@
text
@@


6.1
log
@Release 2.0
@
text
@d36 30
d67 6
a72 6
#define DEBUG_RGB	0x10000
#define DEBUG_REFRACT	0x20000
#define DEBUG_NORML	0x40000
#define DEBUG_SHADOW	0x80000
#define DEBUG_GAUSS	0x100000
#define DEBUG_OCTREE	0x200000
@


5.1
log
@Release 1.24
@
text
@@


1.3
log
@Ready for release 1.23.  This includes the a_overlap function support,
and return to 128 byte records on IEEE floating point architectures.
@
text
@@


1.2
log
@Reorganized includes, pulled prnt_* functions out into module "prnt.c".
@
text
@d71 3
a73 3
	int	m_lgts_flg;
	int	m_over_flg;
	int	m_keys_flg;
@


1.1
log
@Initial revision
@
text
@d92 5
a96 2
#define DISPATCHER	"dispatcher"
#define DISPATCH_LOCK	"dispatcher.lock"
@
