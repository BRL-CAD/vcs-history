head	11.6;
access;
symbols
	ansi-20040405-merged:11.3.4.1
	postmerge-20040405-ansi:11.4
	premerge-20040404-ansi:11.4
	postmerge-autoconf:11.4
	autoconf-freeze:11.4
	premerge-autoconf:11.4
	ansi-20040316-freeze:11.3
	postmerge-20040315-windows:11.4
	premerge-20040315-windows:11.4
	windows-20040315-freeze:11.3.6.1
	autoconf-20031203:11.4
	autoconf-20031202:11.4
	autoconf-branch:11.4.0.2
	phong-branch:11.3.0.10
	photonmap-branch:11.3.0.8
	rel-6-1-DP:11.3
	windows-branch:11.3.0.6
	rel-6-0-2:11.3
	ansi-branch:11.3.0.4
	rel-6-0-1-branch:11.3.0.2
	hartley-6-0-post:11.3
	hartley-6-0-pre:11.3
	rel-6-0-1:11.3
	rel-6-0:11.3
	rel-5-4:11.1
	offsite-5-3-pre:11.2
	rel-5-3:11.1
	rel-5-2:11.1
	rel-5-1-branch:11.1.0.2
	rel-5-1:11.1
	rel-5-0:11.1
	rel-5-0-beta:11.1
	rel-4-5:11.1
	ctj-4-5-post:11.1
	ctj-4-5-pre:11.1
	rel-4-4:11.1
	rel-4-0:10.1
	rel-3-5:9.1
	rel-3-0:8.1
	rel-2-3:7.1
	rel-2-0:5.2
	rel-1-24:5.1
	rel-1-20:1.2;
locks; strict;
comment	@ * @;


11.6
date	2004.05.21.17.48.15;	author morrison;	state dead;
branches;
next	11.5;

11.5
date	2004.05.10.15.30.43;	author erikg;	state Exp;
branches;
next	11.4;

11.4
date	2003.10.06.16.18.35;	author morrison;	state Exp;
branches;
next	11.3;

11.3
date	2001.08.09.16.42.52;	author jra;	state Exp;
branches
	11.3.4.1
	11.3.6.1;
next	11.2;

11.2
date	2000.08.24.22.55.51;	author mike;	state Exp;
branches;
next	11.1;

11.1
date	95.01.04.10.17.47;	author mike;	state Rel4_4;
branches;
next	10.2;

10.2
date	94.08.23.20.09.56;	author gdurf;	state Exp;
branches;
next	10.1;

10.1
date	91.10.12.06.50.03;	author mike;	state Rel4_0;
branches;
next	9.2;

9.2
date	89.12.05.08.44.55;	author moss;	state Exp;
branches;
next	9.1;

9.1
date	89.05.19.06.13.08;	author mike;	state Rel3_5;
branches;
next	8.2;

8.2
date	89.05.12.23.27.25;	author moss;	state Exp;
branches;
next	8.1;

8.1
date	88.10.05.00.51.49;	author mike;	state Rel3_0;
branches;
next	7.4;

7.4
date	88.09.01.11.44.36;	author moss;	state Exp;
branches;
next	7.3;

7.3
date	88.08.30.10.22.55;	author moss;	state Exp;
branches;
next	7.2;

7.2
date	88.06.23.09.29.18;	author moss;	state Exp;
branches;
next	7.1;

7.1
date	87.11.03.00.21.03;	author mike;	state Rel;
branches;
next	6.2;

6.2
date	87.10.15.10.24.15;	author moss;	state Exp;
branches;
next	6.1;

6.1
date	87.07.11.08.15.43;	author mike;	state Rel;
branches;
next	5.2;

5.2
date	87.07.01.13.41.30;	author moss;	state Exp;
branches;
next	5.1;

5.1
date	87.06.24.22.47.15;	author mike;	state Rel;
branches;
next	1.3;

1.3
date	87.06.23.12.31.21;	author moss;	state Exp;
branches;
next	1.2;

1.2
date	87.02.06.12.26.05;	author moss;	state Exp;
branches;
next	1.1;

1.1
date	87.02.04.15.14.54;	author moss;	state Exp;
branches;
next	;

11.3.4.1
date	2004.03.17.21.16.46;	author morrison;	state Exp;
branches;
next	;

11.3.6.1
date	2004.03.11.23.41.37;	author morrison;	state Exp;
branches;
next	;


desc
@This is the initial version as far as the BRL/CAD distribution is concerned.
It is extracted from SCCS archives.
@


11.6
log
@moved to src/lgt/
@
text
@/*
	Author:		Gary S. Moss
			U. S. Army Ballistic Research Laboratory
			Aberdeen Proving Ground
			Maryland 21005-5066
			(301)278-6647 or AV-298-6647
*/
#ifndef lint
static const char RCSid[] = "@@(#)$Header: /n/xoff/cvs/brlcad/lgt/glob.c,v 11.5 2004/05/10 15:30:43 erikg Exp $ (BRL)";
#endif

#ifdef HAVE_CONFIG_H
# include "config.h"
#endif



#include <stdio.h>
#include <math.h>
#include <assert.h>

#include "machine.h"
#include "vmath.h"
#include "raytrace.h"
#include "fb.h"
#include "./hmenu.h"
#include "./lgt.h"
#include "./extern.h"
#include "./vecmath.h"
#include "./tree.h"
FBIO	*fbiop = FBIO_NULL;    /* Framebuffer interface ptr.	*/

/* Initialization for root of IR data base octree.			*/
PtList	ir_ptlist = { {0.0, 0.0, 0.0}, PTLIST_NULL };
Octree	ir_octree =
	{ 0, ABSOLUTE_ZERO, &ir_ptlist, TRIE_NULL, OCTREE_NULL, OCTREE_NULL };

/* Light sources.
	lgts[0]		ambient lighting
	lgts[1]		primary lighting
	...		user defined
 */
Lgt_Source	lgts[MAX_LGTS];

/* Animation control structure.						*/
Movie	movie =
	{
	false,	/* m_fullscreen */
	true,	/* m_lgts */
	false,	/* m_over */
	false,	/* m_keys */
	1,	/* m_noframes */
	0,	/* m_curframe */
	0,	/* m_endframe */
	-1,	/* m_frame_sz */
	NULL,	/* m_keys_fp */
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
	};

/* Globals for line-buffering pixel I/O.				*/
RGBpixel	bgpixel;		/* Background color.		*/

/* IR data base region trie tree root.					*/
Trie			*reg_triep = TRIE_NULL;

/* Optional files.							*/
char	err_file[MAX_LN] = { 0 };    /* Error log (redirected stderr).	*/
char	mat_db_file[MAX_LN] = { 0 }; /* Material database file.		*/
char	lgt_db_file[MAX_LN] = { 0 }; /* Light source database file.	*/
char	ir_db_file[MAX_LN] = { 0 };  /* IR database file.		*/
char	fb_file[MAX_LN] = { 0 };     /* Raster image output.		*/
char	ir_file[MAX_LN] = { 0 };     /* IR input data.			*/

/* Global buffers and pointers.						*/
char	input_ln[BUFSIZ];
char	prefix[MAX_LN] = "frame";
char	prompt[MAX_LN];
char	version[] = "$Revision: 11.5 $";
char	title[TITLE_LEN];
char	timer[TIMER_LEN];
char	script_file[MAX_LN];
char	*ged_file = NULL;

char	*beginptr;		     /* sbrk() at start of program.	*/

/* Unit vectors representing horizontal and vertical directions of grid	*/
fastf_t	grid_hor[3], grid_ver[3];

/* Position of grid in model space.					*/
fastf_t	grid_loc[3];

/* Unit vector representing the incident ray in model space.		*/
fastf_t	modl_radius;		/* Radius of model (bounding sphere).	*/

/* Location of center of model (calculated from bounding RPP).		*/
fastf_t	modl_cntr[3];

/* Conversion degrees to radians.					*/
fastf_t	degtorad = 0.0174532925;

/* Translations of grid in plane of view.				*/
fastf_t	x_grid_offset = 0.0, y_grid_offset = 0.0;

/* Distance of grid from the model centroid measured in milimeters.	*/
fastf_t	grid_dist = 0.0;

/* Rotation of grid around viewing axis (radians).			*/
fastf_t grid_roll = 0.0;

fastf_t	bg_coefs[3];		/* Background RGB coefficients.		*/
fastf_t	rel_perspective = 0.25;	/* Manual perspective adjustment.	*/
fastf_t	sample_sz;		/* Over-sampling ratio (aperture^2).	*/
fastf_t view_rots[16];		/* Store 4x4 MGED saved view matrix.	*/
fastf_t	view2model[16];		/* View-to-model matrix from view_rots.	*/
fastf_t	view_size;		/* Absolute grid size from MGED view.	*/
fastf_t	cell_sz = 0.0;		/* Cell size of grid in target coords.	*/

int anti_aliasing = false;	/* Anti-aliasing thru over-sampling.	*/
int aperture_sz = 1;		/* Size of window for over-sampling.	*/
int background[3];		/* Background as RGB values.		*/
int co;				/* Number of columns on screen/layer.	*/
int fatal_error = false;	/* Fatal error, must abort raytrace.	*/
int fb_size;			/* Size of frame buffer.		*/
int force_cellsz = false;	/* If (true) cell_sz drives resolution.	*/
int force_fbsz = false;		/* If (true) fb_size used.		*/
int force_viewsz = false;	/* If (true) view_size is set manually.	*/
int frame_no = 0;		/* Current frame being processed.	*/
int grid_position = false;	/* Did user set distance yet.		*/
int grid_sz = 32;		/* Default resolution 32x32 pixels.	*/
int grid_x_org = 0;		/* Grid x position to begin raytracing.	*/
int grid_x_fin = 32;		/* Grid x position to end raytracing.	*/
int grid_x_cur = 0; 		/* Grid x current position.		*/
int grid_y_cur = 0; 		/* Grid y current position.		*/
int grid_y_org = 0;		/* Grid y position to begin raytracing.	*/
int grid_y_fin = 32;		/* Grid y position to end raytracing.	*/
int hiddenln_draw = false;	/* Generate hidden-line drawing.	*/
int ir_aperture;		/* Size of window IR data over-sampling.*/
int ir_noise = 2;		/* Threshold for subdivision of octree.	*/
int ir_min = ABSOLUTE_ZERO;	/* IR input temperature ranges.		*/
int ir_max = ABSOLUTE_ZERO;
int ir_paint;			/* For temperature-to-location mapping.	*/
int ir_doing_paint = false;	/* Is user doing above mapping.		*/
int ir_offset = false;		/* Has user specified auto mapping.	*/
int ir_mapx, ir_mapy;		/* Auto mapping offsets for above.	*/
int ir_mapping = IR_OFF;	/* IR mapping.				*/
int lgt_db_size = 0;		/* Current size of light data base.	*/
int li;				/* Number of lines in window.		*/
int max_bounce = 0;		/* Recursion level for raytracer.	*/
int npsw = 1;			/* Number of worker PSWs to run.	*/
int pix_buffered = B_LINE;	/* Scan line buffering is default.	*/
int query_region = false;	/* If (true) spit out region info.	*/
int report_overlaps = true;	/* If (false) shut-up about overlaps.	*/
int reverse_video = false;	/* If (true) HL drawing white-on-black.	*/
int save_view_flag = false;	/* View specified in "model2view".	*/
int sgi_console = false;	/* Logged in to IRIS console.		*/
int sgi_usemouse = false;	/* User wants to use the IRIS mouse.	*/
int shadowing = true;		/* If (false) no shadows are computed.	*/
int tracking_cursor=false;	/* Cursor is on by default.		*/
int tty;			/* Is input attached to a terminal.	*/
int type_grid = GT_RPP_CENTERED;
int user_interrupt = false;	/* User-level interrupt of raytrace.	*/
int x_fb_origin = 0;		/* Display origin left-most pixel.	*/
int y_fb_origin = 0;		/* Display origin top-most pixel.	*/
struct resource	resource[MAX_PSW]; /* Memory resources.			*/
struct rt_i	*rt_ip;		/* Globals from RT library.		*/

#if STD_SIGNAL_DECLS
void (*norml_sig)(), (*abort_sig)();
#else
int (*norml_sig)(), (*abort_sig)();
#endif
@


11.5
log
@change conf.h to a wrapped config.h
@
text
@d9 1
a9 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/lgt/glob.c,v 11.4 2003/10/06 16:18:35 morrison Exp $ (BRL)";
d78 1
a78 1
char	version[] = "$Revision: 11.4 $";
@


11.4
log
@DEFAULT_PSW can't be used as a static rvalue any more since it's a function.
Fortunately, this is the only one.
@
text
@d9 1
a9 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/lgt/glob.c,v 11.3 2001/08/09 16:42:52 jra Exp $ (BRL)";
d12 5
a16 1
#include "conf.h"
d78 1
a78 1
char	version[] = "$Revision: 11.3 $";
@


11.3
log
@lint
@
text
@d9 1
a9 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/lgt/glob.c,v 11.2 2000/08/24 22:55:51 mike Exp $ (BRL)";
d74 1
a74 1
char	version[] = "$Revision: 11.2 $";
d145 1
a145 1
int npsw = DEFAULT_PSW;		/* Number of worker PSWs to run.	*/
@


11.3.4.1
log
@sync branch with HEAD
@
text
@d9 1
a9 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
d74 1
a74 1
char	version[] = "$Revision$";
d145 1
a145 1
int npsw = 1;			/* Number of worker PSWs to run.	*/
@


11.3.6.1
log
@sync to HEAD...
@
text
@d9 1
a9 1
static const char RCSid[] = "@@(#)$Header: /n/cad/c/CVS/brlcad/lgt/glob.c,v 11.4 2003/10/06 16:18:35 morrison Exp $ (BRL)";
d74 1
a74 1
char	version[] = "$Revision: 11.4 $";
d145 1
a145 1
int npsw = 1;			/* Number of worker PSWs to run.	*/
@


11.2
log
@
RCSid
@
text
@d9 1
a9 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/lgt/glob.c,v 11.1 1995/01/04 10:17:47 mike Rel4_4 $ (BRL)";
d30 1
a30 1
PtList	ir_ptlist = { 0.0, 0.0, 0.0, PTLIST_NULL };
d74 1
a74 1
char	version[] = "$Revision: 11.1 $";
@


11.1
log
@Release_4.4
@
text
@d9 1
a9 1
static char RCSid[] = "@@(#)$Header: /m/cad/lgt/RCS/glob.c,v 10.2 94/08/23 20:09:56 gdurf Exp $ (BRL)";
d74 1
a74 1
char	version[] = "$Revision: 10.2 $";
@


10.2
log
@Made includes explicit
@
text
@d9 1
a9 1
static char RCSid[] = "@@(#)$Header: /m/cad/lgt/RCS/glob.c,v 10.1 1991/10/12 06:50:03 mike Rel4_0 gdurf $ (BRL)";
d74 1
a74 1
char	version[] = "$Revision: 10.1 $";
@


10.1
log
@Release_4.0
@
text
@d9 1
a9 1
static char RCSid[] = "@@(#)$Header: /m/cad/lgt/RCS/glob.c,v 9.2 89/12/05 08:44:55 moss Exp $ (BRL)";
d12 2
d15 9
d74 1
a74 1
char	version[] = "$Revision: 9.2 $";
@


9.2
log
@Cosmetic changes (TRUE->true,FALSE->false).
@
text
@d9 1
a9 1
static char RCSid[] = "@@(#)$Header: glob.c,v 9.1 89/05/19 06:13:08 moss Locked $ (BRL)";
d63 1
a63 1
char	version[] = "$Revision: 9.1 $";
@


9.1
log
@Release_3.5
@
text
@d9 1
a9 1
static char RCSid[] = "@@(#)$Header: glob.c,v 8.2 89/05/12 23:27:25 moss Exp $ (BRL)";
d33 4
a36 4
	FALSE,	/* m_fullscreen */
	TRUE,	/* m_lgts */
	FALSE,	/* m_over */
	FALSE,	/* m_keys */
d63 1
a63 1
char	version[] = "$Revision: 8.2 $";
d103 1
a103 1
int anti_aliasing = FALSE;	/* Anti-aliasing thru over-sampling.	*/
d107 1
a107 1
int fatal_error = FALSE;	/* Fatal error, must abort raytrace.	*/
d109 3
a111 3
int force_cellsz = FALSE;	/* If (true) cell_sz drives resolution.	*/
int force_fbsz = FALSE;		/* If (true) fb_size used.		*/
int force_viewsz = FALSE;	/* If (true) view_size is set manually.	*/
d113 1
a113 1
int grid_position = FALSE;	/* Did user set distance yet.		*/
d121 1
a121 1
int hiddenln_draw = FALSE;	/* Generate hidden-line drawing.	*/
d127 2
a128 2
int ir_doing_paint = FALSE;	/* Is user doing above mapping.		*/
int ir_offset = FALSE;		/* Has user specified auto mapping.	*/
d136 8
a143 8
int query_region = FALSE;	/* If (true) spit out region info.	*/
int report_overlaps = TRUE;	/* If (false) shut-up about overlaps.	*/
int reverse_video = FALSE;	/* If (true) HL drawing white-on-black.	*/
int save_view_flag = FALSE;	/* View specified in "model2view".	*/
int sgi_console = FALSE;	/* Logged in to IRIS console.		*/
int sgi_usemouse = FALSE;	/* User wants to use the IRIS mouse.	*/
int shadowing = TRUE;		/* If (false) no shadows are computed.	*/
int tracking_cursor=FALSE;	/* Cursor is on by default.		*/
d146 1
a146 1
int user_interrupt = FALSE;	/* User-level interrupt of raytrace.	*/
@


8.2
log
@pre release changes
@
text
@d9 1
a9 1
static char RCSid[] = "@@(#)$Header: glob.c,v 7.1 87/11/03 00:21:03 moss Locked $ (BRL)";
d63 1
a63 1
char	version[] = "$Revision: 7.1 $";
@


8.1
log
@Release_3.0
@
text
@d9 1
a9 1
static char RCSid[] = "@@(#)$Header: glob.c,v 7.4 88/09/01 11:44:36 moss Locked $ (BRL)";
d13 1
a13 4
#include "machine.h"
#include "vmath.h"
#include "raytrace.h"
#include "fb.h"
a14 1
#include "./lgt.h"
d61 1
d63 1
a63 1
char	version[] = "$Revision: 7.4 $";
a88 3
/* Size of grid in normalized to model diameter.			*/
fastf_t	grid_scale = 1.0;

d103 48
a150 5
int	anti_aliasing = FALSE;	/* Anti-aliasing thru over-sampling.	*/
int	aperture_sz = 1;	/* Size of window for over-sampling.	*/
int	background[3];		/* Background as RGB values.		*/
int	co;			/* Number of columns on screen/layer.	*/
int	tracking_cursor=FALSE;	/* Cursor is on by default.		*/
d152 5
a156 37
int	grid_position = FALSE;	/* Did user set distance yet.		*/
int	save_view_flag = FALSE;	/* View specified in "model2view".	*/
int	hiddenln_draw = FALSE;	/* Generate hidden-line drawing.	*/
int	ir_aperture;		/* Size of window IR data over-sampling.*/
int	ir_noise = 2;		/* Threshold for subdivision of octree.	*/
int	ir_min = ABSOLUTE_ZERO;	/* IR input temperature ranges.		*/
int	ir_max = ABSOLUTE_ZERO;
int	ir_paint;		/* For temperature-to-location mapping.	*/
int	ir_doing_paint = FALSE;	/* Is user doing above mapping.		*/
int	ir_offset = FALSE;	/* Has user specified auto mapping.	*/
int	ir_mapx, ir_mapy;	/* Auto mapping offsets for above.	*/
int	ir_mapping = IR_OFF;	/* IR mapping.				*/
int	frame_no = 0;		/* Current frame being processed.	*/
int	user_interrupt = FALSE;	/* User-level interrupt of raytrace.	*/
int	fatal_error = FALSE;	/* Fatal error, must abort raytrace.	*/
int	lgt_db_size = 0;	/* Current size of light data base.	*/
int	max_bounce = 0;		/* Recursion level for raytracer.	*/
int	pix_buffered = B_LINE;	/* Scan line buffering is default.	*/
int	tty;		/* Is input attached to a terminal.		*/
int	grid_sz = 32;	/* Default resolution 32x32 pixels.		*/
int	grid_x_org = 0;	/* Grid x position to begin ray-tracing.	*/
int	grid_x_fin = 32;/* Grid x position to end ray-tracing.		*/
int	grid_x_cur = 0; /* Grid x current position.			*/
int	grid_y_cur = 0; /* Grid y current position.			*/
int	grid_y_org = 0;	/* Grid y position to begin ray-tracing.	*/
int	grid_y_fin = 32;/* Grid y position to end ray-tracing.		*/
int	query_region = FALSE;	/* If (true) spit out region info.	*/
int	report_overlaps = TRUE;	/* If (false) shut-up about overlaps.	*/
int	sgi_console = FALSE;	/* Logged in to IRIS console.		*/
int	sgi_usemouse = FALSE;	/* User wants to use the IRIS mouse.	*/
int	shadowing = TRUE;	/* If (false) no shadows are computed.	*/
int	x_fb_origin = 0;/* Display origin left-most pixel to display.	*/
int	y_fb_origin = 0;/* Display origin top-most pixel to display.	*/
int	li;		/* Number of lines in window.			*/
int	npsw = MAX_PSW;	/* Number of worker PSWs to run.		*/
struct resource	resource[MAX_PSW]; /* Memory resources.			*/
struct rt_i	*rt_ip;	/* Globals from RT library.			*/
@


7.4
log
@Added -z switch to turn off shadows and changed f_Model and f_Region
	so that when inside a solid, the surface normal is the reverse
	of the ray direction.  Now report surface normal from f_Region.
Converted to use of librt/machine.c rather than lgt module resource.c
	and also adopted rt_parallel() from machine.c.
@
text
@d9 1
a9 1
static char RCSid[] = "@@(#)$Header: glob.c,v 7.1 87/11/03 00:21:03 moss Locked $ (BRL)";
d66 1
a66 1
char	version[] = "$Revision: 7.1 $";
@


7.3
log
@Did away with texture file commands, and added textures to material
properties data base.
@
text
@d145 1
a148 1
#ifdef PARALLEL
a150 1
#endif
@


7.2
log
@Smoothing out menu and prompting interface.
@
text
@a59 1
char	txtr_file[MAX_LN] = { 0 };/* Texture map file.		*/
d114 1
a114 3
int	fb_width = 512;		/* Width of input scans in fb map.	*/
int	fb_ulen = 512;		/* Width in pixels of fb map.		*/
int	fb_vlen = 512;		/* Height in pixels of fb map.		*/
a126 1
int	fb_mapping = FALSE;	/* Frame buffer image texture mapping.	*/
a127 1
int	icon_mapping = FALSE;	/* Icon texture mapping.		*/
@


7.1
log
@Release 2.3
@
text
@d9 1
a9 1
static char RCSid[] = "@@(#)$Header: glob.c,v 6.2 87/10/15 10:24:15 moss Exp $ (BRL)";
a10 7
/*
	Originally extracted from SCCS archive:
		SCCS id:	@@(#) glob.c	2.2
		Modified: 	1/30/87 at 17:21:54	G S M
		Retrieved: 	2/4/87 at 08:53:10
		SCCS archive:	/vld/moss/src/lgt/s.glob.c
*/
d35 13
a47 1
Movie	movie = { 1, 32, FALSE, FALSE, FALSE, NULL };
d65 3
a67 1
char	version[] = "$Revision: 6.2 $";
d105 3
a107 2
fastf_t	view2model[16];		/* 4x4 matrix for GED saved view.	*/
fastf_t	view_size;		/* Absolute grid size for GED view.	*/
d131 1
d148 2
@


6.2
log
@Added query region command, fixed bug in use of nprocessors AND npsw globals.
@
text
@d9 1
a9 1
static char RCSid[] = "@@(#)$Header: glob.c,v 5.1 87/06/24 22:47:15 mike Rel $ (BRL)";
d60 1
a60 1
char	version[] = "$Revision: 5.1 $";
@


6.1
log
@Release 2.0
@
text
@d9 1
a9 1
static char RCSid[] = "@@(#)$Header: glob.c,v 5.2 87/07/01 13:41:30 moss Exp $ (BRL)";
d60 1
a60 1
char	version[] = "$Revision: 5.2 $";
a127 1
int	nprocessors = 1;	/* Number of processors (parallel cpus).*/
d137 1
@


5.2
log
@Fixes to IR module resulting from changes in LIBFB and the restructuring
of the gridding loop for parallel architectures.
@
text
@d9 1
a9 1
static char RCSid[] = "@@(#)$Header: glob.c,v 5.1 87/06/24 22:47:15 mike Rel $ (BRL)";
d60 1
a60 1
char	version[] = "$Revision: 5.1 $";
@


5.1
log
@Release 1.24
@
text
@d9 1
a9 1
static char RCSid[] = "@@(#)$Header: glob.c,v 1.3 87/06/23 12:31:21 moss Exp $ (BRL)";
d60 1
a60 1
char	version[] = "$Revision: 1.3 $";
d113 1
@


1.3
log
@Ready for release 1.23.  This includes the a_overlap function support,
and return to 128 byte records on IEEE floating point architectures.
@
text
@d9 1
a9 1
static char RCSid[] = "@@(#)$Header: glob.c,v 1.2 87/02/06 12:26:05 moss Locked $ (BRL)";
d60 1
a60 1
char	version[] = "$Revision: 1.2 $";
@


1.2
log
@Reorganized includes, pulled prnt_* functions out into module "prnt.c".
@
text
@d9 1
a9 1
static char RCSid[] = "@@(#)$Header: glob.c,v 1.1 87/02/04 15:14:54 moss Locked $ (BRL)";
d55 1
a55 1
char	texture_file[MAX_LN] = { 0 };/* Texture map file.		*/
d60 1
a60 1
char	version[] = "$Revision$";
d106 1
a106 2
int	dispatch_fd;		/* File to dispatch scans in parallel.	*/
int	tracking_cursor = TRUE;	/* Cursor is on by default.		*/
d110 1
a110 1
int	grid_dist_flag = FALSE;	/* Did user set distance yet.		*/
d112 1
d117 1
a117 1
int	ir_paint_flag = FALSE;	/* Is user doing above mapping.		*/
d137 1
@


1.1
log
@Initial revision
@
text
@d9 1
a9 1
static char RCSid[] = "@@(#)$Header$ (BRL)";
a19 1
#include "std.h"
d24 1
a24 1
#include "vecmath.h"
d59 7
d105 1
@
