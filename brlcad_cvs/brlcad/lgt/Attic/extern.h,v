head	11.2;
access;
symbols
	ansi-20040405-merged:11.1
	postmerge-20040405-ansi:11.1
	premerge-20040404-ansi:11.1
	postmerge-autoconf:11.1
	autoconf-freeze:11.1
	premerge-autoconf:11.1
	ansi-20040316-freeze:11.1
	postmerge-20040315-windows:11.1
	premerge-20040315-windows:11.1
	windows-20040315-freeze:11.1
	autoconf-20031203:11.1
	autoconf-20031202:11.1
	autoconf-branch:11.1.0.14
	phong-branch:11.1.0.12
	photonmap-branch:11.1.0.10
	rel-6-1-DP:11.1
	windows-branch:11.1.0.8
	rel-6-0-2:11.1
	ansi-branch:11.1.0.6
	rel-6-0-1-branch:11.1.0.4
	hartley-6-0-post:11.1
	hartley-6-0-pre:11.1
	rel-6-0-1:11.1
	rel-6-0:11.1
	rel-5-4:11.1
	offsite-5-3-pre:11.1
	rel-5-3:11.1
	rel-5-2:11.1
	rel-5-1-branch:11.1.0.2
	rel-5-1:11.1
	rel-5-0:11.1
	rel-5-0-beta:11.1
	rel-4-5:11.1
	ctj-4-5-post:11.1
	ctj-4-5-pre:11.1
	rel-4-4:11.1
	rel-4-0:10.1
	rel-3-5:9.1
	rel-3-0:8.1
	rel-2-3:7.2
	rel-2-0:5.2
	rel-1-24:5.1
	rel-1-20:1.2;
locks; strict;
comment	@ * @;


11.2
date	2004.05.21.17.48.15;	author morrison;	state dead;
branches;
next	11.1;

11.1
date	95.01.04.10.17.45;	author mike;	state Rel4_4;
branches;
next	10.4;

10.4
date	94.12.20.15.28.18;	author mike;	state Exp;
branches;
next	10.3;

10.3
date	94.08.25.17.59.39;	author gdurf;	state Exp;
branches;
next	10.2;

10.2
date	94.08.24.13.34.30;	author gdurf;	state Exp;
branches;
next	10.1;

10.1
date	91.10.12.06.50.00;	author mike;	state Rel4_0;
branches;
next	9.5;

9.5
date	91.10.11.08.38.21;	author butler;	state Exp;
branches;
next	9.4;

9.4
date	91.08.30.21.13.13;	author mike;	state Exp;
branches;
next	9.3;

9.3
date	91.06.12.22.56.32;	author mike;	state Exp;
branches;
next	9.2;

9.2
date	90.11.26.13.13.43;	author moss;	state Exp;
branches;
next	9.1;

9.1
date	89.05.19.06.13.03;	author mike;	state Rel3_5;
branches;
next	8.9;

8.9
date	89.05.18.15.18.28;	author moss;	state Exp;
branches;
next	8.8;

8.8
date	89.05.12.23.26.19;	author moss;	state Exp;
branches;
next	8.7;

8.7
date	89.04.24.10.06.23;	author moss;	state Exp;
branches;
next	8.6;

8.6
date	89.04.14.12.22.48;	author moss;	state Exp;
branches;
next	8.5;

8.5
date	89.04.14.11.27.46;	author moss;	state Exp;
branches;
next	8.4;

8.4
date	89.03.31.14.02.42;	author moss;	state Exp;
branches;
next	8.3;

8.3
date	89.03.13.16.51.16;	author moss;	state Exp;
branches;
next	8.2;

8.2
date	89.03.13.16.41.43;	author moss;	state Exp;
branches;
next	8.1;

8.1
date	88.10.05.00.51.44;	author mike;	state Rel3_0;
branches;
next	7.6;

7.6
date	88.09.01.11.44.26;	author moss;	state Exp;
branches;
next	7.5;

7.5
date	88.08.30.10.22.49;	author moss;	state Exp;
branches;
next	7.4;

7.4
date	88.06.23.09.29.09;	author moss;	state Exp;
branches;
next	7.3;

7.3
date	88.06.23.09.21.10;	author moss;	state Exp;
branches;
next	7.2;

7.2
date	87.11.03.00.23.44;	author mike;	state Rel;
branches;
next	7.1;

7.1
date	87.11.03.00.12.09;	author mike;	state Rel;
branches;
next	6.3;

6.3
date	87.10.29.08.51.19;	author moss;	state Exp;
branches;
next	6.2;

6.2
date	87.10.15.10.23.07;	author moss;	state Exp;
branches;
next	6.1;

6.1
date	87.07.11.08.15.38;	author mike;	state Rel;
branches;
next	5.2;

5.2
date	87.07.01.13.41.33;	author moss;	state Exp;
branches;
next	5.1;

5.1
date	87.06.24.22.47.10;	author mike;	state Rel;
branches;
next	1.3;

1.3
date	87.06.23.12.31.10;	author moss;	state Exp;
branches;
next	1.2;

1.2
date	87.02.06.12.25.31;	author moss;	state Exp;
branches;
next	1.1;

1.1
date	87.02.04.15.14.52;	author moss;	state Exp;
branches;
next	;


desc
@This is the initial version as far as the BRL/CAD distribution is concerned.
It is extracted from SCCS archives.
@


11.2
log
@moved to src/lgt/
@
text
@/*
	Authors:	Gary S. Moss
			Jeff Hanes	(math consultation)

			U. S. Army Ballistic Research Laboratory
			Aberdeen Proving Ground
			Maryland 21005-5066
			(301)278-6651 or AV-298-6651


	Note: preceeding #include "./extern.h" must be the following:

	#include <assert.h>

	#include "machine.h"
	#include "externs.h"
	#include "vmath.h"
	#include "raytrace.h"
	#include "fb.h"
	#include "./hmenu.h"
	#include "./lgt.h"
*/

#ifndef DEBUG
#define NDEBUG
#endif

#ifndef STATIC
#define STATIC static
#endif

/* Set pre-processor switch to make up for SGI 4d Release 2 winclose() bug. */
#ifdef SGI4D_Rel2
#define SGI_WINCLOSE_BUG 1
#else
#define SGI_WINCLOSE_BUG 0
#endif

/* Set pre-processor switch for getting signal() handler declarations right.
 */
#if defined(sun) && ! defined(SunOS4)
/* For Suns running older releases, compile with -DSunOS4=0 to suppress
	bogus warning messages. */
#define SunOS4	1
#endif
#if __STDC__ || (defined(SYSV) && ! defined(cray)) || SunOS4 || defined(__convexc__)
#define STD_SIGNAL_DECLS 1
#else
#define STD_SIGNAL_DECLS 0
#endif

/* Set pre_processor switch to make up for SGI 3000 series math library. */
#if defined(sgi) && ! defined(mips)
#define SINGLE_PRECISION 1
#else
#define SINGLE_PRECISION 0
#endif

#if STD_SIGNAL_DECLS
extern void (*norml_sig)(), (*abort_sig)();
extern void abort_RT();
extern void stop_sig();
#else
extern int (*norml_sig)(), (*abort_sig)();
extern int abort_RT();
extern int stop_sig();
#endif

/* other functions */
extern char *get_Input();

extern fastf_t pow_Of_2();

extern int fb_Setup();
extern int f_IR_Model(), f_IR_Backgr();
extern int get_Answer();
extern int lgt_Edit_Db_Entry();
extern int lgt_Print_Db();
extern int pars_Argv();

extern void append_Octp();
extern void close_Output_Device();
extern void cons_Vector();
extern void delete_OcList();
extern void display_Temps();
extern void do_line();
extern void exit_Neatly();
extern void fb_Zoom_Window();
extern void grid_Rotate();
extern void init_Status();
extern void loc_Perror();
extern void note_IRmapping();
extern void prnt_Event();
extern void prnt_IR_Status();
extern void prnt_Lgt_Status();
extern void prnt_Menu();
extern void prnt_Octree();
extern void prnt_Pixel();
extern void prnt_Prompt();
#if HAVE_STDARG_H
extern void prnt_Scroll( char *, ... );
#else
extern void prnt_Scroll();
#endif
extern void prnt_Status();
extern void prnt_Timer();
extern void prnt_Title();
extern void prnt_Trie();
extern void prnt_Usage();
extern void prnt3vec();
extern void render_Model();
extern void ring_Bell();
extern void set_IRmapping();
extern void setGridSize();
extern void update_Screen();
extern void user_Interaction();

/* variables */
extern FBIO *fbiop;

extern RGBpixel bgpixel;
extern RGBpixel *ir_table;

extern char *CS, *DL;
extern char *beginptr;
extern char *ged_file;

extern char err_file[];
extern char fb_file[];
extern char input_ln[];
extern char ir_file[];
extern char ir_db_file[];
extern char lgt_db_file[];
extern char mat_db_file[];
extern char prefix[];
extern char prompt[];
extern char script_file[];
extern char title[];
extern char timer[];
extern char version[];

extern fastf_t bg_coefs[];
extern fastf_t cell_sz;
extern fastf_t degtorad;
extern fastf_t grid_dist;
extern fastf_t grid_hor[];
extern fastf_t grid_ver[];
extern fastf_t grid_loc[];
extern fastf_t grid_roll;
extern fastf_t modl_cntr[];
extern fastf_t modl_radius;
extern fastf_t x_grid_offset, y_grid_offset;
extern fastf_t rel_perspective;
extern fastf_t sample_sz;
extern fastf_t view2model[];
extern fastf_t view_rots[];
extern fastf_t view_size;
extern int LI, CO;
extern int anti_aliasing;
extern int aperture_sz;
extern int background[];
extern int co;
extern int debug;
extern int errno;
extern int fatal_error;
extern int fb_size;
extern int force_cellsz;
extern int force_fbsz;
extern int force_viewsz;
extern int frame_no;
extern int grid_sz;
extern int grid_position;
extern int grid_x_org, grid_y_org;
extern int grid_x_fin, grid_y_fin;
extern int grid_x_cur, grid_y_cur;
extern int hiddenln_draw;
extern int ir_aperture;
extern int ir_offset;
extern int ir_min, ir_max;
extern int ir_paint;
extern int ir_doing_paint;
extern int ir_mapx, ir_mapy;
extern int ir_noise;
extern int ir_mapping;
extern int lgt_db_size;
extern int li;
extern int max_bounce;
extern int npsw;
extern int pix_buffered;
extern int query_region;
extern int report_overlaps;
extern int reverse_video;
extern int save_view_flag;
extern int sgi_console;
extern int sgi_usemouse;
extern int shadowing;
extern int tracking_cursor;
extern int tty;
extern int type_grid;
extern int user_interrupt;
extern int x_fb_origin, y_fb_origin;
extern int zoom;

extern unsigned char arrowcursor[];
extern unsigned char menucursor[];
extern unsigned char sweeportrack[];
extern unsigned char target1[];

extern struct resource resource[];
extern struct rt_i *rt_ip;

#define C_TAGPIXEL	0
#define C_SWEEPREC	1
#define C_I_WINDOW	2
#define C_O_WINDOW	3
#define C_QUERYREG	4
#define XSCR2MEM(_x)	(_x)
#define YSCR2MEM(_y)	(_y)

#ifdef sgi
extern int win_active;
#define	SGI_XCVT( v_ ) (((v_) - xwin) / (fbiop->if_width/grid_sz))
#define SGI_YCVT( v_ ) (((v_) - ywin) / (fbiop->if_width/grid_sz))
#else
#define	SGI_XCVT( v_ ) (v_)
#define SGI_YCVT( v_ ) (v_)
#endif
@


11.1
log
@Release_4.4
@
text
@@


10.4
log
@Changed definition of "template" array so that it would be in
writable memory.  Newer compilers place the bytes of quoted strings
into read-only memory pages.  In the case of "template", that
prevented the "fill-in-the-blanks" operations from succeeding.
@
text
@@


10.3
log
@Added comment
@
text
@a126 1
extern char **template;
@


10.2
log
@Made includes explicit, factored ifdefs
@
text
@d9 13
d23 1
@


10.1
log
@Release_4.0
@
text
@a9 3
#include "machine.h"
#include "./lgt.h"

a12 1
#include <assert.h>
a54 7
/* C library functions. */
#include "externs.h"
extern char     *sbrk();
#ifdef BSD
extern char *tmpnam(), *gets(), *strtok();
#endif

d86 1
a86 1
#if __STDC__
@


9.5
log
@adapted to be STDC on Convex
@
text
@@


9.4
log
@STDC prnt_Scroll
@
text
@d36 1
a36 1
#if __STDC__ || (defined(SYSV) && ! defined(cray)) || SunOS4
@


9.3
log
@lint
@
text
@d97 3
d101 1
@


9.2
log
@Fixed #define of STD_SIGNAL_DECLS to include SunOS 4.0 which is now the
default for Suns.
@
text
@d10 1
d60 2
a61 14
#if __STDC__
#include <stdlib.h>
#else
#	ifdef BSD
	extern int exit();
	extern int free();
#	else
	extern void exit();
	extern void free();
#	endif
extern char *getenv();
extern char *malloc();
#endif
extern char *sbrk();
a63 3
extern int perror();
#else
extern void perror();
a215 1
extern long defpup(), qtest();
@


9.1
log
@Release_3.5
@
text
@d30 6
a35 1
#if __STDC__ || (defined(SYSV) && ! defined(cray))
@


8.9
log
@Fixed declaration of stop_sig().
@
text
@@


8.8
log
@pre release changes
@
text
@d46 1
d50 1
a59 1
	extern int stop_sig();
a62 1
	extern void stop_sig();
@


8.7
log
@Removed declaration of rt_log, which is now declared in raytrace.h.
@
text
@d10 4
a13 2
#if ! defined(FAST)
#include "machine.h"
d15 1
d17 2
a18 2
#if ! defined(INCL_FB)
#include "fb.h"
d21 5
a25 2
#if ! defined(INCL_HM)
#include "./hmenu.h"
d36 7
d58 1
d62 1
a67 1
extern char *strcpy(), *strncpy();
d116 1
a116 1
extern void set_Size_Grid();
d138 1
a151 1
extern fastf_t grid_scale;
d169 4
d195 1
d202 1
@


8.6
log
@Fixed declaration of malloc() to agree with ANSI C, and neatened up C
library function declarations by including <stdlib.h> when appropriate.
@
text
@a100 1
extern void rt_log();
@


8.5
log
@Fixed signal handler declarations *again*.
@
text
@d8 1
a8 1
			(301)278-6647 or AV-298-6647
d30 6
a35 3
/* Functions.								*/
#if defined( BSD )
extern char		*tmpnam(), *gets(), *strtok();
d38 3
a40 3
#if STD_SIGNAL_DECLS
extern void		(*norml_sig)(), (*abort_sig)();
extern void		abort_RT();
d42 9
a50 2
extern int		(*norml_sig)(), (*abort_sig)();
extern int		abort_RT();
d52 8
d61 2
a62 5
extern char		*getenv();
extern char		*malloc();
extern char		*sbrk();
extern char		*strcpy(), *strncpy();
extern char		*get_Input();
d64 1
a64 1
extern fastf_t		pow_Of_2();
d66 6
a71 6
extern int		fb_Setup();
extern int		f_IR_Model(), f_IR_Backgr();
extern int		get_Answer();
extern int		lgt_Edit_Db_Entry();
extern int		lgt_Print_Db();
extern int		pars_Argv();
d73 33
a105 9
#ifdef BSD
extern int		exit();
extern int		free();
extern int		perror();
#else
extern void		exit();
extern void		free();
extern void		perror();
#endif
d107 2
a108 33
extern void		append_Octp();
extern void		close_Output_Device();
extern void		cons_Vector();
extern void		delete_OcList();
extern void		display_Temps();
extern void		do_line();
extern void		exit_Neatly();
extern void		fb_Zoom_Window();
extern void		grid_Rotate();
extern void		init_Status();
extern void		loc_Perror();
extern void		note_IRmapping();
extern void		prnt_Event();
extern void		prnt_IR_Status();
extern void		prnt_Lgt_Status();
extern void		prnt_Menu();
extern void		prnt_Octree();
extern void		prnt_Pixel();
extern void		prnt_Prompt();
extern void		prnt_Scroll();
extern void		prnt_Status();
extern void		prnt_Timer();
extern void		prnt_Title();
extern void		prnt_Trie();
extern void		prnt_Usage();
extern void		prnt3vec();
extern void		render_Model();
extern void		ring_Bell();
extern void		rt_log();
extern void		set_IRmapping();
extern void		set_Size_Grid();
extern void		update_Screen();
extern void		user_Interaction();
d110 2
a111 2
/* Variables.								*/
extern FBIO		*fbiop;
d113 4
a116 2
extern RGBpixel		bgpixel;
extern RGBpixel		*ir_table;
d118 12
a129 4
extern char		*CS, *DL;
extern char		*beginptr;
extern char		*ged_file;
extern char		**template;
d131 56
a186 12
extern char		err_file[];
extern char		fb_file[];
extern char		input_ln[];
extern char		ir_file[];
extern char		ir_db_file[];
extern char		lgt_db_file[];
extern char		mat_db_file[];
extern char		prompt[];
extern char		script_file[];
extern char		title[];
extern char		timer[];
extern char		version[];
d188 4
a191 56
extern fastf_t		bg_coefs[];
extern fastf_t		cell_sz;
extern fastf_t		degtorad;
extern fastf_t		grid_dist;
extern fastf_t		grid_hor[];
extern fastf_t		grid_ver[];
extern fastf_t		grid_loc[];
extern fastf_t		grid_scale;
extern fastf_t		grid_roll;
extern fastf_t		modl_cntr[];
extern fastf_t		modl_radius;
extern fastf_t		x_grid_offset, y_grid_offset;
extern fastf_t		rel_perspective;
extern fastf_t		sample_sz;
extern fastf_t		view2model[];
extern fastf_t		view_rots[];
extern fastf_t		view_size;
extern int		LI, CO;
extern int		anti_aliasing;
extern int		aperture_sz;
extern int		background[];
extern int		co;
extern int		debug;
extern int		errno;
extern int		fatal_error;
extern int		frame_no;
extern int		grid_sz;
extern int		grid_position;
extern int		grid_x_org, grid_y_org;
extern int		grid_x_fin, grid_y_fin;
extern int		grid_x_cur, grid_y_cur;
extern int		hiddenln_draw;
extern int		ir_aperture;
extern int		ir_offset;
extern int		ir_min, ir_max;
extern int		ir_paint;
extern int		ir_doing_paint;
extern int		ir_mapx, ir_mapy;
extern int		ir_noise;
extern int		ir_mapping;
extern int		lgt_db_size;
extern int		li;
extern int		max_bounce;
extern int		npsw;
extern int		pix_buffered;
extern int		query_region;
extern int		report_overlaps;
extern int		save_view_flag;
extern int		sgi_console;
extern int		sgi_usemouse;
extern int		shadowing;
extern int		tracking_cursor;
extern int		tty;
extern int		user_interrupt;
extern int		x_fb_origin, y_fb_origin;
extern int		zoom;
d193 2
a194 4
extern unsigned char	arrowcursor[];
extern unsigned char	menucursor[];
extern unsigned char	sweeportrack[];
extern unsigned char	target1[];
a195 3
extern struct resource	resource[];
extern struct rt_i	*rt_ip;

d205 2
a206 2
extern int	win_active;
extern long	defpup(), qtest();
@


8.4
log
@Signal() is still declared wrong on Cray's Standard C compiler running
under UNICOS 4.0; will be fixed on 5.0.  See definition of STD_SIGNAL_DECLS
in extern.h.
@
text
@d24 1
a24 1
#if (__STDC__ && _UNICOS != 4) || (defined(SYSV) && ! defined(cray))
@


8.3
log
@Signals are 'int' functions on the Crays before ANSI C, even though they
claim to be SYS V; fixed pre-processor switch again.
@
text
@d24 1
a24 1
#if __STDC__ || (defined(SYSV) && ! defined(cray))
@


8.2
log
@Fixed signal handler declarations.
@
text
@d24 1
a24 1
#if __STDC__ || defined(SYSV)
@


8.1
log
@Release_3.0
@
text
@d22 8
d34 5
a38 1
#if defined( BSD ) || (defined( SYSV ) && ! defined( mips ))
a40 3
#else
extern void		(*norml_sig)(), (*abort_sig)();
extern void		abort_RT();
d42 1
@


7.6
log
@Added -z switch to turn off shadows and changed f_Model and f_Region
	so that when inside a solid, the surface normal is the reverse
	of the ray direction.  Now report surface normal from f_Region.
Converted to use of librt/machine.c rather than lgt module resource.c
	and also adopted rt_parallel() from machine.c.
@
text
@@


7.5
log
@Did away with texture file commands, and added textures to material
properties data base.
@
text
@a158 1
#ifdef PARALLEL
a159 1
#endif
d166 1
a177 1
#ifdef PARALLEL
a178 1
#endif
@


7.4
log
@Smoothing out menu and prompting interface.
@
text
@a46 1
extern int		txtr_Val();
a111 1
extern char		txtr_file[];
a140 3
extern int		fb_mapping;
extern int		fb_width;
extern int		fb_ulen, fb_vlen;
a147 1
extern int		icon_mapping;
@


7.3
log
@Just cleaning up.
@
text
@d106 1
d111 1
d133 1
d146 1
a161 1
extern int		isiris;
d172 2
a200 4
#define WIN_L	(1023-511-4)
#define WIN_R	(1023-4)
#define WIN_B	4
#define WIN_T	(511+4)
@


7.2
log
@Release
@
text
@a9 7
/*
	Originally extracted from SCCS archive:
		SCCS id:	@@(#) extern.h	2.2
		Modified: 	1/30/87 at 17:22:09	G S M
		Retrieved: 	2/4/87 at 08:53:22
		SCCS archive:	/vld/moss/src/lgt/s.extern.h
*/
d26 1
a26 1
#if defined( BSD ) || defined( SYSV )
d41 1
d43 3
a46 2
extern int		get_Answer();
extern int		fb_Setup();
d70 1
d88 2
d158 1
d176 1
a177 1
extern unsigned char	arrowcursor[];
d184 8
@


7.1
log
@Release 2.3
@
text
@@


6.3
log
@Ready for release 2.1 of BRL CAD.
@
text
@@


6.2
log
@*** empty log message ***
@
text
@d43 1
a43 1
extern char		*strncpy();
d54 10
a69 1
extern void		exit();
a70 1
extern void		free();
a74 1
extern void		perror();
@


6.1
log
@Release 2.0
@
text
@d25 4
d65 1
d85 1
d97 1
a155 1
extern int		nprocessors;
d160 1
@


5.2
log
@Fixes to IR module resulting from changes in LIBFB and the restructuring
of the gridding loop for parallel architectures.
@
text
@@


5.1
log
@Release 1.24
@
text
@d138 1
@


1.3
log
@Ready for release 1.23.  This includes the a_overlap function support,
and return to 128 byte records on IEEE floating point architectures.
@
text
@@


1.2
log
@Reorganized includes, pulled prnt_* functions out into module "prnt.c".
@
text
@d29 1
a29 1
#if defined( BSD ) || defined( sgi )
d40 1
d44 1
a44 1
extern int		do_IR_Model(), do_IR_Backgr();
d48 1
a48 1
extern int		texture_Val();
d99 1
a99 1
extern char		texture_file[];
a130 1
extern int		grid_dist_flag;
d132 1
d136 1
d141 1
a141 1
extern int		ir_paint_flag;
d153 1
@


1.1
log
@Initial revision
@
text
@a16 1

d18 1
a18 1
#include <machine.h>
d22 1
a22 1
#include <fb.h>
a24 12
#if ! defined(INCL_MATDB)
#include <mat_db.h>
#endif

#if ! defined(INCL_LGT)
#include <lgt.h>
#endif

#if ! defined(INCL_TREE)
#include "tree.h"
#endif

a25 6
extern Mat_Db_Entry	*fb_Entry();
extern Mat_Db_Entry	*fb_val();
extern OcList		*get_Region_Name();
extern Octree		*find_Octant();
extern Octree		*add_Region_Octree();
extern Trie		*add_Trie();
d63 3
d72 1
d83 1
a83 3
extern Lgt_Source	lgts[];
extern Movie		movie;
extern Octree		ir_octree;
d86 1
a86 1
extern Trie		*reg_triep;
d89 2
a90 1
extern char		ir_file[];
d93 1
d97 1
d99 4
d123 1
a123 2
extern int		dispatch_fd;
extern int		tracking_cursor;
a142 1
extern int		save_view_flag;
d151 2
@
