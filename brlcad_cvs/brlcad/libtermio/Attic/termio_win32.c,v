head	11.3;
access;
symbols
	ansi-20040405-merged:11.1.2.1
	postmerge-20040405-ansi:11.1
	premerge-20040404-ansi:11.1
	postmerge-autoconf:11.1
	autoconf-freeze:11.1.4.1
	premerge-autoconf:11.1
	postmerge-20040315-windows:11.1
	windows-20040315-freeze:1.1.2.1
	autoconf-branch:11.1.0.4
	windows-branch:1.1.0.2
	ansi-branch:11.1.0.2;
locks; strict;
comment	@ * @;


11.3
date	2004.05.21.18.07.37;	author morrison;	state dead;
branches;
next	11.2;

11.2
date	2004.05.10.15.30.47;	author erikg;	state Exp;
branches;
next	11.1;

11.1
date	2004.03.16.20.04.01;	author morrison;	state Exp;
branches
	11.1.2.1
	11.1.4.1;
next	1.1;

1.1
date	2002.09.26.23.04.06;	author morrison;	state dead;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2002.09.26.23.04.06;	author morrison;	state Exp;
branches;
next	;

11.1.2.1
date	2004.03.17.21.20.21;	author morrison;	state Exp;
branches;
next	;

11.1.4.1
date	2004.03.18.18.10.29;	author erikg;	state Exp;
branches;
next	;


desc
@@


11.3
log
@moved to src/
@
text
@/*LINTLIBRARY*/
/*
	Author:		Gary S. Moss
			U. S. Army Ballistic Research Laboratory
			Aberdeen Proving Ground
			Maryland 21005-5066
			(301)278-6647 or AV-298-6647
*/
#ifndef lint
static const char RCSid[] = "@@(#)$Header: /n/xoff/cvs/brlcad/libtermio/termio_win32.c,v 11.2 2004/05/10 15:30:47 erikg Exp $ (BRL)";
#endif

#ifdef HAVE_CONFIG_H
# include "config.h"
#endif



#include <stdio.h>


#include "machine.h"

#include "libtermio.h"

static int		fileStatus[FOPEN_MAX];
void			prnt_Tio();
static void		copy_Tio();

/*	c l r _ C b r e a k ( )
	Clear CBREAK mode, for file descriptor 'fd'.
 */
void
clr_Cbreak( fd )
int	fd;
	{
	return;
	}

/*	s e t _ C b r e a k ( )
	Set CBREAK mode, 'fd'.
 */
void
set_Cbreak( fd )
int	fd;
	{
	return;
	}

/*	c l r _ R a w ( )
	Set cooked mode, 'fd'.
 */
void
clr_Raw( fd )
int	fd;
	{
	return;
	}

/*	s e t _ R a w ( )
	Set raw mode, 'fd'.
 */
void
set_Raw( fd )
int	fd;
	{
	return;
	}

/*	s e t _ E c h o ( )
	Set echo mode, 'fd'.
 */
void
set_Echo( fd )
int	fd;
	{
	return;
	}

/*	c l r _ E c h o ( )
	Clear echo mode, 'fd'.
 */
void
clr_Echo( fd )
int	fd;
	{
	return;
	}

/*	s e t _ T a b s ( )
	Turn on tab expansion, 'fd'.
 */
void
set_Tabs( fd )
int	fd;
	{
	return;
	}

/*	c l r _ T a b s ( )
	Turn off tab expansion, 'fd'.
 */
void
clr_Tabs( fd )
int	fd;
	{
	return;
	}

/*	s e t _ H U P C L ( )
	Turn on "Hang up on last close", 'fd'.
 */
void
set_HUPCL( fd )
int	fd;
	{
	return;
	}

/*	c l r _ C R N L ( )
	Turn off CR/LF mapping, fd.
 */
void
clr_CRNL( fd )
	{
return;
	}

/*	g e t _ O _ S p e e d ( )
	Get the terminals output speed, 'fd'.
 */
unsigned short
get_O_Speed( fd )
	{

	return	1;
	}

/*	s a v e _ T t y ( )
	Get and save terminal parameters, 'fd'.
 */
void
save_Tty( fd )
int	fd;
	{
	return;
	}

/*	r e s e t _ T t y ( )
	Set the terminal back to the mode that the user had last time
	save_Tty() was called for 'fd'.
 */
void
reset_Tty( fd )
int	fd;
	{
	return;
	}

/*	s a v e _ F i l _ S t a t ( )
	Save file status flags for 'fd'.
 */
int
save_Fil_Stat( fd )
int	fd;
	{
	return	1;
	}

/*	r e s e t _ F i l _ S t a t ( )
	Restore file status flags for file desc. 'fd' to what they were the
	last time saveFilStat(fd) was called.
 */
int
reset_Fil_Stat( fd )
int	fd;
	{
	return	1;
	}

/*	s e t _ O _ N D E L A Y ( )
	Set non-blocking read on 'fd'.
 */
int
set_O_NDELAY( fd )
int	fd;
	{
	return	1;
	}

/*	c o p y _ T i o ( )						*/
static void
copy_Tio( to, from )
#ifdef BSD
struct sgttyb	*to, *from;
#endif
#ifdef SYSV
struct termio	*to, *from;
#endif
#ifdef HAVE_TERMIOS_H
struct termios	*to;
struct termios	*from;
#endif
	{
	return;
	}

/*	p r n t _ T i o ( )						*/
void
prnt_Tio( msg, tio_ptr )
char		*msg;
#ifdef BSD
struct sgttyb	*tio_ptr;
#endif
#ifdef SYSV
struct termio	*tio_ptr;
#endif
#ifdef HAVE_TERMIOS_H
struct termios	*tio_ptr;
#endif
	{	
	return;
	}
@


11.2
log
@change conf.h to a wrapped config.h
@
text
@d10 1
a10 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/libtermio/termio_win32.c,v 11.1 2004/03/16 20:04:01 morrison Exp $ (BRL)";
@


11.1
log
@merge of windows-6-0-branch into head
@
text
@d10 1
a10 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
d13 5
a17 1
#include "conf.h"
@


11.1.4.1
log
@merge from head
@
text
@@


11.1.2.1
log
@sync branch with HEAD
@
text
@@


1.1
log
@file termio_win32.c was initially added on branch windows-6-0-branch.
@
text
@d1 219
@


1.1.2.1
log
@Modifications (on a 6.0 source distribution) for initial port to windows (merged with sources close to 6.0.2)
@
text
@a0 219
/*LINTLIBRARY*/
/*
	Author:		Gary S. Moss
			U. S. Army Ballistic Research Laboratory
			Aberdeen Proving Ground
			Maryland 21005-5066
			(301)278-6647 or AV-298-6647
*/
#ifndef lint
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libtermio/termio.c,v 11.8 2001/10/17 07:40:04 morrison Exp $ (BRL)";
#endif

#include "conf.h"

#include <stdio.h>


#include "machine.h"

#include "libtermio.h"

static int		fileStatus[FOPEN_MAX];
void			prnt_Tio();
static void		copy_Tio();

/*	c l r _ C b r e a k ( )
	Clear CBREAK mode, for file descriptor 'fd'.
 */
void
clr_Cbreak( fd )
int	fd;
	{
	return;
	}

/*	s e t _ C b r e a k ( )
	Set CBREAK mode, 'fd'.
 */
void
set_Cbreak( fd )
int	fd;
	{
	return;
	}

/*	c l r _ R a w ( )
	Set cooked mode, 'fd'.
 */
void
clr_Raw( fd )
int	fd;
	{
	return;
	}

/*	s e t _ R a w ( )
	Set raw mode, 'fd'.
 */
void
set_Raw( fd )
int	fd;
	{
	return;
	}

/*	s e t _ E c h o ( )
	Set echo mode, 'fd'.
 */
void
set_Echo( fd )
int	fd;
	{
	return;
	}

/*	c l r _ E c h o ( )
	Clear echo mode, 'fd'.
 */
void
clr_Echo( fd )
int	fd;
	{
	return;
	}

/*	s e t _ T a b s ( )
	Turn on tab expansion, 'fd'.
 */
void
set_Tabs( fd )
int	fd;
	{
	return;
	}

/*	c l r _ T a b s ( )
	Turn off tab expansion, 'fd'.
 */
void
clr_Tabs( fd )
int	fd;
	{
	return;
	}

/*	s e t _ H U P C L ( )
	Turn on "Hang up on last close", 'fd'.
 */
void
set_HUPCL( fd )
int	fd;
	{
	return;
	}

/*	c l r _ C R N L ( )
	Turn off CR/LF mapping, fd.
 */
void
clr_CRNL( fd )
	{
return;
	}

/*	g e t _ O _ S p e e d ( )
	Get the terminals output speed, 'fd'.
 */
unsigned short
get_O_Speed( fd )
	{

	return	1;
	}

/*	s a v e _ T t y ( )
	Get and save terminal parameters, 'fd'.
 */
void
save_Tty( fd )
int	fd;
	{
	return;
	}

/*	r e s e t _ T t y ( )
	Set the terminal back to the mode that the user had last time
	save_Tty() was called for 'fd'.
 */
void
reset_Tty( fd )
int	fd;
	{
	return;
	}

/*	s a v e _ F i l _ S t a t ( )
	Save file status flags for 'fd'.
 */
int
save_Fil_Stat( fd )
int	fd;
	{
	return	1;
	}

/*	r e s e t _ F i l _ S t a t ( )
	Restore file status flags for file desc. 'fd' to what they were the
	last time saveFilStat(fd) was called.
 */
int
reset_Fil_Stat( fd )
int	fd;
	{
	return	1;
	}

/*	s e t _ O _ N D E L A Y ( )
	Set non-blocking read on 'fd'.
 */
int
set_O_NDELAY( fd )
int	fd;
	{
	return	1;
	}

/*	c o p y _ T i o ( )						*/
static void
copy_Tio( to, from )
#ifdef BSD
struct sgttyb	*to, *from;
#endif
#ifdef SYSV
struct termio	*to, *from;
#endif
#ifdef HAVE_TERMIOS_H
struct termios	*to;
struct termios	*from;
#endif
	{
	return;
	}

/*	p r n t _ T i o ( )						*/
void
prnt_Tio( msg, tio_ptr )
char		*msg;
#ifdef BSD
struct sgttyb	*tio_ptr;
#endif
#ifdef SYSV
struct termio	*tio_ptr;
#endif
#ifdef HAVE_TERMIOS_H
struct termios	*tio_ptr;
#endif
	{	
	return;
	}
@

