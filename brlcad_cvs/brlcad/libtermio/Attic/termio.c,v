head	11.11;
access;
symbols
	ansi-20040405-merged:11.8
	postmerge-20040405-ansi:11.9
	premerge-20040404-ansi:11.9
	postmerge-autoconf:11.9
	autoconf-freeze:11.8.12.3
	premerge-autoconf:11.8
	ansi-20040316-freeze:11.8
	postmerge-20040315-windows:11.8
	premerge-20040315-windows:11.8
	windows-20040315-freeze:11.8
	autoconf-20031203:11.8
	autoconf-20031202:11.8
	autoconf-branch:11.8.0.12
	phong-branch:11.8.0.10
	photonmap-branch:11.8.0.8
	rel-6-1-DP:11.8
	windows-branch:11.8.0.6
	rel-6-0-2:11.8
	ansi-branch:11.8.0.4
	rel-6-0-1-branch:11.8.0.2
	hartley-6-0-post:11.8
	hartley-6-0-pre:11.8
	rel-6-0-1:11.8
	rel-6-0:11.8
	rel-5-4:11.4
	offsite-5-3-pre:11.7
	rel-5-3:11.4
	rel-5-2:11.4
	rel-5-1-branch:11.4.0.2
	rel-5-1:11.4
	rel-5-0:11.4
	rel-5-0-beta:11.4
	rel-4-5:11.1
	ctj-4-5-post:11.1
	ctj-4-5-pre:11.1
	rel-4-4:11.1
	rel-4-0:10.1
	rel-3-5:9.1
	rel-3-0:8.1
	rel-2-3:7.1
	rel-2-0:6.1
	rel-1-24:5.1
	rel-1-20:4.2
	rel-1-10:4.1;
locks; strict;
comment	@ * @;


11.11
date	2004.05.21.18.07.37;	author morrison;	state dead;
branches;
next	11.10;

11.10
date	2004.05.10.15.30.47;	author erikg;	state Exp;
branches;
next	11.9;

11.9
date	2004.03.18.18.25.15;	author erikg;	state Exp;
branches;
next	11.8;

11.8
date	2001.10.17.07.40.04;	author morrison;	state Exp;
branches
	11.8.12.1;
next	11.7;

11.7
date	2000.09.06.20.36.56;	author mike;	state Exp;
branches;
next	11.6;

11.6
date	2000.09.06.20.34.44;	author mike;	state Exp;
branches;
next	11.5;

11.5
date	2000.08.25.21.19.46;	author mike;	state Exp;
branches;
next	11.4;

11.4
date	98.10.30.14.33.43;	author jra;	state Exp;
branches;
next	11.3;

11.3
date	98.10.27.20.43.27;	author jra;	state Exp;
branches;
next	11.2;

11.2
date	98.06.27.05.00.52;	author mike;	state Exp;
branches;
next	11.1;

11.1
date	95.01.04.10.04.07;	author mike;	state Rel4_4;
branches;
next	10.9;

10.9
date	95.01.03.20.51.13;	author stay;	state Exp;
branches;
next	10.8;

10.8
date	94.12.19.18.29.48;	author mike;	state Exp;
branches;
next	10.7;

10.7
date	94.10.22.07.38.37;	author butler;	state Exp;
branches;
next	10.6;

10.6
date	94.09.01.05.54.00;	author gdurf;	state Exp;
branches;
next	10.5;

10.5
date	94.08.23.17.10.25;	author gdurf;	state Exp;
branches;
next	10.4;

10.4
date	93.11.04.19.37.47;	author mike;	state Exp;
branches;
next	10.3;

10.3
date	93.10.25.20.35.48;	author mike;	state Exp;
branches;
next	10.2;

10.2
date	93.07.20.20.49.03;	author mike;	state Exp;
branches;
next	10.1;

10.1
date	91.10.12.06.37.43;	author mike;	state Rel4_0;
branches;
next	9.1;

9.1
date	89.05.19.05.48.46;	author mike;	state Rel3_5;
branches;
next	8.2;

8.2
date	89.03.06.17.07.23;	author mike;	state Exp;
branches;
next	8.1;

8.1
date	88.10.05.00.28.15;	author mike;	state Rel3_0;
branches;
next	7.2;

7.2
date	88.03.19.02.33.37;	author gwyn;	state Exp;
branches;
next	7.1;

7.1
date	87.11.02.23.27.56;	author mike;	state Rel;
branches;
next	6.3;

6.3
date	87.10.08.12.27.48;	author moss;	state Exp;
branches;
next	6.2;

6.2
date	87.09.03.02.17.37;	author mike;	state Exp;
branches;
next	6.1;

6.1
date	87.07.11.07.52.23;	author mike;	state Rel;
branches;
next	5.1;

5.1
date	87.06.24.21.52.35;	author mike;	state Rel;
branches;
next	4.2;

4.2
date	87.02.12.22.08.00;	author mike;	state Exp;
branches;
next	4.1;

4.1
date	86.12.29.02.49.49;	author mike;	state Rel1;
branches;
next	1.10;

1.10
date	86.11.24.01.39.18;	author phil;	state Exp;
branches;
next	1.9;

1.9
date	86.11.12.14.01.22;	author mike;	state Exp;
branches;
next	1.8;

1.8
date	86.09.23.01.53.04;	author mike;	state Exp;
branches;
next	1.7;

1.7
date	86.08.13.22.17.24;	author mike;	state Exp;
branches;
next	1.6;

1.6
date	86.08.13.05.22.44;	author mike;	state Exp;
branches;
next	1.5;

1.5
date	86.08.13.03.18.14;	author mike;	state Exp;
branches;
next	1.4;

1.4
date	86.08.13.03.18.07;	author mike;	state Exp;
branches;
next	1.3;

1.3
date	86.08.13.03.18.02;	author mike;	state Exp;
branches;
next	1.2;

1.2
date	86.08.13.03.17.56;	author mike;	state Exp;
branches;
next	1.1;

1.1
date	86.08.13.03.17.52;	author mike;	state Exp;
branches;
next	;

11.8.12.1
date	2004.03.03.18.53.59;	author erikg;	state Exp;
branches;
next	11.8.12.2;

11.8.12.2
date	2004.03.15.14.07.32;	author erikg;	state Exp;
branches;
next	11.8.12.3;

11.8.12.3
date	2004.03.16.13.00.08;	author erikg;	state Exp;
branches;
next	;


desc
@@


11.11
log
@moved to src/
@
text
@/*LINTLIBRARY*/
/*
	Author:		Gary S. Moss
			U. S. Army Ballistic Research Laboratory
			Aberdeen Proving Ground
			Maryland 21005-5066
			(301)278-6647 or AV-298-6647
*/
#ifndef lint
static const char RCSid[] = "@@(#)$Header: /n/xoff/cvs/brlcad/libtermio/termio.c,v 11.10 2004/05/10 15:30:47 erikg Exp $ (BRL)";
#endif

#ifdef HAVE_CONFIG_H
# include "config.h"
#endif



#include <stdio.h>

#if IRIX >= 5
#include <sys/file.h>
#else
#include <fcntl.h>
#endif

#if HAVE_SYS_IOCTL_COMPAT_H
#	include <sys/ioctl_compat.h>
#	define TAB3 (TAB1|TAB2)
#	if !defined(OCRNL)
#		define OCRNL   0000010
#	endif
#endif



#include "machine.h"

/*
 *  This file will work IFF one of these three flags is set:
 *	HAVE_TERMIOS_H	use POXIX termios and tcsetattr() call with XOPEN flags
 *	SYSV		use SysV Rel3 termio and TCSETA ioctl
 *	BSD		use Version 7 / BSD sgttyb and TIOCSETP ioctl
 */

#if defined(HAVE_MEMORY_H)
#  include <memory.h>
#endif

#if defined(HAVE_TERMIOS_H)
#  undef SYSV
#  undef BSD
#  include <termios.h>

static struct termios	save_tio[FOPEN_MAX], curr_tio[FOPEN_MAX];

#else	/* !defined(HAVE_TERMIOS_H) */

#  ifdef SYSV
#    undef BSD
#    include <termio.h>
#    include <memory.h>
	static struct termio	save_tio[FOPEN_MAX], curr_tio[FOPEN_MAX];
#  endif /* SYSV */

#  ifdef BSD
#    undef SYSV
#    include <sys/ioctl.h>
#      ifndef	XTABS
#	define	XTABS	(TAB1 | TAB2)
#      endif /* XTABS */

	static struct sgttyb	save_tio[FOPEN_MAX], curr_tio[FOPEN_MAX];
#  endif /* BSD */

#endif /* HAVE_TERMIOS_H */

#include "libtermio.h"

static int		fileStatus[FOPEN_MAX];
void			prnt_Tio();
static void		copy_Tio();

/*	c l r _ C b r e a k ( )
	Clear CBREAK mode, for file descriptor 'fd'.
 */
void
clr_Cbreak( fd )
int	fd;
	{
#ifdef BSD
	curr_tio[fd].sg_flags &= ~CBREAK;	/* CBREAK mode OFF.	*/
	(void) ioctl( fd, TIOCSETP, &curr_tio[fd] );
#endif
#ifdef SYSV
	curr_tio[fd].c_lflag |= ICANON;		/* Canonical input ON.	*/
#ifndef CRAY2
	curr_tio[fd].c_cc[VEOF] = 4;		/* defaults!		*/
	curr_tio[fd].c_cc[VEOL] = 0;		/*   best we can do.... */
#endif
	(void) ioctl( fd, TCSETA, &curr_tio[fd] );
#endif
#ifdef HAVE_TERMIOS_H
	curr_tio[fd].c_lflag |= ICANON;		/* Canonical input ON.	*/
	curr_tio[fd].c_cc[VEOF] = 4;		/* defaults!		*/
	curr_tio[fd].c_cc[VEOL] = 0;		/*   best we can do.... */
	(void)tcsetattr( fd, TCSAFLUSH, &curr_tio[fd] );
#endif
	return;
	}

/*	s e t _ C b r e a k ( )
	Set CBREAK mode, 'fd'.
 */
void
set_Cbreak( fd )
int	fd;
	{
#ifdef BSD
	curr_tio[fd].sg_flags |= CBREAK;	/* CBREAK mode ON.	*/
	(void) ioctl( fd, TIOCSETP, &curr_tio[fd] );
#endif
#ifdef SYSV
	curr_tio[fd].c_lflag &= ~ICANON;	/* Canonical input OFF. */
#ifndef CRAY2
	curr_tio[fd].c_cc[VMIN] = 1;
	curr_tio[fd].c_cc[VTIME] = 0;
#endif
	(void) ioctl( fd, TCSETA, &curr_tio[fd] );
#endif
#ifdef HAVE_TERMIOS_H
	curr_tio[fd].c_lflag &= ~ICANON;	/* Canonical input OFF. */
	curr_tio[fd].c_cc[VMIN] = 1;
	curr_tio[fd].c_cc[VTIME] = 0;
	(void)tcsetattr( fd, TCSANOW, &curr_tio[fd] );
#endif
	return;
	}

/*	c l r _ R a w ( )
	Set cooked mode, 'fd'.
 */
void
clr_Raw( fd )
int	fd;
	{
#ifdef BSD
	curr_tio[fd].sg_flags &= ~RAW;		/* Raw mode OFF.	*/
	(void) ioctl( fd, TIOCSETP, &curr_tio[fd] );
#endif
#ifdef SYSV
	curr_tio[fd].c_lflag |= ICANON;		/* Canonical input ON.	*/
#ifndef CRAY2
	curr_tio[fd].c_lflag |= ISIG;		/* Signals ON.		*/
	curr_tio[fd].c_cc[VEOF] = 4;		/* defaults!		*/
	curr_tio[fd].c_cc[VEOL] = 0;		/*   best we can do.... */
#endif
	(void) ioctl( fd, TCSETA, &curr_tio[fd] );
#endif
#ifdef HAVE_TERMIOS_H
	curr_tio[fd].c_lflag |= ICANON;		/* Canonical input ON.	*/
	curr_tio[fd].c_lflag |= ISIG;		/* Signals ON.		*/
	curr_tio[fd].c_cc[VEOF] = 4;		/* defaults!		*/
	curr_tio[fd].c_cc[VEOL] = 0;		/*   best we can do.... */
	(void)tcsetattr( fd, TCSAFLUSH, &curr_tio[fd] );
#endif
	return;
	}

/*	s e t _ R a w ( )
	Set raw mode, 'fd'.
 */
void
set_Raw( fd )
int	fd;
	{
#ifdef BSD
	curr_tio[fd].sg_flags |= RAW;		/* Raw mode ON.		*/
	(void) ioctl( fd, TIOCSETP, &curr_tio[fd] );
#endif
#ifdef SYSV
	curr_tio[fd].c_lflag &= ~ICANON;	/* Canonical input OFF. */
#ifndef CRAY2
	curr_tio[fd].c_lflag &= ~ISIG;		/* Signals OFF.		*/
	curr_tio[fd].c_cc[VMIN] = 1;
	curr_tio[fd].c_cc[VTIME] = 0;
#endif
	(void) ioctl( fd, TCSETA, &curr_tio[fd] );
#endif
#ifdef HAVE_TERMIOS_H
	curr_tio[fd].c_lflag &= ~ICANON;	/* Canonical input OFF. */
	curr_tio[fd].c_lflag &= ~ISIG;		/* Signals OFF.		*/
	curr_tio[fd].c_cc[VMIN] = 1;
	curr_tio[fd].c_cc[VTIME] = 0;
	(void)tcsetattr( fd, TCSANOW, &curr_tio[fd] );
#endif
	return;
	}

/*	s e t _ E c h o ( )
	Set echo mode, 'fd'.
 */
void
set_Echo( fd )
int	fd;
	{
#ifdef BSD
	curr_tio[fd].sg_flags |= ECHO;		/* Echo mode ON.	*/
	(void) ioctl( fd, TIOCSETP, &curr_tio[fd] );
#endif
#ifdef SYSV
	curr_tio[fd].c_lflag |= ECHO;		/* Echo mode ON.	*/
	(void) ioctl( fd, TCSETA, &curr_tio[fd] );
#endif
#ifdef HAVE_TERMIOS_H
	curr_tio[fd].c_lflag |= ECHO;		/* Echo mode ON.	*/
	(void)tcsetattr( fd, TCSANOW, &curr_tio[fd] );
#endif
	return;
	}

/*	c l r _ E c h o ( )
	Clear echo mode, 'fd'.
 */
void
clr_Echo( fd )
int	fd;
	{
#ifdef BSD
	curr_tio[fd].sg_flags &= ~ECHO;		/* Echo mode OFF.	*/
	(void) ioctl( fd, TIOCSETP, &curr_tio[fd] );
#endif
#ifdef SYSV
	curr_tio[fd].c_lflag &= ~ECHO;		/* Echo mode OFF.	*/
	(void) ioctl( fd, TCSETA, &curr_tio[fd] );
#endif
#ifdef HAVE_TERMIOS_H
	curr_tio[fd].c_lflag &= ~ECHO;		/* Echo mode OFF.	*/
	(void)tcsetattr( fd, TCSANOW, &curr_tio[fd] );
#endif
	return;
	}

/*	s e t _ T a b s ( )
	Turn on tab expansion, 'fd'.
 */
void
set_Tabs( fd )
int	fd;
	{
#ifdef BSD
	curr_tio[fd].sg_flags |= XTABS;		/* Tab expansion ON.	*/
	(void) ioctl( fd, TIOCSETP, &curr_tio[fd] );
#endif
#ifdef SYSV
#ifndef CRAY2
	curr_tio[fd].c_oflag |= TAB3;		/* Tab expansion ON.	*/
#endif
	(void) ioctl( fd, TCSETA, &curr_tio[fd] );
#endif
#ifdef HAVE_TERMIOS_H
	curr_tio[fd].c_oflag |= TAB3;		/* Tab expansion ON.	*/
	(void)tcsetattr( fd, TCSANOW, &curr_tio[fd] );
#endif
	return;
	}

/*	c l r _ T a b s ( )
	Turn off tab expansion, 'fd'.
 */
void
clr_Tabs( fd )
int	fd;
	{
#ifdef BSD
	curr_tio[fd].sg_flags &= ~XTABS;	/* Tab expans. OFF.	*/
	(void) ioctl( fd, TIOCSETP, &curr_tio[fd] );
#endif
#ifdef SYSV
#ifndef CRAY2
	curr_tio[fd].c_oflag &= ~TAB3;		/* Tab expans. OFF.	*/
#endif
	(void) ioctl( fd, TCSETA, &curr_tio[fd] );
#endif
#ifdef HAVE_TERMIOS_H
	curr_tio[fd].c_oflag &= ~TAB3;		/* Tab expans. OFF.	*/
	(void)tcsetattr( fd, TCSANOW, &curr_tio[fd] );
#endif
	return;
	}

/*	s e t _ H U P C L ( )
	Turn on "Hang up on last close", 'fd'.
 */
void
set_HUPCL( fd )
int	fd;
	{
#ifndef CRAY2
#ifdef BSD
	(void) ioctl( fd, TIOCHPCL, NULL );
#endif
#ifdef SYSV
	curr_tio[fd].c_cflag |= HUPCL;
	(void) ioctl( fd, TCSETA, &curr_tio[fd] );
#endif
#endif
#ifdef HAVE_TERMIOS_H
	curr_tio[fd].c_cflag |= HUPCL;
	(void)tcsetattr( fd, TCSANOW, &curr_tio[fd] );
#endif
	return;
	}

/*	c l r _ C R N L ( )
	Turn off CR/LF mapping, fd.
 */
void
clr_CRNL( fd )
	{
#ifdef BSD
	curr_tio[fd].sg_flags &= ~CRMOD;
	(void) ioctl( fd, TIOCSETP, &curr_tio[fd] );
#endif
#ifdef SYSV
#ifndef CRAY2
	curr_tio[fd].c_oflag &= ~(ONLCR|OCRNL);
	curr_tio[fd].c_iflag &= ~(ICRNL|INLCR);
#endif
	(void) ioctl( fd, TCSETA, &curr_tio[fd] );
#endif
#ifdef HAVE_TERMIOS_H
	curr_tio[fd].c_oflag &= ~(ONLCR|OCRNL);
	curr_tio[fd].c_iflag &= ~(ICRNL|INLCR);
	(void)tcsetattr( fd, TCSAFLUSH, &curr_tio[fd] );
#endif
	}

/*	g e t _ O _ S p e e d ( )
	Get the terminals output speed, 'fd'.
 */
unsigned short
get_O_Speed( fd )
	{
#ifdef BSD
	return	(unsigned short) save_tio[fd].sg_ospeed;
#endif
#ifdef SYSV
#ifndef CRAY2
	return	save_tio[fd].c_cflag & CBAUD;
#endif
#endif
#ifdef HAVE_TERMIOS_H
	return	cfgetospeed( &save_tio[fd] );
#endif
	}

/*	s a v e _ T t y ( )
	Get and save terminal parameters, 'fd'.
 */
void
save_Tty( fd )
int	fd;
	{
#if BSD
	(void) ioctl( fd, TIOCGETP, &save_tio[fd] );
#endif
#ifdef SYSV
	(void) ioctl( fd, TCGETA, &save_tio[fd] );
#endif
#ifdef HAVE_TERMIOS_H
	(void)tcgetattr( fd, &save_tio[fd] );
#endif
	copy_Tio( &curr_tio[fd], &save_tio[fd] );
	return;
	}

/*	r e s e t _ T t y ( )
	Set the terminal back to the mode that the user had last time
	save_Tty() was called for 'fd'.
 */
void
reset_Tty( fd )
int	fd;
	{
#if BSD
	(void) ioctl( fd, TIOCSETP, &save_tio[fd] ); /* Write setting.		*/
#endif
#if SYSV
	(void) ioctl( fd, TCSETA, &save_tio[fd] ); /* Write setting.		*/
#endif
#if HAVE_TERMIOS_H
	(void)tcsetattr( fd, TCSAFLUSH, &save_tio[fd] );
#endif
	return;
	}

/*	s a v e _ F i l _ S t a t ( )
	Save file status flags for 'fd'.
 */
int
save_Fil_Stat( fd )
int	fd;
	{
	return	fileStatus[fd] = fcntl( fd, F_GETFL, 0 );
	}

/*	r e s e t _ F i l _ S t a t ( )
	Restore file status flags for file desc. 'fd' to what they were the
	last time saveFilStat(fd) was called.
 */
int
reset_Fil_Stat( fd )
int	fd;
	{
	return	fcntl( fd, F_SETFL, fileStatus[fd] );
	}

/*	s e t _ O _ N D E L A Y ( )
	Set non-blocking read on 'fd'.
 */
int
set_O_NDELAY( fd )
int	fd;
	{
#if defined(SYSV) || defined(BSD)
	return	fcntl( fd, F_SETFL, O_NDELAY );
#else
#if HAVE_TERMIOS_H
	return	fcntl( fd, F_SETFL, FNDELAY );
#endif
#endif
	}

/*	c o p y _ T i o ( )						*/
static void
copy_Tio( to, from )
#ifdef BSD
struct sgttyb	*to, *from;
#endif
#ifdef SYSV
struct termio	*to, *from;
#endif
#ifdef HAVE_TERMIOS_H
struct termios	*to;
struct termios	*from;
#endif
	{
#ifdef BSD
	(void)bcopy( (char *)from, (char*)to, sizeof(struct sgttyb) );
#endif
#ifdef SYSV
	(void) memcpy( (char *) to, (char *) from, sizeof(struct termio) );
#endif
#ifdef HAVE_TERMIOS_H
	(void) memcpy( (char *) to, (char *) from, sizeof(struct termios) );
#endif
	return;
	}

/*	p r n t _ T i o ( )						*/
void
prnt_Tio( msg, tio_ptr )
char		*msg;
#ifdef BSD
struct sgttyb	*tio_ptr;
#endif
#ifdef SYSV
struct termio	*tio_ptr;
#endif
#ifdef HAVE_TERMIOS_H
struct termios	*tio_ptr;
#endif
	{	register int	i;
	(void) fprintf( stderr, "%s :\n\r", msg );
#ifdef BSD
	(void) fprintf( stderr, "\tsg_ispeed=%d\n\r", (int) tio_ptr->sg_ispeed );
	(void) fprintf( stderr, "\tsg_ospeed=%d\n\r", (int) tio_ptr->sg_ospeed );
	(void) fprintf( stderr, "\tsg_erase='%c'\n\r", tio_ptr->sg_erase );
	(void) fprintf( stderr, "\tsg_kill='%c'\n\r", tio_ptr->sg_kill );
	(void) fprintf( stderr, "\tsg_flags=0x%x\n\r", tio_ptr->sg_flags );
#endif
#ifdef SYSV

	(void) fprintf( stderr, "\tc_iflag=0x%x\n\r", tio_ptr->c_iflag );
	(void) fprintf( stderr, "\tc_oflag=0x%x\n\r", tio_ptr->c_oflag );
	(void) fprintf( stderr, "\tc_cflag=0x%x\n\r", tio_ptr->c_cflag );
	(void) fprintf( stderr, "\tc_lflag=0x%x\n\r", tio_ptr->c_lflag );
	(void) fprintf( stderr, "\tc_line=%c\n\r", tio_ptr->c_line );
	for( i = 0; i < NCC; ++i )
		{
		(void) fprintf( stderr,
				"\tc_cc[%d]=0%o\n\r",
				i,
				tio_ptr->c_cc[i]
				);
		}
#endif
#ifdef HAVE_TERMIOS_H

	(void) fprintf( stderr, "\tc_iflag=0x%x\n\r", (unsigned int)tio_ptr->c_iflag );
	(void) fprintf( stderr, "\tc_oflag=0x%x\n\r", (unsigned int)tio_ptr->c_oflag );
	(void) fprintf( stderr, "\tc_cflag=0x%x\n\r", (unsigned int)tio_ptr->c_cflag );
	(void) fprintf( stderr, "\tc_lflag=0x%x\n\r", (unsigned int)tio_ptr->c_lflag );
	for( i = 0; i < NCCS; ++i )
		{
		(void) fprintf( stderr,
				"\tc_cc[%d]=0%o\n\r",
				i,
				tio_ptr->c_cc[i]
				);
		}
#endif
	return;
	}
@


11.10
log
@change conf.h to a wrapped config.h
@
text
@d10 1
a10 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/libtermio/termio.c,v 11.9 2004/03/18 18:25:15 erikg Exp $ (BRL)";
@


11.9
log
@merge of AUTOCONF branch in to HEAD
@
text
@d10 1
a10 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
d13 5
a17 1
#include "conf.h"
@


11.8
log
@Mac OS X warning and error fixes for non-production build
@
text
@d10 1
a10 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libtermio/termio.c,v 11.7 2000/09/06 20:36:56 mike Exp $ (BRL)";
d23 1
a23 1
#if HAVE_IOCTL_COMPAT_H
@


11.8.12.1
log
@use HAVE_SYS_IOCTL_COMPAT_H instead of HAVE_IOCTL_COMPAT_H to avoid configure.in ugliness
@
text
@d10 1
a10 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libtermio/termio.c,v 11.8 2001/10/17 07:40:04 morrison Exp $ (BRL)";
d23 1
a23 1
#if HAVE_SYS_IOCTL_COMPAT_H
@


11.8.12.2
log
@merge from head
@
text
@d10 1
a10 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libtermio/termio.c,v 11.8.12.1 2004/03/03 18:53:59 erikg Exp $ (BRL)";
d23 1
a23 1
#if HAVE_IOCTL_COMPAT_H
@


11.8.12.3
log
@fbsd/irix fixes
@
text
@d10 1
a10 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
d23 1
a23 1
#if HAVE_SYS_IOCTL_COMPAT_H
@


11.7
log
@
Picked better name for header file.
@
text
@d10 1
a10 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libtermio/termio.c,v 11.6 2000/09/06 20:34:44 mike Exp $ (BRL)";
d497 4
a500 4
	(void) fprintf( stderr, "\tc_iflag=0x%x\n\r", tio_ptr->c_iflag );
	(void) fprintf( stderr, "\tc_oflag=0x%x\n\r", tio_ptr->c_oflag );
	(void) fprintf( stderr, "\tc_cflag=0x%x\n\r", tio_ptr->c_cflag );
	(void) fprintf( stderr, "\tc_lflag=0x%x\n\r", tio_ptr->c_lflag );
@


11.6
log
@
Moved externs into an include file in h/
@
text
@d10 1
a10 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libtermio/termio.c,v 11.5 2000/08/25 21:19:46 mike Exp $ (BRL)";
d74 1
a74 1
#include "termio.h"
@


11.5
log
@
lint
@
text
@d10 1
a10 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libtermio/termio.c,v 11.4 1998/10/30 14:33:43 jra Exp $ (BRL)";
d74 2
a76 8
int			reset_Fil_Stat();
void			save_Tty(), reset_Tty();
void			set_Cbreak(), clr_Cbreak();
void			set_Raw(), clr_Raw();
void			set_Echo(), clr_Echo();
void			set_Tabs(), clr_Tabs();
void			set_HUPCL();
void			clr_CRNL();
@


11.4
log
@Previous fix was bad :-(
@
text
@d10 1
a10 1
static char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libtermio/termio.c,v 11.3 1998/10/27 20:43:27 jra Exp $ (BRL)";
d403 1
d414 1
d424 1
@


11.3
log
@set_O_NDELAY had a possibility of two returns.
@
text
@d10 1
a10 1
static char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libtermio/termio.c,v 11.2 1998/06/27 05:00:52 mike Exp $ (BRL)";
d427 2
a428 1
#elseif HAVE_TERMIOS_H
d430 1
@


11.2
log
@HAVE_IOCTL_COMPAT_H is what should have been used here.  Now it is.
@
text
@d10 1
a10 1
static char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libtermio/termio.c,v 11.1 1995/01/04 10:04:07 mike Rel4_4 $ (BRL)";
d427 1
a427 2
#endif
#if HAVE_TERMIOS_H
@


11.1
log
@Release_4.4
@
text
@d10 1
a10 1
static char RCSid[] = "@@(#)$Header: /m/cad/libtermio/RCS/termio.c,v 10.9 95/01/03 20:51:13 stay Exp $ (BRL)";
d23 1
a23 1
#if defined(__NetBSD__)
d26 3
a30 5
#if defined(__bsdi__)
#	include <sys/ioctl_compat.h>
#	define TAB3 (TAB1|TAB2)
#	define OCRNL   0000010
#endif
@


10.9
log
@fixed problem with IRIX 5.3 with POSIX_SOURCE not defining FNDELAY
@
text
@d10 1
a10 1
static char RCSid[] = "@@(#)$Header: /m/cad/libtermio/RCS/termio.c,v 10.8 1994/12/19 18:29:48 mike Exp stay $ (BRL)";
@


10.8
log
@Changed to HAVE_TERMIOS_H, which is more descriptive
@
text
@d10 1
a10 1
static char RCSid[] = "@@(#)$Header: /m/cad/libtermio/RCS/termio.c,v 10.7 94/10/22 07:38:37 butler Exp Locker: mike $ (BRL)";
d16 4
d21 1
@


10.7
log
@misc bsdi patches
@
text
@d10 1
a10 1
static char RCSid[] = "@@(#)$Header: /m/cad/libtermio/RCS/termio.c,v 10.6 1994/09/01 05:54:00 gdurf Exp butler $ (BRL)";
d34 1
a34 1
 *	HAVE_XOPEN	use POXIX termios and tcsetattr() call with XOPEN flags
d39 5
a43 1
#if defined(HAVE_XOPEN)
a46 1
#  include <memory.h>
d50 1
a50 1
#else	/* !defined(HAVE_XOPEN) */
d69 1
a69 1
#endif /* HAVE_XOPEN */
d102 1
a102 1
#ifdef HAVE_XOPEN
d130 1
a130 1
#ifdef HAVE_XOPEN
d159 1
a159 1
#ifdef HAVE_XOPEN
d189 1
a189 1
#ifdef HAVE_XOPEN
d214 1
a214 1
#ifdef HAVE_XOPEN
d236 1
a236 1
#ifdef HAVE_XOPEN
d260 1
a260 1
#ifdef HAVE_XOPEN
d284 1
a284 1
#ifdef HAVE_XOPEN
d307 1
a307 1
#ifdef HAVE_XOPEN
d331 1
a331 1
#ifdef HAVE_XOPEN
d352 1
a352 1
#ifdef HAVE_XOPEN
d370 1
a370 1
#ifdef HAVE_XOPEN
d391 1
a391 1
#if HAVE_XOPEN
d425 1
a425 1
#if HAVE_XOPEN
d439 1
a439 1
#ifdef HAVE_XOPEN
d450 1
a450 1
#ifdef HAVE_XOPEN
d466 1
a466 1
#ifdef HAVE_XOPEN
d494 1
a494 1
#ifdef HAVE_XOPEN
@


10.6
log
@Added NetBSD fix
@
text
@d10 1
a10 1
static char RCSid[] = "@@(#)$Header: /m/cad/libtermio/RCS/termio.c,v 10.5 1994/08/23 17:10:25 gdurf Exp gdurf $ (BRL)";
d17 7
a23 1
#ifdef __NetBSD__
d26 1
d28 1
@


10.5
log
@Factored ifdefs
@
text
@d10 1
a10 1
static char RCSid[] = "@@(#)$Header: /m/cad/libtermio/RCS/termio.c,v 10.4 1993/11/04 19:37:47 mike Exp gdurf $ (BRL)";
d17 4
@


10.4
log
@Typos.
@
text
@d10 1
a10 1
static char RCSid[] = "@@(#)$Header: /m/cad/libtermio/RCS/termio.c,v 10.3 93/10/25 20:35:48 mike Exp Locker: mike $ (BRL)";
d13 2
d18 1
a18 3
#ifndef _NFILE
#define _NFILE	64
#endif
d22 1
a22 1
 *	_POSIX_SOURCE	use POXIX termios and tcsetattr() call
d27 1
a27 7
#if defined(_POSIX_SOURCE) || defined(_POSIX_C_SOURCE)
#  if defined(_POSIX_C_SOURCE) && !defined(_POSIX_SOURCE)
#	define _POSIX_SOURCE 1
#  endif
#  if !defined(_XOPEN_SOURCE)
#	define _XOPEN_SOURCE 1	/* to get TAB3, etc */
#  endif
d33 1
a33 1
static struct termios	save_tio[_NFILE], curr_tio[_NFILE];
d35 1
a35 1
#else	/* !defined(_POSIX_SOURCE) */
d41 1
a41 1
	static struct termio	save_tio[_NFILE], curr_tio[_NFILE];
d51 1
a51 1
	static struct sgttyb	save_tio[_NFILE], curr_tio[_NFILE];
d54 1
a54 1
#endif /* _POSIX_SOURCE */
d56 1
a56 1
static int		fileStatus[_NFILE];
d87 1
a87 1
#ifdef _POSIX_SOURCE
d115 1
a115 1
#ifdef _POSIX_SOURCE
d144 1
a144 1
#ifdef _POSIX_SOURCE
d174 1
a174 1
#ifdef _POSIX_SOURCE
d199 1
a199 1
#ifdef _POSIX_SOURCE
d221 1
a221 1
#ifdef _POSIX_SOURCE
d245 1
a245 1
#ifdef _POSIX_SOURCE
d269 1
a269 1
#ifdef _POSIX_SOURCE
d292 1
a292 1
#ifdef _POSIX_SOURCE
d316 1
a316 1
#ifdef _POSIX_SOURCE
d337 1
a337 1
#ifdef _POSIX_SOURCE
d355 1
a355 1
#ifdef _POSIX_SOURCE
d376 1
a376 1
#if _POSIX_SOURCE
d410 1
a410 1
#if _POSIX_SOURCE
d424 1
a424 1
#ifdef _POSIX_SOURCE
d435 1
a435 1
#ifdef _POSIX_SOURCE
d451 1
a451 1
#ifdef _POSIX_SOURCE
d479 1
a479 1
#ifdef _POSIX_SOURCE
@


10.3
log
@Added the dreaded POSIX compatability.
@
text
@d10 1
a10 1
static char RCSid[] = "@@(#)$Header: /m/cad/libtermio/RCS/termio.c,v 10.2 93/07/20 20:49:03 mike Exp Locker: mike $ (BRL)";
d27 4
a30 1
#if defined(_POSIX_SOURCE)
d251 1
a251 1
#ifdef SYSV
d322 1
a322 1
#ifdef SYSV
d382 1
a382 1
#if SYSV
@


10.2
log
@comment in comment.
@
text
@d10 1
a10 1
static char RCSid[] = "@@(#)$Header: /m/cad/libtermio/RCS/termio.c,v 10.1 91/10/12 06:37:43 mike Rel4_0 Locker: mike $ (BRL)";
d20 6
a25 3
#ifdef SYSV
#include <termio.h>
#include <memory.h>
d27 8
a34 2
static struct termio	save_tio[_NFILE], curr_tio[_NFILE];
#endif /* SYSV */
d36 1
a36 8
#ifdef BSD
#include <sys/ioctl.h>
/****#ifdef	TANDEM	/* 7th Edition derivatives */
#define TCSETA	TIOCSETP
#define TCGETA	TIOCGETP
#ifndef	XTABS
#define	XTABS	(TAB1 | TAB2)
#endif /* XTABS */
d38 1
a38 2
static struct sgttyb	save_tio[_NFILE], curr_tio[_NFILE];
#endif /* BSD */
d40 19
d80 3
a82 1
#else
d88 1
d90 6
a95 1
	(void) ioctl( fd, TCSETA, &curr_tio[fd] );
d108 3
a110 1
#else
d116 1
d118 6
a123 1
	(void) ioctl( fd, TCSETA, &curr_tio[fd] );
d136 3
a138 1
#else
d145 1
d147 7
a153 1
	(void) ioctl( fd, TCSETA, &curr_tio[fd] );
d166 3
a168 1
#else
d175 1
d177 7
a183 1
	(void) ioctl( fd, TCSETA, &curr_tio[fd] );
d196 3
a198 1
#else
d200 1
d202 4
a205 1
	(void) ioctl( fd, TCSETA, &curr_tio[fd] );
d218 3
a220 1
#else
d222 1
d224 4
a227 1
	(void) ioctl( fd, TCSETA, &curr_tio[fd] );
d240 3
a242 1
#else
d246 1
d248 4
a251 1
	(void) ioctl( fd, TCSETA, &curr_tio[fd] );
d264 3
a266 1
#else
d270 1
d272 4
a275 1
	(void) ioctl( fd, TCSETA, &curr_tio[fd] );
d289 2
a290 1
#else
d295 4
d310 3
a312 1
#else
d317 1
d319 5
a323 1
	(void) ioctl( fd, TCSETA, &curr_tio[fd] );
d334 2
a335 1
#else
d340 3
d352 4
d357 4
d373 4
d378 4
d410 1
d412 4
d423 2
a424 1
#else
d427 4
d434 2
a435 1
#else
d438 3
d450 2
a451 1
#else
d454 3
d465 2
a466 1
#else
d474 15
@


10.1
log
@Release_4.0
@
text
@d10 1
a10 1
static char RCSid[] = "@@(#)$Header: termio.c,v 9.1 89/05/19 05:48:46 mike Rel3_5 $ (BRL)";
a20 1
/**#ifndef	TANDEM	/* USG derivatives */
@


9.1
log
@Release_3.5
@
text
@d10 1
a10 1
static char RCSid[] = "@@(#)$Header: termio.c,v 8.2 89/03/06 17:07:23 mike Exp $ (BRL)";
@


8.2
log
@ansii
@
text
@d10 1
a10 1
static char RCSid[] = "@@(#)$Header: termio.c,v 8.1 88/10/05 00:28:15 mike Locked $ (BRL)";
@


8.1
log
@Release_3.0
@
text
@d10 1
a10 1
static char RCSid[] = "@@(#)$Header: termio.c,v 7.2 88/03/19 02:33:37 gwyn Exp $ (BRL)";
d26 1
a26 1
#endif SYSV
d35 1
a35 1
#endif XTABS
d38 1
a38 1
#endif BSD
@


7.2
log
@moved _NFILE definition where it can be used in SYSV environment
@
text
@d10 1
a10 1
static char RCSid[] = "@@(#)$Header: termio.c,v 7.1 87/11/02 23:27:56 gwyn Locked $ (BRL)";
@


7.1
log
@Release 2.3
@
text
@d10 1
a10 1
static char RCSid[] = "@@(#)$Header: termio.c,v 6.3 87/10/08 12:27:48 moss Exp $ (BRL)";
d16 4
a35 4

#ifndef _NFILE
#define _NFILE	32
#endif _NFILE
@


6.3
log
@Added functions "set_Cbreak" and "clr_Cbreak".  CBREAK mode has the
advantage over RAW mode of allowing signals and not flushing output
(does not lose buffered output).
@
text
@d10 1
a10 1
static char RCSid[] = "@@(#)$Header$ (BRL)";
@


6.2
log
@Cray-2 fixes from Gary Moss
@
text
@a2 5
	SCCS id:	@@(#) termio.c	1.5
	Last edit: 	6/18/86 at 09:57:54
	Retrieved: 	8/13/86 at 03:18:11
	SCCS archive:	/m/cad/fb_utils/RCS/s.termio.c

d6 7
a12 5
			Maryland 21005
			(301)278-6647 or AV-283-6647
 */
static
char	sccsTag[] = "@@(#) termio.c	1.5	last edit 6/18/86 at 09:57:54";
d41 1
a41 1
int			reset_Fil_Stat(), read_Key_Brd();
d43 1
d52 40
d93 1
a93 1
	Set cooked mode, for file descriptor 'fd'.
d102 1
a102 1
	curr_tio[fd].c_lflag |= ICANON;		/* Raw mode OFF.	*/
d123 1
a123 1
	curr_tio[fd].c_lflag &= ~ICANON;	/* Raw mode ON.		*/
a301 8
	}

/*	r e a d _ K e y _ B r d ( )					*/
read_Key_Brd()
	{
	int	c;

	return	read( 0, (char *) &c, 1 ) == 0 ? 0 : c;
@


6.1
log
@Release 2.0
@
text
@d65 1
d70 1
d86 1
d91 1
d138 1
d141 1
d156 1
d159 1
d171 1
d178 1
d191 1
d195 1
d208 1
d210 1
@


5.1
log
@Release 1.24
@
text
@@


4.2
log
@Release 1.20 -- First Formal Release
@
text
@@


4.1
log
@BRL CAD Distribution Release 1.10
@
text
@@


1.10
log
@set/reset special chars on set_raw(), clr_raw()
@
text
@@


1.9
log
@Added Gary's new functions.
@
text
@d65 3
d84 3
@


1.8
log
@Added hack for 4.3BSD no longer having _NFILE
@
text
@a22 1
#endif
d24 3
d34 1
a34 1
#endif
d38 1
a38 1
#endif
d41 2
a42 3
#else		/* USG derivatives */
static struct termio	save_tio[_NFILE], curr_tio[_NFILE];
#endif
d49 2
d148 31
@


1.7
log
@Clarified conditionals.
@
text
@d34 4
@


1.6
log
@Updated #includes for new conventions
@
text
@d18 5
a22 28
#include <sgtty.h>
#ifndef	TANDEM	/* USG derivatives */
/* Dammit. */
#undef	NL1
#undef	CR1
#undef	CR2
#undef	CR3
#undef	TAB1
#undef	BS1
#undef	FF1
#undef	B50
#undef	B75
#undef	B110
#undef	B134
#undef	B150
#undef	B200
#undef	B300
#undef	B600
#undef	B1200
#undef	B1800
#undef	B2400
#undef	B4800
#undef	B9600
#undef	EXTA
#undef	EXTB
#undef	HUPCL
#undef	ECHO
#include	<termio.h>
d25 3
a27 1
#ifdef	TANDEM	/* 7th Edition derivatives */
d33 1
d54 1
a54 1
#ifdef TANDEM
d70 1
a70 1
#ifdef TANDEM
d86 1
a86 1
#ifdef TANDEM
d102 1
a102 1
#ifdef TANDEM
d118 1
a118 1
#ifdef TANDEM
d134 1
a134 1
#ifdef TANDEM
d149 1
a149 1
#ifdef TANDEM
d219 1
a219 1
#ifdef TANDEM
d225 2
a226 3
#ifdef TANDEM
	/* This could be dangerous if there are null bytes */
	(void) strncpy( (char *) to, (char *) from, sizeof(struct sgttyb) );
a227 1
#include	<memory.h>
d237 1
a237 1
#ifdef TANDEM
d244 1
a244 1
#ifdef TANDEM
@


1.5
log
@BSD RAW mode was backwards.
@
text
@d246 1
d249 1
a249 1
#include <memory.h>
@


1.4
log
@Ready for distribution.
@
text
@d3 3
a5 3
	SCCS id:	@@(#) termio.c	1.4
	Last edit: 	6/16/86 at 16:53:08
	Retrieved: 	8/13/86 at 03:18:05
d15 1
a15 1
char	sccsTag[] = "@@(#) termio.c	1.4	last edit 6/16/86 at 16:53:08";
d75 1
a75 1
	curr_tio[fd].sg_flags |= RAW;		/* Raw mode OFF.	*/
d91 1
a91 1
	curr_tio[fd].sg_flags &= ~RAW;		/* Raw mode ON.		*/
@


1.3
log
@All utilities seem to work with the Ikonas, will test with 
UNIX files next.
@
text
@d3 3
a5 3
	SCCS id:	@@(#) termio.c	1.3
	Last edit: 	3/14/85 at 17:58:14
	Retrieved: 	8/13/86 at 03:18:00
d15 1
a15 1
char	sccsTag[] = "@@(#) termio.c	1.3	last edit 3/14/85 at 17:58:14";
a16 1
#include <sys/ioctl.h>
d18 29
a46 2
#include <termio.h>
#include <memory.h>
d48 8
d57 1
d74 3
d78 1
d90 3
d94 1
d106 3
d110 1
d122 3
d126 1
d138 3
d142 1
d154 3
d158 1
d169 3
d173 1
d228 1
a228 2
/*	r e a d _ K e y _ B r d ( )
 */
d236 1
a236 2
/*	c o p y _ T i o ( )
 */
d239 3
d243 1
d245 4
d250 1
d254 1
a254 2
/*	p r n t _ T i o ( )
 */
d258 3
d262 10
a271 2
	{
	register int	i;
a272 1
	(void) fprintf( stderr, "%s :\n\r", msg );
d286 2
@


1.2
log
@fbclear, fbcmap, fbgrid, fbzoom, fb-rle, rle-fb look good.
@
text
@d3 3
a5 3
	SCCS id:	@@(#) termio.c	1.2
	Last edit: 	3/13/85 at 22:13:48
	Retrieved: 	8/13/86 at 03:17:54
d15 1
a15 1
char	sccsTag[] = "@@(#) termio.c	1.2	last edit 3/13/85 at 22:13:48";
@


1.1
log
@Initial revision
@
text
@d3 3
a5 3
	SCCS id:	@@(#) termio.c	1.1
	Last edit: 	3/13/85 at 19:00:54
	Retrieved: 	8/13/86 at 03:17:50
d15 1
a15 1
char	sccsTag[] = "@@(#) termio.c	1.1	last edit 3/13/85 at 19:00:54";
@
