head	1.3;
access;
symbols
	rel-5-2:1.2
	rel-5-1-patches:1.2.0.2
	rel-5-1:1.2
	rel-5-0:1.1
	rel-5-0beta:1.1;
locks; strict;
comment	@# @;


1.3
date	2000.12.06.21.22.00;	author bparker;	state dead;
branches;
next	1.2;

1.2
date	99.10.19.20.02.56;	author jra;	state Exp;
branches
	1.2.2.1;
next	1.1;

1.1
date	98.06.02.19.52.04;	author jra;	state Exp;
branches;
next	;

1.2.2.1
date	2000.12.06.21.27.04;	author bparker;	state dead;
branches;
next	;


desc
@Original
@


1.3
log
@Upgrading to newer version
@
text
@# This file is a Tcl script to test out Tk's Windows specific
# clipboard code.  It is organized in the standard fashion for Tcl
# tests.
#
# This file contains a collection of tests for one or more of the Tcl
# built-in commands.  Sourcing this file into Tcl runs the tests and
# generates output for errors.  No output means no errors were found.
#
# Copyright (c) 1997 by Sun Microsystems, Inc.
# Copyright (c) 1998-1999 by Scriptics Corporation.
# All rights reserved.
#
# RCS: @@(#) $Id: winClipboard.test,v 1.2 1999/10/19 20:02:56 jra Exp $

if {[lsearch [namespace children] ::tcltest] == -1} {
    source [file join [pwd] [file dirname [info script]] defs.tcl]
}

# Note that these tests may fail if another application is grabbing the
# clipboard (e.g. an X server)

test winClipboard-1.1 {TkSelGetSelection} {pcOnly} {
    clipboard clear
    catch {selection get -selection CLIPBOARD} msg
    set msg
} {CLIPBOARD selection doesn't exist or form "STRING" not defined}
test winClipboard-1.2 {TkSelGetSelection} {pcOnly} {
    clipboard clear
    clipboard append {}
    list [selection get -selection CLIPBOARD] [testclipboard]
} {{} {}}
test winClipboard-1.3 {TkSelGetSelection & TkWinClipboardRender} {pcOnly} {
    clipboard clear
    clipboard append abcd
    list [selection get -selection CLIPBOARD] [testclipboard]
} {abcd abcd}
test winClipboard-1.4 {TkSelGetSelection & TkWinClipboardRender} {pcOnly} {
    clipboard clear
    clipboard append "line 1\nline 2"
    list [selection get -selection CLIPBOARD] [testclipboard]
} [list "line 1\nline 2" "line 1\r\nline 2"]
test winClipboard-1.5 {TkSelGetSelection & TkWinClipboardRender} {pcOnly} {
    clipboard clear
    clipboard append "line 1\u00c7\nline 2"
    list [selection get -selection CLIPBOARD] [testclipboard]
} [list "line 1\u00c7\nline 2" [bytestring "line 1\u00c7\r\nline 2"]]

# cleanup
::tcltest::cleanupTests
return













@


1.2
log
@tk 8.2.1 update
@
text
@d13 1
a13 1
# RCS: @@(#) $Id: winClipboard.test,v 1.5 1999/05/22 01:59:22 stanton Exp $
@


1.2.2.1
log
@Upgrading to newer version
@
text
@d13 1
a13 1
# RCS: @@(#) $Id: winClipboard.test,v 1.2 1999/10/19 20:02:56 jra Exp $
@


1.1
log
@Initial revision
@
text
@d10 2
d13 1
a13 4
# See the file "license.terms" for information on usage and redistribution
# of this file, and for a DISCLAIMER OF ALL WARRANTIES.
#
# SCCS: @@(#) winClipboard.test 1.3 97/07/01 18:10:37
d15 2
a16 2
if {$tcl_platform(platform)!="windows"} {
    return
d19 2
a20 3
if {[string compare test [info procs test]] == 1} {
    source defs
}
d22 1
a22 1
test winClipboard-1.1 {TkSelGetSelection} {
d27 1
a27 1
test winClipboard-1.2 {TkSelGetSelection} {
d32 1
a32 1
test winClipboard-1.3 {TkSelGetSelection & TkWinClipboardRender} {
d37 1
a37 1
test winClipboard-1.4 {TkSelGetSelection & TkWinClipboardRender} {
d42 21
@

