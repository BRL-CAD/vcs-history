head	1.19;
access;
symbols
	rel-5-2:1.15.2.1
	rel-5-1-patches:1.15.0.2
	rel-5-1:1.15
	rel-5-0:1.9
	rel-5-0beta:1.9;
locks; strict;
comment	@# @;


1.19
date	2000.12.06.21.19.26;	author bparker;	state dead;
branches;
next	1.18;

1.18
date	2000.09.12.18.55.24;	author jra;	state Exp;
branches;
next	1.17;

1.17
date	2000.08.01.20.15.38;	author jra;	state Exp;
branches;
next	1.16;

1.16
date	2000.07.21.15.12.16;	author jra;	state Exp;
branches;
next	1.15;

1.15
date	2000.07.12.20.50.34;	author jra;	state Exp;
branches
	1.15.2.1;
next	1.14;

1.14
date	2000.06.07.03.00.02;	author mike;	state Exp;
branches;
next	1.13;

1.13
date	2000.06.07.02.31.35;	author mike;	state Exp;
branches;
next	1.12;

1.12
date	99.10.21.19.47.58;	author jra;	state Exp;
branches;
next	1.11;

1.11
date	99.10.20.13.19.03;	author jra;	state Exp;
branches;
next	1.10;

1.10
date	99.10.19.19.34.31;	author jra;	state Exp;
branches;
next	1.9;

1.9
date	99.05.17.15.51.34;	author jra;	state Exp;
branches;
next	1.8;

1.8
date	99.05.15.23.32.55;	author jra;	state Exp;
branches;
next	1.7;

1.7
date	99.01.15.03.30.57;	author butler;	state Exp;
branches;
next	1.6;

1.6
date	98.11.29.03.06.39;	author jra;	state Exp;
branches;
next	1.5;

1.5
date	98.10.30.04.05.39;	author jra;	state Exp;
branches;
next	1.4;

1.4
date	98.10.29.20.32.08;	author jra;	state Exp;
branches;
next	1.3;

1.3
date	98.07.13.20.51.15;	author jra;	state Exp;
branches;
next	1.2;

1.2
date	98.06.25.12.47.25;	author jra;	state Exp;
branches;
next	1.1;

1.1
date	98.06.02.19.30.46;	author jra;	state Exp;
branches;
next	;

1.15.2.1
date	2000.08.15.18.07.55;	author jra;	state Exp;
branches;
next	1.15.2.2;

1.15.2.2
date	2000.12.06.21.25.12;	author bparker;	state dead;
branches;
next	;


desc
@Original
@


1.19
log
@Upgrading to newer version
@
text
@/*
 *			libtcl/Cakefile
 */
#define SRCDIR	libtcl
#define	SRCSUFF	.c
#define MANSECTION	3

#include "../Cakefile.defs"

/* Since we're building a library, we can't also list a regular
 * program (like tclsh) in the PRODUCTS rule, it will confuse
 * the BUILD_LIBRARY rule in Cakefile.defs.
 * Hence the EXTRA_PRODUCTS dodge
 */

#if !defined(BUILD_LIBRARY)
#define	BUILD_LIBRARY	ar r
#define TCL_OPTS	--srcdir=[[pwd]]/../SRCDIR/"unix" --quiet --cache-file cache.MTYPE \
			 --exec-prefix=BASEDIR --prefix=BASEDIR
#define PRODUCTS	[[echo libtcl''TCLTK_VERS.a]]
#define	AFTER_MAKE	rm -f libtcl.a ; ln -s PRODUCTS libtcl.a
#else
#define TCL_OPTS	--srcdir=[[pwd]]/../SRCDIR/"unix" --quiet --enable-shared \
			 --cache-file cache.MTYPE --exec-prefix=BASEDIR --prefix=BASEDIR
#define PRODUCTS	[[ echo libtcl''TCLTK_VERS.so]]
#define SHARED_PRODUCT	libtcl''TCLTK_VERS.so''[[LIBVERS]]
#define	AFTER_MAKE	mv -f libtcl''TCLTK_VERS.so SHARED_PRODUCT ; sharedliblink.sh SHARED_PRODUCT ; rm -f libtcl.so ; ln -s SHARED_PRODUCT libtcl.so
#endif
#define EXTRA_PRODUCTS	tclsh

/* Rule to see if cake is running with -s flag */
#define MINUS_S	[[echo CAKEFLAGS | tr '\040' '\012' | sed -n -e /-s/p ]]

PRODUCTS: Makefile.MTYPE cache.MTYPE
	make MINUS_S -f Makefile.MTYPE CAKEFLAGS EXTRA_PRODUCTS
	AFTER_MAKE

EXTRA_PRODUCTS: Makefile.MTYPE cache.MTYPE
	make MINUS_S -f Makefile.MTYPE CAKEFLAGS EXTRA_PRODUCTS
	AFTER_MAKE


Makefile.MTYPE cache.MTYPE:		if not exist Makefile.MTYPE or not exist cache.MTYPE
	( \C\F\L\A\G\S=\"GFLAG OPTIMIZER PROFILER\"; \
		\A\F\T\E\R\_\M\A\K\E=\"AFTER_MAKE\"; \
		\R\A\N\L\I\B=\"RANLIB\"; \
		\L\D\F\L\A\G\S=\"LDFLAGS\"; \
		\B\U\I\L\D\_\L\I\B\R\A\R\Y=\"BUILD_LIBRARY\"; \
		 export \C\F\L\A\G\S \R\A\N\L\I\B \L\D\F\L\A\G\S \B\U\I\L\D\_\L\I\B\R\A\R\Y \A\F\T\E\R\_\M\A\K\E; \
		 ../SRCDIR/"unix"/configure TCL_OPTS; \
		../SRCDIR/fix_makefile.sh > Makefile.MTYPE)


clean&:	Makefile.MTYPE
	make -f Makefile.MTYPE distclean

noprod&:
	rm -rf libtcl''TCLTK_VERS.*

#ifdef NFS
clobber&: Makefile.MTYPE
	make -f Makefile.MTYPE distclean
	rm -f *.MTYPE *.o libtcl* config.log config.status tclConfig.sh tclsh Makefile
	rm -rf dltest
#else
clobber&: Makefile.MTYPE
	make -f Makefile.MTYPE distclean
	rm -f *.MTYPE *.o libtcl* config.log config.status tclConfig.sh tclsh Makefile
#endif

install&: Makefile.MTYPE
	make -f Makefile.MTYPE install
	( cd BASEDIR/lib; AFTER_MAKE )

install-nobak&: Makefile.MTYPE
	make -f Makefile.MTYPE install
	( cd BASEDIR/lib; AFTER_MAKE )

tclsh: Makefile.MTYPE
	make -f Makefile.MTYPE tclsh

tcltest: Makefile.MTYPE
	make -f Makefile.MTYPE tcltest

test&: Makefile.MTYPE
	make -f Makefile.MTYPE test

/* dltest:			if not exist dltest
	cp -r ../SRCDIR/"unix"/dltest .
*/
@


1.18
log
@"clean" target now runs "distclean". #if NFS directives corrected.
@
text
@@


1.17
log
@changed clobber to not rm "dltest" directory unless NFS is defined
@
text
@d55 1
a55 1
	make -f Makefile.MTYPE clean
d60 1
d62 1
a62 1
	make -f Makefile.MTYPE clean
a63 1
	#ifdef NFS
d65 5
a69 1
	#endif
@


1.16
log
@Needed to remove the library link before recreating it
@
text
@d54 2
a55 2
clean&:
	make -f Makefile clean
d60 2
a61 1
clobber&: 
d63 1
d65 1
@


1.15
log
@Added link to libtcl.so or libtcl.a
@
text
@d21 1
a21 1
#define	AFTER_MAKE	ln -s PRODUCTS libtcl.a
d27 1
a27 1
#define	AFTER_MAKE	mv -f libtcl''TCLTK_VERS.so SHARED_PRODUCT ; sharedliblink.sh SHARED_PRODUCT ; ln -s SHARED_PRODUCT libtcl.so
@


1.15.2.1
log
@Brings 5-1-patches up to date
@
text
@d21 1
a21 1
#define	AFTER_MAKE	rm -f libtcl.a ; ln -s PRODUCTS libtcl.a
d27 1
a27 1
#define	AFTER_MAKE	mv -f libtcl''TCLTK_VERS.so SHARED_PRODUCT ; sharedliblink.sh SHARED_PRODUCT ; rm -f libtcl.so ; ln -s SHARED_PRODUCT libtcl.so
d54 2
a55 2
clean&:	Makefile.MTYPE
	make -f Makefile.MTYPE clean
d60 1
a60 2
clobber&: Makefile.MTYPE
	make -f Makefile.MTYPE clean
a61 1
	#ifdef NFS
a62 1
	#endif
@


1.15.2.2
log
@Upgrading to newer version
@
text
@@


1.14
log
@
EXTRA_PRODUCTS rule to not confuse library building.
@
text
@d21 1
a21 1
#define	AFTER_MAKE	/**/
d27 1
a27 1
#define	AFTER_MAKE	mv -f libtcl''TCLTK_VERS.so SHARED_PRODUCT ; sharedliblink.sh SHARED_PRODUCT
@


1.13
log
@
Added EXTRA_PRODUCTS rule, to keep library builds from failing.
@
text
@d31 5
a35 2
PRODUCTS: Makefile.MTYPE cache.MTYPE EXTRA_PRODUCTS
	make `echo CAKEFLAGS | tr '\040' '\012' | grep -- -s` -f Makefile.MTYPE CAKEFLAGS
d37 5
@


1.12
log
@Mods to use the new TCLTK_VERS macro
@
text
@d10 6
d20 1
a20 1
#define PRODUCTS	[[echo libtcl''TCLTK_VERS.a]] tclsh
d25 1
a25 1
#define PRODUCTS	[[ echo libtcl''TCLTK_VERS.so]] tclsh
d29 1
d31 1
a31 1
PRODUCTS: Makefile.MTYPE cache.MTYPE
@


1.11
log
@Added AFTER_MAKE to get it to actaully execute
@
text
@d14 1
a14 1
#define PRODUCTS	libtcl.a tclsh
d19 3
a21 3
#define PRODUCTS	libtcl.so tclsh
#define SHARED_PRODUCT	libtcl.so''[[LIBVERS]]
#define	AFTER_MAKE	mv -f libtcl.so SHARED_PRODUCT ; sharedliblink.sh SHARED_PRODUCT
d43 1
a43 1
	rm -rf libtcl.*
@


1.10
log
@TCL 8.2.1 update
@
text
@d26 1
@


1.9
log
@Removed a stray "echo" that was introduced accidentally
@
text
@d11 1
d32 2
a33 1
		 export \C\F\L\A\G\S \R\A\N\L\I\B \L\D\F\L\A\G\S \A\F\T\E\R\_\M\A\K\E; \
d45 2
a46 1
	rm -f *.MTYPE *.o libtcl.* config.log config.status tclConfig.sh tclsh Makefile
@


1.8
log
@included AFTER_MAKE in environment for configure, improved file removal
@
text
@a23 1
	echo CAKEFLAGS
@


1.7
log
@Added support for doing a "clobber" without having to build the Makefile
Added --quiet option to configure
Added check for cake -s flag to support "quiet" builds
@
text
@d24 1
d29 1
d32 1
a32 1
		 export \C\F\L\A\G\S \R\A\N\L\I\B \L\D\F\L\A\G\S; \
d41 1
a41 1
	rm -rf *.so *.a
d44 1
a44 1
	rm -f *.MTYPE *.o *.a config.log config.status tclConfig.sh tclsh Makefile
@


1.6
log
@Added a '-f' option to a 'mv'
@
text
@d11 1
a11 1
#define TCL_OPTS	--srcdir=[[pwd]]/../SRCDIR/"unix" --cache-file cache.MTYPE \
d16 1
a16 1
#define TCL_OPTS	--srcdir=[[pwd]]/../SRCDIR/"unix" --enable-shared \
d24 1
a24 1
	make -f Makefile.MTYPE
d36 1
a36 1
	make -f Makefile.MTYPE clean
d41 2
a42 3
clobber&: Makefile.MTYPE
	make -f Makefile.MTYPE clean
	rm -f *.MTYPE
@


1.5
log
@Mods for shared libraries.
@
text
@d20 1
a20 1
#define	AFTER_MAKE	mv libtcl.so SHARED_PRODUCT ; sharedliblink.sh SHARED_PRODUCT
@


1.4
log
@Install wasn't creating the shared librsry links.
@
text
@a24 1
	AFTER_MAKE
@


1.3
log
@Use BASEDIR rather than BINDIR.
@
text
@d48 1
d52 1
@


1.2
log
@Replaced explicit directory reference with a "BINDIR".
@
text
@d12 1
a12 1
			 --exec-prefix=BINDIR --prefix=BINDIR
d17 1
a17 1
			 --cache-file cache.MTYPE --exec-prefix=BINDIR --prefix=BINDIR
@


1.1
log
@Initial revision
@
text
@d12 1
a12 1
			 --exec-prefix=/usr/brlcad --prefix=/usr/brlcad
d17 1
a17 1
			 --cache-file cache.MTYPE --exec-prefix=/usr/brlcad --prefix=/usr/brlcad
@
