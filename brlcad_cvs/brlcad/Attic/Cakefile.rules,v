head	11.7;
access;
symbols
	ansi-20040405-merged:11.6
	premerge-autoconf:11.6
	ansi-20040316-freeze:11.6
	postmerge-20040315-windows:11.6
	premerge-20040315-windows:11.6
	windows-20040315-freeze:11.6
	autoconf-20031203:11.6
	autoconf-20031202:11.6
	phong-branch:11.6.0.10
	photonmap-branch:11.6.0.8
	rel-6-1-DP:11.6
	windows-branch:11.6.0.6
	rel-6-0-2:11.6
	ansi-branch:11.6.0.4
	rel-6-0-1-branch:11.6.0.2
	hartley-6-0-post:11.6
	hartley-6-0-pre:11.6
	rel-6-0-1:11.6
	rel-6-0:11.6
	rel-5-4:11.4
	offsite-5-3-pre:11.6
	rel-5-3:11.4
	rel-5-2:11.4
	rel-5-1-branch:11.4.0.2
	rel-5-1:11.4
	rel-5-0:11.4
	rel-5-0-beta:11.4
	rel-4-5:11.2
	ctj-4-5-post:11.2
	ctj-4-5-pre:11.2
	rel-4-4:11.1
	rel-4-0:10.1
	rel-3-5:9.1
	rel-3-0:8.1
	AUTOCONF:11.6.0.12;
locks; strict;


11.7
date	2004.03.18.18.15.13;	author erikg;	state dead;
branches;
next	11.6;

11.6
date	2000.08.31.21.24.28;	author mike;	state Exp;
branches
	11.6.12.1;
next	11.5;

11.5
date	2000.08.31.20.52.01;	author mike;	state Exp;
branches;
next	11.4;

11.4
date	99.05.13.19.15.23;	author mike;	state Exp;
branches;
next	11.3;

11.3
date	98.09.21.19.40.16;	author bparker;	state Exp;
branches;
next	11.2;

11.2
date	95.09.09.00.59.26;	author mike;	state Exp;
branches;
next	11.1;

11.1
date	95.01.04.09.43.31;	author mike;	state Rel4_4;
branches
	11.1.1.1;
next	10.3;

10.3
date	94.10.17.22.41.28;	author mike;	state Exp;
branches;
next	10.2;

10.2
date	94.10.14.15.22.08;	author mike;	state Exp;
branches;
next	10.1;

10.1
date	91.10.12.06.34.58;	author mike;	state Rel4_0;
branches;
next	9.5;

9.5
date	91.09.20.23.24.46;	author mike;	state Exp;
branches;
next	9.4;

9.4
date	91.09.17.04.00.50;	author mike;	state Exp;
branches;
next	9.3;

9.3
date	91.06.26.00.36.59;	author mike;	state Exp;
branches;
next	9.2;

9.2
date	91.01.11.01.39.17;	author mike;	state Exp;
branches;
next	9.1;

9.1
date	89.05.19.05.43.23;	author mike;	state Rel3_5;
branches;
next	8.4;

8.4
date	89.05.17.05.54.45;	author mike;	state Exp;
branches;
next	8.3;

8.3
date	89.05.17.05.26.43;	author mike;	state Exp;
branches;
next	8.2;

8.2
date	88.10.06.06.35.33;	author mike;	state Rel3_0;
branches;
next	8.1;

8.1
date	88.10.05.00.23.13;	author mike;	state Rel3_0;
branches;
next	1.5;

1.5
date	88.10.01.06.47.36;	author mike;	state Exp;
branches;
next	1.4;

1.4
date	88.09.24.01.42.06;	author mike;	state Exp;
branches;
next	1.3;

1.3
date	88.06.10.21.31.19;	author mike;	state Exp;
branches;
next	1.2;

1.2
date	88.06.10.21.26.35;	author mike;	state Exp;
branches;
next	1.1;

1.1
date	88.05.16.01.25.54;	author mike;	state Exp;
branches;
next	;

11.1.1.1
date	98.01.29.06.15.07;	author mike;	state Rel4_5;
branches;
next	;

11.6.12.1
date	2004.03.18.18.08.49;	author erikg;	state dead;
branches;
next	;


desc
@Cakefile include with rules common to all Cakefiles
@


11.7
log
@merge of AUTOCONF branch in to HEAD
@
text
@/*
 *			C A K E F I L E . R U L E S
 */

/*
 *  Patterns to handle the installation and uninstallation
 *  of products, manuals, and manual stubs.
 *  This is complicated by the fact that not all directories
 *  will contain all three types of items.
 */
#define	MAN_EXISTS	{{ls ../SRCDIR|grep -s .MANSECTION'$'}}
#define STUB_EXISTS	{{ls ../SRCDIR|grep -s .MANSECTION.stub'$'}}
#define ARG_EXISTS	{{ARGS="%"; test '%' != "$ARGS" -o -f %}}

/* Format sources for printing on stdout.  Use macro to bypass ANSI cpp "bug" */
#define PRINT_STUFF	[[SUB X X.print ../SRCDIR/Cakefile ]] \
	[[SUB X X.print ../SRCDIR/''*.[h''MANSECTION] ]] \
	[[SUB X X.nroff ../SRCDIR/''*.MANSECTION ]] \
	[[SUB X ../SRCDIR/X''SRCSUFF.print FILES]]

print&:	PRINT_SUFF

%.print&:  do-%.print			if ARG_EXISTS
%.print&:				if not ARG_EXISTS

do-%.print&:
	@@pr %

/*
 */
nroff&:  do-nroff			if MAN_EXISTS
nroff&:					if not MAN_EXISTS

do-nroff&:  [[SUB X X.nroff ../SRCDIR/''*.MANSECTION ]]

%.nroff&: ../SRCDIR/%
	@@nroff -Tlp -man ../SRCDIR/%

/*
 *  Typeset all the non-stub manual pages.  Do them all at once,
 *  to prevent lots of extra header sheets on the printer
 *
 *	do-typeset-a	creates the file "troff.out" with the macros in it
 *	%.troff		adds each manual page to "troff.out"
 */
typeset&: do-typeset			if MAN_EXISTS
typeset&:				if not MAN_EXISTS

do-typeset&:  do-typeset-a troff.out
	( TYPESET_MAN2 ) < troff.out
	@@rm -f troff.out

do-typeset-a&:
	TYPESET_MAN0 TYPESET_MAN1 > troff.out

troff.out&:  [[SUB X X.troff ../SRCDIR/''*.MANSECTION ]]

%.troff&:				if ARG_EXISTS
	TYPESET_MAN0 % >> troff.out

#define SRC_LIST	`SUB X ../SRCDIR/X''SRCSUFF FILES`

lint&:
	LINT LFLAGS -I''INCDIR SRC_LIST LLIBES > SRCDIR.lint

tags:	[[echo SRC_LIST]]
	ctags SRC_LIST

TAGS:	[[echo SRC_LIST]]
	etags SRC_LIST

flow&:	[[echo SRC_LIST]]
	cflow -I''INCDIR SRC_LIST > SRCDIR.flow

xref&:	[[echo SRC_LIST]]
	cxref -c -s -w132 -I''INCDIR SRC_LIST > SRCDIR.xref

compare&: [[SUB X X.compare PRODUCTS]]

%.compare&:	%
	cmp BINDIR/% %

#if !defined(DONT_INSTALL)
uninstall&:  uninstall-prod uninstall-man uninstall-stub
#else
uninstall&:
#endif

#ifdef PRODUCTS
uninstall-prod&: [[SUB X X.uninstall-prod PRODUCTS]]
#else
uninstall-prod&:
#endif

%.uninstall-prod&:
	rm -f BINDIR/% BINDIR/%.bak

uninstall-man&:	do-uninstall-man	if MAN_EXISTS
uninstall-man&:				if not MAN_EXISTS

do-uninstall-man&:  [[SUB ../SRCDIR/X X.ui-man ../SRCDIR/''*.MANSECTION]]

%.ui-man&:
	rm -f MANDIR''MANSECTION/% MANDIR''MANSECTION/%.bak

uninstall-stub&:  do-uninstall-stub	if STUB_EXISTS
uninstall-stub&:			if not STUB_EXISTS

do-uninstall-stub&:  [[SUB ../SRCDIR/X.stub X.uninstall-stub ../SRCDIR/''*.stub]]

%.uninstall-stub&:
	rm -f MANDIR''MANSECTION/% MANDIR''MANSECTION/%.bak

#if !defined(EXTRA_INSTALL_TARGETS)
#	define EXTRA_INSTALL_TARGETS	/**/
#endif

#if !defined(DONT_INSTALL)
install&: install-prod install-man install-stub

install-nobak&: install-prod-nobak install-man install-stub
#else
install&:

install-nobak&:
#endif

#if defined(SHARED_PRODUCT)
install-prod&: [[SUB X X.iprod SHARED_PRODUCT]] EXTRA_INSTALL_TARGETS

install-prod-nobak&: [[SUB X X.iprod-nobak SHARED_PRODUCT]] EXTRA_INSTALL_TARGETS

#else
#  if defined(PRODUCTS)
install-prod&: [[SUB X X.iprod PRODUCTS]] EXTRA_INSTALL_TARGETS

install-prod-nobak&: [[SUB X X.iprod-nobak PRODUCTS]] EXTRA_INSTALL_TARGETS
#  else
install-prod&:

install-prod-nobak&:
#  endif
#endif

/* Here is where we depend on having /bin/sh as the shell */
%.iprod&: %
	@@echo ......checking % 1>&2 ; \
	if cmp -s BINDIR/% %; \
	then	exit 0; fi; \
	mv -f BINDIR/% BINDIR/%.bak 2>/dev/null; \
	if INS % BINDIR/%; \
	then	if test x''AFTERINSTALL != x'AFTERINSTALL'; \
		then	AFTERINSTALL BINDIR/%; fi; \
		echo "++++++INSTALLED" BINDIR/% 1>&2; \
		chmod BINPERM BINDIR/%; \
	fi

%.iprod-nobak&: %
	@@echo ......checking % 1>&2 ; \
	if cmp -s BINDIR/% %; \
	then	exit 0; fi; \
	rm -f BINDIR/% 2>/dev/null; \
	if INS % BINDIR/%; \
	then	if test x''AFTERINSTALL != x'AFTERINSTALL'; \
		then	AFTERINSTALL BINDIR/%; fi; \
		echo "++++++INSTALLED" BINDIR/% 1>&2; \
		chmod BINPERM BINDIR/%; \
	fi

install-man&:  do-install-man	if MAN_EXISTS
install-man&:			if not MAN_EXISTS

do-install-man&: [[SUB ../SRCDIR/X X.i-man ../SRCDIR/''*.MANSECTION ]]

%.i-man&:	../SRCDIR/%
	@@if cmp -s MANDIR''MANSECTION/% ../SRCDIR/%; \
	then	exit 0; fi; \
	mv -f MANDIR''MANSECTION/% MANDIR''MANSECTION/%.bak 2>/dev/null; \
	if INS ../SRCDIR/% MANDIR''MANSECTION/%; \
	then	echo "++++++INSTALLED" MANDIR''MANSECTION/% 1>&2; \
		chmod MANPERM MANDIR''MANSECTION/%; \
	fi

install-stub&:  do-install-stub	if STUB_EXISTS
install-stub&:			if not STUB_EXISTS

do-install-stub&: [[SUB ../SRCDIR/X.stub X.install-stub ../SRCDIR/''*.stub]]

%.install-stub&:  ../SRCDIR/%.stub
	@@if cmp -s MANDIR''MANSECTION/% ../SRCDIR/%.stub; \
	then	exit 0; fi; \
	mv -f MANDIR''MANSECTION/% MANDIR''MANSECTION/%.bak 2>/dev/null; \
	if INS ../SRCDIR/%.stub MANDIR''MANSECTION/%; \
	then	echo "++++++INSTALLED" MANDIR''MANSECTION/% 1>&2; \
		chmod MANPERM MANDIR''MANSECTION/%; \
	fi

/*
 *  Force installation of copies of all sources,
 *  whether configured in or not, into the distribution tree.
 */
#ifndef	STATIC_PRODUCTS
#	define STATIC_PRODUCTS	/**/
#endif
#ifdef NFS
#define	INSTALL_PATTERNS	STATIC_PRODUCTS \
	../SRCDIR/Cakefile ../SRCDIR/\\\\*.[hcsfyl] \
	../SRCDIR/\\\\*.sh \
	../SRCDIR/\\\\*.MANSECTION ../SRCDIR/\\\\*.MANSECTION.stub \
	../SRCDIR/\\\\*.doc
#else
#define	INSTALL_PATTERNS	STATIC_PRODUCTS \
	./Cakefile \\\\*.[hcsfyl] \\\\*.sh \
	\\\\*.MANSECTION \\\\*.MANSECTION.stub \\\\*.doc
#endif

/* inst-dist is never run automatically, it has to be run by hand. */
/* inst-dist is run from gen.sh as part of the final packaging of a distribution */
inst-dist&: dist-clobber [[SUB X X.do-inst-dist INSTALL_PATTERNS]]

dist-clobber&:
	-rm -fr DISTRIBUTION/SRCDIR
	mkdir DISTRIBUTION/SRCDIR; chmod 775 DISTRIBUTION/SRCDIR

%.do-inst-dist&:  %.inst-dist	if ARG_EXISTS
%.do-inst-dist&:		if not ARG_EXISTS

%.inst-dist&:
	-INS % DISTRIBUTION/SRCDIR/.

#ifndef EXTRA_CLEAN
#	define	EXTRA_CLEAN	/**/
#endif

/*
 *	clean	remove all .o files and by-products
 *	noprod	remove the final executables
 *	clobber	perform clean & noprod
 */
clobber&:	clean noprod

clean&:
	-rm -f core *.core *~ *.o EXTRA_CLEAN SRCDIR.out SRCDIR.err SRCDIR.xref SRCDIR.flow SRCDIR.lint

#if defined(LIBRARY_TITLE)
/*
 *  The asterisk is to glob all the variations of (shared) library names.
 *  This depends on the fact that for libraries, PRODUCTS is a single name,
 *  not a list of file names, and that there will be no source file called
 *  PRODUCTS.c, e.g., no librt.c file for making librt.so.10.
 *
 *  The "SRCDIR.*" version is to catch the case where we're changing
 *  from shared libraries to non-shared libraries.
 */
noprod&:
	-rm -f PRODUCTS* SRCDIR.*
#else
noprod&:
	-rm -f PRODUCTS
#endif

#ifdef never
/*
 *  Insist that, by default, Cake work on making the products.
 *  THIS SHOULD BE THE LAST THING CAKE SEES!
 *  The double-colon marks this as the main target.
 */
"!MAINCAKE!"&::	PRODUCTS
#endif
@


11.6
log
@
FreeBSD drops core dumps not in 'core', but in 'progname.core',
so remove those too.
@
text
@@


11.6.12.1
log
@merge from head
@
text
@@


11.5
log
@
Improved 'clobber' rule to zap both .a and .so flavors
@
text
@d243 1
a243 1
	-rm -f core *~ *.o EXTRA_CLEAN SRCDIR.out SRCDIR.err SRCDIR.xref SRCDIR.flow SRCDIR.lint
@


11.4
log
@Re-defined the meaning of "inst-dist" target.
Previously, it was auto-run by Cakefile.rules when a "gen.sh install"
was performed on the "master" machine.
Now, the two operations are entirely separate.
"gen.sh inst-dist" must be run whenever the /dist tree needs to be built.
@
text
@d251 3
d256 1
a256 1
	-rm -f PRODUCTS*
@


11.3
log
@*- add a TAGS rule
@
text
@d119 1
a119 1
install&: install-prod install-man install-stub inst-dist
d121 1
a121 1
install-nobak&: install-prod-nobak install-man install-stub inst-dist
d123 1
a123 1
install&:  inst-dist
d125 1
a125 1
install-nobak&: inst-dist
a215 1
#define IS_MASTER	{{test x''MASTERHOST = x`GETHOST`}}
d217 3
a219 6
inst-dist&:	inst-dist-main	if IS_MASTER

/* inst-dist is also called from "install", so say nothing if not master */
inst-dist&:			if not IS_MASTER

inst-dist-main&: dist-clobber [[SUB X X.do-inst-dist INSTALL_PATTERNS]]
@


11.2
log
@Added EXTRA_INSTALL_TARGETS optional symbol.
@
text
@d69 3
@


11.1
log
@Release_4.4
@
text
@d111 4
d126 1
a126 1
install-prod&: [[SUB X X.iprod SHARED_PRODUCT]]
d128 1
a128 1
install-prod-nobak&: [[SUB X X.iprod-nobak SHARED_PRODUCT]]
d132 1
a132 1
install-prod&: [[SUB X X.iprod PRODUCTS]]
d134 1
a134 1
install-prod-nobak&: [[SUB X X.iprod-nobak PRODUCTS]]
@


11.1.1.1
log
@Release_4.5
@
text
@@


10.3
log
@Better support for "cake noprod" in library directories, when shared
libraries are in use.
@
text
@@


10.2
log
@Added numbered and relocatable shared library support to SunOS 5.
@
text
@d242 1
d244 4
a247 3
 * The asterisk is to glob all the variations of library names.
 * Hopefully we don't have any programs called short things like 'a'.
 * Something more general for dealing with libraries might be appropriate.
d251 4
@


10.1
log
@Release_4.0
@
text
@d121 7
a127 1
#if defined(PRODUCTS)
d131 1
a131 1
#else
d135 1
d242 5
d248 1
a248 1
	-rm -f PRODUCTS
@


9.5
log
@If DONT_INSTALL is defined, don't un-install things, either.
@
text
@@


9.4
log
@With the new "improved" ANSI cpp, lines that end in backslash causes
newlines to be embedded in in the cpp output, if there would be no
harm to a C program.  Problem is, Cakefiles are not C programs, and
the grammar is a bit fussier about white space.
In particular, it is important that every rule (target: dependencies)
must exist on a SINGLE LINE when cake gets to see it.
@
text
@d80 1
d82 3
@


9.3
log
@Shortened patterns for installing and uninstalling manual pages.
The strings were getting too long for CAKE's buffers.
@
text
@d15 2
a16 2
/* Format sources for printing on stdout */
print&:	Cakefile.print \
d20 2
@


9.2
log
@added EXTRA_CLEAN
@
text
@d92 1
a92 1
do-uninstall-man&:  [[SUB ../SRCDIR/X X.uninstall-man ../SRCDIR/''*.MANSECTION]]
d94 1
a94 1
%.uninstall-man&:
d153 1
a153 1
do-install-man&: [[SUB ../SRCDIR/X X.install-man ../SRCDIR/''*.MANSECTION ]]
d155 1
a155 1
%.install-man&:	../SRCDIR/%
@


9.1
log
@Release_3.5
@
text
@d215 4
d227 1
a227 1
	-rm -f core *~ *.o SRCDIR.out SRCDIR.err SRCDIR.xref SRCDIR.flow SRCDIR.lint
@


8.4
log
@Shortened the name of the pattern "X.install-prod" to "X.iprod";
the arg list was getting too long for the cakesub program.
@
text
@@


8.3
log
@Fixed install-nobak bug
@
text
@d116 1
a116 1
install-prod&: [[SUB X X.install-prod PRODUCTS]]
d118 1
a118 1
install-prod-nobak&: [[SUB X X.install-prod-nobak PRODUCTS]]
d126 1
a126 1
%.install-prod&: %
d138 1
a138 1
%.install-prod-nobak&: %
@


8.2
log
@Minor nits detected in final testing of 3.0.
real 3.0 version
@
text
@d118 1
a118 1
install-prod-nobak&: [[SUB X X.install-prod PRODUCTS]]
@


8.1
log
@Release_3.0
@
text
@d105 1
a105 2
/* XXX Something needs to be done about checking for the master machine!! */ 

d108 8
a115 1
#if defined(PRODUCTS) && !defined(DONT_INSTALL)
d117 2
d121 2
d131 12
@


1.5
log
@Added DONT_INSTALL flag, and
improved handling of NFS case
@
text
@@


1.4
log
@Got nroff and typeset directives working
@
text
@d109 1
a109 1
#ifdef PRODUCTS
d163 1
d165 6
d173 1
@


1.3
log
@Added echo redirection, automatic invocation of "inst-dist" from
"install" rule.
@
text
@d5 10
d21 4
a24 1
%.print&:
d27 4
a30 2
%.nroff&:
	@@nroff -Tlp -man %
d32 5
d40 3
d44 5
a48 2
typeset&:  troff.out
	echo "( TYPESET_MAN2 ) < troff.out"
d51 3
d56 2
a57 2
%.troff&:
	echo "TYPESET_MAN1 % >> troff.out"
a77 10
/*
 *  Patterns to handle the installation and uninstallation
 *  of products, manuals, and manual stubs.
 *  This is complicated by the fact that not all directories
 *  will contain all three types of items.
 */
#define	MAN_EXISTS	{{ls ../SRCDIR|egrep -s .MANSECTION'$'}}
#define STUB_EXISTS	{{ls ../SRCDIR|egrep -s .MANSECTION.stub'$'}}
#define ARG_EXISTS	{{ARGS="%"; test '%' != "$ARGS" -o -f %}}

d164 1
a164 1
	./Cakefile \\\\*.[hcfs] \\\\*.sh \
d176 2
a177 1
	-rm -fr DISTRIBUTION/SRCDIR/''*
@


1.2
log
@Made inst-dist work well.
@
text
@d88 1
a88 1
install&: install-prod install-man install-stub
d119 1
a119 1
	then	echo "++++++INSTALLED" MANDIR''MANSECTION/%; \
d133 1
a133 1
	then	echo "++++++INSTALLED" MANDIR''MANSECTION/%; \
d151 1
a152 1
	@@echo This is not the master CAD source machine, MASTERHOST is.
@


1.1
log
@Initial revision
@
text
@d57 1
d98 2
a99 1
	@@if cmp -s BINDIR/% %; \
d105 1
a105 1
		echo "++++++INSTALLED" BINDIR/%; \
d141 16
a156 1
inst-dist&:
d158 6
a163 1
	-INS ./Cakefile *.[hcfs] SHFILES *.MANSECTION *.MANSECTION.stub *.doc DISTRIBUTION/SRCDIR/.
@
