head	1.11;
access;
symbols
	rel-5-2:1.3.2.3
	rel-5-1-patches:1.3.0.2
	rel-5-1:1.3;
locks; strict;
comment	@# @;


1.11
date	2000.12.06.21.22.26;	author bparker;	state dead;
branches;
next	1.10;

1.10
date	2000.10.26.20.27.34;	author jra;	state Exp;
branches;
next	1.9;

1.9
date	2000.09.12.18.56.42;	author jra;	state Exp;
branches;
next	1.8;

1.8
date	2000.09.09.01.58.51;	author mike;	state Exp;
branches;
next	1.7;

1.7
date	2000.09.08.14.01.02;	author jra;	state Exp;
branches;
next	1.6;

1.6
date	2000.08.15.18.25.43;	author jra;	state Exp;
branches;
next	1.5;

1.5
date	2000.08.01.19.56.08;	author jra;	state Exp;
branches;
next	1.4;

1.4
date	2000.07.21.15.11.05;	author jra;	state Exp;
branches;
next	1.3;

1.3
date	2000.06.07.04.32.24;	author mike;	state Exp;
branches
	1.3.2.1;
next	1.2;

1.2
date	2000.06.07.03.30.07;	author mike;	state Exp;
branches;
next	1.1;

1.1
date	99.10.22.19.04.13;	author jra;	state Exp;
branches;
next	;

1.3.2.1
date	2000.08.15.18.28.05;	author jra;	state Exp;
branches;
next	1.3.2.2;

1.3.2.2
date	2000.09.08.14.02.52;	author jra;	state Exp;
branches;
next	1.3.2.3;

1.3.2.3
date	2000.09.11.17.01.27;	author jra;	state Exp;
branches;
next	1.3.2.4;

1.3.2.4
date	2000.10.26.20.30.44;	author jra;	state Exp;
branches;
next	1.3.2.5;

1.3.2.5
date	2000.12.06.21.27.24;	author bparker;	state dead;
branches;
next	;


desc
@@


1.11
log
@Upgrading to newer version
@
text
@/*
 *			libitcl/Cakefile
 */
#define SRCDIR	libitcl
#define	SRCSUFF	.c
#define MANSECTION	3

#include "../Cakefile.defs"

#if !defined(BUILD_LIBRARY)
#define	BUILD_LIBRARY	ar r
#define ITCL_OPTS	--srcdir=[[pwd]]/../SRCDIR --quiet \
			 --cache-file cache.MTYPE  \
			 --exec-prefix=BASEDIR --prefix=BASEDIR \
			 --with-tcl=[[pwd]]/LIBTCL_DIR \
			 --with-tk=[[pwd]]/LIBTK_DIR
#define PRODUCTS	libitcl3.0.a& itclsh& libitk3.0.a& itkwish&
#define	AFTER_MAKE	rm -f libitcl.a libitk.a ; ln -s libitcl3.0.a libitcl.a ; ln -s libitk3.0.a libitk.a
#else
/* Shared library case */
#define ITCL_OPTS	--srcdir=[[pwd]]/../SRCDIR/ --enable-shared --quiet \
			 --cache-file cache.MTYPE \
			 --exec-prefix=BASEDIR --prefix=BASEDIR \
			 --with-tcl=[[pwd]]/LIBTCL_DIR \
			 --with-tk=[[pwd]]/LIBTK_DIR
#define PRODUCTS	libitcl3.0.so& itclsh& libitk3.0.so& itkwish&
#define SHARED_PRODUCT	libitcl3.0.so''[[LIBVERS]] libitk3.0.so''[[LIBVERS]]
#define	AFTER_MAKE	/* mv -f libitcl3.0.so libitcl3.0.so''[[LIBVERS]] ; \
			mv -f libitk3.0.so libitk3.0.so''[[LIBVERS]] ; \
			sharedliblink.sh libitcl3.0.so''[[LIBVERS]] ; \
			sharedliblink.sh libitk3.0.so''[[LIBVERS]] ; */ \
			rm -f libitcl.so libitk.so ; \
			ln -s libitk3.0.so libitk.so ; \
			ln -s libitcl3.0.so libitcl.so
#endif

/* Rule to see if cake is running with -s flag */
#define MINUS_S	[[echo CAKEFLAGS | tr '\040' '\012' | sed -n -e /-s/p ]]

PRODUCTS: Makefile.MTYPE cache.MTYPE
	echo cakeflags=CAKEFLAGS
	echo make MINUS_S -f Makefile.MTYPE CAKEFLAGS all
	make MINUS_S -f Makefile.MTYPE CAKEFLAGS all
	echo \"AFTER_MAKE\"
	AFTER_MAKE

Makefile.MTYPE cache.MTYPE:		if not exist Makefile.MTYPE or not exist cache.MTYPE
	( \C\F\L\A\G\S=\"GFLAG OPTIMIZER PROFILER\"; \
		INSTALL=[[pwd]]/../SRCDIR/config/install-sh ; \
		\A\F\T\E\R\_\M\A\K\E=\"AFTER_MAKE\"; \
		\R\A\N\L\I\B=\"RANLIB\"; \
		\L\D\F\L\A\G\S=\"LDFLAGS\"; \
		\S\H\L\I\B\_\L\D=\"BUILD_LIBRARY\"; \
		 export INSTALL \C\F\L\A\G\S \R\A\N\L\I\B \L\D\F\L\A\G\S; \
		 export \S\H\L\I\B\_\L\D \A\F\T\E\R\_\M\A\K\E; \
		 echo ../SRCDIR/configure ITCL_OPTS; \
		 ../SRCDIR/configure ITCL_OPTS; \
		 echo ../SRCDIR/fix_makefile.sh '>' Makefile.MTYPE; \
		 ../SRCDIR/fix_makefile.sh > Makefile.MTYPE)

clean&:	Makefile.MTYPE
	make -f Makefile.MTYPE clean

noprod&:
	rm -rf libtcl.*

#ifdef NFS
clobber&:
	rm -f *.MTYPE *.o config.log config.status Makefile lib* itclsh itkwish *.a *.so
	rm -rf itcl itk iwidgets*	# Only for \N\F\S case
#else
clobber&:
	rm -f *.MTYPE *.o config.log config.status Makefile lib* itclsh itkwish *.a *.so
#endif

install&: Makefile.MTYPE
	make -f Makefile.MTYPE install
	( cd BASEDIR/lib; AFTER_MAKE )

install-nobak&: Makefile.MTYPE
	make -f Makefile.MTYPE install
	( cd BASEDIR/lib; AFTER_MAKE )

itclsh: Makefile.MTYPE
	make -f Makefile.MTYPE itclsh

itkwish: Makefile.MTYPE
	make -f Makefile.MTYPE itkwish

test&: Makefile.MTYPE
	make -f Makefile.MTYPE test

/* dltest:			if not exist dltest
	cp -r ../SRCDIR/"unix"/dltest .
*/
@


1.10
log
@Fixed clobber, now it doesn't need libtcl, libtk, and doesn't rebuild the Makefile before clobbering
@
text
@@


1.9
log
@"clean" target now runs "distclean"
@
text
@d68 2
a69 3
clobber&: Makefile.MTYPE
	make -f Makefile.MTYPE distclean
	rm -f *.MTYPE *.o config.log config.status Makefile lib* itclsh itkwish
d72 2
a73 3
clobber&: Makefile.MTYPE
	make -f Makefile.MTYPE distclean
	rm -f *.MTYPE *.o config.log config.status Makefile lib* itclsh itkwish
@


1.8
log
@
Fixed #if NFS error.
@
text
@d69 1
a69 1
	make -f Makefile.MTYPE clean
d71 1
a71 1
	rm -rf itcl itk iwidgets*	# Only for NFS case
d74 1
a74 1
	make -f Makefile.MTYPE clean
@


1.7
log
@Fixed bug in clobber target
@
text
@d67 6
a75 2
#ifdef NFS
	rm -rf itcl itk iwidgets*
@


1.6
log
@Added version independent link for static library libitk.a
@
text
@d70 1
a70 1
	#ifdef NFS
d72 1
a72 1
	#endif
@


1.5
log
@Corrected clobber to not rm source directories when NFS is 0
@
text
@d18 1
a18 1
#define	AFTER_MAKE	rm -f libitcl.a ; ln -s libitcl3.0.a libitcl.a
@


1.4
log
@Added version independent links for libitcl and libitk
@
text
@d61 2
a62 2
clean&:
	make -f Makefile clean
d67 2
a68 1
clobber&: 
d70 1
d72 1
@


1.3
log
@
Fixes for shared library building on Solaris
@
text
@d18 1
a18 1
#define	AFTER_MAKE	/**/
d31 4
a34 1
			sharedliblink.sh libitk3.0.so''[[LIBVERS]] */
@


1.3.2.1
log
@Brought rel-5-1-patches Cakefile up to date with revision 1.7
@
text
@d18 1
a18 1
#define	AFTER_MAKE	rm -f libitcl.a libitk.a ; ln -s libitcl3.0.a libitcl.a ; ln -s libitk3.0.a libitk.a
d31 1
a31 4
			sharedliblink.sh libitk3.0.so''[[LIBVERS]] ; */ \
			rm -f libitcl.so libitk.so ; \
			ln -s libitk3.0.so libitk.so ; \
			ln -s libitcl3.0.so libitcl.so
d58 2
a59 2
clean&:	Makefile.MTYPE
	make -f Makefile.MTYPE clean
d64 1
a64 2
clobber&: Makefile.MTYPE
	make -f Makefile.MTYPE clean
a65 1
	#ifdef NFS
a66 1
	#endif
@


1.3.2.2
log
@Fixed a bug in the clobber target
@
text
@d70 1
a70 1
#ifdef NFS
d72 1
a72 1
#endif
@


1.3.2.3
log
@Finally got the clobber target correct (to handle NFS and non-NFS)
@
text
@a66 1
#ifdef NFS
d70 1
a71 4
#else
clobber&: Makefile.MTYPE
	make -f Makefile.MTYPE clean
	rm -f *.MTYPE *.o config.log config.status Makefile lib* itclsh itkwish
@


1.3.2.4
log
@Fixed clobber, now it doesn't need libtcl, libtk, and doesn't rebuild the Makefile before clobbering
@
text
@d68 3
a70 2
clobber&:
	rm -f *.MTYPE *.o config.log config.status Makefile lib* itclsh itkwish *.a *.so
d73 3
a75 2
clobber&:
	rm -f *.MTYPE *.o config.log config.status Makefile lib* itclsh itkwish *.a *.so
@


1.3.2.5
log
@Upgrading to newer version
@
text
@@


1.2
log
@
Fixed Bob Strausser's problem with this Cakefile not working
when NFS=0
@
text
@d20 1
d50 3
a52 2
		\B\U\I\L\D\_\L\I\B\R\A\R\Y=\"BUILD_LIBRARY\"; \
		 export INSTALL \C\F\L\A\G\S \R\A\N\L\I\B \L\D\F\L\A\G\S \B\U\I\L\D\_\L\I\B\R\A\R\Y \A\F\T\E\R\_\M\A\K\E; \
@


1.1
log
@Initial version of incrtcl
@
text
@d12 2
a13 1
#define ITCL_OPTS	--srcdir=[[pwd]]/../SRCDIR --cache-file cache.MTYPE --quiet \
d15 2
a16 1
			 --with-tcl=[[pwd]]/../.libtcl.MTYPE --with-tk=[[pwd]]/../.libtk.MTYPE
d21 4
a24 2
			 --cache-file cache.MTYPE --exec-prefix=BASEDIR --prefix=BASEDIR \
			 --with-tcl=[[pwd]]/../.libtcl.MTYPE --with-tk=[[pwd]]/../.libtk.MTYPE
d33 3
d38 3
a40 1
	make `echo CAKEFLAGS | tr '\040' '\012' | grep -- -s` -f Makefile.MTYPE CAKEFLAGS all
d51 1
d53 2
a54 2
		../SRCDIR/fix_makefile.sh > Makefile.MTYPE)

@

