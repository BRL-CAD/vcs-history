head	11.46;
access;
symbols
	ansi-20040405-merged:11.43.2.1
	premerge-autoconf:11.45
	ansi-20040316-freeze:11.43
	postmerge-20040315-windows:11.45
	premerge-20040315-windows:11.45
	windows-20040315-freeze:11.43.4.1
	autoconf-20031203:11.45
	autoconf-20031202:11.45
	phong-branch:11.45.0.4
	photonmap-branch:11.45.0.2
	rel-6-1-DP:11.44
	windows-branch:11.43.0.4
	rel-6-0-2:11.42
	ansi-branch:11.43.0.2
	rel-6-0-1-branch:11.42.0.2
	hartley-6-0-post:11.42
	hartley-6-0-pre:11.42
	rel-6-0-1:11.42
	rel-6-0:11.38
	rel-5-4:11.31.2.1
	offsite-5-3-pre:11.33
	rel-5-3:11.31.2.1
	rel-5-2:11.31
	rel-5-1-branch:11.31.0.2
	rel-5-1:11.31
	rel-5-0:11.25
	rel-5-0-beta:11.23
	rel-4-5:11.8
	ctj-4-5-post:11.7
	ctj-4-5-pre:11.7
	rel-4-4:11.1
	rel-4-0:10.1
	rel-3-5:9.1
	rel-3-0:8.1
	AUTOCONF:11.45.0.6;
locks; strict;
comment	@# @;


11.46
date	2004.03.18.18.15.13;	author erikg;	state dead;
branches;
next	11.45;

11.45
date	2003.03.13.19.25.50;	author jra;	state Exp;
branches
	11.45.6.1;
next	11.44;

11.44
date	2002.10.25.02.29.00;	author morrison;	state Exp;
branches;
next	11.43;

11.43
date	2002.09.17.12.26.09;	author morrison;	state Exp;
branches
	11.43.2.1
	11.43.4.1;
next	11.42;

11.42
date	2002.07.18.13.07.32;	author rbowers;	state Exp;
branches;
next	11.41;

11.41
date	2002.07.11.19.30.19;	author rbowers;	state Exp;
branches;
next	11.40;

11.40
date	2002.07.11.18.38.47;	author rbowers;	state Exp;
branches;
next	11.39;

11.39
date	2002.05.03.18.57.58;	author jra;	state Exp;
branches;
next	11.38;

11.38
date	2001.12.02.00.17.48;	author jra;	state Exp;
branches;
next	11.37;

11.37
date	2001.09.24.21.59.49;	author morrison;	state Exp;
branches;
next	11.36;

11.36
date	2001.09.11.00.23.16;	author morrison;	state Exp;
branches;
next	11.35;

11.35
date	2001.08.10.21.19.29;	author morrison;	state Exp;
branches;
next	11.34;

11.34
date	2001.07.17.23.19.18;	author morrison;	state Exp;
branches;
next	11.33;

11.33
date	2000.12.06.21.54.35;	author bparker;	state Exp;
branches;
next	11.32;

11.32
date	2000.08.23.19.31.01;	author mike;	state Exp;
branches;
next	11.31;

11.31
date	2000.05.19.20.22.20;	author bparker;	state Exp;
branches
	11.31.2.1;
next	11.30;

11.30
date	2000.03.05.17.05.29;	author cjohnson;	state Exp;
branches;
next	11.29;

11.29
date	2000.02.20.06.38.59;	author butler;	state Exp;
branches;
next	11.28;

11.28
date	2000.02.01.15.30.09;	author bparker;	state Exp;
branches;
next	11.27;

11.27
date	99.12.14.17.51.13;	author mike;	state Exp;
branches;
next	11.26;

11.26
date	99.10.25.18.17.03;	author jra;	state Exp;
branches;
next	11.25;

11.25
date	99.07.06.20.51.52;	author mike;	state Exp;
branches;
next	11.24;

11.24
date	99.06.03.00.35.49;	author mike;	state Exp;
branches;
next	11.23;

11.23
date	99.05.13.21.56.35;	author bparker;	state Exp;
branches;
next	11.22;

11.22
date	99.05.13.13.38.40;	author jra;	state Exp;
branches;
next	11.21;

11.21
date	99.05.11.13.42.10;	author pjt;	state Exp;
branches;
next	11.20;

11.20
date	99.04.29.19.34.48;	author bparker;	state Exp;
branches;
next	11.19;

11.19
date	99.01.15.23.11.49;	author butler;	state Exp;
branches;
next	11.18;

11.18
date	99.01.15.03.54.51;	author butler;	state Exp;
branches;
next	11.17;

11.17
date	98.12.31.03.25.15;	author mike;	state Exp;
branches;
next	11.16;

11.16
date	98.12.31.03.15.13;	author mike;	state Exp;
branches;
next	11.15;

11.15
date	98.12.31.02.23.04;	author mike;	state Exp;
branches;
next	11.14;

11.14
date	98.09.21.19.33.39;	author bparker;	state Exp;
branches;
next	11.13;

11.13
date	98.09.08.18.12.31;	author mike;	state Exp;
branches;
next	11.12;

11.12
date	98.08.22.23.27.03;	author mike;	state Exp;
branches;
next	11.11;

11.11
date	98.08.22.23.03.21;	author mike;	state Exp;
branches;
next	11.10;

11.10
date	98.08.21.22.19.11;	author mike;	state Exp;
branches;
next	11.9;

11.9
date	98.06.25.08.19.38;	author mike;	state Exp;
branches;
next	11.8;

11.8
date	98.01.14.17.50.08;	author mike;	state Exp;
branches;
next	11.7;

11.7
date	97.10.08.04.47.47;	author mike;	state Exp;
branches;
next	11.6;

11.6
date	97.05.20.21.05.47;	author mike;	state Exp;
branches;
next	11.5;

11.5
date	97.05.17.23.40.44;	author cjohnson;	state Exp;
branches;
next	11.4;

11.4
date	97.05.06.18.56.30;	author mike;	state Exp;
branches;
next	11.3;

11.3
date	96.07.09.14.50.10;	author pjt;	state Exp;
branches;
next	11.2;

11.2
date	96.06.24.14.55.08;	author jra;	state Exp;
branches;
next	11.1;

11.1
date	95.01.04.09.43.44;	author mike;	state Rel4_4;
branches
	11.1.1.1;
next	10.10;

10.10
date	95.01.03.22.39.21;	author mike;	state Exp;
branches;
next	10.9;

10.9
date	94.12.29.21.17.43;	author mike;	state Exp;
branches;
next	10.8;

10.8
date	94.10.24.20.53.41;	author mike;	state Exp;
branches;
next	10.7;

10.7
date	94.10.17.23.50.38;	author mike;	state Exp;
branches;
next	10.6;

10.6
date	94.10.02.19.12.33;	author mike;	state Exp;
branches;
next	10.5;

10.5
date	94.09.22.11.04.03;	author jra;	state Exp;
branches;
next	10.4;

10.4
date	94.09.22.04.34.20;	author mike;	state Exp;
branches;
next	10.3;

10.3
date	94.09.22.02.00.12;	author mike;	state Exp;
branches;
next	10.2;

10.2
date	94.09.22.01.42.14;	author mike;	state Exp;
branches;
next	10.1;

10.1
date	91.10.12.06.35.04;	author mike;	state Rel4_0;
branches;
next	9.4;

9.4
date	91.08.27.23.58.06;	author mike;	state Exp;
branches;
next	9.3;

9.3
date	91.07.05.19.39.54;	author stay;	state Exp;
branches;
next	9.2;

9.2
date	91.01.03.23.22.11;	author mike;	state Exp;
branches;
next	9.1;

9.1
date	89.05.19.05.43.36;	author mike;	state Rel3_5;
branches;
next	8.10;

8.10
date	89.04.27.02.37.58;	author mike;	state Exp;
branches;
next	8.9;

8.9
date	89.03.01.03.28.28;	author mike;	state Exp;
branches;
next	8.8;

8.8
date	89.02.13.08.41.56;	author mike;	state Exp;
branches;
next	8.7;

8.7
date	89.02.13.05.32.51;	author mike;	state Exp;
branches;
next	8.6;

8.6
date	89.02.11.04.32.12;	author mike;	state Exp;
branches;
next	8.5;

8.5
date	88.10.09.23.59.23;	author mike;	state Rel3_0;
branches;
next	8.4;

8.4
date	88.10.06.06.43.42;	author mike;	state Rel3_0;
branches;
next	8.3;

8.3
date	88.10.06.06.34.59;	author mike;	state Rel3_0;
branches;
next	8.2;

8.2
date	88.10.06.03.31.17;	author mike;	state Rel3_0;
branches;
next	8.1;

8.1
date	88.10.05.00.23.21;	author mike;	state Rel3_0;
branches;
next	1.4;

1.4
date	88.10.01.06.49.56;	author mike;	state Exp;
branches;
next	1.3;

1.3
date	88.09.21.07.35.28;	author mike;	state Exp;
branches;
next	1.2;

1.2
date	88.09.21.01.20.09;	author mike;	state Exp;
branches;
next	1.1;

1.1
date	88.08.31.02.05.25;	author mike;	state Exp;
branches;
next	;

11.1.1.1
date	98.01.29.06.15.07;	author mike;	state Rel4_5;
branches;
next	;

11.31.2.1
date	2000.12.06.21.53.49;	author bparker;	state Exp;
branches;
next	;

11.43.2.1
date	2004.03.17.21.15.46;	author morrison;	state Exp;
branches;
next	;

11.43.4.1
date	2004.03.11.23.40.24;	author morrison;	state Exp;
branches;
next	;

11.45.6.1
date	2004.03.18.18.08.49;	author erikg;	state dead;
branches;
next	;


desc
@Shell script to setup the CAD Package
@


11.46
log
@merge of AUTOCONF branch in to HEAD
@
text
@#!/bin/sh
#			S E T U P . S H
#
# This shell script is to be run as the very first step in installing
# the BRL CAD Package
#
# Secret option:  -f, (fast) to skip re-compiling Cake.
#
#  $Header: /cvs/brlcad/setup.sh,v 11.45 2003/03/13 19:25:50 jra Exp $

# Ensure that all subordinate scripts run with the Bourne shell,
# rather than the user's shell
SHELL=/bin/sh
export SHELL

# Ensure that other users can read and execute what we install!
umask 002

if [ $# -gt 0 -a X$1 = X-s ] ; then
	SILENT=-s
	shift
else
	SILENT=""
fi

# identify ourself
if [ x${SILENT} = x ] ; then
    echo "B R L - C A D   S E T U P"
    echo "========================="
fi

############################################################################
#
# Acquire current machine type, BASEDIR, etc.
#
# newbindir.sh can be run to edit all relevant files (esp. machinetype.sh).
# Or, just set environment variable $BRLCAD_ROOT before running this script.
#
############################################################################
eval `sh sh/machinetype.sh -v`

BRLCAD_ROOT=$BASEDIR
export BRLCAD_ROOT

BRLCAD_BINDIR=$BRLCAD_ROOT/bin
BRLCAD_MANDIR=$BRLCAD_ROOT/man/man1

if [ x${SILENT} = x ] ; then
    echo "BRLCAD_ROOT=${BRLCAD_ROOT}"
    echo "BRLCAD_BINDIR=${BRLCAD_BINDIR}"
    echo "BRLCAD_MANDIR=${BRLCAD_MANDIR}"
fi

############################################################################
#
# Sanity check
# Make sure that BRLCAD_BINDIR is in the current user's search path
# For this purpose, specifically exclude "dot" from the check.
#
############################################################################
if [ X${SILENT} = X ] ; then
	echo
	echo Verifying that ${BRLCAD_BINDIR} is in your search path.
fi
PATH_ELEMENTS=`echo $PATH | sed 's/^://
				s/:://g
				s/:$//
				s/:\\.:/:/g
				s/:/ /g'`

not_found=1		# Assume cmd not found
for PREFIX in ${PATH_ELEMENTS}
do
	if test ${PREFIX} = ${BRLCAD_BINDIR}
	then
		# This was -x, but older BSD systems don't do -x.
		if test -d ${PREFIX}
		then
			# all is well
			not_found=0
			break
		else
			mkdir -p ${BRLCAD_BINDIR}
			if test -d ${PREFIX}
			then
				# all is well
				not_found=0
				break
			fi
		fi
		echo "$0 WARNING:  ${PREFIX} is in the search path, but is not a directory."
	fi

	# Make sure that there are no conflicting files earlier in path.
	# These might be due to a previous verion of BRL-CAD being
	# in the search path, or a user with old copies of these
	# programs in a personal "bin" directory.
	# Either way, we can't depend on it having the proper definitions
	# suitable for the latest release
	for i in machinetype.sh cake brlcad-check.sh
	do
		if test -f ${PREFIX}/$i
		then
			echo " "
			echo "$0 ERROR: detected presence of ${PREFIX}/$i"
			echo " "
			echo " Different version of BRL-CAD detected in ${PREFIX},"
			echo " which is earlier in your search path than ${BRLCAD_BINDIR}."
			echo " "
			echo " Please place ${BRLCAD_BINDIR} earlier in your PATH"
			echo " at least while you are installing BRL-CAD."
			exit 2
		fi
	done
done
if test ${not_found} -ne 0
then
	echo "$0 ERROR:  ${BRLCAD_BINDIR} (BRLCAD_BINDIR) is not in your Shell search path!"
	echo "$0 ERROR:  Software setup can not proceed until this has been fixed."
	echo "$0 ERROR:  Consult installation directions for more information,"
	echo "$0 ERROR:  file: install.doc, section INSTALLATION DIRECTORIES."
	exit 1		# Die
fi

if [ X${SILENT} = X ] ; then
	echo "OK"
fi

############################################################################
#
# Ensure that destination directory is clean.  No stale cakes, etc.
# Then create desired directory structure.
#
############################################################################

# First, make sure our current directory is at the top of the source tree
# Check for presence of a few representative files.
for i in Cakefile.defs sh/machinetype.sh librt/prep.c
do
	if test ! -f $i
	then
		echo "ERROR: Current directory for setup.sh isn't top of source tree."
		echo "Can't locate file $i"
		exit 1
	fi
done

# Next, make sure they don't have the sources also in BRLCAD_ROOT.
set -- `/bin/ls -laid .`
CWD_INUM=$1
set -- `/bin/ls -laid ${BRLCAD_ROOT}`
BRLCAD_ROOT_INUM=$1
if test "${CWD_INUM}" -eq "${BRLCAD_ROOT_INUM}"
then
	echo
	echo "ERROR: BRLCAD_ROOT can't point to the directory containing the source code."
	echo "Please make the executable tree either be a proper subdirectory"
	echo "of the source tree, such as ${BRLCAD_ROOT}/exec,"
	echo "or point it at a completely separate tree."
	exit 1
fi

# Now ask for permission to go blasting.
if [ X${SILENT} = X ] ; then
	echo
	echo "Cleaning out ${BRLCAD_ROOT}."
fi

inst_dirs=" bin etc html include itcl3.2 itk3.2 lib man pro-engineer \
	sample_applications tcl8.4 tclscripts tk8.4 vfont"

for dir in "tcl8.3" "tk8.3"
do
  if test -d ${BRLCAD_ROOT}/$dir
      then
      inst_dirs="${inst_dirs} ${dir}"
      fi
done
      

if [ X${SILENT} = X ] ; then
    echo "Is it OK to delete the following directories:"

    for dir in $inst_dirs ; do
        echo "   ${BRLCAD_ROOT}/$dir"
    done
    echo "(yes|no)[no]"
fi

read ANS
if test "$ANS" != "yes"
then
	echo "You did not answer 'yes', aborting."
	exit 1
fi

for dir in $inst_dirs ; do
    if [ X${SILENT} = X ] ; then
	echo "rm -fr ${BRLCAD_ROOT}/$dir"
    fi
    rm -fr ${BRLCAD_ROOT}/$dir
done

if [ X${SILENT} = X ] ; then
	echo
	echo Creating the necessary directories
fi
for LAST in \
	bin include include/brlcad lib vfont etc \
	man man/man1 man/man3 man/man5 \
	tclscripts tclscripts/mged tclscripts/nirt \
		tclscripts/lib tclscripts/util tclscripts/pl-dm \
		tclscripts/geometree \
		tclscripts/rtwizard \
		tclscripts/rtwizard/lib \
		tclscripts/rtwizard/examples \
		tclscripts/rtwizard/examples/PictureTypeA \
		tclscripts/rtwizard/examples/PictureTypeB \
		tclscripts/rtwizard/examples/PictureTypeC \
		tclscripts/rtwizard/examples/PictureTypeD \
		tclscripts/rtwizard/examples/PictureTypeE \
		tclscripts/rtwizard/examples/PictureTypeF \
	html html/manuals html/manuals/mged \
		html/manuals/mged/animmate html/manuals/libdm \
		html/manuals/shaders html/manuals/Anim_Tutorial \
		html/manuals/librt html/manuals/libbu html/manuals/cadwidgets \
		html/ReleaseNotes html/ReleaseNotes/Rel5.0 \
		html/ReleaseNotes/Rel5.0/Summary \
	pro-engineer pro-engineer/text pro-engineer/sgi_mips4 \
		pro-engineer/text/usascii sample_applications \
		pro-engineer/text/usascii/resource
do
	if test ! -d $BRLCAD_ROOT/$LAST
	then
		mkdir -p $BRLCAD_ROOT/$LAST
	fi
done

# Make our permissions track those in Cakefile.defs
BINPERM=`grep BINPERM Cakefile.defs | head -1| awk '{print $3}' `
MANPERM=`grep MANPERM Cakefile.defs | head -1| awk '{print $3}' `
if [ X${SILENT} = X ] ; then
    echo BINPERM=${BINPERM}, MANPERM=${MANPERM}
fi

############################################################################
#
# Install the entire set of shell scripts from "sh/" into BRLCAD_BINDIR
#
# Includes machinetype.sh and many others,
# but does NOT include gen.sh, setup.sh, or newbindir.sh -- those
# pertain to the installation process only, and don't get installed.
#
# Note that the installation directory is "burned in" as they are copied.
#
############################################################################
if [ X${SILENT} = X ] ; then
	echo -n "Installing shell scripts..."
fi
cd sh
for i in *.sh
do
	if test -f ${BRLCAD_BINDIR}/${i}
	then
		mv -f ${BRLCAD_BINDIR}/${i} ${BRLCAD_BINDIR}/`basename ${i} .sh`.bak
	fi
	sed -e 's,=/usr/brlcad$,='${BRLCAD_ROOT}, < ${i} > ${BRLCAD_BINDIR}/${i}
	chmod ${BINPERM} ${BRLCAD_BINDIR}/${i}
done
cd ..
if [ X${SILENT} = X ] ; then
	echo "done"
fi

############################################################################
#
# Make and install "cake" and "cakeaux"
#
############################################################################
if [ X${SILENT} = X ] ; then
	echo Compiling cake and cakeaux
	echo "   " `machinetype.sh -d`
fi
if test x$1 != x-f
then
	if [ ! -d .cake.$MACHINE ] ; then
		mkdir .cake.$MACHINE
	fi
	cp cake/*.[chyl1] cake/Makefile .cake.$MACHINE

	cd .cake.$MACHINE
	make ${SILENT} clobber
	make ${SILENT} install
	make ${SILENT} clobber

	if test ! -f ${BRLCAD_BINDIR}/cake
	then
	    echo "***ERROR:  cake not installed"
	else
	    echo "cake installed"
	fi
	cd ../

	if [ ! -d .cakeaux.$MACHINE ] ; then
	    mkdir .cakeaux.$MACHINE
	fi
	cp cakeaux/*.[chyl1] cakeaux/Makefile .cakeaux.$MACHINE
	cd .cakeaux.$MACHINE

	make ${SILENT} clobber
	for i in cakesub cakeinclude
	do
		make ${SILENT} $i			# XXX, should do "install"
		if test -f ${BRLCAD_BINDIR}/$i
		then
			mv -f ${BRLCAD_BINDIR}/$i ${BRLCAD_BINDIR}/$i.bak
		fi
		cp $i ${BRLCAD_BINDIR}/.
		chmod ${BINPERM} ${BRLCAD_BINDIR}/$i
	done

	make ${SILENT} clobber
	cp cakesub.1 ${BRLCAD_MANDIR}/.
	chmod ${MANPERM} ${BRLCAD_MANDIR}/cakesub.1
	cd ..
fi
echo "Done making cake and cakeaux"
############################################################################
#
#  Finally, after potentially having edited Cakefile.defs, 
#  ensure that machinetype.sh and Cakefile.defs are set up the same way.
#  This is mostly a double-check on people porting to new machines.
#
############################################################################
if [ X${SILENT} = X ] ; then
	echo "Running brlcad-check.sh"
fi
if sh/brlcad-check.sh ${SILENT}
then
	if [ X${SILENT} = X ] ; then
		echo OK
	fi
else
	echo "brlcad-check.sh failed, aborting setup.sh"
	exit 1
fi

############################################################################
#
#  Make final preparations to ready things for compilation.
#
############################################################################
if [ X${SILENT} = X ] ; then
	echo "make mkdir"
fi
sh gen.sh ${SILENT} mkdir		# Won't have any effect unless NFS is set.

# Congratulations.  Everything is fine.
if [ X${SILENT} = X ] ; then
    echo "BRL-CAD initial setup is complete."
# Just doing "make install" isn't good enough, it doesn't
# compile things in bench, db, or proc-db.  You may want db.
    echo "Next, run:"
    echo " "
    echo "	make; make install"
    echo " "
    echo "(It is vitally important that you run both of these commands"
    echo "as this is a two-step operation.)"
fi
@


11.45
log
@Update to tcl/tk 8.4 (also added code to delete tcl8.3 and tk8.3 install directories)
@
text
@d9 1
a9 1
#  $Header: /c/CVS/brlcad/setup.sh,v 11.44 2002/10/25 02:29:00 morrison Exp $
@


11.45.6.1
log
@merge from head
@
text
@d9 1
a9 1
#  $Header: /cvs/brlcad/setup.sh,v 11.45 2003/03/13 19:25:50 jra Exp $
@


11.44
log
@*** empty log message ***
@
text
@d9 1
a9 1
#  $Header: /c/CVS/brlcad/setup.sh,v 11.43 2002/09/17 12:26:09 morrison Exp $
d170 10
a179 1
	sample_applications tcl8.3 tclscripts tk8.3 vfont"
@


11.43
log
@added geometree to tclscripts install dir list
@
text
@d9 1
a9 1
#  $Header: /c/CVS/brlcad/setup.sh,v 11.42 2002/07/18 13:07:32 rbowers Exp $
d204 2
a205 1
		tclscripts/rtwizard tclscripts/geometree \
@


11.43.2.1
log
@sync branch with HEAD
@
text
@d9 1
a9 1
#  $Header$
d170 1
a170 10
	sample_applications tcl8.4 tclscripts tk8.4 vfont"

for dir in "tcl8.3" "tk8.3"
do
  if test -d ${BRLCAD_ROOT}/$dir
      then
      inst_dirs="${inst_dirs} ${dir}"
      fi
done
      
d204 1
a204 2
		tclscripts/geometree \
		tclscripts/rtwizard \
@


11.43.4.1
log
@sync to HEAD...
@
text
@d9 1
a9 1
#  $Header: /n/cad/c/CVS/brlcad/setup.sh,v 11.45 2003/03/13 19:25:50 jra Exp $
d170 1
a170 10
	sample_applications tcl8.4 tclscripts tk8.4 vfont"

for dir in "tcl8.3" "tk8.3"
do
  if test -d ${BRLCAD_ROOT}/$dir
      then
      inst_dirs="${inst_dirs} ${dir}"
      fi
done
      
d204 1
a204 2
		tclscripts/geometree \
		tclscripts/rtwizard \
@


11.42
log
@-* changed rtwizard install procedure
@
text
@d9 1
a9 1
#  $Header: /c/CVS/brlcad/setup.sh,v 11.41 2002/07/11 19:30:19 rbowers Exp $
d204 1
a204 1
                tclscripts/rtwizard \
@


11.41
log
@-* More rtwizard support. sh/rtwizard now loaded.
@
text
@d9 1
a9 1
#  $Header: /c/CVS/brlcad/setup.sh,v 11.40 2002/07/11 18:38:47 rbowers Exp $
a245 1
# Note also the rtwizard wrapper script is here.
d251 1
a251 1
for i in *.sh rtwizard
@


11.40
log
@-* Mods to install RtWizard
@
text
@d9 1
a9 1
#  $Header: /c/CVS/brlcad/setup.sh,v 11.39 2002/05/03 18:57:58 jra Exp $
d246 1
d252 1
a252 1
for i in *.sh
@


11.39
log
@Added pro-engineer resource directory
@
text
@d9 1
a9 1
#  $Header: /c/CVS/brlcad/setup.sh,v 11.38 2001/12/02 00:17:48 jra Exp $
d204 9
@


11.38
log
@Mods for new Pro/E converter
@
text
@d9 1
a9 1
#  $Header: /c/CVS/brlcad/setup.sh,v 11.37 2001/09/24 21:59:49 morrison Exp $
d211 2
a212 1
		pro-engineer/text/usascii sample_applications
@


11.37
log
@made setup.sh completely quiet with -s flag (aside from cake compile output)
@
text
@d9 1
a9 1
#  $Header: /c/CVS/brlcad/setup.sh,v 11.36 2001/09/11 00:23:16 morrison Exp $
d210 2
a211 3
	pro-engineer pro-engineer/text pro-engineer/sgi_elf2 \
		pro-engineer/sun4_solaris pro-engineer/text/fullhelp \
		pro-engineer/text/menus sample_applications
@


11.36
log
@changed /usr/bin/make to just make (should be $MAKE)
@
text
@d9 1
a9 1
#  $Header: /c/CVS/brlcad/setup.sh,v 11.35 2001/08/10 21:19:29 morrison Exp $
d172 8
a179 5
echo "Is it OK to delete the following directories:"
for dir in $inst_dirs ; do
    echo "   ${BRLCAD_ROOT}/$dir"
done
echo "(yes|no)[no]"
d223 3
a225 2
echo BINPERM=${BINPERM}, MANPERM=${MANPERM}

d341 1
a341 1
	echo "BRL-CAD initial setup is complete."
d344 6
a349 6
echo "Next, run:"
echo " "
echo "	make; make install"
echo " "
echo "(It is vitally important that you run both of these commands"
echo "as this is a two-step operation.)"
@


11.35
log
@now building on sun with sun's horrid compiler
@
text
@d9 1
a9 1
#  $Header: /c/CVS/brlcad/setup.sh,v 11.34 2001/07/17 23:19:18 morrison Exp $
d271 1
a271 1
	/usr/bin/make ${SILENT} clobber
@


11.34
log
@added -p option to two mkdir lines so that $BRLCAD_ROOT/bin will get made even if $BRLCAD_ROOT wasn't created explicitly by the user
@
text
@d9 1
a9 1
#  $Header: /c/CVS/brlcad/setup.sh,v 11.33 2000/12/06 21:54:35 bparker Exp $
d26 6
d45 2
a46 2
BINDIR=$BASEDIR/bin
MANDIR=$BASEDIR/man/man1
d48 4
a51 2
if [ X${SILENT} = X ] ; then
	echo "  BINDIR = ${BINDIR},  BASEDIR = ${BASEDIR}"
d57 1
a57 1
# Make sure that BINDIR is in the current user's search path
d63 1
a63 1
	echo Verifying that ${BINDIR} is in your search path.
d74 1
a74 1
	if test ${PREFIX} = ${BINDIR}
d83 1
a83 1
			mkdir -p ${BINDIR}
d108 1
a108 1
			echo " which is earlier in your search path than ${BINDIR}."
d110 1
a110 1
			echo " Please place ${BINDIR} earlier in your PATH"
d118 1
a118 1
	echo "$0 ERROR:  ${BINDIR} (BINDIR) is not in your Shell search path!"
d148 1
a148 1
# Next, make sure they don't have the sources also in BASEDIR.
d151 3
a153 3
set -- `/bin/ls -laid ${BASEDIR}`
BASEDIR_INUM=$1
if test "${CWD_INUM}" -eq "${BASEDIR_INUM}"
d156 1
a156 1
	echo "ERROR: BASEDIR can't point to the directory containing the source code."
d158 1
a158 1
	echo "of the source tree, such as ${BASEDIR}/exec,"
d166 1
a166 1
	echo "Cleaning out ${BASEDIR}."
d174 1
a174 1
    echo "   ${BASEDIR}/$dir"
d187 1
a187 1
	echo "rm -fr ${BASEDIR}/$dir"
d189 1
a189 1
    rm -fr ${BASEDIR}/$dir
a191 2


d211 1
a211 1
	if test ! -d $BASEDIR/$LAST
d213 1
a213 1
		mkdir -p $BASEDIR/$LAST
d225 1
a225 1
# Install the entire set of shell scripts from "sh/" into BINDIR
d235 1
a235 1
	echo Installing shell scripts
d240 1
a240 1
	if test -f ${BINDIR}/${i}
d242 1
a242 1
		mv -f ${BINDIR}/${i} ${BINDIR}/`basename ${i} .sh`.bak
d244 2
a245 2
	sed -e 's,=/usr/brlcad$,='${BASEDIR}, < ${i} > ${BINDIR}/${i}
	chmod ${BINPERM} ${BINDIR}/${i}
d248 3
d271 3
a273 2
	make ${SILENT} clobber
	if test ! -f ${BINDIR}/cake
d275 3
a277 1
		echo "***ERROR:  cake not installed"
d282 1
a282 1
		mkdir .cakeaux.$MACHINE
d286 1
d291 1
a291 1
		if test -f ${BINDIR}/$i
d293 1
a293 1
			mv -f ${BINDIR}/$i ${BINDIR}/$i.bak
d295 2
a296 2
		cp $i ${BINDIR}/.
		chmod ${BINPERM} ${BINDIR}/$i
d298 1
d300 2
a301 2
	cp cakesub.1 ${MANDIR}/.
	chmod ${MANPERM} ${MANDIR}/cakesub.1
d304 1
a304 1

@


11.33
log
@Mods to support tcl/tk/itcl upgrade.
@
text
@d9 1
a9 1
#  $Header: /c/CVS/brlcad/setup.sh,v 11.32 2000/08/23 19:31:01 mike Exp $
d75 1
a75 1
			mkdir ${BINDIR}
d207 1
a207 1
		mkdir $BASEDIR/$LAST
@


11.32
log
@
Improved error message when PATH finds other version of BRL-CAD first.
@
text
@d9 1
a9 1
#  $Header: /c/CVS/brlcad/setup.sh,v 11.31 2000/05/19 20:22:20 bparker Exp $
d161 2
a162 2
inst_dirs=" bin etc html include itcl3.0 itk3.0 lib man pro-engineer \
	sample_applications tcl8.2 tclscripts tk8.2 vfont"
@


11.31
log
@*- add html directories for libbu, librt and cadwidgets
@
text
@d9 1
a9 1
#  $Header: /c/CVS/brlcad/setup.sh,v 11.30 2000/03/05 17:05:29 cjohnson Exp $
d87 20
a106 8
	if test -f ${PREFIX}/machinetype.sh -o -f ${PREFIX}/cake
	then
		echo " "
		echo "$0 ERROR: Different version of BRL-CAD detected in ${PREFIX},"
		echo " which is earlier in your search path than ${BINDIR}."
		echo " Please place ${BINDIR} earlier in your PATH."
		exit 2
	fi
d135 1
@


11.31.2.1
log
@Mods to support tcl/tk/itcl upgrade.
@
text
@d9 1
a9 1
#  $Header: /c/CVS/brlcad/setup.sh,v 11.31 2000/05/19 20:22:20 bparker Exp $
d148 2
a149 2
inst_dirs=" bin etc html include itcl3.2 itk3.2 lib man pro-engineer \
	sample_applications tcl8.3 tclscripts tk8.3 vfont"
@


11.30
log
@Setup.sh now makes a .cake.MTYPE directory that is not being updated or
cleaned up correctly.
@
text
@d9 1
a9 1
#  $Header: /c/CVS/brlcad/setup.sh,v 11.29 2000/02/20 06:38:59 butler Exp $
d185 1
@


11.29
log
@Now only deletes directories that are created as part of the install process
@
text
@d9 1
a9 1
#  $Header: /c/CVS/brlcad/setup.sh,v 11.28 2000/02/01 15:30:09 bparker Exp $
a241 1
		cp cake/*.[chyl1] cake/Makefile .cake.$MACHINE
d243 1
a256 1
		cp cakeaux/*.[chyl1] cakeaux/Makefile .cakeaux.$MACHINE
d258 1
@


11.28
log
@*- add to TSDIRS:  util, lib
@
text
@d9 1
a9 1
#  $Header: /c/CVS/brlcad/setup.sh,v 11.27 1999/12/14 17:51:13 mike Exp $
d147 10
a156 1
echo "OK to run  \"rm -fr ${BASEDIR}/*\"  ? (yes|no)[no]"
d164 8
a171 4
if [ X${SILENT} = X ] ; then
	echo "rm -fr ${BASEDIR}/*"
fi
rm -fr ${BASEDIR}/*
d178 2
a179 2
	bin include include/brlcad lib vfont \
	man man/man1 man/man3 man/man5 etc \
d181 9
a189 8
	tclscripts/lib tclscripts/util \
	tclscripts/pl-dm html html/manuals html/manuals/mged \
	html/manuals/mged/animmate html/manuals/libdm \
	html/manuals/shaders html/manuals/Anim_Tutorial \
	html/ReleaseNotes html/ReleaseNotes/Rel5.0 \
	html/ReleaseNotes/Rel5.0/Summary pro-engineer \
	pro-engineer/text pro-engineer/sgi_elf2 pro-engineer/sun4_solaris \
	pro-engineer/text/fullhelp pro-engineer/text/menus sample_applications
@


11.27
log
@
Added extra checking for source and BINDIR being in the same place.
@
text
@d9 1
a9 1
#  $Header: /c/CVS/brlcad/setup.sh,v 11.26 1999/10/25 18:17:03 jra Exp $
d168 1
@


11.26
log
@
No longer creates "tk" and "tcl" directories.
@
text
@d9 1
a9 1
#  $Header: /c/CVS/brlcad/setup.sh,v 11.25 1999/07/06 20:51:52 mike Exp $
d108 1
d115 28
@


11.25
log
@
Added clarifying comment.
@
text
@d9 1
a9 1
#  $Header: /c/CVS/brlcad/setup.sh,v 11.24 1999/06/03 00:35:49 mike Exp $
d137 1
a137 1
	man man/man1 man/man3 man/man5 etc tcl tk \
@


11.24
log
@
Modified to take BINPERM and MANPERM from Cakefile.defs settings.
@
text
@d9 1
a9 1
#  $Header: /c/CVS/brlcad/setup.sh,v 11.23 1999/05/13 21:56:35 bparker Exp $
d269 1
d271 3
@


11.23
log
@*- create sample_applications directory
@
text
@d9 1
a9 1
#  $Header: /c/CVS/brlcad/setup.sh,v 11.22 1999/05/13 13:38:40 jra Exp $
d153 6
d181 1
a181 1
	chmod 555 ${BINDIR}/${i}
d225 1
d228 2
a229 1
	cp *.1 ${MANDIR}/.
@


11.22
log
@Added pro-engineer directories to list of directories to be created.
@
text
@d9 1
a9 1
#  $Header: /c/CVS/brlcad/setup.sh,v 11.21 1999/05/11 13:42:10 pjt Exp $
d145 1
a145 1
	pro-engineer/text/fullhelp pro-engineer/text/menus
@


11.21
log
@Added html/ReleaseNotes and its subdirs to the mkdir loop
@
text
@d9 1
a9 1
#  $Header: /c/CVS/brlcad/setup.sh,v 11.20 1999/04/29 19:34:48 bparker Exp $
d143 3
a145 1
	html/ReleaseNotes/Rel5.0/Summary
@


11.20
log
@*- add html directories to list of directories to build
@
text
@d9 1
a9 1
#  $Header: /c/CVS/brlcad/setup.sh,v 11.19 1999/01/15 23:11:49 butler Exp $
d141 3
a143 1
	html/manuals/shaders html/manuals/Anim_Tutorial
@


11.19
log
@We now copy the cake and cakeaux directories to architecture-specific ones
so that setup.sh can run simultaneously on two different architectures against
the same source tree.
@
text
@d9 1
a9 1
#  $Header: /c/CVS/brlcad/setup.sh,v 11.18 1999/01/15 03:54:51 butler Exp $
d136 1
a136 1
	bin include include/brlcad html lib vfont \
d139 3
a141 1
	tclscripts/pl-dm
@


11.18
log
@Added support for "-s" option to support silent
(really just less verbose) builds.
@
text
@d9 1
a9 1
#  $Header: /c/CVS/brlcad/setup.sh,v 11.17 1998/12/31 03:25:15 mike Exp $
d184 6
a189 1
	cd cake
d197 1
d199 5
a203 1
	cd ../cakeaux
@


11.17
log
@Fixed typo
@
text
@d9 1
a9 1
#  $Header: /c/CVS/brlcad/setup.sh,v 11.16 1998/12/31 03:15:13 mike Exp $
d19 6
d42 3
a44 2
echo "  BINDIR = ${BINDIR},  BASEDIR = ${BASEDIR}"

d53 4
a56 2
echo
echo Verifying that ${BINDIR} is in your search path.
a103 1
echo "OK"
d105 3
d114 4
a117 2
echo
echo "Cleaning out ${BASEDIR}."
d126 3
a128 1
echo "rm -fr ${BASEDIR}/*"
d131 4
a134 3
echo
echo Creating the necessary directories

d158 3
a160 1
echo Installing shell scripts
d178 4
a181 2
echo Compiling cake and cakeaux
echo "   " `machinetype.sh -d`
d185 3
a187 3
	make clobber
	make install
	make clobber
d194 1
a194 1
	make clobber
d197 1
a197 1
		make $i			# XXX, should do "install"
d204 1
a204 1
	make clobber
d216 4
a219 2
echo "Running brlcad-check.sh"
if sh/brlcad-check.sh
d221 3
a223 1
	echo OK
d234 4
a237 2
echo "make mkdir"
sh gen.sh mkdir		# Won't have any effect unless NFS is set.
d240 2
a241 1
echo "BRL-CAD initial setup is complete."
d246 1
@


11.16
log
@verify.sh is now sh/brlcad-check.sh, so it can be used more generally.
@
text
@d9 1
a9 1
#  $Header: /c/CVS/brlcad/setup.sh,v 11.15 1998/12/31 02:23:04 mike Exp $
d198 2
a199 1
then	;
d202 1
a202 1
	exit 1;
@


11.15
log
@Split out the Cakefile.defs -vs- machinetype.sh verification
script into a separate program.
@
text
@d9 1
a9 1
#  $Header: /c/CVS/brlcad/setup.sh,v 11.14 1998/09/21 19:33:39 bparker Exp $
d196 2
a197 2
echo "Running verify.sh"
if ./verify.sh
d200 1
a200 1
	echo "verify.sh failed, aborting setup.sh"
@


11.14
log
@*- add a few directories that need to be created
@
text
@d9 1
a9 1
#  $Header: /c/CVS/brlcad/setup.sh,v 11.13 1998/09/08 18:12:31 mike Exp $
d195 7
a201 63
#  Rather than invoke CPP here trying to guess exactly how CAKE
#  is invoking it, just run CAKE on a trivial Cakefile and compare
#  the results.
#
############################################################################
echo Comparing settings between machinetype.sh and Cakefile.defs
IN_FILE=/tmp/Cakefile$$
OUT_FILE=/tmp/setup$$
trap '/bin/rm -f ${IN_FILE} ${OUT_FILE}; exit 1' 1 2 3 15	# Clean up temp file

rm -f ${OUT_FILE}

cat > ${IN_FILE} << EOF
#line 1 "$0"
#include "Cakefile.defs"

#ifdef BSD
#undef BSD	/* So that C_UNIXTYPE can have a value of BSD, not "43", etc. */
${OUT_FILE}:
	echo C_MACHINE=MTYPE ';' > ${OUT_FILE}
	echo C_UNIXTYPE=\'BSD\' ';' >> ${OUT_FILE}
	echo C_HAS_TCP=HAS_TCP >> ${OUT_FILE}
#else
#undef SYSV
${OUT_FILE}:
	echo C_MACHINE=MTYPE ';' > ${OUT_FILE}
	echo C_UNIXTYPE=\'SYSV\' ';' >> ${OUT_FILE}
	echo C_HAS_TCP=HAS_TCP >> ${OUT_FILE}
#endif
EOF

# Run the file through CAKE.
## echo cake -f ${IN_FILE} ${OUT_FILE}
cake -f ${IN_FILE} ${OUT_FILE} > /dev/null
if test $? -ne 0
then
	/bin/rm -f ${IN_FILE} ${OUT_FILE}
	echo "$0: cake returned error code"
	exit 1
fi

if test ! -f ${OUT_FILE}
then
	/bin/rm -f ${IN_FILE} ${OUT_FILE}
	echo "$0: cake run failed to create expected output file"
	exit 1
fi

# Source the output file as a shell script, to set C_* variables here.
## cat ${OUT_FILE}
. ${OUT_FILE}

####/bin/rm -f ${IN_FILE} ${OUT_FILE}

# See if things match up
if test x${MACHINE} != x${C_MACHINE} -o \
	x${UNIXTYPE} != x${C_UNIXTYPE} -o \
	x${HAS_TCP} != x${C_HAS_TCP}
then
	echo "$0 ERROR:  Mis-match between machinetype.sh and Cakefile.defs"
	echo "$0 ERROR:  machinetype.sh claims ${MACHINE} ${UNIXTYPE} ${HAS_TCP}"
	echo "$0 ERROR:  Cakefile.defs claims ${C_MACHINE} ${C_UNIXTYPE} ${C_HAS_TCP}"
	exit 1		# Die
d209 1
@


11.13
log
@Just doing "make install" isn't good enough, it doesn't
compile things in bench, db, or proc-db.  You may want db.
@
text
@d9 1
a9 1
#  $Header: /c/CVS/brlcad/setup.sh,v 11.12 1998/08/22 23:27:03 mike Exp $
d105 1
a105 1
echo "OK to run  rm -fr ${BASEDIR}  ? (yes|no)[no]"
d121 3
a123 1
	man man/man1 man/man3 man/man5 etc tcl tk tclscripts
@


11.12
log
@Made SED pattern matching much stricter while editing machinetype.sh
@
text
@d9 1
a9 1
#  $Header: /c/CVS/brlcad/setup.sh,v 11.11 1998/08/22 23:03:21 mike Exp $
d267 4
a270 1
echo "Run 'make install' next."
@


11.11
log
@More thorough handling of BRLCAD_ROOT, including checking for
different versions also in search path.
@
text
@d9 1
a9 1
#  $Header: /c/CVS/brlcad/setup.sh,v 11.10 1998/08/21 22:19:11 mike Exp $
d148 1
a148 1
	sed -e "s,/usr/brlcad,${BASEDIR}," < ${i} > ${BINDIR}/${i}
@


11.10
log
@Added extra diagnostics.
@
text
@d9 1
a9 1
#  $Header: /c/CVS/brlcad/setup.sh,v 11.9 1998/06/25 08:19:38 mike Exp $
d25 1
d30 3
a36 2
echo
echo Creating the necessary directories
a37 9
for LAST in \
	bin include include/brlcad html lib vfont \
	man man/man1 man/man3 man/man5 etc tcl tk tclscripts
do
	if test ! -d $BASEDIR/$LAST
	then
		mkdir $BASEDIR/$LAST
	fi
done
d46 2
a47 1
echo Checking search path
d65 8
d76 10
d95 33
d137 2
d148 2
a149 1
	cp ${i} ${BINDIR}/.
d159 1
a159 1
echo machintype.sh -d returns `machinetype.sh -d`
d267 1
@


11.9
log
@Do "make mkdir" if setup is successful.
Will be a no-op unless NFS is set.
@
text
@d9 1
a9 1
#  $Header: /c/CVS/brlcad/setup.sh,v 11.8 1998/01/14 17:50:08 mike Exp $
d111 1
d177 1
d194 1
d197 1
a197 1
/bin/rm -f ${IN_FILE} ${OUT_FILE}
d215 1
a215 1
make mkdir		# Won't have any effect unless NFS is set.
@


11.8
log
@Added UMASK command, so that things which are installed
will be generally usable.
@
text
@d9 1
a9 1
#  $Header: /m/cad/RCS/setup.sh,v 11.7 1997/10/08 04:47:47 mike Exp mike $
d206 7
@


11.7
log
@Added "html" directory
@
text
@d9 1
a9 1
#  $Header: /m/cad/RCS/setup.sh,v 11.6 1997/05/20 21:05:47 mike Exp mike $
d15 3
@


11.6
log
@This script no longer depends on newbindir.sh,
it uses machinetype.sh to locate it's home.
@
text
@d9 1
a9 1
#  $Header: /m/cad/RCS/setup.sh,v 11.5 1997/05/17 23:40:44 cjohnson Exp mike $
d34 1
a34 1
	bin include include/brlcad lib vfont \
@


11.5
log
@We have to install machinetype.sh before we use it.  First time installs
will fail for first setup.sh, second setup.sh should work.
@
text
@d9 1
a9 1
#  $Header: /vld/cjohnson/cvsroot/brlcad/setup.sh,v 11.4 1997/05/06 18:56:30 mike Exp $
a15 2
# Confirm that the installation directory is correct.
# newbindir.sh can be run to edit all relevant files (including this one).
d17 8
a24 2
# This is the "master" definition of where BRL-CAD is to installed.
BASEDIR=/usr/brlcad
d30 2
a31 2

# Create all the necessary directories
d50 1
d90 1
a103 7
# Acquire current machine type, etc.
#
############################################################################
eval `sh machinetype.sh -b`

############################################################################
#
d107 1
d146 1
d205 1
@


11.4
log
@Moved scripts into sh/ directory
@
text
@d9 1
a9 1
#  $Header: /m/cad/RCS/setup.sh,v 11.3 1996/07/09 14:50:10 pjt Exp mike $
a77 7
# Acquire current machine type, etc.
#
############################################################################
eval `sh machinetype.sh -b`

############################################################################
#
d96 6
@


11.3
log
@Added tclscripts to list of directories to make within $BASEDIR
@
text
@d9 1
a9 1
#  $Header: /m/cad/RCS/setup.sh,v 11.2 1996/06/24 14:55:08 jra Exp $
d85 1
a85 1
# Install the necessary shell scripts in BINDIR
d87 4
d92 2
a93 4
SCRIPTS="machinetype.sh cakeinclude.sh cray.sh ranlib5.sh \
	pixinfo.sh sgisnap.sh cadbug.sh show.sh"

for i in ${SCRIPTS}
d101 1
d115 4
@


11.2
log
@Changed  cat << EOF > ${IN_FILE}
to "cat > ${IN_FILE} << EOF". Problems with bash or sh on Digital OSF 3.0.
@
text
@d9 1
a9 1
#  $Header: /m/cad/RCS/setup.sh,v 11.1 1995/01/04 09:43:44 mike Rel4_4 jra $
d31 1
a31 1
	man man/man1 man/man3 man/man5 etc tcl tk
@


11.1
log
@Release_4.4
@
text
@d9 1
a9 1
#  $Header: /m/cad/RCS/setup.sh,v 10.10 95/01/03 22:39:21 mike Exp $
d146 1
a146 1
cat << EOF > ${IN_FILE}
@


11.1.1.1
log
@Release_4.5
@
text
@d9 1
a9 1
#  $Header: /m/cad/RCS/setup.sh,v 11.1 95/01/04 09:43:44 mike Rel4_4 $
d16 5
a20 8
############################################################################
#
# Acquire current machine type, BASEDIR, etc.
#
# newbindir.sh can be run to edit all relevant files (esp. machinetype.sh).
#
############################################################################
eval `sh machinetype.sh -v`
@


10.10
log
@Added installation for cakesub.1 man page.
Made everything relative to BASEDIR, not BINDIR.
@
text
@d9 1
a9 1
#  $Header: /m/cad/RCS/setup.sh,v 10.9 94/12/29 21:17:43 mike Exp Locker: mike $
@


10.9
log
@Added TCL and TK directories to /usr/brlcad
@
text
@d9 1
a9 1
#  $Header: /m/cad/RCS/setup.sh,v 10.8 94/10/24 20:53:41 mike Exp Locker: mike $
d19 2
a20 2
BINDIR=/usr/brlcad/bin
BASEDIR=`echo $BINDIR | sed -e 's/\/bin$//' `
d22 3
d125 1
@


10.8
log
@Added another shell script
@
text
@d9 1
a9 1
#  $Header: /m/cad/RCS/setup.sh,v 10.7 94/10/17 23:50:38 mike Exp Locker: mike $
d28 1
a28 1
	man man/man1 man/man3 man/man5 etc
@


10.7
log
@Bug #144, /usr/brlcad/include/brlcad
@
text
@d9 1
a9 1
#  $Header: /m/cad/RCS/setup.sh,v 10.6 94/10/02 19:12:33 mike Exp Locker: mike $
d86 1
a86 1
	pixinfo.sh sgisnap.sh cadbug.sh"
@


10.6
log
@Added cadbug.sh to list of SCRIPTS
@
text
@d9 1
a9 1
#  $Header: /m/cad/RCS/setup.sh,v 10.5 94/09/22 11:04:03 jra Exp Locker: mike $
d16 2
a17 5
# Confirm that the installation directory is correct,
# or change it in:
# Cakefile.defs, cake/Makefile, cakeaux/Makefile, setup.sh, cray.sh
# This is unfortunate, and needs to come from some file, somehow.
# Script newbindir.sh can be run to change them all.
d26 3
a28 1
for LAST in bin include lib vfont man man/man1 man/man3 man/man5 etc
d86 1
a86 1
	sgisnap.sh cadbug.sh"
@


10.5
log
@Added "etc" to list of directories to be made.
@
text
@d9 1
a9 1
#  $Header: /n/wolf/m/cad/RCS/setup.sh,v 10.4 94/09/22 04:34:20 mike Exp Locker: jra $
d86 2
a87 1
SCRIPTS="machinetype.sh cakeinclude.sh cray.sh ranlib5.sh sgisnap.sh"
@


10.4
log
@Create directories for the end-user.
@
text
@d9 1
a9 1
#  $Header: /m/cad/RCS/setup.sh,v 10.3 94/09/22 02:00:12 mike Exp Locker: mike $
d29 1
a29 1
for LAST in bin include lib vfont man man/man1 man/man3 man/man5
@


10.3
log
@Changed so that C_UNIXTYPE can have a value of BSD, not "43".
@
text
@d9 1
a9 1
#  $Header: /m/cad/RCS/setup.sh,v 10.2 94/09/22 01:42:14 mike Exp Locker: mike $
d23 1
d25 11
a35 1
echo "  BINDIR = ${BINDIR}"
@


10.2
log
@Changed from using CPP to using CAKE itself to validate
machinetype.sh -vs- Cakefile.defs
@
text
@d6 1
d9 1
a9 1
#  $Header: /m/cad/RCS/setup.sh,v 10.1 91/10/12 06:35:04 mike Rel4_0 Locker: mike $
d136 1
d139 1
a139 1
	echo C_UNIXTYPE=\"BSD\" ';' >> ${OUT_FILE}
d142 1
d145 1
a145 1
	echo C_UNIXTYPE=\"SYSV\" ';' >> ${OUT_FILE}
@


10.1
log
@Release_4.0
@
text
@d8 1
a8 1
#  $Header: /m/cad/RCS/setup.sh,v 9.4 91/08/27 23:58:06 mike Exp $
d19 1
d85 1
d88 1
a88 2
# Handle any vendor-specific configurations and setups.
# This is messy, and should be avoided where possible.
d91 6
a96 1
chmod 664 Cakefile.defs
d98 15
d119 3
a121 2
#  Note that the `echo MTYPE` is necessary because some newer AT&T cpp's
#  add a space around each macro substitution.
d124 1
a124 1
IN_FILE=/tmp/setup$$.c
d128 2
a133 1
C_MACHINE=\`echo MTYPE\`;
d135 4
a138 1
	C_UNIXTYPE="BSD";
d140 4
a143 1
	C_UNIXTYPE="SYSV";
a144 1
C_HAS_TCP=\`echo HAS_TCP\`;
d146 3
a148 5
# Run the file through the macro preprocessor.
# Many systems don't provide many built-in symbols with bare CPP,
# so try to run through the compiler.
# Using cc is essential for the IBM RS/6000, and helpful on the SGI.
cc -E -I. -DDEFINES_ONLY ${IN_FILE} > ${OUT_FILE}
d151 3
a153 2
	# Must be an old C compiler without -E, fall back to /lib/cpp
	/lib/cpp -DDEFINES_ONLY < ${IN_FILE} > ${OUT_FILE}
d156 8
a163 2
# Note that we depend on CPP's "#line" messages to be ignored as comments
# when sourced by the "." command here:
d165 1
d179 1
a179 27

############################################################################
#
# Make and install "cake" and "cakeaux"
#
############################################################################
if test x$1 != x-f
then
	cd cake
	make clobber
	make install
	make clobber

	cd ../cakeaux
	make clobber
	for i in cakesub cakeinclude
	do
		make $i			# XXX, should do "install"
		if test -f ${BINDIR}/$i
		then
			mv -f ${BINDIR}/$i ${BINDIR}/$i.bak
		fi
		cp $i ${BINDIR}/.
	done
	make clobber
	cd ..
fi
@


9.4
log
@`echo MTYPE` is necessary because some newer AT&T cpp's
add a space around each macro substitution.
@
text
@d8 1
a8 1
#  $Header: /m/cad/RCS/setup.sh,v 9.3 91/07/05 19:39:54 stay Exp $
@


9.3
log
@Changed to use cc -E, like new machinetype.sh and new cake
@
text
@d8 1
a8 1
#  $Header: /m/cad/RCS/setup.sh,v 9.2 91/01/03 23:22:11 mike Exp $
d98 3
d110 1
a110 1
C_MACHINE=MTYPE;
d116 1
a116 1
C_HAS_TCP=HAS_TCP;
@


9.2
log
@expanded cakesub and cakeinclude
@
text
@d8 1
a8 1
#  $Header: setup.sh,v 9.1 89/05/19 05:43:36 mike Locked $
d99 3
a101 2
FILE=/tmp/cadsetup$$
trap '/bin/rm -f ${FILE}; exit 1' 1 2 3 15	# Clean up temp file
d103 1
a103 1
/lib/cpp -DDEFINES_ONLY << EOF > ${FILE}
d115 10
d128 2
a129 2
. ${FILE}
/bin/rm -f ${FILE}
@


9.1
log
@Release_3.5
@
text
@d8 1
a8 1
#  $Header: setup.sh,v 8.10 89/04/27 02:37:58 mike Exp $
d146 9
a154 6
	make cakesub			# XXX, should do "install"
	if test -f ${BINDIR}/cakesub
	then
		mv -f ${BINDIR}/cakesub ${BINDIR}/cakesub.bak
	fi
	cp cakesub ${BINDIR}/.
@


8.10
log
@Added ranlib5 and sgisnap.sh
@
text
@d8 1
a8 1
#  $Header: setup.sh,v 8.9 89/03/01 03:28:28 mike Locked $
@


8.9
log
@Removed SGI-specific hackery
@
text
@d8 1
a8 1
#  $Header: setup.sh,v 8.8 89/02/13 08:41:56 mike Locked $
d73 1
a73 1
SCRIPTS="machinetype.sh cakeinclude.sh cray.sh"
@


8.8
log
@Improved organization.
Don't check for match between machinetype.sh and Cakefile.defs
until setup.sh has had a chance to edit Cakefile.defs to bring
it into line (SGI hack).
@
text
@d8 1
a8 1
#  $Header: setup.sh,v 8.7 89/02/13 05:32:51 mike Locked $
a90 20

case X$MACHINE in

X4gt|X4d|X4d2)
	# SGI 4D foolishness
	case $MACHINE in
	4gt)	SGI_TYPE=1;;
	4d)	SGI_TYPE=2;;
	4d2)	SGI_TYPE=3;;
	esac
	ed - Cakefile.defs << EOF
g/define	SGI_TYPE/d
/SGI_4D_TYPE_MARKER/a
#	define	SGI_TYPE	$SGI_TYPE
.
w
EOF
#	End of SGI stuff

esac
@


8.7
log
@Changed to reflect elimination of "UNIXTYPE" variable
@
text
@d8 1
a8 1
#  $Header: setup.sh,v 8.6 89/02/11 04:32:12 mike Locked $
d24 1
d30 1
d61 2
d64 2
d68 51
a118 2
#  Ensure that machinetype.sh and Cakefile.defs are set up the same way.
#  This is just a double-check on people porting to new machines.
a150 1
# Install the necessary shell scripts in BINDIR
d152 5
a156 11
SCRIPTS="machinetype.sh cakeinclude.sh cray.sh"

for i in ${SCRIPTS}
do
	if test -f ${BINDIR}/${i}
	then
		mv -f ${BINDIR}/${i} ${BINDIR}/`basename ${i} .sh`.bak
	fi
	cp ${i} ${BINDIR}/.
done

a158 2
	# Make and install "cake" and "cakeaux"

a174 25

#
# Handle any vendor-specific configurations and setups.
# This is messy, and should be avoided where possible.
chmod 664 Cakefile.defs

case X$MACHINE in

X4gt|X4d|X4d2)
	# SGI 4D foolishness
	case $MACHINE in
	4gt)	SGI_TYPE=1;;
	4d)	SGI_TYPE=2;;
	4d2)	SGI_TYPE=3;;
	esac
	ed - Cakefile.defs << EOF
g/define	SGI_TYPE/d
/SGI_4D_TYPE_MARKER/a
#	define	SGI_TYPE	$SGI_TYPE
.
w
EOF
#	End of SGI stuff

esac
@


8.6
log
@Added check for configuration match between machinetype.sh and Cakefile.defs
as an aid to people porting to new configurations.
@
text
@d8 1
a8 1
#  $Header: setup.sh,v 8.5 88/10/09 23:59:23 mike Locked $
d72 1
a72 1
#if UNIXTYPE == BSD
@


8.5
log
@Added chmod of Cakefile.defs before attempting to edit it,
since the distributed version will be mode 444.
really really Release 3.0.
@
text
@d8 1
a8 1
#  $Header: setup.sh,v 8.5 88/10/09 23:58:18 mike Exp $
d59 37
d134 1
a134 1
eval `sh machinetype.sh -b`
@


8.4
log
@Additional protectiveness.
Really really Release 3.0, promise!
@
text
@d8 1
a8 1
#  $Header: setup.sh,v 8.3 88/10/06 06:34:59 mike Locked $
d96 1
@


8.3
log
@Minor nits detected in final testing of 3.0.
real 3.0 version
@
text
@d8 1
a8 1
#  $Header: setup.sh,v 8.2 88/10/06 03:31:17 mike Locked $
d83 5
a87 1
	make cakesub			# XXX
@


8.2
log
@"cd .." after making cakeaux, so things can proceed.
Really Rel 3.0
@
text
@d8 1
a8 1
#  $Header: setup.sh,v 8.2 88/10/05 21:23:19 phil Exp $
d65 4
a68 1
	mv -f ${BINDIR}/${i} ${BINDIR}/`basename ${i} .sh`.bak
@


8.1
log
@Release_3.0
@
text
@d8 1
a8 1
#  $Header: setup.sh,v 1.4 88/10/01 06:49:56 mike Exp $
d83 1
@


1.4
log
@Added handling of short file names when making backup copies.
Added undoccumented -f flag to skip recompiling CAKE.
@
text
@d8 1
a8 1
#  $Header: gen.sh,v 1.5 88/09/21 07:05:16 mike Locked $
@


1.3
log
@Handled case where $SCRIPTS may already exist, and not be writable.
@
text
@d2 2
d6 3
d65 1
a65 1
	mv -f ${BINDIR}/${i} ${BINDIR}/${i}.bak
d69 3
a71 1
# Make and install "cake" and "cakeaux"
d73 4
a76 4
cd cake;
make clobber
make install
make clobber
d78 6
a83 5
cd ../cakeaux
make clobber
make cakesub			# XXX
cp cakesub ${BINDIR}/.
make clobber
@


1.2
log
@Fixed bad bug with $PATH parsing.
Added code to discriminate between various kinds of 4D
@
text
@d58 5
a62 1
cp ${SCRIPTS} ${BINDIR}/.
@


1.1
log
@Initial revision
@
text
@d27 1
a27 1
				s/:\\.://g
d72 24
@
