head	11.4;
access;
symbols
	ansi-20040405-merged:11.2.6.1
	premerge-autoconf:11.3
	ansi-20040316-freeze:11.2
	postmerge-20040315-windows:11.3
	premerge-20040315-windows:11.3
	windows-20040315-freeze:1.1.1.2
	autoconf-20031203:11.3
	autoconf-20031202:11.3
	phong-branch:11.3.0.4
	photonmap-branch:11.3.0.2
	rel-6-1-DP:11.2
	windows-branch:1.1.1
	rel-6-0-2:11.2
	ansi-branch:11.2.0.6
	rel-6-0-1-branch:11.2.0.4
	hartley-6-0-post:11.2
	hartley-6-0-pre:11.2
	rel-6-0-1:11.2
	rel-6-0:11.2
	rel-5-4:11.2
	offsite-5-3-pre:11.2
	rel-5-3:11.2
	rel-5-2:11.2
	rel-5-1-branch:11.2.0.2
	rel-5-1:11.2
	rel-5-0:11.2
	rel-5-0-beta:11.2
	rel-4-5:11.2
	ctj-4-5-post:11.2
	ctj-4-5-pre:11.2
	rel-4-4:11.1
	rel-4-0:10.1
	rel-3-5:9.1
	rel-3-0:8.1
	AUTOCONF:11.3.0.6;
locks; strict;


11.4
date	2004.03.18.18.15.13;	author erikg;	state dead;
branches;
next	11.3;

11.3
date	2003.04.11.04.44.35;	author morrison;	state Exp;
branches
	11.3.6.1;
next	11.2;

11.2
date	95.08.10.20.15.29;	author gdurf;	state Exp;
branches
	11.2.6.1;
next	11.1;

11.1
date	95.01.04.09.43.30;	author mike;	state Rel4_4;
branches
	11.1.1.1;
next	10.7;

10.7
date	94.12.19.19.33.24;	author mike;	state Exp;
branches;
next	10.6;

10.6
date	94.12.19.19.18.29;	author mike;	state Exp;
branches;
next	10.5;

10.5
date	94.12.01.23.22.51;	author mike;	state Exp;
branches;
next	10.4;

10.4
date	94.12.01.22.17.46;	author mike;	state Exp;
branches;
next	10.3;

10.3
date	94.10.28.20.22.10;	author mike;	state Exp;
branches;
next	10.2;

10.2
date	94.09.24.01.26.23;	author mike;	state Exp;
branches;
next	10.1;

10.1
date	91.10.12.06.34.57;	author mike;	state Rel4_0;
branches;
next	9.2;

9.2
date	91.01.03.23.17.54;	author mike;	state Exp;
branches;
next	9.1;

9.1
date	89.05.19.05.43.22;	author mike;	state Rel3_5;
branches;
next	8.1;

8.1
date	88.10.05.00.23.11;	author mike;	state Rel3_0;
branches;
next	1.1;

1.1
date	88.05.16.01.25.47;	author mike;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2002.09.26.04.00.59;	author morrison;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2004.03.11.23.40.17;	author morrison;	state Exp;
branches;
next	;

11.1.1.1
date	98.01.29.06.15.07;	author mike;	state Rel4_5;
branches;
next	;

11.2.6.1
date	2004.03.17.21.15.41;	author morrison;	state Exp;
branches;
next	;

11.3.6.1
date	2004.03.18.18.08.49;	author erikg;	state dead;
branches;
next	;


desc
@Cakefile include for building programs
@


11.4
log
@merge of AUTOCONF branch in to HEAD
@
text
@/*
 *			C A K E F I L E . P R O G
 *
 *  Like Cakefile.lib, this is the common part for compiling programs.
 *
 *  Authors -
 *	Michael John Muuss
 *	Bob Parker
 *  
 *  Source -
 *	The U. S. Army Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5068  USA
 *  
 *  Distribution Status -
 *	Public Domain, Distribution Unlimitied.
 *
 *  $Header: /cvs/brlcad/Cakefile.prog,v 11.3 2003/04/11 04:44:35 morrison Exp $
 */

/* Default rule */
everything&::	PRODUCTS

%.o:	../SRCDIR/%.c HDR_DEP		if exist ../SRCDIR/%.c
	@@rm -f ./%.o
	CC CFLAGS -c ../SRCDIR/%.c

%.o:	../SRCDIR/%.f 			if exist ../SRCDIR/%.f
	@@rm -f ./%.o
	FC FFLAGS -c ../SRCDIR/%.f

/* There is a conflict here:  When debugging, it's nice to
 * be able to examine the intermediate .c file that LEX and YACC produce.
 * When trying to port to a new platform, those leftovers can "trick"
 * the unwary.
 */

/* Non-ANSI compilers can't take tab-# */
%.o:    ../SRCDIR/%.l			if exist ../SRCDIR/%.l
	-rm -f ./%.c ./%.o
        LEX -t LEX_OPTS ../SRCDIR/%.l | sed -e 's/^[ 	]#/#/' > ./%.c
	if test `wc -l < ./%.c` -lt 2 ; then rm -f ./%.c ; exit 1 ; fi
	CC CFLAGS -I. -c ./%.c

%.o:    ../SRCDIR/%.y			if exist ../SRCDIR/%.y
	-rm -f ./%.c ./%.h ./%.o
        YACC YACC_OPTS ../SRCDIR/%.y
	mv ./y.tab.c ./%.c
	CC CFLAGS -I. -c ./%.c
@


11.3
log
@fixed a shell scripting bug where a space is needed before semicolons in ifthen statements for posix
@
text
@d17 1
a17 1
 *  $Header: /c/CVS/brlcad/Cakefile.prog,v 11.2 1995/08/10 20:15:29 gdurf Exp $
@


11.3.6.1
log
@merge from head
@
text
@d17 1
a17 1
 *  $Header: /cvs/brlcad/Cakefile.prog,v 11.3 2003/04/11 04:44:35 morrison Exp $
@


11.2
log
@Dubious adjustment to .y processing.
@
text
@d17 1
a17 1
 *  $Header: /m/cad/RCS/Cakefile.prog,v 11.1 1995/01/04 09:43:30 mike Rel4_4 gdurf $
d41 1
a41 1
	if test `wc -l < ./%.c` -lt 2; then rm -f ./%.c; exit 1; fi
@


11.2.6.1
log
@sync branch with HEAD
@
text
@d17 1
a17 1
 *  $Header$
d41 1
a41 1
	if test `wc -l < ./%.c` -lt 2 ; then rm -f ./%.c ; exit 1 ; fi
@


11.1
log
@Release_4.4
@
text
@d17 1
a17 1
 *  $Header: /m/cad/RCS/Cakefile.prog,v 10.7 94/12/19 19:33:24 mike Exp $
d47 1
@


11.1.1.1
log
@Release_4.5
@
text
@d17 1
a17 1
 *  $Header: /m/cad/RCS/Cakefile.prog,v 11.1 95/01/04 09:43:30 mike Rel4_4 $
@


10.7
log
@Zap those darn .o files first.  People are always leaving them
behind with the wrong modes!
@
text
@d17 1
a17 1
 *  $Header: /m/cad/RCS/Cakefile.prog,v 10.6 94/12/19 19:18:29 mike Exp Locker: mike $
@


10.6
log
@If LEX fails, don't compile an empty .c file.  Bug 234.
@
text
@d17 1
a17 1
 *  $Header: /m/cad/RCS/Cakefile.prog,v 10.5 94/12/01 23:22:51 mike Exp Locker: mike $
d24 1
d28 1
d39 1
a39 1
	-rm -f ./%.c
d45 1
a45 1
	-rm -f ./%.c ./%.h
@


10.5
log
@Cope with non-ANSI compilers and LEX
@
text
@d17 1
a17 1
 *  $Header: /m/cad/RCS/Cakefile.prog,v 10.4 94/12/01 22:17:46 mike Exp Locker: mike $
d29 5
d39 1
@


10.4
log
@Modified to ignore return codes from RM and MV.
@
text
@d17 1
a17 1
 *  $Header: /m/cad/RCS/Cakefile.prog,v 10.3 94/10/28 20:22:10 mike Exp Locker: mike $
d30 1
a30 1
/* lex always generates lex.yy.c */
d32 2
a33 3
	-rm -f ./%.c lex.yy.c
        LEX LEX_OPTS ../SRCDIR/%.l
	-mv -f lex.yy.c ./%.c
@


10.3
log
@Lex fix
@
text
@d17 1
a17 1
 *  $Header: /m/cad/RCS/Cakefile.prog,v 10.2 94/09/24 01:26:23 mike Exp Locker: mike $
d32 1
a32 1
	rm -f ./%.c lex.yy.c
d34 1
a34 1
	mv lex.yy.c ./%.c
d38 1
a38 1
	rm -f ./%.c ./%.h
@


10.2
log
@Based upon code from Bob Parker, added support for LEX and YACC
@
text
@d17 1
a17 1
 *  $Header: /m/cad/RCS/Cakefile.prog,v 10.1 91/10/12 06:34:57 mike Rel4_0 Locker: mike $
d30 1
d32 1
a32 1
	rm -f ./%.c
d34 1
@


10.1
log
@Release_4.0
@
text
@d4 1
a4 1
 *  Like Cakefile.lib, this is the common part for making programs.
d6 1
a6 1
 *  Author -
d8 1
d11 2
a12 3
 *	SECAD/VLD Computing Consortium, Bldg 394
 *	The U. S. Army Ballistic Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5066
d17 1
a17 1
 *  $Header: /m/cad/RCS/Cakefile.prog,v 9.2 91/01/03 23:17:54 mike Exp $
d28 11
@


9.2
log
@Added header
@
text
@d17 1
a17 1
 *  $Header$
@


9.1
log
@Release_3.5
@
text
@d2 1
a2 1
 *			Cakefile.prog
d5 13
@


8.1
log
@Release_3.0
@
text
@@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import of initial port to Windows
@
text
@d1 14
a14 48
/*
 *			C A K E F I L E . P R O G
 *
 *  Like Cakefile.lib, this is the common part for compiling programs.
 *
 *  Authors -
 *	Michael John Muuss
 *	Bob Parker
 *  
 *  Source -
 *	The U. S. Army Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5068  USA
 *  
 *  Distribution Status -
 *	Public Domain, Distribution Unlimitied.
 *
 *  $Header: /c/CVS/brlcad/Cakefile.prog,v 11.2 1995/08/10 20:15:29 gdurf Exp $
 */

/* Default rule */
everything&::	PRODUCTS

%.o:	../SRCDIR/%.c HDR_DEP		if exist ../SRCDIR/%.c
	@@rm -f ./%.o
	CC CFLAGS -c ../SRCDIR/%.c

%.o:	../SRCDIR/%.f 			if exist ../SRCDIR/%.f
	@@rm -f ./%.o
	FC FFLAGS -c ../SRCDIR/%.f

/* There is a conflict here:  When debugging, it's nice to
 * be able to examine the intermediate .c file that LEX and YACC produce.
 * When trying to port to a new platform, those leftovers can "trick"
 * the unwary.
 */

/* Non-ANSI compilers can't take tab-# */
%.o:    ../SRCDIR/%.l			if exist ../SRCDIR/%.l
	-rm -f ./%.c ./%.o
        LEX -t LEX_OPTS ../SRCDIR/%.l | sed -e 's/^[ 	]#/#/' > ./%.c
	if test `wc -l < ./%.c` -lt 2; then rm -f ./%.c; exit 1; fi
	CC CFLAGS -I. -c ./%.c

%.o:    ../SRCDIR/%.y			if exist ../SRCDIR/%.y
	-rm -f ./%.c ./%.h ./%.o
        YACC YACC_OPTS ../SRCDIR/%.y
	mv ./y.tab.c ./%.c
	CC CFLAGS -I. -c ./%.c
@


1.1.1.2
log
@sync to HEAD...
@
text
@d1 48
a48 48
/*
 *			C A K E F I L E . P R O G
 *
 *  Like Cakefile.lib, this is the common part for compiling programs.
 *
 *  Authors -
 *	Michael John Muuss
 *	Bob Parker
 *  
 *  Source -
 *	The U. S. Army Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5068  USA
 *  
 *  Distribution Status -
 *	Public Domain, Distribution Unlimitied.
 *
 *  $Header: /c/CVS/brlcad/Cakefile.prog,v 11.3 2003/04/11 04:44:35 morrison Exp $
 */

/* Default rule */
everything&::	PRODUCTS

%.o:	../SRCDIR/%.c HDR_DEP		if exist ../SRCDIR/%.c
	@@rm -f ./%.o
	CC CFLAGS -c ../SRCDIR/%.c

%.o:	../SRCDIR/%.f 			if exist ../SRCDIR/%.f
	@@rm -f ./%.o
	FC FFLAGS -c ../SRCDIR/%.f

/* There is a conflict here:  When debugging, it's nice to
 * be able to examine the intermediate .c file that LEX and YACC produce.
 * When trying to port to a new platform, those leftovers can "trick"
 * the unwary.
 */

/* Non-ANSI compilers can't take tab-# */
%.o:    ../SRCDIR/%.l			if exist ../SRCDIR/%.l
	-rm -f ./%.c ./%.o
        LEX -t LEX_OPTS ../SRCDIR/%.l | sed -e 's/^[ 	]#/#/' > ./%.c
	if test `wc -l < ./%.c` -lt 2 ; then rm -f ./%.c ; exit 1 ; fi
	CC CFLAGS -I. -c ./%.c

%.o:    ../SRCDIR/%.y			if exist ../SRCDIR/%.y
	-rm -f ./%.c ./%.h ./%.o
        YACC YACC_OPTS ../SRCDIR/%.y
	mv ./y.tab.c ./%.c
	CC CFLAGS -I. -c ./%.c
@


