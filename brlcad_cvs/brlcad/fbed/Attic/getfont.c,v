head	11.7;
access;
symbols
	ansi-20040405-merged:11.4.2.1
	postmerge-20040405-ansi:11.5
	premerge-20040404-ansi:11.4
	postmerge-autoconf:11.4
	autoconf-freeze:11.4
	premerge-autoconf:11.4
	ansi-20040316-freeze:11.4.2.1
	postmerge-20040315-windows:11.4
	premerge-20040315-windows:11.4
	windows-20040315-freeze:11.4
	autoconf-20031203:11.4
	autoconf-20031202:11.4
	autoconf-branch:11.4.0.10
	phong-branch:11.4.0.8
	photonmap-branch:11.4.0.6
	rel-6-1-DP:11.4
	windows-branch:11.4.0.4
	rel-6-0-2:11.2
	ansi-branch:11.4.0.2
	rel-6-0-1-branch:11.2.0.2
	hartley-6-0-post:11.3
	hartley-6-0-pre:11.2
	rel-6-0-1:11.2
	rel-6-0:11.2
	rel-5-4:11.1
	offsite-5-3-pre:11.1
	rel-5-3:11.1
	rel-5-2:11.1
	rel-5-1-branch:11.1.0.2
	rel-5-1:11.1
	rel-5-0:11.1
	rel-5-0-beta:11.1
	rel-4-5:11.1
	ctj-4-5-post:11.1
	ctj-4-5-pre:11.1
	rel-4-4:11.1
	rel-4-0:10.1
	rel-3-5:9.1
	rel-3-0:8.1
	rel-2-3:7.1
	rel-2-0:5.1
	rel-1-24:5.1
	rel-1-20:4.2
	rel-1-10:4.1;
locks; strict;
comment	@ * @;


11.7
date	2004.05.24.04.13.10;	author morrison;	state dead;
branches;
next	11.6;

11.6
date	2004.05.10.15.30.42;	author erikg;	state Exp;
branches;
next	11.5;

11.5
date	2004.04.05.07.52.17;	author morrison;	state Exp;
branches;
next	11.4;

11.4
date	2002.08.20.17.07.28;	author jra;	state Exp;
branches
	11.4.2.1;
next	11.3;

11.3
date	2002.08.15.20.54.41;	author hartley;	state Exp;
branches;
next	11.2;

11.2
date	2001.08.09.17.45.24;	author jra;	state Exp;
branches;
next	11.1;

11.1
date	95.01.04.10.13.53;	author mike;	state Rel4_4;
branches;
next	10.1;

10.1
date	91.10.12.06.49.38;	author mike;	state Rel4_0;
branches;
next	9.2;

9.2
date	90.11.26.11.19.47;	author moss;	state Exp;
branches;
next	9.1;

9.1
date	89.05.19.06.12.12;	author mike;	state Rel3_5;
branches;
next	8.1;

8.1
date	88.10.05.00.50.07;	author mike;	state Rel3_0;
branches;
next	7.1;

7.1
date	87.11.03.00.10.46;	author mike;	state Rel;
branches;
next	6.1;

6.1
date	87.07.11.08.14.16;	author mike;	state Rel;
branches;
next	5.1;

5.1
date	87.06.24.22.45.25;	author mike;	state Rel;
branches;
next	4.2;

4.2
date	87.02.13.00.52.33;	author mike;	state Exp;
branches;
next	4.1;

4.1
date	86.12.29.02.51.39;	author mike;	state Rel1;
branches;
next	1.3;

1.3
date	86.12.26.22.36.55;	author mike;	state Exp;
branches;
next	1.2;

1.2
date	86.12.01.02.16.29;	author mike;	state Exp;
branches;
next	1.1;

1.1
date	86.11.10.23.10.40;	author mike;	state Exp;
branches;
next	;

11.4.2.1
date	2002.09.19.18.00.50;	author morrison;	state Exp;
branches;
next	;


desc
@Gary Moss' Original Version
@


11.7
log
@moved to src/fbed/
@
text
@/*
	SCCS id:	@@(#) getfont.c	2.1
	Modified: 	12/9/86 at 15:54:45
	Retrieved: 	12/26/86 at 21:54:19
	SCCS archive:	/vld/moss/src/fbed/s.getfont.c

	Authors:	Paul R. Stay	(original author)
			Gary S. Moss	(port to big-endian machine)

			U. S. Army Ballistic Research Laboratory
			Aberdeen Proving Ground
			Maryland 21005-5066
			(301)278-6651 or DSN 298-6651
*/
#if ! defined( lint )
static const char RCSid[] = "@@(#) getfont.c 2.1, modified 12/9/86 at 15:54:45, archive /vld/moss/src/fbed/s.getfont.c";
#endif
/* 
	getfont.c - Load a new font by reading in the header and directory.
 */ 
#ifdef HAVE_CONFIG_H
# include "config.h"
#endif


#include <stdio.h>

#ifdef USE_STRING_H
#include <string.h>
#else
#include <strings.h>
#endif

#include "./font.h"

/* Variables controlling the font itself */
FILE		*ffdes;		/* File pointer for current font. */
int offset;		/* Current offset to character data. */
struct header	hdr;		/* Header for font file. */
struct dispatch	dir[256];	/* Directory for character font. */
int width = 0,	/* Size of current character. */
		height = 0;

extern void fb_log(char *fmt, ...);

int
get_Font(char *fontname)
{	FILE		*newff;
		struct header	lochdr;
		static char fname[FONTNAMESZ];
	if( fontname == NULL )
		fontname = FONTNAME;
	if( fontname[0] != '/' )		/* absolute path */
		(void) sprintf( fname, "%s/%s", FONTDIR, fontname );
	else
		(void) strncpy( fname, fontname, FONTNAMESZ );

	/* Open the file and read in the header information. */
	if( (newff = fopen( fname, "r" )) == NULL )
		{
		fb_log( "Error opening font file '%s'\n", fname );
		ffdes = NULL;
		return 0;
    		}
	if( ffdes != NULL )
		(void) fclose(ffdes);
	ffdes = newff;
	if( fread( (char *) &lochdr, (int) sizeof(struct header), 1, ffdes ) != 1 )
		{
		fb_log( "get_Font() read failed!\n" );
		ffdes = NULL;
		return 0;
		}
	SWAB( lochdr.magic );
	SWAB( lochdr.size );
	SWAB( lochdr.maxx );
	SWAB( lochdr.maxy );
	SWAB( lochdr.xtend );

	if( lochdr.magic != 0436 )
    		{
		fb_log( "Not a font file \"%s\": magic=0%o\n",
			fname, (int) lochdr.magic
			);
		ffdes = NULL;
		return 0;
		}
	hdr = lochdr;

	/* Read in the directory for the font. */
	if( fread( (char *) dir, (int) sizeof(struct dispatch), 256, ffdes ) != 256 )
		{
		fb_log( "get_Font() read failed!\n" );
		ffdes = NULL;
		return 0;
		}
	/* Addresses of characters in the file are relative to
		point in the file after the directory, so grab the
		current position.
	 */
 	offset = ftell( ffdes );
	return 1;
	}
@


11.6
log
@change conf.h to a wrapped config.h
@
text
@@


11.5
log
@merge of ansi-6-0-branch into HEAD
@
text
@d21 5
a25 1
#include "conf.h"
@


11.4
log
@Restoration of entire source tree to Pre-Hartley state
@
text
@d40 1
a40 1
extern void fb_log();
d43 2
a44 3
get_Font( fontname )
char *fontname;
	{	FILE		*newff;
@


11.4.2.1
log
@Initial ANSIfication
@
text
@d40 1
a40 1
extern void fb_log(char *fmt, ...);
d43 3
a45 2
get_Font(char *fontname)
{	FILE		*newff;
@


11.3
log
@Converted from K&R to ANSI C - RFH
@
text
@d40 1
a40 1
extern void fb_log(char *fmt, ...);
d43 3
a45 2
get_Font(char *fontname)
{	FILE		*newff;
@


11.2
log
@Lint
@
text
@d40 1
a40 1
extern void fb_log();
d43 2
a44 3
get_Font( fontname )
char *fontname;
	{	FILE		*newff;
@


11.1
log
@Release_4.4
@
text
@d16 1
a16 2
static
char sccsTag[] = "@@(#) getfont.c 2.1, modified 12/9/86 at 15:54:45, archive /vld/moss/src/fbed/s.getfont.c";
d21 1
d23 7
d40 1
d42 1
@


10.1
log
@Release_4.0
@
text
@@


9.2
log
@Added some commands: draw-rectangle, fill-bounded-region, print-comment,
	change-region-color, set-tolerance-color-match.
Also, default rectangle is entire window.
Checked in for release 4.0.
@
text
@@


9.1
log
@Release_3.5
@
text
@d13 1
a13 1
			(301)278-6647 or AV-298-6647
d17 1
a17 1
char	sccsTag[] = "@@(#) getfont.c 2.1, modified 12/9/86 at 15:54:45, archive /vld/moss/src/fbed/s.getfont.c";
d26 5
a30 5
FILE		*ffdes;		/* File pointer for current font.	*/
int		offset;		/* Current offset to character data.	*/
struct header	hdr;		/* Header for font file.		*/
struct dispatch	dir[256];	/* Directory for character font.	*/
int		width = 0,	/* Size of current character.		*/
d38 1
a38 1
		static char	fname[FONTNAMESZ];
d51 1
a51 1
		return	0;
d60 1
a60 1
		return	0;
d74 1
a74 1
		return	0;
d83 1
a83 1
		return	0;
d90 1
a90 1
	return	1;
@


8.1
log
@Release_3.0
@
text
@@


7.1
log
@Release 2.3
@
text
@@


6.1
log
@Release 2.0
@
text
@@


5.1
log
@Release 1.24
@
text
@@


4.2
log
@Release 1.20 -- First Formal Release
@
text
@@


4.1
log
@BRL CAD Distribution Release 1.10
@
text
@@


1.3
log
@Latest version from Gary Moss
@
text
@@


1.2
log
@Fixed #include path
@
text
@d1 18
d20 2
a21 7
 * getfont.c - get a file name for a font
 * 
 * Author:	Paul R. Stay
 * 		Ballistics Research Labratory
 * 		APG, Md.
 * Date:	Fri Jan 11 1985
 */
a22 1
#include <fb.h>
d25 7
a31 7
/*	g e t f o n t ( )
	Copy the font name and determine if you need to put a path variable
	on it so it can load correctly.
 */
getfont()
	{
	static char	fname[128];
a32 2
	if( fontname[0] == '/' )		/* absolute path */
		return	loadfont( fontname );
d34 57
a90 2
	(void) sprintf( fname, "/usr/lib/vfont/%s", fontname );
	return	loadfont( fname );
@


1.1
log
@Initial revision
@
text
@d11 1
a11 1
#include "font.h"
@
