head	11.7;
access;
symbols
	ansi-20040405-merged:11.4.2.1
	postmerge-20040405-ansi:11.5
	premerge-20040404-ansi:11.4
	postmerge-autoconf:11.4
	autoconf-freeze:11.4
	premerge-autoconf:11.4
	ansi-20040316-freeze:11.4.2.1
	postmerge-20040315-windows:11.4
	premerge-20040315-windows:11.4
	windows-20040315-freeze:11.4
	autoconf-20031203:11.4
	autoconf-20031202:11.4
	autoconf-branch:11.4.0.10
	phong-branch:11.4.0.8
	photonmap-branch:11.4.0.6
	rel-6-1-DP:11.4
	windows-branch:11.4.0.4
	rel-6-0-2:11.2
	ansi-branch:11.4.0.2
	rel-6-0-1-branch:11.2.0.2
	hartley-6-0-post:11.3
	hartley-6-0-pre:11.2
	rel-6-0-1:11.2
	rel-6-0:11.2
	rel-5-4:11.1
	offsite-5-3-pre:11.1
	rel-5-3:11.1
	rel-5-2:11.1
	rel-5-1-branch:11.1.0.2
	rel-5-1:11.1
	rel-5-0:11.1
	rel-5-0-beta:11.1
	rel-4-5:11.1
	ctj-4-5-post:11.1
	ctj-4-5-pre:11.1
	rel-4-4:11.1
	rel-4-0:10.1
	rel-3-5:9.1
	rel-3-0:8.1
	rel-2-3:7.1
	rel-2-0:5.1
	rel-1-24:5.1
	rel-1-20:4.2
	rel-1-10:4.1;
locks; strict;
comment	@ * @;


11.7
date	2004.05.24.04.13.10;	author morrison;	state dead;
branches;
next	11.6;

11.6
date	2004.05.10.15.30.42;	author erikg;	state Exp;
branches;
next	11.5;

11.5
date	2004.04.05.07.52.17;	author morrison;	state Exp;
branches;
next	11.4;

11.4
date	2002.08.20.17.07.28;	author jra;	state Exp;
branches
	11.4.2.1;
next	11.3;

11.3
date	2002.08.15.20.54.41;	author hartley;	state Exp;
branches;
next	11.2;

11.2
date	2001.08.09.17.45.25;	author jra;	state Exp;
branches;
next	11.1;

11.1
date	95.01.04.10.13.59;	author mike;	state Rel4_4;
branches;
next	10.2;

10.2
date	94.08.23.19.38.29;	author gdurf;	state Exp;
branches;
next	10.1;

10.1
date	91.10.12.06.49.44;	author mike;	state Rel4_0;
branches;
next	9.4;

9.4
date	91.06.12.22.47.35;	author mike;	state Exp;
branches;
next	9.3;

9.3
date	90.12.10.09.49.18;	author moss;	state Exp;
branches;
next	9.2;

9.2
date	90.11.26.11.19.57;	author moss;	state Exp;
branches;
next	9.1;

9.1
date	89.05.19.06.12.25;	author mike;	state Rel3_5;
branches;
next	8.1;

8.1
date	88.10.05.00.50.16;	author mike;	state Rel3_0;
branches;
next	7.1;

7.1
date	87.11.03.00.11.08;	author mike;	state Rel;
branches;
next	6.1;

6.1
date	87.07.11.08.14.38;	author mike;	state Rel;
branches;
next	5.1;

5.1
date	87.06.24.22.45.49;	author mike;	state Rel;
branches;
next	4.2;

4.2
date	87.02.13.00.53.03;	author mike;	state Exp;
branches;
next	4.1;

4.1
date	86.12.29.02.52.09;	author mike;	state Rel1;
branches;
next	1.3;

1.3
date	86.12.26.22.37.34;	author mike;	state Exp;
branches;
next	1.2;

1.2
date	86.11.12.23.05.39;	author mike;	state Exp;
branches;
next	1.1;

1.1
date	86.11.10.23.10.50;	author mike;	state Exp;
branches;
next	;

11.4.2.1
date	2002.09.19.18.00.50;	author morrison;	state Exp;
branches;
next	;


desc
@Gary Moss' Original Version
@


11.7
log
@moved to src/fbed/
@
text
@/*
	Author:		Gary S. Moss
			U. S. Army Ballistic Research Laboratory
			Aberdeen Proving Ground
			Maryland 21005-5066
			(301)278-6651 or DSN 298-6651
*/
#if ! defined( lint )
static const char RCSid[] = "@@(#) try.c 2.1, modified 12/9/86 at 15:54:34, archive /vld/moss/src/fbed/s.try.c";
#endif

#ifdef HAVE_CONFIG_H
# include "config.h"
#endif



#include <stdio.h>
#include <assert.h>

#include "machine.h"
#include "externs.h"
#include "fb.h"

#include "./std.h"
#include "./ascii.h"
#include "./font.h"
#include "./try.h"
#include "./extern.h"

#define NewTry( p ) \
		if( ((p) = (Try *) malloc( sizeof(Try) )) == TRY_NULL ) \
			{ \
			Malloc_Bomb(); \
			}
int
add_Try(Func_Tab *ftbl, register char *name, register Try **trypp)
{	register Try	*curp;
	if( *name == NUL )
		{ /* We are finished, make leaf node. */
		NewTry( *trypp );
		(*trypp)->l.t_altr = (*trypp)->l.t_next = TRY_NULL;
		(*trypp)->l.t_ftbl = ftbl;
		return 1;
		}
	for(	curp = *trypp;
		curp != TRY_NULL && *name != curp->n.t_curr;
		curp = curp->n.t_altr
		)
		;
	if( curp == TRY_NULL )
		{ /* No Match, this level, so create new alternate. */
		curp = *trypp;
		NewTry( *trypp );
		(*trypp)->n.t_altr = curp;
		(*trypp)->n.t_curr = *name;
		(*trypp)->n.t_next = TRY_NULL;
		add_Try( ftbl, ++name, &(*trypp)->n.t_next );
		}
	else
		/* Found matching character. */
		add_Try( ftbl, ++name, &curp->n.t_next );
	return 1;
	}

Func_Tab *
get_Try(register char *name, register Try *tryp)
{	register Try *curp = NULL; /* initialize to shutup compiler. */
	/* Traverse next links to end of function name. */
	for( ; tryp != TRY_NULL; tryp = tryp->n.t_next )
		{
		curp = tryp;
		if( *name == NUL )
			{ /* End of user-typed name. */
			if( tryp->n.t_altr != TRY_NULL )
				/* Ambiguous at this point. */
				return FT_NULL;
			else	  /* Complete next character. */
				{
				*name++ = tryp->n.t_curr;
				*name = NUL;
				}
			}
		else	/* Not at end of user-typed name yet, traverse
				alternate list to find current letter.
			 */
			{
			for(	;
				tryp != TRY_NULL && *name != tryp->n.t_curr;
				tryp = tryp->n.t_altr
				)
				;
			if( tryp == TRY_NULL )
				/* Non-existant name, truncate bad part.*/
				{
				*name = NUL;
				return FT_NULL;
				}
			else
				name++;
			}
		}
	assert( curp != NULL ); /* can't happen */

	/* Clobber key-stroke, and return it. */
	--name;
	*name = NUL;
	return curp->l.t_ftbl;
	}
@


11.6
log
@change conf.h to a wrapped config.h
@
text
@@


11.5
log
@merge of ansi-6-0-branch into HEAD
@
text
@d12 5
a16 1
#include "conf.h"
@


11.4
log
@Restoration of entire source tree to Pre-Hartley state
@
text
@d33 2
a34 5
add_Try( ftbl, name, trypp )
Func_Tab	*ftbl;
register char *name;
register Try	**trypp;
	{	register Try	*curp;
d63 2
a64 4
get_Try( name, tryp )
register char *name;
register Try	*tryp;
	{	register Try *curp = NULL; /* initialize to shutup compiler. */
@


11.4.2.1
log
@Initial ANSIfication
@
text
@d33 5
a37 2
add_Try(Func_Tab *ftbl, register char *name, register Try **trypp)
{	register Try	*curp;
d66 4
a69 2
get_Try(register char *name, register Try *tryp)
{	register Try *curp = NULL; /* initialize to shutup compiler. */
@


11.3
log
@Converted from K&R to ANSI C - RFH
@
text
@d33 5
a37 2
add_Try(Func_Tab *ftbl, register char *name, register Try **trypp)
{	register Try	*curp;
d66 4
a69 2
get_Try(register char *name, register Try *tryp)
{	register Try *curp = NULL; /* initialize to shutup compiler. */
@


11.2
log
@Lint
@
text
@d33 2
a34 5
add_Try( ftbl, name, trypp )
Func_Tab	*ftbl;
register char *name;
register Try	**trypp;
	{	register Try	*curp;
d63 2
a64 4
get_Try( name, tryp )
register char *name;
register Try	*tryp;
	{	register Try *curp = NULL; /* initialize to shutup compiler. */
@


11.1
log
@Release_4.4
@
text
@d9 1
a9 2
static
char sccsTag[] = "@@(#) try.c 2.1, modified 12/9/86 at 15:54:34, archive /vld/moss/src/fbed/s.try.c";
@


10.2
log
@Made includes explicit
@
text
@@


10.1
log
@Release_4.0
@
text
@d13 2
d17 1
d20 6
d27 1
@


9.4
log
@lint
@
text
@@


9.3
log
@Added initializations of auto variables that were generating compiler
warnings.
@
text
@d15 2
@


9.2
log
@Added some commands: draw-rectangle, fill-bounded-region, print-comment,
	change-region-color, set-tolerance-color-match.
Also, default rectangle is entire window.
Checked in for release 4.0.
@
text
@d12 1
d14 1
d58 1
a58 1
	{	register Try	*curp;
d93 2
@


9.1
log
@Release_3.5
@
text
@a1 5
	SCCS id:	@@(#) try.c	2.1
	Modified: 	12/9/86 at 15:54:34
	Retrieved: 	12/26/86 at 21:54:49
	SCCS archive:	/vld/moss/src/fbed/s.try.c

d6 1
a6 1
			(301)278-6647 or AV-298-6647
d10 1
a10 1
char	sccsTag[] = "@@(#) try.c 2.1, modified 12/9/86 at 15:54:34, archive /vld/moss/src/fbed/s.try.c";
d22 1
a22 1
register char	*name;
d26 1
a26 1
		{ /* We are finished, make leaf node.			*/
d30 1
a30 1
		return	1;
d38 1
a38 1
		{ /* No Match, this level, so create new alternate.	*/
d47 1
a47 1
		/* Found matching character.				*/
d49 1
a49 1
	return	1;
d54 1
a54 1
register char	*name;
d57 1
a57 1
	/* Traverse next links to end of function name.			*/
d62 1
a62 1
			{ /* End of user-typed name.			*/
d64 3
a66 3
				/* Ambiguous at this point.		*/
				return	FT_NULL;
			else	  /* Complete next character.		*/
d85 1
a85 1
				return	FT_NULL;
d91 1
a91 1
	/* Clobber key-stroke, and return it.				*/
d94 1
a94 1
	return	curp->l.t_ftbl;
@


8.1
log
@Release_3.0
@
text
@@


7.1
log
@Release 2.3
@
text
@@


6.1
log
@Release 2.0
@
text
@@


5.1
log
@Release 1.24
@
text
@@


4.2
log
@Release 1.20 -- First Formal Release
@
text
@@


4.1
log
@BRL CAD Distribution Release 1.10
@
text
@@


1.3
log
@Latest version from Gary Moss
@
text
@@


1.2
log
@First version that compiles
@
text
@d2 4
a5 4
	SCCS id:	%Z% %M%	%I%
	Last edit: 	%G% at %U%
	Retrieved: 	%H% at %T%
	SCCS archive:	%P%
d10 3
a12 3
			Maryland 21005
			(301)278-6647 or AV-283-6647
 */
d15 1
a15 1
char	sccsTag[] = "%Z% %M%	%I%	last edit %G% at %U%";
a17 2
#include "./ascii.h"
#include "./try.h"
@


1.1
log
@Initial revision
@
text
@d18 3
a20 3
#include <rt/ascii.h>
#include "try.h"
#include "extern.h"
@
