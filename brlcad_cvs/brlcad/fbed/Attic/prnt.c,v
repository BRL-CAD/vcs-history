head	11.9;
access;
symbols
	ansi-20040405-merged:11.6.2.1
	postmerge-20040405-ansi:11.7
	premerge-20040404-ansi:11.6
	postmerge-autoconf:11.6
	autoconf-freeze:11.6
	premerge-autoconf:11.6
	ansi-20040316-freeze:11.6.2.1
	postmerge-20040315-windows:11.6
	premerge-20040315-windows:11.6
	windows-20040315-freeze:11.6
	autoconf-20031203:11.6
	autoconf-20031202:11.6
	autoconf-branch:11.6.0.10
	phong-branch:11.6.0.8
	photonmap-branch:11.6.0.6
	rel-6-1-DP:11.6
	windows-branch:11.6.0.4
	rel-6-0-2:11.4
	ansi-branch:11.6.0.2
	rel-6-0-1-branch:11.4.0.2
	hartley-6-0-post:11.5
	hartley-6-0-pre:11.4
	rel-6-0-1:11.4
	rel-6-0:11.4
	rel-5-4:11.2
	offsite-5-3-pre:11.3
	rel-5-3:11.2
	rel-5-2:11.2
	rel-5-1-branch:11.2.0.2
	rel-5-1:11.2
	rel-5-0:11.2
	rel-5-0-beta:11.2
	rel-4-5:11.2
	ctj-4-5-post:11.2
	ctj-4-5-pre:11.2
	rel-4-4:11.1
	rel-4-0:10.1
	rel-3-5:9.1
	rel-3-0:8.1
	rel-2-3:7.1
	rel-2-0:5.1
	rel-1-24:5.1
	rel-1-20:4.2
	rel-1-10:4.1;
locks; strict;
comment	@ * @;


11.9
date	2004.05.24.04.13.10;	author morrison;	state dead;
branches;
next	11.8;

11.8
date	2004.05.10.15.30.42;	author erikg;	state Exp;
branches;
next	11.7;

11.7
date	2004.04.05.07.52.17;	author morrison;	state Exp;
branches;
next	11.6;

11.6
date	2002.08.20.17.07.28;	author jra;	state Exp;
branches
	11.6.2.1;
next	11.5;

11.5
date	2002.08.15.20.54.41;	author hartley;	state Exp;
branches;
next	11.4;

11.4
date	2001.08.09.17.45.25;	author jra;	state Exp;
branches;
next	11.3;

11.3
date	2000.08.24.22.55.36;	author mike;	state Exp;
branches;
next	11.2;

11.2
date	96.07.17.12.41.27;	author jra;	state Exp;
branches;
next	11.1;

11.1
date	95.01.04.10.13.56;	author mike;	state Rel4_4;
branches;
next	10.2;

10.2
date	94.08.23.19.36.39;	author gdurf;	state Exp;
branches;
next	10.1;

10.1
date	91.10.12.06.49.42;	author mike;	state Rel4_0;
branches;
next	9.4;

9.4
date	90.11.26.11.19.54;	author moss;	state Exp;
branches;
next	9.3;

9.3
date	89.09.19.16.34.30;	author moss;	state Exp;
branches;
next	9.2;

9.2
date	89.05.19.21.31.11;	author mike;	state Exp;
branches;
next	9.1;

9.1
date	89.05.19.06.12.19;	author mike;	state Rel3_5;
branches;
next	8.1;

8.1
date	88.10.05.00.50.13;	author mike;	state Rel3_0;
branches;
next	7.2;

7.2
date	88.09.17.06.52.15;	author mike;	state Exp;
branches;
next	7.1;

7.1
date	87.11.03.00.10.57;	author mike;	state Rel;
branches;
next	6.1;

6.1
date	87.07.11.08.14.29;	author mike;	state Rel;
branches;
next	5.1;

5.1
date	87.06.24.22.45.39;	author mike;	state Rel;
branches;
next	4.4;

4.4
date	87.06.23.12.15.48;	author moss;	state Exp;
branches;
next	4.3;

4.3
date	87.06.19.09.27.00;	author moss;	state Exp;
branches;
next	4.2;

4.2
date	87.02.13.00.52.53;	author mike;	state Exp;
branches;
next	4.1;

4.1
date	86.12.29.02.52.00;	author mike;	state Rel1;
branches;
next	1.3;

1.3
date	86.12.26.22.37.22;	author mike;	state Exp;
branches;
next	1.2;

1.2
date	86.11.12.23.05.33;	author mike;	state Exp;
branches;
next	1.1;

1.1
date	86.11.10.23.10.48;	author mike;	state Exp;
branches;
next	;

11.6.2.1
date	2002.09.19.18.00.50;	author morrison;	state Exp;
branches;
next	;


desc
@Gary Moss' Original Version
@


11.9
log
@moved to src/fbed/
@
text
@/*
	Author:		Gary S. Moss
			U. S. Army Ballistic Research Laboratory
			Aberdeen Proving Ground
			Maryland 21005-5066
			(301)278-6651 or DSN 298-6651
*/
#ifndef lint
static const char RCSid[] = "@@(#)$Header: /n/xoff/cvs/brlcad/fbed/prnt.c,v 11.8 2004/05/10 15:30:42 erikg Exp $ (BRL)";
#endif

#ifdef HAVE_CONFIG_H
# include "config.h"
#endif



#include <stdio.h>
#ifdef USE_STRING_H
#include <string.h>
#else
#include <strings.h>
#endif
#ifdef HAVE_STDARG_H
#include <stdarg.h>
#else
#include <varargs.h>
#endif

#include "machine.h"
#include "externs.h"
#include "fb.h"

#include "./std.h"
#include "./ascii.h"
#include "./font.h"
#include "./try.h"
#include "./extern.h"

#define PIXEL_MOVE()		MvCursor( 7, 1 )
#define PAINT_MOVE()		MvCursor( 26, 1 )
#define STRIDE_MOVE()		MvCursor( 46, 1 )
#define BRUSH_SIZE_MOVE()	MvCursor( 63, 1 )
#define CURSOR_POS_MOVE()	MvCursor( 15, 2 )
#define PROMPT_MOVE()		MvCursor( 1, PROMPT_LINE )
#define ERROR_MOVE()		MvCursor( 1, PROMPT_LINE + 1 )
#define SCROLL_PR_MOVE()	MvCursor( 1, PROMPT_LINE - 1 )
#define SCROLL_DL_MOVE()	MvCursor( 1, BOTTOM_STATUS_AREA + 1 )

static char *usage[] =
	{
	"",
	"fbed (2.1)",
	"",
	"Usage: fbed [-hp]",
	"",
	"options : -h   use high resolution display",
	"          -p   open the GTCO bit pad",
	0
	};

void init_Status(void);
void prnt_Status(void), prnt_Usage(void);
#if __STDC__
void prnt_Event(char *fmt, ...);
#else
void prnt_Event();
#endif
void prnt_Prompt(char *msg);
void prnt_Macro(register char *bufp);
void prnt_Rectangle(char *str, register Rectangle *rectp);
/**void prnt_FBC();**/

/*	p r n t _ S t a t u s ( ) */
void
prnt_Status(void)
{	RGBpixel pixel;
	if( ! tty )
		return;
	fb_Get_Pixel( pixel );
	PIXEL_MOVE();
	(void) printf( "%3d %3d %3d", pixel[RED], pixel[GRN], pixel[BLU] );
	PAINT_MOVE();
	(void) printf( "%3d %3d %3d", paint[RED], paint[GRN], paint[BLU] );
	STRIDE_MOVE();
	(void) printf( "%4d", gain );
	BRUSH_SIZE_MOVE();
	(void) printf( "%4d", brush_sz );
	CURSOR_POS_MOVE();
	(void) SetStandout();
	(void) printf( " line [%4d] column [%4d] ", cursor_pos.p_y, cursor_pos.p_x );
	(void) ClrStandout();
	PROMPT_MOVE();
	(void) fflush( stdout );
	return;
	}
	
static char *screen_template[] = {
/*        1         2         3         4         5         6         7         8
012345678901234567890123456789012345678901234567890123456789012345678901234567890
 */
"Pixel[           ] Paint[           ] Stride[    ] Brush Size[    ]",
"-- FBED 2.1 -------------------------------------------------------------------",
0
};		

/*	i n i t _ S t a t u s ( ) */
void
init_Status(void)
{	register char **p = screen_template;
		register int template_co;
		char buf[MAX_LN];
		extern int CO;
	template_co = Min( CO, MAX_LN );
	if( ! tty )
		return;
	(void) ClrText();
	(void) HmCursor();
	while( *(p+1) )
		{
		(void) strncpy( buf, *p++, template_co );
		buf[template_co-1] = '\0';
		(void) printf( "%s\n\r", buf );
		}
	/* Last line is reverse-video if possible. */
	(void) SetStandout();
	(void) strncpy( buf, *p++, template_co );
	buf[template_co-1] = '\0';
	(void) printf( "%s\n\r", buf );
	(void) ClrStandout();
	(void) fflush( stdout );
	return;
	}

/*	p r n t _ U s a g e ( )
	Print usage message.
 */
void
prnt_Usage(void)
{	register char **p = usage;
	while( *p )
		(void) fprintf( stderr, "%s\n", *p++ );
	return;
	}


/*	p r n t _ P i x e l ( ) */
void
prnt_Pixel(char *msg, RGBpixel (*pixelp))
{
	prnt_Scroll(	"%s {%03d,%03d,%03d}",
			msg,
			pixelp[RED],
			pixelp[GRN],
			pixelp[BLU]
			);
	return;
	}

#if defined(HAVE_STDARG_H)
#define Va_Decl( _func )	_func(char *fmt, ...)
#define Va_Start()		va_list	ap; va_start( ap, fmt )
#define Va_End()		va_end( ap )
#define Va_Print( _p )		(void) vfprintf( _p, fmt, ap )
#else
#if !defined(HAVE_VARARGS_H)
#define Va_Decl( _func )	_func(fmt, a,b,c,d,e,f,g,h,i) char *fmt;
#define Va_Start()
#define Va_End()
#define Va_Print( _p )		(void) fprintf( _p, fmt, a,b,c,d,e,f,g,h,i )
#else
#define Va_Decl( _func )	_func(fmt, va_alist) char *fmt; va_dcl
#define Va_Start()		va_list	ap; va_start( ap )
#define Va_End()		va_end( ap )
#define Va_Print( _p )		(void) _doprnt( fmt, ap, _p )
#endif
#endif
/* VARARGS */
void
Va_Decl( fb_log )
	{	extern char *DL, *CS;
	Va_Start();
	if( tty )
		{
		if( DL != NULL )
			{
			SCROLL_DL_MOVE();
			DeleteLn();
			SCROLL_PR_MOVE();
			ClrEOL();
			Va_Print( stdout );
			}
		else
		if( CS != NULL )
			{ /* This scrolling region stuff doesn't work
				correctly (XXX). */
			SetScrlReg( TOP_SCROLL_WIN, PROMPT_LINE - 1 );
			SCROLL_PR_MOVE();
			ClrEOL();
			Va_Print( stdout );
			ResetScrlReg();
			}
		else
			Va_Print( stdout );
		}
	else
		{
		Va_Print( stdout );
		(void) printf( "\n" );
		}
	Va_End();
	(void) fflush( stdout );
	return;
	}

/* VARARGS */
void
Va_Decl( prnt_Scroll )
	{	extern char *DL, *CS;
	Va_Start();
	if( tty )
		{
		if( DL != NULL )
			{
			SCROLL_DL_MOVE();
			DeleteLn();
			SCROLL_PR_MOVE();
			ClrEOL();
			Va_Print( stdout );
			}
		else
		if( CS != NULL )
			{ /* This scrolling region stuff doesn't work
				correctly (XXX). */
			SetScrlReg( TOP_SCROLL_WIN, PROMPT_LINE - 1 );
			SCROLL_PR_MOVE();
			ClrEOL();
			Va_Print( stdout );
			ResetScrlReg();
			}
		else
			Va_Print( stdout );
		}
	else
		{
		Va_Print( stdout );	
		(void) printf( "\n" );
		}
	Va_End();
	return;
	}

/*	p r n t _ D e b u g ( ) */
/* VARARGS */
void
Va_Decl( prnt_Debug )
	{
	Va_Start();
	if( tty )
		{
		ERROR_MOVE();
		ClrEOL();
		SetStandout();
		Va_Print( stdout );
		ClrStandout();
		(void) fflush( stdout );
		}
	else
		{
		Va_Print( stderr );
	 	(void) fprintf( stderr, "\n" );
		}
	Va_End();
	return;
	}

/* VARARGS */
void
Va_Decl( prnt_Event )
	{
	Va_Start();
	if( tty )
		{
		ERROR_MOVE();
		ClrEOL();
		SetStandout();
		Va_Print( stdout );
		ClrStandout();
		(void) fflush( stdout );
		}
	else
		{
		Va_Print( stderr );
		(void) fprintf( stderr, "\n" );
		}
	Va_End();
	return;
	}

#ifdef never
void
prnt_FBC()
	{	extern struct ik_fbc	ikfbcmem;
	prnt_Scroll(	"viewport:\t\tx [%4d]\ty [%4d]\n",
			ikfbcmem.fbc_xviewport,
			ikfbcmem.fbc_yviewport
			);
	prnt_Scroll(	"view size:\t\tx [%4d]\ty [%4d]\n",
			ikfbcmem.fbc_xsizeview,
			ikfbcmem.fbc_ysizeview
			);
	prnt_Scroll(	"window offsets:\t\tx [%4d]\ty [%4d]\n",
			ikfbcmem.fbc_xwindow,
			ikfbcmem.fbc_ywindow
			);
	prnt_Scroll(	"zoom factor:\t\tx [%4d]\ty [%4d]\n",
			ikfbcmem.fbc_xzoom,
			ikfbcmem.fbc_yzoom
			);
	prnt_Scroll(	"display rate cntrl:\th [%4d]\tv [%4d]\n",
			ikfbcmem.fbc_horiztime,
			ikfbcmem.fbc_nlines
			);
	prnt_Scroll(	"video control:\t\tL [%4d]\tH [%4d]\n",
			ikfbcmem.fbc_Lcontrol,
			ikfbcmem.fbc_Hcontrol
			);
	prnt_Scroll(	"cursor position:\tx [%4d]\ty [%4d]\n",
			ikfbcmem.fbc_xcursor,
			ikfbcmem.fbc_ycursor
			);
	return;
	}
#endif

void
prnt_Prompt(char *msg)
{
	PROMPT_MOVE();
	(void) ClrEOL();
	(void) printf( "%s", msg );
	(void) fflush( stdout );
	return;
	}

void
prnt_Macro(register char *bufp)
{	char prnt_buf[BUFSIZ];
		register char *p;
	for( p = prnt_buf; *bufp != '\0'; bufp++ )
		{
		switch( *bufp )
			{
		case ESC :
			*p++ = 'M';
			*p++ = '-';
			break;
		case CR :
			*p++ = '\\';
			*p++ = 'r';
			break;
		case LF :
			*p++ = '\\';
			*p++ = 'n';
			break;
		default :
			*p++ = *bufp;
			break;
			}
		}
	*p = NUL;
	prnt_Scroll( "Macro buffer \"%s\".", prnt_buf );
	return;
	}

void
prnt_Rectangle(char *str, register Rectangle *rectp)
{
	prnt_Scroll(	"%s {<%d,%d>,<%d,%d>}\n",
			str,
			rectp->r_origin.p_x,
			rectp->r_origin.p_y,
			rectp->r_corner.p_x,
			rectp->r_corner.p_y
			);
	(void) fflush( stdout );
	return;
	}
@


11.8
log
@change conf.h to a wrapped config.h
@
text
@d9 1
a9 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/fbed/prnt.c,v 11.7 2004/04/05 07:52:17 morrison Exp $ (BRL)";
@


11.7
log
@merge of ansi-6-0-branch into HEAD
@
text
@d9 1
a9 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
d12 5
a16 1
#include "conf.h"
@


11.6
log
@Restoration of entire source tree to Pre-Hartley state
@
text
@d9 1
a9 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/fbed/prnt.c,v 11.4 2001/08/09 17:45:25 jra Exp $ (BRL)";
d58 2
a59 2
void init_Status();
void prnt_Status(), prnt_Usage();
d65 3
a67 3
void prnt_Prompt();
void prnt_Macro();
void prnt_Rectangle();
d72 2
a73 2
prnt_Status()
	{	RGBpixel pixel;
d105 2
a106 2
init_Status()
	{	register char **p = screen_template;
d135 2
a136 2
prnt_Usage()
	{	register char **p = usage;
d145 2
a146 4
prnt_Pixel( msg, pixelp )
char *msg;
RGBpixel *pixelp;
	{
d333 2
a334 3
prnt_Prompt( msg )
char *msg;
	{
d343 2
a344 3
prnt_Macro( bufp )
register char *bufp;
	{	char prnt_buf[BUFSIZ];
d373 2
a374 4
prnt_Rectangle( str, rectp )
char *str;
register Rectangle *rectp;
	{
@


11.6.2.1
log
@Initial ANSIfication
@
text
@d9 1
a9 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/fbed/prnt.c,v 11.6 2002/08/20 17:07:28 jra Exp $ (BRL)";
d58 2
a59 2
void init_Status(void);
void prnt_Status(void), prnt_Usage(void);
d65 3
a67 3
void prnt_Prompt(char *msg);
void prnt_Macro(register char *bufp);
void prnt_Rectangle(char *str, register Rectangle *rectp);
d72 2
a73 2
prnt_Status(void)
{	RGBpixel pixel;
d105 2
a106 2
init_Status(void)
{	register char **p = screen_template;
d135 2
a136 2
prnt_Usage(void)
{	register char **p = usage;
d145 4
a148 2
prnt_Pixel(char *msg, RGBpixel (*pixelp))
{
d335 3
a337 2
prnt_Prompt(char *msg)
{
d346 3
a348 2
prnt_Macro(register char *bufp)
{	char prnt_buf[BUFSIZ];
d377 4
a380 2
prnt_Rectangle(char *str, register Rectangle *rectp)
{
@


11.5
log
@Converted from K&R to ANSI C - RFH
@
text
@d58 2
a59 2
void init_Status(void);
void prnt_Status(void), prnt_Usage(void);
d65 3
a67 3
void prnt_Prompt(char *msg);
void prnt_Macro(register char *bufp);
void prnt_Rectangle(char *str, register Rectangle *rectp);
d72 2
a73 2
prnt_Status(void)
{	RGBpixel pixel;
d105 2
a106 2
init_Status(void)
{	register char **p = screen_template;
d135 2
a136 2
prnt_Usage(void)
{	register char **p = usage;
d145 4
a148 2
prnt_Pixel(char *msg, RGBpixel (*pixelp))
{
d335 3
a337 2
prnt_Prompt(char *msg)
{
d346 3
a348 2
prnt_Macro(register char *bufp)
{	char prnt_buf[BUFSIZ];
d377 4
a380 2
prnt_Rectangle(char *str, register Rectangle *rectp)
{
@


11.4
log
@Lint
@
text
@d9 1
a9 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/fbed/prnt.c,v 11.3 2000/08/24 22:55:36 mike Exp $ (BRL)";
d58 2
a59 2
void init_Status();
void prnt_Status(), prnt_Usage();
d65 3
a67 3
void prnt_Prompt();
void prnt_Macro();
void prnt_Rectangle();
d72 2
a73 2
prnt_Status()
	{	RGBpixel pixel;
d105 2
a106 2
init_Status()
	{	register char **p = screen_template;
d135 2
a136 2
prnt_Usage()
	{	register char **p = usage;
d145 2
a146 4
prnt_Pixel( msg, pixelp )
char *msg;
RGBpixel *pixelp;
	{
d333 2
a334 3
prnt_Prompt( msg )
char *msg;
	{
d343 2
a344 3
prnt_Macro( bufp )
register char *bufp;
	{	char prnt_buf[BUFSIZ];
d373 2
a374 4
prnt_Rectangle( str, rectp )
char *str;
register Rectangle *rectp;
	{
@


11.3
log
@
RCSid
@
text
@d9 1
a9 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/fbed/prnt.c,v 11.2 1996/07/17 12:41:27 jra Exp $ (BRL)";
d15 5
@


11.2
log
@Minor Mods for IRIX 6.2
@
text
@d9 1
a9 1
static char RCSid[] = "@@(#)$Header: /m/cad/fbed/RCS/prnt.c,v 11.1 1995/01/04 10:13:56 mike Rel4_4 jra $ (BRL)";
@


11.1
log
@Release_4.4
@
text
@d9 1
a9 1
static char RCSid[] = "@@(#)$Header: /m/cad/fbed/RCS/prnt.c,v 10.2 94/08/23 19:36:39 gdurf Exp $ (BRL)";
d146 3
a148 3
			(int) pixelp[RED],
			(int) pixelp[GRN],
			(int) pixelp[BLU]
@


10.2
log
@Made includes explicit, factored ifdefs
@
text
@d9 1
a9 1
static char RCSid[] = "@@(#)$Header: /m/cad/fbed/RCS/prnt.c,v 10.1 1991/10/12 06:49:42 mike Rel4_0 gdurf $ (BRL)";
@


10.1
log
@Release_4.0
@
text
@d9 1
a9 1
static char RCSid[] = "@@(#)$Header: /m/cad/fbed/RCS/prnt.c,v 9.4 90/11/26 11:19:54 moss Exp $ (BRL)";
d12 2
d15 14
d153 1
a153 2
#if __STDC__
#include <stdarg.h>
d159 1
a159 2
#include <varargs.h>
#ifdef CRAY
@


9.4
log
@Added some commands: draw-rectangle, fill-bounded-region, print-comment,
	change-region-color, set-tolerance-color-match.
Also, default rectangle is entire window.
Checked in for release 4.0.
@
text
@d9 1
a9 1
static char RCSid[] = "@@(#)$Header: prnt.c,v 9.3 89/09/19 16:34:30 moss Locked $ (BRL)";
@


9.3
log
@Rearranged scrolling print routines to use delete-line capability if
it exists before scrolling regions (which don't work).
@
text
@d6 1
a6 1
			(301)278-6647 or AV-298-6647
d9 1
a9 1
static char RCSid[] = "@@(#)$Header: prnt.c,v 9.2 89/05/19 21:31:11 moss Locked $ (BRL)";
d25 1
a25 1
static char	*usage[] =
d37 2
a38 2
void	init_Status();
void	prnt_Status(), prnt_Usage();
d40 1
a40 1
void	prnt_Event(char *fmt, ...);
d42 1
a42 1
void	prnt_Event();
d44 4
a47 4
void	prnt_Prompt();
void	prnt_Macro();
void	prnt_Rectangle();
/**void	prnt_FBC();**/
d49 1
a49 1
/*	p r n t _ S t a t u s ( )					*/
d52 1
a52 1
	{	RGBpixel		pixel;
d73 1
a73 1
static char	*screen_template[] = {
d82 1
a82 1
/*	i n i t _ S t a t u s ( )					*/
d85 4
a88 4
	{	register char	**p = screen_template;
		register int	template_co;
		char		buf[MAX_LN];
		extern int	CO;
d100 1
a100 1
	/* Last line is reverse-video if possible.			*/
d115 1
a115 1
	{	register char	**p = usage;
d122 1
a122 1
/*	p r n t _ P i x e l ( )						*/
d125 2
a126 2
char	*msg;
RGBpixel	*pixelp;
d160 1
a160 1
	{	extern char	*DL, *CS;
d198 1
a198 1
	{	extern char	*DL, *CS;
d232 1
a232 1
/*	p r n t _ D e b u g ( )						*/
d317 1
a317 1
char	*msg;
d328 3
a330 3
register char	*bufp;
	{	char	prnt_buf[BUFSIZ];
		register char	*p;
d360 1
a360 1
register Rectangle	*rectp;
@


9.2
log
@Fixes for STDC
@
text
@d9 1
a9 1
static char RCSid[] = "@@(#)$Header: prnt.c,v 9.1 89/05/19 06:12:19 mike Locked $ (BRL)";
d164 1
a164 1
		if( CS != NULL )
d166 2
a167 1
			SetScrlReg( TOP_SCROLL_WIN, PROMPT_LINE - 1 );
a170 1
			ResetScrlReg();
d173 4
a176 4
		if( DL != NULL )
			{
			SCROLL_DL_MOVE();
			DeleteLn();
d180 1
d202 1
a202 1
		if( CS != NULL )
d204 2
a205 1
			SetScrlReg( TOP_SCROLL_WIN, PROMPT_LINE - 1 );
a208 1
			ResetScrlReg();
d211 4
a214 4
		if( DL != NULL )
			{
			SCROLL_DL_MOVE();
			DeleteLn();
d218 1
@


9.1
log
@Release_3.5
@
text
@d9 1
a9 1
static char RCSid[] = "@@(#)$Header: prnt.c,v 8.1 88/10/05 00:50:13 mike Rel3_0 $ (BRL)";
d38 6
a43 1
void	prnt_Status(), prnt_Usage(), prnt_Event(), prnt_Scroll();
d137 7
d155 1
@


8.1
log
@Release_3.0
@
text
@d9 1
a9 1
static char RCSid[] = "@@(#)$Header: prnt.c,v 7.2 88/09/17 06:52:15 moss Locked $ (BRL)";
@


7.2
log
@cray-->CRAY
@
text
@d9 1
a9 1
static char RCSid[] = "@@(#)$Header: prnt.c,v 7.1 87/11/03 00:10:57 mike Locked $ (BRL)";
@


7.1
log
@Release 2.3
@
text
@d9 1
a9 1
static char RCSid[] = "@@(#)$Header: prnt.c,v 6.1 87/07/11 08:14:29 mike Rel $ (BRL)";
d133 1
a133 1
#ifdef cray
@


6.1
log
@Release 2.0
@
text
@d9 1
a9 1
static char RCSid[] = "@@(#)$Header: prnt.c,v 5.1 87/06/24 22:45:39 mike Rel $ (BRL)";
@


5.1
log
@Release 1.24
@
text
@d9 1
a9 1
static char RCSid[] = "@@(#)$Header: prnt.c,v 4.4 87/06/23 12:15:48 moss Exp $ (BRL)";
@


4.4
log
@Fixed varargs stuff for CRAY portability.
@
text
@d9 1
a9 1
static char RCSid[] = "@@(#)$Header$ (BRL)";
@


4.3
log
@Misc. improvements.
@
text
@a1 5
	SCCS id:	@@(#) prnt.c	2.1
	Modified: 	12/9/86 at 15:55:34
	Retrieved: 	12/26/86 at 21:54:38
	SCCS archive:	/vld/moss/src/fbed/s.prnt.c

d8 2
a9 3
#if ! defined( lint )
static
char	sccsTag[] = "@@(#) prnt.c 2.1, modified 12/9/86 at 15:55:34, archive /vld/moss/src/fbed/s.prnt.c";
d11 1
d133 11
d146 1
a146 3
fb_log( fmt, va_alist )
char	*fmt;
va_dcl
d148 1
a148 3
		va_list		ap;
	/* We use the same lock as malloc.  Sys-call or mem lock, really */
	va_start( ap );
d156 1
a156 1
			(void) _doprnt( fmt, ap, stdout );
d166 1
a166 1
			(void) _doprnt( fmt, ap, stdout );
d169 1
a169 1
			(void) _doprnt( fmt, ap, stdout );
d173 1
a173 1
		(void) _doprnt( fmt, ap, stdout );
d176 1
a176 1
	va_end( ap );
a180 1
/*	p r n t _ S c r o l l ( )					*/
d183 1
a183 3
prnt_Scroll( fmt, va_alist )
char	*fmt;
va_dcl
d185 1
a185 3
		va_list		ap;
	/* We use the same lock as malloc.  Sys-call or mem lock, really */
	va_start( ap );
d193 1
a193 1
			(void) _doprnt( fmt, ap, stdout );
d203 1
a203 1
			(void) _doprnt( fmt, ap, stdout );
d206 1
a206 1
			(void) _doprnt( fmt, ap, stdout );
d210 1
a210 1
		(void) _doprnt( fmt, ap, stdout );
d213 1
a213 1
	va_end( ap );
d220 3
a222 5
prnt_Event( fmt, va_alist )
char	*fmt;
va_dcl
	{	va_list		ap;
	va_start( ap );
d228 1
a228 1
		(void) _doprnt( fmt, ap, stdout );
d234 24
a257 1
		(void) _doprnt( fmt, ap, stderr );
d260 1
a260 1
	va_end( ap );
@


4.2
log
@Release 1.20 -- First Formal Release
@
text
@d336 1
@


4.1
log
@BRL CAD Distribution Release 1.10
@
text
@@


1.3
log
@Latest version from Gary Moss
@
text
@@


1.2
log
@First version that compiles
@
text
@d2 4
a5 4
	SCCS id:	%Z% %M%	%I%
	Last edit: 	%G% at %U%
	Retrieved: 	%H% at %T%
	SCCS archive:	%P%
d10 3
a12 3
			Maryland 21005
			(301)278-6647 or AV-283-6647
 */
d15 1
a15 1
char	sccsTag[] = "%Z% %M%	%I%	last edit %G% at %U%";
a16 1

a17 3
#include "fb.h"
#include "./std.h"
#include "./popup.h"
d33 1
a33 1
	"fbed (%I%)",
d43 1
a43 1
void	prnt_Status(), prnt_Usage(), prnt_Debug(), prnt_Scroll();
d46 1
d78 1
a78 1
"-- FBED %I% -------------------------------------------------------------------",
d128 1
a128 1
	prnt_Scroll(	"%s : %03d %03d %03d %03d",
d132 1
a132 2
			(int) pixelp[BLU],
			0
d138 41
d223 1
a223 1
prnt_Debug( fmt, va_alist )
d321 15
@


1.1
log
@Initial revision
@
text
@d17 1
d19 2
a20 2
#include <std.h>
#include <fb.h>
d23 1
d50 1
a50 1
void	prnt_FBC();
d55 1
a55 1
	{	Pixel		pixel;
d58 1
a58 1
	fb_Get_Pixel( &pixel );
d60 1
a60 1
	(void) printf( "%3d %3d %3d", pixel.red, pixel.green, pixel.blue );
d62 1
a62 1
	(void) printf( "%3d %3d %3d", paint.red, paint.green, paint.blue );
d129 1
a129 1
Pixel	*pixelp;
d133 4
a136 4
			(int) pixelp->red,
			(int) pixelp->green,
			(int) pixelp->blue,
			(int) pixelp->spare
d209 1
a209 1
#include "fb_ik.h"
d243 1
@
