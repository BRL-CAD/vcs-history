head	11.6;
access;
symbols
	ansi-20040405-merged:11.4.2.1
	postmerge-20040405-ansi:11.5
	premerge-20040404-ansi:11.4
	postmerge-autoconf:11.4
	autoconf-freeze:11.4
	premerge-autoconf:11.4
	ansi-20040316-freeze:11.4.2.1
	postmerge-20040315-windows:11.4
	premerge-20040315-windows:11.4
	windows-20040315-freeze:11.4
	autoconf-20031203:11.4
	autoconf-20031202:11.4
	autoconf-branch:11.4.0.10
	phong-branch:11.4.0.8
	photonmap-branch:11.4.0.6
	rel-6-1-DP:11.4
	windows-branch:11.4.0.4
	rel-6-0-2:11.2
	ansi-branch:11.4.0.2
	rel-6-0-1-branch:11.2.0.2
	hartley-6-0-post:11.3
	hartley-6-0-pre:11.2
	rel-6-0-1:11.2
	rel-6-0:11.2
	rel-5-4:11.1
	offsite-5-3-pre:11.1
	rel-5-3:11.1
	rel-5-2:11.1
	rel-5-1-branch:11.1.0.2
	rel-5-1:11.1
	rel-5-0:11.1
	rel-5-0-beta:11.1
	rel-4-5:11.1
	ctj-4-5-post:11.1
	ctj-4-5-pre:11.1
	rel-4-4:11.1
	rel-4-0:10.1
	rel-3-5:9.1
	rel-3-0:8.1
	rel-2-3:7.1
	rel-2-0:5.1
	rel-1-24:5.1
	rel-1-20:4.3
	rel-1-10:4.1;
locks; strict;
comment	@ * @;


11.6
date	2004.05.24.04.13.10;	author morrison;	state dead;
branches;
next	11.5;

11.5
date	2004.04.05.07.52.17;	author morrison;	state Exp;
branches;
next	11.4;

11.4
date	2002.08.20.17.07.27;	author jra;	state Exp;
branches
	11.4.2.1;
next	11.3;

11.3
date	2002.08.15.20.54.40;	author hartley;	state Exp;
branches;
next	11.2;

11.2
date	2001.08.09.17.45.24;	author jra;	state Exp;
branches;
next	11.1;

11.1
date	95.01.04.10.13.48;	author mike;	state Rel4_4;
branches;
next	10.4;

10.4
date	94.08.25.17.57.57;	author gdurf;	state Exp;
branches;
next	10.3;

10.3
date	94.08.23.19.46.57;	author gdurf;	state Exp;
branches;
next	10.2;

10.2
date	91.12.13.10.58.36;	author moss;	state Exp;
branches;
next	10.1;

10.1
date	91.10.12.06.49.35;	author mike;	state Rel4_0;
branches;
next	9.5;

9.5
date	91.06.12.22.47.28;	author mike;	state Exp;
branches;
next	9.4;

9.4
date	91.06.12.22.42.14;	author moss;	state Exp;
branches;
next	9.3;

9.3
date	90.11.26.11.17.17;	author moss;	state Exp;
branches;
next	9.2;

9.2
date	89.05.19.21.23.22;	author mike;	state Exp;
branches;
next	9.1;

9.1
date	89.05.19.06.12.05;	author mike;	state Rel3_5;
branches;
next	8.2;

8.2
date	89.03.17.14.49.34;	author moss;	state Exp;
branches;
next	8.1;

8.1
date	88.10.05.00.49.59;	author mike;	state Rel3_0;
branches;
next	7.1;

7.1
date	87.11.03.00.10.26;	author mike;	state Rel;
branches;
next	6.1;

6.1
date	87.07.11.08.13.54;	author mike;	state Rel;
branches;
next	5.1;

5.1
date	87.06.24.22.44.58;	author mike;	state Rel;
branches;
next	4.4;

4.4
date	87.06.19.09.28.09;	author moss;	state Exp;
branches;
next	4.3;

4.3
date	87.02.13.00.52.15;	author mike;	state Exp;
branches;
next	4.2;

4.2
date	87.01.05.17.07.39;	author moss;	state Exp;
branches;
next	4.1;

4.1
date	86.12.29.02.51.25;	author mike;	state Rel1;
branches;
next	1.3;

1.3
date	86.12.26.22.36.03;	author mike;	state Exp;
branches;
next	1.2;

1.2
date	86.11.12.23.03.13;	author mike;	state Exp;
branches;
next	1.1;

1.1
date	86.11.10.23.10.22;	author mike;	state Exp;
branches;
next	;

11.4.2.1
date	2002.09.19.18.00.49;	author morrison;	state Exp;
branches;
next	;


desc
@Gary Moss' Original Version
@


11.6
log
@moved to src/fbed/
@
text
@/*
	Author:		Gary S. Moss
			U. S. Army Ballistic Research Laboratory
			Aberdeen Proving Ground
			Maryland 21005-5066
			(301)278-6651 or DSN 298-6651
*/

/* Set pre-processor switch for getting signal() handler declarations right.
 */

#if defined(sun) && ! defined(SunOS4)
/* For Suns running older releases, compile with -DSunOS4=0 to suppress
	bogus warning messages. */
#define SunOS4	1
#endif
#if __STDC__ || (defined(SYSV) && ! defined(cray)) || SunOS4
#define STD_SIGNAL_DECLS 1
#else
#define STD_SIGNAL_DECLS 0
#endif

/*
 * Note: all files that include this one should have the following set of
 *       includes *before* #include "./extern.h".
 *
 * #include "fb.h"
 *
 * #include "./std.h"
 * #include "./ascii.h"
 * #include "./font.h"
 * #include "./try.h"
 *
 */

/* For production use, set to "static" */
#ifndef STATIC
#define STATIC static
#endif

typedef struct
	{
	int p_x;
	int p_y;
	}
Point;

typedef struct
	{
	Point r_origin;
	Point r_corner;
	}
Rectangle;

typedef struct
	{
	RGBpixel *n_buf;
	int n_wid;
	int n_hgt;
	}
Panel;

extern FBIO *fbp;
extern RGBpixel *menu_addr;
extern RGBpixel paint;
extern Point cursor_pos;
extern Point image_center;
extern Point windo_center;
extern Point windo_anchor;
extern Try *try_rootp;
extern bool isSGI;
extern char cread_buf[BUFSIZ*10], *cptr;
extern char macro_buf[];
extern char *macro_ptr;
extern int brush_sz;
extern int gain;
extern int pad_flag;
extern int remembering;
extern int report_status;
extern int reposition_cursor;
extern int tty;
extern int tty_fd;
extern int zoom_factor;
extern int LI, CO;

extern Func_Tab	*get_Func_Name(char *inbuf, int bufsz, char *msg);
extern RGBpixel *get_Fb_Panel();
extern char *char_To_String(int i);
extern int add_Try(Func_Tab *ftbl, register char *name, register Try **trypp);
extern int bitx(register char *bitstring, register int posn);
extern int fb_Init_Menu();
extern int getpos(Point *pos);
extern int get_Input(char *inbuf, int bufsz, char *msg);
extern void fb_Get_Pixel(unsigned char *pixel);
extern void pos_close();
extern void init_Status(void);
extern void init_Tty(void), restore_Tty(void);
extern void prnt_Status(void);
extern void prnt_Usage(void);
#if __STDC__
extern void prnt_Scroll( char * fmt, ... );
extern void prnt_Event( char *fmt, ... );
#else
extern void prnt_Event();
extern void prnt_Scroll();
#endif
extern void prnt_Rectangle(char *str, register Rectangle *rectp);
extern void do_Key_Cmd(register int key, register int n);
extern int InitTermCap();
extern int get_Font(char *fontname);
extern void prnt_Prompt(char *msg);
extern int empty(int fd);
extern int get_Char(void);
extern int get_Mouse_Pos(Point *pointp);
extern int SetStandout();
extern int ClrStandout();
extern int exec_Shell(char **args);
extern void do_line(int xpos, int ypos, register char *line, RGBpixel (*menu_border));
extern int pad_open(int n);
extern void save_Tty();
extern void set_Raw();
extern void clr_Tabs();
extern void clr_Echo();
extern void clr_CRNL();
extern int MvCursor();
extern void pad_close(void);
extern void reset_Tty();
extern int ClrText();
extern int HmCursor();
extern int DeleteLn();
extern int ClrEOL();
extern int SetScrlReg();
extern int ResetScrlReg();
extern void set_HUPCL();

#define MAX_LN			81
#define Toggle(f)		(f) = ! (f)
#define De_Bounce_Pen()		while( do_Bitpad( &cursor_pos ) ) ;
#define BOTTOM_STATUS_AREA	2
#define TOP_SCROLL_WIN		(BOTTOM_STATUS_AREA-1)
#define PROMPT_LINE		(LI-2)
#define MACROBUFSZ		(BUFSIZ*10)
#define Malloc_Bomb() \
		fb_log(	"\"%s\"(%d) Malloc() no more space.\n", \
				__FILE__, __LINE__ \
				); \
		return 0;
@


11.5
log
@merge of ansi-6-0-branch into HEAD
@
text
@@


11.4
log
@Restoration of entire source tree to Pre-Hartley state
@
text
@d86 1
a86 1
extern Func_Tab	*get_Func_Name();
d88 3
a90 3
extern char *char_To_String();
extern int add_Try();
extern int bitx();
d92 3
a94 3
extern int getpos();
extern int get_Input();
extern void fb_Get_Pixel();
d96 4
a99 4
extern void init_Status();
extern void init_Tty(), restore_Tty();
extern void prnt_Status();
extern void prnt_Usage();
d107 2
a108 2
extern void prnt_Rectangle();
extern void do_Key_Cmd();
d110 5
a114 5
extern int get_Font();
extern void prnt_Prompt();
extern int empty();
extern int get_Char();
extern int get_Mouse_Pos();
d117 3
a119 3
extern int exec_Shell();
extern void do_line();
extern int pad_open();
d126 1
a126 1
extern void pad_close();
@


11.4.2.1
log
@Initial ANSIfication
@
text
@d86 1
a86 1
extern Func_Tab	*get_Func_Name(char *inbuf, int bufsz, char *msg);
d88 3
a90 3
extern char *char_To_String(int i);
extern int add_Try(Func_Tab *ftbl, register char *name, register Try **trypp);
extern int bitx(register char *bitstring, register int posn);
d92 3
a94 3
extern int getpos(Point *pos);
extern int get_Input(char *inbuf, int bufsz, char *msg);
extern void fb_Get_Pixel(unsigned char *pixel);
d96 4
a99 4
extern void init_Status(void);
extern void init_Tty(void), restore_Tty(void);
extern void prnt_Status(void);
extern void prnt_Usage(void);
d107 2
a108 2
extern void prnt_Rectangle(char *str, register Rectangle *rectp);
extern void do_Key_Cmd(register int key, register int n);
d110 5
a114 5
extern int get_Font(char *fontname);
extern void prnt_Prompt(char *msg);
extern int empty(int fd);
extern int get_Char(void);
extern int get_Mouse_Pos(Point *pointp);
d117 3
a119 3
extern int exec_Shell(char **args);
extern void do_line(int xpos, int ypos, register char *line, RGBpixel (*menu_border));
extern int pad_open(int n);
d126 1
a126 1
extern void pad_close(void);
@


11.3
log
@Converted from K&R to ANSI C - RFH
@
text
@d86 1
a86 1
extern Func_Tab	*get_Func_Name(char *inbuf, int bufsz, char *msg);
d88 3
a90 3
extern char *char_To_String(int i);
extern int add_Try(Func_Tab *ftbl, register char *name, register Try **trypp);
extern int bitx(register char *bitstring, register int posn);
d92 3
a94 3
extern int getpos(Point *pos);
extern int get_Input(char *inbuf, int bufsz, char *msg);
extern void fb_Get_Pixel(unsigned char *pixel);
d96 4
a99 4
extern void init_Status(void);
extern void init_Tty(void), restore_Tty(void);
extern void prnt_Status(void);
extern void prnt_Usage(void);
d107 2
a108 2
extern void prnt_Rectangle(char *str, register Rectangle *rectp);
extern void do_Key_Cmd(register int key, register int n);
d110 5
a114 5
extern int get_Font(char *fontname);
extern void prnt_Prompt(char *msg);
extern int empty(int fd);
extern int get_Char(void);
extern int get_Mouse_Pos(Point *pointp);
d117 3
a119 3
extern int exec_Shell(char **args);
extern void do_line(int xpos, int ypos, register char *line, RGBpixel (*menu_border));
extern int pad_open(int n);
d126 1
a126 1
extern void pad_close(void);
@


11.2
log
@Lint
@
text
@d86 1
a86 1
extern Func_Tab	*get_Func_Name();
d88 3
a90 3
extern char *char_To_String();
extern int add_Try();
extern int bitx();
d92 3
a94 3
extern int getpos();
extern int get_Input();
extern void fb_Get_Pixel();
d96 4
a99 4
extern void init_Status();
extern void init_Tty(), restore_Tty();
extern void prnt_Status();
extern void prnt_Usage();
d107 2
a108 2
extern void prnt_Rectangle();
extern void do_Key_Cmd();
d110 5
a114 5
extern int get_Font();
extern void prnt_Prompt();
extern int empty();
extern int get_Char();
extern int get_Mouse_Pos();
d117 3
a119 3
extern int exec_Shell();
extern void do_line();
extern int pad_open();
d126 1
a126 1
extern void pad_close();
@


11.1
log
@Release_4.4
@
text
@d102 1
d104 1
d109 26
@


10.4
log
@Added include comment
@
text
@@


10.3
log
@Removed unecessary includes
@
text
@d23 13
@


10.2
log
@Fixed fb_Setup() to set global flag (isSGI) when running on an SGI
with graphics.  This fixes the problem of getting a "CPS initialization"
error when running over a remote connection from an SGI.  #ifdef sgi
was used previously throughout the code rather than checking the name
of the device.
@
text
@a7 15
#if ! defined( INCL_FB )
#include "fb.h"
#endif
#if ! defined( _VLD_STD_H_ )
#include "./std.h"
#endif
#if ! defined( INCL_ASCII )
#include "./ascii.h"
#endif
#if ! defined( INCL_FONT )
#include "./font.h"
#endif
#if ! defined( INCL_TRY )
#include "./try.h"
#endif
d11 1
@


10.1
log
@Release_4.0
@
text
@d72 1
@


9.5
log
@lint
@
text
@@


9.4
log
@SunOS4 mods
@
text
@a88 2
extern char *getenv();
extern char *malloc();
@


9.3
log
@Added some commands: draw-rectangle, fill-bounded-region, print-comment,
	change-region-color, set-tolerance-color-match.
Also, default rectangle is entire window.
Checked in for release 4.0.
@
text
@d26 6
a31 1
#if __STDC__ || (defined(SYSV) && ! defined(cray))
@


9.2
log
@STDC fix
@
text
@a1 5
	SCCS id:	@@(#) extern.h	2.2
	Modified: 	1/5/87 at 16:57:32
	Retrieved: 	1/5/87 at 16:58:18
	SCCS archive:	/vld/moss/src/fbed/s.extern.h

d6 1
a6 1
			(301)278-6647 or AV-298-6647
d32 5
d39 2
a40 2
	int	p_x;
	int	p_y;
d46 2
a47 2
	Point	r_origin;
	Point	r_corner;
d53 3
a55 3
	RGBpixel  *n_buf;
	int	n_wid;
	int	n_hgt;
d59 21
a79 21
extern FBIO	*fbp;
extern RGBpixel	*menu_addr;
extern RGBpixel	paint;
extern Point	cursor_pos;
extern Point	image_center;
extern Point	windo_center;
extern Point	windo_anchor;
extern Try	*try_rootp;
extern char	cread_buf[BUFSIZ*10], *cptr;
extern char	macro_buf[];
extern char	*macro_ptr;
extern int	brush_sz;
extern int	gain;
extern int	pad_flag;
extern int	remembering;
extern int	report_status;
extern int	reposition_cursor;
extern int	tty;
extern int	tty_fd;
extern int	zoom_factor;
extern int	LI, CO;
d82 15
a96 15
extern RGBpixel	*get_Fb_Panel();
extern char	*char_To_String();
extern char	*getenv();
extern char	*malloc();
extern int	add_Try();
extern int	bitx();
extern int	fb_Init_Menu();
extern int	getpos();
extern int	get_Input();
extern void	fb_Get_Pixel();
extern void	pos_close();
extern void	init_Status();
extern void	init_Tty(), restore_Tty();
extern void	prnt_Status();
extern void	prnt_Usage();
d98 1
a98 1
extern void	prnt_Scroll( char * fmt, ... );
d100 1
a100 1
extern void	prnt_Scroll();
d102 2
a103 2
extern void	prnt_Rectangle();
extern void	do_Key_Cmd();
d116 1
a116 6
		return	0;

#ifndef _LOCAL_
/* For production use, set to "static" */
#define _LOCAL_ /**/
#endif
@


9.1
log
@Release_3.5
@
text
@d95 7
a101 1
extern void	prnt_Status(), prnt_Usage(), prnt_Scroll();
@


8.2
log
@Fixed signal declaration pre-processor switches.
Modified general signal handler to ignore SIGALRM (seems to be generated
	on the Sun 3/50 3.2, probably by the select call).
@
text
@@


8.1
log
@Release_3.0
@
text
@d29 8
@


7.1
log
@Release 2.3
@
text
@@


6.1
log
@Release 2.0
@
text
@@


5.1
log
@Release 1.24
@
text
@@


4.4
log
@Misc. improvements.
@
text
@@


4.3
log
@Release 1.20 -- First Formal Release
@
text
@d14 1
a14 1
#include <fb.h>
d17 1
a17 1
#include <std.h>
d20 1
a20 1
#include "ascii.h"
d23 1
a23 1
#include "font.h"
d26 1
a26 1
#include "try.h"
d79 1
a82 1
extern int	do_Bitpad();
@


4.2
log
@Made some variables global to accomodate SGI mouse support.
@
text
@@


4.1
log
@BRL CAD Distribution Release 1.10
@
text
@d2 3
a4 3
	SCCS id:	@@(#) extern.h	2.1
	Modified: 	12/9/86 at 15:55:10
	Retrieved: 	12/26/86 at 21:53:39
a18 3
#if ! defined( INCL_POPUP )
#include "popup.h"
#endif
d29 22
a51 2
extern ColorMap	cmap;
extern Menu	pick_one, pallet;
d55 3
d64 1
a64 2
extern int	fudge_flag;
extern int	menu_flag;
d67 1
d70 1
a82 1
extern void	fb_On_Menu(), fb_Off_Menu();
@


1.3
log
@Latest version from Gary Moss
@
text
@@


1.2
log
@First version that compiles
@
text
@d2 4
a5 4
	SCCS id:	%Z% %M%	%I%
	Last edit: 	%G% at %U%
	Retrieved: 	%H% at %T%
	SCCS archive:	%P%
d11 1
a11 1
			(301)278-6647 or AV-283-6647
d16 3
d39 1
a39 1
extern char	cread_buf[BUFSIZ], *cptr;
d68 1
d77 1
d79 1
a79 1
		prnt_Debug(	"\"%s\"(%d) Malloc() no more space.", \
@


1.1
log
@Initial revision
@
text
@d28 2
d32 2
a33 2
extern Pixel	*menu_addr;
extern Pixel	paint;
d50 1
a50 1
extern Pixel	*get_Fb_Panel();
d78 5
@
