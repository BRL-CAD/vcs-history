head	11.7;
access;
symbols
	ansi-20040405-merged:11.4.2.1
	postmerge-20040405-ansi:11.5
	premerge-20040404-ansi:11.4
	postmerge-autoconf:11.4
	autoconf-freeze:11.4
	premerge-autoconf:11.4
	ansi-20040316-freeze:11.4.2.1
	postmerge-20040315-windows:11.4
	premerge-20040315-windows:11.4
	windows-20040315-freeze:11.4
	autoconf-20031203:11.4
	autoconf-20031202:11.4
	autoconf-branch:11.4.0.10
	phong-branch:11.4.0.8
	photonmap-branch:11.4.0.6
	rel-6-1-DP:11.4
	windows-branch:11.4.0.4
	rel-6-0-2:11.2
	ansi-branch:11.4.0.2
	rel-6-0-1-branch:11.2.0.2
	hartley-6-0-post:11.3
	hartley-6-0-pre:11.2
	rel-6-0-1:11.2
	rel-6-0:11.2
	rel-5-4:11.1
	offsite-5-3-pre:11.1
	rel-5-3:11.1
	rel-5-2:11.1
	rel-5-1-branch:11.1.0.2
	rel-5-1:11.1
	rel-5-0:11.1
	rel-5-0-beta:11.1
	rel-4-5:11.1
	ctj-4-5-post:11.1
	ctj-4-5-pre:11.1
	rel-4-4:11.1
	rel-4-0:10.1
	rel-3-5:9.1
	rel-3-0:8.1
	rel-2-3:7.1
	rel-2-0:5.1
	rel-1-24:5.1
	rel-1-20:4.2
	rel-1-10:4.1;
locks; strict;
comment	@ * @;


11.7
date	2004.05.24.04.13.10;	author morrison;	state dead;
branches;
next	11.6;

11.6
date	2004.05.10.15.30.42;	author erikg;	state Exp;
branches;
next	11.5;

11.5
date	2004.04.05.07.52.17;	author morrison;	state Exp;
branches;
next	11.4;

11.4
date	2002.08.20.17.07.28;	author jra;	state Exp;
branches
	11.4.2.1;
next	11.3;

11.3
date	2002.08.15.20.54.40;	author hartley;	state Exp;
branches;
next	11.2;

11.2
date	2001.08.09.17.45.24;	author jra;	state Exp;
branches;
next	11.1;

11.1
date	95.01.04.10.13.52;	author mike;	state Rel4_4;
branches;
next	10.2;

10.2
date	94.08.23.19.27.49;	author gdurf;	state Exp;
branches;
next	10.1;

10.1
date	91.10.12.06.49.37;	author mike;	state Rel4_0;
branches;
next	9.3;

9.3
date	91.08.30.20.56.26;	author mike;	state Exp;
branches;
next	9.2;

9.2
date	90.11.26.11.19.44;	author moss;	state Exp;
branches;
next	9.1;

9.1
date	89.05.19.06.12.11;	author mike;	state Rel3_5;
branches;
next	8.1;

8.1
date	88.10.05.00.50.06;	author mike;	state Rel3_0;
branches;
next	7.1;

7.1
date	87.11.03.00.10.42;	author mike;	state Rel;
branches;
next	6.1;

6.1
date	87.07.11.08.14.11;	author mike;	state Rel;
branches;
next	5.1;

5.1
date	87.06.24.22.45.20;	author mike;	state Rel;
branches;
next	4.2;

4.2
date	87.02.13.00.52.29;	author mike;	state Exp;
branches;
next	4.1;

4.1
date	86.12.29.02.51.35;	author mike;	state Rel1;
branches;
next	1.3;

1.3
date	86.12.26.22.36.52;	author mike;	state Exp;
branches;
next	1.2;

1.2
date	86.11.12.23.04.28;	author mike;	state Exp;
branches;
next	1.1;

1.1
date	86.11.10.23.10.38;	author mike;	state Exp;
branches;
next	;

11.4.2.1
date	2002.09.19.18.00.50;	author morrison;	state Exp;
branches;
next	;


desc
@Gary Moss' Original Version
@


11.7
log
@moved to src/fbed/
@
text
@/*
	SCCS id:	@@(#) fill_buf.c	2.1
	Modified: 	12/9/86 at 15:55:48
	Retrieved: 	12/26/86 at 21:54:15
	SCCS archive:	/vld/moss/src/fbed/s.fill_buf.c

	Author:		Paul R. Stay
			U. S. Army Ballistic Research Laboratory
			Aberdeen Proving Ground
			Maryland 21005-5066
			(301)278-6640 or DSN 298-6640
*/
/* 
 * fill_buf.c - Two routines for filling the buffers used in the filtering.
 */
#if ! defined( lint )
static const char RCSid[] = "@@(#) fill_buf.c 2.1, modified 12/9/86 at 15:55:48, archive /vld/moss/src/fbed/s.fill_buf.c";
#endif

#ifdef HAVE_CONFIG_H
# include "config.h"
#endif



#include <stdio.h>

#include "machine.h"
#include "externs.h"
#include "fb.h"

#include "./std.h"
#include "./ascii.h"
#include "./font.h"
#include "./try.h"
#include "./extern.h"

/*	f i l l _ b u f ( )
	Fills in the buffer by reading a row of a bitmap from the
	character font file.  The file pointer is assumed to be in the
	correct position.
 */
void
fill_buf(register int wid, register int *buf)
{
	char    bitrow[FONTBUFSZ];
	register int     j;

	if( ffdes == NULL )
		return;
	/* Read the row, rounding width up to nearest byte value. */
	if( (int)fread( bitrow, (wid / 8) + ((wid % 8 == 0) ? 0 : 1), 1, ffdes)
		< 1
		)
		{
		(void) fprintf( stderr, "fill_buf() read failed!\n" );
		return;
		}

	/* For each bit in the row, set the array value to 1 if it's on.
		The bitx routine extracts the bit value.  Can't just use the
		j-th bit because the bytes are backwards.
	 */
	for (j = 0; j < wid; j++)
		if (bitx (bitrow, (j & ~7) + (7 - (j & 7))))
		    buf[j + 2] = 1;
		else
		    buf[j + 2] = 0;

	/* Need two samples worth of background on either end to make the
		filtering come out right without special casing the
		filtering.
	 */
	buf[0] = buf[1] = buf[wid + 2] = buf[wid + 3] = 0;
	return;
	}

/*	c l e a r _ b u f ( )
	Just sets all the buffer values to zero (this is used to
	"read" background areas of the character needed for filtering near
	the edges of the character definition.
 */
void
clear_buf(int wid, register int *buf)
{
	register int     i, w = wid + 4;

	/* Clear each value in the row. */
	for( i = 0; i < w; i++ )
		buf[i] = 0;
	return;
	}
@


11.6
log
@change conf.h to a wrapped config.h
@
text
@@


11.5
log
@merge of ansi-6-0-branch into HEAD
@
text
@d20 5
a24 1
#include "conf.h"
@


11.4
log
@Restoration of entire source tree to Pre-Hartley state
@
text
@d40 2
a41 4
fill_buf( wid, buf )
register int wid;
register int *buf;
	{
d80 2
a81 4
clear_buf( wid, buf )
int wid;
register int *buf;
	{
@


11.4.2.1
log
@Initial ANSIfication
@
text
@d40 4
a43 2
fill_buf(register int wid, register int *buf)
{
d82 4
a85 2
clear_buf(int wid, register int *buf)
{
@


11.3
log
@Converted from K&R to ANSI C - RFH
@
text
@d40 4
a43 2
fill_buf(register int wid, register int *buf)
{
d82 4
a85 2
clear_buf(int wid, register int *buf)
{
@


11.2
log
@Lint
@
text
@d40 2
a41 4
fill_buf( wid, buf )
register int wid;
register int *buf;
	{
d80 2
a81 4
clear_buf( wid, buf )
int wid;
register int *buf;
	{
@


11.1
log
@Release_4.4
@
text
@d17 1
a17 2
static
char sccsTag[] = "@@(#) fill_buf.c 2.1, modified 12/9/86 at 15:55:48, archive /vld/moss/src/fbed/s.fill_buf.c";
@


10.2
log
@Made include files explicit
@
text
@@


10.1
log
@Release_4.0
@
text
@d21 2
d24 9
@


9.3
log
@fread is unsigned.
@
text
@@


9.2
log
@Added some commands: draw-rectangle, fill-bounded-region, print-comment,
	change-region-color, set-tolerance-color-match.
Also, default rectangle is entire window.
Checked in for release 4.0.
@
text
@d40 1
a40 1
	if( fread( bitrow, (wid / 8) + ((wid % 8 == 0) ? 0 : 1), 1, ffdes)
@


9.1
log
@Release_3.5
@
text
@d11 1
a11 1
			(301)278-6640 or AV-298-6640
d18 1
a18 1
char	sccsTag[] = "@@(#) fill_buf.c 2.1, modified 12/9/86 at 15:55:48, archive /vld/moss/src/fbed/s.fill_buf.c";
d31 2
a32 2
register int	wid;
register int	*buf;
d73 2
a74 2
int		wid;
register int	*buf;
d78 1
a78 1
	/* Clear each value in the row.					*/
@


8.1
log
@Release_3.0
@
text
@@


7.1
log
@Release 2.3
@
text
@@


6.1
log
@Release 2.0
@
text
@@


5.1
log
@Release 1.24
@
text
@@


4.2
log
@Release 1.20 -- First Formal Release
@
text
@@


4.1
log
@BRL CAD Distribution Release 1.10
@
text
@@


1.3
log
@Latest version from Gary Moss
@
text
@@


1.2
log
@First version that compiles
@
text
@d1 12
a14 5
 * 
 * Author:	Paul R. Stay
 * 		Ballistics Research Labratory
 * 		APG, Md.
 * Date:	Tue Jan  8 1985
d16 5
d22 1
a22 2
#include "fb.h"
#include "./font.h"
d34 1
a34 1
	char    bitrow[BUFFSIZ];
d53 1
a53 1
		if (bitx (bitrow, (j & ~7) + (7 - (j & 7)), 1))
@


1.1
log
@Initial revision
@
text
@d10 2
a11 2
#include <fb.h>
#include "font.h"
@
