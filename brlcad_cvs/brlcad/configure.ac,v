head	14.454;
access;
symbols
	rel-7-10-4:14.389.2.2
	STABLE:14.389.0.2
	stable-branch:14.78
	rel-7-10-2:14.381
	rel-7-10-0:14.331
	rel-7-8-4:14.269
	rel-7-8-2:14.243
	rel-7-8-0:14.236
	trimnurbs-branch:14.230.0.2
	help:14.230
	temp_tag:14.205
	bobWinPort-20051223-freeze:14.141.2.1
	postmerge-20051223-bobWinPort:14.205
	premerge-20051223-bobWinPort:14.204
	rel-7-6-6:14.203
	rel-7-6-4:14.196
	rel-7-6-2:14.164.2.1
	rel-7-6-branch:14.164.0.2
	rel-7-6-0:14.164
	rel-7-4-2:14.135.2.2
	rel-7-4-branch:14.135.0.2
	bobWinPort:14.141.0.2
	rel-7-4-0:14.135
	rel-7-2-6:14.107
	rel-7-2-4:14.101
	rel-7-2-2:14.72
	rel-7-2-0:14.34
	rel-7-0-4:14.24
	rel-7-0-2:14.10
	rel-7-0-1:14.8
	opensource-post:14.8
	opensource-pre:1.170
	rel-7-0-branch:1.165.0.2
	rel-7-0:1.165
	postmerge-20040405-ansi:1.10
	premerge-20040404-ansi:1.10;
locks; strict;
comment	@# @;


14.454
date	2007.12.22.19.45.08;	author brlcad;	state Exp;
branches;
next	14.453;

14.453
date	2007.12.18.21.33.31;	author erikgreenwald;	state Exp;
branches;
next	14.452;

14.452
date	2007.12.16.22.23.13;	author brlcad;	state Exp;
branches;
next	14.451;

14.451
date	2007.12.16.20.13.50;	author brlcad;	state Exp;
branches;
next	14.450;

14.450
date	2007.12.16.20.13.09;	author brlcad;	state Exp;
branches;
next	14.449;

14.449
date	2007.12.16.15.42.43;	author brlcad;	state Exp;
branches;
next	14.448;

14.448
date	2007.12.16.15.14.32;	author brlcad;	state Exp;
branches;
next	14.447;

14.447
date	2007.12.15.21.09.38;	author brlcad;	state Exp;
branches;
next	14.446;

14.446
date	2007.12.15.20.44.48;	author brlcad;	state Exp;
branches;
next	14.445;

14.445
date	2007.12.15.20.29.23;	author brlcad;	state Exp;
branches;
next	14.444;

14.444
date	2007.12.15.20.13.58;	author brlcad;	state Exp;
branches;
next	14.443;

14.443
date	2007.12.15.18.03.25;	author brlcad;	state Exp;
branches;
next	14.442;

14.442
date	2007.12.15.18.01.56;	author brlcad;	state Exp;
branches;
next	14.441;

14.441
date	2007.12.15.16.52.48;	author brlcad;	state Exp;
branches;
next	14.440;

14.440
date	2007.12.15.09.17.57;	author brlcad;	state Exp;
branches;
next	14.439;

14.439
date	2007.12.15.07.55.32;	author brlcad;	state Exp;
branches;
next	14.438;

14.438
date	2007.12.15.06.22.38;	author brlcad;	state Exp;
branches;
next	14.437;

14.437
date	2007.12.15.05.42.27;	author brlcad;	state Exp;
branches;
next	14.436;

14.436
date	2007.12.15.05.39.17;	author brlcad;	state Exp;
branches;
next	14.435;

14.435
date	2007.12.15.05.22.57;	author brlcad;	state Exp;
branches;
next	14.434;

14.434
date	2007.12.14.20.28.11;	author brlcad;	state Exp;
branches;
next	14.433;

14.433
date	2007.12.09.21.46.20;	author brlcad;	state Exp;
branches;
next	14.432;

14.432
date	2007.12.08.23.03.53;	author brlcad;	state Exp;
branches;
next	14.431;

14.431
date	2007.12.08.22.57.29;	author brlcad;	state Exp;
branches;
next	14.430;

14.430
date	2007.12.08.22.17.43;	author brlcad;	state Exp;
branches;
next	14.429;

14.429
date	2007.12.05.17.03.34;	author erikgreenwald;	state Exp;
branches;
next	14.428;

14.428
date	2007.12.05.05.27.39;	author brlcad;	state Exp;
branches;
next	14.427;

14.427
date	2007.12.04.01.36.14;	author brlcad;	state Exp;
branches;
next	14.426;

14.426
date	2007.12.03.18.47.55;	author brlcad;	state Exp;
branches;
next	14.425;

14.425
date	2007.12.02.22.50.24;	author brlcad;	state Exp;
branches;
next	14.424;

14.424
date	2007.11.27.08.00.35;	author brlcad;	state Exp;
branches;
next	14.423;

14.423
date	2007.11.27.07.50.14;	author brlcad;	state Exp;
branches;
next	14.422;

14.422
date	2007.11.15.22.10.38;	author brlcad;	state Exp;
branches;
next	14.421;

14.421
date	2007.11.13.17.39.22;	author erikgreenwald;	state Exp;
branches;
next	14.420;

14.420
date	2007.11.09.13.25.43;	author bob1961;	state Exp;
branches;
next	14.419;

14.419
date	2007.11.08.21.59.20;	author erikgreenwald;	state Exp;
branches;
next	14.418;

14.418
date	2007.11.08.00.12.27;	author brlcad;	state Exp;
branches;
next	14.417;

14.417
date	2007.11.07.23.35.59;	author brlcad;	state Exp;
branches;
next	14.416;

14.416
date	2007.11.06.21.43.19;	author erikgreenwald;	state Exp;
branches;
next	14.415;

14.415
date	2007.11.05.14.28.42;	author brlcad;	state Exp;
branches;
next	14.414;

14.414
date	2007.10.30.15.27.48;	author d_rossberg;	state Exp;
branches;
next	14.413;

14.413
date	2007.10.30.10.16.00;	author brlcad;	state Exp;
branches;
next	14.412;

14.412
date	2007.10.30.10.05.58;	author brlcad;	state Exp;
branches;
next	14.411;

14.411
date	2007.10.30.09.51.50;	author brlcad;	state Exp;
branches;
next	14.410;

14.410
date	2007.10.30.09.32.31;	author d_rossberg;	state Exp;
branches;
next	14.409;

14.409
date	2007.10.29.05.17.24;	author brlcad;	state Exp;
branches;
next	14.408;

14.408
date	2007.10.29.03.27.52;	author brlcad;	state Exp;
branches;
next	14.407;

14.407
date	2007.10.26.22.25.27;	author brlcad;	state Exp;
branches;
next	14.406;

14.406
date	2007.10.16.13.27.04;	author brlcad;	state Exp;
branches;
next	14.405;

14.405
date	2007.10.02.18.22.37;	author erikgreenwald;	state Exp;
branches;
next	14.404;

14.404
date	2007.10.01.03.11.57;	author brlcad;	state Exp;
branches;
next	14.403;

14.403
date	2007.09.26.21.18.17;	author brlcad;	state Exp;
branches;
next	14.402;

14.402
date	2007.09.25.16.34.43;	author brlcad;	state Exp;
branches;
next	14.401;

14.401
date	2007.09.24.17.48.35;	author brlcad;	state Exp;
branches;
next	14.400;

14.400
date	2007.09.17.02.15.11;	author brlcad;	state Exp;
branches;
next	14.399;

14.399
date	2007.09.17.02.06.25;	author brlcad;	state Exp;
branches;
next	14.398;

14.398
date	2007.09.15.16.23.00;	author brlcad;	state Exp;
branches;
next	14.397;

14.397
date	2007.09.15.03.41.58;	author brlcad;	state Exp;
branches;
next	14.396;

14.396
date	2007.09.15.03.28.39;	author brlcad;	state Exp;
branches;
next	14.395;

14.395
date	2007.09.15.03.26.47;	author brlcad;	state Exp;
branches;
next	14.394;

14.394
date	2007.09.14.23.40.38;	author brlcad;	state Exp;
branches;
next	14.393;

14.393
date	2007.09.14.23.30.42;	author brlcad;	state Exp;
branches;
next	14.392;

14.392
date	2007.09.14.23.08.52;	author brlcad;	state Exp;
branches;
next	14.391;

14.391
date	2007.09.14.20.06.49;	author brlcad;	state Exp;
branches;
next	14.390;

14.390
date	2007.09.14.15.20.51;	author erikgreenwald;	state Exp;
branches;
next	14.389;

14.389
date	2007.09.13.13.48.11;	author brlcad;	state Exp;
branches
	14.389.2.1;
next	14.388;

14.388
date	2007.09.11.19.26.06;	author erikgreenwald;	state Exp;
branches;
next	14.387;

14.387
date	2007.09.06.21.23.44;	author erikgreenwald;	state Exp;
branches;
next	14.386;

14.386
date	2007.08.28.10.14.11;	author brlcad;	state Exp;
branches;
next	14.385;

14.385
date	2007.08.27.20.19.33;	author erikgreenwald;	state Exp;
branches;
next	14.384;

14.384
date	2007.08.27.19.20.43;	author erikgreenwald;	state Exp;
branches;
next	14.383;

14.383
date	2007.08.24.14.10.29;	author erikgreenwald;	state Exp;
branches;
next	14.382;

14.382
date	2007.08.19.09.22.25;	author brlcad;	state Exp;
branches;
next	14.381;

14.381
date	2007.08.16.06.11.55;	author brlcad;	state Exp;
branches;
next	14.380;

14.380
date	2007.08.15.16.56.53;	author erikgreenwald;	state Exp;
branches;
next	14.379;

14.379
date	2007.08.07.21.14.54;	author erikgreenwald;	state Exp;
branches;
next	14.378;

14.378
date	2007.08.07.20.02.20;	author erikgreenwald;	state Exp;
branches;
next	14.377;

14.377
date	2007.08.06.19.11.17;	author brlcad;	state Exp;
branches;
next	14.376;

14.376
date	2007.08.02.01.32.43;	author brlcad;	state Exp;
branches;
next	14.375;

14.375
date	2007.07.31.07.47.28;	author brlcad;	state Exp;
branches;
next	14.374;

14.374
date	2007.07.31.07.29.32;	author brlcad;	state Exp;
branches;
next	14.373;

14.373
date	2007.07.31.06.30.22;	author brlcad;	state Exp;
branches;
next	14.372;

14.372
date	2007.07.31.04.50.18;	author brlcad;	state Exp;
branches;
next	14.371;

14.371
date	2007.07.25.19.57.12;	author erikgreenwald;	state Exp;
branches;
next	14.370;

14.370
date	2007.07.10.16.50.19;	author brlcad;	state Exp;
branches;
next	14.369;

14.369
date	2007.06.30.21.32.28;	author brlcad;	state Exp;
branches;
next	14.368;

14.368
date	2007.06.29.04.22.59;	author brlcad;	state Exp;
branches;
next	14.367;

14.367
date	2007.06.28.13.04.22;	author brlcad;	state Exp;
branches;
next	14.366;

14.366
date	2007.06.28.06.41.45;	author brlcad;	state Exp;
branches;
next	14.365;

14.365
date	2007.06.28.06.06.29;	author brlcad;	state Exp;
branches;
next	14.364;

14.364
date	2007.06.28.06.01.53;	author brlcad;	state Exp;
branches;
next	14.363;

14.363
date	2007.06.27.07.57.31;	author brlcad;	state Exp;
branches;
next	14.362;

14.362
date	2007.06.22.07.48.03;	author brlcad;	state Exp;
branches;
next	14.361;

14.361
date	2007.06.21.20.28.06;	author poolio;	state Exp;
branches;
next	14.360;

14.360
date	2007.06.20.13.36.04;	author brlcad;	state Exp;
branches;
next	14.359;

14.359
date	2007.05.31.13.42.09;	author erikgreenwald;	state Exp;
branches;
next	14.358;

14.358
date	2007.05.31.02.33.30;	author brlcad;	state Exp;
branches;
next	14.357;

14.357
date	2007.05.26.20.58.19;	author brlcad;	state Exp;
branches;
next	14.356;

14.356
date	2007.05.25.05.24.09;	author brlcad;	state Exp;
branches;
next	14.355;

14.355
date	2007.05.25.01.51.25;	author brlcad;	state Exp;
branches;
next	14.354;

14.354
date	2007.05.18.16.04.28;	author brlcad;	state Exp;
branches;
next	14.353;

14.353
date	2007.05.17.18.29.33;	author brlcad;	state Exp;
branches;
next	14.352;

14.352
date	2007.05.16.18.58.14;	author brlcad;	state Exp;
branches;
next	14.351;

14.351
date	2007.05.16.18.56.28;	author brlcad;	state Exp;
branches;
next	14.350;

14.350
date	2007.05.15.16.33.06;	author erikgreenwald;	state Exp;
branches;
next	14.349;

14.349
date	2007.05.15.14.05.50;	author d_rossberg;	state Exp;
branches;
next	14.348;

14.348
date	2007.05.12.01.06.25;	author brlcad;	state Exp;
branches;
next	14.347;

14.347
date	2007.05.06.05.04.45;	author brlcad;	state Exp;
branches;
next	14.346;

14.346
date	2007.05.04.15.46.33;	author brlcad;	state Exp;
branches;
next	14.345;

14.345
date	2007.05.04.14.35.09;	author brlcad;	state Exp;
branches;
next	14.344;

14.344
date	2007.04.23.13.30.18;	author joevalleyfield;	state Exp;
branches;
next	14.343;

14.343
date	2007.04.18.05.01.03;	author brlcad;	state Exp;
branches;
next	14.342;

14.342
date	2007.04.18.04.47.19;	author brlcad;	state Exp;
branches;
next	14.341;

14.341
date	2007.04.17.18.27.38;	author erikgreenwald;	state Exp;
branches;
next	14.340;

14.340
date	2007.04.16.21.15.35;	author brlcad;	state Exp;
branches;
next	14.339;

14.339
date	2007.04.16.19.54.45;	author brlcad;	state Exp;
branches;
next	14.338;

14.338
date	2007.04.15.01.13.39;	author brlcad;	state Exp;
branches;
next	14.337;

14.337
date	2007.04.14.23.59.39;	author brlcad;	state Exp;
branches;
next	14.336;

14.336
date	2007.04.14.21.56.05;	author brlcad;	state Exp;
branches;
next	14.335;

14.335
date	2007.04.14.14.15.01;	author brlcad;	state Exp;
branches;
next	14.334;

14.334
date	2007.04.13.23.11.12;	author joevalleyfield;	state Exp;
branches;
next	14.333;

14.333
date	2007.04.13.22.34.56;	author brlcad;	state Exp;
branches;
next	14.332;

14.332
date	2007.04.13.15.21.21;	author brlcad;	state Exp;
branches;
next	14.331;

14.331
date	2007.04.10.01.53.41;	author brlcad;	state Exp;
branches;
next	14.330;

14.330
date	2007.04.09.18.17.21;	author brlcad;	state Exp;
branches;
next	14.329;

14.329
date	2007.04.03.02.47.02;	author brlcad;	state Exp;
branches;
next	14.328;

14.328
date	2007.03.28.19.12.04;	author brlcad;	state Exp;
branches;
next	14.327;

14.327
date	2007.03.28.13.43.03;	author d_rossberg;	state Exp;
branches;
next	14.326;

14.326
date	2007.03.27.14.37.24;	author brlcad;	state Exp;
branches;
next	14.325;

14.325
date	2007.03.20.18.50.18;	author brlcad;	state Exp;
branches;
next	14.324;

14.324
date	2007.03.20.15.11.28;	author brlcad;	state Exp;
branches;
next	14.323;

14.323
date	2007.03.20.13.37.25;	author brlcad;	state Exp;
branches;
next	14.322;

14.322
date	2007.03.09.20.34.47;	author erikgreenwald;	state Exp;
branches;
next	14.321;

14.321
date	2007.03.08.09.29.21;	author d_rossberg;	state Exp;
branches;
next	14.320;

14.320
date	2007.03.07.16.56.35;	author brlcad;	state Exp;
branches;
next	14.319;

14.319
date	2007.03.06.20.30.12;	author brlcad;	state Exp;
branches;
next	14.318;

14.318
date	2007.03.04.23.02.37;	author brlcad;	state Exp;
branches;
next	14.317;

14.317
date	2007.03.04.21.09.30;	author brlcad;	state Exp;
branches;
next	14.316;

14.316
date	2007.03.03.17.05.32;	author brlcad;	state Exp;
branches;
next	14.315;

14.315
date	2007.03.03.15.23.55;	author brlcad;	state Exp;
branches;
next	14.314;

14.314
date	2007.03.02.22.28.08;	author brlcad;	state Exp;
branches;
next	14.313;

14.313
date	2007.03.02.21.46.27;	author brlcad;	state Exp;
branches;
next	14.312;

14.312
date	2007.02.27.12.42.36;	author d_rossberg;	state Exp;
branches;
next	14.311;

14.311
date	2007.02.27.03.52.22;	author brlcad;	state Exp;
branches;
next	14.310;

14.310
date	2007.02.25.19.03.08;	author brlcad;	state Exp;
branches;
next	14.309;

14.309
date	2007.02.24.20.07.58;	author brlcad;	state Exp;
branches;
next	14.308;

14.308
date	2007.02.24.18.28.22;	author brlcad;	state Exp;
branches;
next	14.307;

14.307
date	2007.02.21.23.36.40;	author brlcad;	state Exp;
branches;
next	14.306;

14.306
date	2007.02.17.06.56.33;	author brlcad;	state Exp;
branches;
next	14.305;

14.305
date	2007.02.14.22.04.09;	author brlcad;	state Exp;
branches;
next	14.304;

14.304
date	2007.02.13.21.51.23;	author brlcad;	state Exp;
branches;
next	14.303;

14.303
date	2007.02.13.21.44.20;	author brlcad;	state Exp;
branches;
next	14.302;

14.302
date	2007.02.08.20.19.52;	author erikgreenwald;	state Exp;
branches;
next	14.301;

14.301
date	2007.02.06.23.20.56;	author brlcad;	state Exp;
branches;
next	14.300;

14.300
date	2007.02.06.19.54.25;	author jlowenz;	state Exp;
branches;
next	14.299;

14.299
date	2007.02.03.07.50.06;	author brlcad;	state Exp;
branches;
next	14.298;

14.298
date	2007.02.03.07.20.29;	author brlcad;	state Exp;
branches;
next	14.297;

14.297
date	2007.02.03.03.44.45;	author brlcad;	state Exp;
branches;
next	14.296;

14.296
date	2007.02.03.01.54.25;	author brlcad;	state Exp;
branches;
next	14.295;

14.295
date	2007.02.02.10.03.13;	author brlcad;	state Exp;
branches;
next	14.294;

14.294
date	2007.02.02.08.36.21;	author brlcad;	state Exp;
branches;
next	14.293;

14.293
date	2007.01.27.01.07.30;	author brlcad;	state Exp;
branches;
next	14.292;

14.292
date	2007.01.25.06.03.20;	author brlcad;	state Exp;
branches;
next	14.291;

14.291
date	2007.01.24.19.15.30;	author brlcad;	state Exp;
branches;
next	14.290;

14.290
date	2007.01.24.18.40.56;	author brlcad;	state Exp;
branches;
next	14.289;

14.289
date	2007.01.24.17.59.59;	author brlcad;	state Exp;
branches;
next	14.288;

14.288
date	2007.01.24.17.49.22;	author brlcad;	state Exp;
branches;
next	14.287;

14.287
date	2007.01.24.17.21.12;	author brlcad;	state Exp;
branches;
next	14.286;

14.286
date	2007.01.24.15.47.51;	author erikgreenwald;	state Exp;
branches;
next	14.285;

14.285
date	2007.01.23.01.13.19;	author brlcad;	state Exp;
branches;
next	14.284;

14.284
date	2007.01.20.14.10.40;	author brlcad;	state Exp;
branches;
next	14.283;

14.283
date	2007.01.19.21.00.24;	author erikgreenwald;	state Exp;
branches;
next	14.282;

14.282
date	2007.01.19.18.25.28;	author brlcad;	state Exp;
branches;
next	14.281;

14.281
date	2007.01.19.18.21.11;	author brlcad;	state Exp;
branches;
next	14.280;

14.280
date	2007.01.18.19.39.47;	author erikgreenwald;	state Exp;
branches;
next	14.279;

14.279
date	2007.01.17.19.56.10;	author erikgreenwald;	state Exp;
branches;
next	14.278;

14.278
date	2007.01.12.18.45.36;	author jlowenz;	state Exp;
branches;
next	14.277;

14.277
date	2007.01.06.06.47.04;	author brlcad;	state Exp;
branches;
next	14.276;

14.276
date	2007.01.05.17.22.33;	author brlcad;	state Exp;
branches;
next	14.275;

14.275
date	2007.01.05.15.46.46;	author brlcad;	state Exp;
branches;
next	14.274;

14.274
date	2006.12.07.22.38.16;	author mjgillich;	state Exp;
branches;
next	14.273;

14.273
date	2006.12.03.00.55.18;	author erikgreenwald;	state Exp;
branches;
next	14.272;

14.272
date	2006.10.17.17.18.17;	author brlcad;	state Exp;
branches;
next	14.271;

14.271
date	2006.10.17.01.19.14;	author brlcad;	state Exp;
branches;
next	14.270;

14.270
date	2006.10.17.01.00.27;	author brlcad;	state Exp;
branches;
next	14.269;

14.269
date	2006.10.16.20.45.30;	author brlcad;	state Exp;
branches;
next	14.268;

14.268
date	2006.09.12.11.46.44;	author brlcad;	state Exp;
branches;
next	14.267;

14.267
date	2006.09.12.11.29.07;	author brlcad;	state Exp;
branches;
next	14.266;

14.266
date	2006.08.30.00.41.38;	author brlcad;	state Exp;
branches;
next	14.265;

14.265
date	2006.08.29.23.06.37;	author brlcad;	state Exp;
branches;
next	14.264;

14.264
date	2006.08.19.00.03.56;	author brlcad;	state Exp;
branches;
next	14.263;

14.263
date	2006.08.11.20.47.57;	author brlcad;	state Exp;
branches;
next	14.262;

14.262
date	2006.08.11.06.32.26;	author brlcad;	state Exp;
branches;
next	14.261;

14.261
date	2006.08.08.02.35.09;	author brlcad;	state Exp;
branches;
next	14.260;

14.260
date	2006.08.01.16.11.07;	author brlcad;	state Exp;
branches;
next	14.259;

14.259
date	2006.08.01.16.08.55;	author brlcad;	state Exp;
branches;
next	14.258;

14.258
date	2006.08.01.15.32.45;	author brlcad;	state Exp;
branches;
next	14.257;

14.257
date	2006.07.30.18.36.11;	author brlcad;	state Exp;
branches;
next	14.256;

14.256
date	2006.07.28.15.00.56;	author brlcad;	state Exp;
branches;
next	14.255;

14.255
date	2006.07.28.14.50.40;	author brlcad;	state Exp;
branches;
next	14.254;

14.254
date	2006.07.28.04.00.34;	author brlcad;	state Exp;
branches;
next	14.253;

14.253
date	2006.07.28.03.43.30;	author brlcad;	state Exp;
branches;
next	14.252;

14.252
date	2006.07.27.20.25.24;	author brlcad;	state Exp;
branches;
next	14.251;

14.251
date	2006.07.13.21.09.09;	author brlcad;	state Exp;
branches;
next	14.250;

14.250
date	2006.07.11.17.07.40;	author brlcad;	state Exp;
branches;
next	14.249;

14.249
date	2006.07.11.14.26.08;	author brlcad;	state Exp;
branches;
next	14.248;

14.248
date	2006.07.10.17.05.00;	author brlcad;	state Exp;
branches;
next	14.247;

14.247
date	2006.07.09.23.38.39;	author brlcad;	state Exp;
branches;
next	14.246;

14.246
date	2006.07.09.21.16.19;	author brlcad;	state Exp;
branches;
next	14.245;

14.245
date	2006.06.26.02.05.17;	author brlcad;	state Exp;
branches;
next	14.244;

14.244
date	2006.06.20.19.09.35;	author brlcad;	state Exp;
branches;
next	14.243;

14.243
date	2006.06.20.17.45.21;	author brlcad;	state Exp;
branches;
next	14.242;

14.242
date	2006.06.05.02.45.50;	author brlcad;	state Exp;
branches;
next	14.241;

14.241
date	2006.06.05.00.30.27;	author brlcad;	state Exp;
branches;
next	14.240;

14.240
date	2006.05.16.15.37.02;	author lbutler;	state Exp;
branches;
next	14.239;

14.239
date	2006.05.15.18.42.46;	author brlcad;	state Exp;
branches;
next	14.238;

14.238
date	2006.04.11.15.17.54;	author erikgreenwald;	state Exp;
branches;
next	14.237;

14.237
date	2006.04.11.03.33.04;	author brlcad;	state Exp;
branches;
next	14.236;

14.236
date	2006.04.11.03.32.06;	author brlcad;	state Exp;
branches;
next	14.235;

14.235
date	2006.04.11.03.25.59;	author brlcad;	state Exp;
branches;
next	14.234;

14.234
date	2006.04.11.03.13.39;	author brlcad;	state Exp;
branches;
next	14.233;

14.233
date	2006.04.07.02.18.51;	author brlcad;	state Exp;
branches;
next	14.232;

14.232
date	2006.03.23.20.42.15;	author brlcad;	state Exp;
branches;
next	14.231;

14.231
date	2006.03.10.19.18.14;	author brlcad;	state Exp;
branches;
next	14.230;

14.230
date	2006.02.03.17.56.51;	author brlcad;	state Exp;
branches
	14.230.2.1;
next	14.229;

14.229
date	2006.02.03.17.40.34;	author brlcad;	state Exp;
branches;
next	14.228;

14.228
date	2006.02.03.01.47.21;	author brlcad;	state Exp;
branches;
next	14.227;

14.227
date	2006.02.03.01.45.27;	author brlcad;	state Exp;
branches;
next	14.226;

14.226
date	2006.02.02.21.48.29;	author brlcad;	state Exp;
branches;
next	14.225;

14.225
date	2006.01.26.21.53.47;	author brlcad;	state Exp;
branches;
next	14.224;

14.224
date	2006.01.21.19.41.01;	author brlcad;	state Exp;
branches;
next	14.223;

14.223
date	2006.01.21.17.18.24;	author brlcad;	state Exp;
branches;
next	14.222;

14.222
date	2006.01.19.00.19.26;	author brlcad;	state Exp;
branches;
next	14.221;

14.221
date	2006.01.18.06.46.09;	author brlcad;	state Exp;
branches;
next	14.220;

14.220
date	2006.01.15.18.25.17;	author brlcad;	state Exp;
branches;
next	14.219;

14.219
date	2006.01.15.08.32.18;	author brlcad;	state Exp;
branches;
next	14.218;

14.218
date	2006.01.15.04.09.59;	author brlcad;	state Exp;
branches;
next	14.217;

14.217
date	2006.01.12.23.41.52;	author brlcad;	state Exp;
branches;
next	14.216;

14.216
date	2006.01.04.15.34.33;	author bob1961;	state Exp;
branches;
next	14.215;

14.215
date	2006.01.02.18.16.44;	author erikgreenwald;	state Exp;
branches;
next	14.214;

14.214
date	2005.12.31.00.17.09;	author brlcad;	state Exp;
branches;
next	14.213;

14.213
date	2005.12.30.23.45.14;	author brlcad;	state Exp;
branches;
next	14.212;

14.212
date	2005.12.30.23.34.39;	author brlcad;	state Exp;
branches;
next	14.211;

14.211
date	2005.12.30.21.35.00;	author brlcad;	state Exp;
branches;
next	14.210;

14.210
date	2005.12.29.08.46.41;	author brlcad;	state Exp;
branches;
next	14.209;

14.209
date	2005.12.29.08.35.24;	author brlcad;	state Exp;
branches;
next	14.208;

14.208
date	2005.12.29.08.21.47;	author brlcad;	state Exp;
branches;
next	14.207;

14.207
date	2005.12.29.02.06.20;	author brlcad;	state Exp;
branches;
next	14.206;

14.206
date	2005.12.29.00.55.48;	author brlcad;	state Exp;
branches;
next	14.205;

14.205
date	2005.12.23.21.26.25;	author bob1961;	state Exp;
branches;
next	14.204;

14.204
date	2005.12.20.22.01.19;	author brlcad;	state Exp;
branches;
next	14.203;

14.203
date	2005.12.16.23.51.58;	author brlcad;	state Exp;
branches;
next	14.202;

14.202
date	2005.12.16.22.54.12;	author brlcad;	state Exp;
branches;
next	14.201;

14.201
date	2005.12.12.23.04.34;	author brlcad;	state Exp;
branches;
next	14.200;

14.200
date	2005.12.06.13.12.23;	author brlcad;	state Exp;
branches;
next	14.199;

14.199
date	2005.12.05.15.41.08;	author brlcad;	state Exp;
branches;
next	14.198;

14.198
date	2005.11.20.14.35.27;	author brlcad;	state Exp;
branches;
next	14.197;

14.197
date	2005.11.13.18.22.28;	author brlcad;	state Exp;
branches;
next	14.196;

14.196
date	2005.11.12.20.59.07;	author brlcad;	state Exp;
branches;
next	14.195;

14.195
date	2005.11.12.19.14.46;	author brlcad;	state Exp;
branches;
next	14.194;

14.194
date	2005.11.11.21.51.33;	author brlcad;	state Exp;
branches;
next	14.193;

14.193
date	2005.11.09.04.41.52;	author brlcad;	state Exp;
branches;
next	14.192;

14.192
date	2005.11.09.04.08.49;	author brlcad;	state Exp;
branches;
next	14.191;

14.191
date	2005.11.04.10.36.23;	author brlcad;	state Exp;
branches;
next	14.190;

14.190
date	2005.11.03.21.34.34;	author brlcad;	state Exp;
branches;
next	14.189;

14.189
date	2005.11.01.20.34.36;	author brlcad;	state Exp;
branches;
next	14.188;

14.188
date	2005.10.31.07.38.19;	author brlcad;	state Exp;
branches;
next	14.187;

14.187
date	2005.10.30.21.34.41;	author brlcad;	state Exp;
branches;
next	14.186;

14.186
date	2005.10.29.23.51.42;	author brlcad;	state Exp;
branches;
next	14.185;

14.185
date	2005.10.29.21.30.57;	author brlcad;	state Exp;
branches;
next	14.184;

14.184
date	2005.10.27.03.36.04;	author brlcad;	state Exp;
branches;
next	14.183;

14.183
date	2005.10.26.18.50.42;	author brlcad;	state Exp;
branches;
next	14.182;

14.182
date	2005.10.26.04.21.27;	author brlcad;	state Exp;
branches;
next	14.181;

14.181
date	2005.10.24.03.16.49;	author brlcad;	state Exp;
branches;
next	14.180;

14.180
date	2005.10.24.03.15.28;	author brlcad;	state Exp;
branches;
next	14.179;

14.179
date	2005.10.23.04.44.25;	author brlcad;	state Exp;
branches;
next	14.178;

14.178
date	2005.10.21.03.13.04;	author brlcad;	state Exp;
branches;
next	14.177;

14.177
date	2005.10.07.22.21.40;	author brlcad;	state Exp;
branches;
next	14.176;

14.176
date	2005.10.01.23.03.28;	author brlcad;	state Exp;
branches;
next	14.175;

14.175
date	2005.09.23.20.21.44;	author erikgreenwald;	state Exp;
branches;
next	14.174;

14.174
date	2005.09.22.12.19.53;	author brlcad;	state Exp;
branches;
next	14.173;

14.173
date	2005.09.21.16.18.01;	author twingy;	state Exp;
branches;
next	14.172;

14.172
date	2005.09.21.02.16.12;	author twingy;	state Exp;
branches;
next	14.171;

14.171
date	2005.09.19.22.16.47;	author brlcad;	state Exp;
branches;
next	14.170;

14.170
date	2005.09.19.20.55.41;	author brlcad;	state Exp;
branches;
next	14.169;

14.169
date	2005.09.19.20.54.17;	author brlcad;	state Exp;
branches;
next	14.168;

14.168
date	2005.09.19.19.47.03;	author brlcad;	state Exp;
branches;
next	14.167;

14.167
date	2005.09.19.14.59.54;	author brlcad;	state Exp;
branches;
next	14.166;

14.166
date	2005.09.16.18.46.33;	author brlcad;	state Exp;
branches;
next	14.165;

14.165
date	2005.09.09.01.49.24;	author brlcad;	state Exp;
branches;
next	14.164;

14.164
date	2005.09.08.22.23.20;	author lbutler;	state Exp;
branches
	14.164.2.1;
next	14.163;

14.163
date	2005.09.07.21.42.15;	author lbutler;	state Exp;
branches;
next	14.162;

14.162
date	2005.09.04.19.56.32;	author brlcad;	state Exp;
branches;
next	14.161;

14.161
date	2005.09.04.17.22.06;	author brlcad;	state Exp;
branches;
next	14.160;

14.160
date	2005.09.04.16.14.40;	author brlcad;	state Exp;
branches;
next	14.159;

14.159
date	2005.09.04.16.05.25;	author brlcad;	state Exp;
branches;
next	14.158;

14.158
date	2005.09.04.16.00.11;	author brlcad;	state Exp;
branches;
next	14.157;

14.157
date	2005.08.27.19.34.27;	author brlcad;	state Exp;
branches;
next	14.156;

14.156
date	2005.08.27.18.22.46;	author brlcad;	state Exp;
branches;
next	14.155;

14.155
date	2005.08.27.18.17.54;	author brlcad;	state Exp;
branches;
next	14.154;

14.154
date	2005.08.27.14.24.33;	author brlcad;	state Exp;
branches;
next	14.153;

14.153
date	2005.08.24.16.19.16;	author brlcad;	state Exp;
branches;
next	14.152;

14.152
date	2005.08.23.21.06.05;	author lbutler;	state Exp;
branches;
next	14.151;

14.151
date	2005.08.22.22.33.42;	author lbutler;	state Exp;
branches;
next	14.150;

14.150
date	2005.08.22.12.37.18;	author brlcad;	state Exp;
branches;
next	14.149;

14.149
date	2005.08.22.02.06.51;	author brlcad;	state Exp;
branches;
next	14.148;

14.148
date	2005.08.22.01.29.34;	author brlcad;	state Exp;
branches;
next	14.147;

14.147
date	2005.08.22.01.19.50;	author brlcad;	state Exp;
branches;
next	14.146;

14.146
date	2005.08.22.01.09.20;	author brlcad;	state Exp;
branches;
next	14.145;

14.145
date	2005.08.21.20.15.29;	author brlcad;	state Exp;
branches;
next	14.144;

14.144
date	2005.08.21.07.59.59;	author brlcad;	state Exp;
branches;
next	14.143;

14.143
date	2005.08.21.07.56.53;	author brlcad;	state Exp;
branches;
next	14.142;

14.142
date	2005.08.21.02.48.52;	author brlcad;	state Exp;
branches;
next	14.141;

14.141
date	2005.08.15.04.15.00;	author brlcad;	state Exp;
branches
	14.141.2.1;
next	14.140;

14.140
date	2005.08.06.05.46.13;	author twingy;	state Exp;
branches;
next	14.139;

14.139
date	2005.07.25.05.49.53;	author brlcad;	state Exp;
branches;
next	14.138;

14.138
date	2005.07.17.06.31.30;	author brlcad;	state Exp;
branches;
next	14.137;

14.137
date	2005.07.17.00.59.37;	author brlcad;	state Exp;
branches;
next	14.136;

14.136
date	2005.07.13.04.40.26;	author brlcad;	state Exp;
branches;
next	14.135;

14.135
date	2005.07.13.00.08.27;	author brlcad;	state Exp;
branches
	14.135.2.1;
next	14.134;

14.134
date	2005.07.12.14.45.55;	author brlcad;	state Exp;
branches;
next	14.133;

14.133
date	2005.07.12.05.05.11;	author brlcad;	state Exp;
branches;
next	14.132;

14.132
date	2005.07.11.15.26.03;	author brlcad;	state Exp;
branches;
next	14.131;

14.131
date	2005.07.11.05.12.33;	author brlcad;	state Exp;
branches;
next	14.130;

14.130
date	2005.07.11.03.51.37;	author brlcad;	state Exp;
branches;
next	14.129;

14.129
date	2005.07.10.05.54.37;	author twingy;	state Exp;
branches;
next	14.128;

14.128
date	2005.07.10.04.29.11;	author brlcad;	state Exp;
branches;
next	14.127;

14.127
date	2005.07.07.06.02.54;	author brlcad;	state Exp;
branches;
next	14.126;

14.126
date	2005.07.06.23.03.07;	author brlcad;	state Exp;
branches;
next	14.125;

14.125
date	2005.07.04.04.23.05;	author brlcad;	state Exp;
branches;
next	14.124;

14.124
date	2005.07.04.03.48.58;	author brlcad;	state Exp;
branches;
next	14.123;

14.123
date	2005.07.01.00.51.48;	author brlcad;	state Exp;
branches;
next	14.122;

14.122
date	2005.06.30.22.27.39;	author brlcad;	state Exp;
branches;
next	14.121;

14.121
date	2005.06.28.23.15.14;	author brlcad;	state Exp;
branches;
next	14.120;

14.120
date	2005.06.28.20.51.28;	author brlcad;	state Exp;
branches;
next	14.119;

14.119
date	2005.06.25.00.43.08;	author brlcad;	state Exp;
branches;
next	14.118;

14.118
date	2005.06.23.01.42.10;	author brlcad;	state Exp;
branches;
next	14.117;

14.117
date	2005.06.23.01.08.28;	author brlcad;	state Exp;
branches;
next	14.116;

14.116
date	2005.06.22.01.37.49;	author brlcad;	state Exp;
branches;
next	14.115;

14.115
date	2005.06.22.01.35.43;	author brlcad;	state Exp;
branches;
next	14.114;

14.114
date	2005.06.21.07.00.44;	author brlcad;	state Exp;
branches;
next	14.113;

14.113
date	2005.06.20.15.19.32;	author brlcad;	state Exp;
branches;
next	14.112;

14.112
date	2005.06.20.15.08.07;	author brlcad;	state Exp;
branches;
next	14.111;

14.111
date	2005.06.17.21.39.49;	author erikgreenwald;	state Exp;
branches;
next	14.110;

14.110
date	2005.06.17.19.16.32;	author erikgreenwald;	state Exp;
branches;
next	14.109;

14.109
date	2005.06.12.21.41.18;	author brlcad;	state Exp;
branches;
next	14.108;

14.108
date	2005.06.10.17.35.08;	author brlcad;	state Exp;
branches;
next	14.107;

14.107
date	2005.06.09.03.49.09;	author brlcad;	state Exp;
branches;
next	14.106;

14.106
date	2005.06.06.17.24.14;	author brlcad;	state Exp;
branches;
next	14.105;

14.105
date	2005.06.03.01.04.13;	author brlcad;	state Exp;
branches;
next	14.104;

14.104
date	2005.05.30.20.13.15;	author brlcad;	state Exp;
branches;
next	14.103;

14.103
date	2005.05.13.13.52.53;	author brlcad;	state Exp;
branches;
next	14.102;

14.102
date	2005.05.12.01.12.24;	author brlcad;	state Exp;
branches;
next	14.101;

14.101
date	2005.05.11.20.31.46;	author brlcad;	state Exp;
branches;
next	14.100;

14.100
date	2005.05.11.02.24.23;	author brlcad;	state Exp;
branches;
next	14.99;

14.99
date	2005.05.09.18.47.32;	author brlcad;	state Exp;
branches;
next	14.98;

14.98
date	2005.05.01.21.31.30;	author brlcad;	state Exp;
branches;
next	14.97;

14.97
date	2005.05.01.19.48.22;	author brlcad;	state Exp;
branches;
next	14.96;

14.96
date	2005.04.27.02.41.09;	author brlcad;	state Exp;
branches;
next	14.95;

14.95
date	2005.04.27.02.29.21;	author brlcad;	state Exp;
branches;
next	14.94;

14.94
date	2005.04.26.23.06.26;	author brlcad;	state Exp;
branches;
next	14.93;

14.93
date	2005.04.26.17.38.28;	author brlcad;	state Exp;
branches;
next	14.92;

14.92
date	2005.04.26.17.35.14;	author brlcad;	state Exp;
branches;
next	14.91;

14.91
date	2005.04.26.08.23.46;	author brlcad;	state Exp;
branches;
next	14.90;

14.90
date	2005.04.26.01.37.26;	author brlcad;	state Exp;
branches;
next	14.89;

14.89
date	2005.04.25.22.24.35;	author brlcad;	state Exp;
branches;
next	14.88;

14.88
date	2005.04.24.23.57.37;	author brlcad;	state Exp;
branches;
next	14.87;

14.87
date	2005.04.22.20.07.40;	author brlcad;	state Exp;
branches;
next	14.86;

14.86
date	2005.04.22.06.14.33;	author brlcad;	state Exp;
branches;
next	14.85;

14.85
date	2005.04.19.16.24.59;	author brlcad;	state Exp;
branches;
next	14.84;

14.84
date	2005.04.18.23.36.49;	author brlcad;	state Exp;
branches;
next	14.83;

14.83
date	2005.04.18.23.01.48;	author brlcad;	state Exp;
branches;
next	14.82;

14.82
date	2005.04.18.18.49.23;	author brlcad;	state Exp;
branches;
next	14.81;

14.81
date	2005.04.18.03.44.29;	author brlcad;	state Exp;
branches;
next	14.80;

14.80
date	2005.04.17.05.58.23;	author brlcad;	state Exp;
branches;
next	14.79;

14.79
date	2005.04.17.04.59.45;	author brlcad;	state Exp;
branches;
next	14.78;

14.78
date	2005.04.14.19.02.57;	author erikgreenwald;	state Exp;
branches;
next	14.77;

14.77
date	2005.04.14.05.17.47;	author brlcad;	state Exp;
branches;
next	14.76;

14.76
date	2005.04.13.22.25.34;	author brlcad;	state Exp;
branches;
next	14.75;

14.75
date	2005.04.11.21.27.09;	author brlcad;	state Exp;
branches;
next	14.74;

14.74
date	2005.04.07.17.06.39;	author erikgreenwald;	state Exp;
branches;
next	14.73;

14.73
date	2005.04.03.06.51.21;	author brlcad;	state Exp;
branches;
next	14.72;

14.72
date	2005.04.03.06.36.32;	author brlcad;	state Exp;
branches;
next	14.71;

14.71
date	2005.04.02.20.55.17;	author brlcad;	state Exp;
branches;
next	14.70;

14.70
date	2005.04.01.23.05.50;	author brlcad;	state Exp;
branches;
next	14.69;

14.69
date	2005.03.28.23.34.57;	author brlcad;	state Exp;
branches;
next	14.68;

14.68
date	2005.03.28.19.22.17;	author brlcad;	state Exp;
branches;
next	14.67;

14.67
date	2005.03.28.16.47.36;	author brlcad;	state Exp;
branches;
next	14.66;

14.66
date	2005.03.28.08.30.08;	author brlcad;	state Exp;
branches;
next	14.65;

14.65
date	2005.03.26.20.11.07;	author brlcad;	state Exp;
branches;
next	14.64;

14.64
date	2005.03.24.07.32.30;	author brlcad;	state Exp;
branches;
next	14.63;

14.63
date	2005.03.23.06.13.57;	author brlcad;	state Exp;
branches;
next	14.62;

14.62
date	2005.03.23.05.55.30;	author brlcad;	state Exp;
branches;
next	14.61;

14.61
date	2005.03.21.04.31.14;	author brlcad;	state Exp;
branches;
next	14.60;

14.60
date	2005.03.20.00.55.21;	author brlcad;	state Exp;
branches;
next	14.59;

14.59
date	2005.03.19.23.32.26;	author brlcad;	state Exp;
branches;
next	14.58;

14.58
date	2005.03.19.18.41.17;	author brlcad;	state Exp;
branches;
next	14.57;

14.57
date	2005.03.19.02.13.58;	author brlcad;	state Exp;
branches;
next	14.56;

14.56
date	2005.03.18.23.38.10;	author brlcad;	state Exp;
branches;
next	14.55;

14.55
date	2005.03.18.23.24.31;	author brlcad;	state Exp;
branches;
next	14.54;

14.54
date	2005.03.18.19.03.37;	author brlcad;	state Exp;
branches;
next	14.53;

14.53
date	2005.03.18.16.21.14;	author brlcad;	state Exp;
branches;
next	14.52;

14.52
date	2005.03.18.14.15.53;	author brlcad;	state Exp;
branches;
next	14.51;

14.51
date	2005.03.16.07.19.16;	author brlcad;	state Exp;
branches;
next	14.50;

14.50
date	2005.03.14.05.22.33;	author brlcad;	state Exp;
branches;
next	14.49;

14.49
date	2005.03.14.01.13.51;	author brlcad;	state Exp;
branches;
next	14.48;

14.48
date	2005.03.13.23.27.26;	author brlcad;	state Exp;
branches;
next	14.47;

14.47
date	2005.03.13.20.51.42;	author brlcad;	state Exp;
branches;
next	14.46;

14.46
date	2005.03.13.19.56.18;	author brlcad;	state Exp;
branches;
next	14.45;

14.45
date	2005.03.13.09.02.38;	author brlcad;	state Exp;
branches;
next	14.44;

14.44
date	2005.03.13.08.57.55;	author brlcad;	state Exp;
branches;
next	14.43;

14.43
date	2005.03.13.07.30.13;	author brlcad;	state Exp;
branches;
next	14.42;

14.42
date	2005.03.13.06.54.24;	author brlcad;	state Exp;
branches;
next	14.41;

14.41
date	2005.03.13.01.20.39;	author brlcad;	state Exp;
branches;
next	14.40;

14.40
date	2005.03.11.02.49.11;	author brlcad;	state Exp;
branches;
next	14.39;

14.39
date	2005.03.11.02.47.38;	author brlcad;	state Exp;
branches;
next	14.38;

14.38
date	2005.03.05.08.48.38;	author brlcad;	state Exp;
branches;
next	14.37;

14.37
date	2005.02.28.06.09.18;	author brlcad;	state Exp;
branches;
next	14.36;

14.36
date	2005.02.28.05.16.00;	author brlcad;	state Exp;
branches;
next	14.35;

14.35
date	2005.02.23.06.56.03;	author brlcad;	state Exp;
branches;
next	14.34;

14.34
date	2005.02.21.20.58.48;	author brlcad;	state Exp;
branches;
next	14.33;

14.33
date	2005.02.21.18.08.43;	author brlcad;	state Exp;
branches;
next	14.32;

14.32
date	2005.02.21.16.52.43;	author brlcad;	state Exp;
branches;
next	14.31;

14.31
date	2005.02.12.18.26.44;	author brlcad;	state Exp;
branches;
next	14.30;

14.30
date	2005.02.11.18.24.39;	author brlcad;	state Exp;
branches;
next	14.29;

14.29
date	2005.02.11.18.23.09;	author brlcad;	state Exp;
branches;
next	14.28;

14.28
date	2005.02.11.15.06.07;	author brlcad;	state Exp;
branches;
next	14.27;

14.27
date	2005.01.30.20.30.08;	author brlcad;	state Exp;
branches;
next	14.26;

14.26
date	2005.01.29.04.32.01;	author brlcad;	state Exp;
branches;
next	14.25;

14.25
date	2005.01.27.07.40.20;	author brlcad;	state Exp;
branches;
next	14.24;

14.24
date	2005.01.26.15.26.11;	author brlcad;	state Exp;
branches;
next	14.23;

14.23
date	2005.01.25.08.23.04;	author brlcad;	state Exp;
branches;
next	14.22;

14.22
date	2005.01.25.04.35.37;	author brlcad;	state Exp;
branches;
next	14.21;

14.21
date	2005.01.24.05.24.46;	author brlcad;	state Exp;
branches;
next	14.20;

14.20
date	2005.01.19.08.58.50;	author brlcad;	state Exp;
branches;
next	14.19;

14.19
date	2005.01.19.07.36.03;	author brlcad;	state Exp;
branches;
next	14.18;

14.18
date	2005.01.11.06.36.37;	author brlcad;	state Exp;
branches;
next	14.17;

14.17
date	2005.01.11.06.30.00;	author brlcad;	state Exp;
branches;
next	14.16;

14.16
date	2005.01.11.06.27.26;	author brlcad;	state Exp;
branches;
next	14.15;

14.15
date	2005.01.11.03.59.11;	author brlcad;	state Exp;
branches;
next	14.14;

14.14
date	2005.01.11.00.06.52;	author brlcad;	state Exp;
branches;
next	14.13;

14.13
date	2005.01.09.18.19.37;	author brlcad;	state Exp;
branches;
next	14.12;

14.12
date	2005.01.09.00.29.48;	author brlcad;	state Exp;
branches;
next	14.11;

14.11
date	2005.01.07.15.39.39;	author brlcad;	state Exp;
branches;
next	14.10;

14.10
date	2005.01.07.13.09.58;	author brlcad;	state Exp;
branches;
next	14.9;

14.9
date	2004.12.23.07.01.52;	author brlcad;	state Exp;
branches;
next	14.8;

14.8
date	2004.12.21.03.32.04;	author morrison;	state Exp;
branches;
next	14.7;

14.7
date	2004.12.21.01.07.59;	author butler;	state Exp;
branches;
next	14.6;

14.6
date	2004.12.16.17.47.22;	author jlowens;	state Exp;
branches;
next	14.5;

14.5
date	2004.12.16.15.04.42;	author erikg;	state Exp;
branches;
next	14.4;

14.4
date	2004.11.29.19.49.15;	author morrison;	state Exp;
branches;
next	14.3;

14.3
date	2004.11.29.17.44.09;	author morrison;	state Exp;
branches;
next	14.2;

14.2
date	2004.11.16.19.51.07;	author morrison;	state Exp;
branches;
next	14.1;

14.1
date	2004.11.16.19.42.08;	author morrison;	state Exp;
branches;
next	1.170;

1.170
date	2004.11.10.00.57.24;	author morrison;	state Exp;
branches;
next	1.169;

1.169
date	2004.11.09.20.32.47;	author morrison;	state Exp;
branches;
next	1.168;

1.168
date	2004.11.01.19.06.30;	author morrison;	state Exp;
branches;
next	1.167;

1.167
date	2004.11.01.18.59.52;	author morrison;	state Exp;
branches;
next	1.166;

1.166
date	2004.11.01.18.44.24;	author morrison;	state Exp;
branches;
next	1.165;

1.165
date	2004.11.01.13.54.24;	author morrison;	state Exp;
branches
	1.165.2.1;
next	1.164;

1.164
date	2004.10.29.13.45.28;	author morrison;	state Exp;
branches;
next	1.163;

1.163
date	2004.10.28.18.19.59;	author morrison;	state Exp;
branches;
next	1.162;

1.162
date	2004.10.22.18.44.58;	author butler;	state Exp;
branches;
next	1.161;

1.161
date	2004.10.22.04.32.24;	author morrison;	state Exp;
branches;
next	1.160;

1.160
date	2004.10.15.19.53.41;	author butler;	state Exp;
branches;
next	1.159;

1.159
date	2004.10.15.17.15.33;	author morrison;	state Exp;
branches;
next	1.158;

1.158
date	2004.10.15.08.41.46;	author morrison;	state Exp;
branches;
next	1.157;

1.157
date	2004.10.14.15.42.34;	author morrison;	state Exp;
branches;
next	1.156;

1.156
date	2004.10.14.14.52.15;	author morrison;	state Exp;
branches;
next	1.155;

1.155
date	2004.10.14.05.19.48;	author morrison;	state Exp;
branches;
next	1.154;

1.154
date	2004.10.07.18.21.01;	author morrison;	state Exp;
branches;
next	1.153;

1.153
date	2004.10.07.13.23.18;	author morrison;	state Exp;
branches;
next	1.152;

1.152
date	2004.10.07.12.53.58;	author morrison;	state Exp;
branches;
next	1.151;

1.151
date	2004.10.07.12.28.43;	author morrison;	state Exp;
branches;
next	1.150;

1.150
date	2004.10.07.12.09.59;	author morrison;	state Exp;
branches;
next	1.149;

1.149
date	2004.10.07.10.53.50;	author morrison;	state Exp;
branches;
next	1.148;

1.148
date	2004.10.07.09.59.22;	author morrison;	state Exp;
branches;
next	1.147;

1.147
date	2004.10.07.04.29.56;	author morrison;	state Exp;
branches;
next	1.146;

1.146
date	2004.10.07.00.58.09;	author morrison;	state Exp;
branches;
next	1.145;

1.145
date	2004.10.06.14.31.03;	author morrison;	state Exp;
branches;
next	1.144;

1.144
date	2004.10.04.15.22.09;	author morrison;	state Exp;
branches;
next	1.143;

1.143
date	2004.10.02.00.10.28;	author morrison;	state Exp;
branches;
next	1.142;

1.142
date	2004.09.27.20.03.11;	author morrison;	state Exp;
branches;
next	1.141;

1.141
date	2004.09.25.22.02.30;	author morrison;	state Exp;
branches;
next	1.140;

1.140
date	2004.09.24.23.17.28;	author morrison;	state Exp;
branches;
next	1.139;

1.139
date	2004.09.24.21.35.25;	author erikg;	state Exp;
branches;
next	1.138;

1.138
date	2004.09.24.16.18.13;	author morrison;	state Exp;
branches;
next	1.137;

1.137
date	2004.09.24.14.51.28;	author morrison;	state Exp;
branches;
next	1.136;

1.136
date	2004.09.23.23.18.46;	author butler;	state Exp;
branches;
next	1.135;

1.135
date	2004.09.23.22.48.14;	author butler;	state Exp;
branches;
next	1.134;

1.134
date	2004.09.23.20.32.14;	author morrison;	state Exp;
branches;
next	1.133;

1.133
date	2004.09.23.18.05.57;	author morrison;	state Exp;
branches;
next	1.132;

1.132
date	2004.09.23.18.01.01;	author morrison;	state Exp;
branches;
next	1.131;

1.131
date	2004.09.23.17.47.01;	author butler;	state Exp;
branches;
next	1.130;

1.130
date	2004.09.20.15.03.23;	author morrison;	state Exp;
branches;
next	1.129;

1.129
date	2004.09.20.12.37.30;	author morrison;	state Exp;
branches;
next	1.128;

1.128
date	2004.09.20.06.34.24;	author morrison;	state Exp;
branches;
next	1.127;

1.127
date	2004.09.17.20.17.30;	author morrison;	state Exp;
branches;
next	1.126;

1.126
date	2004.09.17.17.48.03;	author morrison;	state Exp;
branches;
next	1.125;

1.125
date	2004.09.13.21.04.35;	author morrison;	state Exp;
branches;
next	1.124;

1.124
date	2004.09.10.13.41.09;	author erikg;	state Exp;
branches;
next	1.123;

1.123
date	2004.09.08.14.35.52;	author morrison;	state Exp;
branches;
next	1.122;

1.122
date	2004.09.07.17.29.00;	author erikg;	state Exp;
branches;
next	1.121;

1.121
date	2004.09.07.16.16.12;	author morrison;	state Exp;
branches;
next	1.120;

1.120
date	2004.09.04.07.37.00;	author morrison;	state Exp;
branches;
next	1.119;

1.119
date	2004.09.02.20.06.40;	author morrison;	state Exp;
branches;
next	1.118;

1.118
date	2004.09.02.17.45.46;	author erikg;	state Exp;
branches;
next	1.117;

1.117
date	2004.09.02.17.11.51;	author erikg;	state Exp;
branches;
next	1.116;

1.116
date	2004.09.02.16.39.57;	author erikg;	state Exp;
branches;
next	1.115;

1.115
date	2004.09.02.14.54.12;	author erikg;	state Exp;
branches;
next	1.114;

1.114
date	2004.09.02.05.54.49;	author morrison;	state Exp;
branches;
next	1.113;

1.113
date	2004.09.02.04.20.16;	author morrison;	state Exp;
branches;
next	1.112;

1.112
date	2004.09.01.22.15.43;	author morrison;	state Exp;
branches;
next	1.111;

1.111
date	2004.09.01.14.16.08;	author morrison;	state Exp;
branches;
next	1.110;

1.110
date	2004.08.31.07.18.37;	author morrison;	state Exp;
branches;
next	1.109;

1.109
date	2004.08.31.06.50.56;	author morrison;	state Exp;
branches;
next	1.108;

1.108
date	2004.08.25.22.07.04;	author morrison;	state Exp;
branches;
next	1.107;

1.107
date	2004.08.25.21.01.00;	author morrison;	state Exp;
branches;
next	1.106;

1.106
date	2004.08.25.19.47.41;	author morrison;	state Exp;
branches;
next	1.105;

1.105
date	2004.08.25.19.23.53;	author erikg;	state Exp;
branches;
next	1.104;

1.104
date	2004.08.25.18.30.58;	author erikg;	state Exp;
branches;
next	1.103;

1.103
date	2004.08.25.15.03.12;	author morrison;	state Exp;
branches;
next	1.102;

1.102
date	2004.08.03.07.56.11;	author morrison;	state Exp;
branches;
next	1.101;

1.101
date	2004.08.02.23.01.46;	author morrison;	state Exp;
branches;
next	1.100;

1.100
date	2004.08.02.06.45.48;	author morrison;	state Exp;
branches;
next	1.99;

1.99
date	2004.07.28.19.25.51;	author morrison;	state Exp;
branches;
next	1.98;

1.98
date	2004.07.27.05.34.52;	author morrison;	state Exp;
branches;
next	1.97;

1.97
date	2004.07.27.05.05.20;	author morrison;	state Exp;
branches;
next	1.96;

1.96
date	2004.07.25.08.17.19;	author morrison;	state Exp;
branches;
next	1.95;

1.95
date	2004.07.22.23.46.34;	author morrison;	state Exp;
branches;
next	1.94;

1.94
date	2004.07.22.20.03.41;	author morrison;	state Exp;
branches;
next	1.93;

1.93
date	2004.07.21.23.09.57;	author morrison;	state Exp;
branches;
next	1.92;

1.92
date	2004.07.21.13.37.13;	author morrison;	state Exp;
branches;
next	1.91;

1.91
date	2004.07.19.13.36.36;	author erikg;	state Exp;
branches;
next	1.90;

1.90
date	2004.07.19.13.32.55;	author erikg;	state Exp;
branches;
next	1.89;

1.89
date	2004.07.19.13.23.01;	author erikg;	state Exp;
branches;
next	1.88;

1.88
date	2004.07.16.04.46.40;	author morrison;	state Exp;
branches;
next	1.87;

1.87
date	2004.07.16.04.37.22;	author morrison;	state Exp;
branches;
next	1.86;

1.86
date	2004.07.13.22.23.37;	author morrison;	state Exp;
branches;
next	1.85;

1.85
date	2004.07.13.17.43.45;	author morrison;	state Exp;
branches;
next	1.84;

1.84
date	2004.07.13.15.54.11;	author morrison;	state Exp;
branches;
next	1.83;

1.83
date	2004.07.08.17.09.11;	author morrison;	state Exp;
branches;
next	1.82;

1.82
date	2004.07.07.18.01.55;	author morrison;	state Exp;
branches;
next	1.81;

1.81
date	2004.06.22.17.38.55;	author morrison;	state Exp;
branches;
next	1.80;

1.80
date	2004.06.15.13.43.07;	author erikg;	state Exp;
branches;
next	1.79;

1.79
date	2004.06.14.18.44.38;	author erikg;	state Exp;
branches;
next	1.78;

1.78
date	2004.06.14.18.39.23;	author erikg;	state Exp;
branches;
next	1.77;

1.77
date	2004.06.14.18.18.19;	author erikg;	state Exp;
branches;
next	1.76;

1.76
date	2004.06.10.16.59.56;	author morrison;	state Exp;
branches;
next	1.75;

1.75
date	2004.06.09.20.25.39;	author morrison;	state Exp;
branches;
next	1.74;

1.74
date	2004.06.08.22.59.52;	author morrison;	state Exp;
branches;
next	1.73;

1.73
date	2004.06.08.22.09.26;	author morrison;	state Exp;
branches;
next	1.72;

1.72
date	2004.06.08.19.21.29;	author morrison;	state Exp;
branches;
next	1.71;

1.71
date	2004.06.08.17.39.39;	author morrison;	state Exp;
branches;
next	1.70;

1.70
date	2004.06.07.20.47.52;	author erikg;	state Exp;
branches;
next	1.69;

1.69
date	2004.06.07.20.26.33;	author erikg;	state Exp;
branches;
next	1.68;

1.68
date	2004.06.07.18.42.06;	author morrison;	state Exp;
branches;
next	1.67;

1.67
date	2004.06.04.21.51.50;	author morrison;	state Exp;
branches;
next	1.66;

1.66
date	2004.06.04.20.47.42;	author morrison;	state Exp;
branches;
next	1.65;

1.65
date	2004.06.04.14.55.35;	author morrison;	state Exp;
branches;
next	1.64;

1.64
date	2004.06.04.14.52.44;	author morrison;	state Exp;
branches;
next	1.63;

1.63
date	2004.06.04.05.58.04;	author morrison;	state Exp;
branches;
next	1.62;

1.62
date	2004.06.04.05.55.26;	author morrison;	state Exp;
branches;
next	1.61;

1.61
date	2004.06.03.17.09.35;	author erikg;	state Exp;
branches;
next	1.60;

1.60
date	2004.06.03.14.58.23;	author erikg;	state Exp;
branches;
next	1.59;

1.59
date	2004.05.27.20.25.41;	author erikg;	state Exp;
branches;
next	1.58;

1.58
date	2004.05.27.20.01.13;	author erikg;	state Exp;
branches;
next	1.57;

1.57
date	2004.05.27.18.59.39;	author erikg;	state Exp;
branches;
next	1.56;

1.56
date	2004.05.27.18.52.45;	author erikg;	state Exp;
branches;
next	1.55;

1.55
date	2004.05.26.19.56.17;	author morrison;	state Exp;
branches;
next	1.54;

1.54
date	2004.05.26.18.48.20;	author morrison;	state Exp;
branches;
next	1.53;

1.53
date	2004.05.26.14.46.37;	author morrison;	state Exp;
branches;
next	1.52;

1.52
date	2004.05.25.20.17.58;	author morrison;	state Exp;
branches;
next	1.51;

1.51
date	2004.05.25.18.08.16;	author morrison;	state Exp;
branches;
next	1.50;

1.50
date	2004.05.25.18.07.54;	author morrison;	state Exp;
branches;
next	1.49;

1.49
date	2004.05.25.17.25.55;	author morrison;	state Exp;
branches;
next	1.48;

1.48
date	2004.05.24.20.52.33;	author morrison;	state Exp;
branches;
next	1.47;

1.47
date	2004.05.24.19.49.41;	author morrison;	state Exp;
branches;
next	1.46;

1.46
date	2004.05.24.18.14.03;	author morrison;	state Exp;
branches;
next	1.45;

1.45
date	2004.05.24.18.03.00;	author morrison;	state Exp;
branches;
next	1.44;

1.44
date	2004.05.24.17.53.44;	author morrison;	state Exp;
branches;
next	1.43;

1.43
date	2004.05.20.22.57.38;	author morrison;	state Exp;
branches;
next	1.42;

1.42
date	2004.05.17.21.58.15;	author morrison;	state Exp;
branches;
next	1.41;

1.41
date	2004.05.17.21.48.54;	author morrison;	state Exp;
branches;
next	1.40;

1.40
date	2004.05.17.19.57.47;	author morrison;	state Exp;
branches;
next	1.39;

1.39
date	2004.05.13.19.15.48;	author morrison;	state Exp;
branches;
next	1.38;

1.38
date	2004.05.13.16.06.41;	author morrison;	state Exp;
branches;
next	1.37;

1.37
date	2004.05.13.15.24.37;	author morrison;	state Exp;
branches;
next	1.36;

1.36
date	2004.05.13.15.19.33;	author morrison;	state Exp;
branches;
next	1.35;

1.35
date	2004.05.13.14.45.57;	author morrison;	state Exp;
branches;
next	1.34;

1.34
date	2004.05.13.14.36.49;	author morrison;	state Exp;
branches;
next	1.33;

1.33
date	2004.05.13.12.17.14;	author morrison;	state Exp;
branches;
next	1.32;

1.32
date	2004.05.13.04.46.28;	author morrison;	state Exp;
branches;
next	1.31;

1.31
date	2004.05.13.03.39.20;	author morrison;	state Exp;
branches;
next	1.30;

1.30
date	2004.05.12.20.46.11;	author morrison;	state Exp;
branches;
next	1.29;

1.29
date	2004.05.12.17.24.21;	author morrison;	state Exp;
branches;
next	1.28;

1.28
date	2004.05.12.04.10.20;	author morrison;	state Exp;
branches;
next	1.27;

1.27
date	2004.05.11.19.13.04;	author morrison;	state Exp;
branches;
next	1.26;

1.26
date	2004.05.11.14.48.46;	author erikg;	state Exp;
branches;
next	1.25;

1.25
date	2004.05.11.14.40.23;	author erikg;	state Exp;
branches;
next	1.24;

1.24
date	2004.05.11.14.27.29;	author erikg;	state Exp;
branches;
next	1.23;

1.23
date	2004.05.11.14.12.58;	author erikg;	state Exp;
branches;
next	1.22;

1.22
date	2004.05.10.17.47.47;	author erikg;	state Exp;
branches;
next	1.21;

1.21
date	2004.05.10.13.43.26;	author erikg;	state Exp;
branches;
next	1.20;

1.20
date	2004.05.07.19.32.26;	author erikg;	state Exp;
branches;
next	1.19;

1.19
date	2004.05.07.19.24.01;	author morrison;	state Exp;
branches;
next	1.18;

1.18
date	2004.04.20.13.50.43;	author morrison;	state Exp;
branches;
next	1.17;

1.17
date	2004.04.20.13.27.52;	author morrison;	state Exp;
branches;
next	1.16;

1.16
date	2004.04.15.18.35.31;	author morrison;	state Exp;
branches;
next	1.15;

1.15
date	2004.04.13.18.18.31;	author morrison;	state Exp;
branches;
next	1.14;

1.14
date	2004.04.13.17.31.22;	author morrison;	state Exp;
branches;
next	1.13;

1.13
date	2004.04.06.18.39.24;	author morrison;	state Exp;
branches;
next	1.12;

1.12
date	2004.04.06.11.40.43;	author erikg;	state Exp;
branches;
next	1.11;

1.11
date	2004.04.05.12.06.32;	author erikg;	state Exp;
branches;
next	1.10;

1.10
date	2004.04.02.19.01.03;	author erikg;	state Exp;
branches;
next	1.9;

1.9
date	2004.04.01.15.36.12;	author erikg;	state Exp;
branches;
next	1.8;

1.8
date	2004.04.01.15.16.28;	author erikg;	state Exp;
branches;
next	1.7;

1.7
date	2004.04.01.14.23.43;	author erikg;	state Exp;
branches;
next	1.6;

1.6
date	2004.04.01.14.01.01;	author erikg;	state Exp;
branches;
next	1.5;

1.5
date	2004.04.01.13.14.33;	author erikg;	state Exp;
branches;
next	1.4;

1.4
date	2004.03.31.20.22.45;	author erikg;	state Exp;
branches;
next	1.3;

1.3
date	2004.03.23.18.46.50;	author erikg;	state Exp;
branches;
next	1.2;

1.2
date	2004.03.19.15.48.11;	author erikg;	state Exp;
branches;
next	1.1;

1.1
date	2004.03.19.12.35.32;	author erikg;	state Exp;
branches;
next	;

1.165.2.1
date	2004.11.01.18.42.53;	author morrison;	state Exp;
branches;
next	1.165.2.2;

1.165.2.2
date	2004.11.01.18.51.32;	author morrison;	state Exp;
branches;
next	;

14.135.2.1
date	2005.08.16.21.03.44;	author brlcad;	state Exp;
branches;
next	14.135.2.2;

14.135.2.2
date	2005.08.16.21.15.20;	author brlcad;	state Exp;
branches;
next	;

14.141.2.1
date	2005.09.21.14.18.04;	author bob1961;	state Exp;
branches;
next	;

14.164.2.1
date	2005.09.29.06.20.59;	author brlcad;	state Exp;
branches;
next	14.164.2.2;

14.164.2.2
date	2005.09.29.19.07.09;	author brlcad;	state Exp;
branches;
next	14.164.2.3;

14.164.2.3
date	2005.11.13.13.46.08;	author brlcad;	state Exp;
branches;
next	14.164.2.4;

14.164.2.4
date	2005.11.13.17.44.59;	author brlcad;	state Exp;
branches;
next	14.164.2.5;

14.164.2.5
date	2006.03.22.06.48.14;	author brlcad;	state Exp;
branches;
next	14.164.2.6;

14.164.2.6
date	2006.03.22.06.55.18;	author brlcad;	state Exp;
branches;
next	;

14.230.2.1
date	2006.03.16.20.52.33;	author jlowenz;	state Exp;
branches;
next	14.230.2.2;

14.230.2.2
date	2006.04.07.19.08.18;	author jlowenz;	state Exp;
branches;
next	;

14.389.2.1
date	2007.09.28.09.59.37;	author brlcad;	state Exp;
branches;
next	14.389.2.2;

14.389.2.2
date	2007.09.28.14.04.31;	author brlcad;	state Exp;
branches;
next	14.389.2.3;

14.389.2.3
date	2007.11.08.21.56.45;	author erikgreenwald;	state Exp;
branches;
next	14.389.2.4;

14.389.2.4
date	2007.11.13.17.32.36;	author erikgreenwald;	state Exp;
branches;
next	;


desc
@@


14.454
log
@rand() is c89/c90 so don't need/want to check for it.  check for random() instead.
@
text
@dnl                    C O N F I G U R E . A C
dnl BRL-CAD
dnl
dnl Copyright (c) 2004-2007 United States Government as represented by
dnl the U.S. Army Research Laboratory.
dnl
dnl Redistribution and use in source and binary forms, with or without
dnl modification, are permitted provided that the following conditions
dnl are met:
dnl
dnl 1. Redistributions of source code must retain the above copyright
dnl notice, this list of conditions and the following disclaimer.
dnl
dnl 2. Redistributions in binary form must reproduce the above
dnl copyright notice, this list of conditions and the following
dnl disclaimer in the documentation and/or other materials provided
dnl with the distribution.
dnl
dnl 3. The name of the author may not be used to endorse or promote
dnl products derived from this software without specific prior written
dnl permission.
dnl
dnl THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS
dnl OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
dnl WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
dnl ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY
dnl DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
dnl DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
dnl GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
dnl INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
dnl WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
dnl NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
dnl SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
dnl
dnl NOTE: BRL-CAD as a collective work is distributed under the LGPL.
dnl       BRL-CAD's build system is under the BSD license.
dnl       See the COPYING file for more details.
dnl
dnl $Id: configure.ac,v 14.453 2007/12/18 21:33:31 erikgreenwald Exp $
dnl
dnl ******************************************************************
dnl ***                  BRL-CAD's configure.ac                    ***
dnl ******************************************************************
dnl
dnl Herein lies the venerable GNU Build System configure template for
dnl BRL-CAD.  As best is reasonably possible, proper ordering and
dnl separation of tests and settings should be maintained per the
dnl recommended standard layout.  The tests should be added to the
dnl rather clearly labeled sections below so that they are as
dnl follows:
dnl
dnl     0) information on the package
dnl     1) check command-line arguments
dnl     2) check programs
dnl     3) check libraries
dnl     4) check headers
dnl     5) check types/structures
dnl     6) check compiler characteristics
dnl     7) check functions
dnl     8) check system services
dnl     9) output a summary
dnl
dnl Any useful build settings should be added to the output summary
dnl at the end.  Although it may be possible to check for certain
dnl features near the top in the command-line arguments section, any
dnl related tests should be delayed and placed into the appropriate
dnl check section.
dnl
dnl You should use enable/disable arguments for build settings and
dnl optional compilation components that are part of this package.
dnl You specify with/without arguments for components that are not a
dnl part of this package.
dnl
dnl Features of the GNU Autotools that would require an increase in
dnl the minimum version requirement are highly discouraged.  Likewise
dnl discouraged is rolling back support for versions released prior
dnl to the AC_PREREQ version shown below unless extensive testing has
dnl been performed.
dnl
dnl Strive to tame the chaos that is so easily achieved.
dnl

dnl minimum version of autoconf required.  should coincide with
dnl setting in autogen.sh script.
AC_PREREQ(2.52)

dnl See HACKING for details on how to properly update the version
define([MAJOR_VERSION], [patsubst(esyscmd([cat include/conf/MAJOR]), [
])])
define([MINOR_VERSION], [patsubst(esyscmd([cat include/conf/MINOR]), [
])])
define([PATCH_VERSION], [patsubst(esyscmd([cat include/conf/PATCH]), [
])])
define([CAD_VERSION], [patsubst([MAJOR_VERSION.MINOR_VERSION.PATCH_VERSION], [
])])

AC_INIT(BRL-CAD, [CAD_VERSION], [http://brlcad.org], brlcad)
AC_REVISION($Revision: 14.453 $)

AC_CONFIG_AUX_DIR(misc)

# keep track of cmd-line options for later
BC_ARG0="$0"
AC_SUBST(BC_ARG0)
BC_ARGS="$*"
AC_SUBST(BC_ARGS)

dnl just in case
PACKAGE_NAME="BRL-CAD"
AC_SUBST(PACKAGE_NAME)

BRLCAD_VERSION=CAD_VERSION
AC_SUBST(BRLCAD_VERSION)

# force locale setting to C so things like date output as expected
LC_ALL=C

CONFIG_DAY=`date +%d`
CONFIG_MONTH=`date +%m`
CONFIG_YEAR=`date +%Y`
CONFIG_DATE="${CONFIG_YEAR}${CONFIG_MONTH}${CONFIG_DAY}"
CONFIG_TIME="`date '+%H %M %S'`"
CONFIG_TS="`date`"
AC_SUBST(CONFIG_DAY)
AC_SUBST(CONFIG_MONTH)
AC_SUBST(CONFIG_YEAR)
AC_SUBST(CONFIG_DATE)
AC_SUBST(CONFIG_TIME)
AC_SUBST(CONFIG_TS)


# print out the title with a pretty box computed to wrap around
title="Configuring BRL-CAD Release $BRLCAD_VERSION, Build $CONFIG_DATE"
length="`echo x${title}x | wc -c`"
separator=""
while test $length -gt 1 ; do
separator="${separator}*"
length="`expr $length - 1`"
done

BC_BOLD
AC_MSG_RESULT([***${separator}***])
AC_MSG_RESULT([*** ${title} ***])
AC_MSG_RESULT([***${separator}***])
BC_UNBOLD

# necessary for proper file creation on nfs volumes
umask 022


# override the default autoconf cflags if user has not modified them
if test "x$CFLAGS" = "x" ; then
	# an unset CFLAGS var is set to "-O2 -g" during AC_PROG_CC, so
	# set it to something benign instead like whitespace
	CFLAGS=" "
fi
if test "x$CXXFLAGS" = "x" ; then
	# an unset CXXFLAGS var is set to "-O2 -g" during AC_PROG_CXX, so
	# set it to something benign instead like whitespace
	CXXFLAGS=" "
fi

# override the default (empty) yflags (yacc) if user has not modified them
if test "x$YFLAGS" = "x" ; then
	YFLAGS="-d"
fi
AC_SUBST(YFLAGS)

# cannot override LD directly, so warn about that (configure sets it)
if test "x$LD" != "x" ; then
	AC_MSG_WARN([LD cannot be set directly yet it seems to be set ($LD)])
fi

# classify this machine
AC_CANONICAL_HOST
AC_CANONICAL_TARGET

# am_init_automake performs a ac_prog_install check so need to handle
# problematic /usr/brl/bin/install on irix
if test "x$build_vendor" = "xsgi" ; then
   PATH="`echo $PATH | sed 's/\/brl\/bin/bin/g'`"
fi

# sanity check, make sure we have sources where we expect them
AC_CONFIG_SRCDIR([src/librt/bool.c])

# where are we coming from and where are we going to.
# prefix is set to NONE until AC_OUTPUT unless --prefix is used
AC_PREFIX_DEFAULT([/usr/brlcad])

# set up the BRLCAD_ROOT installation path
AC_MSG_CHECKING([where BRL-CAD is to be installed])
bc_prefix="$prefix"
eval "bc_prefix=\"$bc_prefix\""
eval "bc_prefix=\"$bc_prefix\""
if test "x$bc_prefix" = "xNONE" ; then
    bc_prefix="$ac_default_prefix"
    # should be /usr/brlcad, but just in case
    eval "bc_prefix=\"$bc_prefix\""
    eval "bc_prefix=\"$bc_prefix\""
fi
AC_DEFINE_UNQUOTED([BRLCAD_ROOT], "$bc_prefix", "Location BRL-CAD will install to")
AC_MSG_RESULT($bc_prefix)
if test ! "x$BRLCAD_ROOT" = "x" ; then
	AC_MSG_NOTICE([}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}])
	AC_MSG_WARN([BRLCAD_ROOT should only be used to override an install directory at runtime])
	AC_MSG_WARN([BRLCAD_ROOT is presently set to "${BRLCAD_ROOT}"])
	AC_MSG_NOTICE([It is highly recommended that BRLCAD_ROOT be unset and not used])
	if test "x$BRLCAD_ROOT" = "x$bc_prefix" ; then
		AC_MSG_WARN([BRLCAD_ROOT is not necessary and may cause unexpected behavior])
		AC_MSG_NOTICE([{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{])
	else
		AC_MSG_ERROR([*** Environment variable BRLCAD_ROOT conflicts with --prefix ***])
	fi
else
	# compensate for autoconf inconsistencies
	BRLCAD_ROOT="$bc_prefix"
fi
AC_SUBST(BRLCAD_ROOT)

# set up the BRLCAD_DATA install directory
#   e.g. /usr/local/share/brlcad/7.4.0
AC_MSG_CHECKING([where BRL-CAD resources are to be installed])
bc_data_dir="${datadir}"
if test "x$bc_data_dir" = "xNONE/share" ; then
	bc_data_dir="${bc_prefix}/share/brlcad/${BRLCAD_VERSION}"
elif test "x$bc_data_dir" = "x\${prefix}/share" ; then
	bc_data_dir="${bc_prefix}/share/brlcad/${BRLCAD_VERSION}"
fi
eval "bc_data_dir=\"$bc_data_dir\""
eval "bc_data_dir=\"$bc_data_dir\""
if test "x$bc_data_dir" = "xNONE/share" ; then
	bc_data_dir="${bc_prefix}/share/brlcad/${BRLCAD_VERSION}"
fi
AC_DEFINE_UNQUOTED([BRLCAD_DATA], "$bc_data_dir", "Location BRL-CAD resources will install to")
AC_MSG_RESULT($bc_data_dir)
if test ! "x$BRLCAD_DATA" = "x" ; then
	AC_MSG_NOTICE([}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}])
	AC_MSG_WARN([BRLCAD_DATA should only be used to override an install directory at runtime])
	AC_MSG_WARN([BRLCAD_DATA is presently set to "${BRLCAD_DATA}"])
	AC_MSG_NOTICE([It is highly recommended that BRLCAD_DATA be unset and not used])
	if test "x$BRLCAD_DATA" = "x$bc_data_dir" ; then
		AC_MSG_WARN([BRLCAD_DATA is not necessary and may cause unexpected behavior])
		AC_MSG_NOTICE([{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{])
	else
		AC_MSG_ERROR([*** Environment variable BRLCAD_DATA conflicts with --prefix or --datadir ***])
	fi
else
	# compensate for autoconf inconsistencies
	BRLCAD_DATA="$bc_data_dir"
fi
AC_SUBST(BRLCAD_DATA)

# if this is not a CVS checkout, disable dependency tracking for a
# faster build. it's not likely that the user is doing development
# from a source release. at least they really should not given the
# extra steps that are necessary for making a proper useful diff.
AC_MSG_CHECKING([whether dependency tracking should be enabled])
if test -d $srcdir/CVS ; then
	if test "x$enable_maintainer_mode" = "x" ; then
		enable_maintainer_mode="yes"
	fi
	if test "x$enable_dependency_tracking" = "x" ; then
		enable_dependency_tracking="yes"
	fi
	AC_MSG_RESULT([yes])
else
	if test "x$enable_maintainer_mode" = "x" ; then
		enable_maintainer_mode="no"
	fi
	if test "x$enable_dependency_tracking" = "x" ; then
		enable_dependency_tracking="no"
	fi
	AC_MSG_RESULT([no])
fi

# init the venerable automake only _once_ or incur the wrath of
# several automake bugs (like "aclocal-" and install detection)
AM_INIT_AUTOMAKE([1.6 dist-zip dist-bzip2])

# disables the build system dependency tracking by default for the
# automake and autoconf template files.
AM_MAINTAINER_MODE

# write out all of our definitions to this header
AM_CONFIG_HEADER([include/brlcad_config.h])

# load the tcl SC_* macros
builtin(include,src/other/tcl/unix/tcl.m4)

# automatically enable and load our configure cache file if available
BC_CONFIG_CACHE([config.cache.${host_os}.${ac_hostname}])


dnl ***********************
dnl *** Check arguments ***
dnl ***********************

#
# DOCUMENT NEW ARGUMENTS AND ALIASES IN THE "INSTALL" FILE.
#

BC_CONFIGURE_STAGE([arguments], [1 of 9])

dnl *** enable options ***

# enable everything
BC_ARG_ENABLE([everything], [almost-everything], [Turn on compilation of almost everything], [auto])

# only build benchmark
BC_ARG_ENABLE([only_benchmark], [only-benchmark], [Only build the components necessary for the benchmark], [no])

# only build librtserver
BC_ARG_ENABLE([only_rts], [only-rtserver], [Only build the components necessary for the raytrace server], [no])

# run-time debugging
BC_ARG_ENABLE([build_runtime_debug], [runtime-debug], [Enable run-time debug checking], [yes])

# enable 64-bit builds
BC_ARG_ENABLE([build_64bit], [64bit-build], [Enable 64-bit compilation mode], [auto])

# force enable/disable building of libregex
BC_ARG_ENABLE([build_regex], [regex-build], [Build the included regular expression library], [auto])

# force enable/disable building of libpng
BC_ARG_ENABLE([build_png], [png-build], [Build the included Portable Network Graphics library], [auto])

# force enable/disable building of zlib
BC_ARG_ENABLE([build_zlib], [zlib-build], [Build the included zlib compression library], [auto])

# force enable/disable building of utah raster toolkit
BC_ARG_ENABLE([build_urt], [urt-build], [Build the included Utah Raster Toolkit], [auto])

# force enable/disable building of openNURBS
BC_ARG_ENABLE([build_opennurbs], [opennurbs-build], [Build the included openNURBS library], [no])

# force enable/disable building of termlib
BC_ARG_ENABLE([build_termlib], [termlib-build], [Build the included termlib library], [auto])

# force enable/disable building of Tcl
BC_ARG_ENABLE([build_tcl], [tcl-build], [Build the included Tcl], [auto])

# force enable/disable building of Tk
BC_ARG_ENABLE([build_tk], [tk-build], [Build the included Tk], [auto])

# force enable/disable building Tk using AquaTk (Mac OS X specific)
BC_ARG_ENABLE([build_aquatk], [aquatk-build], [Use Aqua windowing system on Mac OS X], [no])

# force enable/disable building of incrTcl
BC_ARG_ENABLE([build_itcl], [itcl-build], [Build the included incrTcl], [auto])

# force enable/disable building of iwidgets
BC_ARG_ENABLE([build_iwidgets], [iwidgets-install], [Install the included iwidgets], [auto])

# force enable/disable building of blt
BC_ARG_ENABLE([build_blt], [blt-build], [Build the included BLT], [auto])

# tkimg
BC_ARG_ENABLE([build_tkimg], [tkimg-build], [Build the included tkImg], [auto])

# force enable/disable building of tnt
BC_ARG_ENABLE([build_tnt], [tnt-install], [Install the included Template Numerical Toolkit], [auto])

# jove
BC_ARG_ENABLE([build_jove], [jove-build], [Enable compilation of jove], [auto])

# endgame framework simulation module
BC_ARG_ENABLE([build_ef], [ef-build], [Enable compilation of Endgame Framework module], [no])

# unigraphics plugin
BC_ARG_ENABLE([build_ug], [unigraphics-build], [Enable compilation of Unigraphics importer], [no])

# ADRT (enables SDL and Python with options if they're not enabled)
BC_ARG_ENABLE([build_adrt], [adrt-build], [Enable compilation of ADRT], [auto])

# example geometry
BC_ARG_ENABLE([install_geometry], [models-install], [Enable installation of example geometry models], [yes])

# optimized
BC_ARG_ENABLE([use_optimized], [optimized], [Enable optimized compilation], [no])

# debug
BC_ARG_ENABLE([use_debug], [debug], [Enable debug symbols], [auto])

# profiling
BC_ARG_ENABLE([use_profiling], [profiling], [Enable profiling], [no])

# Sun dtrace
BC_ARG_ENABLE([use_dtrace], [dtrace], [Enable dtrace support], [no])

# verbosity
BC_ARG_ENABLE([build_verbose], [verbose], [Enable verbose compilation], [auto])

# warnings
BC_ARG_ENABLE([build_warnings], [warnings], [Enable verbose compilation warnings], [no])

# build progress status
BC_ARG_ENABLE([build_progress], [progress], [Enable verbose compilation progress], [no])


dnl *** with options ***

# provides convenience argument handlers for specifying CFLAGS,
# LDFLAGS, CPPFLAGS, and LIBS using --with argument handlers.
BC_WITH_FLAG_ARGS

# use the jdk
BC_ARG_WITH([with_java], [jdk], [Specify use of or path to the Java Development Kit], [auto])

# use x11
BC_ARG_WITH([with_x11], [x11], [Specify use of or path to X11], [auto])

# use opengl
BC_ARG_WITH([with_opengl], [ogl], [Specify use of or path to OpenGL], [auto])

# use wgl
BC_ARG_WITH([with_wgl], [wgl], [Specify use of or path to WindowsGL], [auto])

# use sdl
BC_ARG_WITH([with_sdl], [sdl], [Specify use of or path to SDL], [auto])

# use python
BC_ARG_WITH([with_python], [python], [Specify use of or path to python], [auto])

# use pro/engineer
BC_ARG_WITH([with_proe], [proe], [Specify build of Pro/ENGINEER plugin or path to Pro/ENGINEER installation], [no])

###
# argument aliases
# they need to go below here in order for --help to consolidate the
# blank line that it inserts to exactly one line in the right place.
#
# DOCUMENT NEW ARGUMENTS AND ALIASES IN THE "INSTALL" FILE.
###

# aliases for enabling configuration of everything (help uses almost-everything)
BC_ARG_ALIAS([everything], [all])
BC_ARG_ALIAS([everything], [all-build])
BC_ARG_ALIAS([everything], [build-all])
BC_ARG_ALIAS([everything], [all-builds])
BC_ARG_ALIAS([everything], [everything])
BC_ARG_ALIAS([everything], [everything-build])
BC_ARG_ALIAS([everything], [build-everything])

# aliases for building only the benchmark (help uses only-benchmark)
BC_ARG_ALIAS([only_benchmark], [only-bench])
BC_ARG_ALIAS([only_benchmark], [only-benchmarks])
BC_ARG_ALIAS([only_benchmark], [bench-only])
BC_ARG_ALIAS([only_benchmark], [benchmark-only])
BC_ARG_ALIAS([only_benchmark], [benchmarks-only])

# aliases for building only the raytrace server (help uses only-rtserver)
BC_ARG_ALIAS([only_rts], [only-rts])
BC_ARG_ALIAS([only_rts], [only-librtserver])
BC_ARG_ALIAS([only_rts], [rts-only])
BC_ARG_ALIAS([only_rts], [rtserver-only])
BC_ARG_ALIAS([only_rts], [librtserver-only])

# run-time debugging (help uses runtime-debug)
BC_ARG_ALIAS([build_runtime_debug], [run-time-debug])
BC_ARG_ALIAS([build_runtime_debug], [runtime-debugging])
BC_ARG_ALIAS([build_runtime_debug], [run-time-debugging])

# 64-bit compilation (help uses 64bit-build)
BC_ARG_ALIAS([build_64bit], [64bit])
BC_ARG_ALIAS([build_64bit], [64])
BC_ARG_ALIAS([build_64bit], [64-build])
BC_ARG_ALIAS([build_64bit], [64-bit])
BC_ARG_ALIAS([build_64bit], [64-bit-build])

# force building libregex (help uses regex-build)
BC_ARG_ALIAS([build_regex], [regex])
BC_ARG_ALIAS([build_regex], [libregex])
BC_ARG_ALIAS([build_regex], [libregex-build])

# aliases to force building libpng (help uses png-build)
BC_ARG_ALIAS([build_png], [png])
BC_ARG_ALIAS([build_png], [libpng])
BC_ARG_ALIAS([build_png], [libpng-build])

# aliases to force building zlib (help uses zlib-build)
BC_ARG_ALIAS([build_zlib], [zlib])
BC_ARG_ALIAS([build_zlib], [libz])
BC_ARG_ALIAS([build_zlib], [libz-build])

# aliases to force building urt (help uses urt-build)
BC_ARG_ALIAS([build_urt], [urt])
BC_ARG_ALIAS([build_urt], [urtoolkit])
BC_ARG_ALIAS([build_urt], [urtoolkit-build])
BC_ARG_ALIAS([build_urt], [utahrle])
BC_ARG_ALIAS([build_urt], [utahrle-build])
BC_ARG_ALIAS([build_urt], [libutahrle])
BC_ARG_ALIAS([build_urt], [libutahrle-build])
BC_ARG_ALIAS([build_urt], [utah-raster-toolkit])
BC_ARG_ALIAS([build_urt], [utah-raster-toolkit-build])

# aliases to force building openNURBS (help uses opennurbs-build)
BC_ARG_ALIAS([build_opennurbs], [opennurbs])
BC_ARG_ALIAS([build_opennurbs], [libopennurbs])
BC_ARG_ALIAS([build_opennurbs], [libopennurbs-build])
BC_ARG_ALIAS([build_opennurbs], [open-nurbs])
BC_ARG_ALIAS([build_opennurbs], [open-nurbs-build])

# aliases to force building tcl (help uses tcl-build)
BC_ARG_ALIAS([build_tcl], [tcl])
BC_ARG_ALIAS([build_tcl], [libtcl])
BC_ARG_ALIAS([build_tcl], [libtcl-build])

# aliases to force building tk (help uses tk-build)
BC_ARG_ALIAS([build_tk], [tk])
BC_ARG_ALIAS([build_tk], [libtk])
BC_ARG_ALIAS([build_tk], [libtk-build])

# aliases to force building tkaqua (help uses aquatk-build)
BC_ARG_ALIAS([build_aquatk], [aquatk])
BC_ARG_ALIAS([build_aquatk], [aqua-tk])
BC_ARG_ALIAS([build_aquatk], [aqua-tk-build])
BC_ARG_ALIAS([build_aquatk], [tkaqua])
BC_ARG_ALIAS([build_aquatk], [tkaqua-build])
BC_ARG_ALIAS([build_aquatk], [tk-aqua-build])

# aliases to force building itcl (help uses itcl-build)
BC_ARG_ALIAS([build_itcl], [itcl])
BC_ARG_ALIAS([build_itcl], [itk])
BC_ARG_ALIAS([build_itcl], [itk-build])
BC_ARG_ALIAS([build_itcl], [libitcl])
BC_ARG_ALIAS([build_itcl], [libitcl-build])
BC_ARG_ALIAS([build_itcl], [libitk])
BC_ARG_ALIAS([build_itcl], [libitk-build])
BC_ARG_ALIAS([build_itcl], [incrtcl])
BC_ARG_ALIAS([build_itcl], [incrtcl-build])

# aliases to force building iwidgets (help uses iwidgets-install)
BC_ARG_ALIAS([build_iwidgets], [iwidgets])
BC_ARG_ALIAS([build_iwidgets], [iwidgets-build])

# aliases to force building blt (help uses blt-build)
BC_ARG_ALIAS([build_blt], [blt])
BC_ARG_ALIAS([build_blt], [libblt])
BC_ARG_ALIAS([build_blt], [libblt-build])

# aliases to force building tkimg (help uses tkimg-build)
BC_ARG_ALIAS([build_tkimg], [tkimg])
BC_ARG_ALIAS([build_tkimg], [libtkimg])
BC_ARG_ALIAS([build_tkimg], [libtkimg-build])

# aliases to force building termlib (help uses termlib-build)
BC_ARG_ALIAS([build_termlib], [termlib])
BC_ARG_ALIAS([build_termlib], [termcap])
BC_ARG_ALIAS([build_termlib], [termcap-build])
BC_ARG_ALIAS([build_termlib], [libtermlib])
BC_ARG_ALIAS([build_termlib], [libtermlib-build])
BC_ARG_ALIAS([build_termlib], [libtermcap])
BC_ARG_ALIAS([build_termlib], [libtermcap-build])

# aliases to force building tnt (help uses tnt-install)
BC_ARG_ALIAS([build_tnt], [tnt])
BC_ARG_ALIAS([build_tnt], [tnt-build])
BC_ARG_ALIAS([build_tnt], [template-numerical-toolkit])
BC_ARG_ALIAS([build_tnt], [template-numerical-toolkit-build])
BC_ARG_ALIAS([build_tnt], [template-numerical-toolkit-install])

# jove aliases (help uses jove-build)
BC_ARG_ALIAS([build_jove], [jove])

# endgame framework module aliases (help uses ef-build)
BC_ARG_ALIAS([build_ef], [ef])
BC_ARG_ALIAS([build_ef], [endgameframework])
BC_ARG_ALIAS([build_ef], [endgameframework-build])
BC_ARG_ALIAS([build_ef], [endgame-framework])
BC_ARG_ALIAS([build_ef], [endgame-framework-build])

# unigraphics (NX) importer aliases (help uses unigraphics-build)
BC_ARG_ALIAS([build_ug], [unigraphics])
BC_ARG_ALIAS([build_ug], [ug])
BC_ARG_ALIAS([build_ug], [ug-build])
BC_ARG_ALIAS([build_ug], [nx])
BC_ARG_ALIAS([build_ug], [nx-build])

# ADRT aliases (help uses adrt-build)
BC_ARG_ALIAS([build_adrt], [adrt])

# install geometry aliases (help uses models-install)
BC_ARG_ALIAS([install_geometry], [models])
BC_ARG_ALIAS([install_geometry], [models-build])
BC_ARG_ALIAS([install_geometry], [geometry])
BC_ARG_ALIAS([install_geometry], [geometry-build])
BC_ARG_ALIAS([install_geometry], [geometry-install])

# optimized aliases (help uses optimized)
BC_ARG_ALIAS([use_optimized], [opt])
BC_ARG_ALIAS([use_optimized], [optimize])
BC_ARG_ALIAS([use_optimized], [optimization])
BC_ARG_ALIAS([use_optimized], [optimizations])

# debug aliases (help uses debug)
BC_ARG_ALIAS([use_debug], [debugging])

# profiling aliases (help uses profiling)
BC_ARG_ALIAS([use_profiling], [profile])
BC_ARG_ALIAS([use_profiling], [profiled])

# verbose output (help uses verbose)
BC_ARG_ALIAS([build_verbose], [verbosity])
BC_ARG_ALIAS([build_verbose], [output-verbose])
BC_ARG_ALIAS([build_verbose], [verbose-output])
BC_ARG_ALIAS([build_verbose], [build-verbose])
BC_ARG_ALIAS([build_verbose], [verbose-build])

# verbose warning aliases (help uses warnings)
BC_ARG_ALIAS([build_warnings], [warning])
BC_ARG_ALIAS([build_warnings], [verbose-warnings])
BC_ARG_ALIAS([build_warnings], [warnings-verbose])
BC_ARG_ALIAS([build_warnings], [build-warnings])
BC_ARG_ALIAS([build_warnings], [warnings-build])

# verbose compilation progress status (help uses progress)
BC_ARG_ALIAS([build_progress], [verbose-progress])
BC_ARG_ALIAS([build_progress], [progress-verbose])
BC_ARG_ALIAS([build_progress], [build-progress])
BC_ARG_ALIAS([build_progress], [progress-build])

# with java aliases (help uses jdk)
BC_ARG_WITH_ALIAS([with_java], [java])

# with proe aliases
BC_ARG_WITH_ALIAS([with_proe], [proe])

# with x11 aliases (help uses x11)
BC_ARG_WITH_ALIAS([with_x11], [x])

# with opengl aliases (help uses ogl)
BC_ARG_WITH_ALIAS([with_opengl], [opengl])

# with wgl aliases (help uses wgl)
BC_ARG_WITH_ALIAS([with_wgl], [windowsgl])

# with sdl aliases (help uses sdl)
BC_ARG_WITH_ALIAS([with_sdl], [libsdl])

# with python aliases (help uses python)
BC_ARG_WITH_ALIAS([with_python], [libpython])


###
# set up path searching
###

dnl automatically scan /usr/local (e.g. BSD uses /usr/local for ports)
BC_SEARCH_DIRECTORY([/usr/local])

dnl find tclConfig.sh, add --with-tcl option, don't cache result for AC_CONFIG_SUBDIRS
SC_PATH_TCLCONFIG
unset ac_cv_c_tclconfig

dnl find tkConfig.sh, add --with-tk option, don't cache result for AC_CONFIG_SUBDIRS
SC_PATH_TKCONFIG
unset ac_cv_c_tkconfig


###
# argument sanity checks and meta-argument settings
# here go checks to warn or abort when conflicting options specified
###

# handle enabling/disabling all the packages and codes that ship with
# the package.  if something is changed from a default, leave it alone
# so that the user may specify everything and then disable specific
# ones.  specifically only test yes/no as default 'auto' is to leave
# the options alone.
set_everything=""
if test "x$bc_everything" = "xyes" ; then
	set_everything=yes
elif test "x$bc_everything" = "xno" ; then
	set_everything=no
fi
if test "x$set_everything" != "x" ; then
	if test "x$bc_build_runtime_debug_set" = "xno" ; then
		bc_build_runtime_debug="$set_everything"
	fi
	if test "x$bc_build_regex_set" = "xno" ; then
		bc_build_regex="$set_everything"
	fi
	if test "x$bc_build_png_set" = "xno" ; then
		bc_build_png="$set_everything"
	fi
	if test "x$bc_build_zlib_set" = "xno" ; then
		bc_build_zlib="$set_everything"
	fi
	if test "x$bc_build_urt_set" = "xno" ; then
		bc_build_urt="$set_everything"
	fi
	if test "x$bc_build_opennurbs_set" = "xno" ; then
		bc_build_opennurbs="$set_everything"
	fi
	if test "x$bc_build_termlib_set" = "xno" ; then
		bc_build_termlib="$set_everything"
	fi
	if test "x$bc_build_tcl_set" = "xno" ; then
		bc_build_tcl="$set_everything"
	fi
	if test "x$bc_build_tk_set" = "xno" ; then
		bc_build_tk="$set_everything"
	fi
	if test "x$bc_build_itcl_set" = "xno" ; then
		bc_build_itcl="$set_everything"
	fi
	if test "x$bc_build_iwidgets_set" = "xno" ; then
		bc_build_iwidgets="$set_everything"
	fi
	if test "x$bc_build_blt_set" = "xno" ; then
		bc_build_blt="$set_everything"
	fi
	if test "x$bc_build_tkimg_set" = "xno" ; then
		bc_build_tkimg="$set_everything"
	fi
	if test "x$bc_build_tnt_set" = "xno" ; then
		bc_build_tnt="$set_everything"
	fi
	if test "x$bc_build_jove_set" = "xno" ; then
		bc_build_jove="$set_everything"
	fi
	# Singe the Endgame Framework "simulation module" will only
	# compile if you have it installed, don't enable it even if
	# requesting everything.  fine to disable, though.
	if test "x$bc_build_ef_set" = "xno" ; then
		if test "x$set_everything" = "xno" ; then
			bc_build_ef=no
		fi
	fi
	# Since the Unigraphics importer is primarily tested on only one
	# platform and requires UGOPEN, don't enable it even if
	# requesting everything.  fine to disable, though.
	if test "x$bc_build_ug_set" = "xno" ; then
		if test "x$set_everything" = "xno" ; then
			bc_build_ug=no
		fi
	fi
	# ADRT is known to not build on several platforms due to its
        # external dependencies, so only allow it to be disabled.
	if test "x$bc_build_adrt_set" = "xno" ; then
		if test "x$set_everything" = "xno" ; then
			bc_build_adrt="no"
		fi
	fi
fi


# make sure multiple "only" options were not given
if test "x$bc_only_benchmark" != "xno" ; then
	if test "x$bc_only_rts" != "xno" ; then
		AC_MSG_NOTICE([}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}])
		AC_MSG_WARN([Requesting BOTH benchmark and librtserver "only"?])
		AC_MSG_WARN([Building both benchmark and librtserver])
		AC_MSG_NOTICE([{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{])
	fi
	if test "x$bc_everything" = "xyes" ; then
		AC_MSG_NOTICE([}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}])
		AC_MSG_WARN([Requesting ONLY benchmark and EVERYTHING?])
		AC_MSG_WARN([Building everything])
		AC_MSG_NOTICE([{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{])
		bc_only_benchmark=no
	fi
fi

# the opengl interface is presently tied to the x11 interface
if test "x$bc_with_opengl" = "xyes" ; then
	if test "x$bc_with_x11" = "xno" ; then
		AC_MSG_NOTICE([}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}])
		AC_MSG_WARN([OpenGL interface presently requires X11 support])
		AC_MSG_WARN([Presuming X11 availability for the OpenGL interface])
		AC_MSG_WARN([The X11 interface will not be built])
		AC_MSG_NOTICE([{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{])
	fi
fi

# enabling/disabling ADRT implies enabling/disabling the SDL and Python options
if test "x$bc_build_adrt" = "xyes" ; then
	if test "x$bc_with_sdl" = "xauto" ; then
		bc_with_sdl=yes
	elif test "x$bc_with_sdl" = "xno" ; then
		AC_MSG_NOTICE([}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}])
		AC_MSG_WARN([ADRT presently requires SDL support])
		AC_MSG_WARN([The SDL option has been enabled (--with-sdl=yes)])
		AC_MSG_NOTICE([{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{])
		bc_with_sdl=yes
	fi
	if test "x$bc_with_python" = "xauto" ; then
		bc_with_python=yes
	elif test "x$bc_with_python" = "xno" ; then
		AC_MSG_NOTICE([}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}])
		AC_MSG_WARN([ADRT presently requires Python support])
		AC_MSG_WARN([The Python option has been enabled (--with-python=yes)])
		AC_MSG_NOTICE([{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{])
		bc_with_python=yes
	fi
elif test "x$bc_build_adrt" = "xno" ; then
	if test "x$bc_with_sdl" = "xyes" ; then
		AC_MSG_NOTICE([}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}])
		AC_MSG_WARN([SDL was requested, yet ADRT was disabled.])
		AC_MSG_WARN([Since only ADRT utilizes SDL, it will not be utilized (--with-sdl=no)])
		AC_MSG_NOTICE([{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{])
	fi
	if test "x$bc_with_python" = "xyes" ; then
		AC_MSG_NOTICE([}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}])
		AC_MSG_WARN([Python was requested, yet ADRT was disabled.])
		AC_MSG_WARN([Since only ADRT utilizes Python, it will not be utilized (--with-python=no)])
		AC_MSG_NOTICE([{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{])
	fi
	bc_with_sdl=no
	bc_with_python=no
fi

# turning on verbose means turning on progress and warning verbosity
if test "x$bc_build_verbose" = "xyes" ; then
	if test "x$bc_build_warnings_set" = "xno" ; then
		bc_build_warnings=yes
	fi
	if test "x$bc_build_progress_set" = "xno" ; then
		bc_build_progress=yes
	fi
fi

###
# argument summary printing
###

AC_MSG_CHECKING(whether to compile everything was requested)
AC_MSG_RESULT($bc_everything)

AC_MSG_CHECKING(whether to only build benchmark)
AC_MSG_RESULT($bc_only_benchmark)

AC_MSG_CHECKING(whether to only build the raytrace server)
AC_MSG_RESULT($bc_only_rts)

AC_MSG_CHECKING(whether to use run-time debug checks)
AC_MSG_RESULT($bc_build_runtime_debug)

AC_MSG_CHECKING(whether to compile in 64-bit mode)
AC_MSG_RESULT($bc_build_64bit)

AC_MSG_CHECKING(whether to build the regular expression library)
AC_MSG_RESULT($bc_build_regex)

AC_MSG_CHECKING(whether to build the PNG library)
AC_MSG_RESULT($bc_build_png)

AC_MSG_CHECKING(whether to build the zlib compression library)
AC_MSG_RESULT($bc_build_zlib)

AC_MSG_CHECKING(whether to build the Utah Raster Toolkit)
AC_MSG_RESULT($bc_build_urt)

AC_MSG_CHECKING(whether to build the openNURBS library)
AC_MSG_RESULT($bc_build_opennurbs)

AC_MSG_CHECKING(whether to build the Tcl library)
AC_MSG_RESULT($bc_build_tcl)

AC_MSG_CHECKING(whether to build the Tk library)
AC_MSG_RESULT($bc_build_tk)

AC_MSG_CHECKING(whether to use AquaTk)
AC_MSG_RESULT($bc_build_aquatk)

AC_MSG_CHECKING(whether to build the incrTcl library)
AC_MSG_RESULT($bc_build_itcl)

AC_MSG_CHECKING(whether to install the iwidgets library)
AC_MSG_RESULT($bc_build_iwidgets)

AC_MSG_CHECKING(whether to build the BLT library)
AC_MSG_RESULT($bc_build_blt)

AC_MSG_CHECKING(whether to build the tkImg library)
AC_MSG_RESULT($bc_build_tkimg)

AC_MSG_CHECKING(whether to build the termlib library)
AC_MSG_RESULT($bc_build_termlib)

AC_MSG_CHECKING(whether to build the Template Numerical Toolkit)
AC_MSG_RESULT($bc_build_tnt)

AC_MSG_CHECKING(whether to compile jove or not)
AC_MSG_RESULT($bc_build_jove)

AC_MSG_CHECKING(whether to compile the Endgame Framework module)
AC_MSG_RESULT($bc_build_ef)

AC_MSG_CHECKING(whether to compile the Unigraphics importer)
AC_MSG_RESULT($bc_build_ug)

AC_MSG_CHECKING(whether to compile ADRT)
AC_MSG_RESULT($bc_build_adrt)

AC_MSG_CHECKING(whether to install example geometry databases)
AC_MSG_RESULT($bc_install_geometry)

AC_MSG_CHECKING(whether to enable optimized compilation)
AC_MSG_RESULT($bc_use_optimized)

AC_MSG_CHECKING(whether to disable debug mode compilation)
AC_MSG_RESULT($bc_use_debug)

AC_MSG_CHECKING(whether to enable profile mode compilation)
AC_MSG_RESULT($bc_use_profiling)

AC_MSG_CHECKING(whether to enable verbose output)
AC_MSG_RESULT($bc_build_verbose)

AC_MSG_CHECKING(whether to enable verbose compilation warnings)
AC_MSG_RESULT($bc_build_warnings)

AC_MSG_CHECKING(whether to enable verbose compilation progress)
AC_MSG_RESULT($bc_build_progress)

AC_MSG_CHECKING(whether to compile with the Java Development Kit)
AC_MSG_RESULT($bc_with_java)

AC_MSG_CHECKING(whether to compile the X11 interfaces)
AC_MSG_RESULT($bc_with_x11)

AC_MSG_CHECKING(whether to compile the OpenGL interfaces)
AC_MSG_RESULT($bc_with_opengl)

AC_MSG_CHECKING(whether to compile the WindowsGL interfaces)
AC_MSG_RESULT($bc_with_wgl)

AC_MSG_CHECKING(whether to compile against SDL for ADRT)
AC_MSG_RESULT($bc_with_sdl)

AC_MSG_CHECKING(whether to compile against Python for ADRT)
AC_MSG_RESULT($bc_with_python)

AC_MSG_CHECKING(whether to compile the Pro/ENGINEER plugin)
AC_MSG_RESULT($bc_with_proe)


dnl **************************
dnl *** Check for programs ***
dnl **************************

BC_CONFIGURE_STAGE([programs], [2 of 9])

AC_LANG(C)

dnl added in autoconf 2.54 to define _GNU_SOURCE
dnl AC_GNU_SOURCE

AC_AIX
AC_MINIX

AC_PROG_CC
AM_PROG_CC_C_O

AC_PROG_CXX


AC_PROG_CPP
AC_REQUIRE_CPP

AC_PROG_AWK
AC_PROG_INSTALL
AC_PROG_LN_S
AC_PROG_MAKE_SET
AM_PROG_MKDIR_P

# automake 'requires' AM_PROG_LEX, not AC_PROG_LEX
AM_PROG_LEX
AC_PROG_YACC

# libtool's configuration check has a bug that causes a /lib/cpp
# sanity check failure if a C++ compiler is not installed.  This makes
# the sanity test pass regardless of whether there is a c++ compiler.
if test "x$CXXCPP" = "x" ; then
	if test "x$CPP" = "x" ; then
		CXXCPP="cpp"
	else
		CXXCPP="$CPP"
	fi
fi

dnl disable unnecessary libtool test for fortran
define([AC_LIBTOOL_LANG_F77_CONFIG], [:])dnl

# libtool shouldn't be generated until after LD is set
# XXX went poof in libtool 1.9 -- AC_PROG_LIBTOOL
# LT_INIT
AC_PROG_LIBTOOL
AC_SUBST(LIBTOOL_DEPS)

dnl verbose compilation progress
if test "x$bc_build_progress" != "xyes" ; then
	LIBTOOLFLAGS=--silent
	AC_SUBST(LIBTOOLFLAGS)
	# LIBTOOLFLAGS isn't often not enough;
	# tack --silent onto the LIBTOOL command.
	if test "x$LIBTOOL" != "x" ; then
		LIBTOOL="$LIBTOOL --silent"
	fi
fi

# AN_MAKEVAR([AR], [BC_PROG_AR])
# AN_PROGRAM([ar], [BC_PROG_AR])
# AC_DEFUN([BC_PROG_AR], [AC_CHECK_TOOL(AR, ar, :)])
# BC_PROG_AR

# XXX tests for ranlib may be required.  "ar ts" was used in cake for
# sgi and aix so more compensation may be required still.

dnl Libtool may need AR so try to find it
AC_PATH_PROG(AR, ar, [], $PATH:/usr/bin:/usr/local/bin:/usr/ccs/bin)
AC_SUBST(AR)

dnl check for basic shell facilities
AC_PATH_PROG(SH, sh)
AC_PATH_PROG(MV, mv)
AC_PATH_PROG(CP, cp)
AC_PATH_PROG(RM, rm)

if test "$bc_with_dtrace" == "yes" ; then
	AC_PATH_PROG(DTRACE, dtrace, bc_with_dtrace=no, [$PATH:/usr/sbin])
fi

dnl figure out which compiler is seems like we are using
dnl detected values include: gcc, mipspro, sunpro
dnl none of the tests should be compiler-specific, but it's good to
dnl know in the log which it seems we are using
compiler=unknown

dnl Determine whether we are using GCC
if test "x$GCC" = "xyes" ; then
	compiler=gnu
fi

dnl Determine whether we are using the MIPSpro compiler on SGI systems
if test "x$build_vendor" = "xsgi" ; then
	AC_MSG_CHECKING([whether we are using the MIPSpro compiler])
	using_mipspro=no
	AC_LINK_IFELSE([#if defined(sgi) && defined(_COMPILER_VERSION) && !defined(__GNUC__)
If we get here, we are using the MIPSPro compiler (and the link should fail).
#endif
int main() { return 0; }
	], [using_mipspro=no], [using_mipspro=yes])
	AC_MSG_RESULT($using_mipspro)
	if test "x$using_mipspro" = "xyes" ; then
		compiler=sgi
	fi
fi

dnl Determine whether we are using the SUNWspro Sun Workshop compiler
if test "x$build_vendor" = "xsun" ; then
	AC_MSG_CHECKING([whether we are using the SUNWspro compiler])
	using_sunpro=no
	AC_LINK_IFELSE([#if defined(sun) && defined(__SUNPRO_C) && !defined(__GNUC__)
If we get here, we are using the SUNWspro compiler (and the link should fail).
#endif
int main() { return 0; }
	], [using_sunpro=no], [using_sunpro=yes])
	AC_MSG_RESULT($using_sunpro)
	if test "x$using_sunpro" = "xyes" ; then
		AR="CC -xar"
		LD="CC -G"
		export AR LD
		compiler=sun
	fi
fi

AC_DEFINE(EXTERN_STDOUT,,[Stdout is extern])

AC_FUNC_ALLOCA

# test for sdl-config, auto for with-sdl is 'no'
SDL_CONFIG=""
if test "x$bc_with_sdl" = "xyes" ; then
	AC_PATH_PROG(SDL_CONFIG, sdl-config, , $PATH)
	if test "x$SDL_CONFIG" = "x" ; then
		if test "x$bc_with_sdl" = "xyes" ; then
			AC_MSG_NOTICE([sdl-config is presently required, searching more extensively])
			AC_MSG_NOTICE([}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}])
			AC_MSG_WARN([Unable to find sdl-config])
		fi
	fi
fi

# test for python interpreter, auto for with-python is 'no'
PYTHON=""
python_works=no
if test "x$bc_with_python" = "xyes" ; then
	AM_PATH_PYTHON(2.0,
		       PYTHON_CFLAGS=-I`$PYTHON -c "import distutils.sysconfig;print distutils.sysconfig.get_config_var('INCLUDEPY')"`
		       PYTHON_LIBS=`$PYTHON -c "import distutils.sysconfig; print distutils.sysconfig.get_config_var('LIBPL')+'/'+distutils.sysconfig.get_config_var('LIBRARY')+' '+distutils.sysconfig.get_config_var('LIBS')"`
		       AC_DEFINE(HAVE_PYTHON,1,[Python is available])
		       python_works=yes
		       )
fi

dnl if building jove wasn't specifically requested and wasn't
dnl disabled, see if there is either emacs or jove available.
dnl i.e. auto for jove is dependant on what is installed
BCEDITOR=""
if test "x$bc_build_jove" = "xauto" ; then
	AC_PATH_PROG(BCEDITOR, emacs, , $PATH)
	if test "x$BCEDITOR" = "x" ; then
		AC_PATH_PROG(BCEDITOR, jove, , $PATH)
	fi
fi


dnl ***************************
dnl *** Check for libraries ***
dnl ***************************

BC_CONFIGURE_STAGE([libraries], [3 of 9])

dnl check if there is a threading library that links, the order of
dnl these checks is consistent with libbu's bu_parallel()
dnl implementation preference.  this is usually in order of highest
dnl performing threading interface.
thread_link_works=no
LIBTHREAD=""
dnl try sgi sproc first
AC_CHECK_LIB(c, sproc, thread_link_works=yes ; LIBTHREAD="-lc",
    dnl check if the BSD c_r threading library link works
    [AC_CHECK_LIB(c_r, pthread_create, thread_link_works=yes ; LIBTHREAD="-pthread",
	dnl try solaris threading
	[AC_CHECK_LIB(thread, thr_create, thread_link_works=yes ; LIBTHREAD="-lthread",
	    dnl pthreading is a good default if none of the others are available
	    dnl XXX need to test HPUX -- may require -lcma with pthreads
	    [AC_CHECK_LIB(pthread, pthread_create, thread_link_works=yes ; LIBTHREAD="-lpthread")]
	)]
    )]
)

dnl check whether we ended up with functioning posix threading.
AC_MSG_CHECKING([whether we are using POSIX threading])
posix_threading=no
PRELIBS="$LIBS"
LIBS="$LIBS $LIBTHREAD"
AC_TRY_LINK([#include <pthread.h>], [
    pthread_t th;
    pthread_join(th, 0);
    pthread_attr_init(0);
    pthread_cleanup_push(0,0);
    pthread_create(0,0,0,0);
    pthread_cleanup_pop(0);
], [posix_threading=yes])
LIBS="$PRELIBS"
AC_MSG_RESULT($posix_threading)

dnl check whether the CoreFoundation framework is available (used when
dnl linking against static tcl)
AC_MSG_CHECKING([whether -framework CoreFoundation is available])
framework_cf=no
FRAMEWORK_COREFOUNDATION=""
PRELIBS="$LIBS"
LIBS="$LIBS -framework CoreFoundation"
AC_TRY_LINK([#include <CoreFoundation/CoreFoundation.h>], [
CFBundleRef bref = CFBundleGetMainBundle();
], [framework_cf=yes ; FRAMEWORK_COREFOUNDATION="-framework CoreFoundation"])
LIBS="$PRELIBS"
AC_MSG_RESULT($framework_cf)
AC_SUBST(FRAMEWORK_COREFOUNDATION)

dnl check whether the Carbon framework is available (used for X11 focus)
AC_MSG_CHECKING([whether -framework Carbon is available])
framework_carbon=no
FRAMEWORK_CARBON=""
PRELIBS="$LIBS"
LIBS="$LIBS -framework Carbon"
AC_TRY_LINK([#include <Carbon/Carbon.h>], [
OSStatus status;
ProcessSerialNumber psn = {kNoProcess, kNoProcess};
CFStringRef processName = NULL;
GetCurrentProcess(&psn);
CopyProcessName(&psn, &processName);
if (processName != NULL) {
   CFShow(processName);
}
], [framework_carbon=yes ; FRAMEWORK_CARBON="-framework Carbon"])
LIBS="$PRELIBS"
AC_MSG_RESULT($framework_carbon)
AC_SUBST(FRAMEWORK_CARBON)

dnl check whether the JavaVM framework is available (used for librtserver)
AC_MSG_CHECKING([whether -framework JavaVM is available])
framework_javavm=no
FRAMEWORK_JAVAVM=""
PRELIBS="$LIBS"
LIBS="$LIBS -framework JavaVM"
AC_TRY_LINK([#include <JavaVM/jni.h>], [
JavaVM *jvm;
JNIEnv *env;
JavaVMInitArgs args;
jint i = JNI_GetDefaultJavaVMInitArgs(&args);
jboolean j = JNI_CreateJavaVM(&jvm, (void**)&env, &args);
if (j && jvm) {
  (*jvm)->DestroyJavaVM(jvm);
}
], [framework_javavm=yes ; FRAMEWORK_JAVAVM="-framework JavaVM"])
LIBS="$PRELIBS"
AC_MSG_RESULT($framework_javavm)
AC_SUBST(FRAMEWORK_JAVAVM)


dnl check for java
JAVA_CFLAGS="$FRAMEWORK_JAVAVM"
JAVA_LDFLAGS="-shrext .jnilib $FRAMEWORK_JAVAVM"
if test "x$bc_with_java" = "xyes" ; then
    if test "x$bc_with_java_val" != "x" ; then
	JAVA_CFLAGS="-I$bc_with_java_val/include -I$bc_with_java_val/include/`uname | tr [A-Z] [a-z]`"
	JAVA_LDFLAGS="-shrext .jnilib -L$bc_with_java_val/lib64 -L$bc_with_java_val/lib"
    fi
fi
AC_SUBST(JAVA_CFLAGS)
AC_SUBST(JAVA_LDFLAGS)


dnl find a curses or other terminal library
LIBTERMLIB=""
AC_CHECK_LIB(termlib, tputs, LIBTERMLIB="-ltermlib",
    [AC_CHECK_LIB(ncurses, tputs, LIBTERMLIB="-lncurses",
	[AC_CHECK_LIB(curses, tputs, LIBTERMLIB="-lcurses",
	    [AC_CHECK_LIB(termcap, tputs, LIBTERMLIB="-ltermcap",
		[AC_CHECK_LIB(terminfo, tputs, LIBTERMLIB="-lterminfo",
		    [AC_CHECK_LIB(tinfo, tputs, LIBTERMLIB="-ltinfo",
			[AC_CHECK_LIB(ocurses, tputs, LIBTERMLIB="-locurses")]
		    )]
		)]
	    )]
	)]
    )]
)

dnl *** X11 ***
if test "x$bc_with_x11" != "xno" ; then

    if test "x$bc_with_x11_val" != "x" ; then
	if test "x$x_includes" = "xNONE"; then
	    x_includes="$bc_with_x11_val/include"
	    ac_x_includes="$x_includes"
	fi
	if test "x$x_libraries" = "xNONE"; then
	    x_libraries="$bc_with_x11_val/lib"
	    ac_x_libraries="$x_libraries"
	fi
    fi

    dnl find X11 libraries
    AC_PATH_XTRA
    if test "x$have_x" = "xyes" ; then
	AC_DEFINE(HAVE_X11_XLIB_H, 1, Define to 1 if you have the <X11/Xlib.h> header file.)
    fi

    dnl add X11 libraries that link to X_LIBS
    LIBX11=""
    LIBXEXT=""
    LIBXI=""

    PRELIBS="$LIBS"
    LIBS="$PRELIBS $X_LIBS"
    AC_CHECK_LIB(X11, XCreateWindow, LIBX11="-lX11")

    LIBS="$LIBS $LIBX11"
    AC_CHECK_LIB(Xext, XShapeCombineMask, LIBXEXT="-lXext")

    LIBS="$LIBS $LIBX11 $LIBXEXT"
    AC_CHECK_LIB(Xi, XGetExtensionVersion, LIBXI="-lXi")

    X_LIBS="$LIBS $LIBXI"
    LIBS="$PRELIBS"
fi

dnl check if a math library links
m_link_works=no
LIBM=""
AC_CHECK_LIB(m, cos, m_link_works=yes ; LIBM="-lm")

dnl detect a useable system regular expression library
regex_link_works=no
LIBREGEX=""
AC_CHECK_LIB(c, regcomp, regex_link_works=yes ; LIBREGEX="-lc",
    [AC_CHECK_LIB(regex, regcomp, regex_link_works=yes ; LIBREGEX="-lregex",
	[AC_CHECK_LIB(compat, regcomp, regex_link_works=yes ; LIBREGEX="-lcompat")]
    )]
)

dnl check if zlib library links
z_link_works=no
LIBZLIB=""
if test "x$bc_build_zlib" != "xyes" ; then
    AC_CHECK_LIB(z, deflate, z_link_works=yes ; LIBZLIB="-lz")
fi

dnl check if a png library links
png_link_works=no
LIBPNG=""
PRELIBS="$LIBS"
LIBS="$LIBS $LIBZLIB"
AC_CHECK_LIB(png, png_access_version_number, png_link_works=yes ; LIBPNG="-lpng $LIBZLIB")
LIBS="$PRELIBS"

dnl check if utahrle library links
utahrle_link_works=no
UTAHRLE=""
if test "x$bc_build_urt" != "xyes" ; then
    # checking for rle_hdr_init is NOT sufficient to get urt 3.x
    PRELIBS="$LIBS"
    LIBS="$LIBS $LIBM"
    AC_CHECK_LIB(utahrle, rle_getraw, utahrle_link_works=yes ; UTAHRLE="-lutahrle $LIBM",
	[AC_CHECK_LIB(rle, rle_getraw, utahrle_link_works=yes ; UTAHRLE="-lrle $LIBM")]
    )
    LIBS="$PRELIBS"
fi

dnl check if openNURBS library links
opennurbs_link_works=no
LIBOPENNURBS=""
if test "x$bc_build_opennurbs" != "xyes" ; then
    AC_CHECK_LIB(openNURBS, onmalloc, opennurbs_link_works=yes ; LIBOPENNURBS="-lopenNURBS")
fi

dnl check if libtcl library links
tcl_link_works=no
LIBTCL=""
AC_CHECK_LIB(tcl8.6, Tcl_Main, tcl_link_works=yes ; LIBTCL="-ltcl8.6",
    [AC_CHECK_LIB(tcl86, Tcl_Main, tcl_link_works=yes ; LIBTCL="-ltcl86",
	[AC_CHECK_LIB(tcl8.5, Tcl_Main, tcl_link_works=yes ; LIBTCL="-ltcl8.5",
	    [AC_CHECK_LIB(tcl85, Tcl_Main, tcl_link_works=yes ; LIBTCL="-ltcl85",
		[AC_CHECK_LIB(tcl8.4, Tcl_Main, tcl_link_works=yes ; LIBTCL="-ltcl8.4",
		    [AC_CHECK_LIB(tcl84, Tcl_Main, tcl_link_works=yes ; LIBTCL="-ltcl84",
			[AC_CHECK_LIB(tcl, Tcl_Main, tcl_link_works=yes ; LIBTCL="-ltcl")]
		    )]
	    	)]
	    )]
	)]
    )]
)

dnl check if libtclstub library links
tclstub_link_works=no
LIBTCLSTUB=""
AC_CHECK_LIB(tclstub8.6, Tcl_InitStubs, tclstub_link_works=yes ; LIBTCLSTUB="-ltclstub8.6",
    [AC_CHECK_LIB(tclstub86, Tcl_InitStubs, tclstub_link_works=yes ; LIBTCLSTUB="-ltclstub86",
	[AC_CHECK_LIB(tclstub8.5, Tcl_InitStubs, tclstub_link_works=yes ; LIBTCLSTUB="-ltclstub8.5",
	    [AC_CHECK_LIB(tclstub85, Tcl_InitStubs, tclstub_link_works=yes ; LIBTCLSTUB="-ltclstub85",
	    	[AC_CHECK_LIB(tclstub8.4, Tcl_InitStubs, tclstub_link_works=yes ; LIBTCLSTUB="-ltclstub8.4",
		    [AC_CHECK_LIB(tclstub84, Tcl_InitStubs, tclstub_link_works=yes ; LIBTCLSTUB="-ltclstub84",
			[AC_CHECK_LIB(tclstub, Tcl_InitStubs, tclstub_link_works=yes ; LIBTCLSTUB="-ltclstub")]
		    )]
		)]
	    )]
	)]
    )]
)

dnl check if libtk library links
tk_link_works=no
LIBTK=""
AC_CHECK_LIB(tk8.6, Tk_MainLoop, tk_link_works=yes ; LIBTK="-ltk8.6",
    [AC_CHECK_LIB(tk86, Tk_MainLoop, tk_link_works=yes ; LIBTK="-ltk86",
	[AC_CHECK_LIB(tk8.5, Tk_MainLoop, tk_link_works=yes ; LIBTK="-ltk8.5",
	    [AC_CHECK_LIB(tk85, Tk_MainLoop, tk_link_works=yes ; LIBTK="-ltk85",
		[AC_CHECK_LIB(tk8.4, Tk_MainLoop, tk_link_works=yes ; LIBTK="-ltk8.4",
		    [AC_CHECK_LIB(tk84, Tk_MainLoop, tk_link_works=yes ; LIBTK="-ltk84",
			[AC_CHECK_LIB(tk, Tk_MainLoop, tk_link_works=yes ; LIBTK="-ltk")]
		    )]
	        )]
	    )]
	)]
    )]
)

dnl check if libtkstub library links
tkstub_link_works=no
LIBTKSTUB=""
PRELIBS="$LIBS"
LIBS="$LIBS $LIBTCLSTUB"
AC_CHECK_LIB(tkstub8.6, Tk_InitStubs, tkstub_link_works=yes ; LIBTKSTUB="-ltkstub8.6",
    [AC_CHECK_LIB(tkstub86, Tk_InitStubs, tkstub_link_works=yes ; LIBTKSTUB="-ltkstub86",
	[AC_CHECK_LIB(tkstub8.5, Tk_InitStubs, tkstub_link_works=yes ; LIBTKSTUB="-ltkstub8.5",
	    [AC_CHECK_LIB(tkstub85, Tk_InitStubs, tkstub_link_works=yes ; LIBTKSTUB="-ltkstub85",
	    	[AC_CHECK_LIB(tkstub8.4, Tk_InitStubs, tkstub_link_works=yes ; LIBTKSTUB="-ltkstub8.4",
		    [AC_CHECK_LIB(tkstub84, Tk_InitStubs, tkstub_link_works=yes ; LIBTKSTUB="-ltkstub84",
			[AC_CHECK_LIB(tkstub, Tk_InitStubs, tkstub_link_works=yes ; LIBTKSTUB="-ltkstub")]
		    )]
		)]
	    )]
	)]
    )]
)
LIBS="$PRELIBS"

dnl check if libitcl library links
itcl_link_works=no
LIBITCL=""
AC_CHECK_LIB(itcl3.4, Itcl_Init, itcl_link_works=yes ; LIBITCL="-litcl3.4",
    [AC_CHECK_LIB(itcl34, Itcl_Init, itcl_link_works=yes ; LIBITCL="-litcl34",
	[AC_CHECK_LIB(itcl3.3, Itcl_Init, itcl_link_works=yes ; LIBITCL="-litcl3.3",
	    [AC_CHECK_LIB(itcl33, Itcl_Init, itcl_link_works=yes ; LIBITCL="-litcl33",
		[AC_CHECK_LIB(itcl3.2, Itcl_Init, itcl_link_works=yes ; LIBITCL="-litcl3.2",
		    [AC_CHECK_LIB(itcl32, Itcl_Init, itcl_link_works=yes ; LIBITCL="-litcl32",
			[AC_CHECK_LIB(itcl, Itcl_Init, itcl_link_works=yes ; LIBITCL="-litcl")]
		    )]
		)]
	    )]
	)]
    )]
)

dnl check if libitk library links
itk_link_works=no
LIBITK=""
PRELIBS="$LIBS"
LIBS="$LIBS $LIBITCL"
AC_CHECK_LIB(itk3.4, Itcl_Init, itk_link_works=yes ; LIBITCL="-litk3.4",
    [AC_CHECK_LIB(itk34, Itcl_Init, itk_link_works=yes ; LIBITCL="-litk34",
	[AC_CHECK_LIB(itk3.3, Itcl_Init, itk_link_works=yes ; LIBITCL="-litk3.3",
	    [AC_CHECK_LIB(itk33, Itcl_Init, itk_link_works=yes ; LIBITCL="-litk33",
		[AC_CHECK_LIB(itk3.2, Itcl_Init, itk_link_works=yes ; LIBITCL="-litk3.2",
		    [AC_CHECK_LIB(itk32, Itcl_Init, itk_link_works=yes ; LIBITCL="-litk32",
			[AC_CHECK_LIB(itk, Itcl_Init, itk_link_works=yes ; LIBITCL="-litk")]
		    )]
		)]
	    )]
	)]
    )]
)
LIBS="$PRELIBS"

dnl check if a socket library links
socket_link_works=no
LIBSOCKET=""
AC_CHECK_LIB(socket, socket, socket_link_works=yes ; LIBSOCKET="-lsocket")

dnl check if a network socket library links
nsl_link_works=no
LIBNSL=""
AC_CHECK_LIB(nsl, gethostbyaddr, nsl_link_works=yes ; LIBNSL="-lnsl")

dnl check if a malloc library links
malloc_link_works=no
LIBMALLOC=""
AC_CHECK_LIB(c, mallopt, malloc_link_works=yes ; LIBMALLOC="-lc",
    [AC_CHECK_LIB(malloc, mallopt, malloc_link_works=yes ; LIBMALLOC="-lmalloc")]
)

dnl check if a mx library links
mx_link_works=no
LIBMX=""
AC_CHECK_LIB(mx, matherr, mx_link_works=yes ; LIBMX="-lmx")

dnl check if a dynamic link library links
dl_link_works=no
LIBDL=""
AC_CHECK_LIB(dl, dlopen, dl_link_works=yes ; LIBDL="-ldl")

dnl check if the SGI generic SCSI library links
ds_link_works=no
LIBDS=""
AC_CHECK_LIB(ds, dsopen, ds_link_works=yes ; LIBDS="-lds")

dnl check if an OpenGL graphics library links
gl_link_works=no
LIBGL=""
if test "x$bc_with_opengl" != "xno" ; then
    AC_CHECK_LIB(GL, glEnable, gl_link_works=yes ; LIBGL="$LIBGL -lGL",
	 [AC_CHECK_LIB(GL2, glEnable, gl_link_works=yes ; LIBGL="$LIBGL -lGL2")]
    )
    if test "x$gl_link_works" = "xno" ; then
	PRELDFLAGS="$LDFLAGS"
	PRELIBS="$LIBS"
	for bc_dir in "$ac_x_libraries" `echo "$ac_x_includes $ac_x_header_dirs" |
		sed s/include/lib/g` ; do

	    LDFLAGS="$PRELDFLAGS -L$bc_dir"
	    LIBS="$PRELIBS -lGL"
	    AC_LINK_IFELSE([AC_LANG_CALL([],[glEnable])],
		gl_link_works=yes ; LIBGL="-L$bc_dir -lGL" ; break)
	    LIBS="$PRELIBS -lGL2"
	    AC_LINK_IFELSE([AC_LANG_CALL([],[glEnable])],
		gl_link_works=yes ; LIBGL="-L$bc_dir -lGL2" ; break)
	done
	LDFLAGS="$PRELDFLAGS"
	LIBS="$PRELIBS"
    fi
fi

dnl check if the Windows WGL graphics library links
wgl_link_works=no
LIBWGL=""
if test "xbc_with_wgl" != "xno" ; then
    AC_CHECK_LIB(opengl32, glEnable, wgl_link_works=yes ; LIBWGL="-lopengl32")
fi

dnl check if the SGI graphics library links
sgigl_link_works=no
LIBSGIGL=""
AC_CHECK_LIB(gl, gconfig, sgigl_link_works=yes ; LIBSGIGL="-lgl")

dnl check if the Solaris lexer library links
l_link_works=no
LIBL=""
AC_CHECK_LIB(l, yyless, l_link_works=yes ; LIBL="-ll")

dnl check for the IRIX libgen library (for basename/dirname)
gen_link_works=no
LIGEN=""
AC_CHECK_LIB(gen, basename, gen_link_works=yes ; LIBGEN="-lgen")

dnl check if the standard c++ library links without checking for any particular symbol
dnl library is needed when linking c++ code against c code (e.g. openNURBS)
stdcxx_link_works=no
LIBSTDCXX=""
AC_CHECK_LIB(stdc++, main, stdcxx_link_works=yes ; LIBSTDCXX="-lstdc++",
	[PRELIBS="$LIBS"
	 LIBS="$LIBS $LIBM"
	 AC_CHECK_LIB(stdc++, main, stdcxx_link_works=yes ; LIBSTDCXX="-lstdc++ $LIBM"
	 LIBS="$PRELIBS"
	 )]
)


dnl *************************
dnl *** Check for headers ***
dnl *************************

BC_CONFIGURE_STAGE([headers], [4 of 9])

# C89 headers: assert.h, ctype.h, errno.h, float.h, limits.h, locale.h,
# math.h, setjmp.h, signal.h, stdarg.h, stddef.h, stdio.h, stdlib.h,
# string.h, time.h

# C95 headers: wchar.h, wctype.h, iso646.h

# C99 headers: complex.h, fenv.h, inttypes.h, stdbool.h, stdint.h,
# tgmath.h

# POSIX.1 headers includes C89, C95, and C99 plus the following:
# aio.h, arpa/inet.h, cpio.h, dirent.h, dlfcn.h, fcntl.h, fmtmsg.h,
# fnmatch.h, ftw.h, glob.h, grp.h, iconv.h, langinfo.h, libgen.h,
# monetary.h, mqueue.h, ndbm.h, net/if.h, netdb.h, netinet/in.h,
# netinet/tcp.h, nl_types.h, poll.h, pthread.h, pwd.h, regex.h,
# sched.h, search.h, semaphore.h, spawn.h, strings.h, stropts.h,
# sys/ipc.h, sys/mman.h, sys/msg.h, sys/resource.h, sys/select.h,
# sys/stat.h, sys/statvfs.h, sys/time.h, sys/timeb.h, sys/times.h,
# sys/types.h, sys/uio.h, sys/un.h, sys/utsname.h, sys/wait.h,
# syslog.h, tar.h, termios.h, trace.h, ucontext.h, ulimit.h, unistd.h,
# utime.h, utmpx.h, wordexp.h

AC_HEADER_STDC
AC_HEADER_DIRENT
AC_HEADER_SYS_WAIT
AC_CHECK_HEADERS( \
	Carbon/Carbon.h \
	curses.h \
	dslib.h \
	fcntl.h \
	getopt.h \
	gl/device.h \
	grp.h \
	inttypes.h \
	io.h \
	libgen.h \
	memory.h \
	ncurses.h \
	netinet/in.h \
	pthread.h \
	pwd.h \
	rle.h \
	sched.h \
	sgtty.h \
	stdint.h \
	sys/file.h \
	sys/_ioctl.h \
	sys/ioctl.h \
	sys/ioctl_compat.h \
	sys/machd.h \
	sys/mman.h \
	sys/param.h \
	sys/prctl.h \
	sys/select.h \
	sys/socket.h \
	sys/stat.h \
	sys/sysctl.h \
	sys/sysinfo.h \
	sys/sysmp.h \
	sys/time.h \
	sys/times.h \
	sys/types.h \
	sys/un.h \
	sys/unistd.h \
	sys/wait.h \
	syslog.h \
	tcl.h \
	termcap.h \
	terminfo.h \
	termio.h \
	termios.h \
	termlib.h \
	tinfo.h \
	tk.h \
	ulocks.h \
	unistd.h \
	winsock.h \
)

if test "x$bc_with_dtrace" != "xno" ; then
    AC_CHECK_HEADER(sys/sdt.h,, [bc_with_dtrace=no])
fi

GL_CPPFLAGS=""
# optionally check for OpenGL headers
if test "x$bc_with_opengl" != "xno" -o "x$bc_with_wgl" != "xno" ; then
    gl_include_works=no

    AC_COMPILE_IFELSE([AC_LANG_SOURCE([@@%:@@include <GL/gl.h>])],
	[gl_include_works="yes"])
    AC_COMPILE_IFELSE([AC_LANG_SOURCE([@@%:@@include <GL/glx.h>])],
	[gl_include_works="yes"])

    PRECPPFLAGS="$CPPFLAGS"
    if test "x$gl_include_works" = "xno" ; then
	for bc_dir in "$ac_x_includes" `echo $ac_x_header_dirs` ; do
	    CPPFLAGS="$PRECPPFLAGS -I$bc_dir"
	    AC_COMPILE_IFELSE([AC_LANG_SOURCE([@@%:@@include <GL/gl.h>])],
		[gl_include_works="yes"])
	    AC_COMPILE_IFELSE([AC_LANG_SOURCE([@@%:@@include <GL/glx.h>])],
		[gl_include_works="yes"])
	    if test "x$gl_include_works" = "xyes" ; then
		GL_CPPFLAGS="-I$bc_dir"
		break
	    fi
	done
    fi
    AC_CHECK_HEADERS([GL/gl.h GL/glx.h])
    CPPFLAGS="$PRECPPFLAGS"

fi # bc_with_opengl

GL_CFLAGS=$GL_CPPFLAGS
AC_SUBST(GL_CFLAGS)

# optionally (yes or auto) check for vectorization headers for opennurbs
if test "x$bc_build_opennurbs" != "xno" ; then
    AC_CHECK_HEADERS( \
	emmintrin.h \
    )
fi # bc_build_opennurbs

AC_CHECK_HEADER(sys/sched.h,
		AC_DEFINE(HAVE_SYS_SCHED_H, 1, Define to 1 if you have the <sys/sched.h> header file.),,
		[
#ifdef HAVE_PTHREAD_H
#  include <pthread.h>
#endif
#include <sys/sched.h>
])

AC_CHECK_HEADER(sys/stat.h, AC_DEFINE(HAVE_UNIX_IO,, Fix this, sys/types.h and sys/stat.h ...))
AC_CHECK_HEADER(sys/time.h, AC_DEFINE(TIME_WITH_SYS_TIME,1,sys/time.h))

AC_CHECK_HEADER(sys/mount.h,
		AC_DEFINE(HAVE_SYS_MOUNT_H,1, Define to 1 if you have the <sys/mount.h> header file.),,
		[
#ifdef HAVE_SYS_PARAM_H
#  include <sys/param.h>
#endif
#include <sys/mount.h>
])

AC_CHECK_HEADER(term.h,
		AC_DEFINE(HAVE_TERM_H, 1, Define to 1 if you have the <term.h> header file.),,
		[
#if HAVE_NCURSES_H
#  include <ncurses.h>
#else
#  ifdef HAVE_CURSES_H
#    include <curses.h>
#  else
#    ifdef HAVE_TERMCAP_H
#      include <termcap.h>
#    else
#      ifdef HAVE_TERMINFO_H
#        include <terminfo.h>
#      else
#        ifdef HAVE_TINFO_H
#          include <tinfo.h>
#        endif
#      endif
#    endif
#  endif
#endif
#include <term.h>
])

found_regex_h=no
AC_CHECK_HEADER(regex.h,
		AC_DEFINE(HAVE_REGEX_H,1,[Define to 1 if you have the '<regex.h>' header file])
		found_regex_h=yes )


# check for java headers
if test "x$bc_with_java " != "xno" ; then
    PRECPPFLAGS="$CPPFLAGS"
    CPPFLAGS="$CPPFLAGS $JAVA_CFLAGS"
    found_jni_h=no
    AC_CHECK_HEADER(JavaVM/jni.h,
		    AC_DEFINE(HAVE_JAVAVM_JNI_H,1,[Define to 1 if you have the '<JavaVM/jni.h>' header file])
		    found_jni_h=yes)
    AC_CHECK_HEADER(jni.h,
		    AC_DEFINE(HAVE_JNI_H,1,[Define to 1 if you have the '<jni.h>' header file])
		    found_jni_h=yes )

    search_for_jni_h_more=no
    if test "x$found_jni_h" = "xno" ; then
	if test "x$bc_only_rts" = "xyes" ; then
	    search_for_jni_h_more=yes
	fi
    fi

    if test "x$search_for_jni_h_more" = "xyes" ; then
	# darwin systems may have a prior jni.h stashed away elsewhere
	macjvmdir=/System/Library/Frameworks/JavaVM.framework/Versions
	if test -d "$macjvmdir"  ; then
	    for dir in `ls $macjvmdir` ; do
		if test -d "$macjvmdir/$dir/Headers" ; then
		    JAVA_CFLAGS="$JAVA_CFLAGS -I$macjvmdir/$dir/Headers"
		    CPPFLAGS="$CPPFLAGS -I$macjvmdir/$dir/Headers"
		fi
	    done
	fi

	# try one last time to find jni.h (must disable cached result)
	unset ac_cv_header_jni_h
	AC_CHECK_HEADER(jni.h,
			AC_DEFINE(HAVE_JNI_H,
				  1,
				  [Define to 1 if you have the '<jni.h>' header file])
			found_jni_h=yes )

	if test "x$found_jni_h" != "xno" ; then
	    AC_MSG_NOTICE([}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}])
	    AC_MSG_WARN([jni.h was found by hunting through the JavaVM framework])
	    AC_MSG_WARN([This means you probably need to install the latest Java SDK])
	    AC_MSG_WARN([Build will try to use what it found, but you should update])
	    AC_MSG_NOTICE([See http://developer.apple.com/java/ for updates])
	    AC_MSG_NOTICE([{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{])
	fi
    fi # search_for_jni_h_more
    CPPFLAGS="$PRECPPFLAGS"
fi # bc_with_java

# check for proe headers
PROE_CFLAGS=""
if test "x$bc_with_proe" != "xno" ; then
   PRE_CFLAGS="$CFLAGS"
   found_protk_h=no
   if test "x$bc_with_proe" = "xyes" ; then
      if test "x$bc_with_proe_val" = "x" ; then
            found_proe_base=no
	    proe_base=/usr/local/ptc/proeWildfire3.0
	    if test -e "$proe_base" ; then
	       found_proe_base=yes
	       PROE_CFLAGS="-I$proe_base/protoolkit/includes -I$proe_base/prodevelop/includes"
	       CFLAGS="$CFLAGS $PROE_CFLAGS"
	       AC_CHECK_HEADER(ProToolkit.h,
			 AC_DEFINE(HAVE_PROTOOLKIT,1,[Define to 1 if you have Pro/TOOLKIT header files])
			 found_protk_h=yes)
	       if test "x$found_protk_h" = "xyes" ; then
		  bc_with_proe_val=$proe_base
		  PRO_ENGINEER_DIR=$bc_with_proe_val
		  AC_SUBST(PRO_ENGINEER_DIR)
	       fi
	    fi
      else
        PROE_CFLAGS="-I$bc_with_proe_val/protoolkit/includes -I$bc_with_proe_val/prodevelop/includes"
        CFLAGS="$CFLAGS $PROE_CFLAGS"
        AC_CHECK_HEADER(ProToolkit.h,
		        AC_DEFINE(HAVE_PROTOOLKIT,1,[Define to 1 if you have Pro/TOOLKIT header files])
		        found_protk_h=yes)
      fi
   fi
   CFLAGS="$PRE_CFLAGS"
fi


dnl **********************************
dnl *** Check for types/structures ***
dnl **********************************

BC_CONFIGURE_STAGE([types], [5 of 9])

dnl added in autoconf 2.55
dnl AC_HEADER_STDBOOL

AC_C_CHAR_UNSIGNED
AC_HEADER_STAT
AC_HEADER_TIME
AC_STRUCT_ST_BLOCKS
AC_STRUCT_ST_BLKSIZE
AC_CHECK_MEMBERS([struct stat.st_blksize])
AC_CHECK_MEMBERS([struct stat.st_rdev])
AC_STRUCT_TM
AC_TYPE_UID_T
AC_TYPE_MODE_T
AC_TYPE_OFF_T
AC_TYPE_PID_T
AC_TYPE_SIZE_T
AC_CHECK_TYPE(socklen_t, ,
    AC_DEFINE([socklen_t], [int], [Define to int if <sys/socket.h> nor <sys/types.h define socklen_t]),
    [
#ifdef HAVE_SYS_TYPES_H
#  include <sys/types.h>
#endif
#ifdef HAVE_SYS_SOCKET_H
#  include <sys/socket.h>
#endif
])


dnl ******************************************
dnl *** Check for compiler characteristics ***
dnl ******************************************

BC_CONFIGURE_STAGE([compiler], [6 of 9])

if test "xyes" = "xyes" ; then

    dnl try to use -pipe to speed up the compiles
    BC_COMPILER_AND_LINKER_RECOGNIZES([-pipe])

    dnl check for -fno-strict-aliasing
    BC_COMPILER_AND_LINKER_RECOGNIZES([-fno-strict-aliasing])

    dnl check for -fno-common (libtcl needs it on darwin)
    BC_COMPILER_AND_LINKER_RECOGNIZES([-fno-common])

    dnl check for -fexceptions (if yes or auto).
    dnl this is needed to resolve __Unwind_Resume when compiling and
    dnl linking against openNURBS in librt for some binaries, for
    dnl example rttherm (i.e. any -static binaries)
    if test "x$bc_build_opennurbs" != "xno" ; then
	dnl go ahead and enable for everyone regardless
	BC_COMPILER_AND_LINKER_RECOGNIZES([-fexceptions], [fexceptions])
    fi

    BC_COMPILER_AND_LINKER_RECOGNIZES([-msse], [msse], [nokeep])
    MSSE=""
    if test "x$bc_msse_works" = "xyes" ; then
       MSSE="-msse"
    fi
    MSSE2=""
    BC_COMPILER_AND_LINKER_RECOGNIZES([-msse2], [msse2], [nokeep])
    if test "x$bc_msse2_works" = "xyes" ; then
       MSSE2="-msse2"
    fi
    SSE="$MSSE $MSSE2"
    AC_SUBST(SSE)

    dnl check for -search_paths_first linker flag.
    dnl prevent a false-positive where it can be treated as a -s and-e
    dnl linker option by adding a benign flag that should succeed.
    dnl this flag allows dylibs and archives to be found based on a
    dnl library path search order, not biasing a preference for dylibs.
    BC_LINKER_RECOGNIZES([-Wl,-search_paths_first -Wnewline-eof])

    dnl 64bit compilation flags
    if test "x$bc_build_64bit" = "xyes" ; then
	found_64bit_flag=no

	AC_MSG_CHECKING([if configure snuck on a 32bit flag to ld])
	PRELD="$LD"
	LD="`echo $LD | sed 's/32/64/'`"
	if test "x$LD" = "x$PRELD" ; then
		AC_MSG_RESULT(no)
	else
		AC_MSG_RESULT(yes)
	fi

	if test "x$found_64bit_flag" = "xno" ; then
		BC_COMPILER_AND_LINKER_RECOGNIZES([-64], [64_flag])
		if test "x$bc_64_flag_works" = "xyes" ; then
			found_64bit_flag=yes
		fi
	fi

	if test "x$found_64bit_flag" = "xno" ; then
		BC_COMPILER_AND_LINKER_RECOGNIZES([-mabi=64], [64_flag])
		if test "x$bc_64_flag_works" = "xyes" ; then
			found_64bit_flag=yes
		fi
	fi

	if test "x$found_64bit_flag" = "xno" ; then
		BC_COMPILER_AND_LINKER_RECOGNIZES([-m64], [64_flag])
		if test "x$bc_64_flag_works" = "xyes" ; then
			found_64bit_flag=yes
		fi
	fi

	if test "x$found_64bit_flag" = "xno" ; then
		BC_COMPILER_AND_LINKER_RECOGNIZES([-q64], [64_flag])
		if test "x$bc_64_flag_works" = "xyes" ; then
			found_64bit_flag=yes
		fi
	fi
    fi

# end check for automatic flags
fi

dnl profile flags
if test "x$bc_use_profiling" != "xno" ; then
	BC_COMPILER_AND_LINKER_RECOGNIZES([-pg], [profile_flag])
	if test "x$bc_profile_flag_works" = "xno" ; then
		# intel gprof compiler flag
		BC_COMPILER_AND_LINKER_RECOGNIZES([-p], [profile_flag])
	fi

	if test "x$bc_profile_flag_works" = "xno" ; then
		if test "x$bc_use_profiling" = "xyes" ; then
			dnl profiling was requested, so abort
			AC_MSG_NOTICE([}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}])
			AC_MSG_NOTICE([Profiling was enabled but could not find a profile flag])
			AC_MSG_ERROR([*** Don't know how to profile with this compiler ***])
		fi
		AC_MSG_WARN([Don't know how to profile with this compiler])
	else
		# convert 'auto' to 'no' even though it works
		bc_use_profiling=no
	fi
fi

dnl debug flags
if test "x$bc_use_debug" != "xno" ; then
	BC_COMPILER_AND_LINKER_RECOGNIZES([-g], [debug_flag])
	if test "x$bc_debug_flag_works" = "xno" ; then
		if test "x$bc_use_debug" = "xyes" ; then
			dnl debug was requested, so abort
			AC_MSG_NOTICE([}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}])
			AC_MSG_NOTICE([Debug was enabled but -g does not work])
			AC_MSG_ERROR([*** Don't know how to debug with this compiler ***])
		fi
		AC_MSG_WARN([Do not know how to debug with this compiler])
	else
		# convert 'auto' to 'yes'
		bc_use_debug="yes"
	fi
fi

dnl optimization flags
if test "x$bc_use_optimized" != "xno" ; then
	BC_COMPILER_AND_LINKER_RECOGNIZES([-O3], [o3_flag])
	if test "x$bc_o3_flag_works" = "xno" ; then
		AC_MSG_WARN([Don't know how to compile optimized with this compiler])
	fi


# XXX -fast seems to provoke stack corruption in the shadow
# computations, possible that the corruption is indeed valid and
# there's something that needs to be checked/changed.
#
#	BC_COMPILER_AND_LINKER_RECOGNIZES([-fast], [mac_opt_flag])
#	if test "x$bc_mac_opt_flag_works" = "xno" ; then
#		BC_COMPILER_AND_LINKER_RECOGNIZES([-fast -mcpu=7450], [mac_opt_flag])
#	fi
	if test "xdisabled" = "xyes" ; then
		extra_optimization_flag="-ffast-math -fstrength-reduce -fexpensive-optimizations -finline-functions"
		if test "x$bc_use_debug" = "xno" ; then
			dnl non-debug can omit the frame pointer, debug cannot
			extra_optimization_flag="$extra_optimization_flag -fomit-frame-pointer"
		else
			extra_optimization_flag="$extra_optimization_flag -fno-omit-frame-pointer"
		fi
		BC_COMPILER_AND_LINKER_RECOGNIZES([$extra_optimization_flag])
	fi
fi

dnl verbose warning flags (if yes or auto)
if test "x$bc_build_warnings" != "xno" ; then
	BC_COMPILER_AND_LINKER_RECOGNIZES([-W -Wall -Wundef -Wfloat-equal -Wshadow -Wunreachable-code -Winline -Wconversion], [warning])
	# XXX also of interest
	# -Wmissing-declarations -Wmissing-prototypes -Wstrict-prototypes -pedantic -ansi -Werror

	if test "x$bc_warning_flag_works" = "xno" ; then
		AC_MSG_WARN([Don't know how to output verbose warnings with this compiler])
	fi
fi

dnl AC_C_PROTOTYPES
AM_C_PROTOTYPES
AC_DEFINE(USE_PROTOTYPES,1,heh)

AC_C_CONST
AC_C_INLINE
AC_C_VOLATILE
AC_C_BIGENDIAN
if test "x$ac_cv_c_bigendian" = "xyes" ; then
	AC_DEFINE(NATURAL_IEEE, , [64-bit floating point storage technique is big endian])
else
	if test "x$ac_cv_c_bigendian" = "xno" ; then
	       AC_DEFINE(REVERSE_IEEE, , [64-bit floating point storage technique is little endian])
	else
		AC_MSG_NOTICE([}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}])
		AC_MSG_ERROR([*** Don't know the endian of this machine! ***])
	fi
fi

# figure out what size pointers the compiler is actually generating
AC_CHECK_SIZEOF(int)
AC_CHECK_SIZEOF(long)
AC_CHECK_SIZEOF(long long)
AC_CHECK_SIZEOF(void *, 4)
pointer_size="$ac_cv_sizeof_void_p"

# determine the minimum single-precision floating point tolerance
# value at compile time such that: 1.0 + value != 1.0
# ANSI defines this as FLT_EPSILON but float.h may not provide it.
BC_FLOAT_EPSILON

# determine the minimum double-precision floating point tolerance
# value at compile time such that: 1.0 + value != 1.0
# ANSI defines this as DBL_EPSILON but float.h may not provide it.
BC_DOUBLE_EPSILON

# determine whether the single-precision floating point implementation
# seems IEEE 754 compliant.
BC_COMPLIANT_FLOAT

# determine whether the double-precision floating point implementation
# seems IEEE 754 compliant.
BC_COMPLIANT_DOUBLE

dnl Last step is to make sure that we can actually compile
BC_SANITY_CHECK


dnl ***************************
dnl *** Check for functions ***
dnl ***************************

BC_CONFIGURE_STAGE([functions], [7 of 9])

AC_TYPE_SIGNAL

# specifically not checked for and not used:
#   access - security concerns

# specifically not checked for but used including any well-behaved
# C89/posix functions.  this includes:
#   stat

# specifically checked for even though C89 (provided by libsysv):
#   memset, strchr, strtok

# some C89 functions: assert, isalnum, isalpha, iscntrl, isdigit,
# isgraph, islower, isprint, ispunct, isspace, isupper, isxdigit,
# tolower, toupper, localeconv, setlocale, acos, asin, atan, atan2,
# ceil, cos, cosh, exp, fabs, floor, fmod, frexp, ldexp, log, log10,
# modf, pow, sin, sinh, sqrt, tan, longjmp, setjmp, raise, signal,
# va_arg, va_end, va_start, offsetof, clearerr, fclose, feof, ferror,
# fflush, fgetc, fgetpos, fgets, fopen, fprintf, fputc, fputs, fread,
# freopen, fscanf, fseek, fsetpos, fwrite, getc, getchar, gets,
# perror, printf, putc, putchar, puts, remove, rename, rewind, scanf,
# setbuf, setvbuf, sprintf, sscanf, tmpfile, tmpnam, ungetc, vprintf,
# vsprintf, abort, abs, atexit, atof, atoi, atol, bsearch, calloc,
# div, exit, free, ftell, getenv, labs, ldiv, malloc, mblen, mbtowcs,
# mbtowc, qsort, rand, realloc, sizeof, srand, strtod, strtol,
# strtoul, system, wctomb, wcstombs, memchr, memcmp, memcpy, memmove,
# memset, strcat, strchr, strcmp, strcoll, strcpy, strcspn, strerror,
# strlen, strncat, strncmp, strncpy, strpbrk, strrchr, strspn, strstr,
# strtok, strxfrm, asctime, clock, ctime, difftime, gmtime, localtime,
# mktime, strftime, time

AC_CHECK_FUNCS(\
	XQueryExtension \
	alarm \
	dlopen \
	drand48 \
	fchmod \
	fsync \
	geteuid \
	getegid \
	gethostname \
	getopt_long \
	getprogname \
	kill \
	lrand48 \
	lseek \
	memset \
	mkstemp \
	pipe \
	random \
	regcomp \
	sbrk \
	setenv \
	setpgid \
	setpriority \
	setprogname \
	srand48 \
	strchr \
	strdup \
	strsep \
	strtok \
	sync \
	sysctl \
	sysmp \
	vfork \
	writev \
)

dnl *** check if basename() exists ***
AC_MSG_CHECKING([for basename])
PRELIBS="$LIBS"
LIBS="$LIBS $LIBGEN"
AC_TRY_RUN([
#ifdef HAVE_LIBGEN_H
#  include <libgen.h>
#endif
int main(int argc, char *argv[]) {
  (void)basename(argv[0]);
  return 0;
}],
[ AC_MSG_RESULT(yes)
  AC_DEFINE([HAVE_BASENAME], [1], [Define to 1 if you have the `basename' function.])
],
[ AC_MSG_RESULT(no) ])
LIBS="$PRELIBS"

dnl *** check if dirname() exists ***
AC_MSG_CHECKING([for dirname])
PRELIBS="$LIBS"
LIBS="$LIBS $LIBGEN"
AC_TRY_RUN([
#ifdef HAVE_LIBGEN_H
#  include <libgen.h>
#endif
int main(int argc, char *argv[]) {
  (void)dirname(argv[0]);
  return 0;
}],
[ AC_MSG_RESULT(yes)
  AC_DEFINE([HAVE_DIRNAME], [1], [Define to 1 if you have the `dirname' function.])
],
[ AC_MSG_RESULT(no) ])
LIBS="$PRELIBS"


dnl *********************************
dnl *** Check for system services ***
dnl *********************************

BC_CONFIGURE_STAGE([services], [8 of 9])

dnl *** check for bison/yacc or flex/lex ***
# scanner and parser are optionally needed for mged and other tools
# that utilize a parser.  if both are found, provide a make var so we
# can conditionally compile the parsers.
build_parsers=no
if test "x$ac_cv_prog_LEX" != "x" ; then
    if test "x$ac_cv_prog_YACC" != "x" ; then
	# we have both
	build_parsers=yes
    else
	AC_MSG_NOTICE([}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}])
	AC_MSG_WARN([A YACC-style parser was not found so dependant portions])
	AC_MSG_WARN([of the package (various MGED commands) will be disabled.])
	AC_MSG_NOTICE([Installation of GNU Bison or Yacc before continuing is recommended.])
	AC_MSG_NOTICE([{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{])
    fi
else
    AC_MSG_NOTICE([}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}])
    if test "x$ac_cv_prog_YACC" != "x" ; then
	AC_MSG_WARN([A LEX-style scanner was not found so dependant portions])
	AC_MSG_WARN([of the package (various MGED commands) will be disabled.])
	AC_MSG_NOTICE([Installation of GNU Flex or Lex before continuing is recommended.])
    else
	AC_MSG_WARN([Neither a YACC-style parser or a LEX-style scanner was found.])
	AC_MSG_WARN([Dependant portions of the package will be disabled.])
	AC_MSG_NOTICE([Installation of Bison/Yacc and Flex/Lex before continuing is recommended.])
    fi
    AC_MSG_NOTICE([{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{])
fi
AC_MSG_CHECKING([whether we have the essentials to make parsers])
if test "x$build_parsers" = "xyes" ; then
    AC_DEFINE(BC_WITH_PARSERS, 1, [Define to enable compilation of parsers])
    AC_MSG_RESULT(yes)
else
    AC_MSG_RESULT(no)
fi


dnl *** libpng ***
png_works=no
AC_MSG_CHECKING(for portable network graphics functionality)
PRELIBS="$LIBS"
LIBS="$LIBS $LIBPNG"
AC_TRY_RUN([
#include <png.h>
main() {
    int i = png_access_version_number();
    return 0;
}
], [png_works=yes])
LIBS="$PRELIBS"
AC_MSG_RESULT($png_works)

dnl figure out whether we need to build libpng
build_brlcad_png="no (using system)"
if test "x$bc_build_png" = "xyes" ; then
    build_brlcad_png=yes
else
    if test "x$bc_build_png" = "xno" ; then
	if test "x$png_works" != "xyes" ; then
	    AC_MSG_NOTICE([libpng was disabled, but no system png library was found])
	    AC_MSG_NOTICE([}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}])
	    AC_MSG_NOTICE([Try adding --enable-png-build])
	    AC_MSG_ERROR([*** Building libpng was disabled, yet no system png library was found ***])
	fi
    else
	dnl automatic detection, we need to build if it won't run or won't link
	if test "x$png_works" = "xno" ; then
	    build_brlcad_png=yes
	elif test "x$png_link_works" = "xno" ; then
	    build_brlcad_png=yes
	fi
    fi
fi
AC_MSG_CHECKING(whether to build the included portable network graphics library)
PNG=""
PNG_CPPFLAGS=""
if test "x$build_brlcad_png" = "xyes" ; then
    PNG='${top_builddir}/src/other/libpng/libpng.la'
    PNG_CPPFLAGS='-I${top_srcdir}/src/other/libpng'
    AC_MSG_RESULT(yes)
else
    PNG="$LIBPNG"
    AC_MSG_RESULT(no)
fi
AC_SUBST(PNG)
AC_SUBST(PNG_CPPFLAGS)


dnl *** libregex ***
dnl See if regular expression support works
regex_works=no
AC_MSG_CHECKING(for regular expression functionality)
PRELIBS="$LIBS"
LIBS="$LIBS $LIBREGEX"
AC_TRY_RUN([
#ifdef HAVE_SYS_TYPES_H
#  include <sys/types.h>
#endif
#include <regex.h>
int main() {
    regex_t re;
    regcomp(&re, "abc", REG_EXTENDED);
    regexec(&re, "", 0, 0, 0);
    return 0;
}
], [regex_works=yes])
LIBS="$PRELIBS"
AC_MSG_RESULT($regex_works)

dnl figure out whether we need to build libregex
build_brlcad_regex="no (using system)"
if test "x$bc_build_regex" = "xyes" ; then
    build_brlcad_regex=yes
else
    if test "x$bc_build_regex" = "xno" ; then
	if test "x$regex_works" != "xyes" ; then
	    AC_MSG_NOTICE([libregex was disabled, but no system regular expression library was found])
	    AC_MSG_NOTICE([}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}])
	    AC_MSG_NOTICE([Try adding --enable-regex-build])
	    AC_MSG_ERROR([*** Building libregex was disabled, yet no system regex was found ***])
	fi
    else
	dnl automatic detection
	if test "x$regex_works" = "xno" ; then
	    build_brlcad_regex=yes
	fi
    fi
fi
AC_MSG_CHECKING(whether to build the included regular expression library)
REGEX=""
if test "x$build_brlcad_regex" = "xyes" ; then
    REGEX='${top_builddir}/src/other/libregex/libregex.la'
    AC_MSG_RESULT(yes)
else
    REGEX="$LIBREGEX"
    AC_MSG_RESULT(no)
fi
AC_SUBST(REGEX)


dnl *** libz ***
dnl See if zlib library support works
zlib_works=no
AC_MSG_CHECKING(for zlib compression functionality)
PRELIBS="$LIBS"
LIBS="$LIBS $LIBZLIB"
AC_TRY_RUN([
#include <zlib.h>
int main () {
    char *zlibver = ZLIB_VERSION;
    return 0;
}
], [zlib_works=yes])
LIBS="$PRELIBS"
AC_MSG_RESULT($zlib_works)

dnl figure out whether we need to build libz
build_brlcad_zlib="no (using system)"
if test "x$bc_build_zlib" = "xyes" ; then
    build_brlcad_zlib=yes
else
    if test "x$bc_build_zlib" = "xno" ; then
	if test "x$zlib_works" != "xyes" ; then
	    AC_MSG_NOTICE([libz was disabled, but no system zlib compression library was found])
	    AC_MSG_NOTICE([}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}])
	    AC_MSG_NOTICE([Try adding --enable-zlib-build])
	    AC_MSG_ERROR([*** Building libz was disabled, yet no system zlib compression library was found ***])
	fi
    else
	dnl automatic detection
	if test "x$zlib_works" = "xno" ; then
	    build_brlcad_zlib=yes
	fi
    fi
fi
AC_MSG_CHECKING(whether to build the included zlib compression library)
LIBZ=""
LIBZ_CPPFLAGS=""
if test "x$build_brlcad_zlib" = "xyes" ; then
    LIBZ='${top_builddir}/src/other/libz/libz.la'
    LIBZ_CPPFLAGS='-I${top_srcdir}/src/other/libz'
    AC_MSG_RESULT(yes)
else
    LIBZ="$LIBZLIB"
    AC_MSG_RESULT(no)
fi
AC_SUBST(LIBZ)
AC_SUBST(LIBZ_CPPFLAGS)


dnl *** X11 interface compilation ***
build_against_x11="no"
if test "x$bc_with_x11" != "xno" ; then
    x11_works=no
    AC_MSG_CHECKING(for X11 header functionality)
    PRELIBS="$LIBS"
    PRECPPFLAGS="$CPPFLAGS"
    CPPFLAGS="$CPPFLAGS $X_CFLAGS"
    AC_TRY_RUN([
#include <X11/Xlib.h>
main() {
    XPoint pt;
    pt.x = pt.y = 0;
    return pt.x;
}
    ],[x11_works=yes])
    AC_MSG_RESULT($x11_works)
    if test "x$x11_works" = "xyes" ; then
	LIBS="$LIBS $X_LIBS"
	AC_MSG_CHECKING(for X11 link functionality)
	AC_TRY_RUN([
#include <X11/Xlib.h>
main() {
    XModifierKeymap *xmkm;
    xmkm=XNewModifiermap(1);
    return xmkm==NULL;
}
	],,x11_works=no)
	AC_MSG_RESULT($x11_works)
    fi
    LIBS="$PRELIBS"
    CPPFLAGS="$PRECPPFLAGS"

    dnl figure out whether we need to build against X11
    if test "x$bc_with_x11" != "xno" ; then
	if test "x$bc_build_aquatk" = "xyes" ; then
	    X_LIBS=""
	    LIBGL=""
	    X_CFLAGS=""
	    build_against_opengl="no"
	    if test "x$bc_with_x11" = "xyes" ; then
		AC_MSG_ERROR([*** X11 was requested, but tk will be built for AquaTk ***])
	    fi
	else
	    if test "x$x11_works" = "xyes" ; then
		build_against_x11="yes"
	    else
		if test "x$bc_with_x11" = "xyes" ; then
		    AC_MSG_NOTICE([X11 was requested, but no system X11 libraries were found])
		    AC_MSG_NOTICE([}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}])
		    AC_MSG_NOTICE([Try adding --without-x11])
		    AC_MSG_ERROR([*** Using X11 was requested, yet no system X11 was found ***])
		else
		    AC_MSG_NOTICE([X11 does not appear to be functionally available])
		fi
	    fi
	fi
    fi
fi
AC_SUBST(X_PREFIX)
AC_SUBST(X_CFLAGS)
AC_SUBST(X_LIBS)
AC_MSG_CHECKING(whether to build against X11)
AC_MSG_RESULT($build_against_x11)


dnl *** utah raster toolkit ***
dnl See if libutahrle seems to work
urt_works=no
AC_MSG_CHECKING(for Utah Raster Toolkit library functionality)
PRELIBS="$LIBS"
if test "x$utahrle_link_works" = "xyes" ; then
    LIBS="$LIBS $UTAHRLE"
fi
AC_TRY_RUN([
#ifdef HAVE_RLE_H
#  include <rle.h>
#endif
int main () {
    rle_hdr header = *rle_hdr_init( NULL );
    return 0;
}
], [urt_works=yes])
if test "x$utahrle_link_works" = "xyes" ; then
    LIBS="$PRELIBS"
fi
AC_MSG_RESULT($urt_works)

dnl figure out whether we need to build urt
build_brlcad_urt="no (using system)"
if test "x$bc_build_urt" = "xyes" ; then
    build_brlcad_urt=yes
else
    if test "x$bc_build_urt" = "xno" ; then
	if test "x$urt_works" != "xyes" ; then
	    AC_MSG_NOTICE([Utah Raster Toolkit was disabled, but no system URT/RLE library was found ***])
	    AC_MSG_NOTICE([}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}])
	    AC_MSG_NOTICE([Try adding --enable-urt-build])
	    AC_MSG_ERROR([*** Utah Raster Toolkit was disabled, yet no usable RLE system library was found ***])
	fi
    else
	dnl automatic detection
	if test "x$urt_works" = "xno" ; then
	    build_brlcad_urt=yes
	fi
    fi
fi
AC_MSG_CHECKING(whether to build the Utah Raster Toolkit)
RLE=""
RLE_CPPFLAGS=""
if test "x$build_brlcad_urt" = "xyes" ; then
    RLE='${top_builddir}/src/other/libutahrle/libutahrle.la'
    RLE_CPPFLAGS='-I${top_srcdir}/src/other/libutahrle/include'
    AC_MSG_RESULT(yes)
else
    if test "x$utahrle_link_works" = "xyes" ; then
	RLE="$UTAHRLE"
    fi
    AC_MSG_RESULT(no)
fi
AC_SUBST(RLE)
AC_SUBST(RLE_CPPFLAGS)


dnl *** openNURBS ***
dnl See if openNURBS library support works
opennurbs_works=no
AC_MSG_CHECKING(for openNURBS functionality)
PRELIBS="$LIBS"
LIBS="$LIBS $LIBOPENNURBS $LIBZLIB"
AC_LANG_PUSH([C++])
AC_TRY_RUN([
#include <opennurbs.h>
int main () {
    int version = ON::Version();
    return 0;
}
], [opennurbs_works=yes])
AC_LANG_POP
LIBS="$PRELIBS"
AC_MSG_RESULT($opennurbs_works)

dnl figure out whether we need to build openNURBS
build_brlcad_opennurbs="no (using system)"
if test "x$bc_build_opennurbs" = "xyes" ; then
    build_brlcad_opennurbs=yes
else
    if test "x$bc_build_opennurbs" = "xno" ; then
	if test "x$opennurbs_works" != "xyes" ; then
	    AC_MSG_NOTICE([openNURBS was disabled, but no system openNURBS library was found])
	    build_brlcad_opennurbs="no (doing without, BREP unsupported)"
	fi
    else
	dnl automatic detection
	if test "x$opennurbs_works" = "xno" ; then
	    build_brlcad_opennurbs=yes
	fi
    fi
fi
AC_MSG_CHECKING(whether to build the included openNURBS library)
OPENNURBS=""
OPENNURBS_CPPFLAGS='-I${top_srcdir}/src/other/openNURBS'
if test "x$build_brlcad_opennurbs" = "xyes" ; then
    OPENNURBS='${top_builddir}/src/other/openNURBS/libopenNURBS.la ${LIBSTDCXX}'
    AC_MSG_RESULT(yes)
else
    OPENNURBS="$LIBOPENNURBS $LIBSTDCXX $LIBZ"	# produces "  " if we didn't find OpenNURBS
    AC_MSG_RESULT(no)
fi
AC_SUBST(OPENNURBS)
AC_SUBST(OPENNURBS_CPPFLAGS)


dnl *** Tcl ***
dnl See if libtcl seems to work
tcl_works=no
AC_MSG_CHECKING(for Tcl library functionality)
PRELIBS="$LIBS"
if test "x$tcl_link_works" = "xyes" ; then
    LIBS="$LIBS $LIBTCL"
fi
AC_TRY_RUN([
#ifdef HAVE_TCL_H
#  include <tcl.h>
#endif
#ifndef TCL_MAJOR_VERSION
#  error Unknown major version of Tcl
#endif
#ifndef TCL_MINOR_VERSION
#  error Unknown minor version of Tcl
#endif
#include <stdio.h>
int main() {
    Tcl_Time time;
    Tcl_Interp *interp;
    interp = Tcl_CreateInterp();
    if (Tcl_Init(interp) == TCL_ERROR) {
	fprintf(stderr, "Tcl_Init returned error\n");
	return 1;
    }
    /* Tcl_GetTime is an 8.4 symbol */
    Tcl_GetTime(&time);
#if TCL_MAJOR_VERSION < 8
    fprintf(stderr, "major version < 8\n");
    return 1;
#elif TCL_MAJOR_VERSION == 8 && TCL_MINOR_VERSION < 4
    fprintf(stderr, "minor version < 4\n");
    return 1;
#endif
    return 0;
}
], [tcl_works=yes])
if test "x$tcl_link_works" = "xyes" ; then
    LIBS="$PRELIBS"
fi
AC_MSG_RESULT($tcl_works)

dnl figure out whether we need to build Tcl
build_brlcad_tcl="no (using system)"
if test "x$bc_build_tcl" = "xyes" ; then
    build_brlcad_tcl=yes
else
    if test "x$bc_build_tcl" = "xno" ; then
	if test "x$tcl_works" = "xno" ; then
	    AC_MSG_NOTICE([libtcl was disabled, but no system Tcl library was found])
	    AC_MSG_NOTICE([}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}])
	    AC_MSG_NOTICE([Try adding --enable-tcl-build])
	    AC_MSG_ERROR([*** Tcl was disabled, yet no usable libtcl system library was found ***])
	fi
    else
	dnl automatic detection
	if test "x$tcl_works" = "xno" ; then
	    build_brlcad_tcl=yes
	fi
    fi
fi

AC_MSG_CHECKING(whether to build Tcl)
TCL=""
TCLSTUB=""
TCL_CPPFLAGS=""
if test "x$build_brlcad_tcl" = "xyes" ; then
    TCL_VERSION="8.5"
    AC_MSG_RESULT(yes)
    case $host_os in
	 darwin*)
	     TCL='-L${top_builddir}/src/other/tcl/unix'" -ltcl${TCL_VERSION} $FRAMEWORK_COREFOUNDATION"
	     ;;
    	 *)
	     TCL='-L${top_builddir}/src/other/tcl/unix'" -ltcl${TCL_VERSION} ${LIBDL} ${LIBM}"
	     ;;
    esac
    TCLSTUB='-L${top_builddir}/src/other/tcl/unix'" -ltclstub${TCL_VERSION}"
    TCL_CPPFLAGS='-I${top_srcdir}/src/other/tcl/generic -I${top_srcdir}/src/other/tcl/unix'
else
    AC_MSG_RESULT(no)

    dnl If we're using the system Tcl, then we need to load
    dnl tclConfig.sh to get the TCL_VERSION and other vars.
    SC_LOAD_TCLCONFIG

    if test "x$tcl_link_works" = "xyes" ; then
	TCL="$LIBTCL"
    else
	AC_MSG_WARN([Unable to link against a system Tcl library])
    fi
    if test "x$tclstub_link_works" = "xyes" ; then
	TCLSTUB="$LIBTCLSTUB"
    else
	AC_MSG_WARN([Unable to link against a system Tclstub library])
    fi
fi
AC_SUBST(TCL)
AC_SUBST(TCLSTUB)
AC_SUBST(TCL_CPPFLAGS)
AC_SUBST(TCL_VERSION)
AC_SUBST(LIBTCL)


dnl *** Tk ***
dnl See if libtk seems to work
tk_works=no
AC_MSG_CHECKING(for Tk library functionality)
PRELIBS="$LIBS"
if test "x$tk_link_works" = "xyes" ; then
    LIBS="$LIBS $LIBTK $LIBTCL"
fi
AC_TRY_RUN([
#ifdef HAVE_TCL_H
#  include <tcl.h>
#endif
#ifdef HAVE_TK_H
#  include <tk.h>
#endif
#ifndef TK_MAJOR_VERSION
#  error Unknown major version of Tk
#endif
#ifndef TK_MINOR_VERSION
#  error Unknown minor version of Tk
#endif
#include <stdio.h>
int cow = 0;
Tk_ArgvInfo argtbl[] = {
    {"-h", TK_ARGV_CONSTANT, (char *)1, (char *)&cow, "cow."},
    {NULL, TK_ARGV_END, NULL, NULL, NULL}};
int main() {
    Tcl_Interp *interp;
    const char *arg[5] = {".", "xview", "moveto", "1.0", NULL};
    int argl = 1, cow = 0;
    interp = Tcl_CreateInterp();
#define ATTEMPT(try,fail) if(try) { fprintf(stderr, fail": %s\n", \
	interp->result); return -1; }
    ATTEMPT(Tcl_Init(interp) == TCL_ERROR,"Tcl_Init returned error");
    ATTEMPT(Tk_ParseArgv(interp, NULL, &argl, arg, argtbl,
 	TK_ARGV_DONT_SKIP_FIRST_ARG) != TCL_OK, "Tk_ParseArgv");
#if TK_MAJOR_VERSION < 8
    fprintf(stderr, "major version < 8  (it's %d)\n", TK_MAJOR_VERSION);
    return 4;
#elif TK_MAJOR_VERSION == 8 && TK_MINOR_VERSION < 4
    fprintf(stderr, "minor version < 4  (it's %d)\n", TK_MINOR_VERSION);
    return 5;
#endif
    return 0;
}
], [tk_works=yes])
if test "x$tk_link_works" = "xyes" ; then
    LIBS="$PRELIBS"
fi
AC_MSG_RESULT($tk_works)

dnl figure out whether we need to build Tk
build_brlcad_tk="no (using system)"
build_against_tk=$tk_works
if test "x$bc_build_tk" = "xyes" ; then
    build_brlcad_tk=yes
else
    if test "x$bc_build_tk" = "xno" ; then
	if test "x$tk_works" = "xno" ; then
	    AC_MSG_NOTICE([libtk was disabled, but no system Tk library was found])
	    AC_MSG_NOTICE([}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}])
	    AC_MSG_NOTICE([Try adding --enable-tk-build])
	    AC_MSG_ERROR([*** Tk was disabled, yet no usable libtk system library was found ***])
	fi
    else
	dnl automatic detection
	if test "x$tk_works" = "xno" ; then
	    build_brlcad_tk=yes
	fi
    fi
fi
AC_MSG_CHECKING(whether to build Tk)
TK=""
TKSTUB=""
TK_CPPFLAGS=""
if test "x$build_brlcad_tk" = "xyes" ; then
    TK_VERSION="8.5"
    build_against_tk="yes"
    AC_MSG_RESULT(yes)
    TK='-L${top_builddir}/src/other/tk/unix'" -ltk${TCL_VERSION}"
    TKSTUB='-L${top_builddir}/src/other/tk/unix'" -ltkstub${TK_VERSION}"
    TK_CPPFLAGS='-I${top_srcdir}/src/other/tk/generic -I${top_srcdir}/src/other/tk/unix -I${top_srcdir}/src/other/tk/win'
    if test "x$bc_build_aquatk" = "xyes" ; then
	TK_CPPFLAGS="$TK_CPPFLAGS "'-I${top_srcdir}/src/other/tk/xlib'
    fi
else
    AC_MSG_RESULT(no)

    dnl If we're using the system Tk, then we need to load
    dnl tkConfig.sh to get the TK_VERSION and other vars.
    SC_LOAD_TKCONFIG

    if test "x$tk_link_works" = "xyes" ; then
	TK="$LIBTK"
    else
	AC_MSG_WARN([Unable to link against a system Tk library])
    fi
    if test "x$tkstub_link_works" = "xyes" ; then
	TKSTUB="$LIBTKSTUB"
    else
	AC_MSG_WARN([Unable to link against a system Tkstub library])
    fi
fi
AC_SUBST(TK)
AC_SUBST(TKSTUB)
AC_SUBST(TK_CPPFLAGS)
AC_SUBST(TK_VERSION)
AC_SUBST(LIBTK)


dnl *** incrTcl ***
dnl See if libitcl and libitk seem to work, make sure it's not dependant upon libtcl
itcl_works=no
AC_MSG_CHECKING(for incrTcl library functionality)
PRELIBS="$LIBS"
if test "x$itcl_link_works" = "xyes" ; then
    LIBS="$LIBS $LIBITCL $LIBTCL"
fi
AC_TRY_RUN([
#include <itcl.h>
#ifndef ITCL_MAJOR_VERSION
#  error Unknown major version of incrTcl
#endif
#ifndef ITCL_MINOR_VERSION
#  error Unknown minor version of incrTcl
#endif
#include <stdio.h>
int main() {
    Itcl_Stack stack;
    Itcl_InitStack(&stack);
#if ITCL_MAJOR_VERSION < 3
    fprintf(stderr, "major version < 3\n");
    return 1;
#elif ITCL_MAJOR_VERSION == 3 && ITCL_MINOR_VERSION < 2
    fprintf(stderr, "minorversion < 2\n");
    return 1;
#endif
    return 0;
}
], [itcl_works=yes])
if test "x$itcl_link_works" = "xyes" ; then
    LIBS="$PRELIBS"
fi
AC_MSG_RESULT($itcl_works)

dnl figure out whether we need to build incrTcl
build_brlcad_itcl="no (using system)"
if test "x$bc_build_itcl" = "xyes" ; then
    build_brlcad_itcl=yes
else
    if test "x$bc_build_itcl" = "xno" ; then
	if test "x$itcl_works" = "xno" ; then
	    AC_MSG_NOTICE([incrTcl was disabled, but no system incrTcl library was found])
	    AC_MSG_NOTICE([}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}])
	    AC_MSG_NOTICE([Try adding --enable-itcl-build])
	    AC_MSG_ERROR([*** incrTcl was disabled, yet no usable libitcl system library was found ***])
	fi
    else
	dnl automatic detection
	if test "x$itcl_works" = "xno" ; then
	    build_brlcad_itcl=yes
	fi
    fi
fi
AC_MSG_CHECKING(whether to build incrTcl)

dnl itcl/itk
ITCL=""
ITK=""
ITCL_CPPFLAGS=""
ITK_CPPFLAGS=""
ITCL_VERSION=3.4
case $host_os in
     *netbsd-*|*freebsd-[[1-3]]*.*|*openbsd-[[1-3]]*|*sunos4*)
	 # some OS's don't like dots in the lib name
	 ITCL_VERSION="`echo ${ITCL_VERSION} | tr -d .`"
	 ;;
esac
AC_SUBST(ITCL_VERSION)
if test "x$build_brlcad_itcl" = "xyes" ; then
    ITCL='${top_builddir}/src/other/incrTcl/libitcl.la'
    ITK='${top_builddir}/src/other/incrTcl/libitk.la'
    ITCL_CPPFLAGS='-I${top_srcdir}/src/other/incrTcl/itcl/generic'
    ITK_CPPFLAGS='-I${top_srcdir}/src/other/incrTcl/itk/generic'
    AC_MSG_RESULT(yes)
else
    if test "x$itcl_link_works" = "xyes" ; then
	ITCL="$LIBITCL"
	ITK="$LIBITK"
    fi
    AC_MSG_RESULT(no)
fi
AC_SUBST(ITCL)
AC_SUBST(ITK)
AC_SUBST(ITCL_CPPFLAGS)
AC_SUBST(ITK_CPPFLAGS)
AC_SUBST(LIBITCL)
AC_SUBST(LIBITK)

# XXX need incrTcl's configure for the proper .so/.dylib value
ITCL_LIB_FILE="libitcl${ITCL_VERSION}.a"
ITK_LIB_FILE="libitk${ITCL_VERSION}.a"
AC_SUBST(ITCL_LIB_FILE)
AC_SUBST(ITK_LIB_FILE)

dnl *** iwidgets ***
dnl See if the iwidgets are available
iwidgets_works=no
AC_MSG_CHECKING(for iwidgets functionality)
PRELIBS="$LIBS"
if test "x$tcl_link_works" = "xyes" ; then
    LIBS="$LIBS $LIBTCL $LIBITCL"
fi
dnl this test is probably not sufficient if iwidgets is not locateable
dnl in the tcl auto_path.
AC_TRY_RUN([
#ifdef HAVE_TCL_H
#  include <tcl.h>
#endif
int main() {
    int res = TCL_OK;
    Tcl_Interp *interp;
    const char *cmd = "package require Iwidgets";
    char *b = NULL;
    interp = Tcl_CreateInterp();
    if (Tcl_Init(interp) == TCL_ERROR) {
	printf("TCL interpreter failed to init: %s\n", interp->result);
	return 1;
    }
    if (Itcl_Init(interp) == TCL_ERROR) {
	printf("ITCL interp failed to initaliaze: %s\n", interp->result);
	return 1;
    }
    res = Tcl_Eval(interp, cmd);
    if ( res != TCL_OK) {
	printf("Failed to load Iwidgets: %s\n", interp->result);
	if(Tcl_Eval(interp, "package names") == TCL_ERROR)
	    return 1;
	while(b=strtok(b?NULL:interp->result," "))
	  if(!strncmp(b,"Iwidgets",8))
	    return 0;
        return 1;
    }
    return 0;
}
], [iwidgets_works=yes])
if test "x$tcl_link_works" = "xyes" ; then
    LIBS="$PRELIBS"
fi
AC_MSG_RESULT($iwidgets_works)

dnl figure out whether we need to install the iwidgets package
build_brlcad_iwidgets="no (using system)"
if test "x$bc_build_iwidgets" = "xyes" ; then
    build_brlcad_iwidgets=yes
else
    if test "x$bc_build_iwidgets" = "xno" ; then
	if test "x$iwidgets_works" = "xno" ; then
	    AC_MSG_NOTICE([iwidgets was disabled, but no system iwidgets package was found])
	    AC_MSG_NOTICE([}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}])
	    AC_MSG_NOTICE([Try adding --enable-iwidgets-build])
	    AC_MSG_ERROR([*** iwidgets was disabled, yet no usable iwidgets system package was found ***])
	fi
    else
	dnl automatic detection
	if test "x$iwidgets_works" = "xno" ; then
	    build_brlcad_iwidgets=yes
	fi
    fi
fi
AC_MSG_CHECKING(whether to install iwidgets)
AC_MSG_RESULT($build_brlcad_iwidgets)
IWIDGETS_VERSION="4.0.1"
AC_DEFINE_UNQUOTED([IWIDGETS_VERSION], "$IWIDGETS_VERSION", "Version of iWidgets")
AC_SUBST(IWIDGETS_VERSION)


dnl *** BLT ***
dnl figure out whether we need to build BLT
BLT_VERSION="2.4"
BLT_SUFFIX="`echo ${BLT_VERSION} | tr -d .`"
case $host_os in
     *netbsd-*|*freebsd-[[1-3]]*.*|*openbsd-[[1-3]]*|*sunos4*)
	 # some OS's don't like dots in the lib name
	 BLT_VERSION=$BLT_SUFFIX
	 ;;
esac
AC_SUBST(BLT_VERSION)
AC_SUBST(BLT_SUFFIX)
BLT_LIBRARY="${BRLCAD_ROOT}/lib/blt${BLT_VERSION}"
AC_SUBST(BLT_LIBRARY)
AC_MSG_CHECKING(whether to build libblt)
if test "x$build_against_x11" = "xno" ; then
    # BLT *requires* X11
    bc_built_blt=no
fi
if test ! "x$bc_build_blt" = "xno" ; then
    build_brlcad_blt=yes
    BLT='${top_builddir}/src/other/blt/libBLT${BLT_SUFFIX}.la'
    AC_MSG_RESULT(yes)
else
    build_brlcad_blt=no
    BLT=""
    AC_MSG_RESULT(no)
fi
AC_SUBST(BLT)


dnl *** tkImg ***
dnl figure out whether we need to build tkImg
TKIMG_VERSION="1.3"
case $host_os in
     *netbsd-*|*freebsd-[[1-3]]*.*|*openbsd-[[1-3]]*|*sunos4*)
	 # some OS's don't like dots in the lib name
	 TKIMG_VERSION="`echo ${TKIMG_VERSION} | tr -d .`"
	 ;;
esac
AC_SUBST(TKIMG_VERSION)
AC_MSG_CHECKING(whether to build tkimg)
if test ! "x$bc_build_tkimg" = "xno" ; then
    build_brlcad_tkimg=yes
    TKIMG='${top_builddir}/src/other/tkimg/tkimg${TKIMG_VERSION}.la'
    AC_MSG_RESULT(yes)
else
    build_brlcad_tkimg=no
    TKIMG=""
    AC_MSG_RESULT(no)
fi
AC_SUBST(TKIMG)


dnl *** TNT ***
dnl See if template numerical toolkit works
tnt_works=no
AC_MSG_CHECKING(for TNT w/JAMA functionality)
AC_LANG_PUSH(C++)
AC_TRY_RUN([
#include <stdio.h>
#include <jama_lu.h>
int main () {
    Array2D<double> matrix = Array2D<double>(2,2);
    matrix[0][0] = matrix[1][0] = 1.0;
    matrix[0][1] = matrix[1][1] = 0.0;
    JAMA::LU<double> decomposition = JAMA::LU<double>(matrix);
    if (decomposition.isNonsingular()) {
	printf("JAMA:LU decomposition returned non-singular on a singular matrix\n");
	return 1;
    }
    return 0;
}
], [tnt_works=yes])
AC_LANG_POP(C++)
AC_MSG_RESULT($tnt_works)

dnl figure out whether we need to build libz
build_brlcad_tnt="no (using system)"
if test "x$bc_build_tnt" = "xyes" ; then
    build_brlcad_tnt=yes
else
    if test "x$bc_build_tnt" = "xno" ; then
	if test "x$tnt_works" != "xyes" ; then
	    AC_MSG_NOTICE([TNT was disabled, but no suitable system TNT was found])
	    AC_MSG_NOTICE([}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}])
	    AC_MSG_NOTICE([Try adding --enable-tnt-build])
	    AC_MSG_ERROR([*** Use of the included TNT was disabled, yet no system TNT was found ***])
	fi
    else
	dnl automatic detection
	if test "x$tnt_works" = "xno" ; then
	    build_brlcad_tnt=yes
	fi
    fi
fi
AC_MSG_CHECKING(whether to use the included Template Numerical Toolkit)
TNT_CPPFLAGS=""
if test "x$build_brlcad_tnt" = "xyes" ; then
    TNT_CPPFLAGS='-I${top_srcdir}/src/other/tnt'
    AC_MSG_RESULT(yes)
else
    AC_MSG_RESULT(no)
fi
AC_SUBST(TNT_CPPFLAGS)


dnl *** libthread ***
AC_MSG_CHECKING(for threading library availability)
AC_MSG_RESULT($thread_link_works)
AC_SUBST(LIBTHREAD)

AC_MSG_CHECKING(if pthreading works)
thread_works=no
AC_TRY_RUN([
#ifdef HAVE_PTHREAD_H
#  include <pthread.h>
#endif
void *thread_hook(void *arg) {
    return NULL;
}
main () {
    pthread_t thread;
    pthread_create(&thread, (void *)0, thread_hook, (void *)0);
    pthread_join(thread, NULL);
    return 0;
}
], [thread_works=yes])
AC_MSG_RESULT($thread_works)


dnl *** libtermlib ***
dnl See if termlib library support works
termlib_works=no
AC_MSG_CHECKING(for termlib functionality)
PRELIBS="$LIBS"
LIBS="$LIBS $LIBTERMLIB"
AC_TRY_RUN([
#ifdef HAVE_TERMLIB_H
#  include <termlib.h>
#else
#  if HAVE_NCURSES_H
#    include <ncurses.h>
#  else
#    ifdef HAVE_CURSES_H
#      include <curses.h>
#    else
#      ifdef HAVE_TERMCAP_H
#        include <termcap.h>
#      else
#        ifdef HAVE_TERMINFO_H
#          include <terminfo.h>
#        else
#          ifdef HAVE_TINFO_H
#            include <tinfo.h>
#          endif
#        endif
#      endif
#    endif
#  endif
#  if HAVE_TERM_H
#    include <term.h>
#  endif
#endif
int main () {
    char buffer[2048] = {0};
    int result = tgetent(buffer, "vt100");
    return 0;
}
], [termlib_works=yes])
LIBS="$PRELIBS"
AC_MSG_RESULT($termlib_works)

dnl figure out whether we need to build libtermlib
build_brlcad_termlib="no (using system)"
if test "x$bc_build_termlib" = "xyes" ; then
    build_brlcad_termlib=yes
else
    if test "x$bc_build_termlib" = "xno" ; then
	if test "x$termlib_works" != "xyes" ; then
	    AC_MSG_NOTICE([termlib was disabled, but no system terminal library was found])
	    AC_MSG_NOTICE([}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}])
	    AC_MSG_NOTICE([Try adding --enable-termlib-build])
	    AC_MSG_ERROR([*** Building termlib was disabled, yet no system termcap or curses library was found ***])
	fi
    else
	dnl automatic detection
	if test "x$termlib_works" = "xno" ; then
	    build_brlcad_termlib=yes
	fi
    fi
fi
AC_MSG_CHECKING(whether to build the included termlib library)
TERMLIB=""
TERMLIB_CPPFLAGS=""
if test "x$build_brlcad_termlib" = "xyes" ; then
    TERMLIB='${top_builddir}/src/other/libtermlib/libtermlib.la'
    TERMLIB_CPPFLAGS='-I${top_srcdir}/src/other/libtermlib'
    AC_MSG_RESULT(yes)
else
    TERMLIB="$LIBTERMLIB"
    AC_MSG_RESULT(no)
fi
AC_SUBST(TERMLIB)
AC_SUBST(TERMLIB_CPPFLAGS)


dnl *** libm ***
AC_MSG_CHECKING(whether to link with the system math library)
AC_MSG_RESULT($m_link_works)
AC_SUBST(LIBM)

dnl *** libsocket ***
AC_MSG_CHECKING(for system socket library availability)
AC_MSG_RESULT([$socket_link_works])
AC_SUBST(LIBSOCKET)

dnl *** libnsl ***
AC_MSG_CHECKING(for system network socket library availablity)
AC_MSG_RESULT([$nsl_link_works])
AC_SUBST(LIBNSL)

dnl *** libmalloc ***
AC_MSG_CHECKING(for system malloc library availability)
AC_MSG_RESULT([$malloc_link_works])
AC_SUBST(LIBMALLOC)

dnl *** libmx ***
AC_MSG_CHECKING(for system mx library availability)
AC_MSG_RESULT([$mx_link_works])
AC_SUBST(LIBMX)

dnl *** libdl ***
AC_MSG_CHECKING(for system dynamic linker library availability)
AC_MSG_RESULT([$dl_link_works])
AC_SUBST(LIBDL)

dnl *** libds ***
AC_MSG_CHECKING(for SGI /dev/scsi library availability)
AC_MSG_RESULT([$ds_link_works])
AC_SUBST(LIBDS)

dnl *** libgl ***
AC_MSG_CHECKING(for OpenGL library availability)
AC_MSG_RESULT($gl_link_works)
AC_SUBST(LIBGL)

dnl *** libopengl32 ***
AC_MSG_CHECKING(for WindowsGL library availability)
AC_MSG_RESULT($wgl_link_works)
AC_SUBST(LIBWGL)

dnl *** sgigl ***
AC_MSG_CHECKING(for SGI graphics library availability)
AC_MSG_RESULT($sgigl_link_works)
AC_SUBST(LIBSGIGL)
if test "x$sgigl_link_works" = "xyes" ; then
    AC_DEFINE(HAS_SGIGL, 1, Irix GL is present.)
fi

dnl *** libl Solaris lexer library ***
AC_MSG_CHECKING(for Solaris lexer library availability)
AC_MSG_RESULT($l_link_works)
AC_SUBST(LIBL)

dnl *** libgen IRIX dirname/basename library ***
AC_MSG_CHECKING(for libgen library availability)
AC_MSG_RESULT($gen_link_works)
AC_SUBST(LIBGEN)

dnl *** libregex ***
AC_MSG_CHECKING(for system regular expression library availability)
AC_MSG_RESULT($regex_link_works)
AC_SUBST(LIBREGEX)

dnl *** libpng ***
AC_MSG_CHECKING(for system portable network graphics availability)
AC_MSG_RESULT($png_link_works)
AC_SUBST(LIBPNG)

dnl *** openNURBS library ***
AC_MSG_CHECKING(for system openNURBS library availability)
AC_MSG_RESULT($opennurbs_link_works)
AC_SUBST(LIBOPENNURBS)

dnl *** libstdc++ C++ library ***
AC_MSG_CHECKING(whether the Standard C++ library is available)
AC_MSG_RESULT($stdcxx_link_works)
AC_SUBST(LIBSTDCXX)

if test "x$bc_with_dtrace" = "xyes" ; then
    AC_DEFINE(USE_DTRACE, 1, [Are we building with DTrace support?])
    DTRACE_SRC="\${DTRACE_SRC}"
    DTRACE_HDR="\${DTRACE_HDR}"
    DTRACE_OBJ="\${DTRACE_OBJ}"
    AC_SUBST(DTRACE_SRC)
    AC_SUBST(DTRACE_HDR)
    AC_SUBST(DTRACE_OBJ)
fi

dnl *** 64-bit compilation ***
dnl figure out whether we are building 64-bit
build_brlcad_64bit="no"
if test "x$bc_build_64bit" = "xyes" ; then
    if test "x$pointer_size" != "x8" ; then
	AC_MSG_NOTICE([}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}])
	AC_MSG_NOTICE([Try removing --enable-64bit-build or modifying the CFLAGS/LDFLAGS])
	AC_MSG_ERROR([*** Building 64-bit was requested, yet the build seems to be non-64-bit ***])
    fi
    build_brlcad_64bit=yes
else
    if test "x$bc_build_64bit" = "xno" ; then
	if test "x$pointer_size" = "x8" ; then
	    AC_MSG_NOTICE([}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}])
	    AC_MSG_NOTICE([Try removing --disable-64bit-build or modifying the CFLAGS/LDFLAGS])
	    AC_MSG_ERROR([*** Building non-64-bit was requested, yet the build seems to be 64-bit ***])
	fi
    fi

    dnl automatic detection
    if test "x$pointer_size" = "x8" ; then
	build_brlcad_64bit="yes"
    elif test "x$pointer_size" = "x4" ; then
	build_brlcad_64bit="no (32-bit)"
    elif test "x$pointer_size" = "x2" ; then
	build_brlcad_64bit="no (16-bit)"
    elif test "x$pointer_size" = "x1" ; then
	build_brlcad_64bit="no (8-bit)"
    else
	AC_MSG_WARN([Unknown pointer size: $pointer_size])
    fi
fi


dnl *** Jove compilation ***
build_brlcad_jove=no
if test "x$bc_build_jove" = "xyes" ; then
    build_brlcad_jove=yes
elif test "x$bc_build_jove" = "xno" ; then
    build_brlcad_jove=no	# body for the sake of body
else
    # enable jove if no suitable system emacs/jove was found
    if test "x$BCEDITOR" = "x" ; then
	build_brlcad_jove=yes
    fi
fi


dnl *** Java interface compilation ***
build_against_java=no
if test "x$bc_with_java" != "xno" ; then
    AC_MSG_CHECKING(for Java functionality)
    if test "x$found_jni_h" = "xno" ; then
	if test "x$bc_only_rts" != "xno" ; then
	    AC_MSG_RESULT(no)
	    AC_MSG_NOTICE([searching more extensively])
	    AC_MSG_NOTICE([}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}])
	    AC_MSG_NOTICE([Try adding --with-jdk=/path/to/jdk to find jni.h])
	    AC_MSG_ERROR([*** Cannot locate jni.h for building librtserver ***])
	fi
	if test "x$bc_with_java" = "xyes" ; then
	    AC_MSG_RESULT(no)
	    AC_MSG_NOTICE([searching more extensively])
	    AC_MSG_NOTICE([}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}])
	    AC_MSG_ERROR([Failed to locate a functioning jni.h for Java])
	fi

	if test "x$bc_with_java" != "xauto" ; then
	    AC_MSG_NOTICE([}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}])
	    AC_MSG_WARN([Unable to locate a functioning Java])
	    AC_MSG_WARN([Compilation of librtserver will be disabled])
	    AC_MSG_NOTICE([{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{])
	fi
	AC_MSG_RESULT(no)
    else # found_jni_h
	if test "x$bc_with_java" = "xauto" ; then
	    build_against_java=yes
	else
	    build_against_java="yes ($bc_with_java_val)"
	fi
	AC_MSG_RESULT(yes)
    fi # found_jni_h
fi # bc_with_java


dnl *** Pro/ENGINEER installation / plugin compilation ***
build_against_proe=no
if test "x$bc_with_proe" != "xno" ; then
   if test "x$pointer_size" != "x4" ; then
      AC_MSG_RESULT(no)
      AC_MSG_WARN([The Pro/E plugin must be built as a 32-bit library. Please disable 64-bit builds and set appropriate C/CXXFLAGS])
   else
      AC_MSG_CHECKING(for Pro/ENGINEER installation)
      if test "x$found_protk_h" = "xno" ; then
	 AC_MSG_RESULT(no)
	 if test "x$bc_with_proe" = "xyes" ; then
	    AC_MSG_NOTICE([}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}])
	    AC_MSG_WARN([Unable to locate ProToolkit.h. Make sure your installation of Pro/E also has Pro/TOOLKIT])
	 fi
         if test "x$bc_with_proe" = "xauto" ; then
	    AC_MSG_NOTICE([}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}])
	    AC_MSG_WARN([Pro/E was not installed in the standard place (/usr/local/ptc/proeWildfire3.0).])
	    AC_MSG_WARN([Try adding --with-proe=/path/to/proe to find the ProToolkit.h])
	    AC_MSG_WARN([Compilation of Pro/ENGINEER plugin will be disabled])
	 fi
      else
         if test "x$bc_with_proe" = "xauto" ; then
	    build_against_proe=yes
	 else
	    build_against_proe="yes ($bc_with_proe_val)"
	 fi
         AC_MSG_RESULT(yes)
      fi
   fi
fi


dnl *** OpenGL interface compilation ***
build_against_opengl="no"
if test "x$bc_with_opengl" != "xno" ; then
    AC_MSG_CHECKING(for OpenGL functionality)
    opengl_works=no
    PRELIBS="$LIBS"
    PRECPPFLAGS="$CPPFLAGS"
    LIBS="$LIBS $LIBGL"
    CPPFLAGS="$CPPFLAGS $GL_CPPFLAGS"
    AC_TRY_RUN([
#ifdef HAVE_GL_GL_H
#  include <GL/gl.h>
#endif
main(int argc, char *argv[]) {
    GLboolean values;
    void (*func)() = glBegin;
    if (GL_FALSE || argc > 1) {
	func(GL_POINTS);
	glGetBooleanv(GL_DEPTH_TEST, &values);
	glEnd();
    }
    return 0;
}
    ], [opengl_works=yes])
    LIBS="$PRELIBS"
    CPPFLAGS="$PRECPPFLAGS"
    AC_MSG_RESULT($opengl_works)

    dnl figure out whether we need to build against opengl
    if test "x$opengl_works" = "xyes" ; then
	build_against_opengl="yes"
    else
	if test "x$bc_with_opengl" = "xyes" ; then
	    AC_MSG_NOTICE([OpenGL was requested, but no system OpenGL libraries were found])
	    AC_MSG_NOTICE([}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}])
	    AC_MSG_NOTICE([Try adding --without-opengl])
	    AC_MSG_ERROR([*** Using OpenGL was requested, yet no system OpenGL was found ***])
	else
	    AC_MSG_NOTICE([OpenGL does not appear to be functionally available])
	fi
    fi
fi # bc_with_opengl
AC_MSG_CHECKING(whether to build against OpenGL)
AC_MSG_RESULT($build_against_opengl)


dnl *** WindowsGL interface compilation ***
build_against_wgl="no"
if test "x$bc_with_wgl" != "xno" ; then
    AC_MSG_CHECKING(for WindowsGL functionality)
    wgl_works=no
    PRELIBS="$LIBS"
    LIBS="$LIBS $LIBWGL"
    AC_TRY_RUN([
#ifdef HAVE_GL_GL_H
#  include <GL/gl.h>
#endif
main(int argc, char *argv[]) {
    GLboolean values;
    void (*func)() = glBegin;
    if (GL_FALSE || argc > 1) {
        func(GL_POINTS);
	glGetBooleanv(GL_DEPTH_TEST, &values);
	glEnd();
    }
    return 0;
}
    ], [wgl_works=yes])
    LIBS="$PRELIBS"
    AC_MSG_RESULT($wgl_works)

    dnl figure out whether we need to build against wgl
    if test "x$wgl_works" = "xyes" ; then
	build_against_wgl="yes"
    else
	if test "x$bc_with_wgl" = "xyes" ; then
	    AC_MSG_NOTICE([WindowsGL was requested, but no system WGL OpenGL libraries were found])
	    AC_MSG_NOTICE([}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}])
	    AC_MSG_NOTICE([Try adding --without-wgl])
	    AC_MSG_ERROR([*** Using WindowsGL was requested, yet no system WGL OpenGL was found ***])
	else
	    AC_MSG_NOTICE([WindowsGL does not appear to be functionally available])
	fi
    fi
fi # bc_with_wgl
AC_MSG_CHECKING(whether to build against WindowsGL)
AC_MSG_RESULT($build_against_wgl)


dnl *** SDL availability  ***
sdl_works="no"
if test "x$bc_with_sdl" != "xno" ; then
    if test "x$SDL_CONFIG" != "x" ; then
	AM_PATH_SDL(1.2.0,,AC_MSG_ERROR([Cannot find SDL.]))
	AC_SUBST(SDL_CFLAGS)
	AC_SUBST(SDL_LIBS)
	AC_DEFINE(HAVE_SDL, 1, [SDL 1.2.0+ is available])
	sdl_works="yes"
    fi
fi
AC_MSG_CHECKING(for SDL functionality)
AC_MSG_RESULT($sdl_works)


dnl *** Python availability ***
python_works="no"
AC_MSG_CHECKING(for Python functionality)
if test "x$bc_with_python" != "xno" ; then
    if test "x$PYTHON" != "x" ; then
	python_works="yes"
    fi
fi
AC_SUBST(PYTHON_CFLAGS)
AC_SUBST(PYTHON_LIBS)
AC_MSG_RESULT($python_works)


dnl *** ADRT compilation ***
dnl figure out whether we have everything we need to build ADRT
dnl requires sdl and python
build_brlcad_adrt="no"
if test "x$bc_build_adrt" = "xauto" ; then
    if test "x$python_works" = "xyes" ; then
	if test "x$sdl_works" = "xyes" ; then
	    build_brlcad_adrt="yes"
	else
	    build_brlcad_adrt="no (need sdl)"
	fi
    else
	if test "x$sdl_works" = "xyes" ; then
	    build_brlcad_adrt="no (need python)"
	else
	    build_brlcad_adrt="no (need python and sdl)"
	fi
    fi
elif test "x$bc_build_adrt" = "xyes" ; then
    build_brlcad_adrt="yes"
    if test "x$sdl_works" = "xno" ; then
	AC_MSG_NOTICE([ADRT requires SDL (and Python)])
	AC_MSG_NOTICE([}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}])
	AC_MSG_NOTICE([Try adding --disable-adrt-build])
	AC_MSG_ERROR([*** Using ADRT was requested, yet no system SDL library was found ***])
    elif test "x$python_works" = "xno" ; then
	AC_MSG_NOTICE([ADRT requires Python (and SDL)])
	AC_MSG_NOTICE([}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}])
	AC_MSG_NOTICE([Try adding --disable-adrt-build])
	AC_MSG_ERROR([*** Using ADRT was requested, yet no system Python interpreter was found ***])
    fi
fi


dnl *** Knobs availability ***
dials_and_buttons=no
AC_MSG_CHECKING(for SGI dials and buttons support)
AC_TRY_RUN([
#ifdef HAVE_GL_DEVICE_H
#  include <gl/device.h>
#endif
main () {
    if (DIAL0 | DIAL1 | DIAL2 | DIAL3) {
	return 0;
    }
    return 1;
}
], [dials_and_buttons=yes])
if test "x$dials_and_buttons" = "xyes" ; then
    AC_DEFINE(IR_KNOBS, 8, [Turn on SGI knobs])
    AC_DEFINE(IR_BUTTONS, 32, [Turn on SGI buttons])
fi
AC_MSG_RESULT($dials_and_buttons)


# XXX nasty temp hack for backwards cake compatibility. code needs to be fixed.
if test "x$host_os" = "xirix6.5" ; then
    # XXX the code that relies on this will be going away, but until then..
    if test "x$build_brlcad_64bit" = "xyes" ; then
	CFLAGS="$CFLAGS -DIRIX64=65"
    else
	CFLAGS="$CFLAGS -DIRIX=6"
    fi
fi

dnl search the BRL-CAD include directory (required for non-srcdir builds).
dnl should come after the system services checks otherwise or our headers
dnl may conflict.
CPPFLAGS="$CPPFLAGS -DBRLCADBUILD=1 -I\${top_srcdir}/include"

dnl opennurbs header files are required when compiling C++ files due
dnl to the brep.h header
dnl CPPFLAGS ="$CPPFLAGS $OPENNURBS_CPPFLAGS"

# make sure ECHO and ECHO_N got defined and substituted
if test "x$ECHO" = "x" ; then
    ECHO=echo
    AC_MSG_NOTICE([ECHO was not defined by configure so defining manually])
fi
AC_SUBST(ECHO)
AC_SUBST(ECHO_N)


dnl **************************************
dnl *** Configure Makefiles and output ***
dnl **************************************

BC_CONFIGURE_STAGE([output], [9 of 9])

# remove surrounding whitspace
CFLAGS="`echo $CFLAGS`"
CXXFLAGS="`echo $CXXFLAGS`"
CPPFLAGS="`echo $CPPFLAGS`"
LDFLAGS="`echo $LDFLAGS`"
LIBS="`echo $LIBS`"

AM_CONDITIONAL(BUILD_TCL, [test "x$build_brlcad_tcl" = "xyes"])
AM_CONDITIONAL(BUILD_TK, [test "x$build_brlcad_tk" = "xyes"])
AM_CONDITIONAL(BUILD_ITCL, [test "x$build_brlcad_itcl" = "xyes"])
AM_CONDITIONAL(BUILD_IWIDGETS, [test "x$build_brlcad_iwidgets" = "xyes"])
AM_CONDITIONAL(BUILD_BLT, [test "x$build_brlcad_blt" = "xyes"])
AM_CONDITIONAL(BUILD_TKIMG, [test "x$build_brlcad_tkimg" = "xyes"])
AM_CONDITIONAL(BUILD_PNG, [test "x$build_brlcad_png" = "xyes"])
AM_CONDITIONAL(BUILD_REGEX, [test "x$build_brlcad_regex" = "xyes"])
AM_CONDITIONAL(BUILD_ZLIB, [test "x$build_brlcad_zlib" = "xyes"])
AM_CONDITIONAL(BUILD_URT, [test "x$build_brlcad_urt" = "xyes"])
AM_CONDITIONAL(BUILD_OPENNURBS, [test "x$build_brlcad_opennurbs" = "xyes"])
AM_CONDITIONAL(BUILD_TERMLIB, [test "x$build_brlcad_termlib" = "xyes"])
AM_CONDITIONAL(BUILD_TNT, [test "x$build_brlcad_tnt" = "xyes"])
AM_CONDITIONAL(BUILD_JOVE, [test "x$build_brlcad_jove" = "xyes"])
AM_CONDITIONAL(BUILD_EF, [test "x$bc_build_ef" = "xyes"])
AM_CONDITIONAL(BUILD_CUBIT, [test "x$bc_build_cubit" = "xyes"])
AM_CONDITIONAL(BUILD_UG, [test "x$bc_build_ug" = "xyes"])
AM_CONDITIONAL(BUILD_ADRT, [test "x$build_brlcad_adrt" = "xyes"])

# libfb and libdm interfaces
AM_CONDITIONAL(WITH_X11, [test "x$build_against_x11" != "xno"])
AM_CONDITIONAL(WITH_OPENGL, [test "x$build_against_opengl" != "xno" && test "x$build_against_x11" != "xno"])
AM_CONDITIONAL(WITH_WGL, [test "x$build_against_wgl" != "xno"])
AM_CONDITIONAL(WITH_TK, [test "xyes" = "xno"])
#AM_CONDITIONAL(WITH_TK, [test "x$build_against_tk" != "xno"])

AM_CONDITIONAL(WITH_JAVA, [test "x$build_against_java" != "xno"])
AM_CONDITIONAL(WITH_PROE, [test "x$build_against_proe" != "xno"])
AM_CONDITIONAL(WITH_PARSERS, [test "x$build_parsers" != "xno"])

# FIXME: this needs to be actually set up above
AM_CONDITIONAL(WITH_OPENNURBS, [test "x$build_against_opennurbs" != "x"])

AM_CONDITIONAL(INSTALL_MODELS, [test "x$bc_install_geometry" = "xyes"])
AM_CONDITIONAL(ONLY_BENCHMARK, [test "x$bc_only_benchmark" != "xno"])
AM_CONDITIONAL(ONLY_RTS, [test "x$bc_only_rts" != "xno"])


dnl Any combination of the different optimizations listed below may individually be
dnl optionally turned off by commenting out the unwanted defines in the config file.
dnl
dnl NO_BOMBING_MACROS
dnl      turns off many macros in h/bu.h and h/bn.h that check a condition (such as a
dnl      magic number) and bu_bomb on failure.  note that turning this flag on will
dnl      remove the debug capability to catch fatal runtime erros (bugs) and exit
dnl      gracefully.
dnl NO_MAGIC_CHECKING
dnl      turns off allocation of (some) variables and calls to check magic numbers.
dnl      note that this will hinder memory corrupting bug detection.
dnl NO_BADRAY_CHECKING
dnl      is a risky optimization to turn off checking in librt/shoot.c for bad rays
dnl      passed in to the expensive shootray() routine.
dnl NO_DEBUG_CHECKING
dnl      is an optimization that replaces instances of rt_g.debug in if statements
dnl      where checking for a debug level occurs (in order to output a debug message)
dnl      with the integer constant 0.  note that turning this flag on will remove the
dnl      capability to output debug messages and commands that take a debug-level args
dnl      will not output as expected.  see h/raytrace.h for the implementation details.

if test "x$bc_build_runtime_debug" = "xno" ; then
	AC_MSG_NOTICE([}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}])
	AC_MSG_WARN([While disabling run-time debugging should increase])
	AC_MSG_WARN([performance, it will likewise remove several])
	AC_MSG_WARN([data-protection safeguards that are in place to])
	AC_MSG_WARN([minimize the possibility of corrupted data files])
	AC_MSG_WARN([in the inevitable event of a user encountering a bug.])
	AC_MSG_WARN([You have been warned.  Proceed at your own risk.])
	AC_MSG_NOTICE([{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{])
	AC_DEFINE(NO_BOMBING_MACROS, 1, [Define to not do anything for macros that only bomb on a fatal error])
	AC_DEFINE(NO_MAGIC_CHECKING, 1, [Define to not perform magic number checking])
	AC_DEFINE(NO_BADRAY_CHECKING, 1, [Define to not check for divide by zero during ray shots])
	AC_DEFINE(NO_DEBUG_CHECKING, 1, [Define to not provide run-time debug facilities via rt_g.debug])
fi

dnl compile-time debug
if test "x$bc_use_debug" != "xno" ; then
	AC_DEFINE(DEBUG, 1, [Define to enable compile-time debug code])
else
	AC_DEFINE(NDEBUG, 1, [Define to indicate non-debug code (assert utilizes)])
fi

AC_DEFINE_UNQUOTED([USE_FBSERV], [1], [Required for libdm/mged to allow direct fbserv render connections])


#
# set up the BRL-CAD libraries
#

BN='${top_builddir}/src/libbn/libbn.la'
BU='${top_builddir}/src/libbu/libbu.la'
CURSOR='${top_builddir}/src/libcursor/libcursor.la'
DM='${top_builddir}/src/libdm/libdm.la'
FB='${top_builddir}/src/libfb/libfb.la'
FFT='${top_builddir}/src/libfft/libfft.la'
MULTISPECTRAL='${top_builddir}/src/libmultispectral/libmultispectral.la'
OPTICAL='${top_builddir}/src/liboptical/liboptical.la'
ORLE='${top_builddir}/src/liborle/liborle.la'
PKG='${top_builddir}/src/libpkg/libpkg.la'
RT='${top_builddir}/src/librt/librt.la'
SYSV='${top_builddir}/src/libsysv/libsysv.la'
TCLCAD='${top_builddir}/src/libtclcad/libtclcad.la'
TERMIO='${top_builddir}/src/libtermio/libtermio.la'
WDB='${top_builddir}/src/libwdb/libwdb.la'
BRLCAD='${top_builddir}/src/libbrlcad.la'

ORLE_LIBS=
PKG_LIBS="${LIBSOCKET} ${LIBNSL}"
SYSV_LIBS=
TERMIO_LIBS="${TERMLIB}"
CURSOR_LIBS="${TERMLIB}"
FFT_LIBS="${LIBM}"
BU_LIBS="${TCL} ${PNG} ${LIBM} ${LIBMALLOC} ${LIBTHREAD}"
BN_LIBS="${BU} ${BU_LIBS} ${TCL} ${LIBM}"
FB_LIBS="${BU} ${BU_LIBS} ${PKG} ${TCL} ${SOCKET} ${NSL}" # additional/optional FB_LIBS: ${TK} ${X_LIBS} ${LIBGL}
TCLCAD_LIBS="${FB} ${FB_LIBS} ${TK} ${TCLSTUB} ${BLT}"
OPTICAL_LIBS="${RT} ${RT_LIBS} ${BN} ${BN_LIBS} ${BU} ${BU_LIBS} ${TCL}"
MULTISPECTRAL_LIBS="${OPTICAL} ${OPTICAL_LIBS} ${RT} ${RT_LIBS} ${BN} ${BN_LIBS} ${BU} ${BU_LIBS}"
RT_LIBS="${BN} ${BN_LIBS} ${BU} ${BU_LIBS} ${REGEX} ${LIBM} ${SYSV} ${OPENNURBS}"
WDB_LIBS="${RT} ${RT_LIBS} ${BN} ${BN_LIBS} ${BU} ${BU_LIBS}"
DM_LIBS="${RT} ${RT_LIBS} ${FB} ${FB_LIBS} ${PNG} ${TK} ${X_LIBS} ${FRAMEWORK_CARBON}"
BRLCAD_LIBS="${WDB} ${WDB_LIBS} ${RT} ${RT_LIBS} ${BN} ${BN_LIBS} ${BU} ${BU_LIBS}"

AC_SUBST(BN)
AC_SUBST(BU)
AC_SUBST(CURSOR)
AC_SUBST(DM)
AC_SUBST(FB)
AC_SUBST(FFT)
AC_SUBST(MULTISPECTRAL)
AC_SUBST(OPTICAL)
AC_SUBST(ORLE)
AC_SUBST(PKG)
AC_SUBST(RT)
AC_SUBST(SYSV)
AC_SUBST(TCLCAD)
AC_SUBST(TERMIO)
AC_SUBST(WDB)
AC_SUBST(BRLCAD)

AC_SUBST(BN_LIBS)
AC_SUBST(BU_LIBS)
AC_SUBST(CURSOR_LIBS)
AC_SUBST(DM_LIBS)
AC_SUBST(FB_LIBS)
AC_SUBST(FFT_LIBS)
AC_SUBST(MULTISPECTRAL_LIBS)
AC_SUBST(OPTICAL_LIBS)
AC_SUBST(ORLE_LIBS)
AC_SUBST(PKG_LIBS)
AC_SUBST(RT_LIBS)
AC_SUBST(SYSV_LIBS)
AC_SUBST(TCLCAD_LIBS)
AC_SUBST(TERMIO_LIBS)
AC_SUBST(WDB_LIBS)
AC_SUBST(BRLCAD_LIBS)


# if compiling with the MIPSpro 7.3 compiler, there is a bug when
# trying to link using an rpath longer than 256 that causes the linker
# to core dump.
AM_CONDITIONAL(LINK_STATIC_REQUIRED, [test "x$build_vendor" = "xsgi" -a "x$compiler" = "xsgi" ])

dnl XXX - hack for justins g.c file
AM_CONDITIONAL(HAVE_BRLCAD, true)
AM_CONDITIONAL(HAVE_DOXYGEN, false)

dnl sample applications
SAMPLE_APPLICATIONS_DIR='${BRLCAD_DATA}/sample_applications'
AC_SUBST(SAMPLE_APPLICATIONS_DIR)

# stash the top builddir before configuring subdirectories
bc_top_builddir="$ac_top_builddir"

# stash the current configuration args before adding additional ones
# for subconfigure
bc_configure_args="$ac_configure_args"

dnl the way to turn on debug for tcl/tk configure
if test "x$bc_use_debug" != "xno" ; then
   ac_configure_args="$ac_configure_args --enable-symbols"
fi

dnl configure Tcl
if test "x$build_brlcad_tcl" = "xyes" ; then
    TCL_PATH="$PWD/${ac_top_builddir}/src/other/tcl/unix"
    ac_configure_args="$ac_configure_args --with-tcl=\"$TCL_PATH\""
    AC_CONFIG_SUBDIRS([src/other/tcl/unix])
    TCL_PATH="`echo ${TCL_PATH} | sed 's/\\/\\//\\//g;s/\\//\\\\\\//g'`"
fi
AC_SUBST(TCL_PATH)

dnl configure Tk
if test "x$build_brlcad_tk" = "xyes" ; then
    if test "x$bc_build_aquatk" = "xyes" ; then
	ac_configure_args="$ac_configure_args --enable-aqua --disable-xft"
    fi
    TK_PATH="$PWD/${ac_top_builddir}/src/other/tk/unix"
    ac_configure_args="$ac_configure_args --with-tk=\"$TK_PATH\""
    AC_CONFIG_SUBDIRS([src/other/tk/unix])
    TK_PATH="`echo ${TK_PATH} | sed 's/\\/\\//\\//g;s/\\//\\\\\\//g'`"
fi
AC_SUBST(TK_PATH)

dnl configure enigma
AC_CONFIG_SUBDIRS([misc/enigma])

AC_CONFIG_FILES([
	Makefile
	bench/Makefile
	regress/Makefile
	db/Makefile
	db/include/Makefile
	doc/Makefile
	doc/book/Makefile
	doc/html/Makefile
	doc/html/ReleaseNotes/Makefile
	doc/html/ReleaseNotes/Rel5.0/Makefile
	doc/html/ReleaseNotes/Rel5.0/Summary/Makefile
	doc/html/ReleaseNotes/Rel6.0/Makefile
	doc/html/manuals/Anim_Tutorial/Makefile
	doc/html/manuals/Makefile
	doc/html/manuals/archer/Makefile
	doc/html/manuals/cadwidgets/Makefile
	doc/html/manuals/libbu/Makefile
	doc/html/manuals/libdm/Makefile
	doc/html/manuals/librt/Makefile
	doc/html/manuals/mged/Makefile
	doc/html/manuals/mged/animmate/Makefile
	doc/html/manuals/shaders/Makefile
	doc/legal/Makefile
	doc/pad_file.xml
	include/Makefile
	include/conf/Makefile
	m4/Makefile
	misc/Makefile
	misc/archlinux/Makefile
	misc/archlinux/PKGBUILD
	misc/archlinux/brlcad.install
	misc/archlinux/brlcad.sh
	misc/brlcad-config
	misc/brlcad.spec
	misc/debian/Makefile
	misc/debian/changelog
	misc/macosx/Makefile
	misc/macosx/Resources/Makefile
	misc/macosx/Resources/ReadMe.rtfd/Makefile
	misc/macosx/Resources/Welcome.rtfd/Makefile
	misc/nsis/Makefile
	misc/pkgconfig/Makefile
	misc/pkgconfig/bn.pc
	misc/pkgconfig/brlcad.pc
	misc/pkgconfig/bu.pc
	misc/pkgconfig/dm.pc
	misc/pkgconfig/fb.pc
	misc/pkgconfig/fft.pc
	misc/pkgconfig/multispectral.pc
	misc/pkgconfig/optical.pc
	misc/pkgconfig/pkg.pc
	misc/pkgconfig/rt.pc
	misc/pkgconfig/wdb.pc
	misc/vfont/Makefile
	misc/win32-msvc/Dll/Makefile
	misc/win32-msvc/Makefile
	misc/win32-msvc/aPrep/Makefile
	misc/win32-msvc7/Makefile
	misc/win32-msvc8/Makefile
	pix/Makefile
	sh/Makefile
	src/Makefile
	src/adrt/Makefile
	src/adrt/bench/Makefile
	src/adrt/doc/Makefile
	src/adrt/libcommon/Makefile
	src/adrt/libtexture/Makefile
	src/adrt/libtie/Makefile
	src/adrt/libtienet/Makefile
	src/adrt/libutil/Makefile
	src/adrt/librender/Makefile
	src/adrt/rise/Makefile
	src/adrt/rise/master/Makefile
	src/adrt/rise/observer/Makefile
	src/adrt/rise/slave/Makefile
	src/adrt/isst/Makefile
	src/adrt/isst/master/Makefile
	src/adrt/isst/observer/Makefile
	src/adrt/isst/slave/Makefile
	src/adrt/scripts/Makefile
	src/adrt/misc/Makefile
	src/anim/Makefile
	src/archer/Makefile
	src/archer/plugins/Commands/Makefile
	src/archer/plugins/Core/Makefile
	src/archer/plugins/Makefile
	src/archer/plugins/Utility/Makefile
	src/archer/plugins/Wizards/Makefile
	src/archer/plugins/Wizards/tankwizardIA/Makefile
	src/archer/plugins/Wizards/tankwizardIA/images/Makefile
	src/brlman/Makefile
	src/brlman/awf
	src/brlman/brlman
	src/burst/Makefile
	src/bwish/Makefile
	src/canon/Makefile
	src/conv/Makefile
	src/conv/comgeom/Makefile
	src/conv/iges/Makefile
	src/conv/jack/Makefile
	src/conv/off/Makefile
	src/conv/patch/Makefile
	src/external/Makefile
	src/external/Cubit/Makefile
	src/external/EndgameFramework/Makefile
	src/external/ProEngineer/Makefile
	src/external/ProEngineer/mk
	src/external/ProEngineer/protk.dat
	src/external/Unigraphics/Makefile
	src/fb/Makefile
	src/fbed/Makefile
	src/fbserv/Makefile
	src/gtools/Makefile
	src/gtools/beset/Makefile
	src/halftone/Makefile
	src/irprep/Makefile
	src/java/Makefile
	src/java/mil/Makefile
	src/java/mil/army/Makefile
	src/java/mil/army/arl/Makefile
	src/java/mil/army/arl/brlcad/Makefile
	src/lgt/Makefile
	src/libbn/Makefile
	src/libbu/Makefile
	src/libcursor/Makefile
	src/libdm/Makefile
	src/libfb/Makefile
	src/libfft/Makefile
	src/libmultispectral/Makefile
	src/liboptical/Makefile
	src/liborle/Makefile
	src/libpkg/Makefile
	src/librt/Makefile
	src/librtserver/Makefile
	src/libsysv/Makefile
	src/libtclcad/Makefile
	src/libtermio/Makefile
	src/libwdb/Makefile
	src/mged/Makefile
	src/mged/points/Makefile
	src/mk/Makefile
	src/nirt/Makefile
	src/other/Makefile
	src/other/URToolkit/Makefile
	src/other/URToolkit/cnv/Makefile
	src/other/URToolkit/cnv/rletoabA62/Makefile
	src/other/URToolkit/cnv/rletogif/Makefile
	src/other/URToolkit/man/Makefile
	src/other/URToolkit/tools/Makefile
	src/other/URToolkit/tools/clock/Makefile
	src/other/awf/Makefile
	src/other/blt/Makefile
	src/other/blt/cf/Makefile
	src/other/blt/demos/Makefile
	src/other/blt/demos/bitmaps/Makefile
	src/other/blt/examples/Makefile
	src/other/blt/html/Makefile
	src/other/blt/library/Makefile
	src/other/blt/library/dd_protocols/Makefile
	src/other/blt/library/pkgIndex.tcl
	src/other/blt/man/Makefile
	src/other/blt/src/Makefile
	src/other/blt/win/Makefile
	src/other/incrTcl/Makefile
	src/other/incrTcl/doc/Makefile
	src/other/incrTcl/itcl/Makefile
	src/other/incrTcl/itcl/doc/Makefile
	src/other/incrTcl/itcl/generic/Makefile
	src/other/incrTcl/itcl/library/Makefile
	src/other/incrTcl/itcl/pkgIndex.tcl
	src/other/incrTcl/itk/Makefile
	src/other/incrTcl/itk/doc/Makefile
	src/other/incrTcl/itk/generic/Makefile
	src/other/incrTcl/itk/library/Makefile
	src/other/incrTcl/itk/pkgIndex.tcl
	src/other/incrTcl/tools/Makefile
	src/other/intaval/Makefile
	src/other/iwidgets/Makefile
	src/other/iwidgets/doc/Makefile
	src/other/iwidgets/generic/Makefile
	src/other/iwidgets/iwidgets.tcl
	src/other/iwidgets/pkgIndex.tcl
	src/other/jove/Makefile
	src/other/jove/teach-jove
	src/other/libpng/Makefile
	src/other/libregex/Makefile
	src/other/libtermlib/Makefile
	src/other/libutahrle/Makefile
	src/other/libutahrle/include/Makefile
	src/other/libz/Makefile
	src/other/openNURBS/Makefile
	src/other/tcl/Makefile
	src/other/tk/Makefile
	src/other/tkimg/Makefile
	src/other/tkimg/base/Makefile
	src/other/tkimg/png/Makefile
	src/other/tkimg/pngtcl/Makefile
	src/other/tkimg/zlibtcl/Makefile
	src/other/tnt/Makefile
	src/proc-db/Makefile
	src/remrt/Makefile
	src/rt/Makefile
	src/rttherm/Makefile
	src/sig/Makefile
	src/tab/Makefile
	src/tclscripts/Makefile
	src/tclscripts/archer/Makefile
	src/tclscripts/archer/images/Makefile
	src/tclscripts/archer/images/Themes/Makefile
	src/tclscripts/archer/images/Themes/Crystal/Makefile
	src/tclscripts/archer/images/Themes/Crystal_Large/Makefile
	src/tclscripts/archer/images/Themes/Windows/Makefile
	src/tclscripts/geometree/Makefile
	src/tclscripts/lib/Makefile
	src/tclscripts/mged/Makefile
	src/tclscripts/nirt/Makefile
	src/tclscripts/pl-dm/Makefile
	src/tclscripts/rtwizard/Makefile
	src/tclscripts/rtwizard/examples/Makefile
	src/tclscripts/rtwizard/examples/PictureTypeA/Makefile
	src/tclscripts/rtwizard/examples/PictureTypeB/Makefile
	src/tclscripts/rtwizard/examples/PictureTypeC/Makefile
	src/tclscripts/rtwizard/examples/PictureTypeD/Makefile
	src/tclscripts/rtwizard/examples/PictureTypeE/Makefile
	src/tclscripts/rtwizard/examples/PictureTypeF/Makefile
	src/tclscripts/rtwizard/lib/Makefile
	src/tclscripts/sdialogs/Makefile
	src/tclscripts/sdialogs/scripts/Makefile
	src/tclscripts/swidgets/Makefile
	src/tclscripts/swidgets/images/Makefile
	src/tclscripts/swidgets/scripts/Makefile
	src/tclscripts/util/Makefile
	src/util/Makefile
	src/vas4/Makefile
	src/vdeck/Makefile
])

AC_OUTPUT

# ac_top_builddir and other variables are modified after AC_OUTPUT so
# plan accordingly and save them beforehand.
ac_configure_args="$bc_configure_args"

# patch libtool if it has the -all_load bug
BC_PATCH_LIBTOOL


dnl
dnl Expand the variables for summary reporting
dnl
prefix=`eval "echo $prefix"`
prefix=`eval "echo $prefix"`
bindir=`eval "echo $bindir"`
bindir=`eval "echo $bindir"`
sysconfdir=`eval "echo $sysconfdir"`
sysconfdir=`eval "echo $sysconfdir"`
mandir=`eval "echo $mandir"`
mandir=`eval "echo $mandir"`
datadir=`eval "echo $datadir"`
datadir=`eval "echo $datadir"`

dnl
dnl Compute configuration time elapsed
dnl
if test -x "${srcdir}/sh/elapsed.sh" ; then
	time_elapsed="`${srcdir}/sh/elapsed.sh $CONFIG_TIME`"
else
	time_elapsed="unknown"
fi


# AC_OUTPUT won't update the brlcad_config.h.in template timestamp if
# the file is unchanged.  forcibly update the timestamp so autoheader
# doesn't try to invoke.
if test ! "x`cat include/brlcad_config.h.in`" = "x" ; then
    touch include/brlcad_config.h.in
fi


dnl **********************
dnl *** Report Summary ***
dnl **********************

AC_MSG_RESULT([Done.])
AC_MSG_RESULT([])
BC_BOLD
AC_MSG_RESULT([BRL-CAD Release $BRLCAD_VERSION, Build $CONFIG_DATE])
BC_UNBOLD
AC_MSG_RESULT([])
AC_MSG_RESULT([             Prefix: ${bc_prefix}])
AC_MSG_RESULT([           Binaries: ${bindir}])
AC_MSG_RESULT([       Manual pages: ${mandir}])
AC_MSG_RESULT([Configuration files: ${sysconfdir}])
AC_MSG_RESULT([Data resource files: ${bc_data_dir}])
if test ! "x$BC_ARGS" = "x" ; then
AC_MSG_RESULT([Options & variables: $BC_ARGS])
fi
AC_MSG_RESULT([])
AC_MSG_RESULT([CC       = ${CC}])
AC_MSG_RESULT([CXX      = ${CXX}])
if test ! "x$CFLAGS" = "x" ; then
AC_MSG_RESULT([CFLAGS   = ${CFLAGS}])
fi
if test ! "x$CXXFLAGS" = "x" ; then
AC_MSG_RESULT([CXXFLAGS = ${CXXFLAGS}])
fi
if test ! "x$CPPFLAGS" = "x" ; then
AC_MSG_RESULT([CPPFLAGS = ${CPPFLAGS}])
fi
if test ! "x$LDFLAGS" = "x" ; then
AC_MSG_RESULT([LDFLAGS  = ${LDFLAGS}])
fi
if test ! "x$LIBS" = "x" ; then
AC_MSG_RESULT([LIBS     = ${LIBS}])
fi
AC_MSG_RESULT([])
AC_MSG_RESULT([Build Tcl ............................: $build_brlcad_tcl])
AC_MSG_RESULT([Build Tk .............................: $build_brlcad_tk])
AC_MSG_RESULT([Build Itcl/Itk .......................: $build_brlcad_itcl])
AC_MSG_RESULT([Build IWidgets .......................: $build_brlcad_iwidgets])
AC_MSG_RESULT([Build BLT ............................: $build_brlcad_blt])
AC_MSG_RESULT([Build tkImg ..........................: $build_brlcad_tkimg])
AC_MSG_RESULT([Build libpng .........................: $build_brlcad_png])
AC_MSG_RESULT([Build libregex .......................: $build_brlcad_regex])
AC_MSG_RESULT([Build zlib ...........................: $build_brlcad_zlib])
AC_MSG_RESULT([Build termlib ........................: $build_brlcad_termlib])
AC_MSG_RESULT([Build Utah Raster Toolkit.............: $build_brlcad_urt])
AC_MSG_RESULT([Build Template Numerical Toolkit......: $build_brlcad_tnt])
AC_MSG_RESULT([Build openNURBS.......................: $build_brlcad_opennurbs])
AC_MSG_RESULT([Build jove ...........................: $build_brlcad_jove])
AC_MSG_RESULT([])
AC_MSG_RESULT([ADRT support .........................: $build_brlcad_adrt])
AC_MSG_RESULT([X11 support ..........................: $build_against_x11])
AC_MSG_RESULT([OpenGL support .......................: $build_against_opengl])
AC_MSG_RESULT([Java Developer Kit support ...........: $build_against_java])
AC_MSG_RESULT([Enable run-time debugging ............: $bc_build_runtime_debug])
AC_MSG_RESULT([])
AC_MSG_RESULT([Build 64-bit release .................: $build_brlcad_64bit])
AC_MSG_RESULT([Build optimized release ..............: $bc_use_optimized])
AC_MSG_RESULT([Build debug release ..................: $bc_use_debug])
AC_MSG_RESULT([Build profile release ................: $bc_use_profiling])
AC_MSG_RESULT([Build static libraries ...............: $enable_static])
AC_MSG_RESULT([Build shared/dynamic libraries .......: $enable_shared])
AC_MSG_RESULT([Print verbose compilation warnings ...: $bc_build_warnings])
AC_MSG_RESULT([Print verbose compilation progress ...: $bc_build_progress])
AC_MSG_RESULT([])
AC_MSG_RESULT([Only build benchmark suite ...........: $bc_only_benchmark])
AC_MSG_RESULT([Only build librtserver ...............: $bc_only_rts])
AC_MSG_RESULT([Install example geometry models ......: $bc_install_geometry])
AC_MSG_RESULT([])
if test "x$time_elapsed" != "xunknown" ; then
AC_MSG_RESULT([Elapsed configuration time ...........: $time_elapsed])
fi
AC_MSG_RESULT([---])
AC_MSG_RESULT([$0 complete, type 'make' to begin building])
AC_MSG_RESULT([])

# Local Variables:
# tab-width: 8
# mode: autoconf
# sh-indentation: 4
# sh-basic-offset: 4
# indent-tabs-mode: t
# End:
# ex: shiftwidth=4 tabstop=8
@


14.453
log
@libtclcad needs blt linked
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.452 2007/12/16 22:23:13 brlcad Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.452 $)
d2095 1
@


14.452
log
@remove checks for a slew of headers that seem to have no corresponding HAVE_*_H in use anywhere in our sources.  these include arpa/inet.h, ieeefp.h, itcl.h, itk.h, langinfo.h, malloc.h, netdb.h, socket.h, strings.h, sys/resource.h, sys/statfs.h, sys/timeb.h, utime.h, values.h, waitflags.h, and wchar.h
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.451 2007/12/16 20:13:50 brlcad Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.451 $)
d3647 1
a3647 1
TCLCAD_LIBS="${FB} ${FB_LIBS} ${TK} ${TCLSTUB}"
@


14.451
log
@erm, adrt does use HAVE_GETOPT_LONG, though, so check for getopt_long
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.450 2007/12/16 20:13:09 brlcad Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.450 $)
a1556 1
	arpa/inet.h \
a1562 1
	ieeefp.h \
a1564 3
	itcl.h \
	itk.h \
	langinfo.h \
a1565 1
	malloc.h \
a1567 1
	netdb.h \
a1573 1
	socket.h \
a1574 1
	strings.h \
a1582 1
	sys/resource.h \
a1585 1
	sys/statfs.h \
a1589 1
	sys/timeb.h \
d1606 1
a1606 5
	utime.h \
	values.h \
	waitflags.h \
	wchar.h \
	winsock.h
@


14.450
log
@not using HAVE_GETOPT anywhere, no need to check for getopt
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.449 2007/12/16 15:42:43 brlcad Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.449 $)
d2103 1
@


14.449
log
@remove a slew of function checks that have no corresponding HAVE_* define use in the code reducing configure time by another significant amount.  functions included are: dup2, endgrent, endpwent, finite, fttruncate, getcwd, gethostbyaddr, gethostbyname, getpagesize, getpass, gettimeofday, inet_ntoa, isascii, isfinite, localtime_r, mkdir, mkfifo, munmap, ml_langinfo, panic, prtcl, putenv, re_comp, realpath, rmdir, select, setlinebuf, socket, strcasecmp, strncasecmp, tzset, uname, utime
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.448 2007/12/16 15:14:32 brlcad Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.448 $)
a2102 1
	getopt \
@


14.448
log
@no longer check for bzero, begin conversion to memset
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.447 2007/12/15 21:09:38 brlcad Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.447 $)
a2097 3
	dup2 \
	endgrent \
	endpwent \
a2098 1
	finite \
a2099 2
	ftruncate \
	getcwd \
a2101 2
	gethostbyaddr \
	gethostbyname \
a2103 2
	getpagesize \
	getpass \
a2104 4
	gettimeofday \
	inet_ntoa \
	isascii \
	isfinite \
a2105 1
	localtime_r \
a2108 2
	mkdir \
	mkfifo \
a2109 3
	munmap \
	nl_langinfo \
	panic \
a2110 4
	prtcl \
	putenv \
	re_comp \
	realpath \
a2111 1
	rmdir \
a2112 1
	select \
a2113 1
	setlinebuf \
a2116 1
	socket \
a2117 1
	strcasecmp \
a2119 1
	strncasecmp \
a2124 3
	tzset \
	uname \
	utime\
@


14.447
log
@list the POSIX.1 headers too for good measure
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.446 2007/12/15 20:44:48 brlcad Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.446 $)
a2095 1
	bzero \
@


14.446
log
@comment consistency
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.445 2007/12/15 20:29:23 brlcad Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.445 $)
d1540 12
@


14.445
log
@remove a whole bunch of function checks that can be taken for granted since c89 provides for them.  all of these functions are apparently not even used (any more) via HAVE_ decls regardless.  removing the checks reduces configure time signficantly.  function checks removed include atexit, fabs, floor, memchr, memmove, modf, pow, setlocale, sqrt, strcpy, strcspn, strpbrk, strrchr, strspn, strstr, strtol, strtoul, strtoull
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.444 2007/12/15 20:13:58 brlcad Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.444 $)
d1531 9
a1611 3
# The headers assert.h, ctype.h, errno.h, float.h, limits.h, locale.h, math.h, setjmp.h, signal.h, stdarg.h, stddef.h, stdio.h, stdlib.h, string.h, time.h are part of C89.
# The headers wchar.h, wctype.h, iso646.h were added with C95.
# The headers complex.h, fenv.h, inttypes.h, stdbool.h, stdint.h, and tgmath.h were added with C99.
d2056 1
a2056 1
# c89/posix functions.  this includes:
d2059 1
a2059 1
# specifically checked for even though c89 (provided by libsysv):
d2062 1
a2062 1
# some c89 functions: assert, isalnum, isalpha, iscntrl, isdigit,
@


14.444
log
@get rid of our single use of strerror_r, minimize checks
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.443 2007/12/15 18:03:25 brlcad Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.443 $)
a2077 1
	atexit \
a2083 1
	fabs  \
a2085 1
	floor \
a2105 2
	memchr \
	memmove \
a2109 1
	modf \
a2113 1
	pow \
a2123 1
	setlocale \
a2127 1
	sqrt \
a2130 2
	strcpy \
	strcspn \
a2132 2
	strpbrk \
	strrchr \
a2133 2
	strspn \
	strstr \
a2134 3
	strtol \
	strtoul \
	strtoull \
@


14.443
log
@strdup and strsep don't seem to be c89
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.442 2007/12/15 18:01:56 brlcad Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.442 $)
a2142 1
	strerror_r \
@


14.442
log
@raise() works on windows and is c89, so bye bye
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.441 2007/12/15 16:52:48 brlcad Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.441 $)
d2054 1
a2054 1
#   memset, strchr, strdup, strsep, strtok
@


14.441
log
@don't need to check for getenv(), go c89
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.440 2007/12/15 09:17:57 brlcad Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.440 $)
a2122 1
	raise \
@


14.440
log
@don't need to check for setvbuf and strerror funcs any more
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.439 2007/12/15 07:55:32 brlcad Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.439 $)
a2093 1
	getenv \
@


14.439
log
@comment on the libsysv calls we check for even though they're c89.  don't check calloc()
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.438 2007/12/15 06:22:38 brlcad Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.438 $)
a2136 1
	setvbuf \
a2144 1
	strerror \
@


14.438
log
@include a comprehensive list of c89 functions that I'm aware of that should be a near-complete list of functions we should be able to rely on.  this does NOT include some of the POSIX.1 functions, but it should be a near-complete list otherwise.  functions compiled from the following headers: assert.h ctype.h locale.h math.h setjmp.h signal.h stdarg.h stddef.h stdio.h stdlib.h string.h time.h
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.437 2007/12/15 05:42:27 brlcad Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.437 $)
d2053 3
d2071 1
a2071 1
# strlen, strncat, strncmp, strncpy,strpbrk, strrchr, strspn, strstr,
a2079 1
	calloc \
@


14.437
log
@we don't use ftime()
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.436 2007/12/15 05:39:17 brlcad Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.436 $)
d2049 2
a2050 2
# specifically not checked for but used including any well-behaved c89
# function.  this includes:
d2053 18
@


14.436
log
@no longer using tmpfile_s(), don't check for it
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.435 2007/12/15 05:22:57 brlcad Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.435 $)
a2069 1
	ftime \
@


14.435
log
@libtool on mac chokes on the -bind_at_load, get rid of it
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.434 2007/12/14 20:28:11 brlcad Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.434 $)
a2141 1
	tmpfile_s \
@


14.434
log
@try using the -bind_at_load option on Mac OS X so that undefined symbols are all resolved when the library/app is loaded instead of waiting until first use
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.433 2007/12/09 21:46:20 brlcad Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.433 $)
a1866 4
    dnl resolve all undefined symbols in a library on load/init
    dnl instead of waiting until first use (Mac OS X specific)
    BC_LINKER_RECOGNIZES([-Wl,-bind_at_load])

@


14.433
log
@need to check fo mkstemp() and tmpfile_s() for the new bu_temp_file() interface.
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.432 2007/12/08 23:03:53 brlcad Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.432 $)
d1867 4
@


14.432
log
@don't check for stat().  allow/begin slow and careful dechecking of well-behaved c89 functions.
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.431 2007/12/08 22:57:29 brlcad Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.431 $)
d2096 1
d2142 1
@


14.431
log
@don't check for or use access(), leave a note that it's intentional.  begin a comment about the functions we're specifically assuming are available (the well-behaved ones from c89).
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.430 2007/12/08 22:17:43 brlcad Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.430 $)
d2049 4
a2052 2
# specifically not checked for but used:
#   any well-behaved c89 function
a2120 1
	stat \
@


14.430
log
@check for grp.h, check for geteuid() and getegid() -- used by libbu/stat.c for new file permission functions
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.429 2007/12/05 17:03:34 erikgreenwald Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.429 $)
d2046 6
a2053 1
	access \
@


14.429
log
@AC_DEFINEs for python and SDL
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.428 2007/12/05 05:27:39 brlcad Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.428 $)
d1542 1
d2066 2
@


14.428
log
@let tcl and tk know where they're coming from, and don't cache the results of tclConfig.sh or tkConfig.sh so that Tcl's subconfigure will detect properly itself when we're compiling tcl/tk
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.427 2007/12/04 01:36:14 brlcad Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.427 $)
d1089 1
d1094 2
d3442 1
@


14.427
log
@remove the last traces of stdarg/vararg testing.  c89 conformance provides the stdarg interface.
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.426 2007/12/03 18:47:55 brlcad Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.426 $)
d652 1
a652 1
dnl find tclConfig.sh, add --with-tcl option
d654 1
d656 1
a656 1
dnl find tkConfig.sh, add --with-tk option
d658 1
d1412 2
d1427 1
d3739 2
d3742 1
a3742 4
    TCL_PATH="$PWD/${ac_top_builddir}/src/other/tcl/unix"
    TCL_PATH="`echo $TCL_PATH | sed 's/\\/\\//\\//g;s/\\//\\\\\\//g'`"
    TK_PATH="$PWD/${ac_top_builddir}/src/other/tk/unix"
    TK_PATH="`echo ${TK_PATH} | sed 's/\\/\\//\\//g;s/\\//\\\\\\//g'`"
a3744 1
AC_SUBST(TK_PATH)
d3751 2
d3754 1
d3756 1
@


14.426
log
@disable the new freetype font system in Tk 8.5 for now until they're final -- this should 'fix'/avoid a bug reported by dwayne regarding the mged font manager not working right in 7.10.4
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.425 2007/12/02 22:50:24 brlcad Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.425 $)
a1551 1
	stdarg.h \
a1589 1
	varargs.h \
@


14.425
log
@no longer need the vprintf test, c89 is a given and all usages of HAVE_VPRINTF are gone
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.424 2007/11/27 08:00:35 brlcad Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.424 $)
d3748 1
a3748 1
	ac_configure_args="$ac_configure_args --enable-aqua"
@


14.424
log
@set ITCL_LIB_FILE to something half-sensible (even if we probably can't package require archives)
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.423 2007/11/27 07:50:14 brlcad Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.423 $)
a2129 1
	vprintf \
@


14.423
log
@use the Tcl TEA build infrastructure, namely the tcl.m4 macro set, so we can locate/load the tcl/tkConfig.sh scripts that can in turn be loaded so we get the correct TCL_VERSION
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.422 2007/11/15 22:10:38 brlcad Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.422 $)
a2830 2
# XXX need itcl's configure
#    ITCL_LIB_FILE="libitcl${ITCL_VERSION}.so"
a2836 2
# XXX need itcl's configure
#    ITCL_LIB_FILE="libitcl${ITCL_VERSION}.so"
d2845 4
d2850 1
@


14.422
log
@check for fchmod()
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.421 2007/11/13 17:39:22 erikgreenwald Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.421 $)
d288 3
d652 6
d1779 1
d2604 1
a2605 2

bc_abs_top_builddir="`pwd`"
a2608 7
TCL_VERSION="8.5"
case $host_os in
     *netbsd-*|*freebsd-[[1-3]]*.*|*openbsd*|*sunos4*)
	 # some OS's don't like dots in the lib name
	 TCL_VERSION="`echo ${TCL_VERSION} | tr -d .`"
	 ;;
esac
d2610 1
d2624 5
a2721 7
TK_VERSION="8.5"
case $host_os in
     *netbsd-*|*freebsd-[[1-3]]*.*|*openbsd-[[1-3]]*|*sunos4*)
	 # some OS's don't like dots in the lib name
	 TK_VERSION="`echo ${TK_VERSION} | tr -d .`"
	 ;;
esac
d2723 1
d2734 5
d2831 2
d2839 2
d2849 1
a2849 1

@


14.421
log
@carry the solaris fixes over from STABLE
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.420 2007/11/09 13:25:43 bob1961 Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.420 $)
d2042 1
@


14.420
log
@Added an entry for win32-msvc8
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.419 2007/11/08 21:59:20 erikgreenwald Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.419 $)
d3646 1
a3646 1
PKG_LIBS=
@


14.419
log
@MFC to pick up solaris fix
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.389.2.3 2007/11/08 21:56:45 erikgreenwald Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.418 $)
d3803 1
@


14.418
log
@don't just check whether the option is set to the default -- check if it's been set at all so that you can use --enable-all with --disable options that may be default 'no' already.  ran into this situation trying to disable opennurbs (which was already default off).
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.417 2007/11/07 23:35:59 brlcad Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.417 $)
d3653 1
a3653 1
FB_LIBS="${BU} ${BU_LIBS} ${PKG} ${TCL}" # additional/optional FB_LIBS: ${TK} ${X_LIBS} ${LIBGL}
@


14.417
log
@update the adrt comment, it actually builds fairly cleanly not IF you have the dependencies installed, but still don't force-enable since they are unmanaged external
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.416 2007/11/06 21:43:19 erikgreenwald Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.416 $)
d667 1
a667 1
	if test "x$bc_build_runtime_debug" = "x$bc_build_runtime_debug_default" ; then
d670 1
a670 1
	if test "x$bc_build_regex" = "x$bc_build_regex_default" ; then
d673 1
a673 1
	if test "x$bc_build_png" = "x$bc_build_png_default" ; then
d676 1
a676 1
	if test "x$bc_build_zlib" = "x$bc_build_zlib_default" ; then
d679 1
a679 1
	if test "x$bc_build_urt" = "x$bc_build_urt_default" ; then
d682 1
a682 1
	if test "x$bc_build_opennurbs" = "x$bc_build_opennurbs_default" ; then
d685 1
a685 1
	if test "x$bc_build_termlib" = "x$bc_build_termlib_default" ; then
d688 1
a688 1
	if test "x$bc_build_tcl" = "x$bc_build_tcl_default" ; then
d691 1
a691 1
	if test "x$bc_build_tk" = "x$bc_build_tk_default" ; then
d694 1
a694 1
	if test "x$bc_build_itcl" = "x$bc_build_itcl_default" ; then
d697 1
a697 1
	if test "x$bc_build_iwidgets" = "x$bc_build_iwidgets_default" ; then
d700 1
a700 1
	if test "x$bc_build_blt" = "x$bc_build_blt_default" ; then
d703 1
a703 1
	if test "x$bc_build_tkimg" = "x$bc_build_tkimg_default" ; then
d706 1
a706 1
	if test "x$bc_build_tnt" = "x$bc_build_tnt_default" ; then
d709 1
a709 1
	if test "x$bc_build_jove" = "x$bc_build_jove_default" ; then
d715 1
a715 1
	if test "x$bc_build_ef" = "x$bc_build_ef_default" ; then
d723 1
a723 1
	if test "x$bc_build_ug" = "x$bc_build_ug_default" ; then
d730 1
a730 1
	if test "x$bc_build_adrt" = "x$bc_build_adrt_default" ; then
@


14.416
log
@note that we use (and search for) itcl/itk 3.4
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.415 2007/11/05 14:28:42 brlcad Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.415 $)
d728 2
a729 3
	# ADRT is known to not build right now on most platforms, so
	# only allow it to be disabled and not enabled.
	# User must specify --enable-adrt to get ADRT to build
@


14.415
log
@libpng needs zlib to link (on some platforms)
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.414 2007/10/30 15:27:48 d_rossberg Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.414 $)
d385 3
d1012 4
d1385 9
a1393 5
AC_CHECK_LIB(itcl3.3, Itcl_Init, itcl_link_works=yes ; LIBITCL="-litcl3.3",
    [AC_CHECK_LIB(itcl33, Itcl_Init, itcl_link_works=yes ; LIBITCL="-litcl33",
	[AC_CHECK_LIB(itcl3.2, Itcl_Init, itcl_link_works=yes ; LIBITCL="-litcl3.2",
	    [AC_CHECK_LIB(itcl32, Itcl_Init, itcl_link_works=yes ; LIBITCL="-litcl32",
		[AC_CHECK_LIB(itcl, Itcl_Init, itcl_link_works=yes ; LIBITCL="-litcl")]
d1402 9
a1410 5
AC_CHECK_LIB(itk3.3, Itk_Init, itk_link_works=yes ; LIBITK="-litk3.3",
    [AC_CHECK_LIB(itk33, Itk_Init, itk_link_works=yes ; LIBITK="-litk33",
	[AC_CHECK_LIB(itk3.2, Itk_Init, itk_link_works=yes ; LIBITK="-litk3.2",
	    [AC_CHECK_LIB(itk32, Itk_Init, itk_link_works=yes ; LIBITK="-litk32",
		[AC_CHECK_LIB(itk, Itk_Init, itk_link_works=yes ; LIBITK="-litk")]
d1592 3
d2811 1
a2811 1
ITCL_VERSION=3.3
d3202 9
@


14.414
log
@always set the path to the openNURBS headers (C++)
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.413 2007/10/30 10:16:00 brlcad Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.413 $)
a1268 5
dnl check if a png library links
png_link_works=no
LIBPNG=""
AC_CHECK_LIB(png, png_access_version_number, png_link_works=yes ; LIBPNG="-lpng")

d1276 8
@


14.413
log
@don't make up var names, just comment it out for now.  as more C++ is integrated, it can be made default
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.412 2007/10/30 10:05:58 brlcad Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.412 $)
d2498 1
a2498 1
OPENNURBS_CPPFLAGS=""
a2500 1
    OPENNURBS_CPPFLAGS='-I${top_srcdir}/src/other/openNURBS'
@


14.412
log
@search the opennurbs dir for header files, it's required when compiling c++ sources that use rtgeom.h (which uses brep.h, which requires opennurbs.h)
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.411 2007/10/30 09:51:50 brlcad Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.411 $)
d3488 1
a3488 1
CXXCPPFLAGS ="$CXXCPPFLAGS $OPENNURBS_CPPFLAGS"
@


14.411
log
@intaval/Makefile
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.410 2007/10/30 09:32:31 d_rossberg Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.410 $)
d3486 4
@


14.410
log
@initial checkin of TNO's/IABG's INTAVAL to BRL-CAD converter
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.409 2007/10/29 05:17:24 brlcad Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.409 $)
d3888 1
a3888 1
	src/other/intaval
@


14.409
log
@more RHELness, multispectral needs symbols from optical
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.408 2007/10/29 03:27:52 brlcad Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.408 $)
d3888 1
@


14.408
log
@blt *requires* X11 to function, turn it off if x11 isn't available
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.407 2007/10/26 22:25:27 brlcad Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.407 $)
d3624 1
a3624 1
MULTISPECTRAL_LIBS="${RT} ${RT_LIBS} ${BN} ${BN_LIBS} ${BU} ${BU_LIBS}"
@


14.407
log
@re-enable the checks for tcl8.4, see if we can get both 8.4 and 8.5 working so beta isn't required.
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.406 2007/10/16 13:27:04 brlcad Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.406 $)
d2337 66
d2907 4
d2912 7
a2918 7
     build_brlcad_blt=yes
     BLT='${top_builddir}/src/other/blt/libBLT${BLT_SUFFIX}.la'
     AC_MSG_RESULT(yes)
else
     build_brlcad_blt=no
     BLT=""
     AC_MSG_RESULT(no)
a3299 66
dnl *** X11 interface compilation ***
build_against_x11="no"
if test "x$bc_with_x11" != "xno" ; then
    x11_works=no
    AC_MSG_CHECKING(for X11 header functionality)
    PRELIBS="$LIBS"
    PRECPPFLAGS="$CPPFLAGS"
    CPPFLAGS="$CPPFLAGS $X_CFLAGS"
    AC_TRY_RUN([
#include <X11/Xlib.h>
main() {
    XPoint pt;
    pt.x = pt.y = 0;
    return pt.x;
}
    ],[x11_works=yes])
    AC_MSG_RESULT($x11_works)
    if test "x$x11_works" = "xyes" ; then
	LIBS="$LIBS $X_LIBS"
	AC_MSG_CHECKING(for X11 link functionality)
	AC_TRY_RUN([
#include <X11/Xlib.h>
main() {
    XModifierKeymap *xmkm;
    xmkm=XNewModifiermap(1);
    return xmkm==NULL;
}
	],,x11_works=no)
	AC_MSG_RESULT($x11_works)
    fi
    LIBS="$PRELIBS"
    CPPFLAGS="$PRECPPFLAGS"

    dnl figure out whether we need to build against X11
    if test "x$bc_with_x11" != "xno" ; then
	if test "x$bc_build_aquatk" = "xyes" ; then
	    X_LIBS=""
	    LIBGL=""
	    X_CFLAGS=""
	    build_against_opengl="no"
	    if test "x$bc_with_x11" = "xyes" ; then
		AC_MSG_ERROR([*** X11 was requested, but tk will be built for AquaTk ***])
	    fi
	else
	    if test "x$x11_works" = "xyes" ; then
		build_against_x11="yes"
	    else
		if test "x$bc_with_x11" = "xyes" ; then
		    AC_MSG_NOTICE([X11 was requested, but no system X11 libraries were found])
		    AC_MSG_NOTICE([}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}])
		    AC_MSG_NOTICE([Try adding --without-x11])
		    AC_MSG_ERROR([*** Using X11 was requested, yet no system X11 was found ***])
		else
		    AC_MSG_NOTICE([X11 does not appear to be functionally available])
		fi
	    fi
	fi
    fi
fi
AC_SUBST(X_PREFIX)
AC_SUBST(X_CFLAGS)
AC_SUBST(X_LIBS)
AC_MSG_CHECKING(whether to build against X11)
AC_MSG_RESULT($build_against_x11)


@


14.406
log
@add the new docbook documentation to the dist
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.405 2007/10/02 18:22:37 erikgreenwald Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.405 $)
d1308 5
a1312 1
		[AC_CHECK_LIB(tcl, Tcl_Main, tcl_link_works=yes ; LIBTCL="-ltcl")]
d1325 5
a1329 1
		[AC_CHECK_LIB(tclstub, Tcl_InitStubs, tclstub_link_works=yes ; LIBTCLSTUB="-ltclstub")]
d1342 5
a1346 1
		[AC_CHECK_LIB(tk, Tk_MainLoop, tk_link_works=yes ; LIBTK="-ltk")]
d1361 5
a1365 1
	    	[AC_CHECK_LIB(tkstub, Tk_InitStubs, tkstub_link_works=yes ; LIBTKSTUB="-ltkstub")]
d2477 2
a2478 2
#elif TCL_MAJOR_VERSION == 8 && TCL_MINOR_VERSION < 5
    fprintf(stderr, "minor version < 5\n");
d2592 2
a2593 2
#elif TK_MAJOR_VERSION == 8 && TK_MINOR_VERSION < 5
    fprintf(stderr, "minor version < 5  (it's %d)\n", TK_MINOR_VERSION);
@


14.405
log
@LIBS instead of LDFLAGS to hold library names (thanks to frbrgeorge for spotting this one)
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.404 2007/10/01 03:11:57 brlcad Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.404 $)
d3699 1
@


14.404
log
@subst BLT and TKIMG so they can be used
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.403 2007/09/26 21:18:17 brlcad Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.403 $)
d1119 2
a1120 2
PRELDFLAGS="$LDFLAGS"
LDFLAGS="$LDFLAGS $LIBTHREAD"
d1129 1
a1129 1
LDFLAGS="$PRELDFLAGS"
d2171 2
a2172 2
PRELDFLAGS="$LDFLAGS"
LDFLAGS="$LDFLAGS $LIBPNG"
d2180 1
a2180 1
LDFLAGS="$PRELDFLAGS"
d2223 2
a2224 2
PRELDFLAGS="$LDFLAGS"
LDFLAGS="$LDFLAGS $LIBREGEX"
d2237 1
a2237 1
LDFLAGS="$PRELDFLAGS"
d2275 2
a2276 2
PRELDFLAGS="$LDFLAGS"
LDFLAGS="$LDFLAGS $LIBZLIB"
d2284 1
a2284 1
LDFLAGS="$PRELDFLAGS"
d2383 2
a2384 2
PRELDFLAGS="$LDFLAGS"
LDFLAGS="$LDFLAGS $LIBOPENNURBS $LIBZLIB"
d2394 1
a2394 1
LDFLAGS="$PRELDFLAGS"
d2941 2
a2942 2
PRELDFLAGS="$LDFLAGS"
LDFLAGS="$LDFLAGS $LIBTERMLIB"
d2976 1
a2976 1
LDFLAGS="$PRELDFLAGS"
d3219 1
a3219 1
    PRELDFLAGS="$LDFLAGS"
d3232 1
a3232 1
	LDFLAGS="$LDFLAGS $X_LIBS"
d3244 1
a3244 1
    LDFLAGS="$PRELDFLAGS"
d3285 1
a3285 1
    PRELDFLAGS="$LDFLAGS"
d3287 1
a3287 1
    LDFLAGS="$LDFLAGS $LIBGL"
d3304 1
a3304 1
    LDFLAGS="$PRELDFLAGS"
d3331 2
a3332 2
    PRELDFLAGS="$LDFLAGS"
    LDFLAGS="$LDFLAGS $LIBWGL"
d3348 1
a3348 1
    LDFLAGS="$PRELDFLAGS"
@


14.403
log
@termio apparently needs TERMLIB (need to verify), and don't include the optional FB_LIBS since the Makefile.am takes care of it.  optical does use/need librt; tclcad needs libfb
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.402 2007/09/25 16:34:43 brlcad Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.402 $)
d2834 1
d2857 1
@


14.402
log
@expand BLT_LIBRARY so it can be used in the blt pkgIndex.tcl file, generate the pkgIndex.tcl file and resort the src/other output entries correctly
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.401 2007/09/24 17:48:35 brlcad Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.401 $)
d3594 1
a3594 1
TERMIO_LIBS=
a3596 1
TCLCAD_LIBS="${TK} ${TCLSTUB}"
d3599 3
a3601 2
FB_LIBS="${BU} ${BU_LIBS} ${PKG} ${TCL} ${TK} ${X_LIBS} ${LIBGL}"
OPTICAL_LIBS="${BN} ${BN_LIBS} ${BU} ${BU_LIBS} ${TCL}"
@


14.401
log
@missing the second test command for the WITH_OPENGL conditional, irix shell no likey
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.400 2007/09/17 02:15:11 brlcad Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.400 $)
d2813 1
d2817 1
a2817 1
	 BLT_VERSION="`echo ${BLT_VERSION} | tr -d .`"
d2821 2
a2822 1
BLT_LIBRARY='${prefix}/lib/blt${BLT_VERSION}'
d2827 1
a2827 1
     BLT='${top_builddir}/src/other/blt/libblt${BLT_VERSION}.la'
d3840 12
a3873 2
	src/other/tcl/Makefile
	src/other/tk/Makefile
d3879 2
a3886 11
	src/other/blt/Makefile
	src/other/blt/cf/Makefile
	src/other/blt/demos/Makefile
	src/other/blt/demos/bitmaps/Makefile
	src/other/blt/examples/Makefile
	src/other/blt/html/Makefile
	src/other/blt/library/Makefile
	src/other/blt/library/dd_protocols/Makefile
	src/other/blt/man/Makefile
	src/other/blt/src/Makefile
	src/other/blt/win/Makefile
@


14.400
log
@don't mention the -pg flag now that it checks more than one
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.399 2007/09/17 02:06:25 brlcad Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.399 $)
d3505 1
a3505 1
AM_CONDITIONAL(WITH_OPENGL, [test "x$build_against_opengl" != "xno" && "x$build_against_x11" != "xno"])
@


14.399
log
@add a check for icc's -p gprof profile option
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.398 2007/09/15 16:23:00 brlcad Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.398 $)
d1871 1
a1871 1
			AC_MSG_NOTICE([Profiling was enabled but -pg does not work])
@


14.398
log
@more c89 embracing.  c89 provides string.h for all of the various str*() and mem*() functions, so remove the check for its presence.  there is still likely to be work required for strict c89 conformance for the various bsd strings.h functions that may be in use.
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.397 2007/09/15 03:41:58 brlcad Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.397 $)
d1863 5
@


14.397
log
@no longer need to conditionally check for time.h (or stddef.h) prior to use per c89
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.396 2007/09/15 03:28:39 brlcad Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.396 $)
a1511 1
	string.h \
@


14.396
log
@don't need the define for blt now that it defines what it needs in its own config header
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.395 2007/09/15 03:26:47 brlcad Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.395 $)
a1510 1
	stddef.h \
a1543 1
	time.h \
@


14.395
log
@limits.h, locale.h, setjmp.g, and signal.h now all assumed as well as part of ongoing c89 migration.
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.394 2007/09/14 23:40:38 brlcad Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.394 $)
a1560 2
# needed for blt
AC_DEFINE(HAVE_ERRNO_H, 1, [c89 header])
@


14.394
log
@math.h and float.h are also fair game, c89 baby
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.393 2007/09/14 23:30:42 brlcad Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.393 $)
a1498 2
	limits.h \
	locale.h \
a1507 1
	setjmp.h \
a1508 1
	signal.h \
d1561 2
@


14.393
log
@don't check for errno.h, we can assume at least c89 compliance
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.392 2007/09/14 23:08:52 brlcad Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.392 $)
a1489 1
	float.h \
a1501 1
	math.h \
@


14.392
log
@might as well also list the c89 and c95 headers
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.391 2007/09/14 20:06:49 brlcad Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.391 $)
a1488 1
	errno.h \
a1520 1
	sys/errno.h \
@


14.391
log
@The c89 headers are all fair game since it's been a requirement since the move to ANSI c89 compliance.  So.. remove the HAVE_STDLIB_H checks and just use the header.  The headers <complex.h>, <fenv.h>, <inttypes.h>, <stdbool.h>, <stdint.h>, and <tgmath.h> were added with C99 and still need to be checked.  There are several other c89 headers that we could just use, though, that are still being checked.
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.390 2007/09/14 15:20:51 erikgreenwald Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.390 $)
d1565 3
a1567 1
# The headers <complex.h>, <fenv.h>, <inttypes.h>, <stdbool.h>, <stdint.h>, and <tgmath.h> were added with C99.
@


14.390
log
@removed trailing whitespace
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.389 2007/09/13 13:48:11 brlcad Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.389 $)
a1519 1
	stdlib.h \
d1565 2
@


14.389
log
@automake has a braindead auto-inclusion of ChangeLog files that is causing make distcheck to fail when trying to include the debian 'changelog' file.  avoid the whole issue and make the file more generalized (auto-sets the version and time now) by turning it into an autoconf template instead.
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.388 2007/09/11 19:26:06 erikgreenwald Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.388 $)
d1220 1
a1220 1
	if test "x$x_includes" = "xNONE"; then 
d1224 1
a1224 1
	if test "x$x_libraries" = "xNONE"; then 
d1468 1
a1468 1
	 LIBS="$LIBS $LIBM" 
d2574 1
a2574 1
    ATTEMPT(Tk_ParseArgv(interp, NULL, &argl, arg, argtbl, 
d2769 1
a2769 1
    res = Tcl_Eval(interp, cmd); 
@


14.389.2.1
log
@partial merge from head for the xno fix
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.389 2007/09/13 13:48:11 brlcad Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.389 $)
d3508 1
a3508 1
AM_CONDITIONAL(WITH_OPENGL, [test "x$build_against_opengl" != "xno" && test "x$build_against_x11" != "xno"])
@


14.389.2.2
log
@more merging from HEAD.  bring in build system tweakage updates that should fix some library symbol problems from croping up post-release.
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.389.2.1 2007/09/28 09:59:37 brlcad Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.389.2.1 $)
a1870 5
		# intel gprof compiler flag
		BC_COMPILER_AND_LINKER_RECOGNIZES([-p], [profile_flag])
	fi

	if test "x$bc_profile_flag_works" = "xno" ; then
d1874 1
a1874 1
			AC_MSG_NOTICE([Profiling was enabled but could not find a profile flag])
a2815 1
BLT_SUFFIX="`echo ${BLT_VERSION} | tr -d .`"
d2819 1
a2819 1
	 BLT_VERSION=$BLT_SUFFIX
d2823 1
a2823 2
AC_SUBST(BLT_SUFFIX)
BLT_LIBRARY="${BRLCAD_ROOT}/lib/blt${BLT_VERSION}"
d2828 1
a2828 1
     BLT='${top_builddir}/src/other/blt/libBLT${BLT_SUFFIX}.la'
d3595 1
a3595 1
TERMIO_LIBS="${TERMLIB}"
d3598 1
d3601 2
a3602 3
FB_LIBS="${BU} ${BU_LIBS} ${PKG} ${TCL}" # additional/optional FB_LIBS: ${TK} ${X_LIBS} ${LIBGL}
TCLCAD_LIBS="${FB} ${FB_LIBS} ${TK} ${TCLSTUB}"
OPTICAL_LIBS="${RT} ${RT_LIBS} ${BN} ${BN_LIBS} ${BU} ${BU_LIBS} ${TCL}"
@


14.389.2.3
log
@libfb needs libsocket and libnsl on solaris
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.389.2.2 2007/09/28 14:04:31 brlcad Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.389.2.2 $)
d3607 1
a3607 1
FB_LIBS="${BU} ${BU_LIBS} ${PKG} ${TCL} ${SOCKET} ${NSL}" # additional/optional FB_LIBS: ${TK} ${X_LIBS} ${LIBGL}
@


14.389.2.4
log
@move socket and nsl lib stuff to PKG_LIBS (fix for solaris)
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.389.2.3 2007/11/08 21:56:45 erikgreenwald Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.389.2.3 $)
d3600 1
a3600 1
PKG_LIBS="${LIBSOCKET} ${LIBNSL}"
d3607 1
a3607 1
FB_LIBS="${BU} ${BU_LIBS} ${PKG} ${TCL}" # additional/optional FB_LIBS: ${TK} ${X_LIBS} ${LIBGL}
@


14.388
log
@WITH_OPENGL actually means GLX, so don't enable if X is not enabled
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.387 2007/09/06 21:23:44 erikgreenwald Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.387 $)
d123 1
d129 2
d3726 1
@


14.387
log
@completely untested guts of debian package building
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.386 2007/08/28 10:14:11 brlcad Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.386 $)
d3505 1
a3505 1
AM_CONDITIONAL(WITH_OPENGL, [test "x$build_against_opengl" != "xno"])
@


14.386
log
@use AC_LANG_PUSH, AC_LANG_POP for going into/out of C++ testing mode
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.385 2007/08/27 20:19:33 erikgreenwald Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.385 $)
d3722 1
@


14.385
log
@This was not the fix for OpenBSD. Without it, OBSD4.1 seems to work just fine.
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.384 2007/08/27 19:20:43 erikgreenwald Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.384 $)
d2860 1
a2860 2
SAVED_CC="$CC"
CC="$CXX"
d2876 1
a2876 1
CC="$SAVED_CC"
@


14.384
log
@use the C++ compiler to test for the TNT/JAMA header
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.383 2007/08/24 14:10:29 erikgreenwald Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.383 $)
d2500 1
a2500 1
     *netbsd-*|*freebsd-[[1-3]]*.*|*openbsd-[[1-3]]*|*sunos4*)
@


14.383
log
@The test for Tk failued for me on several platforms with no valid
DISPLAY set (perhaps due to an X server running and just assuming
unsetting display will do it? or perhaps tcl84, which worked...
*shrug*). Changed the Tk_GetScrollInfo() to Tk_ParseArgv with the
supporting framework and this seems to work consistantly for me.
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.382 2007/08/19 09:22:25 brlcad Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.382 $)
d2860 2
d2877 1
@


14.382
log
@improve the libtk functionality test with the help of ertugerata (thx!) so that it no longer uses Tk_Init() (which had the unfortunate side-effect of attempting to talk to an X11 server and wanting DISPLAY to be set).  instead, it now uses Tk_GetScrollInfo which basically just parses a number out of a string.
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.381 2007/08/16 06:11:55 brlcad Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.381 $)
d2559 4
d2566 1
a2566 1
    double t = 0.0;
d2568 5
a2572 13
    if (Tcl_Init(interp) == TCL_ERROR) {
	fprintf(stderr, "Tcl_Init returned error\n");
	return 1;
    }
    if (Tk_GetScrollInfo(interp, 4, arg, &t, NULL) == TK_SCROLL_ERROR) {
	fprintf(stderr, "Tk_GetScrollInfo returned an error: %s\n", interp->result);
	return 2;
    }
    if (t != 1.0) {
	fprintf(stderr, "Tk_GetScrollInfo returned an unexpected value: %f\n", t);
	return 3;
    }

@


14.381
log
@remove the old enable arg for proe since the with arg is used instead
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.380 2007/08/15 16:56:53 erikgreenwald Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.380 $)
d2561 2
d2568 7
a2574 3
    if (Tk_Init(interp) == TCL_ERROR) {
	fprintf(stderr, "Tk_Init returned error\n");
	return 1;
d2578 2
a2579 2
    fprintf(stderr, "major version < 8\n");
    return 1;
d2581 2
a2582 2
    fprintf(stderr, "minor version < 5\n");
    return 1;
@


14.380
log
@removed vestigial crud
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.379 2007/08/07 21:14:54 erikgreenwald Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.379 $)
a363 3
# pro/e plugin
#BC_ARG_ENABLE([build_proe], [proe-build], [Enable compilation of Pro/Engineer plugin], [no])

a563 7
# pro/e plugin aliases (help uses proe-build)
#BC_ARG_ALIAS([build_proe], [proe])
#BC_ARG_ALIAS([build_proe], [proengineer])
#BC_ARG_ALIAS([build_proe], [proengineer-build])
#BC_ARG_ALIAS([build_proe], [pro-engineer])
#BC_ARG_ALIAS([build_proe], [pro-engineer-build])

a713 8
	# Since the Pro/E plugin is primarily tested on only one
	# platform and requires Pro/Toolkit, don't enable it even if
	# requesting everything.  fine to disable, though.
#	if test "x$bc_build_proe" = "x$bc_build_proe_default" ; then
#		if test "x$set_everything" = "xno" ; then
#			bc_build_proe=no
#		fi
#	fi
a874 3
#AC_MSG_CHECKING(whether to compile the Pro-Engineer plugin)
#AC_MSG_RESULT($bc_build_proe)

a1470 9
dnl check for Pro/ENGINEER
PRO_ENGINEER_DIR=
if test "x$bc_with_proe" = "xyes" ; then
   if test "x$bc_with_java_val" != "x" ; then
      PRO_ENGINEER_DIR=$bc_with_java_val
   fi
fi
AC_SUBST(PRO_ENGINEER_DIR)

d3173 1
d3183 1
a3184 1
	    AC_MSG_RESULT(no)
a3188 1
	    AC_MSG_RESULT(no)
a3193 1
	 AC_MSG_RESULT(no)
a3495 1
#AM_CONDITIONAL(BUILD_PROE, [test "x$bc_build_proe" = "xyes"])
d3507 1
a3511 1
AM_CONDITIONAL(WITH_PROE, [test "x$build_against_proe" != "xno"])
@


14.379
log
@Several fixes for the Iwidgets test: link itcl, initialize tcl before itcl, and search the 'package names' even if the 'package require' claims to have failed (TK version issue caused require to report failure, but actually succeed).
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.378 2007/08/07 20:02:20 erikgreenwald Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.378 $)
a3851 1
	src/mged/dm_old/Makefile
@


14.378
log
@assume OpenBSD 4+ can deal with dots in the .so name
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.377 2007/08/06 19:11:17 brlcad Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.377 $)
d2772 1
a2772 1
    LIBS="$LIBS $LIBTCL"
d2781 1
d2784 1
d2786 4
d2791 1
d2794 9
a2802 2
    if (Tcl_Eval(interp, cmd) != TCL_OK) {
	return 1;
@


14.377
log
@turn off opennurbs for now by default until work is more active again.  opennurbs needs libz apparently, so include that as well as a dep.
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.376 2007/08/02 01:32:43 brlcad Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.376 $)
d2530 1
a2530 1
     *netbsd-*|*freebsd-[[1-3]]*.*|*openbsd*|*sunos4*)
d2642 1
a2642 1
     *netbsd-*|*freebsd-[[1-3]]*.*|*openbsd*|*sunos4*)
d2739 1
a2739 1
     *netbsd-*|*freebsd-[[1-3]]*.*|*openbsd*|*sunos4*)
d2828 1
a2828 1
     *netbsd-*|*freebsd-[[1-3]]*.*|*openbsd*|*sunos4*)
d2852 1
a2852 1
     *netbsd-*|*freebsd-[[1-3]]*.*|*openbsd*|*sunos4*)
@


14.376
log
@remove the 'automatic flags' configure option (royal pita to keep track of cleanly in the configure logic for trivial gain) for now; rename the aquatk configure option to be consistent with the others and make it actually pass that on to tk's configure; and add a proper JavaVM framework check, using it instead of a platform test.
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.375 2007/07/31 07:47:28 brlcad Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.375 $)
d329 1
a329 1
BC_ARG_ENABLE([build_opennurbs], [opennurbs-build], [Build the included openNURBS library], [auto])
d2414 1
a2414 1
LDFLAGS="$LDFLAGS $LIBOPENNURBS"
d2452 1
a2452 1
    OPENNURBS="$LIBOPENNURBS $LIBSTDCXX"	# produces " " if we're not using OpenNURBS
d3527 2
a3528 2
### the echo is to remove leading or trailing whitespace.
AM_CONDITIONAL(WITH_OPENNURBS, [test "`echo x$OPENNURBS`" != "x"])
@


14.375
log
@move the sanity check to a BC_SANITY_CHECK macro
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.374 2007/07/31 07:29:32 brlcad Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.374 $)
a303 3
# automatic flag updates
BC_ARG_ENABLE([auto_flags], [automatic-flags], [Automatically configure build flags], [yes])

d340 2
a341 1
BC_ARG_ENABLE([tk_aqua], [aqua], [Use Aqua windowing system on Mac OS X], [no])
a438 5
# aliases for allowing configure to modify the flags automatically (help uses automatic-flags)
BC_ARG_ALIAS([auto_flags], [auto-flags])
BC_ARG_ALIAS([auto_flags], [auto-flag])
BC_ARG_ALIAS([auto_flags], [automatic-flag])

d508 8
a832 3
AC_MSG_CHECKING(whether to automatically set build flags)
AC_MSG_RESULT($bc_auto_flags)

d866 2
a867 2
AC_MSG_CHECKING(whether to use Aqua windowing system in the built Tk library)
AC_MSG_RESULT($bc_tk_aqua)
d1162 1
d1184 33
a1491 20
dnl check for java
JAVA_CFLAGS=
JAVA_LDFLAGS=
if test "x$bc_with_java" = "xyes" ; then
    if test "x$bc_with_java_val" != "x" ; then
	JAVA_CFLAGS="-I$bc_with_java_val/include -I$bc_with_java_val/include/`uname | tr [A-Z] [a-z]`"
    fi
fi
# XXX this should go away and become proper library or compiler option checks
if test ! "x$bc_auto_flags" = "xno" ; then
    case "$target" in
	*-*-darwin*)
		JAVA_CFLAGS="-framework JavaVM"
		JAVA_LDFLAGS="-shrext .jnilib -framework JavaVM"
		;;
    esac
fi
AC_SUBST(JAVA_CFLAGS)
AC_SUBST(JAVA_LDFLAGS)

d1809 1
a1809 1
if test ! "x$bc_auto_flags" = "xno" ; then
d1944 7
a1950 11
	# don't set extra optimization flags if auto-flags was turned off
	if test ! "x$bc_auto_flags" = "xno" ; then
		if test "x$bc_mac_opt_flag_works" = "xno" ; then
			extra_optimization_flag="-ffast-math -fstrength-reduce -fexpensive-optimizations -finline-functions"
			if test "x$bc_use_debug" = "xno" ; then
				dnl non-debug can omit the frame pointer, debug cannot
				extra_optimization_flag="$extra_optimization_flag -fomit-frame-pointer"
			else
				extra_optimization_flag="$extra_optimization_flag -fno-omit-frame-pointer"
			fi
			BC_COMPILER_AND_LINKER_RECOGNIZES([$extra_optimization_flag])
d1952 1
d2653 1
a2653 1
    if test "x$bc_tk_aqua" = "xyes" ; then
d3223 66
a3377 66
dnl *** X11 interface compilation ***
build_against_x11="no"
if test "x$bc_with_x11" != "xno" ; then
    x11_works=no
    AC_MSG_CHECKING(for X11 header functionality)
    PRELDFLAGS="$LDFLAGS"
    PRECPPFLAGS="$CPPFLAGS"
    CPPFLAGS="$CPPFLAGS $X_CFLAGS"
    AC_TRY_RUN([
#include <X11/Xlib.h>
main() {
    XPoint pt;
    pt.x = pt.y = 0;
    return pt.x;
}
    ],[x11_works=yes])
    AC_MSG_RESULT($x11_works)
    if test "x$x11_works" = "xyes" ; then
	LDFLAGS="$LDFLAGS $X_LIBS"
	AC_MSG_CHECKING(for X11 link functionality)
	AC_TRY_RUN([
#include <X11/Xlib.h>
main() {
    XModifierKeymap *xmkm;
    xmkm=XNewModifiermap(1);
    return xmkm==NULL;
}
	],,x11_works=no)
	AC_MSG_RESULT($x11_works)
    fi
    LDFLAGS="$PRELDFLAGS"
    CPPFLAGS="$PRECPPFLAGS"

    dnl figure out whether we need to build against X11
    if test "x$bc_with_x11" != "xno" ; then
	if test "x$bc_tk_aqua" = "xyes" ; then
	    X_LIBS=""
	    LIBGL=""
	    X_CFLAGS=""
	    build_against_opengl="no"
	    if test "x$bc_with_x11" = "xyes" ; then
		AC_MSG_ERROR([*** X11 was requested, but tk is/will be built for aqua ***])
	    fi
	else
	    if test "x$x11_works" = "xyes" ; then
		build_against_x11="yes"
	    else
		if test "x$bc_with_x11" = "xyes" ; then
		    AC_MSG_NOTICE([X11 was requested, but no system X11 libraries were found])
		    AC_MSG_NOTICE([}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}])
		    AC_MSG_NOTICE([Try adding --without-x11])
		    AC_MSG_ERROR([*** Using X11 was requested, yet no system X11 was found ***])
		else
		    AC_MSG_NOTICE([X11 does not appear to be functionally available])
		fi
	    fi
	fi
    fi
fi
AC_SUBST(X_PREFIX)
AC_SUBST(X_CFLAGS)
AC_SUBST(X_LIBS)
AC_MSG_CHECKING(whether to build against X11)
AC_MSG_RESULT($build_against_x11)


d3675 1
a3675 1
dnl configure Tcl
d3679 2
a3687 1

d3693 3
@


14.374
log
@turn the libtool chunk that patches libtool if it has the -all_load bug on Mac OS X into an m4 macro, BC_PATCH_LIBTOOL
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.373 2007/07/31 06:30:22 brlcad Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.373 $)
d2003 1
a2003 12
AC_MSG_CHECKING(compiler and flags for sanity)
AC_TRY_RUN([
#include <stdio.h>
int main(){exit(0);}
	],
	[	AC_MSG_RESULT(yes) ],
	[
		AC_MSG_RESULT(no)
		AC_MSG_NOTICE([}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}])
		AC_MSG_ERROR([*** compiler cannot create working executables, check config.log ***])
	]
)
@


14.373
log
@minor dead code
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.372 2007/07/31 04:50:18 brlcad Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.372 $)
a3934 2
ac_configure_args="$bc_configure_args"

d3937 1
d3939 2
a3940 31

#################
# patch libtool #
#################
case $host_os in
    darwin*)
	for script in $ac_top_builddir $ac_abs_builddir $ac_builddir . ; do
	    if test "x$script" = "x" ; then
		libtoolscript="libtool"
	    else
		libtoolscript="${script}/libtool"
	    fi
	    if test -f ${libtoolscript} ; then
		if test -w ${libtoolscript} ; then
		    # remove any -all_load option.
		    # provokes libtool linker bug with noinst libraries.
		    sed 's/-all_load.*convenience//g' < $libtoolscript > ${libtoolscript}.sed
		    sed "s/temp_rpath=\$/temp_rpath=$TCL_PATH:$TK_PATH/g" < $libtoolscript.sed > ${libtoolscript}.sed2
		    if test ! "x`cat ${libtoolscript}`" = "x`cat ${libtoolscript}.sed2`" ; then
			AC_MSG_RESULT([Found -all_load in libtool script, removing])
			cp ${libtoolscript}.sed2 ${libtoolscript}
		    fi
		    rm -f ${libtoolscript}.sed
		    rm -f ${libtoolscript}.sed2
		else
		    AC_MSG_WARN([libtool script exists but is not writable so not attempting to edit])
		fi
	    fi
	done
	;;
esac
d3954 2
@


14.372
log
@autogen.sh no longer creates .backup files in an aux directory, so there's nothing for us to automatically recover from.  this means subsequent clobbering automakes may blow away our files, but there's not much we can do about it.
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.371 2007/07/25 19:57:12 erikgreenwald Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.371 $)
a117 4
# save the command-line in case there's a need to restart
this="$0"
args="$*"

@


14.371
log
@de-recurse this bit of the build tree
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.370 2007/07/10 16:50:19 brlcad Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.370 $)
a288 5
# a secondary automated automake may blow away COPYING & INSTALL due
# to an automake bug in older versions, so restore those files if
# needed.
BC_RESTORE_CLOBBERED([COPYING INSTALL], [misc])

@


14.370
log
@if libstdc++ fails to link, see if it's because of libm (encountered by Laniakea on OpenBSD)
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.369 2007/06/30 21:32:28 brlcad Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.369 $)
a3764 47
	misc/win32-msvc7/all/Makefile
	misc/win32-msvc7/asc2g/Makefile
	misc/win32-msvc7/brlcad/Makefile
	misc/win32-msvc7/dbupgrade/Makefile
	misc/win32-msvc7/fast42g/Makefile
	misc/win32-msvc7/fb2pix/Makefile
	misc/win32-msvc7/fb2png/Makefile
	misc/win32-msvc7/fbclear/Makefile
	misc/win32-msvc7/fbserv/Makefile
	misc/win32-msvc7/g2asc/Makefile
	misc/win32-msvc7/g2iges/Makefile
	misc/win32-msvc7/g2stl/Makefile
	misc/win32-msvc7/iges2g/Makefile
	misc/win32-msvc7/itclstub/Makefile
	misc/win32-msvc7/itkstub/Makefile
	misc/win32-msvc7/libBLT/Makefile
	misc/win32-msvc7/libbn/Makefile
	misc/win32-msvc7/libbu/Makefile
	misc/win32-msvc7/libdm/Makefile
	misc/win32-msvc7/libfb/Makefile
	misc/win32-msvc7/libItcl/Makefile
	misc/win32-msvc7/libItk/Makefile
	misc/win32-msvc7/liboptical/Makefile
	misc/win32-msvc7/libpkg/Makefile
	misc/win32-msvc7/libpng/Makefile
	misc/win32-msvc7/librt/Makefile
	misc/win32-msvc7/libsysv/Makefile
	misc/win32-msvc7/libtcl/Makefile
	misc/win32-msvc7/libtclcad/Makefile
	misc/win32-msvc7/libtk/Makefile
	misc/win32-msvc7/libwdb/Makefile
	misc/win32-msvc7/libz/Makefile
	misc/win32-msvc7/mged/Makefile
	misc/win32-msvc7/nirt/Makefile
	misc/win32-msvc7/pix2fb/Makefile
	misc/win32-msvc7/png2fb/Makefile
	misc/win32-msvc7/rt/Makefile
	misc/win32-msvc7/rtcheck/Makefile
	misc/win32-msvc7/rtedge/Makefile
	misc/win32-msvc7/stl2g/Makefile
	misc/win32-msvc7/tclpipe/Makefile
	misc/win32-msvc7/tclsh/Makefile
	misc/win32-msvc7/tclstub/Makefile
	misc/win32-msvc7/tkimg/Makefile
	misc/win32-msvc7/tkimgpng/Makefile
	misc/win32-msvc7/tkstub/Makefile
	misc/win32-msvc7/wish/Makefile
@


14.369
log
@include the configure flags in the summary report, remove surrounding whitespace on the FLAGS variables and only print them if they're not empty
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.368 2007/06/29 04:22:59 brlcad Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.368 $)
d1461 7
a1467 1
AC_CHECK_LIB(stdc++, main, stdcxx_link_works=yes ; LIBSTDCXX="-lstdc++")
@


14.368
log
@finally rip out the retry code -- causes too many headaches and confusion when the retry also fails since it has the tendency to hide the original real problem.
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.367 2007/06/28 13:04:22 brlcad Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.367 $)
d102 6
d3478 1
a3478 1
CPPFLAGS="$CPPFLAGS -DBRLCADBUILD=1 -I\$(top_srcdir)/include"
d3495 7
d3670 1
a3670 1
SAMPLE_APPLICATIONS_DIR='$(BRLCAD_DATA)/sample_applications'
d4052 1
d4068 3
d4074 1
d4076 2
d4079 2
d4082 2
d4085 2
d4088 1
@


14.367
log
@include BRLCAD and BRLCAD_LIBS for libbrlcad
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.366 2007/06/28 06:41:45 brlcad Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.366 $)
a398 2
# restart configure when a wall is hit
BC_ARG_ENABLE([configure_retry], [retry], [Enable automatic configure retry], [yes])
a654 6
dnl search several additional locations if configure happens to fail
dnl to find a required component
BC_RETRY_DIRECTORY([/usr/freeware], [freeware])
BC_RETRY_DIRECTORY([/opt])
BC_RETRY_DIRECTORY([/sw], [fink])

a927 3
AC_MSG_CHECKING(whether to retry configuration after failure)
AC_MSG_RESULT($bc_configure_retry)

a1086 1
			BC_RETRY_CONFIGURE([$this], [$args])
a2219 1
	    BC_RETRY_CONFIGURE([$this], [$args])
a2276 1
	    BC_RETRY_CONFIGURE([$this], [$args])
a2323 1
	    BC_RETRY_CONFIGURE([$this], [$args])
a2379 1
	    BC_RETRY_CONFIGURE([$this], [$args])
a2509 1
	    BC_RETRY_CONFIGURE([$this], [$args])
a2623 1
	    BC_RETRY_CONFIGURE([$this], [$args])
a2717 1
	    BC_RETRY_CONFIGURE([$this], [$args])
a2804 1
	    BC_RETRY_CONFIGURE([$this], [$args])
a2897 1
	    BC_RETRY_CONFIGURE([$this], [$args])
a2993 1
	    BC_RETRY_CONFIGURE([$this], [$args])
a3159 1
	    BC_RETRY_CONFIGURE([$this], [$args])
a3166 1
	    BC_RETRY_CONFIGURE([$this], [$args])
a3255 1
	    BC_RETRY_CONFIGURE([$this], [$args])
a3298 1
	    BC_RETRY_CONFIGURE([$this], [$args])
a3358 1
		    BC_RETRY_CONFIGURE([$this], [$args])
a3425 1
	BC_RETRY_CONFIGURE([$this], [$args])
a3430 1
	BC_RETRY_CONFIGURE([$this], [$args])
@


14.366
log
@additional library dependencies that aren't spelled out .. results in really long/redundant link lines for some binaries, but should be comprehensive for each library by itself.
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.365 2007/06/28 06:06:29 brlcad Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.365 $)
d3622 1
d3639 1
d3656 1
d3673 1
@


14.365
log
@wow, needs libfb too (e.g., for X24_interface in dm_obj.c)
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.364 2007/06/28 06:01:53 brlcad Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.364 $)
a3622 9
BN_LIBS="${BU} ${TCL} ${LIBM}"
BU_LIBS="${TCL} ${PNG} ${LIBM} ${LIBMALLOC} ${LIBTHREAD}"
CURSOR_LIBS="${TERMLIB}"
RT_LIBS="${REGEX} ${LIBM} ${SYSV} ${OPENNURBS} ${BU}"
DM_LIBS="${RT} ${RT_LIBS} ${FB} ${FB_LIBS} ${PNG} ${TK} ${X_LIBS} ${FRAMEWORK_CARBON}"
FB_LIBS="${BU} ${PKG} ${TCL} ${TK} ${X_LIBS} ${LIBGL}"
FFT_LIBS="${LIBM}"
MULTISPECTRAL_LIBS="${RT} ${BN} ${BU}"
OPTICAL_LIBS="${TCL}"
d3626 3
d3630 8
a3637 2
TERMIO_LIBS=
WDB_LIBS="${RT} ${BN} ${BU}"
@


14.364
log
@libdm actually presently uses librt, so make sure it's listed as a libs dependency.  add the carbon framework when we're on os x for the new application focus routine.
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.363 2007/06/27 07:57:31 brlcad Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.363 $)
d3627 1
a3627 1
DM_LIBS="${RT} ${RT_LIBS} ${PNG} ${TK} ${X_LIBS} ${FRAMEWORK_CARBON}"
@


14.363
log
@remove interp->result check
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.362 2007/06/22 07:48:03 brlcad Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.362 $)
d3626 2
a3627 1
DM_LIBS="${PNG} ${TK} ${X_LIBS} "
a3633 1
RT_LIBS="${REGEX} ${LIBM} ${SYSV} ${OPENNURBS} ${BU}"
@


14.362
log
@check for -framework Carbon and the Carbon.h header so we can utilize Carbon framework API calls on Mac OS X, being used to bring X11.app to the focus automatically for X11 apps (useful for icon/script invocation and running from Terminal).
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.361 2007/06/21 20:28:06 poolio Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.361 $)
d2805 1
a2805 1
    if (Tcl_Eval(interp, cmd) != TCL_OK || interp->result[0] == '\0') {
@


14.361
log
@updated build files for beset
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.360 2007/06/20 13:36:04 brlcad Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.360 $)
d1180 21
d1509 1
@


14.360
log
@if we're building with cygwin, tk wants access to headers in the tk/win directory, so add it to the cppflags header search paths
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.359 2007/05/31 13:42:09 erikgreenwald Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.359 $)
d3850 1
@


14.359
log
@cope with alloca issue in openNURBS
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.358 2007/05/31 02:33:30 brlcad Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.358 $)
d2647 1
a2647 1
    TK_CPPFLAGS='-I${top_srcdir}/src/other/tk/generic -I${top_srcdir}/src/other/tk/unix'
@


14.358
log
@another big aliasing restructure for consistency.  includes removing some of the more gratuitous/verbose aliases as well as more consistently using -install for the three (iwidgets, tnt, models) that aren't actually 'compiled'.  should match the new INSTALL docs.
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.357 2007/05/26 20:58:19 brlcad Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.357 $)
d1089 2
@


14.357
log
@force the tk interface off for now, there are still many issues to resolve -- particularly crashes under os x
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.356 2007/05/25 05:24:09 brlcad Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.356 $)
d296 4
d352 1
a352 1
BC_ARG_ENABLE([build_iwidgets], [iwidgets-build], [Install the included iwidgets], [auto])
d361 1
a361 1
BC_ARG_ENABLE([build_tnt], [tnt-build], [Build the included Template Numerical Toolkit], [auto])
d370 1
a370 1
#BC_ARG_ENABLE([build_proe], [proe-plugin-build], [Enable compilation of Pro/Engineer plugin], [no])
d415 1
a415 1
BC_ARG_WITH([with_opengl], [opengl], [Specify use of or path to OpenGL], [auto])
d432 3
a434 1
# blank line that it inserts to exactly one line in the right place
d471 1
d473 1
a473 1
BC_ARG_ALIAS([build_64bit], [64bit])
a474 1
BC_ARG_ALIAS([build_64bit], [64-build])
d495 1
a495 2
BC_ARG_ALIAS([build_urt], [rle])
BC_ARG_ALIAS([build_urt], [utah])
d497 1
a497 2
BC_ARG_ALIAS([build_urt], [libutah])
BC_ARG_ALIAS([build_urt], [librle])
d499 1
a499 1
BC_ARG_ALIAS([build_urt], [utahrastertoolkit])
a500 8
BC_ARG_ALIAS([build_urt], [urtoolkit-build])
BC_ARG_ALIAS([build_urt], [rle-build])
BC_ARG_ALIAS([build_urt], [utah-build])
BC_ARG_ALIAS([build_urt], [utahrle-build])
BC_ARG_ALIAS([build_urt], [libutah-build])
BC_ARG_ALIAS([build_urt], [librle-build])
BC_ARG_ALIAS([build_urt], [libutahrle-build])
BC_ARG_ALIAS([build_urt], [utahrastertoolkit-build])
d504 1
d506 1
a506 2
BC_ARG_ALIAS([build_opennurbs], [libopenurbs])
BC_ARG_ALIAS([build_opennurbs], [libnurbs])
a507 5
BC_ARG_ALIAS([build_opennurbs], [openurbs])
BC_ARG_ALIAS([build_opennurbs], [nurbs])
BC_ARG_ALIAS([build_opennurbs], [libopennurbs-build])
BC_ARG_ALIAS([build_opennurbs], [libopenurbs-build])
BC_ARG_ALIAS([build_opennurbs], [libnurbs-build])
a508 2
BC_ARG_ALIAS([build_opennurbs], [openurbs-build])
BC_ARG_ALIAS([build_opennurbs], [nurbs-build])
d523 1
d525 1
d527 1
a528 3
BC_ARG_ALIAS([build_itcl], [itk-build])
BC_ARG_ALIAS([build_itcl], [libitcl-build])
BC_ARG_ALIAS([build_itcl], [libitk-build])
d531 1
a531 1
# aliases to force building iwidgets (help uses iwidgets-build)
d533 1
a533 1
BC_ARG_ALIAS([build_iwidgets], [install-iwidgets])
d548 1
d550 1
a551 2
BC_ARG_ALIAS([build_termlib], [termcap-build])
BC_ARG_ALIAS([build_termlib], [libtermlib-build])
d554 1
a554 1
# aliases to force building tnt (help uses tnt-build)
d556 2
d559 1
a559 1
BC_ARG_ALIAS([build_tnt], [template-numerical-toolkit])
a565 1
BC_ARG_ALIAS([build_ef], [endgame])
d567 1
a568 2
BC_ARG_ALIAS([build_ef], [endgame-build])
BC_ARG_ALIAS([build_ef], [endgameframework-build])
d571 1
a571 1
# pro/e plugin aliases (help uses proe-plugin-build)
a572 2
#BC_ARG_ALIAS([build_proe], [proe-build])
#BC_ARG_ALIAS([build_proe], [proe-plugin])
d574 1
a574 1
#BC_ARG_ALIAS([build_proe], [proengineer-plugin])
a575 3
#BC_ARG_ALIAS([build_proe], [pro-engineer-plugin])
#BC_ARG_ALIAS([build_proe], [proengineer-build])
#BC_ARG_ALIAS([build_proe], [proengineer-plugin-build])
a576 1
#BC_ARG_ALIAS([build_proe], [pro-engineer-plugin-build])
d579 1
a581 4
BC_ARG_ALIAS([build_ug], [unigraphics])
BC_ARG_ALIAS([build_ug], [unigraphics-importer-build])
BC_ARG_ALIAS([build_ug], [ug-importer])
BC_ARG_ALIAS([build_ug], [ug-importer-build])
a583 2
BC_ARG_ALIAS([build_ug], [nx-importer])
BC_ARG_ALIAS([build_ug], [nx-importer-build])
d585 1
a585 1
# ADRT (help uses adrt-build)
d590 3
a592 1
BC_ARG_ALIAS([install_geometry], [install-models])
a593 8
BC_ARG_ALIAS([install_geometry], [geometry])
BC_ARG_ALIAS([install_geometry], [install-geometry])
BC_ARG_ALIAS([install_geometry], [example-models-install])
BC_ARG_ALIAS([install_geometry], [example-models])
BC_ARG_ALIAS([install_geometry], [install-example-models])
BC_ARG_ALIAS([install_geometry], [example-geometry-install])
BC_ARG_ALIAS([install_geometry], [example-geometry])
BC_ARG_ALIAS([install_geometry], [install-example-geometry])
d617 1
a618 1
BC_ARG_ALIAS([build_warnings], [verbose-warnings])
d637 2
a638 3
# with opengl aliases (help uses opengl)
BC_ARG_WITH_ALIAS([with_opengl], [ogl])
BC_ARG_WITH_ALIAS([with_opengl], [gl])
d647 1
a647 1
BC_ARG_WITH_ALIAS([with_python], [py])
@


14.356
log
@check for sync for db_sync()
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.355 2007/05/25 01:51:25 brlcad Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.355 $)
a3541 1
AM_CONDITIONAL(INSTALL_MODELS, [test "x$bc_install_geometry" = "xyes"])
d3543 1
a3543 1
AM_CONDITIONAL(WITH_JAVA, [test "x$build_against_java" != "xno"])
a3544 1
AM_CONDITIONAL(WITH_TK, [test "x$build_against_tk" != "xno"])
d3547 4
d3552 1
d3557 1
@


14.355
log
@fix anonymous report of configure failure on 7.10.0 where turning off urt would result in a configure failure.  the problem was a variety of checks for configure settings that checked for the wrong value (!no instead of !yes, where default is "auto"). so the default worked, but not when the 3rd party lib was disabled.
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.354 2007/05/18 16:04:28 brlcad Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.354 $)
d2122 1
@


14.354
log
@disable unnecessary libtool test for fortran
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.353 2007/05/17 18:29:33 brlcad Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.353 $)
d1284 1
a1284 1
if test "x$bc_build_zlib" != "xno" ; then
d1291 1
a1291 1
if test "x$bc_build_urt" != "xno" ; then
d1304 1
a1304 1
if test "x$bc_build_opennurbs" != "xno" ; then
d1473 1
a1473 3
if test "x$bc_build_opennurbs" != "xno" ; then
    AC_CHECK_LIB(stdc++, main, stdcxx_link_works=yes ; LIBSTDCXX="-lstdc++")
fi
d1628 1
a1628 1
# optionally check for vectorization headers for opennurbs
d1822 1
a1822 1
    dnl check for -fexceptions
d1961 1
a1961 1
dnl verbose warning flags
@


14.353
log
@add the NIST template numerics toolkit (TNT) for more involved matrix manipulations that libbn doesn't cover.  TNT is a replacement for LAPACK++.  Said matrix manipulations are needed for BREP manipulation.
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.352 2007/05/16 18:58:14 brlcad Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.352 $)
d1034 3
@


14.352
log
@report on where data files are going to go too
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.351 2007/05/16 18:56:28 brlcad Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.351 $)
d356 3
d565 5
d749 3
d926 3
d2892 52
d3533 1
d3943 1
d4097 1
@


14.351
log
@set the deep datadir if prefix is default
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.350 2007/05/15 16:33:06 erikgreenwald Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.350 $)
d4004 1
a4004 1
AC_MSG_RESULT([             Prefix: ${prefix}])
d4006 1
d4008 1
a4008 1
AC_MSG_RESULT([       Manual pages: ${mandir}])
@


14.350
log
@propogate values of --with-x11 to variables used by XTRA and the rest of configure (re-doing the hack that was undone)
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.349 2007/05/15 14:05:50 d_rossberg Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.349 $)
d220 5
@


14.349
log
@added test for sys/times.h
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.348 2007/05/12 01:06:25 brlcad Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.348 $)
d1204 11
@


14.348
log
@check for kill()
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.347 2007/05/06 05:04:45 brlcad Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.347 $)
d1398 1
a1398 1
	for bc_dir in "$ac_x_libraries" `echo "$ac_x_includes $ac_x_header_dirs" | 
d1403 1
a1403 1
	    AC_LINK_IFELSE([AC_LANG_CALL([],[glEnable])], 
d1406 1
a1406 1
	    AC_LINK_IFELSE([AC_LANG_CALL([],[glEnable])], 
d1540 1
@


14.347
log
@must echo_n be set to nothing if it's nothing? remove it.
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.346 2007/05/04 15:46:33 brlcad Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.346 $)
d2038 1
@


14.346
log
@oop, typo -- should be bc_data_dir var being checked
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.345 2007/05/04 14:35:09 brlcad Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.345 $)
a3427 3
if test "x$ECHO_N" = "x" ; then
    ECHO_N=
fi
@


14.345
log
@according to report from jra, BRLCAD_DATA is still getting set to NONE for his case, so rework the prefix settings once again to make sure there's a double eval on prefix and datadir before setting the AC_DEFINE's
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.344 2007/04/23 13:30:18 joevalleyfield Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.344 $)
d222 1
a222 1
if test "x$datadir" = "xNONE/share" ; then
@


14.344
log
@preliminary support for unaccelerated mgen on aqua through dm-tk

configure.ac:
        - use two levels of expansion for BRLCAD_DATA
        - enable_aqua configure option
        - move X11 ac_ macro tests from argument check section
        - rely on AC_PATH_XTRA to figure out most of what we need to know about
                where to find X
        - no longer look for libICE, libXmu, or libXsm  AC_PATH_XTRA
                populates X_PRE_LIBS with these but they seem completely unused
                right now.
        - look for opengl libs and headers in all of the places AC_PATH_XTRA
                looked for the xlibs
        - use tk's xlib headers when using tk-aqua rather than x
        - remove X11 "ugly hack"
        - include tk flags where necessary
        - remove --disable-shared from subconfigs
        - forcibly add tcl and tk build dirs to libtool wrapper scripts
libdm/Makefile.am, dm-tk.[ch], dm.h, dm-generic.c, dm_obj.c, mged/Makefile.am,
                attach.c, dm-generic.c, dm-tk.c, ged.c:
        - use lower case when referring to tk
        - add support for using dm-tk
        - include X_CFLAGS with DM_X
irprep/Makefile.am, util/Makefile.am:
        - disable build of ir-X, pl-X when there is no X
dm-X.c:
        - no need to test for HAVE_X11_XLIB here; if we don't have it we
                shouldn't be building this file
libfb/Makefile.am, if_tk.c, libfb/tcl.c:
        - build if_tk.c
        - add preliminary hooks so if_tk can be called when ready
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.343 2007/04/18 05:01:03 brlcad Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.343 $)
d179 3
a183 1
AC_CONFIG_SRCDIR([src/librt/bool.c])
d185 2
d188 8
a195 5
if test "x$prefix" = "xNONE" ; then
	bc_prefix="$ac_default_prefix"
else
	# allow a complete override
	bc_prefix="$prefix"
a196 2
# make sure the values are expanded (autoconf may set prefix to a variable)
eval "bc_prefix=\"$bc_prefix\""
d216 2
a217 2
# set up our default shared/non-shared data install directories
#         e.g. /usr/local/share/brlcad/7.4.0
d219 4
a222 3
if test "x$datadir" = "x\${prefix}/share" ; then
	bc_data_dir="${bc_prefix}/share/brlcad/${BRLCAD_VERSION}"
elif test "x$datadir" = "x${prefix}/share" ; then
a223 3
else
	# allow a complete override
	bc_data_dir="${datadir}"
a224 2
# make sure the values are expanded (autoconf may set datadir to a variable)
eval "bc_data_dir=\"$bc_data_dir\""
a241 3

eval "BRLCAD_DATA=\"$BRLCAD_DATA\""
eval "BRLCAD_DATA=\"$BRLCAD_DATA\""
@


14.343
log
@sort lines
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.342 2007/04/18 04:47:19 brlcad Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.342 $)
d191 1
a191 1
bc_prefix="`eval \"echo $bc_prefix\"`"
d223 1
a223 1
bc_data_dir="`eval \"echo $bc_data_dir\"`"
d241 3
d339 2
a671 15
dnl *** X11 ***
if test "x$bc_with_x11_val" != "x" ; then
	BC_RETRY_DIRECTORY([$bc_with_x11_val])
elif test "x$bc_with_x11" = "xyes" -o "x$bc_with_x11" = "xauto" ; then
	# search /usr/X11R6 for X11
	BC_SEARCH_DIRECTORY([/usr/X11R6], [X11])

	# if we hit a wall, retry configure with these
	BC_RETRY_DIRECTORY([/opt/X11R6], [X11])
	BC_RETRY_DIRECTORY([/opt/X11], [X11])
	BC_RETRY_DIRECTORY([/usr/X11], [X11])
fi
AC_PATH_X
AC_PATH_XTRA

d894 3
d1203 1
a1203 9
dnl check if X11 libraries link
LIBX11=""
LIBXEXT=""
LIBXI=""
LIBXSS=""
LIBXT=""
LIBXMU=""
LIBSM=""
LIBICE=""
a1204 1
    AC_CHECK_LIB(X11, XCreateWindow, LIBX11="-lX11")
d1206 10
a1215 4
    PRELIBS="$LIBS"
    LIBS="$LIBS $LIBX11"
    AC_CHECK_LIB(Xext, XShapeCombineMask, LIBXEXT="-lXext $LIBX11")
    LIBS="$PRELIBS"
d1218 2
a1219 3
    LIBS="$LIBS $LIBX11 $LIBXEXT"
    AC_CHECK_LIB(Xi, XGetExtensionVersion, LIBXI="-lXi $LIBXEXT")
    LIBS="$PRELIBS"
a1220 1
    PRELIBS="$LIBS"
d1222 1
a1222 2
    AC_CHECK_LIB(Xmu, XmuLookupStandardColormap, LIBXMU="-lXmu $LIBX11")
    LIBS="$PRELIBS"
d1224 2
a1225 4
    PRELIBS="$LIBS"
    LIBS="$LIBS"
    AC_CHECK_LIB(ICE, IceOpenConnection, LIBICE="-lICE")
    LIBS="$PRELIBS"
d1227 1
a1227 3
    PRELIBS="$LIBS"
    LIBS="$LIBS $LIBICE"
    AC_CHECK_LIB(SM, SmcOpenConnection, LIBSM="-lSM $LIBICE")
d1229 1
a1229 13

    PRELIBS="$LIBS"
    LIBS="$LIBS $LIBX11 $LIBICE $LIBSM"
    AC_CHECK_LIB(Xt, XtMalloc, LIBXT="-lXt $LIBX11 $LIBICE $LIBSM")
    LIBS="$PRELIBS"

    PRELIBS="$LIBS"
    LIBS="$LIBS $LIBX11 $LIBXEXT"
    dnl use something other than XScreenSaverQueryInfo to avoid having
    dnl tk use a cached library check result.
    AC_CHECK_LIB(Xss, XScreenSaverAllocInfo, LIBXSS="-lXss $LIBXEXT $LIBX11")
    LIBS="$PRELIBS"
fi # bc_with_x11
d1394 2
a1395 2
    AC_CHECK_LIB(GL, glEnable, gl_link_works=yes ; LIBGL="-lGL",
		 [AC_CHECK_LIB(GL2, glEnable, gl_link_works=yes ; LIBGL="-lGL2")]
d1397 17
d1566 1
a1566 8
# optionally check for X11 headers
if test "x$bc_with_x11" != "xno" ; then
    AC_CHECK_HEADERS( \
	X11/Xlib.h \
	X11/Xosdefs.h \
    )
fi # bc_with_x11

d1569 24
a1592 4
    AC_CHECK_HEADERS( \
	GL/gl.h \
	GL/glx.h \
    )
d1595 3
d2607 1
d2638 1
d2640 1
a2640 1
    TK='-L${top_builddir}/src/other/tk/unix'" -ltk${TCL_VERSION} $LIBXSS"
d2643 3
d3173 1
d3175 1
d3192 1
a3260 8
    # XXX ugly hack (that needs to die)
    X_PREFIX=/usr/X11R6
    if test "x$bc_with_x11_val" != "x" ; then
	X_PREFIX="$bc_with_x11_val"
    fi
    X_CFLAGS="-I${X_PREFIX}/include"
    X_LIBS="-L${X_PREFIX}/lib $LIBX11 $LIBXI"

d3264 2
a3265 1
    LDFLAGS="$LDFLAGS $X_LIBS"
d3267 1
a3267 3
#ifdef HAVE_X11_XLIB_H
#  include <X11/Xlib.h>
#endif
d3276 1
d3279 1
a3279 3
#ifdef HAVE_X11_XLIB_H
#  include <X11/Xlib.h>
#endif
d3289 1
d3293 8
a3300 2
	if test "x$x11_works" = "xyes" ; then
	    build_against_x11="yes"
d3302 2
a3303 6
	    if test "x$bc_with_x11" = "xyes" ; then
		BC_RETRY_CONFIGURE([$this], [$args])
		AC_MSG_NOTICE([X11 was requested, but no system X11 libraries were found])
		AC_MSG_NOTICE([}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}])
		AC_MSG_NOTICE([Try adding --without-x11])
		AC_MSG_ERROR([*** Using X11 was requested, yet no system X11 was found ***])
d3305 9
a3313 1
		AC_MSG_NOTICE([X11 does not appear to be functionally available])
d3464 1
d3545 2
a3546 2
DM_LIBS="${PNG} ${X_LIBS}"
FB_LIBS="${BU} ${PKG} ${TCL} ${X_LIBS} ${LIBGL}"
a3611 1
ac_configure_args="$ac_configure_args --disable-shared"
d3617 4
d3622 4
d3936 2
a3937 1
		    if test ! "x`cat ${libtoolscript}`" = "x`cat ${libtoolscript}.sed`" ; then
d3939 1
a3939 1
			cp ${libtoolscript}.sed ${libtoolscript}
d3942 1
@


14.342
log
@BRLCAD_VERSION is now obsolete, remove all references, use brlcad_version() instead for the triplet.
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.341 2007/04/17 18:27:38 erikgreenwald Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.341 $)
d3665 1
a3666 1
	misc/win32-msvc/Dll/Makefile
@


14.341
log
@aPrep seems to be a new dir that wasn't added here
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.340 2007/04/16 21:15:35 brlcad Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.340 $)
a106 1
AC_DEFINE_UNQUOTED(BRLCAD_VERSION, "$BRLCAD_VERSION", "Version of BRL-CAD")
@


14.340
log
@revamp BRL-CAD's versioning setup.  no longer rely upon the vers.sh script, allowing for a more unified cross-platform configuration.  instead of globals, provide per-library functions that return the version string.  the version numbers are now stored in files in include/conf/.
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.339 2007/04/16 19:54:45 brlcad Exp $
d98 1
a98 1
AC_REVISION($Revision: 14.338 $)
d3668 1
@


14.339
log
@mingw seems to have a -lgl that has at least one of the old irisgl bindings, so try changing from 'getvideo' to 'gconfig'
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.338 2007/04/15 01:13:39 brlcad Exp $
d87 11
a97 1
AC_INIT(BRL-CAD, 7.10.1, [http://brlcad.org], brlcad)
a101 8
dnl See HACKING for details on how to properly update the version
MAJOR_VERSION=7
MINOR_VERSION=10
PATCH_VERSION=1
AC_SUBST(MAJOR_VERSION)
AC_SUBST(MINOR_VERSION)
AC_SUBST(PATCH_VERSION)

d106 4
a121 2
BRLCAD_VERSION="$MAJOR_VERSION.$MINOR_VERSION.$PATCH_VERSION"
AC_DEFINE_UNQUOTED([BRLCAD_VERSION], "$BRLCAD_VERSION", "Version of BRL-CAD")
a126 1
AC_SUBST(BRLCAD_VERSION)
d3639 1
@


14.338
log
@generate nsis Makefile, traverse into it
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.337 2007/04/14 23:59:39 brlcad Exp $
d88 1
a88 1
AC_REVISION($Revision: 14.337 $)
d1436 1
a1436 1
AC_CHECK_LIB(gl, getvideo, sgigl_link_works=yes ; LIBSGIGL="-lgl")
@


14.337
log
@check for setpriority for src/libbu/parallel.c in bu_nice_set()
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.336 2007/04/14 21:56:05 brlcad Exp $
d88 1
a88 1
AC_REVISION($Revision: 14.336 $)
d3648 1
@


14.336
log
@generate the brlcad-config script during configure
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.335 2007/04/14 14:15:01 brlcad Exp $
d88 1
a88 1
AC_REVISION($Revision: 14.335 $)
d2061 1
@


14.335
log
@generate all the new pkgconfig description files, and AC_SUBST a variety of system library symbols that they may need
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.334 2007/04/13 23:11:12 joevalleyfield Exp $
d88 1
a88 1
AC_REVISION($Revision: 14.334 $)
d3641 1
@


14.334
log
@add option to disable the retry behavior of configure
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.333 2007/04/13 22:34:56 brlcad Exp $
d88 1
a88 1
AC_REVISION($Revision: 14.333 $)
d1264 1
d1266 3
a1268 3
AC_CHECK_LIB(c, regcomp, LIBREGEX="-lc",
    [AC_CHECK_LIB(regex, regcomp, LIBREGEX="-lregex",
	[AC_CHECK_LIB(compat, regcomp, LIBREGEX="-lcompat")]
d1273 1
d1275 1
a1275 1
AC_CHECK_LIB(png, png_access_version_number, LIBPNG="-lpng")
d1278 1
d1281 1
a1281 1
    AC_CHECK_LIB(z, deflate, LIBZLIB="-lz")
d2546 1
d2651 1
d2741 2
d2987 1
a2987 1
AC_MSG_CHECKING(whether an OpenGL library is available)
d2992 1
a2992 1
AC_MSG_CHECKING(whether the WindowsGL library is available)
d2997 1
a2997 1
AC_MSG_CHECKING(whether the SGI graphics library is available)
d3005 1
a3005 1
AC_MSG_CHECKING(whether the Solaris lexer library is available)
d3010 1
a3010 1
AC_MSG_CHECKING(whether the libgen library is available)
d3014 15
d3646 12
@


14.333
log
@libraries are no longer LIBADD'd, they're defined in configure.ac in a _LIBS dependency variable, added PNG to BU_LIBS
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.332 2007/04/13 15:21:21 brlcad Exp $
d88 1
a88 1
AC_REVISION($Revision: 14.332 $)
d382 2
a858 1

d953 3
@


14.332
log
@bump to 7.10.1
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.331 2007/04/10 01:53:41 brlcad Exp $
d88 1
a88 1
AC_REVISION($Revision: 14.331 $)
d3500 1
a3500 1
BU_LIBS="${TCL} ${LIBM} ${LIBMALLOC} ${LIBTHREAD}"
@


14.331
log
@final release preparations, update to 7.10.0
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.330 2007/04/09 18:17:21 brlcad Exp $
d87 2
a88 2
AC_INIT(BRL-CAD, 7.10.0, [http://brlcad.org], brlcad)
AC_REVISION($Revision: 14.330 $)
d95 1
a95 1
PATCH_VERSION=0
@


14.330
log
@stash the current configuration args before adding additional ones for the subconfigures, then restore to the original so recheck configures don't persist the subconfigure arguments to the top configure (e.g. --disable-shared)
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.329 2007/04/03 02:47:02 brlcad Exp $
d87 2
a88 2
AC_INIT(BRL-CAD, 7.9.0, [http://brlcad.org], brlcad)
AC_REVISION($Revision: 14.329 $)
d94 1
a94 1
MINOR_VERSION=9
@


14.329
log
@restructure library linkages so that brl-cad libraries no longer list their dependencies as a LIBADD.  dependencies are moved into configure.ac and provided via _LIBS variables so that they are specified at link time.  this supports hybrid static library compilation as well as other more varied mixture configurations.  use the new _LIBS variables throughout.  probably want to re-combine them later into a single symbol name per library but this will suffice for now.
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.328 2007/03/28 19:12:04 brlcad Exp $
d88 1
a88 1
AC_REVISION($Revision: 14.328 $)
d3564 4
d3580 2
d3848 2
@


14.328
log
@generate the Cubit Makefile and traverse into that dir
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.327 2007/03/28 13:43:03 d_rossberg Exp $
d88 1
a88 1
AC_REVISION($Revision: 14.327 $)
d1783 3
a1785 4
    BC_COMPILER_AND_LINKER_RECOGNIZES([-fexceptions], [fexceptions], [nokeep])
    if test "x$bc_fexceptions_works" = "xyes" ; then
       EXCEPTIONS="-fexceptions"
       AC_SUBST(EXCEPTIONS)
d3476 1
a3476 2
BU='${top_builddir}/src/libbu/libbu.la'" $TCL $FRAMEWORK_COREFOUNDATION"
AC_SUBST(BU)
a3477 2
BN='${top_builddir}/src/libbn/libbn.la'" $TCL $FRAMEWORK_COREFOUNDATION"
AC_SUBST(BN)
d3479 3
a3481 2
RT='${top_builddir}/src/librt/librt.la'" $TCL $FRAMEWORK_COREFOUNDATION"
AC_SUBST(RT)
d3483 14
a3497 4
AC_SUBST(WDB)

PKG='${top_builddir}/src/libpkg/libpkg.la'
AC_SUBST(PKG)
d3499 15
a3513 2
SYSV='${top_builddir}/src/libsysv/libsysv.la'
AC_SUBST(SYSV)
d3515 2
a3516 1
CURSOR='${top_builddir}/src/libcursor/libcursor.la'
d3518 1
a3518 2

FB='${top_builddir}/src/libfb/libfb.la'" $FRAMEWORK_COREFOUNDATION"
a3519 6

DM='${top_builddir}/src/libdm/libdm.la'" $FRAMEWORK_COREFOUNDATION"
AC_SUBST(DM)
AC_DEFINE_UNQUOTED([USE_FBSERV], [1], [Required for libdm/mged to allow direct fbserv render connections])

FFT='${top_builddir}/src/libfft/libfft.la'
a3520 2

MULTISPECTRAL='${top_builddir}/src/libmultispectral/libmultispectral.la'" $FRAMEWORK_COREFOUNDATION"
a3521 2

OPTICAL='${top_builddir}/src/liboptical/liboptical.la'" $FRAMEWORK_COREFOUNDATION"
a3522 2

ORLE='${top_builddir}/src/liborle/liborle.la'
d3524 3
a3526 2

TCLCAD='${top_builddir}/src/libtclcad/libtclcad.la'" $FRAMEWORK_COREFOUNDATION"
d3528 2
d3531 15
a3545 2
TERMIO='${top_builddir}/src/libtermio/libtermio.la'
AC_SUBST(TERMIO)
@


14.327
log
@the cause for the no-non-template-friend problem in vector.h was removed
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.326 2007/03/27 14:37:24 brlcad Exp $
d88 1
a88 1
AC_REVISION($Revision: 14.326 $)
d3685 1
@


14.326
log
@need AM_CONDITIONAL for BUILD_CUBIT
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.325 2007/03/20 18:50:18 brlcad Exp $
d88 1
a88 1
AC_REVISION($Revision: 14.325 $)
d1230 1
a1230 1
    
d1441 1
a1441 1
dnl check if the standard c++ library links without checking for any particular symbol 
d1716 2
a1717 2
	    fi 
      else	
d1722 1
a1722 1
		        found_protk_h=yes)      
d1726 1
a1726 1
fi 
a1850 11
    dnl C++ specific flags
    if test "x$bc_build_opennurbs" != "xno" ; then
	# turn off bogus/annoying warning
	AC_LANG_PUSH([C++])
	BC_COMPILER_RECOGNIZES([-Wno-non-template-friend], [no_non_tempalte_friend], [no_keep])
	if test "x$bc_no_non_template_friend" = "xyes" ; then
	    CXXFLAGS="$CXXFLAGS -Wno-non-template-friend"
	fi
	AC_LANG_POP
    fi

d3117 1
a3117 1
	 AC_MSG_RESULT(no)	 
d3126 1
a3126 1
   fi 
@


14.325
log
@GAH, case typo s/TCl/TCL/ .. explains why Tcl and itcl would periodically pass their functionality test when they should not have.  also, re-enable the touch of the header template, but this time only if the file is non-empty -- needs more testing across autoconf versions still.
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.324 2007/03/20 15:11:28 brlcad Exp $
d88 1
a88 1
AC_REVISION($Revision: 14.324 $)
d3426 1
@


14.324
log
@since incrTcl needs to link against Tcl internal headers in order to compile successfully, that ends up placing a requirement on the version of tcl such that it must be at least the version we ship or later.  this should fix one of john's compilation woes on ubuntu.
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.323 2007/03/20 13:37:25 brlcad Exp $
d88 1
a88 1
AC_REVISION($Revision: 14.323 $)
d2477 1
a2477 1
#elif TCl_MAJOR_VERSION == 8 && TCL_MINOR_VERSION < 5
d2680 1
a2680 1
#elif ITCl_MAJOR_VERSION == 3 && ITCL_MINOR_VERSION < 2
a3826 5
# AC_OUTPUT won't update the brlcad_config.h.in template timestamp if
# the file is unchanged.  forcibly update the timestamp so autoheader
# doesn't try to invoke.
# touch include/brlcad_config.h.in

d3883 7
@


14.323
log
@add a test for -Wno-non-template-friend so that compilation in openNURBS can be quelled for behavior that is intended (gcc assumes we might be relying on their previously non-conformant behavior). report CXXFLAGS.. probably need to make the BC_COMPILER_* functions sensitive to the AC_LANG..
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.322 2007/03/09 20:34:47 erikgreenwald Exp $
d88 1
a88 1
AC_REVISION($Revision: 14.322 $)
d1304 1
a1304 5
		[AC_CHECK_LIB(tcl8.4, Tcl_Main, tcl_link_works=yes ; LIBTCL="-ltcl8.4",
		    [AC_CHECK_LIB(tcl84, Tcl_Main, tcl_link_works=yes ; LIBTCL="-ltcl84",
			[AC_CHECK_LIB(tcl, Tcl_Main, tcl_link_works=yes ; LIBTCL="-ltcl")]
		    )]
		)]
d1317 1
a1317 5
		[AC_CHECK_LIB(tclstub8.4, Tcl_InitStubs, tclstub_link_works=yes ; LIBTCLSTUB="-ltclstub8.4",
		    [AC_CHECK_LIB(tclstub84, Tcl_InitStubs, tclstub_link_works=yes ; LIBTCLSTUB="-ltclstub84",
			[AC_CHECK_LIB(tclstub, Tcl_InitStubs, tclstub_link_works=yes ; LIBTCLSTUB="-ltclstub")]
		    )]
		)]
d1330 1
a1330 5
		[AC_CHECK_LIB(tk8.4, Tk_MainLoop, tk_link_works=yes ; LIBTK="-ltk8.4",
		    [AC_CHECK_LIB(tk84, Tk_MainLoop, tk_link_works=yes ; LIBTK="-ltk84",
			[AC_CHECK_LIB(tk, Tk_MainLoop, tk_link_works=yes ; LIBTK="-ltk")]
		    )]
		)]
d1345 1
a1345 5
		[AC_CHECK_LIB(tkstub8.4, Tk_InitStubs, tkstub_link_works=yes ; LIBTKSTUB="-ltkstub8.4",
		    [AC_CHECK_LIB(tkstub84, Tk_InitStubs, tkstub_link_works=yes ; LIBTKSTUB="-ltkstub84",
			[AC_CHECK_LIB(tkstub, Tk_InitStubs, tkstub_link_works=yes ; LIBTKSTUB="-ltkstub")]
		    )]
		)]
d2477 2
a2478 2
#elif TCl_MAJOR_VERSION == 8 && TCL_MINOR_VERSION < 4
    fprintf(stderr, "minor version < 4\n");
d2590 2
a2591 2
#elif TK_MAJOR_VERSION == 8 && TK_MINOR_VERSION < 4
    fprintf(stderr, "minor version < 4\n");
@


14.322
log
@try to cope with OS's that don't like dots in library names
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.321 2007/03/08 09:29:21 d_rossberg Exp $
d88 1
a88 1
AC_REVISION($Revision: 14.321 $)
d1867 11
d3920 1
d3922 1
@


14.321
log
@since basename was removed from libsysv we do not need strlcpy any more
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.320 2007/03/07 16:56:35 brlcad Exp $
d88 1
a88 1
AC_REVISION($Revision: 14.320 $)
d1301 8
a1308 4
    [AC_CHECK_LIB(tcl8.5, Tcl_Main, tcl_link_works=yes ; LIBTCL="-ltcl8.5",
	[AC_CHECK_LIB(tcl8.4, Tcl_Main, tcl_link_works=yes ; LIBTCL="-ltcl8.4",
	    [AC_CHECK_LIB(tcl84, Tcl_Main, tcl_link_works=yes ; LIBTCL="-ltcl84",
		[AC_CHECK_LIB(tcl, Tcl_Main, tcl_link_works=yes ; LIBTCL="-ltcl")]
d1318 8
a1325 4
    [AC_CHECK_LIB(tclstub8.5, Tcl_InitStubs, tclstub_link_works=yes ; LIBTCLSTUB="-ltclstub8.5",
	[AC_CHECK_LIB(tclstub8.4, Tcl_InitStubs, tclstub_link_works=yes ; LIBTCLSTUB="-ltclstub8.4",
	    [AC_CHECK_LIB(tclstub84, Tcl_InitStubs, tclstub_link_works=yes ; LIBTCLSTUB="-ltclstub84",
		[AC_CHECK_LIB(tclstub, Tcl_InitStubs, tclstub_link_works=yes ; LIBTCLSTUB="-ltclstub")]
d1335 9
a1343 3
    [AC_CHECK_LIB(tk8.5, Tk_MainLoop, tk_link_works=yes ; LIBTK="-ltk8.5",
	[AC_CHECK_LIB(tk8.4, Tk_MainLoop, tk_link_works=yes ; LIBTK="-ltk8.4",
	    [AC_CHECK_LIB(tk, Tk_MainLoop, tk_link_works=yes ; LIBTK="-ltk")]
d1354 8
a1361 4
    [AC_CHECK_LIB(tkstub8.5, Tk_InitStubs, tkstub_link_works=yes ; LIBTKSTUB="-ltkstub8.5",
	[AC_CHECK_LIB(tkstub8.4, Tk_InitStubs, tkstub_link_works=yes ; LIBTKSTUB="-ltkstub8.4",
	    [AC_CHECK_LIB(tkstub84, Tk_InitStubs, tkstub_link_works=yes ; LIBTKSTUB="-ltkstub84",
		[AC_CHECK_LIB(tkstub, Tk_InitStubs, tkstub_link_works=yes ; LIBTKSTUB="-ltkstub")]
d1372 5
a1376 3
    [AC_CHECK_LIB(itcl3.2, Itcl_Init, itcl_link_works=yes ; LIBITCL="-litcl3.2",
	[AC_CHECK_LIB(itcl32, Itcl_Init, itcl_link_works=yes ; LIBITCL="-litcl32",
	    [AC_CHECK_LIB(itcl, Itcl_Init, itcl_link_works=yes ; LIBITCL="-litcl")]
d1385 5
a1389 3
    [AC_CHECK_LIB(itk3.2, Itk_Init, itk_link_works=yes ; LIBITK="-litk3.2",
	[AC_CHECK_LIB(itk32, Itk_Init, itk_link_works=yes ; LIBITK="-litk32",
	    [AC_CHECK_LIB(itk, Itk_Init, itk_link_works=yes ; LIBITK="-litk")]
d2521 6
d2533 1
a2533 1
	 *)
d2632 6
d2725 6
d2813 6
d2837 6
@


14.320
log
@have configure check for the -msee and -msse2 gcc options, provide them together as SSE to the makefiles
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.319 2007/03/06 20:30:12 brlcad Exp $
d88 1
a88 1
AC_REVISION($Revision: 14.319 $)
a2061 1
	strlcpy \
@


14.319
log
@IRIX provides basename/dirname in the libgen library.  checking for the header requires -lgen as a LIBS, so add custom checks for dirname/basename functionality
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.318 2007/03/04 23:02:37 brlcad Exp $
d88 1
a88 1
AC_REVISION($Revision: 14.318 $)
d1783 13
@


14.318
log
@linux needs libxss too for tk
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.317 2007/03/04 21:09:30 brlcad Exp $
d88 1
a88 1
AC_REVISION($Revision: 14.317 $)
d1430 5
d1977 1
a1982 1
	basename \
d2070 36
d2951 5
@


14.317
log
@check for the emmintrin.h header for g_brep's vector code; tcl needs libm on linux; bu/bn/rt are tied to tcl
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.316 2007/03/03 17:05:32 brlcad Exp $
d88 1
a88 1
AC_REVISION($Revision: 14.316 $)
d2553 1
a2553 8
    case $host_os in
	darwin*)
	    TK='-L${top_builddir}/src/other/tk/unix'" -ltk${TCL_VERSION} $LIBXSS"
	    ;;
	*)
	    TK='-L${top_builddir}/src/other/tk/unix'" -ltk${TCL_VERSION}"
	    ;;
    esac
@


14.316
log
@non-mac tcl compiles against libdl, so add it as a dep in here (since we're static)
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.315 2007/03/03 15:23:55 brlcad Exp $
d88 1
a88 1
AC_REVISION($Revision: 14.315 $)
d1574 7
d2453 1
a2453 1
	     TCL='-L${top_builddir}/src/other/tcl/unix'" -ltcl${TCL_VERSION} ${LIBDL}"
a2639 2
ITCL_VERSION="3.3"
AC_SUBST(ITCL_VERSION)
d2644 2
d2647 2
a2648 2
    ITCL='${top_builddir}/src/other/incrTcl/libitcl${ITCL_VERSION}.la'
    ITK='${top_builddir}/src/other/incrTcl/libitk${ITCL_VERSION}.la'
d3389 1
a3389 1
BU='${top_builddir}/src/libbu/libbu.la'" $FRAMEWORK_COREFOUNDATION"
d3392 1
a3392 1
BN='${top_builddir}/src/libbn/libbn.la'" $FRAMEWORK_COREFOUNDATION"
d3395 1
a3395 1
RT='${top_builddir}/src/librt/librt.la'" $FRAMEWORK_COREFOUNDATION"
@


14.315
log
@no longer need to replicate tcl's configure checks since we're using AC_CONFIG_SUBDIRS so remove the dead sections
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.314 2007/03/02 22:28:08 brlcad Exp $
d88 1
a88 1
AC_REVISION($Revision: 14.314 $)
d2446 1
a2446 1
	     TCL='-L${top_builddir}/src/other/tcl/unix'" -ltcl${TCL_VERSION}"
@


14.314
log
@create the archlinux files: Makefile, PKGBUILD, brlcad.install, brlcad.sh
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.313 2007/03/02 21:46:27 brlcad Exp $
d88 1
a88 1
AC_REVISION($Revision: 14.313 $)
a1722 1
dnl Tcl still uses HAVE_ST_BLKSIZE
a1742 25
dnl dnl XXX - union wait testing from tcl8.4's configure.in, should be revamped.
dnl AC_MSG_CHECKING([union wait])
dnl AC_CACHE_VAL(tcl_cv_union_wait,
dnl     AC_TRY_LINK([
dnl #ifdef HAVE_SYS_TYPES_H
dnl #  include <sys/types.h>
dnl #endif
dnl #include <sys/wait.h>], [
dnl union wait x;
dnl  WIFEXITED(x);           /* Generates an error if WIFEXITED
dnl 			 * uses an int. */
dnl     ], tcl_cv_union_wait=yes, tcl_cv_union_wait=no))
dnl AC_MSG_RESULT($tcl_cv_union_wait)
dnl if test $tcl_cv_union_wait = no; then
dnl     AC_DEFINE(NO_UNION_WAIT,, From Tcl -- Lacking a "union wait")
dnl fi

dnl dnl XXX -- need to really check for time zone
dnl AC_DEFINE(HAVE_TM_ZONE,,string in time zone)

dnl XXX -- necessary checks from tcl8.4 tcl.m4
dnl builtin(include,src/other/libtcl/unix/tcl.m4)
dnl SC_SERIAL_PORT
dnl SC_TCL_64BIT_FLAGS

a2057 15
dnl XXX for tcl (some duplicate)
dnl AC_CHECK_FUNC(fstatfs, , [AC_DEFINE(NO_FSTATFS,, Lacking fstatfs)])
dnl AC_CHECK_FUNC(strerror, , [AC_DEFINE(NO_STRERROR,, From Tcl -- No strerror)])
dnl AC_CHECK_FUNC(getwd, , [AC_DEFINE(NO_GETWD,, From Tcl -- No getwd)])
dnl AC_CHECK_FUNC(wait3, , [AC_DEFINE(NO_WAIT3,, From Tcl -- No wait3)])
dnl AC_CHECK_FUNC(uname, , [AC_DEFINE(NO_UNAME,, From Tcl -- No uname)])
dnl AC_CHECK_FUNC(realpath, , [AC_DEFINE(NO_REALPATH,, From Tcl -- No realpath)])
dnl AC_CHECK_FUNC(memmove, , [AC_DEFINE(NO_MEMMOVE,, From Tcl -- No memmove)
dnl 			  AC_DEFINE(NO_STRING_H,, From Tcl -- No string)])
dnl AC_CHECK_FUNC(opendir, , [AC_DEFINE(USE_DIRENT2_H,, From Tcl -- use dirent2)])
dnl AH_VERBATIM([OUR_STRSEP],
dnl [#ifndef HAVE_STRSEP
dnl extern char *strsep(char **stringp, const char *delim);
dnl #endif])

a3427 62
dnl tcl

dnl dnl Need to update version number(s) in src/other/libtcl/Makefile.am
dnl TCL_LIBRARY='${prefix}/lib/tcl${TCL_VERSION}'
dnl AC_SUBST(TCL_LIBRARY)
dnl TCL_PACKAGE_PATH="'${libdir}'"
dnl AC_SUBST(TCL_PACKAGE_PATH)

dnl dnl XXX -- hack to make unfixed libtk behave when reading tclConfig.sh
dnl dnl EXTRA_CFLAGS='-DMAC_OSX_TCL -DHAVE_CFBUNDLE -DUSE_VFORK -DTCL_DEFAULT_ENCODING=\"utf-8\"'
dnl AC_SUBST(CC)
dnl AC_SUBST(DEFS)
dnl AC_SUBST(TCL_DBGX)
dnl CFLAGS_DEBUG="-g"
dnl AC_SUBST(CFLAGS_DEBUG)
dnl CFLAGS_OPTIMIZE="-Os"
dnl AC_SUBST(CFLAGS_OPTIMIZE)
dnl AC_SUBST(LDFLAGS_DEBUG)
dnl AC_SUBST(LDFLAGS_OPTIMIZE)
dnl TCL_SHARED_BUILD=1
dnl AC_SUBST(TCL_SHARED_BUILD)
dnl AC_SUBST(CFG_TCL_EXPORT_FILE_SUFFIX)
dnl AC_SUBST(DL_LIBS)
dnl AC_SUBST(LIBS)
dnl AC_SUBST(MATH_LIBS)
dnl TCL_LIB_FILE=libtcl8.4.so
dnl AC_SUBST(TCL_LIB_FILE)
dnl TCL_NEEDS_EXP_FILE=0
dnl AC_SUBST(TCL_NEEDS_EXP_FILE)
dnl AC_SUBST(SHLIB_CFLAGS)
dnl AC_SUBST(CFLAGS_WARNING)
dnl AC_SUBST(EXTRA_CFLAGS)
dnl AC_SUBST(SHLIB_LD)
dnl AC_SUBST(SHLIB_SUFFIX)
dnl AC_SUBST(STLIB_LD)
dnl AC_SUBST(SHLIB_LD_LIBS)
dnl TCL_LIB_FLAG='-ltcl8.4'
dnl AC_SUBST(TCL_LIB_FLAG)
dnl TCL_BUILD_LIB_SPEC='-L../../libtcl/.libs -ltcl8.4 -Wl,--rpath -Wl,${libdir}'
dnl AC_SUBST(TCL_BUILD_LIB_SPEC)
dnl TCL_INCLUDE_SPEC='-I${prefix}/include -I../../libtcl/generic'
dnl AC_SUBST(TCL_INCLUDE_SPEC)
dnl TCL_LIB_VERSIONS_OK='ok'
dnl AC_SUBST(TCL_LIB_VERSIONS_OK)
dnl AC_SUBST(TCL_LIB_SPEC)
dnl AC_SUBST(CFG_TCL_SHARED_LIB_SUFFIX)
dnl AC_SUBST(CFG_TCL_UNSHARED_LIB_SUFFIX)
dnl TCL_SRC_DIR='../../libtcl'
dnl AC_SUBST(TCL_SRC_DIR)
dnl TCL_STUB_LIB_FILE='libtclstub8.4.a'
dnl AC_SUBST(TCL_STUB_LIB_FILE)
dnl TCL_STUB_LIB_FLAG='-ltclstub8.4'
dnl AC_SUBST(TCL_STUB_LIB_FLAG)
dnl AC_SUBST(TCL_BUILD_STUB_LIB_SPEC)
dnl AC_SUBST(TCL_STUB_LIB_SPEC)
dnl TCL_BUILD_STUB_LIB_PATH="../../libtcl/.libs/libtclstub8.4.a"
dnl AC_SUBST(TCL_BUILD_STUB_LIB_PATH)
dnl TCL_STUB_LIB_PATH='${prefix}/lib/libtclstub8.4.a'
dnl AC_SUBST(TCL_STUB_LIB_PATH)
dnl TCL_THREADS=0
dnl AC_SUBST(TCL_THREADS)

@


14.313
log
@upgrade tcl/tk from 8.4.6 to 8.5a5; also move to a recursive configure, using AC_CONFIG_SUBDIRS to call upon tcl, tk, and enigma's configure scripts as needed instead of redoing their build systems for our purpose.  this has a rather drastic impact on the way the libraries are linked together, including the need to compile tcl/tk static so as to avoid libtool portability issues as well as letting us take advantage of their build system for reduced maintenance and easing future upgrades.  undoubtedly more build issues to be worked out with other platforms given the extent of this change.  this does move us one step closer towards correctly linking against system tcl/tk installations too.
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.312 2007/02/27 12:42:36 d_rossberg Exp $
d88 1
a88 1
AC_REVISION($Revision: 14.312 $)
d3589 4
@


14.312
log
@test for strlcpy
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.311 2007/02/27 03:52:22 brlcad Exp $
d88 1
a88 1
AC_REVISION($Revision: 14.311 $)
d130 2
a131 2
      separator="${separator}*"
      length="`expr $length - 1`"
d1175 12
d1208 5
a1212 4
ice_link_works=no
sm_link_works=no
xt_link_works=no
xmu_link_works=no
d1215 37
a1251 6
    AC_CHECK_LIB(Xext, XShapeCombineMask, LIBEXT="-lXext")
    AC_CHECK_LIB(Xi, XGetExtensionVersion, LIBXI="-lXi")
    AC_CHECK_LIB(ICE, IceOpenConnection, ice_link_works=yes)
    AC_CHECK_LIB(SM, SmcOpenConnection, sm_link_works=yes)
    AC_CHECK_LIB(Xt, XtMalloc, xt_link_works=yes)
    AC_CHECK_LIB(Xmu, XmuLookupStandardColormap, xmu_link_works=yes)
d1744 16
a1759 16
dnl XXX - union wait testing from tcl8.4's configure.in, should be revamped.
AC_MSG_CHECKING([union wait])
AC_CACHE_VAL(tcl_cv_union_wait,
    AC_TRY_LINK([
#ifdef HAVE_SYS_TYPES_H
#  include <sys/types.h>
#endif
#include <sys/wait.h>], [
union wait x;
 WIFEXITED(x);           /* Generates an error if WIFEXITED
			 * uses an int. */
    ], tcl_cv_union_wait=yes, tcl_cv_union_wait=no))
AC_MSG_RESULT($tcl_cv_union_wait)
if test $tcl_cv_union_wait = no; then
    AC_DEFINE(NO_UNION_WAIT,, From Tcl -- Lacking a "union wait")
fi
d1761 2
a1762 2
dnl XXX -- need to really check for time zone
AC_DEFINE(HAVE_TM_ZONE,,string in time zone)
d1765 3
a1767 3
builtin(include,src/other/libtcl/unix/tcl.m4)
SC_SERIAL_PORT
SC_TCL_64BIT_FLAGS
d1790 1
a1790 1
    dnl example rttherm
d2085 13
a2097 13
AC_CHECK_FUNC(fstatfs, , [AC_DEFINE(NO_FSTATFS,, Lacking fstatfs)])
AC_CHECK_FUNC(strerror, , [AC_DEFINE(NO_STRERROR,, From Tcl -- No strerror)])
AC_CHECK_FUNC(getwd, , [AC_DEFINE(NO_GETWD,, From Tcl -- No getwd)])
AC_CHECK_FUNC(wait3, , [AC_DEFINE(NO_WAIT3,, From Tcl -- No wait3)])
AC_CHECK_FUNC(uname, , [AC_DEFINE(NO_UNAME,, From Tcl -- No uname)])
AC_CHECK_FUNC(realpath, , [AC_DEFINE(NO_REALPATH,, From Tcl -- No realpath)])
AC_CHECK_FUNC(memmove, , [AC_DEFINE(NO_MEMMOVE,, From Tcl -- No memmove)
			  AC_DEFINE(NO_STRING_H,, From Tcl -- No string)])
AC_CHECK_FUNC(opendir, , [AC_DEFINE(USE_DIRENT2_H,, From Tcl -- use dirent2)])
AH_VERBATIM([OUR_STRSEP],
[#ifndef HAVE_STRSEP
extern char *strsep(char **stringp, const char *delim);
#endif])
d2474 2
a2475 9
TCL_VERSION="8.4"
AC_DEFINE_UNQUOTED([TCL_VERSION], "$TCL_VERSION", "Version of Tcl")
AC_SUBST(TCL_VERSION)
TCL_MAJOR_VERSION=8
AC_SUBST(TCL_MAJOR_VERSION)
TCL_MINOR_VERSION=4
AC_SUBST(TCL_MINOR_VERSION)
TCL_PATCH_LEVEL=".6"
AC_SUBST(TCL_PATCH_LEVEL)
d2479 1
d2482 10
a2491 3
    TCL='${top_builddir}/src/other/libtcl/libtcl${TCL_VERSION}.la '"${SOCKET}"
    TCLSTUB='${top_builddir}/src/other/libtcl/generic/libtclstub.la'
    TCL_CPPFLAGS='-I${top_srcdir}/src/other/libtcl/generic'
d2508 1
a2580 6
dnl Need to update version number(s) in src/other/libtk/Makefile.am too
TK_VERSION="8.4"
AC_DEFINE_UNQUOTED([TK_VERSION], "$TK_VERSION", "Version of Tk")
AC_SUBST(TK_VERSION)
TK_LIBRARY='${prefix}/lib/tk${TK_VERSION}'
AC_SUBST(TK_LIBRARY)
d2584 1
d2587 10
a2596 3
    TK='${top_builddir}/src/other/libtk/libtk${TK_VERSION}.la'
    TKSTUB='${top_builddir}/src/other/libtk/generic/libtkstub.la'
    TK_CPPFLAGS='-I${top_srcdir}/src/other/libtk/generic'
d2613 1
d3423 1
a3423 1
BU='${top_builddir}/src/libbu/libbu.la'
d3426 1
a3426 1
BN='${top_builddir}/src/libbn/libbn.la'
d3429 1
a3429 1
RT='${top_builddir}/src/librt/librt.la'
d3444 1
a3444 1
FB='${top_builddir}/src/libfb/libfb.la'
d3447 1
a3447 1
DM='${top_builddir}/src/libdm/libdm.la'
d3454 1
a3454 1
MULTISPECTRAL='${top_builddir}/src/libmultispectral/libmultispectral.la'
d3457 1
a3457 1
OPTICAL='${top_builddir}/src/liboptical/liboptical.la'
d3463 1
a3463 1
TCLCAD='${top_builddir}/src/libtclcad/libtclcad.la'
d3471 61
a3536 6
dnl Need to update version number(s) in src/other/libtcl/Makefile.am
TCL_LIBRARY='${prefix}/lib/tcl${TCL_VERSION}'
AC_SUBST(TCL_LIBRARY)
TCL_PACKAGE_PATH="'${libdir}'"
AC_SUBST(TCL_PACKAGE_PATH)

a3540 55
dnl XXX -- hack to make unfixed libtk behave when reading tclConfig.sh
dnl EXTRA_CFLAGS='-DMAC_OSX_TCL -DHAVE_CFBUNDLE -DUSE_VFORK -DTCL_DEFAULT_ENCODING=\"utf-8\"'
AC_SUBST(CC)
AC_SUBST(DEFS)
AC_SUBST(TCL_DBGX)
CFLAGS_DEBUG="-g"
AC_SUBST(CFLAGS_DEBUG)
CFLAGS_OPTIMIZE="-Os"
AC_SUBST(CFLAGS_OPTIMIZE)
AC_SUBST(LDFLAGS_DEBUG)
AC_SUBST(LDFLAGS_OPTIMIZE)
TCL_SHARED_BUILD=1
AC_SUBST(TCL_SHARED_BUILD)
AC_SUBST(CFG_TCL_EXPORT_FILE_SUFFIX)
AC_SUBST(DL_LIBS)
AC_SUBST(LIBS)
AC_SUBST(MATH_LIBS)
TCL_LIB_FILE=libtcl8.4.so
AC_SUBST(TCL_LIB_FILE)
TCL_NEEDS_EXP_FILE=0
AC_SUBST(TCL_NEEDS_EXP_FILE)
AC_SUBST(SHLIB_CFLAGS)
AC_SUBST(CFLAGS_WARNING)
AC_SUBST(EXTRA_CFLAGS)
AC_SUBST(SHLIB_LD)
AC_SUBST(SHLIB_SUFFIX)
AC_SUBST(STLIB_LD)
AC_SUBST(SHLIB_LD_LIBS)
TCL_LIB_FLAG='-ltcl8.4'
AC_SUBST(TCL_LIB_FLAG)
TCL_BUILD_LIB_SPEC='-L../../libtcl/.libs -ltcl8.4 -Wl,--rpath -Wl,${libdir}'
AC_SUBST(TCL_BUILD_LIB_SPEC)
TCL_INCLUDE_SPEC='-I${prefix}/include -I../../libtcl/generic'
AC_SUBST(TCL_INCLUDE_SPEC)
TCL_LIB_VERSIONS_OK='ok'
AC_SUBST(TCL_LIB_VERSIONS_OK)
AC_SUBST(TCL_LIB_SPEC)
AC_SUBST(CFG_TCL_SHARED_LIB_SUFFIX)
AC_SUBST(CFG_TCL_UNSHARED_LIB_SUFFIX)
TCL_SRC_DIR='../../libtcl'
AC_SUBST(TCL_SRC_DIR)
TCL_STUB_LIB_FILE='libtclstub8.4.a'
AC_SUBST(TCL_STUB_LIB_FILE)
TCL_STUB_LIB_FLAG='-ltclstub8.4'
AC_SUBST(TCL_STUB_LIB_FLAG)
AC_SUBST(TCL_BUILD_STUB_LIB_SPEC)
AC_SUBST(TCL_STUB_LIB_SPEC)
TCL_BUILD_STUB_LIB_PATH="../../libtcl/.libs/libtclstub8.4.a"
AC_SUBST(TCL_BUILD_STUB_LIB_PATH)
TCL_STUB_LIB_PATH='${prefix}/lib/libtclstub8.4.a'
AC_SUBST(TCL_STUB_LIB_PATH)
TCL_THREADS=0
AC_SUBST(TCL_THREADS)


d3545 16
d3758 2
a3759 14
	src/other/libtcl/Makefile
	src/other/libtcl/doc/Makefile
	src/other/libtcl/generic/Makefile
	src/other/libtcl/library/Makefile
	src/other/libtcl/library/dde/Makefile
	src/other/libtcl/library/encoding/Makefile
	src/other/libtcl/library/http/Makefile
	src/other/libtcl/library/http1.0/Makefile
	src/other/libtcl/library/msgcat/Makefile
	src/other/libtcl/library/opt/Makefile
	src/other/libtcl/library/reg/Makefile
	src/other/libtcl/library/tcltest/Makefile
	src/other/libtcl/unix/Makefile
	src/other/libtcl/unix/tclConfig.sh
a3760 11
	src/other/libtk/Makefile
	src/other/libtk/doc/Makefile
	src/other/libtk/generic/Makefile
	src/other/libtk/library/Makefile
	src/other/libtk/library/demos/Makefile
	src/other/libtk/library/demos/images/Makefile
	src/other/libtk/library/images/Makefile
	src/other/libtk/library/msgs/Makefile
	src/other/libtk/library/pkgIndex.tcl
	src/other/libtk/unix/Makefile
	src/other/libtk/unix/tkConfig.sh
d3821 1
a3821 1
# ac_output won't update the brlcad_config.h.in template timestamp if
d3826 3
d3942 9
@


14.311
log
@add automatic generation of the teach-jove script during configure
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.310 2007/02/25 19:03:08 brlcad Exp $
d88 1
a88 1
AC_REVISION($Revision: 14.310 $)
d2019 1
@


14.310
log
@autoconf was complaining about AM_C_PROTOTYPES being called after AC_C_INLINE and AC_C_CONST, so move it up before them
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.309 2007/02/24 20:07:58 brlcad Exp $
d88 1
a88 1
AC_REVISION($Revision: 14.309 $)
d3689 1
@


14.309
log
@loop over potential locations instead of just testing for one.  this helps subdir configures clean up too if added to their configure.
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.308 2007/02/24 18:28:22 brlcad Exp $
d88 1
a88 1
AC_REVISION($Revision: 14.308 $)
d1881 4
a1899 5
dnl AC_C_PROTOTYPES
AM_C_PROTOTYPES

AC_DEFINE(USE_PROTOTYPES,1,heh)

@


14.308
log
@be a little more liberal on the -all_load libtool script fix to avoid escaping the dollarsign
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.307 2007/02/21 23:36:40 brlcad Exp $
d88 1
a88 1
AC_REVISION($Revision: 14.307 $)
d3789 15
a3803 13
	if test "x$ac_top_builddir" = "x" ; then
	    libtoolscript="libtool"
	else
	    libtoolscript="${ac_top_builddir}/libtool"
	fi
	if test -f ${libtoolscript} ; then
	    if test -w ${libtoolscript} ; then
		# remove any -all_load option.
		# provokes libtool linker bug with C++ libraries.
		sed 's/-all_load.*convenience//g' < $libtoolscript > ${libtoolscript}.sed
		if test ! "x`cat ${libtoolscript}`" = "x`cat ${libtoolscript}.sed`" ; then
		    AC_MSG_RESULT([Found -all_load in libtool script, removing])
		    cp ${libtoolscript}.sed ${libtoolscript}
d3805 2
a3807 2
	    else
		AC_MSG_WARN([libtool script exists but is not writable so not attempting to edit])
d3809 1
a3809 1
	fi
d3813 1
@


14.307
log
@updating the timestamp seems to cause an empty include/brlcad_config.h.in under at least some other versions of autoconf/autoheader so disable it for now until the reason can be determined.
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.306 2007/02/17 06:56:33 brlcad Exp $
d88 1
a88 1
AC_REVISION($Revision: 14.306 $)
d3798 1
a3798 1
		sed 's/-all_load[[ 	]]*[\\\]$convenience//g' < $libtoolscript > ${libtoolscript}.sed
@


14.306
log
@AM_PROG_CC_STD was deprecated and later made obsolete by automake 1.8 with the functionality merged into AC_PROG_CC.  the macro attempted to ensure that the compiler is running in 'ansi mode'.  add AM_PROG_CC_C_O to handle compilation of non-libtool stuff with compilers that don't happen to support the common -c -o syntax.  latest automake seems to be complaining about the option being missing/needed (reported by IriX64) during autogen.sh.
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.305 2007/02/14 22:04:09 brlcad Exp $
d88 1
a88 1
AC_REVISION($Revision: 14.305 $)
d3781 1
a3781 1
touch include/brlcad_config.h.in
@


14.305
log
@remove libtkGLX.  it was only being compiled on IRIX, but actually not even being used there.
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.304 2007/02/13 21:51:23 brlcad Exp $
d88 1
a88 1
AC_REVISION($Revision: 14.304 $)
d989 1
a989 1
AM_PROG_CC_STDC
@


14.304
log
@reorganize so the eval expansion happens only once.
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.303 2007/02/13 21:44:20 brlcad Exp $
d88 1
a88 1
AC_REVISION($Revision: 14.303 $)
a3329 3
# XXX only irix can build libtkglx right now?
AM_CONDITIONAL(BUILD_LIBTKGLX, [test "x$host_os" = "xirix6.5"])

a3717 1
	src/other/libtkGLX/Makefile
@


14.303
log
@compensate for an autoconf inconsistency issue where apparently newer 2.60+ autoconf is setting datadir to datarootdir as a default, causing a need to evaluate datadir before using it with things like AC_DEFINE and AC_SUBST values.  do an explicit eval echo like is done for the summary printing.

thanks to IriX64 for noticing the problem and helping pinpoint the cause.  the problem affected most BRLCAD_DATA installation paths as well as awf and brlman (which use BRLCAD_DATA).
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.302 2007/02/08 20:19:52 erikgreenwald Exp $
d88 1
a88 1
AC_REVISION($Revision: 14.302 $)
d188 3
a190 2
# compensate for autoconf inconsistencies
AC_DEFINE_UNQUOTED([BRLCAD_ROOT], "`eval \"echo $bc_prefix\"`", "Location BRL-CAD will install to")
d205 1
a205 1
	BRLCAD_ROOT="`eval \"echo $bc_prefix\"`"
d220 3
a222 2
# compensate for autoconf inconsistencies
AC_DEFINE_UNQUOTED([BRLCAD_DATA], "`eval \"echo $bc_data_dir\"`", "Location BRL-CAD resources will install to")
d237 1
a237 1
	BRLCAD_DATA="`eval \"echo $bc_data_dir\"`"
@


14.302
log
@If told not to build OpenNURBS and cannot find one installed, do not fail.
"Chomp" the surrounding whitespace on the OPENNURBS variable so "x$OPENNURBS"
will resolve to "x" instead of "x ".
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.301 2007/02/06 23:20:56 brlcad Exp $
d88 1
a88 1
AC_REVISION($Revision: 14.301 $)
d188 2
a189 1
AC_DEFINE_UNQUOTED([BRLCAD_ROOT], "${bc_prefix}", "Location BRL-CAD will install to")
d203 2
a204 1
	BRLCAD_ROOT="${bc_prefix}"
d219 2
a220 1
AC_DEFINE_UNQUOTED([BRLCAD_DATA], "${bc_data_dir}", "Location BRL-CAD resources will install to")
d234 2
a235 1
	BRLCAD_DATA="${bc_data_dir}"
@


14.301
log
@since AC_OUTPUT won't touch the brlcad_config.h.in template if it already exists and is unmodified, explicitly touch the file.  this of course updates the timestamp and avoids an unnecessary invocation of config.status and autoheader in the include/ directory on subsequent compilations.
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.300 2007/02/06 19:54:25 jlowenz Exp $
d88 1
a88 1
AC_REVISION($Revision: 14.300 $)
d2335 1
a2335 4
	    BC_RETRY_CONFIGURE([$this], [$args])
	    AC_MSG_NOTICE([}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}])
	    AC_MSG_NOTICE([Try adding --enable-opennurbs-build and/or --enable-c++])
	    AC_MSG_ERROR([*** Building openNURBS was disabled, yet no system openNURBS library was found ***])
d2352 1
a2352 1
    OPENNURBS="$LIBOPENNURBS $LIBSTDCXX"
d3317 2
a3318 1
AM_CONDITIONAL(WITH_OPENNURBS, [test "x$OPENNURBS" != "x"])
@


14.300
log
@Add support for building the Pro/E converter, and specifying Pro/E installation path.
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.299 2007/02/03 07:50:06 brlcad Exp $
d88 1
a88 1
AC_REVISION($Revision: 14.299 $)
d3778 6
@


14.299
log
@provide CPPFLAGS for tcl, tk, itcl, itk, and termlib
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.298 2007/02/03 07:20:29 brlcad Exp $
d88 1
a88 1
AC_REVISION($Revision: 14.298 $)
d347 1
a347 1
BC_ARG_ENABLE([build_proe], [proe-plugin-build], [Enable compilation of Pro/Engineer plugin], [no])
d401 3
d557 11
a567 11
BC_ARG_ALIAS([build_proe], [proe])
BC_ARG_ALIAS([build_proe], [proe-build])
BC_ARG_ALIAS([build_proe], [proe-plugin])
BC_ARG_ALIAS([build_proe], [proengineer])
BC_ARG_ALIAS([build_proe], [proengineer-plugin])
BC_ARG_ALIAS([build_proe], [pro-engineer])
BC_ARG_ALIAS([build_proe], [pro-engineer-plugin])
BC_ARG_ALIAS([build_proe], [proengineer-build])
BC_ARG_ALIAS([build_proe], [proengineer-plugin-build])
BC_ARG_ALIAS([build_proe], [pro-engineer-build])
BC_ARG_ALIAS([build_proe], [pro-engineer-plugin-build])
d633 3
d752 5
a756 5
	if test "x$bc_build_proe" = "x$bc_build_proe_default" ; then
		if test "x$set_everything" = "xno" ; then
			bc_build_proe=no
		fi
	fi
d916 2
a917 2
AC_MSG_CHECKING(whether to compile the Pro-Engineer plugin)
AC_MSG_RESULT($bc_build_proe)
d964 3
d1408 9
d1627 32
d2991 33
d3310 1
a3310 1
AM_CONDITIONAL(BUILD_PROE, [test "x$bc_build_proe" = "xyes"])
d3321 1
@


14.298
log
@remove the libutahrle headers (utah raster toolkit) from our include/ directory, and move them up to src/other/libutahrle/include.  let configure set RLE_CPPFLAGS and set accordingly amongst the various tools/libraries that need to know the path.
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.297 2007/02/03 03:44:45 brlcad Exp $
d88 1
a88 1
AC_REVISION($Revision: 14.297 $)
d2083 1
a2089 1
    PNG_CPPFLAGS=''
d2187 1
a2193 1
    LIBZ_CPPFLAGS=''
d2244 1
a2251 1
	RLE_CPPFLAGS=''
a2305 1
    OPENNURBS_CPPFLAGS=''
d2388 1
d2393 1
d2409 1
d2490 1
d2495 1
d2511 1
d2575 3
d2581 2
d2593 2
d2778 1
d2781 1
d2788 1
@


14.297
log
@test opennurbs regardless of setting.  ws, indent to 4 and tab at 8 like everything else for the entire functionality section.
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.296 2007/02/03 01:54:25 brlcad Exp $
d88 1
a88 1
AC_REVISION($Revision: 14.296 $)
d2246 1
a2246 1
    RLE_CPPFLAGS='${top_srcdir}/src/other/libutahrle'
d2256 1
d3620 1
@


14.296
log
@remove duplication of zlib's public headers from our include/ dir; have configure provide a LIBZ_CPPFLAGS that points to src/other/zlib instead.
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.295 2007/02/02 10:03:13 brlcad Exp $
d88 1
a88 1
AC_REVISION($Revision: 14.295 $)
d1221 9
a1229 7
# checking for rle_hdr_init is NOT sufficient to get urt 3.x
PRELIBS="$LIBS"
LIBS="$LIBS $LIBM"
AC_CHECK_LIB(utahrle, rle_getraw, utahrle_link_works=yes ; UTAHRLE="-lutahrle $LIBM",
    [AC_CHECK_LIB(rle, rle_getraw, utahrle_link_works=yes ; UTAHRLE="-lrle $LIBM")]
)
LIBS="$PRELIBS"
d2052 2
a2053 2
	int i = png_access_version_number();
	return 0;
d2055 1
a2055 3
	],
	[png_works=yes]
)
d2062 1
a2062 1
	build_brlcad_png=yes
d2064 14
a2077 15
	if test "x$bc_build_png" = "xno" ; then
		if test "x$png_works" != "xyes" ; then
			AC_MSG_NOTICE([libpng was disabled, but no system png library was found])
			BC_RETRY_CONFIGURE([$this], [$args])
			AC_MSG_NOTICE([}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}])
			AC_MSG_NOTICE([Try adding --enable-png-build])
			AC_MSG_ERROR([*** Building libpng was disabled, yet no system png library was found ***])
		fi
	else
		dnl automatic detection, we need to build if it won't run or won't link
		if test "x$png_works" = "xno" ; then
			build_brlcad_png=yes
		elif test "x$png_link_works" = "xno" ; then
			build_brlcad_png=yes
		fi
d2079 1
d2084 3
a2086 3
	PNG='${top_builddir}/src/other/libpng/libpng.la'
	PNG_CPPFLAGS='-I${top_srcdir}/src/other/libpng'
	AC_MSG_RESULT(yes)
d2088 3
a2090 3
	PNG="$LIBPNG"
	PNG_CPPFLAGS=''
	AC_MSG_RESULT(no)
d2108 4
a2111 4
  regex_t re;
  regcomp(&re, "abc", REG_EXTENDED);
  regexec(&re, "", 0, 0, 0);
  return 0;
d2113 1
a2113 3
	],
	[regex_works=yes]
)
d2120 1
a2120 1
	build_brlcad_regex=yes
d2122 12
a2133 13
	if test "x$bc_build_regex" = "xno" ; then
		if test "x$regex_works" != "xyes" ; then
			AC_MSG_NOTICE([libregex was disabled, but no system regular expression library was found])
			BC_RETRY_CONFIGURE([$this], [$args])
			AC_MSG_NOTICE([}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}])
			AC_MSG_NOTICE([Try adding --enable-regex-build])
			AC_MSG_ERROR([*** Building libregex was disabled, yet no system regex was found ***])
		fi
	else
		dnl automatic detection
		if test "x$regex_works" = "xno" ; then
			build_brlcad_regex=yes
		fi
d2135 1
d2140 2
a2141 2
	REGEX='${top_builddir}/src/other/libregex/libregex.la'
	AC_MSG_RESULT(yes)
d2143 2
a2144 2
	REGEX="$LIBREGEX"
	AC_MSG_RESULT(no)
d2158 2
a2159 2
  char *zlibver = ZLIB_VERSION;
  return 0;
d2161 1
a2161 3
	],
	[zlib_works=yes]
)
d2168 1
a2168 1
	build_brlcad_zlib=yes
d2170 12
a2181 13
	if test "x$bc_build_zlib" = "xno" ; then
		if test "x$zlib_works" != "xyes" ; then
			AC_MSG_NOTICE([libz was disabled, but no system zlib compression library was found])
			BC_RETRY_CONFIGURE([$this], [$args])
			AC_MSG_NOTICE([}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}])
			AC_MSG_NOTICE([Try adding --enable-zlib-build])
			AC_MSG_ERROR([*** Building libz was disabled, yet no system zlib compression library was found ***])
		fi
	else
		dnl automatic detection
		if test "x$zlib_works" = "xno" ; then
			build_brlcad_zlib=yes
		fi
d2183 1
d2188 3
a2190 3
	LIBZ='${top_builddir}/src/other/libz/libz.la'
	LIBZ_CPPFLAGS='-I${top_srcdir}/src/other/libz'
	AC_MSG_RESULT(yes)
d2192 3
a2194 3
	LIBZ="$LIBZLIB"
	LIBZ_CPPFLAGS=''
	AC_MSG_RESULT(no)
d2206 1
a2206 1
	LIBS="$LIBS $UTAHRLE"
d2216 1
a2216 3
	],
	[urt_works=yes]
)
d2218 1
a2218 1
	LIBS="$PRELIBS"
d2225 1
a2225 1
	build_brlcad_urt=yes
d2227 12
a2238 13
	if test "x$bc_build_urt" = "xno" ; then
		if test "x$urt_works" != "xyes" ; then
			AC_MSG_NOTICE([Utah Raster Toolkit was disabled, but no system URT/RLE library was found ***])
			BC_RETRY_CONFIGURE([$this], [$args])
			AC_MSG_NOTICE([}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}])
			AC_MSG_NOTICE([Try adding --enable-urt-build])
			AC_MSG_ERROR([*** Utah Raster Toolkit was disabled, yet no usable RLE system library was found ***])
		fi
	else
		dnl automatic detection
		if test "x$urt_works" = "xno" ; then
			build_brlcad_urt=yes
		fi
d2240 1
d2245 3
a2247 2
	RLE='${top_builddir}/src/other/libutahrle/libutahrle.la'
	AC_MSG_RESULT(yes)
d2249 5
a2253 4
	if test "x$utahrle_link_works" = "xyes" ; then
		RLE="$UTAHRLE"
	fi
	AC_MSG_RESULT(no)
d2261 5
a2265 6
if test "x$bc_build_opennurbs" != "xno" ; then
    AC_MSG_CHECKING(for openNURBS functionality)
    PRELDFLAGS="$LDFLAGS"
    LDFLAGS="$LDFLAGS $LIBOPENNURBS"
    AC_LANG_PUSH([C++])
    AC_TRY_RUN([
d2268 2
a2269 2
  int version = ON::Version();
  return 0;
d2271 4
a2274 6
		],
		[opennurbs_works=yes])
    AC_LANG_POP
    LDFLAGS="$PRELDFLAGS"
    AC_MSG_RESULT($opennurbs_works)
fi
d2279 1
a2279 1
	build_brlcad_opennurbs=yes
d2281 12
a2292 13
	if test "x$bc_build_opennurbs" = "xno" ; then
		if test "x$opennurbs_works" != "xyes" ; then
			AC_MSG_NOTICE([openNURBS was disabled, but no system openNURBS library was found])
			BC_RETRY_CONFIGURE([$this], [$args])
			AC_MSG_NOTICE([}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}])
			AC_MSG_NOTICE([Try adding --enable-opennurbs-build and/or --enable-c++])
			AC_MSG_ERROR([*** Building openNURBS was disabled, yet no system openNURBS library was found ***])
		fi
	else
		dnl automatic detection
		if test "x$opennurbs_works" = "xno" ; then
			build_brlcad_opennurbs=yes
		fi
d2294 1
d2300 3
a2302 3
	OPENNURBS='${top_builddir}/src/other/openNURBS/libopenNURBS.la ${LIBSTDCXX}'
	OPENNURBS_CPPFLAGS='-I${top_srcdir}/src/other/openNURBS'
	AC_MSG_RESULT(yes)
d2304 3
a2306 3
	OPENNURBS="$LIBOPENNURBS $LIBSTDCXX"
	OPENNURBS_CPPFLAGS=''
	AC_MSG_RESULT(no)
d2318 1
a2318 1
	LIBS="$LIBS $LIBTCL"
d2350 1
a2350 3
	],
	[tcl_works=yes]
)
d2352 1
a2352 1
	LIBS="$PRELIBS"
d2359 1
a2359 1
	build_brlcad_tcl=yes
d2361 12
a2372 13
	if test "x$bc_build_tcl" = "xno" ; then
		if test "x$tcl_works" = "xno" ; then
			AC_MSG_NOTICE([libtcl was disabled, but no system Tcl library was found])
			BC_RETRY_CONFIGURE([$this], [$args])
			AC_MSG_NOTICE([}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}])
			AC_MSG_NOTICE([Try adding --enable-tcl-build])
			AC_MSG_ERROR([*** Tcl was disabled, yet no usable libtcl system library was found ***])
		fi
	else
		dnl automatic detection
		if test "x$tcl_works" = "xno" ; then
			build_brlcad_tcl=yes
		fi
d2374 1
d2389 3
a2391 3
	AC_MSG_RESULT(yes)
	TCL='${top_builddir}/src/other/libtcl/libtcl${TCL_VERSION}.la '"${SOCKET}"
	TCLSTUB='${top_builddir}/src/other/libtcl/generic/libtclstub.la'
d2393 11
a2403 11
	AC_MSG_RESULT(no)
	if test "x$tcl_link_works" = "xyes" ; then
		TCL="$LIBTCL"
	else
		AC_MSG_WARN([Unable to link against a system Tcl library])
	fi
	if test "x$tclstub_link_works" = "xyes" ; then
		TCLSTUB="$LIBTCLSTUB"
	else
		AC_MSG_WARN([Unable to link against a system Tclstub library])
	fi
d2415 1
a2415 1
	LIBS="$LIBS $LIBTK $LIBTCL"
d2452 1
a2452 3
	],
	[tk_works=yes]
)
d2454 1
a2454 1
	LIBS="$PRELIBS"
d2461 1
a2461 1
	build_brlcad_tk=yes
d2463 12
a2474 13
	if test "x$bc_build_tk" = "xno" ; then
		if test "x$tk_works" = "xno" ; then
			AC_MSG_NOTICE([libtk was disabled, but no system Tk library was found])
			BC_RETRY_CONFIGURE([$this], [$args])
			AC_MSG_NOTICE([}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}])
			AC_MSG_NOTICE([Try adding --enable-tk-build])
			AC_MSG_ERROR([*** Tk was disabled, yet no usable libtk system library was found ***])
		fi
	else
		dnl automatic detection
		if test "x$tk_works" = "xno" ; then
			build_brlcad_tk=yes
		fi
d2476 1
d2488 3
a2490 3
	AC_MSG_RESULT(yes)
	TK='${top_builddir}/src/other/libtk/libtk${TK_VERSION}.la'
	TKSTUB='${top_builddir}/src/other/libtk/generic/libtkstub.la'
d2492 11
a2502 11
	AC_MSG_RESULT(no)
	if test "x$tk_link_works" = "xyes" ; then
		TK="$LIBTK"
	else
		AC_MSG_WARN([Unable to link against a system Tk library])
	fi
	if test "x$tkstub_link_works" = "xyes" ; then
		TKSTUB="$LIBTKSTUB"
	else
		AC_MSG_WARN([Unable to link against a system Tkstub library])
	fi
d2514 1
a2514 1
	LIBS="$LIBS $LIBITCL $LIBTCL"
d2537 1
a2537 3
	],
	[itcl_works=yes]
)
d2539 1
a2539 1
	LIBS="$PRELIBS"
d2546 1
a2546 1
	build_brlcad_itcl=yes
d2548 12
a2559 13
	if test "x$bc_build_itcl" = "xno" ; then
		if test "x$itcl_works" = "xno" ; then
			AC_MSG_NOTICE([incrTcl was disabled, but no system incrTcl library was found])
			BC_RETRY_CONFIGURE([$this], [$args])
			AC_MSG_NOTICE([}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}])
			AC_MSG_NOTICE([Try adding --enable-itcl-build])
			AC_MSG_ERROR([*** incrTcl was disabled, yet no usable libitcl system library was found ***])
		fi
	else
		dnl automatic detection
		if test "x$itcl_works" = "xno" ; then
			build_brlcad_itcl=yes
		fi
d2561 1
d2570 3
a2572 3
	ITCL='${top_builddir}/src/other/incrTcl/libitcl${ITCL_VERSION}.la'
	ITK='${top_builddir}/src/other/incrTcl/libitk${ITCL_VERSION}.la'
	AC_MSG_RESULT(yes)
d2574 5
a2578 5
	if test "x$itcl_link_works" = "xyes" ; then
		ITCL="$LIBITCL"
		ITK="$LIBITK"
	fi
	AC_MSG_RESULT(no)
d2590 1
a2590 1
	LIBS="$LIBS $LIBTCL"
d2610 1
a2610 3
	],
	[iwidgets_works=yes]
)
d2612 1
a2612 1
	LIBS="$PRELIBS"
d2619 1
a2619 1
	build_brlcad_iwidgets=yes
d2621 12
a2632 13
	if test "x$bc_build_iwidgets" = "xno" ; then
		if test "x$iwidgets_works" = "xno" ; then
			AC_MSG_NOTICE([iwidgets was disabled, but no system iwidgets package was found])
			BC_RETRY_CONFIGURE([$this], [$args])
			AC_MSG_NOTICE([}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}])
			AC_MSG_NOTICE([Try adding --enable-iwidgets-build])
			AC_MSG_ERROR([*** iwidgets was disabled, yet no usable iwidgets system package was found ***])
		fi
	else
		dnl automatic detection
		if test "x$iwidgets_works" = "xno" ; then
			build_brlcad_iwidgets=yes
		fi
d2634 1
d2651 7
a2657 7
   build_brlcad_blt=yes
   BLT='${top_builddir}/src/other/blt/libblt${BLT_VERSION}.la'
   AC_MSG_RESULT(yes)
else
   build_brlcad_blt=no
   BLT=""
   AC_MSG_RESULT(no)
d2667 7
a2673 7
   build_brlcad_tkimg=yes
   TKIMG='${top_builddir}/src/other/tkimg/tkimg${TKIMG_VERSION}.la'
   AC_MSG_RESULT(yes)
else
   build_brlcad_tkimg=no
   TKIMG=""
   AC_MSG_RESULT(no)
d2689 1
a2689 1
     return NULL;
d2692 4
a2695 4
     pthread_t thread;
     pthread_create(&thread, (void *)0, thread_hook, (void *)0);
     pthread_join(thread, NULL);
     return 0;
d2697 1
a2697 3
	],
	[thread_works=yes]
)
d2735 3
a2737 3
  char buffer[2048] = {0};
  int result = tgetent(buffer, "vt100");
  return 0;
d2739 1
a2739 3
	],
	[termlib_works=yes]
)
d2746 1
a2746 1
	build_brlcad_termlib=yes
d2748 12
a2759 13
	if test "x$bc_build_termlib" = "xno" ; then
		if test "x$termlib_works" != "xyes" ; then
			AC_MSG_NOTICE([termlib was disabled, but no system terminal library was found])
			BC_RETRY_CONFIGURE([$this], [$args])
			AC_MSG_NOTICE([}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}])
			AC_MSG_NOTICE([Try adding --enable-termlib-build])
			AC_MSG_ERROR([*** Building termlib was disabled, yet no system termcap or curses library was found ***])
		fi
	else
		dnl automatic detection
		if test "x$termlib_works" = "xno" ; then
			build_brlcad_termlib=yes
		fi
d2761 1
d2766 2
a2767 2
	TERMLIB='${top_builddir}/src/other/libtermlib/libtermlib.la'
	AC_MSG_RESULT(yes)
d2769 2
a2770 2
	TERMLIB="$LIBTERMLIB"
	AC_MSG_RESULT(no)
d2825 1
a2825 1
	AC_DEFINE(HAS_SGIGL, 1, Irix GL is present.)
d2843 6
a2848 6
	if test "x$pointer_size" != "x8" ; then
		AC_MSG_NOTICE([}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}])
		AC_MSG_NOTICE([Try removing --enable-64bit-build or modifying the CFLAGS/LDFLAGS])
		AC_MSG_ERROR([*** Building 64-bit was requested, yet the build seems to be non-64-bit ***])
	fi
	build_brlcad_64bit=yes
d2850 5
a2854 6
	if test "x$bc_build_64bit" = "xno" ; then
		if test "x$pointer_size" = "x8" ; then
			AC_MSG_NOTICE([}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}])
			AC_MSG_NOTICE([Try removing --disable-64bit-build or modifying the CFLAGS/LDFLAGS])
			AC_MSG_ERROR([*** Building non-64-bit was requested, yet the build seems to be 64-bit ***])
		fi
d2856 1
d2858 12
a2869 12
	dnl automatic detection
	if test "x$pointer_size" = "x8" ; then
		build_brlcad_64bit="yes"
	elif test "x$pointer_size" = "x4" ; then
		build_brlcad_64bit="no (32-bit)"
	elif test "x$pointer_size" = "x2" ; then
		build_brlcad_64bit="no (16-bit)"
	elif test "x$pointer_size" = "x1" ; then
		build_brlcad_64bit="no (8-bit)"
	else
		AC_MSG_WARN([Unknown pointer size: $pointer_size])
	fi
d2876 1
a2876 1
	build_brlcad_jove=yes
d2878 1
a2878 1
	build_brlcad_jove=no	# body for the sake of body
d2880 4
a2883 4
	# enable jove if no suitable system emacs/jove was found
	if test "x$BCEDITOR" = "x" ; then
		build_brlcad_jove=yes
	fi
d2938 8
a2945 8
  GLboolean values;
  void (*func)() = glBegin;
  if (GL_FALSE || argc > 1) {
    func(GL_POINTS);
    glGetBooleanv(GL_DEPTH_TEST, &values);
    glEnd();
  }
  return 0;
d2947 1
a2947 3
	       ],
	       [opengl_works=yes]
	      )
d2982 8
a2989 8
  GLboolean values;
  void (*func)() = glBegin;
  if (GL_FALSE || argc > 1) {
    func(GL_POINTS);
    glGetBooleanv(GL_DEPTH_TEST, &values);
    glEnd();
  }
  return 0;
d2991 1
a2991 3
	       ],
	       [wgl_works=yes]
	      )
d3034 3
a3036 3
       XPoint pt;
       pt.x = pt.y = 0;
       return pt.x;
d3038 1
a3038 1
		],[x11_works=yes])
d3047 3
a3049 3
	XModifierKeymap *xmkm;
	xmkm=XNewModifiermap(1);
	return xmkm==NULL;
d3051 1
a3051 1
		    ],,x11_works=no)
d3083 6
a3088 6
	if test "x$SDL_CONFIG" != "x" ; then
		AM_PATH_SDL(1.2.0,,AC_MSG_ERROR([Cannot find SDL.]))
		AC_SUBST(SDL_CFLAGS)
		AC_SUBST(SDL_LIBS)
		sdl_works="yes"
	fi
d3098 3
a3100 3
	if test "x$PYTHON" != "x" ; then
		python_works="yes"
	fi
d3112 9
a3120 6
	if test "x$python_works" = "xyes" ; then
		if test "x$sdl_works" = "xyes" ; then
			build_brlcad_adrt="yes"
		else
			build_brlcad_adrt="no (need sdl)"
		fi
d3122 1
a3122 5
		if test "x$sdl_works" = "xyes" ; then
			build_brlcad_adrt="no (need python)"
		else
			build_brlcad_adrt="no (need python and sdl)"
		fi
d3124 1
d3126 14
a3139 14
	build_brlcad_adrt="yes"
	if test "x$sdl_works" = "xno" ; then
		AC_MSG_NOTICE([ADRT requires SDL (and Python)])
		BC_RETRY_CONFIGURE([$this], [$args])
		AC_MSG_NOTICE([}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}])
		AC_MSG_NOTICE([Try adding --disable-adrt-build])
		AC_MSG_ERROR([*** Using ADRT was requested, yet no system SDL library was found ***])
	elif test "x$python_works" = "xno" ; then
		AC_MSG_NOTICE([ADRT requires Python (and SDL)])
		BC_RETRY_CONFIGURE([$this], [$args])
		AC_MSG_NOTICE([}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}])
		AC_MSG_NOTICE([Try adding --disable-adrt-build])
		AC_MSG_ERROR([*** Using ADRT was requested, yet no system Python interpreter was found ***])
	fi
d3156 1
a3156 3
	],
	[dials_and_buttons=yes]
)
d3158 2
a3159 2
	AC_DEFINE(IR_KNOBS, 8, [Turn on SGI knobs])
	AC_DEFINE(IR_BUTTONS, 32, [Turn on SGI buttons])
d3166 6
a3171 6
	# XXX the code that relies on this will be going away, but until then..
	if test "x$build_brlcad_64bit" = "xyes" ; then
		CFLAGS="$CFLAGS -DIRIX64=65"
	else
		CFLAGS="$CFLAGS -DIRIX=6"
	fi
d3181 2
a3182 2
	ECHO=echo
	AC_MSG_NOTICE([ECHO was not defined by configure so defining manually])
d3186 1
a3186 1
	ECHO_N=
@


14.295
log
@check for -lstdc++ properly like any other library.  add conditionals around the openNURBS checks so if it's disabled, the checks are not performed.  rephrase the availability summary (we're not necessarily linking them, they're just available)
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.294 2007/02/02 08:36:21 brlcad Exp $
d88 1
a88 1
AC_REVISION($Revision: 14.294 $)
d1214 3
a1216 1
AC_CHECK_LIB(z, deflate, LIBZLIB="-lz")
d2193 1
d2197 1
d2201 1
@


14.294
log
@remove the png headers from our include directory.  png_cppflags are now provided by configure and appropriately set to src/other/libpng if we're not using a system libpng.  this should help to avoid header conflicts aside from just unnecessarily duplicating 3rd party headers. use the new png_cppflags as appropriate, though have to add it to _CFLAGS since per target _CPPFLAGS support wasn't added until automake 1.7 (and brl-cad allows anything 1.6.0+).
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.293 2007/01/27 01:07:30 brlcad Exp $
d88 1
a88 1
AC_REVISION($Revision: 14.293 $)
d1228 1
d1230 3
a1232 1
AC_CHECK_LIB(openNURBS, onmalloc, LIBOPENNURBS="-lopenNURBS")
d1367 8
d2260 6
a2265 5
AC_MSG_CHECKING(for openNURBS functionality)
PRELDFLAGS="$LDFLAGS"
LDFLAGS="$LDFLAGS $LIBOPENNURBS"
AC_LANG_PUSH([C++])
AC_TRY_RUN([
d2271 6
a2276 6
	],
	[opennurbs_works=yes]
)
AC_LANG_POP
LDFLAGS="$PRELDFLAGS"
AC_MSG_RESULT($opennurbs_works)
d2300 1
d2302 1
a2302 1
	OPENNURBS='${top_builddir}/src/other/openNURBS/libopenNURBS.la -lstdc++'
d2306 1
a2306 1
	OPENNURBS="$LIBOPENNURBS -lstdc++"
d2790 1
a2790 1
AC_MSG_CHECKING(whether to link with the math library)
d2795 1
a2795 1
AC_MSG_CHECKING(for socket library availability)
d2800 1
a2800 1
AC_MSG_CHECKING(for network socket library availablity)
d2805 1
a2805 1
AC_MSG_CHECKING(for malloc library availability)
d2810 1
a2810 1
AC_MSG_CHECKING(for mx library availability)
d2815 1
a2815 1
AC_MSG_CHECKING(for dynamic linker library availability)
d2825 1
a2825 1
AC_MSG_CHECKING(whether to link with the OpenGL library)
d2830 1
a2830 1
AC_MSG_CHECKING(whether to link with the WindowsGL library)
d2835 1
a2835 1
AC_MSG_CHECKING(whether to link with the SGI graphics library)
d2843 1
a2843 1
AC_MSG_CHECKING(whether to link with the Solaris lexer library)
d2847 5
@


14.293
log
@ws, last test..looking good ;)
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.292 2007/01/25 06:03:20 brlcad Exp $
d88 1
a88 1
AC_REVISION($Revision: 14.292 $)
d2072 1
d2076 1
d2080 1
@


14.292
log
@whoops, that was just testing on the opt/optimized. go ahead and add an alias for enable-opt anyways.
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.291 2007/01/24 19:15:30 brlcad Exp $
d88 1
a88 1
AC_REVISION($Revision: 14.291 $)
d286 1
a286 1
# enable everything 
d1101 1
a1101 1
	AM_PATH_PYTHON(2.0, 
d1167 1
a1167 1
	    	[AC_CHECK_LIB(terminfo, tputs, LIBTERMLIB="-lterminfo",
d1289 2
a1290 2
        [AC_CHECK_LIB(itcl32, Itcl_Init, itcl_link_works=yes ; LIBITCL="-litcl32",
            [AC_CHECK_LIB(itcl, Itcl_Init, itcl_link_works=yes ; LIBITCL="-litcl")]
d1300 3
a1302 3
        [AC_CHECK_LIB(itk32, Itk_Init, itk_link_works=yes ; LIBITK="-litk32",
            [AC_CHECK_LIB(itk, Itk_Init, itk_link_works=yes ; LIBITK="-litk")]
        )]
d1639 1
a1639 1
                         * uses an int. */
d1934 1
a1934 1
	setlocale \	
d1977 1
a1977 1
		          AC_DEFINE(NO_STRING_H,, From Tcl -- No string)])
d2097 1
a2097 1
        ],
d2542 1
a2542 1
			AC_MSG_NOTICE([incrTcl was disabled, but no system incrTcl library was found])		
@


14.291
log
@stray "
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.290 2007/01/24 18:40:56 brlcad Exp $
d88 1
a88 1
AC_REVISION($Revision: 14.290 $)
d595 2
a596 1
BC_ARG_ALIAS([use_optimized], [opt optimize])
@


14.290
log
@similarly disable opengl/wgl checks if they are disabled via arg
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.289 2007/01/24 17:59:59 brlcad Exp $
d88 1
a88 1
AC_REVISION($Revision: 14.289 $)
d1349 1
a1349 1
if "test "xbc_with_wgl" != "xno" ; then
@


14.289
log
@clarify the license detail that this particular file, as part of the build system, is BSD licensed.  the lgpl was used before since this file is often encountered first, but instead use the correct header and include a note about how the license applied, referring to COPYING for more details.
@
text
@d39 1
a39 1
dnl $Id: configure.ac,v 14.288 2007/01/24 17:49:22 brlcad Exp $
d88 1
a88 1
AC_REVISION($Revision: 14.288 $)
d595 1
a595 1
BC_ARG_ALIAS([use_optimized], [optimize])
d1340 5
a1344 3
AC_CHECK_LIB(GL, glEnable, gl_link_works=yes ; LIBGL="-lGL",
    [AC_CHECK_LIB(GL2, glEnable, gl_link_works=yes ; LIBGL="-lGL2")]
)
d1349 3
a1351 1
AC_CHECK_LIB(opengl32, glEnable, wgl_link_works=yes ; LIBWGL="-lopengl32")
a1393 2
	GL/gl.h \
	GL/glx.h \
d1476 4
a1479 4
	AC_CHECK_HEADERS( \
		X11/Xlib.h \
		X11/Xosdefs.h \
	)
d1482 8
d2919 7
a2925 5
opengl_works=no
AC_MSG_CHECKING(for OpenGL functionality)
PRELDFLAGS="$LDFLAGS"
LDFLAGS="$LDFLAGS $LIBGL"
AC_TRY_RUN([
d2939 5
a2943 5
	],
	[opengl_works=yes]
)
LDFLAGS="$PRELDFLAGS"
AC_MSG_RESULT($opengl_works)
d2945 10
a2954 5
dnl figure out whether we need to build against opengl
build_against_opengl="no"
if test "x$bc_with_opengl" != "xno" ; then
	if test "x$opengl_works" = "xyes" ; then
		build_against_opengl="yes"
d2956 1
a2956 9
		if test "x$bc_with_opengl" = "xyes" ; then
			AC_MSG_NOTICE([OpenGL was requested, but no system OpenGL libraries were found])
			BC_RETRY_CONFIGURE([$this], [$args])
			AC_MSG_NOTICE([}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}])
			AC_MSG_NOTICE([Try adding --without-opengl])
			AC_MSG_ERROR([*** Using OpenGL was requested, yet no system OpenGL was found ***])
		else
			AC_MSG_NOTICE([OpenGL does not appear to be functionally available])
		fi
d2958 2
a2959 1
fi
d2965 7
a2971 5
wgl_works=no
AC_MSG_CHECKING(for WindowsGL functionality)
PRELDFLAGS="$LDFLAGS"
LDFLAGS="$LDFLAGS $LIBWGL"
AC_TRY_RUN([
d2985 5
a2989 5
	],
	[wgl_works=yes]
)
LDFLAGS="$PRELDFLAGS"
AC_MSG_RESULT($wgl_works)
d2991 10
a3000 5
dnl figure out whether we need to build against wgl
build_against_wgl="no"
if test "x$bc_with_wgl" != "xno" ; then
	if test "x$wgl_works" = "xyes" ; then
		build_against_wgl="yes"
d3002 1
a3002 9
		if test "x$bc_with_wgl" = "xyes" ; then
			AC_MSG_NOTICE([WindowsGL was requested, but no system WGL OpenGL libraries were found])
			BC_RETRY_CONFIGURE([$this], [$args])
			AC_MSG_NOTICE([}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}])
			AC_MSG_NOTICE([Try adding --without-wgl])
			AC_MSG_ERROR([*** Using WindowsGL was requested, yet no system WGL OpenGL was found ***])
		else
			AC_MSG_NOTICE([WindowsGL does not appear to be functionally available])
		fi
d3004 2
a3005 1
fi
@


14.288
log
@similarly disable all the java checks if we're --without-java
@
text
@d1 1
a1 1
dnl                   C O N F I G U R E . A C
d5 1
a5 1
dnl U.S. Army Research Laboratory.
d7 3
a9 12
dnl This program is free software; you can redistribute it and/or
dnl modify it under the terms of the GNU Lesser General Public License
dnl version 2.1 as published by the Free Software Foundation.
dnl
dnl This program is distributed in the hope that it will be useful, but
dnl WITHOUT ANY WARRANTY; without even the implied warranty of
dnl MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
dnl Lesser General Public License for more details.
dnl
dnl You should have received a copy of the GNU Lesser General Public
dnl License along with this file; see the file named COPYING for more
dnl information.
d11 29
a39 1
dnl $Id: configure.ac,v 14.287 2007/01/24 17:21:12 brlcad Exp $
d88 1
a88 1
AC_REVISION($Revision: 14.287 $)
@


14.287
log
@restructure the X11 checks so that if --without-x11 is provided, all of the associated x11 checks are also disabled as well so we don't waste time testing for things that will not be used.  similarly, don't auto-add /usr/X11R6 to the search paths or add the extra restart paths unless we're in automatic or yes mode
@
text
@d20 1
a20 1
dnl $Id: configure.ac,v 14.286 2007/01/24 15:47:51 erikgreenwald Exp $
d69 1
a69 1
AC_REVISION($Revision: 14.286 $)
d1173 1
a1173 1
fi
d1344 1
d1346 1
d1459 1
a1459 1
fi
d1512 17
a1528 20
#################### Begin java check ##############################
OLD_CPPFLAGS="$CPPFLAGS"
CPPFLAGS="$CPPFLAGS $JAVA_CFLAGS"
found_jni_h=no
AC_CHECK_HEADER(JavaVM/jni.h,
		AC_DEFINE(HAVE_JAVAVM_JNI_H,1,[Define to 1 if you have the '<JavaVM/jni.h>' header file])
		found_jni_h=yes	)
AC_CHECK_HEADER(jni.h,
		AC_DEFINE(HAVE_JNI_H,1,[Define to 1 if you have the '<jni.h>' header file])
		found_jni_h=yes )

search_for_jni_h_more=no
if test "x$found_jni_h" = "xno" ; then
	if test "x$bc_with_java" != "xno" ; then
		search_for_jni_h_more=yes
		if test "x$bc_only_benchmark" != "xno" ; then
			if test "x$bc_only_rts" = "xno" ; then
				search_for_jni_h_more=no
			fi
		fi
d1530 1
a1530 1
fi
d1532 1
a1532 1
if test "x$search_for_jni_h_more" = "xyes" ; then
d1536 6
a1541 6
		for dir in `ls $macjvmdir` ; do
			if test -d "$macjvmdir/$dir" ; then
				JAVA_CFLAGS="$JAVA_CFLAGS -I$macjvmdir/$dir/Headers"
				CPPFLAGS="$CPPFLAGS -I$macjvmdir/$dir/Headers"
			fi
		done
d1553 10
a1562 12
		AC_MSG_NOTICE([}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}])
		AC_MSG_WARN([jni.h was found by hunting through the JavaVM framework])
		AC_MSG_WARN([This means you probably need to install the latest Java SDK])
		AC_MSG_WARN([Build will try to use what it found, but you should update])
		AC_MSG_NOTICE([See http://developer.apple.com/java/ for updates])
		AC_MSG_NOTICE([{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{])
	fi
fi
CPPFLAGS="$OLD_CPPFLAGS"


###################### End java check ##############################
d2852 3
a2854 2
AC_MSG_CHECKING(for Java functionality)
if test "x$found_jni_h" = "xno" ; then
d2856 6
a2861 6
		AC_MSG_RESULT(no)
		AC_MSG_NOTICE([searching more extensively])
		BC_RETRY_CONFIGURE([$this], [$args])
		AC_MSG_NOTICE([}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}])
		AC_MSG_NOTICE([Try adding --with-jdk=/path/to/jdk to find jni.h])
		AC_MSG_ERROR([*** Cannot locate jni.h for building librtserver ***])
d2864 5
a2868 5
		AC_MSG_RESULT(no)
		AC_MSG_NOTICE([searching more extensively])
		BC_RETRY_CONFIGURE([$this], [$args])
		AC_MSG_NOTICE([}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}])
		AC_MSG_ERROR([Failed to locate a functioning jni.h for Java])
d2872 4
a2875 4
		AC_MSG_NOTICE([}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}])
		AC_MSG_WARN([Unable to locate a functioning Java])
		AC_MSG_WARN([Compilation of librtserver will be disabled])
		AC_MSG_NOTICE([{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{])
d2878 3
a2880 8
else
	if test "x$bc_with_java" != "xno" ; then
		if test "x$bc_with_java" = "xauto" ; then
			build_against_java=yes
		else
			build_against_java="yes ($bc_with_java_val)"
		fi
		AC_MSG_RESULT(yes)
d2882 1
a2882 1
		AC_MSG_RESULT(no)
d2884 3
a2886 1
fi
@


14.286
log
@Add another X11 test to verify that the X11 library is actually linking in.
@
text
@d20 1
a20 1
dnl $Id: configure.ac,v 14.285 2007/01/23 01:13:19 brlcad Exp $
d69 1
a69 1
AC_REVISION($Revision: 14.285 $)
a257 15
dnl be sure to search these directories for components
BC_SEARCH_DIRECTORY([/usr/X11R6], [X11])

dnl BSD uses /usr/local by default for ports
BC_SEARCH_DIRECTORY([/usr/local])

dnl search several additional locations if configure happens to fail
dnl to find a required component
BC_RETRY_DIRECTORY([/usr/freeware], [freeware])
BC_RETRY_DIRECTORY([/opt/X11R6], [X11])
BC_RETRY_DIRECTORY([/opt/X11], [X11])
BC_RETRY_DIRECTORY([/usr/X11], [X11])
BC_RETRY_DIRECTORY([/opt])
BC_RETRY_DIRECTORY([/sw], [fink])

a368 6
dnl *** X11 ***
if test "x$bc_with_x11_val" != "x" ; then
	BC_RETRY_DIRECTORY([$bc_with_x11_val])
fi
AC_PATH_X
AC_PATH_XTRA
a381 1

d628 29
d1157 1
a1157 1
dnl check if X11 library link works
a1158 2
AC_CHECK_LIB(X11, XCreateWindow, LIBX11="-lX11")

a1159 2
AC_CHECK_LIB(Xext, XShapeCombineMask, LIBEXT="-lXext")

a1160 2
AC_CHECK_LIB(Xi, XGetExtensionVersion, LIBXI="-lXi")

a1161 2
AC_CHECK_LIB(ICE, IceOpenConnection, ice_link_works=yes)

a1162 2
AC_CHECK_LIB(SM, SmcOpenConnection, sm_link_works=yes)

a1163 2
AC_CHECK_LIB(Xt, XtMalloc, xt_link_works=yes)

d1165 9
a1173 1
AC_CHECK_LIB(Xmu, XmuLookupStandardColormap, xmu_link_works=yes)
a1370 2
	X11/Xlib.h \
	X11/Xosdefs.h \
d1451 8
d2987 5
a2991 3
# XXX ugly hack that needs to die
X_PREFIX=/usr/X11R6
if test "x$bc_with_x11_val" != "x" ; then
d2993 3
a2995 6
fi
AC_SUBST(X_PREFIX)
X_CFLAGS="-I${X_PREFIX}/include"
AC_SUBST(X_CFLAGS)
X_LIBS="-L${X_PREFIX}/lib $LIBX11 $LIBXI"
AC_SUBST(X_LIBS)
d2997 5
a3001 5
x11_works=no
AC_MSG_CHECKING(for X11 header functionality)
PRELDFLAGS="$LDFLAGS"
LDFLAGS="$LDFLAGS $X_LIBS"
AC_TRY_RUN([
d3010 3
a3012 4
	],[x11_works=yes])
AC_MSG_RESULT($x11_works)
if test "x$x11_works" = "xyes"
then
d3025 2
a3026 2
fi
LDFLAGS="$PRELDFLAGS"
d3028 2
a3029 3
dnl figure out whether we need to build against X11
build_against_x11="no"
if test "x$bc_with_x11" != "xno" ; then
d3031 1
a3031 1
		build_against_x11="yes"
d3033 9
a3041 9
		if test "x$bc_with_x11" = "xyes" ; then
			BC_RETRY_CONFIGURE([$this], [$args])
			AC_MSG_NOTICE([X11 was requested, but no system X11 libraries were found])
			AC_MSG_NOTICE([}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}])
			AC_MSG_NOTICE([Try adding --without-x11])
			AC_MSG_ERROR([*** Using X11 was requested, yet no system X11 was found ***])
		else
			AC_MSG_NOTICE([X11 does not appear to be functionally available])
		fi
d3043 1
d3045 3
@


14.285
log
@Sweeping license updates.  Documentation is fully relicensed to the BSD Documentation License (a minor variant of the FreeBSD Documentation License and BSD License).  All GPL code (mostly application code) is converted to the LGPL and now also specifically declares version 2.1, revoking the blank check to the FSF.  The intent of these sweeping changes are to simplify the licensing terms and increase overall flexibility of use, both externally (to users for their purposes) and internally (to allow application code to be migrated to libraries without creating GPL libraries).  As a collective work, BRL-CAD is now LGPL.
@
text
@d20 1
a20 1
dnl $Id: configure.ac,v 14.284 2007/01/20 14:10:40 brlcad Exp $
d69 1
a69 1
AC_REVISION($Revision: 14.284 $)
d2990 1
a2990 1
AC_MSG_CHECKING(for X11 functionality)
d3002 17
a3018 3
	],
	[x11_works=yes]
)
a3019 1
AC_MSG_RESULT($x11_works)
@


14.284
log
@update copyright to 2007
@
text
@d8 2
a9 3
dnl modify it under the terms of the GNU General Public License as
dnl published by the Free Software Foundation; either version 2 of the
dnl License, or (at your option) any later version.
d14 1
a14 1
dnl General Public License for more details.
d16 2
a17 2
dnl You should have received a copy of the GNU General Public License
dnl along with this file; see the file named COPYING for more
d20 1
a20 1
dnl $Id: configure.ac,v 14.283 2007/01/19 21:00:24 erikgreenwald Exp $
d69 1
a69 1
AC_REVISION($Revision: 14.283 $)
@


14.283
log
@Try to extract python compile/link info a little better, instead of assuming 2.4 on a standard FreeBSD.
@
text
@d4 1
a4 1
dnl Copyright (c) 2004-2006 United States Government as represented by
d21 1
a21 1
dnl $Id: configure.ac,v 14.282 2007/01/19 18:25:28 brlcad Exp $
d70 1
a70 1
AC_REVISION($Revision: 14.282 $)
@


14.282
log
@this fixes another compilation/linking issues involving the new C++ openNURBS library integration. added is a check for the -fexceptions gcc compiler/linker flag that takes care of an unresolved __Unwind_Resume symbol error when linking rttherm (quite odd that only rttherm seems to provoke that symbol being undefined).  the symbol relates to exception handling support in gcc that would otherwise be provided if linking with g++.  could also have probably added the -shared-libgcc flag as well for the same result.  thanks to Andrew Pinski for this particular fix.
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.281 2007/01/19 18:21:11 brlcad Exp $
d70 1
a70 1
AC_REVISION($Revision: 14.281 $)
d1075 4
a1078 9
	AC_PATH_PROG(PYTHON, python, , $PATH)
	if test "x$PYTHON" = "x" ; then
		if test "x$bc_with_python" = "xyes" ; then
			AC_MSG_NOTICE([Unable to find a python interpreter, searching more extensively])
			BC_RETRY_CONFIGURE([$this], [$args])
			AC_MSG_NOTICE([}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}])
			AC_MSG_WARN([Unable to find a python interpreter])
		fi
	fi
d3052 2
@


14.281
log
@this fixes a compilation/linking issue involving the new C++ openNURBS library integration.  it accounts for bad behavior in pre 1.5.8 libtool where the generated libtool script would contain an -all_load directive on the linker line for libraries that use convenience libraries as part of the whole_archive_flag_spec.  that flag in turn causes gcc to fail with various errors on duplicate standard math and io symbols.  the libtool script is simply stripped of the -all_load directive, which causes libtool to correctly just include all the convenience libraries and link the objects manually.  this problem was specific to the default libtool (1.5) provided on mac os x (10.4).
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.280 2007/01/18 19:39:47 erikgreenwald Exp $
d70 1
a70 1
AC_REVISION($Revision: 14.280 $)
d1642 10
@


14.280
log
@only include brlcad_config.h if actually building BRL-CAD. Prevents preprocessor redefinition warnings for things like PACKAGE. (this is the first step towards a cleaning activity).
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.279 2007/01/17 19:56:10 erikgreenwald Exp $
d70 1
a70 1
AC_REVISION($Revision: 14.279 $)
d3622 26
@


14.279
log
@Change the include path in OPENNURBS_CPPFLAGS to ${top_srcdir} instead of
${top_builddir}, as opennurbs.h is not generated.
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.278 2007/01/12 18:45:36 jlowenz Exp $
d70 1
a70 1
AC_REVISION($Revision: 14.278 $)
d3122 1
a3122 1
CPPFLAGS="$CPPFLAGS -I\$(top_srcdir)/include"
@


14.278
log
@Update support for building/selecting compilation for openNURBS. Now specifies the include path and requisite c++ library.
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.277 2007/01/06 06:47:04 brlcad Exp $
d70 1
a70 1
AC_REVISION($Revision: 14.277 $)
d2247 1
a2247 1
	OPENNURBS_CPPFLAGS='-I${top_builddir}/src/other/openNURBS'
@


14.277
log
@add openNURBS to the configuration and build.  this adds --enable-opennurbs-build as well as a variety of aliases, while properly checking to see if openNURBS is already installed on the system or not so that auto as default will work.
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.276 2007/01/05 17:22:33 brlcad Exp $
d70 1
a70 1
AC_REVISION($Revision: 14.276 $)
d2224 1
a2224 1
build_brlcad_opennurbs="no (using system)"b
d2226 1
a2226 1
	build_brlcad_opennurbs_yes
d2246 2
a2247 1
	OPENNURBS='${top_builddir}/src/other/openNURBS/libopenNURBS.la'
d2250 2
a2251 1
	OPENNURBS="$LIBOPENNURBS"
d2255 1
d3166 1
@


14.276
log
@use the originator/vendor for 'compiler' instead of the name of the compiler since we may use multiple at once in some odd configurations
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.275 2007/01/05 15:46:46 brlcad Exp $
d70 1
a70 1
AC_REVISION($Revision: 14.275 $)
d313 3
d487 14
d682 3
d854 3
d948 2
d951 2
a952 1
AM_PROG_CC_STDC
d955 1
d1178 5
a1198 5
dnl check if a math library links
m_link_works=no
LIBM=""
AC_CHECK_LIB(m, cos, m_link_works=yes ; LIBM="-lm")

d1210 4
d2203 52
d3149 1
d3561 1
d3673 1
@


14.275
log
@generate the endgame framework makefile
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.274 2006/12/07 22:38:16 mjgillich Exp $
d70 1
a70 1
AC_REVISION($Revision: 14.274 $)
d993 1
a993 1
	compiler=gcc
d1007 1
a1007 1
		compiler=mipspro
d1025 1
a1025 1
		compiler=sunpro
d3181 1
a3181 1
AM_CONDITIONAL(LINK_STATIC_REQUIRED, [test "x$build_vendor" = "xsgi" -a "x$compiler" = "xmipspro" ])
@


14.274
log
@added check for C++ compiler and override default flags to nothing
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.273 2006/12/03 00:55:18 erikgreenwald Exp $
d70 1
a70 1
AC_REVISION($Revision: 14.273 $)
d3380 1
@


14.273
log
@respect the --with-x11 prefix for 'odd location' X
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.272 2006/10/17 17:18:17 brlcad Exp $
d70 1
a70 1
AC_REVISION($Revision: 14.272 $)
d132 5
d925 1
@


14.272
log
@oop, the EndgameFramework directory isn't added to the repository yet, so leave it out
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.271 2006/10/17 01:19:14 brlcad Exp $
d70 1
a70 1
AC_REVISION($Revision: 14.271 $)
d378 3
d2884 3
d2896 1
a2896 1
LDFLAGS="$LDFLAGS $LIBX11"
@


14.271
log
@add an --enable-ef-build option to configure with aliases of ef, endgame, and more providing BUILD_EF for automake
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.270 2006/10/17 01:00:27 brlcad Exp $
d70 1
a70 1
AC_REVISION($Revision: 14.270 $)
a3367 1
	src/external/EndgameFramework/Makefile
@


14.270
log
@update to next developer release, 7.9.0, indicating intentions for the next release to be a minor update not just a patch update as 7.10.0
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.269 2006/10/16 20:45:30 brlcad Exp $
d70 1
a70 1
AC_REVISION($Revision: 14.269 $)
d332 3
d523 9
d681 8
d850 3
d3056 1
d3368 1
@


14.269
log
@prepare for release 7.8.4, standard updates
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.268 2006/09/12 11:46:44 brlcad Exp $
d69 2
a70 2
AC_INIT(BRL-CAD, 7.8.4, [http://brlcad.org], brlcad)
AC_REVISION($Revision: 14.268 $)
d76 2
a77 2
MINOR_VERSION=8
PATCH_VERSION=4
@


14.268
log
@linking against a system tkstub library may require linking against the tclstub library as well, at least that seems to be the case on mac os x's default-provided static tkstub archive
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.267 2006/09/12 11:29:07 brlcad Exp $
d69 2
a70 2
AC_INIT(BRL-CAD, 7.8.3, [http://brlcad.org], brlcad)
AC_REVISION($Revision: 14.267 $)
d77 1
a77 1
PATCH_VERSION=3
@


14.267
log
@so we apparently can't actually call any opengl function (at least on macosx) without a valid context or it will cause a bus error, so instead just link against some useful symbols.
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.266 2006/08/30 00:41:38 brlcad Exp $
d70 1
a70 1
AC_REVISION($Revision: 14.266 $)
d1191 2
d1202 1
a1202 1

@


14.266
log
@check for the solaris lexer library (needed for yyless() apparently) and provide LIBL accordingly for Makefile.am usage.
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.265 2006/08/29 23:06:37 brlcad Exp $
d70 1
a70 1
AC_REVISION($Revision: 14.265 $)
d2770 9
a2778 6
main() {
   GLboolean values;
   if (GL_TRUE) {
	glGetBooleanv(GL_CURRENT_COLOR, &values);
   }
   return 0;
d2816 9
a2824 6
main() {
   GLboolean values;
   if (GL_TRUE) {
	glGetBooleanv(GL_CURRENT_COLOR, &values);
   }
   return 0;
@


14.265
log
@check for fsync(), bsd func that some older systems don't have
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.264 2006/08/19 00:03:56 brlcad Exp $
d70 1
a70 1
AC_REVISION($Revision: 14.264 $)
d1273 5
d2666 5
@


14.264
log
@try glGetBooleanv() instead of glClear() to prevent crashing when there's no context
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.263 2006/08/11 20:47:57 brlcad Exp $
d70 1
a70 1
AC_REVISION($Revision: 14.263 $)
d1783 1
@


14.263
log
@check for the sys/prctl.h header .. it declares sproc()
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.262 2006/08/11 06:32:26 brlcad Exp $
d70 1
a70 1
AC_REVISION($Revision: 14.262 $)
d2760 1
d2762 1
a2762 1
	glClear(GL_COLOR_BUFFER_BIT);
d2803 1
d2805 1
a2805 1
	glClear(GL_COLOR_BUFFER_BIT);
@


14.262
log
@xosdefs.h? how about searching for X11/Xosdefs.h instead
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.261 2006/08/08 02:35:09 brlcad Exp $
d70 1
a70 1
AC_REVISION($Revision: 14.261 $)
d1351 1
@


14.261
log
@check for pipe()
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.260 2006/08/01 16:11:07 brlcad Exp $
d70 1
a70 1
AC_REVISION($Revision: 14.260 $)
d1305 1
d1382 1
a1382 2
	winsock.h \
	xosdefs.h \
@


14.260
log
@bah, another.. wgl_link_works, not gl_link_works
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.259 2006/08/01 16:08:55 brlcad Exp $
d70 1
a70 1
AC_REVISION($Revision: 14.259 $)
d1809 1
@


14.259
log
@oops, typo.. close the macro
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.258 2006/08/01 15:32:45 brlcad Exp $
d70 1
a70 1
AC_REVISION($Revision: 14.258 $)
d1266 1
a1266 1
AC_CHECK_LIB(opengl32, glEnable, gl_link_works=yes ; LIBWGL="-lopengl32")
@


14.258
log
@try enabling the automatic detection/compilation of tcl/tk now that tkCanvasBezier is cleaned up to not use internal Tk headers.  probably still need to work on Tcl autopath issues, but give it a shot.  also add a slew of checks for WGL so that a new framebuffer and display manager interface may be defined on Windows that is separate from the ogl interface.  this is important for cygwin/mingw systems where it is possible to use both wgl and ogl style interfaces simultaneously.  also rename LIBRT to RT to be consistent with the other BRL-CAD library AC_SUBST values
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.257 2006/07/30 18:36:11 brlcad Exp $
d70 1
a70 1
AC_REVISION($Revision: 14.257 $)
d1260 1
a1260 1
    [AC_CHECK_LIB(GL2, glEnable, gl_link_works=yes ; LIBGL="-lGL2",
@


14.257
log
@make the 'whether to build against OpenGL' test actually run a function that it has to link against so that it doesn't erroneously pass and leave OpgnGL enabled when there is no library but headers exist.
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.256 2006/07/28 15:00:56 brlcad Exp $
d70 1
a70 1
AC_REVISION($Revision: 14.256 $)
d312 1
a312 2
# XXX - set to yes due to auto_path issues when system Tcl is loaded
BC_ARG_ENABLE([build_tcl], [tcl-build], [Build the included Tcl], [yes])
d315 1
a315 4
# XXX - set to yes due to the bezier canvas tk patch that was moved to
# libtclcad yet still uses tk internal headers that don't get
# installed.
BC_ARG_ENABLE([build_tk], [tk-build], [Build the included Tk], [yes])
d318 1
a318 1
BC_ARG_ENABLE([build_itcl], [itcl-build], [Build the included incrTcl], [yes])
d381 3
d603 3
d869 3
d1256 1
a1256 1
dnl check if a graphics library links
d1260 1
a1260 1
    [AC_CHECK_LIB(GL2, glEnable, gl_link_works=yes ; LIBGL="-lGL2")]
d1263 6
a1268 1
dnl check if the sgigl library links
d2645 5
a2653 1
dnl XXX the HAS_SGIGL define should go away eventually
d2790 42
d3018 1
d3071 3
d3077 11
a3087 2
BU='${top_builddir}/src/libbu/libbu.la'
AC_SUBST(BU)
d3092 3
a3098 3
FB='${top_builddir}/src/libfb/libfb.la'
AC_SUBST(FB)

a3110 9
PKG='${top_builddir}/src/libpkg/libpkg.la'
AC_SUBST(PKG)

LIBRT='${top_builddir}/src/librt/librt.la'
AC_SUBST(LIBRT)

SYSV='${top_builddir}/src/libsysv/libsysv.la'
AC_SUBST(SYSV)

a3116 3
WDB='${top_builddir}/src/libwdb/libwdb.la'
AC_SUBST(WDB)

@


14.256
log
@add configuration options supporting the Unigraphics importer, providing the BUILD_UG symbol if it is to be compiled (used in src/external)
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.255 2006/07/28 14:50:40 brlcad Exp $
d70 1
a70 1
AC_REVISION($Revision: 14.255 $)
d2744 4
a2747 1
       return GL_FALSE;
@


14.255
log
@src/conv/unigraphics was moved to src/external/Unigraphics, so update the corresponding Makefile generation
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.254 2006/07/28 04:00:34 brlcad Exp $
d70 1
a70 1
AC_REVISION($Revision: 14.254 $)
d339 3
d534 12
d672 9
a680 1
			bc_build_proe="$set_everything"
d831 3
d2952 1
@


14.254
log
@add some additional pro/engineer enable aliases
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.253 2006/07/28 03:43:30 brlcad Exp $
d70 1
a70 1
AC_REVISION($Revision: 14.253 $)
a3232 1
	src/conv/unigraphics/Makefile
d3237 1
@


14.253
log
@misc/pro-engineer was moved to src/external so update the output Makefiles accordingly as well as the new src/external/Makefile and the plugin resource files
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.252 2006/07/27 20:25:24 brlcad Exp $
d70 1
a70 1
AC_REVISION($Revision: 14.252 $)
d519 5
d526 2
a527 2
BC_ARG_ALIAS([build_proe], [proe])
BC_ARG_ALIAS([build_proe], [proe-plugin])
a529 1
BC_ARG_ALIAS([build_proe], [proe-build])
@


14.252
log
@generate Makefiles for the src/archer/plugins/Commands Core and Utility directories
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.251 2006/07/13 21:09:09 brlcad Exp $
d70 1
a70 1
AC_REVISION($Revision: 14.251 $)
a3134 3
	misc/pro-engineer/Makefile
	misc/pro-engineer/mk
	misc/pro-engineer/protk.dat
d3230 4
@


14.251
log
@check for the sys/un.h header in order to stop using the HAVE_UNIX_DOMAIN_SOCKETS define
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.250 2006/07/11 17:07:40 brlcad Exp $
d70 1
a70 1
AC_REVISION($Revision: 14.250 $)
d3213 2
d3216 1
@


14.250
log
@gah, set LIBDS, not LIBDL
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.249 2006/07/11 14:26:08 brlcad Exp $
d70 1
a70 1
AC_REVISION($Revision: 14.249 $)
d1321 1
@


14.249
log
@add a header check for dslib.h and libds for SDL /dev/scsi library availability.  src/canon needs it.
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.248 2006/07/10 17:05:00 brlcad Exp $
d70 1
a70 1
AC_REVISION($Revision: 14.248 $)
d1219 1
a1219 1
AC_CHECK_LIB(ds, dsopen, ds_link_works=yes ; LIBDL="-lds")
@


14.248
log
@check for winsock.h header
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.247 2006/07/09 23:38:39 brlcad Exp $
d70 1
a70 1
AC_REVISION($Revision: 14.247 $)
d1216 5
d1267 1
a2563 14
dnl *** libgl ***
AC_MSG_CHECKING(whether to link with the OpenGL library)
AC_MSG_RESULT($gl_link_works)
AC_SUBST(LIBGL)

dnl *** sgigl ***
AC_MSG_CHECKING(whether to link with the SGI graphics library)
AC_MSG_RESULT($sgigl_link_works)
AC_SUBST(LIBSGIGL)
dnl XXX the HAS_SGIGL define should go away eventually
if test "x$sgigl_link_works" = "xyes" ; then
	AC_DEFINE(HAS_SGIGL, 1, Irix GL is present.)
fi

d2594 19
@


14.247
log
@sans stray v
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.246 2006/07/09 21:16:19 brlcad Exp $
d70 1
a70 1
AC_REVISION($Revision: 14.246 $)
d1334 1
@


14.246
log
@add setvbuf and setlinebuf to the function check list
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.245 2006/06/26 02:05:17 brlcad Exp $
d70 1
a70 1
AC_REVISION($Revision: 14.245 $)
d1304 1
d3365 1
a3365 1
v
@


14.245
log
@calculate the day, month, year individually so that they may be substituted into autoconf template files.  add doc/pad_file.xml to the list of generated files
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.244 2006/06/20 19:09:35 brlcad Exp $
d70 1
a70 1
AC_REVISION($Revision: 14.244 $)
d1749 1
d1771 1
d1775 1
@


14.244
log
@release 7.8.2 is tagged as rel-7-8-2, revision numbers are bumped up to 7.8.3 expecting 7.8.4 to be the next release number in a few weeks
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.243 2006/06/20 17:45:21 brlcad Exp $
d70 1
a70 1
AC_REVISION($Revision: 14.243 $)
d93 4
a96 1
CONFIG_DATE=`date +%Y%m%d`
d100 3
d3109 1
d3361 1
a3361 1

@


14.243
log
@prepare for release of 7.8.2
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.242 2006/06/05 02:45:50 brlcad Exp $
d69 2
a70 2
AC_INIT(BRL-CAD, 7.8.2, [http://brlcad.org], brlcad)
AC_REVISION($Revision: 14.242 $)
d77 1
a77 1
PATCH_VERSION=2
@


14.242
log
@add initial makefiles for the other blt resource directories, help make distcheck work more prevalently
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.241 2006/06/05 00:30:27 brlcad Exp $
d69 2
a70 2
AC_INIT(BRL-CAD, 7.8.1, [http://brlcad.org], brlcad)
AC_REVISION($Revision: 14.241 $)
d77 1
a77 1
PATCH_VERSION=1
@


14.241
log
@add a new configure --enable-verbose and --enable-progress option, with the first being a convenience option that enables the progress and warnings verbose options.  the --enable-verbose-progress option (alias) basically adds --silent to LIBTOOLFLAGS and/or to LIBTOOL.
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.240 2006/05/16 15:37:02 lbutler Exp $
d70 1
a70 1
AC_REVISION($Revision: 14.240 $)
d3304 1
d3307 2
a3308 1
	src/other/blt/src/Makefile
d3311 2
@


14.240
log
@misc changes to get ADRT to build
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.239 2006/05/15 18:42:46 brlcad Exp $
d70 1
a70 1
AC_REVISION($Revision: 14.239 $)
a341 3
# warnings
BC_ARG_ENABLE([use_warnings], [warnings], [Enable verbose compilation warnings], [no])

d348 10
a541 6
# verbose warning aliases (help uses warnings)
BC_ARG_ALIAS([use_warnings], [verbose])
BC_ARG_ALIAS([use_warnings], [warning])
BC_ARG_ALIAS([use_warnings], [verbose-warnings])
BC_ARG_ALIAS([use_warnings], [warnings-verbose])

d549 20
d726 10
a806 3
AC_MSG_CHECKING(whether to enable verbose compilation warnings)
AC_MSG_RESULT($bc_use_warnings)

d813 9
d883 11
d1634 1
a1634 1
if test "x$bc_use_warnings" != "xno" ; then
d3419 2
a3420 1
AC_MSG_RESULT([Print verbose compilation warnings ...: $bc_use_warnings])
@


14.239
log
@typo, should have been profile not debug -- logic is still wrong though, needs to be redone for --enable-profile
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.238 2006/04/11 15:17:54 erikgreenwald Exp $
d70 1
a70 1
AC_REVISION($Revision: 14.238 $)
d631 1
d2766 1
a2766 1
	if test "x$sdl_works" = "xyes" ; then
@


14.238
log
@fix an over-zealous conditional so --disable-jove works (some of us use vi)
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.237 2006/04/11 03:33:04 brlcad Exp $
d70 1
a70 1
AC_REVISION($Revision: 14.237 $)
d1522 1
a1522 1
	if test "x$bc_debug_flag_works" = "xno" ; then
@


14.237
log
@bump correctly to 7.8.1 after retag
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.236 2006/04/11 03:32:06 brlcad Exp $
d70 1
a70 1
AC_REVISION($Revision: 14.236 $)
d2581 2
@


14.236
log
@redo 7.8.0 version number
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.235 2006/04/11 03:25:59 brlcad Exp $
d69 2
a70 2
AC_INIT(BRL-CAD, 7.8.0, [http://brlcad.org], brlcad)
AC_REVISION($Revision: 14.235 $)
d77 1
a77 1
PATCH_VERSION=0
@


14.235
log
@bump to developer rev 7.8.1, cvs is tagged with rel-7-8-0
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.234 2006/04/11 03:13:39 brlcad Exp $
d69 2
a70 2
AC_INIT(BRL-CAD, 7.8.1, [http://brlcad.org], brlcad)
AC_REVISION($Revision: 14.234 $)
d76 1
a76 1
MINOR_VERSION=7
@


14.234
log
@update version to 7.8.0, preparing for release
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.233 2006/04/07 02:18:51 brlcad Exp $
d69 2
a70 2
AC_INIT(BRL-CAD, 7.8.0, [http://brlcad.org], brlcad)
AC_REVISION($Revision: 14.233 $)
@


14.233
log
@define USE_FBSERV so libdm/mged allow direct fbserv render connections
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.232 2006/03/23 20:42:15 brlcad Exp $
d69 2
a70 2
AC_INIT(BRL-CAD, 7.7.0, [http://brlcad.org], brlcad)
AC_REVISION($Revision: 14.232 $)
@


14.232
log
@itcl/tk needs to match tcl/tk building default of 'on' until the bugs are sorted out
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.231 2006/03/10 19:18:14 brlcad Exp $
d70 1
a70 1
AC_REVISION($Revision: 14.231 $)
d2917 1
@


14.231
log
@unable to track down all the tclisms auto_path right now so redefault to build instead of auto
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.230 2006/02/03 17:56:51 brlcad Exp $
d70 1
a70 1
AC_REVISION($Revision: 14.230 $)
d316 1
a316 1
BC_ARG_ENABLE([build_itcl], [itcl-build], [Build the included incrTcl], [auto])
@


14.230
log
@improve the socklen_t check, need to look in sys/socket.h as well as sys/types.h for the type.  still fallback to int.
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.229 2006/02/03 17:40:34 brlcad Exp $
d70 1
a70 1
AC_REVISION($Revision: 14.229 $)
d306 2
a307 1
BC_ARG_ENABLE([build_tcl], [tcl-build], [Build the included Tcl], [auto])
@


14.230.2.1
log
@merge from HEAD
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.230 2006/02/03 17:56:51 brlcad Exp $
d70 1
a70 1
AC_REVISION($Revision: 14.230 $)
d306 1
a306 2
# XXX - set to yes due to auto_path issues when system Tcl is loaded
BC_ARG_ENABLE([build_tcl], [tcl-build], [Build the included Tcl], [yes])
@


14.230.2.2
log
@update from HEAD
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.230.2.1 2006/03/16 20:52:33 jlowenz Exp $
d70 1
a70 1
AC_REVISION($Revision: 14.230.2.1 $)
d316 1
a316 1
BC_ARG_ENABLE([build_itcl], [itcl-build], [Build the included incrTcl], [yes])
a2916 1
AC_DEFINE_UNQUOTED([USE_FBSERV], [1], [Required for libdm/mged to allow direct fbserv render connections])
@


14.229
log
@look for lseek function
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.228 2006/02/03 01:47:21 brlcad Exp $
d70 1
a70 1
AC_REVISION($Revision: 14.228 $)
d1412 10
a1421 1
AC_CHECK_TYPE(socklen_t, int)
@


14.228
log
@check for getprogname and setprogname functions for libbu
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.227 2006/02/03 01:45:27 brlcad Exp $
d70 1
a70 1
AC_REVISION($Revision: 14.227 $)
d1684 1
@


14.227
log
@fallback to int instead of to size_t for the socklen_t check
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.226 2006/02/02 21:48:29 brlcad Exp $
d70 1
a70 1
AC_REVISION($Revision: 14.226 $)
d1678 1
d1704 1
a1704 1
	setlocale \
d1706 1
@


14.226
log
@fix build issues on mac os x 10.2.  there's no socklen_t type so pretend it's size_t.  old version of autoconf doesn't do anything with the arguments to AC_C_BIGENDIAN, so just check the result and define NATURAL_IEEE/REVERSE_IEEE conditionally.
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.225 2006/01/26 21:53:47 brlcad Exp $
d70 1
a70 1
AC_REVISION($Revision: 14.225 $)
d808 1
a808 1
AC_GNU_SOURCE
d1396 1
a1396 1
AC_HEADER_STDBOOL
d1412 1
a1412 1
AC_CHECK_TYPE(socklen_t, size_t)
@


14.225
log
@meh, ordering cleanup
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.224 2006/01/21 19:41:01 brlcad Exp $
d70 1
a70 1
AC_REVISION($Revision: 14.224 $)
d1412 1
a1587 5
AC_C_BIGENDIAN(AC_DEFINE(NATURAL_IEEE,,64b floating point storage technique),
	       AC_DEFINE(REVERSE_IEEE,,64b floating point storage technique),
	       AC_MSG_NOTICE([}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}])
	       AC_MSG_ERROR([*** Don't know the endian of this machine! ***]) )
dnl conditionally define WORDS_BIGENDIAN for blt
d1589 10
@


14.224
log
@add tests to determine whether we successfully found a system bison/flex yacc/lex tool pair for making parsers.  if either isn't found, the parsers that are written to utilize them are disabled to prevent compile errors and a warning is output.  if they are availabe WITH_PARSERS is provided to the makefiles and BC_WITH_PARSERS is defined for code to conditionally test against.
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.223 2006/01/21 17:18:24 brlcad Exp $
d27 1
a27 1
dnl Herein lies the venerable GNU Autotools configure template for
d31 2
a32 1
dnl rather clearly labeled sections below so that they are as follows:
d70 1
a70 1
AC_REVISION($Revision: 14.223 $)
a72 1
#AM_CONFIG_HEADER([config.h])
d852 1
a852 1
dnl May need AR so try to find it
d1585 1
a1586 1
AC_C_INLINE
@


14.223
log
@use AC_PROG_LEX instead of AM_PROG_LEX since the latter attempts to use the missing script to run flex but fails miserably due to the assumptions by automake that LEX_OUTPUT_ROOT will be set to something.
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.222 2006/01/19 00:19:26 brlcad Exp $
d69 1
a69 1
AC_REVISION($Revision: 14.222 $)
d821 4
a824 1
AC_PROG_LEX
a825 1
AM_PROG_MKDIR_P
d1752 38
d2835 1
@


14.222
log
@search for the tcl/tk stub libraries too, and utilize them accordingly if someone asks for a system tcl or tk.  for now, presume that tcl+tclstub and tk+tkstub always exist together or at least that it'll link regardless.
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.221 2006/01/18 06:46:09 brlcad Exp $
d69 1
a69 1
AC_REVISION($Revision: 14.221 $)
d821 1
a821 1
AM_PROG_LEX
@


14.221
log
@update copyright to 2006
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.220 2006/01/15 18:25:17 brlcad Exp $
d69 1
a69 1
AC_REVISION($Revision: 14.220 $)
d1071 13
d1095 14
d2041 1
d2043 1
d2045 1
a2045 1
	AC_MSG_RESULT(yes)
d2047 1
d2050 7
a2057 1
	AC_MSG_RESULT(no)
d2060 1
d2141 2
d2144 1
d2146 1
a2146 1
	AC_MSG_RESULT(yes)
a2147 1
	TK="$LIBTK"
d2149 10
d2161 1
a2902 2
TCLSTUB='${top_builddir}/src/other/libtcl/generic/libtclstub.la'
AC_SUBST(TCLSTUB)
a2961 2
TKSTUB='${top_builddir}/src/other/libtk/generic/libtkstub.la'
AC_SUBST(TKSTUB)
@


14.220
log
@add header checks for ieeefp.h, setjmp.h, and waitflags.h for the blt package, also add function checks for finite() and isfinit() from libm and a sizeof test for long long.
@
text
@d4 1
a4 1
dnl Copyright (C) 2004-2005 United States Government as represented by
d21 1
a21 1
dnl $Id: configure.ac,v 14.219 2006/01/15 08:32:18 brlcad Exp $
d69 1
a69 1
AC_REVISION($Revision: 14.219 $)
@


14.219
log
@add the new BC_COMPLIANT_FLOAT and BC_COMPLIANT_DOUBLE tests
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.218 2006/01/15 04:09:59 brlcad Exp $
d69 1
a69 1
AC_REVISION($Revision: 14.218 $)
d1182 1
d1201 1
d1246 1
d1573 1
d1631 1
d1646 1
@


14.218
log
@run AC_C_BIGENDIAN without overriding the if-true and if-false so that the regular WORDS_BIGENDIAN define is provided (added for blt, which relies on it).  test for size of int and long so that the result is logged for debugging.  add checks to determine the floating point epsilon values too.
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.217 2006/01/12 23:41:52 brlcad Exp $
d69 1
a69 1
AC_REVISION($Revision: 14.217 $)
d1583 8
@


14.217
log
@fix AND improve the adrt checks.  some variables had changed (making them wrong) for testing sdl/python; they're now fixed.  add an --enable-adrt option that is coupled to the --with-sdl and --with-python options including all the additional checks for making sure all the various combinations make sense or output messages or abort.  before doing any BC_RETRY_CONFIGURE, output a message as to why we are retrying.  sdl test only needs to check for sdl-config if sdl is actuallly going to be used, same for python.  make the jove test consistent with the other tests.
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.216 2006/01/04 15:34:33 bob1961 Exp $
d69 1
a69 1
AC_REVISION($Revision: 14.216 $)
d1559 2
d1568 2
d1573 10
@


14.216
log
@Add more blt dirs to AC_CONFIG_FILES
@
text
@d21 1
a21 1
dnl $Id$
d69 1
a69 1
AC_REVISION($Revision$)
a325 3
# doxygen - XXX unimplemented
#BC_ARG_ENABLE([use_doxygen], [doxygen], [Enable documentation generation with doxygen], [no])

d332 3
d513 3
d565 1
a565 1
# argument sanity checks
a568 29
# make sure multiple "only" options were not given
if test "x$bc_only_benchmark" != "xno" ; then
	if test "x$bc_only_rts" != "xno" ; then
		AC_MSG_NOTICE([}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}])
		AC_MSG_WARN([Requesting BOTH benchmark and librtserver "only"?])
		AC_MSG_WARN([Building both benchmark and librtserver])
		AC_MSG_NOTICE([{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{])
	fi
	if test "x$bc_everything" = "xyes" ; then
		AC_MSG_NOTICE([}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}])
		AC_MSG_WARN([Requesting ONLY benchmark and EVERYTHING?])
		AC_MSG_WARN([Building everything])
		AC_MSG_NOTICE([{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{])
		bc_only_benchmark=no
	fi
fi

# the opengl interface is presently tied to the x11 interface
if test "x$bc_with_opengl" = "xyes" ; then
	if test "x$bc_with_x11" = "xno" ; then
		AC_MSG_NOTICE([}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}])
		AC_MSG_WARN([OpenGL interface presently requires X11 support])
		AC_MSG_WARN([Presuming X11 availability for the OpenGL interface])
		AC_MSG_WARN([The X11 interface will not be built])
		AC_MSG_NOTICE([{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{])
	fi
fi


d572 2
a573 1
# ones.
d628 73
a707 4
bc_use_doxygen=no
#AC_MSG_CHECKING(whether to generate documentation with doxygen)
#AC_MSG_RESULT($bc_use_doxygen)

d765 3
d792 1
a792 1
AC_MSG_CHECKING(whether to compile the SDL interface to ADRT)
d795 1
a795 1
AC_MSG_CHECKING(whether to compile the Python interface to ADRT)
d906 1
a906 12
if test "x$bc_use_doxygen" != "xno" ; then
	AC_PATH_PROG(DOXYGEN, doxygen, , $PATH)
	if test "x$DOXYGEN" = "x" ; then
		AC_MSG_RESULT([no])
		if test "x$bc_use_doxygen" = "xyes" ; then
			BC_RETRY_CONFIGURE([$this], [$args])
			AC_MSG_NOTICE([}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}])
			AC_MSG_ERROR([*** Unable to find doxygen ***])
		fi
	fi
fi

d908 1
a908 1
if test "x$bc_use_sdl" != "xno" ; then
d911 3
a913 2
		if test "x$bc_use_sdl" = "xyes" ; then
			# BC_RETRY_CONFIGURE([$this], [$args])
d920 1
d922 1
a922 1
if test "x$bc_use_python" != "xno" ; then
d925 3
a927 2
		if test "x$bc_use_sdl" = "xyes" ; then
			# BC_RETRY_CONFIGURE([$this], [$args])
d936 1
a942 5
	if test "x$BCEDITOR" = "x" ; then
		bc_build_jove=yes
	else
		bc_build_jove=no
	fi
d1719 1
d1776 1
d1826 1
d1830 1
a1830 1
			AC_MSG_ERROR([*** Building libz was disabled, yet no system zlib compression was found ***])
d1882 1
d1962 1
d2056 1
d2130 1
d2205 1
d2336 1
d2440 12
d2458 1
d2466 1
d2518 1
d2568 1
d2583 1
a2583 1
if test "x$bc_use_sdl" != "xno" ; then
d2598 1
a2598 1
if test "x$bc_use_python" != "xno" ; then
d2610 7
a2616 3
if test "x$python_works" = "xyes" ; then
	if test "x$sdl_works" = "xyes" ; then
		build_brlcad_adrt="yes"
d2618 5
a2622 1
		build_brlcad_adrt="no (need sdl)"
d2624 2
a2625 1
else
d2627 11
a2637 3
		build_brlcad_adrt="no (need python)"
	else
		build_brlcad_adrt="no (need python and sdl)"
a2639 2
# force adrt off until the makefiles are fixed in src/adrt
build_brlcad_adrt="no"
d2709 1
a2709 1
AM_CONDITIONAL(BUILD_JOVE, [test "x$bc_build_jove" = "xyes"])
d3219 1
a3219 1
AC_MSG_RESULT([Build jove ...........................: $bc_build_jove])
a3221 1
AC_MSG_RESULT([Java Developer Kit support ...........: $build_against_java])
d3224 1
a3236 1
AC_MSG_RESULT([Generate doxygen documentation .......: $bc_use_doxygen])
@


14.215
log
@add searches for itcl32 and itk32, as FreeBSD removes the dot
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.214 2005/12/31 00:17:09 brlcad Exp $
d69 1
a69 1
AC_REVISION($Revision: 14.214 $)
d3043 2
d3048 1
@


14.214
log
@rename --enable-everything to --enable-almost-everything just to keep things more truthful, yet keep the original as an alias.  make jove and the proe-plugin have a -build by default to be consistent with the other provided packages, exand on the proe plugin aliases.
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.213 2005/12/30 23:45:14 brlcad Exp $
d69 1
a69 1
AC_REVISION($Revision: 14.213 $)
d1052 3
a1054 1
        [AC_CHECK_LIB(itcl, Itcl_Init, itcl_link_works=yes ; LIBITCL="-litcl")]
d1063 3
a1065 1
        [AC_CHECK_LIB(itk, Itk_Init, itk_link_works=yes ; LIBITK="-litk")]
@


14.213
log
@consistent case on BLT and tkImg when printing the name of the package, order them after iwidgets for each section.
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.212 2005/12/30 23:34:39 brlcad Exp $
d69 1
a69 1
AC_REVISION($Revision: 14.212 $)
d273 1
a273 1
BC_ARG_ENABLE([everything], [everything], [Turn on compilation of everything], [auto])
d330 1
a330 1
BC_ARG_ENABLE([build_jove], [jove], [Enable compilation of jove], [auto])
d333 1
a333 1
BC_ARG_ENABLE([build_proe], [pro-engineer-plugin], [Enable compilation of Pro/Engineer plugin], [no])
d381 1
a381 1
# aliases for enabling configuration of everything (help uses everything)
d383 4
d501 2
a502 2
# jove aliases (help uses jove)
BC_ARG_ALIAS([build_jove], [jove-build])
d504 1
a504 1
# pro/e plugin aliases (help uses pro-engineer-plugin)
d506 1
d509 3
a533 1
BC_ARG_ALIAS([use_warnings], [warnings])
d3131 1
a3131 1
AC_MSG_RESULT([Build Tkimg ..........................: $build_brlcad_tkimg])
@


14.212
log
@make tcl, itcl, iwidgets and the new blt and tkimg packages all default to 'auto' for determining whether to use/install them; fix the aliases for the two new packages and put their result output in the right place.
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.211 2005/12/30 21:35:00 brlcad Exp $
d69 1
a69 1
AC_REVISION($Revision: 14.211 $)
a313 3
# tkimg
BC_ARG_ENABLE([build_tkimg], [tkimg-build], [Build the included tkimg], [auto])

d321 4
a324 1
BC_ARG_ENABLE([build_blt], [blt-build], [Build the included blt], [auto])
d629 6
d702 1
a702 1
AC_MSG_CHECKING(whether to build the Tkimg library)
a2032 12
dnl figure out whether we need to build Tkimg
TKIMG_VERSION="1.3"
AC_SUBST(TKIMG_VERSION)
if test "x$bc_build_tkimg" = "xyes" ; then
   build_brlcad_tkimg=yes
   TKIMG='${top_builddir}/src/other/tkimg/tkimg${TKIMG_VERSION}.la'
   AC_MSG_RESULT(yes)
else
   build_brlcad_tkimg=no
   TKIMG=""
   AC_MSG_RESULT(no)
fi
d2170 3
a2172 1
dnl figure out whether we need to build Blt
d2177 2
a2178 1
if test "x$bc_build_blt" = "xyes" ; then
d2188 17
a2613 1
AM_CONDITIONAL(BUILD_TKIMG, [test "x$build_brlcad_tkimg" = "xyes"])
d2617 1
a3120 1
AC_MSG_RESULT([Build Tkimg ..........................: $build_brlcad_tkimg])
d3123 2
a3124 1
AC_MSG_RESULT([Build Blt ............................: $build_brlcad_blt])
@


14.211
log
@misc/win32-msvc7/Makefile listed twice
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.210 2005/12/29 08:46:41 brlcad Exp $
d69 1
a69 1
AC_REVISION($Revision: 14.210 $)
d306 1
a306 1
BC_ARG_ENABLE([build_tcl], [tcl-build], [Build the included Tcl], [yes])
d309 3
d315 1
a315 1
BC_ARG_ENABLE([build_tkimg], [tkimg-build], [Build the included tkimg], [yes])
d318 1
a318 1
BC_ARG_ENABLE([build_itcl], [itcl-build], [Build the included incrTcl], [yes])
d321 1
a321 1
BC_ARG_ENABLE([build_iwidgets], [iwidgets-build], [Install the included iwidgets], [yes])
d324 1
a324 1
BC_ARG_ENABLE([build_blt], [blt-build], [Build the included blt], [yes])
a462 6
# aliases to force building tkimg (help uses tkimg-build)
BC_ARG_ALIAS([build_tkimg], [tkimg])
BC_ARG_ALIAS([build_tkimg], [tkimg-build])
AC_MSG_CHECKING(whether to build the Tkimg library)
AC_MSG_RESULT($bc_build_tkimg)

a480 1
BC_ARG_ALIAS([build_blt], [blt-build])
d482 5
a486 2
AC_MSG_CHECKING(whether to build the Blt library)
AC_MSG_RESULT($bc_build_blt)
d693 6
@


14.210
log
@next release is going to be 7.8.0 given all the major enhancements, so bump revision up to 7.7.0
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.209 2005/12/29 08:35:24 brlcad Exp $
d69 1
a69 1
AC_REVISION($Revision: 14.209 $)
a2826 1
	misc/win32-msvc7/Makefile
@


14.209
log
@generate the Makefiles for all of the new win32_msvc7 project dirs
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.208 2005/12/29 08:21:47 brlcad Exp $
d68 2
a69 2
AC_INIT(BRL-CAD, 7.6.6, [http://brlcad.org], brlcad)
AC_REVISION($Revision: 14.208 $)
d76 2
a77 2
MINOR_VERSION=6
PATCH_VERSION=7
@


14.208
log
@add an automake makefile for the new win32_msvc7 directory so that it will get included in source distributions, traverse through it even
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.207 2005/12/29 02:06:20 brlcad Exp $
d69 1
a69 1
AC_REVISION($Revision: 14.207 $)
d2827 48
@


14.207
log
@finish the sentence
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.206 2005/12/29 00:55:48 brlcad Exp $
d69 1
a69 1
AC_REVISION($Revision: 14.206 $)
d2826 1
@


14.206
log
@add a check to test whether we ended up with POSIX threading if only primarily to have the hint in the config.log output.  the pthread test was found in gd's configure.ac and seems a reasonable fairely comprehensive test.  pthread_cleanup_push is reportedly non-functional stub function on solaris; pthread_create and pthread_join are not necessarily in the same lib on irix (even though we prefer sproc on irix for performance); pthread_attr_init is apparently bonked on dec too.
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.205 2005/12/23 21:26:25 bob1961 Exp $
d69 1
a69 1
AC_REVISION($Revision: 14.205 $)
d901 2
a902 2
dnl implementation preference.  this is usually in 

@


14.205
log
@Merge of bobWinPort
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.204 2005/12/20 22:01:19 brlcad Exp $
d69 1
a69 1
AC_REVISION($Revision: 14.204 $)
d899 4
a902 1
dnl check if there is a threading library that links
d918 17
@


14.204
log
@bump the revision number to 7.6.7 post release, next version is trepidly going to be 7.6.8, maybe 7.8.0 if windows work begins merging in time (which isn't likely given there's only two weeks).
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.203 2005/12/16 23:51:58 brlcad Exp $
d69 1
a69 1
AC_REVISION($Revision: 14.203 $)
d311 3
d320 3
d460 6
d481 8
d2002 12
d2151 14
d2575 1
d2578 1
d2783 1
d2829 5
d2939 9
d2955 6
d2975 5
d3034 1
d3037 1
@


14.203
log
@add an alias for --enable-everything of --enable-build-everything
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.202 2005/12/16 22:54:12 brlcad Exp $
d69 1
a69 1
AC_REVISION($Revision: 14.202 $)
d77 1
a77 1
PATCH_VERSION=6
@


14.202
log
@prepare for release, 7.6.6
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.201 2005/12/12 23:04:34 brlcad Exp $
d69 1
a69 1
AC_REVISION($Revision: 14.201 $)
d375 1
@


14.201
log
@check for setenv
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.200 2005/12/06 13:12:23 brlcad Exp $
d68 2
a69 2
AC_INIT(BRL-CAD, 7.6.5, [http://brlcad.org], brlcad)
AC_REVISION($Revision: 14.200 $)
d77 1
a77 1
PATCH_VERSION=5
@


14.200
log
@add support for --enable-everything and --disable everything options to simplify configuration when making distributions.  this requires consolidating all the 'checking' print messages for whether args were select together after checking for the everything setting.  also, add the args to BC_RETRY_CONFIGURE so that they are preserved on reinvocation.
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.199 2005/12/05 15:41:08 brlcad Exp $
d69 1
a69 1
AC_REVISION($Revision: 14.199 $)
d1541 1
@


14.199
log
@comment on the minimum version of autoconf required, add an initial --enable-everything option without implementing it yet
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.198 2005/11/20 14:35:27 brlcad Exp $
d69 1
a69 1
AC_REVISION($Revision: 14.198 $)
d89 4
a317 1
bc_use_doxygen=no
a318 2
#AC_MSG_CHECKING(whether to generate documentation with doxygen)
#AC_MSG_RESULT($bc_use_doxygen)
a374 2
AC_MSG_CHECKING(whether to compile everything was requested)
AC_MSG_RESULT($bc_everything)
a379 2
AC_MSG_CHECKING(whether to automatically set build flags)
AC_MSG_RESULT($bc_auto_flags)
a386 2
AC_MSG_CHECKING(whether to only build benchmark)
AC_MSG_RESULT($bc_only_benchmark)
a393 2
AC_MSG_CHECKING(whether to only build the raytrace server)
AC_MSG_RESULT($bc_only_rts)
a398 2
AC_MSG_CHECKING(whether to use run-time debug checks)
AC_MSG_RESULT($bc_build_runtime_debug)
a405 2
AC_MSG_CHECKING(whether to compile in 64-bit mode)
AC_MSG_RESULT($bc_build_64bit)
a410 2
AC_MSG_CHECKING(whether to build the regular expression library)
AC_MSG_RESULT($bc_build_regex)
a415 2
AC_MSG_CHECKING(whether to build the PNG library)
AC_MSG_RESULT($bc_build_png)
a420 2
AC_MSG_CHECKING(whether to build the zlib compression library)
AC_MSG_RESULT($bc_build_zlib)
a441 2
AC_MSG_CHECKING(whether to build the Utah Raster Toolkit)
AC_MSG_RESULT($bc_build_urt)
a446 2
AC_MSG_CHECKING(whether to build the Tcl library)
AC_MSG_RESULT($bc_build_tcl)
a451 2
AC_MSG_CHECKING(whether to build the Tk library)
AC_MSG_RESULT($bc_build_tk)
a462 2
AC_MSG_CHECKING(whether to build the incrTcl library)
AC_MSG_RESULT($bc_build_itcl)
a466 2
AC_MSG_CHECKING(whether to install the iwidgets library)
AC_MSG_RESULT($bc_build_iwidgets)
a475 2
AC_MSG_CHECKING(whether to build the termlib library)
AC_MSG_RESULT($bc_build_termlib)
a478 2
AC_MSG_CHECKING(whether to compile jove or not)
AC_MSG_RESULT($bc_build_jove)
a483 2
AC_MSG_CHECKING(whether to compile the Pro-Engineer plugin)
AC_MSG_RESULT($bc_build_proe)
a496 2
AC_MSG_CHECKING(whether to install example geometry databases)
AC_MSG_RESULT($bc_install_geometry)
a501 2
AC_MSG_CHECKING(whether to enable optimized compilation)
AC_MSG_RESULT($bc_use_optimized)
a508 2
AC_MSG_CHECKING(whether to enable verbose compilation warnings)
AC_MSG_RESULT($bc_use_warnings)
a511 2
AC_MSG_CHECKING(whether to disable debug mode compilation)
AC_MSG_RESULT($bc_use_debug)
a515 2
AC_MSG_CHECKING(whether to enable profile mode compilation)
AC_MSG_RESULT($bc_use_profiling)
a518 2
AC_MSG_CHECKING(whether to compile with the Java Development Kit)
AC_MSG_RESULT($bc_with_java)
a521 2
AC_MSG_CHECKING(whether to compile the X11 interfaces)
AC_MSG_RESULT($bc_with_x11)
a525 2
AC_MSG_CHECKING(whether to compile the OpenGL interfaces)
AC_MSG_RESULT($bc_with_opengl)
a528 2
AC_MSG_CHECKING(whether to compile the SDL interface to ADRT)
AC_MSG_RESULT($bc_with_sdl)
a531 2
AC_MSG_CHECKING(whether to compile the Python interface to ADRT)
AC_MSG_RESULT($bc_with_python)
d547 7
d568 145
d825 1
a825 1
			BC_RETRY_CONFIGURE([$0])
d837 1
a837 1
			# BC_RETRY_CONFIGURE([$0])
d849 1
a849 1
			# BC_RETRY_CONFIGURE([$0])
d1620 1
a1620 1
			BC_RETRY_CONFIGURE([$0])
d1676 1
a1676 1
			BC_RETRY_CONFIGURE([$0])
d1725 1
a1725 1
			BC_RETRY_CONFIGURE([$0])
d1780 1
a1780 1
			BC_RETRY_CONFIGURE([$0])
d1859 1
a1859 1
			BC_RETRY_CONFIGURE([$0])
d1952 1
a1952 1
			BC_RETRY_CONFIGURE([$0])
d2025 1
a2025 1
			BC_RETRY_CONFIGURE([$0])
d2099 1
a2099 1
			BC_RETRY_CONFIGURE([$0])
d2195 1
a2195 1
			BC_RETRY_CONFIGURE([$0])
d2304 1
a2304 1
		BC_RETRY_CONFIGURE([$0])
d2311 1
a2311 1
		BC_RETRY_CONFIGURE([$0])
d2362 1
a2362 1
			BC_RETRY_CONFIGURE([$0])
d2410 1
a2410 1
			BC_RETRY_CONFIGURE([$0])
@


14.198
log
@bad me, no donut for me -- should have updated the version numbers to the next version (7.6.5) after the cvs was tagged
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.197 2005/11/13 18:22:28 brlcad Exp $
d64 2
d69 1
a69 1
AC_REVISION($Revision: 14.197 $)
d268 3
d371 6
@


14.197
log
@merge the rel-7-6-branch merging removals of some of the rcs vars that don't seem so useful right now
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.196 2005/11/12 20:59:07 brlcad Exp $
d66 2
a67 2
AC_INIT(BRL-CAD, 7.6.4, [http://brlcad.org], brlcad)
AC_REVISION($Revision$)
d75 1
a75 1
PATCH_VERSION=4
@


14.196
log
@bah, the version is in two places .. should maybe change that sometime
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.195 2005/11/12 19:14:46 brlcad Exp $
d67 1
a67 1
AC_REVISION($Revision: 14.195 $)
@


14.195
log
@update version to 7.6.4, release preparations under way
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.194 2005/11/11 21:51:33 brlcad Exp $
d66 2
a67 2
AC_INIT(BRL-CAD, 7.6.3, [http://brlcad.org], brlcad)
AC_REVISION($Revision: 14.194 $)
@


14.194
log
@check for strtok
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.193 2005/11/09 04:41:52 brlcad Exp $
d67 1
a67 1
AC_REVISION($Revision: 14.193 $)
d75 1
a75 1
PATCH_VERSION=3
@


14.193
log
@use -Wnewline-eof instead of -fconstant-cfstrings as the 'benign' search_paths_first flag to be less confusing and perhaps even slightly useful -- the flag warns about files missing the trailing newline
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.192 2005/11/09 04:08:49 brlcad Exp $
d67 1
a67 1
AC_REVISION($Revision: 14.192 $)
d1450 1
@


14.192
log
@re-add a benign flag along with the -search_paths_first option so that it's not accidentally picked up by other linkers as a -s and -e linker path resulting in warnings regarding an 'arch_paths_first' symbol entry point. used -fconstant-cfstrings (which we have none of).
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.191 2005/11/04 10:36:23 brlcad Exp $
d67 1
a67 1
AC_REVISION($Revision: 14.191 $)
d1221 1
a1221 1
    BC_LINKER_RECOGNIZES([-Wl,-search_paths_first -fconstant-cfstrings])
@


14.191
log
@define compile-time debug/non-debug symbols DEBUG and NDEBUG so they are consistently available across the package (and so assert() can pick up NDEBUG correctly).  DEBUG is used by rt to make a note in the log that this is a debug build
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.190 2005/11/03 21:34:34 brlcad Exp $
d67 1
a67 1
AC_REVISION($Revision: 14.190 $)
d1216 6
a1221 3
    dnl check for -search_paths_first linker flag when making dylibs
    search_paths_first_flags="-Wl,-search_paths_first"
    BC_LINKER_RECOGNIZES([$search_paths_first_flags])
@


14.190
log
@readd the searching of top_srcdir/include as it is required in order to support distcheck and building in non-srcdir builds.  since it causes trouble for the system facility/header checks (e.g. tcl.h -- which probably shouldn't be in 'our' main header dir anyways), set the cppflag after the system checks are done.
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.189 2005/11/01 20:34:36 brlcad Exp $
d67 1
a67 1
AC_REVISION($Revision: 14.189 $)
d1475 1
d2472 6
@


14.189
log
@check for stdint.h and inttypes.h (irix doesn't have stdint.h)
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.188 2005/10/31 07:38:19 brlcad Exp $
d67 1
a67 1
AC_REVISION($Revision: 14.188 $)
d2377 1
a2377 1
# XXX nasty temp hack for backwards cake compatibility.
d2387 5
@


14.188
log
@check for setpgid function
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.187 2005/10/30 21:34:41 brlcad Exp $
d67 1
a67 1
AC_REVISION($Revision: 14.187 $)
d974 1
d997 1
@


14.187
log
@see if they have sched.h (aix fix)
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.186 2005/10/29 23:51:42 brlcad Exp $
d67 1
a67 1
AC_REVISION($Revision: 14.186 $)
d1427 1
@


14.186
log
@itcl doesn't need to include the include directory, in fact it causes problems since it can pick up our itcl.h which picks up our tcl.h which requires common.h which requires HAVE_CONFIG_H to be defined which causes problems. (thanks Stefan Fiedler)  in face, don't add include to our overall cppflags either since autoheader is supposed to take care of this in the makefiles
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.185 2005/10/29 21:30:57 brlcad Exp $
d67 1
a67 1
AC_REVISION($Revision: 14.185 $)
d990 1
@


14.185
log
@generate the makefile for src/mged/points
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.184 2005/10/27 03:36:04 brlcad Exp $
d67 1
a67 1
AC_REVISION($Revision: 14.184 $)
a1201 3
dnl include the BRL-CAD include directory (required)
CPPFLAGS="$CPPFLAGS -I\$(top_srcdir)/include"

a1866 1
PRECPPFLAGS="$CPPFLAGS"
a1868 1
	CPPFLAGS="$CPPFLAGS -Iinclude"
a1895 1
	CPPFLAGS="$PRECPPFLAGS"
@


14.184
log
@moved all the geometry converter directories from src/. to src/conv/.
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.183 2005/10/26 18:50:42 brlcad Exp $
d67 1
a67 1
AC_REVISION($Revision: 14.183 $)
d2697 1
@


14.183
log
@add an enable-automatic-flags option to enable/disable automatically messing with the CFLAGS/CPPFLAGS/LDFLAGS.  Useful on systems with different compilers were flags might seem to work when they don't (like aix)
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.182 2005/10/26 04:21:27 brlcad Exp $
d67 1
a67 1
AC_REVISION($Revision: 14.182 $)
a2659 1
	src/comgeom-g/Makefile
d2661 6
a2671 1
	src/iges/Makefile
a2672 1
	src/jack/Makefile
a2698 1
	src/off/Makefile
a2757 1
	src/patch/Makefile
a2779 1
	src/unigraphics/Makefile
@


14.182
log
@merge rel-7-6-branch to HEAD to update rev. to 7.6.3
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.181 2005/10/24 03:16:49 brlcad Exp $
d67 1
a67 1
AC_REVISION($Revision: 14.164.2.2 $)
d266 3
d366 7
d942 2
a943 1
case "$target" in
d948 2
a949 1
esac
d1202 1
a1202 1
dnl include the BRL-CAD include directory
d1205 4
a1208 2
dnl try to use -pipe to speed up the compiles
BC_COMPILER_AND_LINKER_RECOGNIZES([-pipe])
d1210 2
a1211 2
dnl check for -fno-strict-aliasing
BC_COMPILER_AND_LINKER_RECOGNIZES([-fno-strict-aliasing])
d1213 2
a1214 2
dnl check for -fno-common (libtcl needs it on darwin)
BC_COMPILER_AND_LINKER_RECOGNIZES([-fno-common])
d1216 3
a1218 3
dnl check for -search_paths_first linker flag when making dylibs
search_paths_first_flags="-Wl,-search_paths_first"
BC_LINKER_RECOGNIZES([$search_paths_first_flags])
d1220 2
a1221 2
dnl 64bit compilation flags
if test "x$bc_build_64bit" = "xyes" ; then
d1260 3
d1315 11
a1325 7
	if test "x$bc_mac_opt_flag_works" = "xno" ; then
		extra_optimization_flag="-ffast-math -fstrength-reduce -fexpensive-optimizations -finline-functions"
		if test "x$bc_use_debug" = "xno" ; then
			dnl non-debug can omit the frame pointer, debug cannot
			extra_optimization_flag="$extra_optimization_flag -fomit-frame-pointer"
		else
			extra_optimization_flag="$extra_optimization_flag -fno-omit-frame-pointer"
a1326 1
		BC_COMPILER_AND_LINKER_RECOGNIZES([$extra_optimization_flag])
@


14.181
log
@heh, not C code
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.180 2005/10/24 03:15:28 brlcad Exp $
d66 2
a67 2
AC_INIT(BRL-CAD, 7.6.1, [http://brlcad.org], brlcad)
AC_REVISION($Revision: 14.180 $)
d75 1
a75 1
PATCH_VERSION=1
@


14.180
log
@now it becomes clear -- even if they do have python and sdl, that doesn't mean adrt will build until the adrt makefiles are fixed and the hard paths are removed
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.179 2005/10/23 04:44:25 brlcad Exp $
d67 1
a67 1
AC_REVISION($Revision: 14.179 $)
d2332 1
a2332 1
/* force adrt off until the makefiles are fixed in src/adrt */
@


14.179
log
@trailing ws
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.178 2005/10/21 03:13:04 brlcad Exp $
d67 1
a67 1
AC_REVISION($Revision: 14.178 $)
d2332 2
@


14.178
log
@get rid of the -fPIC hack, libtool really should take care of it (figure out the altix problem later if it's still around); get rid of -mdynamic-no-pic as it wasn't supposed to actually get added to a flag, it only encouraged the test to fail on non darwin systems before the tests were refactored to BC_ tests.
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.177 2005/10/07 22:21:40 brlcad Exp $
d45 1
a45 1
dnl at the end.  Although it may be possible to check for certain 
d67 1
a67 1
AC_REVISION($Revision: 14.177 $)
d204 1
a204 1
AC_MSG_CHECKING([whether dependency tracking should be enabled]) 
d272 1
a272 1
# run-time debugging 
d736 1
a736 1
dnl if building jove wasn't specifically requested and wasn't 
d1072 1
a1072 1
AC_CHECK_HEADER(regex.h, 
d1080 1
a1080 1
AC_CHECK_HEADER(JavaVM/jni.h, 
d1225 1
a1225 1
	
d1257 1
a1257 1
		fi			
d1274 1
a1274 1
		fi			
d1324 1
a1324 1
AC_C_BIGENDIAN(AC_DEFINE(NATURAL_IEEE,,64b floating point storage technique), 
d1446 1
a1446 1
AC_CHECK_FUNC(memmove, , [AC_DEFINE(NO_MEMMOVE,, From Tcl -- No memmove) 
d1705 1
a1705 1
#endif 
d1798 1
a1798 1
#endif 
d1873 1
a1873 1
#endif 
d2324 1
a2324 1
	fi   
d2410 1
a2410 1
dnl Any combination of the different optimizations listed below may individually be 
d2422 1
a2422 1
dnl      is a risky optimization to turn off checking in librt/shoot.c for bad rays 
d2425 1
a2425 1
dnl      is an optimization that replaces instances of rt_g.debug in if statements 
@


14.177
log
@oh yeah, twingy disabled ADRT permanently, though I forget why.  re-enable it.
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.176 2005/10/01 23:03:28 brlcad Exp $
d67 1
a67 1
AC_REVISION($Revision: 14.176 $)
d601 3
a606 3
dnl added in autoconf 2.54 to define _GNU_SOURCE
AC_GNU_SOURCE

a1201 4
dnl check for -fPIC (libtcl needs it on altix)
dnl !!! libtool should be taking care of this one
BC_COMPILER_AND_LINKER_RECOGNIZES([-fPIC])

d1203 2
a1204 2
search_paths_first_flags="-Wl,-search_paths_first -mdynamic-no-pic"
BC_COMPILER_AND_LINKER_RECOGNIZES([$search_paths_first_flags])
@


14.176
log
@make note of the fact that ac_gnu_source requires autoconf 2.54+, and ac_header_stdbool requires 2.55+
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.175 2005/09/23 20:21:44 erikgreenwald Exp $
d67 1
a67 1
AC_REVISION($Revision: 14.175 $)
d2400 1
a2400 1
AM_CONDITIONAL(BUILD_ADRT, [test "x$build_brlcad_adrt" = "xyes-not-now"])
@


14.175
log
@FreeBSD renames libtcl8.4 to libtcl84
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.174 2005/09/22 12:19:53 brlcad Exp $
d67 1
a67 1
AC_REVISION($Revision: 14.174 $)
d602 3
a605 1
AC_MINIX
d1140 3
a1144 1
AC_HEADER_STDBOOL
@


14.174
log
@check for the signal.h header and raise(), used by libbu/parallel.c
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.173 2005/09/21 16:18:01 twingy Exp $
d67 1
a67 1
AC_REVISION($Revision: 14.173 $)
d848 3
a850 1
	    [AC_CHECK_LIB(tcl, Tcl_Main, tcl_link_works=yes ; LIBTCL="-ltcl")]
@


14.173
log
@libvis->librender
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.172 2005/09/21 02:16:12 twingy Exp $
d67 1
a67 1
AC_REVISION($Revision: 14.172 $)
d975 1
d1399 1
@


14.172
log
@changed to reflect libvis
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.171 2005/09/19 22:16:47 brlcad Exp $
d67 1
a67 1
AC_REVISION($Revision: 14.171 $)
d2616 1
a2616 1
	src/adrt/libvis/Makefile
@


14.171
log
@have_java_h was changed to found_jni_h
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.170 2005/09/19 20:55:41 brlcad Exp $
d67 1
a67 1
AC_REVISION($Revision: 14.170 $)
a2611 1
	src/adrt/librender/Makefile
d2616 1
@


14.170
log
@-mdynamic-no-pic needs to pass by the compiler too since the linker doesn't seem to care if it's not valid (at least on linux)
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.169 2005/09/19 20:54:17 brlcad Exp $
d67 1
a67 1
AC_REVISION($Revision: 14.169 $)
d2164 1
a2164 1
if test "x$have_java_h" = "xno" ; then
@


14.169
log
@bzw isn't ready
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.168 2005/09/19 19:47:03 brlcad Exp $
d67 1
a67 1
AC_REVISION($Revision: 14.168 $)
d1201 1
a1201 1
BC_LINKER_RECOGNIZES([$search_paths_first_flags])
@


14.168
log
@-fast seems to provoke stack corruption in the shadow computations so disable it for now
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.167 2005/09/19 14:59:54 brlcad Exp $
d67 1
a67 1
AC_REVISION($Revision: 14.167 $)
a2635 1
	src/conv/bzw/Makefile
@


14.167
log
@generate the misc/win32-msvc/Dll/Makefile
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.166 2005/09/16 18:46:33 brlcad Exp $
d67 1
a67 1
AC_REVISION($Revision: 14.166 $)
d1287 8
a1294 4
	BC_COMPILER_AND_LINKER_RECOGNIZES([-fast], [mac_opt_flag])
	if test "x$bc_mac_opt_flag_works" = "xno" ; then
		BC_COMPILER_AND_LINKER_RECOGNIZES([-fast -mcpu=7450], [mac_opt_flag])
	fi
d2636 1
@


14.166
log
@massive changes, conversion over to new macros for the compiler/linker tests.  identify each section of the configure file using the configure stage macro that provides bolding the output for the various stages.  change the check for java to be enabled by default.  fix the high-optimization conflict with profiling (cannot omit frame pointer). rework the java tests some.  add a YFLAGS for -d
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.165 2005/09/09 01:49:24 brlcad Exp $
d67 1
a67 1
AC_REVISION($Revision: 14.165 $)
d2600 1
@


14.165
log
@bump to 7.6.1 after tagging/releasing 7.6.0
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.164 2005/09/08 22:23:20 lbutler Exp $
d67 1
a67 1
AC_REVISION($Revision: 14.164 $)
d103 2
d108 1
d121 6
d262 1
a262 2
AC_MSG_CHECKING([... a r g u m e n t s ])
AC_MSG_RESULT([(1 of 9)])
d312 1
a312 1
BC_ARG_ENABLE([build_jove], [jove], [Enable compilation of jove], [no])
d597 1
a597 2
AC_MSG_CHECKING([... p r o g r a m s ])
AC_MSG_RESULT([(2 of 9)])
d733 16
a748 1
		
d754 1
a754 2
AC_MSG_CHECKING([... l i b r a r i e s ])
AC_MSG_RESULT([(3 of 9)])
a931 1
		bc_with_java=yes
d942 1
a942 2
AC_MSG_CHECKING([... h e a d e r s ])
AC_MSG_RESULT([(4 of 9)])
d1081 1
a1084 1
		bc_with_java=no
a1091 5
else
	# even though --with-jdk was not given, header was found and is needed
	if test "x$bc_only_rts" != "xno" ; then
		bc_with_java=yes
	fi
d1093 2
a1094 1
if test "x$search_for_jni_h_more" != "xno" ; then
a1095 1
	pre_cppflags="$CPPFLAGS"
d1100 2
a1101 1
				CPPFLAGS="-I$macjvmdir/$dir/Headers $CPPFLAGS"
a1114 1
		bc_with_java=yes
a1120 5
	else
		CPPFLAGS="$pre_cppflags"
		AC_MSG_NOTICE([}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}])
		AC_MSG_WARN([Code dependant upon java and jni.h will not be built])
		AC_MSG_NOTICE([{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{])
d1124 2
d1133 1
a1133 2
AC_MSG_CHECKING([... t y p e s ])
AC_MSG_RESULT([(5 of 9)])
d1181 1
a1181 2
AC_MSG_CHECKING([... c o m p i l e r ])
AC_MSG_RESULT([(6 of 9)])
d1187 1
a1187 13
pipe_flag="-pipe"
AC_MSG_CHECKING([if the compiler understands $pipe_flag])
pipe_flag_works=yes
PRECFLAGS="$CFLAGS"
PRELDFLAGS="$LDFLAGS"
CFLAGS="$CFLAGS $pipe_flag"
LDFLAGS="$LDFLAGS $pipe_flag"
AC_TRY_COMPILE( [], [], [], [pipe_flag_works=no])
AC_MSG_RESULT($pipe_flag_works)
if test "x$pipe_flag_works" = "xno" ; then
	CFLAGS="$PRECFLAGS"
	LDFLAGS="$PRELDFLAGS"
fi
d1190 1
a1190 13
fno_strict_aliasing_flag="-fno-strict-aliasing"
AC_MSG_CHECKING([if the compiler understands $fno_strict_aliasing_flag])
fno_strict_aliasing_flag_works=yes
PRECFLAGS="$CFLAGS"
PRELDFLAGS="$LDFLAGS"
CFLAGS="$CFLAGS $fno_strict_aliasing_flag"
LDFLAGS="$LDFLAGS $fno_strict_aliasing_flag"
AC_TRY_COMPILE( [], [], [], [fno_strict_aliasing_flag_works=no])
AC_MSG_RESULT($fno_strict_aliasing_flag_works)
if test "x$fno_strict_aliasing_flag_works" = "xno" ; then
	CFLAGS="$PRECFLAGS"
	LDFLAGS="$PRELDFLAGS"
fi
d1193 1
a1193 13
fno_common_flag="-fno-common"
AC_MSG_CHECKING([if the compiler understands $fno_common_flag])
fno_common_flag_works=yes
PRECFLAGS="$CFLAGS"
PRELDFLAGS="$LDFLAGS"
CFLAGS="$CFLAGS $fno_common_flag"
LDFLAGS="$LDFLAGS $fno_common_flag"
AC_TRY_COMPILE( [], [], [], [fno_common_flag_works=no])
AC_MSG_RESULT($fno_common_flag_works)
if test "x$fno_common_flag_works" = "xno" ; then
	CFLAGS="$PRECFLAGS"
	LDFLAGS="$PRELDFLAGS"
fi
d1196 2
a1197 13
fPIC_flag="-fPIC"
AC_MSG_CHECKING([if the compiler understands $fPIC_flag])
fPIC_flag_works=yes
PRECFLAGS="$CFLAGS"
PRELDFLAGS="$LDFLAGS"
CFLAGS="$CFLAGS $fPIC_flag"
LDFLAGS="$LDFLAGS $fPIC_flag"
AC_TRY_COMPILE( [], [], [], [fPIC_flag_works=no])
AC_MSG_RESULT($fPIC_flag_works)
if test "x$fPIC_flag_works" = "xno" ; then
	CFLAGS="$PRECFLAGS"
	LDFLAGS="$PRELDFLAGS"
fi
d1200 2
a1201 10
search_paths_first_flag="-Wl,-search_paths_first -mdynamic-no-pic"
AC_MSG_CHECKING([if the compiler understands $search_paths_first_flag])
search_paths_first_flag_works=yes
PRELDFLAGS="$LDFLAGS"
LDFLAGS="$LDFLAGS $search_paths_first_flag"
AC_TRY_LINK( [], [], [], [search_paths_first_flag_works=no])
AC_MSG_RESULT($search_paths_first_flag_works)
if test "x$search_paths_first_flag_works" = "xno" ; then
	LDFLAGS="$PRELDFLAGS"
fi
d1217 2
a1218 16
		flag_64="-64"
		AC_MSG_CHECKING([if the compiler understands $flag_64])
		flag_64_works=yes
		PRECFLAGS="$CFLAGS"
		PRELDFLAGS="$LDFLAGS"
		CFLAGS="$CFLAGS $flag_64"
		LDFLAGS="$LDFLAGS $flag_64"
		m4_pushdef([AC_TRY_EVAL], [_AC_EVAL_STDERR]($$[1]))
		AC_TRY_COMPILE( [], [], [if AC_TRY_COMMAND([grep "nrecognize" conftest.err >/dev/null 2>&1]) ; then flag_64_works=no ; fi], [flag_64_works=no])
		m4_popdef([AC_TRY_EVAL]) 
		rm -f conftest.err
		AC_MSG_RESULT($flag_64_works)
		if test "x$flag_64_works" = "xno" ; then
			CFLAGS="$PRECFLAGS"
			LDFLAGS="$PRELDFLAGS"
		else
d1224 2
a1225 16
		mabi_64_flag="-mabi=64"
		AC_MSG_CHECKING([if the compiler understands $mabi_64_flag])
		mabi_64_flag_works=yes
		PRECFLAGS="$CFLAGS"
		PRELDFLAGS="$LDFLAGS"
		CFLAGS="$CFLAGS $mabi_64_flag"
		LDFLAGS="$LDFLAGS $mabi_64_flag"
		m4_pushdef([AC_TRY_EVAL], [_AC_EVAL_STDERR]($$[1]))
		AC_TRY_COMPILE( [], [], [if AC_TRY_COMMAND([grep "nrecognize" conftest.err >/dev/null 2>&1]) ; then mabit_64_flag_works=no ; fi], [mabit_64_flag_works=no])
		m4_popdef([AC_TRY_EVAL]) 
		AC_TRY_COMPILE( [], [], [], [mabi_64_flag_works=no])
		AC_MSG_RESULT($mabi_64_flag_works)
		if test "x$mabi_64_flag_works" = "xno" ; then
			CFLAGS="$PRECFLAGS"
			LDFLAGS="$PRELDFLAGS"
		else
d1231 2
a1232 16
		m64_flag="-m64"
		AC_MSG_CHECKING([if the compiler understands $m64_flag])
		m64_flag_works=yes
		PRECFLAGS="$CFLAGS"
		PRELDFLAGS="$LDFLAGS"
		CFLAGS="$CFLAGS $m64_flag"
		LDFLAGS="$LDFLAGS $m64_flag"
		m4_pushdef([AC_TRY_EVAL], [_AC_EVAL_STDERR]($$[1]))
		AC_TRY_COMPILE( [], [], [if AC_TRY_COMMAND([grep "nrecognize" conftest.err >/dev/null 2>&1]) ; then m64_flag_works=no ; fi], [m64_flag_works=no])
		m4_popdef([AC_TRY_EVAL]) 
		AC_TRY_COMPILE( [], [], [], [m64_flag_works=no])
		AC_MSG_RESULT($m64_flag_works)
		if test "x$m64_flag_works" = "xno" ; then
			CFLAGS="$PRECFLAGS"
			LDFLAGS="$PRELDFLAGS"
		else
d1238 2
a1239 15
		q64_flag="-q64"
		AC_MSG_CHECKING([if the compiler understands $q64_flag])
		q64_flag_works=yes
		PRECFLAGS="$CFLAGS"
		PRELDFLAGS="$LDFLAGS"
		CFLAGS="$CFLAGS $q64_flag"
		LDFLAGS="$LDFLAGS $q64_flag"
		m4_pushdef([AC_TRY_EVAL], [_AC_EVAL_STDERR]($$[1]))
		AC_TRY_COMPILE( [], [], [if AC_TRY_COMMAND([grep "nrecognize" conftest.err >/dev/null 2>&1]) ; then q64_flag_works=no ; fi], [q64_flag_works=no])
		m4_popdef([AC_TRY_EVAL]) 
		AC_MSG_RESULT($q64_flag_works)
		if test "x$q64_flag_works" = "xno" ; then
			CFLAGS="$PRECFLAGS"
			LDFLAGS="$PRELDFLAGS"
		else
d1247 2
a1248 10
	pg_flag="-pg"
	AC_MSG_CHECKING([if the compiler understands $pg_flag])
	pg_flag_works=yes
	PRECFLAGS="$CFLAGS"
	PRELDFLAGS="$LDFLAGS"
	CFLAGS="$CFLAGS $pg_flag"
	LDFLAGS="$LDFLAGS $pg_flag"
	AC_TRY_COMPILE( [], [], [], [pg_flag_works=no])
	AC_MSG_RESULT($pg_flag_works)
	if test "x$pg_flag_works" = "xno" ; then
d1256 3
a1258 2
		CFLAGS="$PRECFLAGS"
		LDFLAGS="$PRELDFLAGS"
d1264 2
a1265 10
	g_flag="-g"
	AC_MSG_CHECKING([if the compiler understands $g_flag])
	g_flag_works=yes
	PRECFLAGS="$CFLAGS"
	PRELDFLAGS="$LDFLAGS"
	CFLAGS="$CFLAGS $g_flag"
	LDFLAGS="$LDFLAGS $g_flag"
	AC_TRY_COMPILE( [], [], [], [g_flag_works=no])
	AC_MSG_RESULT($g_flag_works)
	if test "x$g_flag_works" = "xno" ; then
a1272 2
		CFLAGS="$PRECFLAGS"
		LDFLAGS="$PRELDFLAGS"
d1281 2
a1282 10
	O3_flag="-O3"
	AC_MSG_CHECKING([if the compiler understands $O3_flag])
	O3_flag_works=yes
	PRECFLAGS="$CFLAGS"
	PRELDFLAGS="$LDFLAGS"
	CFLAGS="$CFLAGS $O3_flag"
	LDFLAGS="$LDFLAGS $O3_flag"
	AC_TRY_COMPILE( [], [], [], [O3_flag_works=no])
	AC_MSG_RESULT($O3_flag_works)
	if test "x$O3_flag_works" = "xno" ; then
a1283 2
		CFLAGS="$PRECFLAGS"
		LDFLAGS="$PRELDFLAGS"
d1286 14
a1299 19
	dnl check for a slew of gcc optimizations that may or may not be available with -O3
	extra_optimization_flag="-ffast-math -fstrength-reduce -fexpensive-optimizations -finline-functions"
	if test "x$bc_use_debug" = "xno" ; then
	   dnl non-debug can omit the frame pointer, debug cannot
	   extra_optimization_flag="$extra_optimization_flag -fomit-frame-pointer"
	else
	   extra_optimization_flag="$extra_optimization_flag -fno-omit-frame-pointer"
	fi
	AC_MSG_CHECKING([if the compiler understands extra optimization flags])
	extra_optimization_flag_works=yes
	PRECFLAGS="$CFLAGS"
	PRELDFLAGS="$LDFLAGS"
	CFLAGS="$CFLAGS $extra_optimization_flag"
	LDFLAGS="$LDFLAGS $extra_optimization_flag"
	AC_TRY_COMPILE( [], [], [], [extra_optimization_flag_works=no])
	AC_MSG_RESULT($extra_optimization_flag_works)
	if test "x$extra_optimization_flag_works" = "xno" ; then
		CFLAGS="$PRECFLAGS"
		LDFLAGS="$PRELDFLAGS"
d1305 5
a1309 12
	warning_flag="-W -Wall -Wundef -Wfloat-equal -Wshadow -Wunreachable-code -Winline -Wconversion"
		# XXX also of interest
		# -Wmissing-declarations -Wmissing-prototypes -Wstrict-prototypes -pedantic -ansi -Werror
	AC_MSG_CHECKING([if the compiler understands warning flags])
	warning_flag_works=yes
	PRECFLAGS="$CFLAGS"
	PRELDFLAGS="$LDFLAGS"
	CFLAGS="$CFLAGS $warning_flag"
	LDFLAGS="$LDFLAGS $warning_flag"
	AC_TRY_COMPILE( [], [], [], [warning_flag_works=no])
	AC_MSG_RESULT($warning_flag_works)
	if test "x$warning_flag_works" = "xno" ; then
a1310 2
		CFLAGS="$PRECFLAGS"
		LDFLAGS="$PRELDFLAGS"
d1350 1
a1350 2
AC_MSG_CHECKING([... f u n c t i o n s ])
AC_MSG_RESULT([(7 of 9)])
d1450 1
a1450 2
AC_MSG_CHECKING([... s e r v i c e s ])
AC_MSG_RESULT([(8 of 9)])
d2160 2
a2161 2
if test "x$bc_only_rts" != "xno" ; then
	if test "x$bc_with_java" = "xno" ; then
d2168 25
a2192 2
	AC_MSG_RESULT(yes)
	build_against_java=yes
a2193 1
AC_MSG_NOTICE([$bc_with_java ($bc_with_java_val)])
d2375 1
a2375 2
AC_MSG_CHECKING([... o u t p u t ])
AC_MSG_RESULT([(9 of 9)])
a2401 6

# !!! needs to go bye bye
AC_DEFINE(DM_X,1,[Display for X])
AC_DEFINE(DM_OGL,1,[yeah, GL])


a2578 1
	doc/html/manuals/ReleaseNotes/Makefile
d2785 1
d2787 1
d2800 16
a2815 16
AC_MSG_RESULT([ Build Tcl ............................: $build_brlcad_tcl])
AC_MSG_RESULT([ Build Tk .............................: $build_brlcad_tk])
AC_MSG_RESULT([ Build Itcl/Itk .......................: $build_brlcad_itcl])
AC_MSG_RESULT([ Build IWidgets .......................: $build_brlcad_iwidgets])
AC_MSG_RESULT([ Build libpng .........................: $build_brlcad_png])
AC_MSG_RESULT([ Build libregex .......................: $build_brlcad_regex])
AC_MSG_RESULT([ Build zlib ...........................: $build_brlcad_zlib])
AC_MSG_RESULT([ Build termlib ........................: $build_brlcad_termlib])
AC_MSG_RESULT([ Build Utah Raster Toolkit.............: $build_brlcad_urt])
AC_MSG_RESULT([ Build jove ...........................: $bc_build_jove])
AC_MSG_RESULT([ ])
AC_MSG_RESULT([ ADRT support .........................: $build_brlcad_adrt])
AC_MSG_RESULT([ Java Developer Kit support ...........: $build_against_java])
AC_MSG_RESULT([ X11 support ..........................: $build_against_x11])
AC_MSG_RESULT([ OpenGL support .......................: $build_against_opengl])
AC_MSG_RESULT([ Enable run-time debugging ............: $bc_build_runtime_debug])
d2817 7
a2823 7
AC_MSG_RESULT([ Build 64-bit release .................: $build_brlcad_64bit])
AC_MSG_RESULT([ Build optimized release ..............: $bc_use_optimized])
AC_MSG_RESULT([ Build debug release ..................: $bc_use_debug])
AC_MSG_RESULT([ Build profile release ................: $bc_use_profiling])
AC_MSG_RESULT([ Build static libraries ...............: $enable_static])
AC_MSG_RESULT([ Build shared/dynamic libraries .......: $enable_shared])
AC_MSG_RESULT([ Print verbose compilation warnings ...: $bc_use_warnings])
d2825 4
a2828 4
AC_MSG_RESULT([ Only build benchmark suite ...........: $bc_only_benchmark])
AC_MSG_RESULT([ Only build librtserver ...............: $bc_only_rts])
AC_MSG_RESULT([ Generate doxygen documentation .......: $bc_use_doxygen])
AC_MSG_RESULT([ Install example geometry models ......: $bc_install_geometry])
d2831 1
a2831 1
AC_MSG_RESULT([ Elapsed configuration time ...........: $time_elapsed])
d2833 1
a2833 1
AC_MSG_RESULT([ ---])
@


14.164
log
@Release 7.6.0 Wahoo!
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.163 2005/09/07 21:42:15 lbutler Exp $
d66 2
a67 2
AC_INIT(BRL-CAD, 7.6.0, [http://brlcad.org], brlcad)
AC_REVISION($Revision: 14.163 $)
d75 1
a75 1
PATCH_VERSION=0
@


14.164.2.1
log
@bump to 7.6.2 for an emergency patch release to coincide with a muves release
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.164 2005/09/08 22:23:20 lbutler Exp $
d66 2
a67 2
AC_INIT(BRL-CAD, 7.6.2, [http://brlcad.org], brlcad)
AC_REVISION($Revision: 14.164 $)
d75 1
a75 1
PATCH_VERSION=2
@


14.164.2.2
log
@bump to 7.6.3 after tag/release
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.164.2.1 2005/09/29 06:20:59 brlcad Exp $
d66 2
a67 2
AC_INIT(BRL-CAD, 7.6.3, [http://brlcad.org], brlcad)
AC_REVISION($Revision: 14.164.2.1 $)
d75 1
a75 1
PATCH_VERSION=3
@


14.164.2.3
log
@merge changes from HEAD aka rel-7-6-4 to the rel-7-6-branch just in case someone peeks a gander or tries to continue/build the branch
@
text
@d21 1
a21 1
dnl $Id$
d45 1
a45 1
dnl at the end.  Although it may be possible to check for certain
d66 2
a67 2
AC_INIT(BRL-CAD, 7.6.4, [http://brlcad.org], brlcad)
AC_REVISION($Revision$)
d75 1
a75 1
PATCH_VERSION=4
a102 2

BC_BOLD
a105 1
BC_UNBOLD
a117 6
# override the default (empty) yflags (yacc) if user has not modified them
if test "x$YFLAGS" = "x" ; then
	YFLAGS="-d"
fi
AC_SUBST(YFLAGS)

d195 1
a195 1
AC_MSG_CHECKING([whether dependency tracking should be enabled])
d253 2
a254 1
BC_CONFIGURE_STAGE([arguments], [1 of 9])
a257 3
# automatic flag updates
BC_ARG_ENABLE([auto_flags], [automatic-flags], [Automatically configure build flags], [yes])

d264 1
a264 1
# run-time debugging
d304 1
a304 1
BC_ARG_ENABLE([build_jove], [jove], [Enable compilation of jove], [auto])
a354 7
# aliases for allowing configure to modify the flags automatically (help uses automatic-flags)
BC_ARG_ALIAS([auto_flags], [auto-flags])
BC_ARG_ALIAS([auto_flags], [auto-flag])
BC_ARG_ALIAS([auto_flags], [automatic-flag])
AC_MSG_CHECKING(whether to automatically set build flags)
AC_MSG_RESULT($bc_auto_flags)

d589 2
a590 1
BC_CONFIGURE_STAGE([programs], [2 of 9])
d594 1
a594 1
dnl added in autoconf 2.54 to define _GNU_SOURCE
a595 2

AC_AIX
d726 1
a726 16

dnl if building jove wasn't specifically requested and wasn't
dnl disabled, see if there is either emacs or jove available.
BCEDITOR=""
if test "x$bc_build_jove" = "xauto" ; then
	AC_PATH_PROG(BCEDITOR, emacs, , $PATH)
	if test "x$BCEDITOR" = "x" ; then
		AC_PATH_PROG(BCEDITOR, jove, , $PATH)
	fi
	if test "x$BCEDITOR" = "x" ; then
		bc_build_jove=yes
	else
		bc_build_jove=no
	fi
fi

d732 2
a733 1
BC_CONFIGURE_STAGE([libraries], [3 of 9])
d827 1
a827 3
	    [AC_CHECK_LIB(tcl84, Tcl_Main, tcl_link_works=yes ; LIBTCL="-ltcl84",
		[AC_CHECK_LIB(tcl, Tcl_Main, tcl_link_works=yes ; LIBTCL="-ltcl")]
	    )]
d907 1
a907 2
if test ! "x$bc_auto_flags" = "xno" ; then
    case "$target" in
d911 1
d913 1
a913 2
    esac
fi
d922 2
a923 1
BC_CONFIGURE_STAGE([headers], [4 of 9])
a938 1
	inttypes.h \
a954 1
	sched.h \
a955 1
	signal.h \
a958 1
	stdint.h \
d1048 1
a1048 1
AC_CHECK_HEADER(regex.h,
d1056 1
a1056 1
AC_CHECK_HEADER(JavaVM/jni.h,
a1061 1

d1065 1
d1073 5
d1079 1
a1079 2

if test "x$search_for_jni_h_more" = "xyes" ; then
d1081 1
d1086 1
a1086 2
				JAVA_CFLAGS="$JAVA_CFLAGS -I$macjvmdir/$dir/Headers"
				CPPFLAGS="$CPPFLAGS -I$macjvmdir/$dir/Headers"
d1100 1
d1107 5
a1114 2


d1122 2
a1123 4
BC_CONFIGURE_STAGE([types], [5 of 9])

dnl added in autoconf 2.55
AC_HEADER_STDBOOL
d1127 1
d1171 2
a1172 1
BC_CONFIGURE_STAGE([compiler], [6 of 9])
d1174 2
a1175 1
if test ! "x$bc_auto_flags" = "xno" ; then
d1177 14
a1190 2
    dnl try to use -pipe to speed up the compiles
    BC_COMPILER_AND_LINKER_RECOGNIZES([-pipe])
d1192 14
a1205 2
    dnl check for -fno-strict-aliasing
    BC_COMPILER_AND_LINKER_RECOGNIZES([-fno-strict-aliasing])
d1207 29
a1235 2
    dnl check for -fno-common (libtcl needs it on darwin)
    BC_COMPILER_AND_LINKER_RECOGNIZES([-fno-common])
d1237 11
a1247 6
    dnl check for -search_paths_first linker flag.
    dnl prevent a false-positive where it can be treated as a -s and-e
    dnl linker option by adding a benign flag that should succeed.
    dnl this flag allows dylibs and archives to be found based on a
    dnl library path search order, not biasing a preference for dylibs.
    BC_LINKER_RECOGNIZES([-Wl,-search_paths_first -Wnewline-eof])
d1249 2
a1250 2
    dnl 64bit compilation flags
    if test "x$bc_build_64bit" = "xyes" ; then
d1263 16
a1278 2
		BC_COMPILER_AND_LINKER_RECOGNIZES([-64], [64_flag])
		if test "x$bc_64_flag_works" = "xyes" ; then
d1282 1
a1282 1

d1284 16
a1299 2
		BC_COMPILER_AND_LINKER_RECOGNIZES([-mabi=64], [64_flag])
		if test "x$bc_64_flag_works" = "xyes" ; then
d1305 16
a1320 2
		BC_COMPILER_AND_LINKER_RECOGNIZES([-m64], [64_flag])
		if test "x$bc_64_flag_works" = "xyes" ; then
d1326 15
a1340 2
		BC_COMPILER_AND_LINKER_RECOGNIZES([-q64], [64_flag])
		if test "x$bc_64_flag_works" = "xyes" ; then
a1343 3
    fi

# end check for automatic flags
d1348 10
a1357 2
	BC_COMPILER_AND_LINKER_RECOGNIZES([-pg], [profile_flag])
	if test "x$bc_debug_flag_works" = "xno" ; then
d1363 1
a1363 1
		fi
d1365 2
a1366 3
	else
		# convert 'auto' to 'no' even though it works
		bc_use_profiling=no
d1372 10
a1381 2
	BC_COMPILER_AND_LINKER_RECOGNIZES([-g], [debug_flag])
	if test "x$bc_debug_flag_works" = "xno" ; then
d1387 1
a1387 1
		fi
d1389 2
d1399 10
a1408 2
	BC_COMPILER_AND_LINKER_RECOGNIZES([-O3], [o3_flag])
	if test "x$bc_o3_flag_works" = "xno" ; then
d1410 2
d1414 19
a1432 21

# XXX -fast seems to provoke stack corruption in the shadow
# computations, possible that the corruption is indeed valid and
# there's something that needs to be checked/changed.
#
#	BC_COMPILER_AND_LINKER_RECOGNIZES([-fast], [mac_opt_flag])
#	if test "x$bc_mac_opt_flag_works" = "xno" ; then
#		BC_COMPILER_AND_LINKER_RECOGNIZES([-fast -mcpu=7450], [mac_opt_flag])
#	fi
	# don't set extra optimization flags if auto-flags was turned off
	if test ! "x$bc_auto_flags" = "xno" ; then
		if test "x$bc_mac_opt_flag_works" = "xno" ; then
			extra_optimization_flag="-ffast-math -fstrength-reduce -fexpensive-optimizations -finline-functions"
			if test "x$bc_use_debug" = "xno" ; then
				dnl non-debug can omit the frame pointer, debug cannot
				extra_optimization_flag="$extra_optimization_flag -fomit-frame-pointer"
			else
				extra_optimization_flag="$extra_optimization_flag -fno-omit-frame-pointer"
			fi
			BC_COMPILER_AND_LINKER_RECOGNIZES([$extra_optimization_flag])
		fi
d1438 12
a1449 5
	BC_COMPILER_AND_LINKER_RECOGNIZES([-W -Wall -Wundef -Wfloat-equal -Wshadow -Wunreachable-code -Winline -Wconversion], [warning])
	# XXX also of interest
	# -Wmissing-declarations -Wmissing-prototypes -Wstrict-prototypes -pedantic -ansi -Werror

	if test "x$bc_warning_flag_works" = "xno" ; then
d1451 2
d1459 1
a1459 1
AC_C_BIGENDIAN(AC_DEFINE(NATURAL_IEEE,,64b floating point storage technique),
d1492 2
a1493 1
BC_CONFIGURE_STAGE([functions], [7 of 9])
a1536 1
	raise \
a1543 1
	setpgid \
a1560 1
	strtok \
d1581 1
a1581 1
AC_CHECK_FUNC(memmove, , [AC_DEFINE(NO_MEMMOVE,, From Tcl -- No memmove)
a1588 1

d1593 2
a1594 1
BC_CONFIGURE_STAGE([services], [8 of 9])
d1841 1
a1841 1
#endif
d1934 1
a1934 1
#endif
d1986 1
d1989 1
d2009 1
a2009 1
#endif
d2017 1
d2304 2
a2305 2
if test "x$found_jni_h" = "xno" ; then
	if test "x$bc_only_rts" != "xno" ; then
d2312 2
a2313 25
	if test "x$bc_with_java" = "xyes" ; then
		AC_MSG_RESULT(no)
		BC_RETRY_CONFIGURE([$0])
		AC_MSG_NOTICE([}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}])
		AC_MSG_ERROR([Failed to locate a functioning jni.h for Java])
	fi

	if test "x$bc_with_java" != "xauto" ; then
		AC_MSG_NOTICE([}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}])
		AC_MSG_WARN([Unable to locate a functioning Java])
		AC_MSG_WARN([Compilation of librtserver will be disabled])
		AC_MSG_NOTICE([{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{])
	fi
	AC_MSG_RESULT(no)
else
	if test "x$bc_with_java" != "xno" ; then
		if test "x$bc_with_java" = "xauto" ; then
			build_against_java=yes
		else
			build_against_java="yes ($bc_with_java_val)"
		fi
		AC_MSG_RESULT(yes)
	else
		AC_MSG_RESULT(no)
	fi
d2315 1
d2438 1
a2438 1
	fi
a2445 2
# force adrt off until the makefiles are fixed in src/adrt
build_brlcad_adrt="no"
d2471 1
a2471 1
# XXX nasty temp hack for backwards cake compatibility. code needs to be fixed.
a2480 5
dnl search the BRL-CAD include directory (required for non-srcdir builds).
dnl should come after the system services checks otherwise or our headers
dnl may conflict.
CPPFLAGS="$CPPFLAGS -I\$(top_srcdir)/include"

d2497 2
a2498 1
BC_CONFIGURE_STAGE([output], [9 of 9])
d2511 1
a2511 1
AM_CONDITIONAL(BUILD_ADRT, [test "x$build_brlcad_adrt" = "xyes"])
d2525 7
a2531 1
dnl Any combination of the different optimizations listed below may individually be
d2543 1
a2543 1
dnl      is a risky optimization to turn off checking in librt/shoot.c for bad rays
d2546 1
a2546 1
dnl      is an optimization that replaces instances of rt_g.debug in if statements
a2566 6
dnl compile-time debug
if test "x$bc_use_debug" != "xno" ; then
	AC_DEFINE(DEBUG, 1, [Define to enable compile-time debug code])
else
	AC_DEFINE(NDEBUG, 1, [Define to indicate non-debug code (assert utilizes)])
fi
d2708 1
a2729 1
	misc/win32-msvc/Dll/Makefile
d2737 1
a2741 1
	src/adrt/librender/Makefile
d2759 1
a2760 6
	src/conv/comgeom/Makefile
	src/conv/iges/Makefile
	src/conv/jack/Makefile
	src/conv/off/Makefile
	src/conv/patch/Makefile
	src/conv/unigraphics/Makefile
d2766 1
d2768 1
a2792 1
	src/mged/points/Makefile
d2795 1
d2855 1
d2878 1
a2914 1
BC_BOLD
a2915 1
BC_UNBOLD
d2928 16
a2943 16
AC_MSG_RESULT([Build Tcl ............................: $build_brlcad_tcl])
AC_MSG_RESULT([Build Tk .............................: $build_brlcad_tk])
AC_MSG_RESULT([Build Itcl/Itk .......................: $build_brlcad_itcl])
AC_MSG_RESULT([Build IWidgets .......................: $build_brlcad_iwidgets])
AC_MSG_RESULT([Build libpng .........................: $build_brlcad_png])
AC_MSG_RESULT([Build libregex .......................: $build_brlcad_regex])
AC_MSG_RESULT([Build zlib ...........................: $build_brlcad_zlib])
AC_MSG_RESULT([Build termlib ........................: $build_brlcad_termlib])
AC_MSG_RESULT([Build Utah Raster Toolkit.............: $build_brlcad_urt])
AC_MSG_RESULT([Build jove ...........................: $bc_build_jove])
AC_MSG_RESULT([])
AC_MSG_RESULT([ADRT support .........................: $build_brlcad_adrt])
AC_MSG_RESULT([Java Developer Kit support ...........: $build_against_java])
AC_MSG_RESULT([X11 support ..........................: $build_against_x11])
AC_MSG_RESULT([OpenGL support .......................: $build_against_opengl])
AC_MSG_RESULT([Enable run-time debugging ............: $bc_build_runtime_debug])
d2945 7
a2951 7
AC_MSG_RESULT([Build 64-bit release .................: $build_brlcad_64bit])
AC_MSG_RESULT([Build optimized release ..............: $bc_use_optimized])
AC_MSG_RESULT([Build debug release ..................: $bc_use_debug])
AC_MSG_RESULT([Build profile release ................: $bc_use_profiling])
AC_MSG_RESULT([Build static libraries ...............: $enable_static])
AC_MSG_RESULT([Build shared/dynamic libraries .......: $enable_shared])
AC_MSG_RESULT([Print verbose compilation warnings ...: $bc_use_warnings])
d2953 4
a2956 4
AC_MSG_RESULT([Only build benchmark suite ...........: $bc_only_benchmark])
AC_MSG_RESULT([Only build librtserver ...............: $bc_only_rts])
AC_MSG_RESULT([Generate doxygen documentation .......: $bc_use_doxygen])
AC_MSG_RESULT([Install example geometry models ......: $bc_install_geometry])
d2959 1
a2959 1
AC_MSG_RESULT([Elapsed configuration time ...........: $time_elapsed])
d2961 1
a2961 1
AC_MSG_RESULT([---])
@


14.164.2.4
log
@more merging changes from HEAD aka rel-7-6-4 to the rel-7-6-branch, adding the items that were moved and resolving rcs keyword conflicts
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.164.2.3 2005/11/13 13:46:08 brlcad Exp $
@


14.164.2.5
log
@more detail on the libtool cc1plus bug, fixed in libtool 1.5.10 but broken in previous versions where a c++ compiler becomes required.. try to bypass the error by aliasing cc1plus to cc1 (untested)
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.164.2.4 2005/11/13 17:44:59 brlcad Exp $
a63 2
dnl minimum version of autoconf required.  should coincide with
dnl setting in autogen.sh script.
a65 1
<<<<<<< configure.ac
a66 3
AC_REVISION($Revision: 14.164.2.4 $)
=======
AC_INIT(BRL-CAD, 7.6.6, [http://brlcad.org], brlcad)
a67 1
>>>>>>> 14.204
a74 1
<<<<<<< configure.ac
a75 3
=======
PATCH_VERSION=7
>>>>>>> 14.204
a86 4
# save the command-line in case there's a need to restart
this="$0"
args="$*"

a265 1
<<<<<<< configure.ac
a268 8
=======
# enable everything 
BC_ARG_ENABLE([everything], [everything], [Turn on compilation of everything], [auto])

# automatic flag updates
BC_ARG_ENABLE([auto_flags], [automatic-flags], [Automatically configure build flags], [yes])

>>>>>>> 14.204
d309 1
d311 2
a365 1
<<<<<<< configure.ac
a372 12
=======
# aliases for enabling configuration of everything (help uses everything)
BC_ARG_ALIAS([everything], [all])
BC_ARG_ALIAS([everything], [everything-build])
BC_ARG_ALIAS([everything], [build-everything])

# aliases for allowing configure to modify the flags automatically (help uses automatic-flags)
BC_ARG_ALIAS([auto_flags], [auto-flags])
BC_ARG_ALIAS([auto_flags], [auto-flag])
BC_ARG_ALIAS([auto_flags], [automatic-flag])

>>>>>>> 14.204
d379 2
d388 2
d395 2
d404 2
d411 2
d418 2
d425 2
d448 2
d455 2
d462 2
d475 2
d481 2
d492 2
d497 2
d504 2
d519 2
d526 2
d535 2
d540 2
d546 2
d551 2
d556 2
d562 2
d567 2
d572 2
a588 7
	if test "x$bc_everything" = "xyes" ; then
		AC_MSG_NOTICE([}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}])
		AC_MSG_WARN([Requesting ONLY benchmark and EVERYTHING?])
		AC_MSG_WARN([Building everything])
		AC_MSG_NOTICE([{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{])
		bc_only_benchmark=no
	fi
a602 145
# handle enabling/disabling all the packages and codes that ship with
# the package.  if something is changed from a default, leave it alone
# so that the user may specify everything and then disable specific
# ones.
set_everything=""
if test "x$bc_everything" = "xyes" ; then
	set_everything=yes
elif test "x$bc_everything" = "xno" ; then
	set_everything=no
fi
if test "x$set_everything" != "x" ; then
	if test "x$bc_build_runtime_debug" = "x$bc_build_runtime_debug_default" ; then
		bc_build_runtime_debug="$set_everything"
	fi
	if test "x$bc_build_regex" = "x$bc_build_regex_default" ; then
		bc_build_regex="$set_everything"
	fi
	if test "x$bc_build_png" = "x$bc_build_png_default" ; then
		bc_build_png="$set_everything"
	fi
	if test "x$bc_build_zlib" = "x$bc_build_zlib_default" ; then
		bc_build_zlib="$set_everything"
	fi
	if test "x$bc_build_urt" = "x$bc_build_urt_default" ; then
		bc_build_urt="$set_everything"
	fi
	if test "x$bc_build_termlib" = "x$bc_build_termlib_default" ; then
		bc_build_termlib="$set_everything"
	fi
	if test "x$bc_build_tcl" = "x$bc_build_tcl_default" ; then
		bc_build_tcl="$set_everything"
	fi
	if test "x$bc_build_tk" = "x$bc_build_tk_default" ; then
		bc_build_tk="$set_everything"
	fi
	if test "x$bc_build_itcl" = "x$bc_build_itcl_default" ; then
		bc_build_itcl="$set_everything"
	fi
	if test "x$bc_build_iwidgets" = "x$bc_build_iwidgets_default" ; then
		bc_build_iwidgets="$set_everything"
	fi
	if test "x$bc_build_jove" = "x$bc_build_jove_default" ; then
		bc_build_jove="$set_everything"
	fi
	# Since the Pro/E plugin is primarily tested on only one
	# platform and requires Pro/Toolkit, don't enable it even if
	# requesting everything.  fine to disable, though.
	if test "x$bc_build_proe" = "x$bc_build_proe_default" ; then
		if test "x$set_everything" = "xno" ; then
			bc_build_proe="$set_everything"
		fi
	fi
fi


###
# argument summary printing
###

bc_use_doxygen=no
#AC_MSG_CHECKING(whether to generate documentation with doxygen)
#AC_MSG_RESULT($bc_use_doxygen)

AC_MSG_CHECKING(whether to compile everything was requested)
AC_MSG_RESULT($bc_everything)

AC_MSG_CHECKING(whether to automatically set build flags)
AC_MSG_RESULT($bc_auto_flags)

AC_MSG_CHECKING(whether to only build benchmark)
AC_MSG_RESULT($bc_only_benchmark)

AC_MSG_CHECKING(whether to only build the raytrace server)
AC_MSG_RESULT($bc_only_rts)

AC_MSG_CHECKING(whether to use run-time debug checks)
AC_MSG_RESULT($bc_build_runtime_debug)

AC_MSG_CHECKING(whether to compile in 64-bit mode)
AC_MSG_RESULT($bc_build_64bit)

AC_MSG_CHECKING(whether to build the regular expression library)
AC_MSG_RESULT($bc_build_regex)

AC_MSG_CHECKING(whether to build the PNG library)
AC_MSG_RESULT($bc_build_png)

AC_MSG_CHECKING(whether to build the zlib compression library)
AC_MSG_RESULT($bc_build_zlib)

AC_MSG_CHECKING(whether to build the Utah Raster Toolkit)
AC_MSG_RESULT($bc_build_urt)

AC_MSG_CHECKING(whether to build the Tcl library)
AC_MSG_RESULT($bc_build_tcl)

AC_MSG_CHECKING(whether to build the Tk library)
AC_MSG_RESULT($bc_build_tk)

AC_MSG_CHECKING(whether to build the incrTcl library)
AC_MSG_RESULT($bc_build_itcl)

AC_MSG_CHECKING(whether to install the iwidgets library)
AC_MSG_RESULT($bc_build_iwidgets)

AC_MSG_CHECKING(whether to build the termlib library)
AC_MSG_RESULT($bc_build_termlib)

AC_MSG_CHECKING(whether to compile jove or not)
AC_MSG_RESULT($bc_build_jove)

AC_MSG_CHECKING(whether to compile the Pro-Engineer plugin)
AC_MSG_RESULT($bc_build_proe)

AC_MSG_CHECKING(whether to install example geometry databases)
AC_MSG_RESULT($bc_install_geometry)

AC_MSG_CHECKING(whether to enable optimized compilation)
AC_MSG_RESULT($bc_use_optimized)

AC_MSG_CHECKING(whether to enable verbose compilation warnings)
AC_MSG_RESULT($bc_use_warnings)

AC_MSG_CHECKING(whether to disable debug mode compilation)
AC_MSG_RESULT($bc_use_debug)

AC_MSG_CHECKING(whether to enable profile mode compilation)
AC_MSG_RESULT($bc_use_profiling)

AC_MSG_CHECKING(whether to compile with the Java Development Kit)
AC_MSG_RESULT($bc_with_java)

AC_MSG_CHECKING(whether to compile the X11 interfaces)
AC_MSG_RESULT($bc_with_x11)

AC_MSG_CHECKING(whether to compile the OpenGL interfaces)
AC_MSG_RESULT($bc_with_opengl)

AC_MSG_CHECKING(whether to compile the SDL interface to ADRT)
AC_MSG_RESULT($bc_with_sdl)

AC_MSG_CHECKING(whether to compile the Python interface to ADRT)
AC_MSG_RESULT($bc_with_python)


d630 2
a631 5
# sanity check failure if a C++ compiler is not installed.  This bug
# was fixed in libtool version 1.5.10, but existed for all 1.5
# versions preceeding it.  The below snippet hopefully helps the
# sanity test pass regardless of whether there is a c++ compiler.

a632 1
	alias cc1plus cc1
d715 1
a715 1
			BC_RETRY_CONFIGURE([$this], [$args])
d727 1
a727 1
			# BC_RETRY_CONFIGURE([$this], [$args])
d739 1
a739 1
			# BC_RETRY_CONFIGURE([$this], [$args])
a1212 1
<<<<<<< configure.ac
a1214 11
=======
    dnl check for -fno-common (libtcl needs it on darwin)
    BC_COMPILER_AND_LINKER_RECOGNIZES([-fno-common])

    dnl check for -search_paths_first linker flag.
    dnl prevent a false-positive where it can be treated as a -s and-e
    dnl linker option by adding a benign flag that should succeed.
    dnl this flag allows dylibs and archives to be found based on a
    dnl library path search order, not biasing a preference for dylibs.
    BC_LINKER_RECOGNIZES([-Wl,-search_paths_first -Wnewline-eof])
>>>>>>> 14.204
a1215 1
<<<<<<< configure.ac
a1224 4
=======
    dnl 64bit compilation flags
    if test "x$bc_build_64bit" = "xyes" ; then
>>>>>>> 14.204
a1430 1
	setenv \
d1510 1
a1510 1
			BC_RETRY_CONFIGURE([$this], [$args])
d1566 1
a1566 1
			BC_RETRY_CONFIGURE([$this], [$args])
d1615 1
a1615 1
			BC_RETRY_CONFIGURE([$this], [$args])
d1670 1
a1670 1
			BC_RETRY_CONFIGURE([$this], [$args])
d1749 1
a1749 1
			BC_RETRY_CONFIGURE([$this], [$args])
d1842 1
a1842 1
			BC_RETRY_CONFIGURE([$this], [$args])
d1915 1
a1915 1
			BC_RETRY_CONFIGURE([$this], [$args])
d1989 1
a1989 1
			BC_RETRY_CONFIGURE([$this], [$args])
d2085 1
a2085 1
			BC_RETRY_CONFIGURE([$this], [$args])
d2194 1
a2194 1
		BC_RETRY_CONFIGURE([$this], [$args])
a2198 1
<<<<<<< configure.ac
a2223 27
=======
	if test "x$bc_with_java" = "xyes" ; then
		AC_MSG_RESULT(no)
		BC_RETRY_CONFIGURE([$this], [$args])
		AC_MSG_NOTICE([}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}])
		AC_MSG_ERROR([Failed to locate a functioning jni.h for Java])
	fi

	if test "x$bc_with_java" != "xauto" ; then
		AC_MSG_NOTICE([}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}])
		AC_MSG_WARN([Unable to locate a functioning Java])
		AC_MSG_WARN([Compilation of librtserver will be disabled])
		AC_MSG_NOTICE([{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{])
	fi
	AC_MSG_RESULT(no)
else
	if test "x$bc_with_java" != "xno" ; then
		if test "x$bc_with_java" = "xauto" ; then
			build_against_java=yes
		else
			build_against_java="yes ($bc_with_java_val)"
		fi
		AC_MSG_RESULT(yes)
	else
		AC_MSG_RESULT(no)
	fi
>>>>>>> 14.204
d2252 1
a2252 1
			BC_RETRY_CONFIGURE([$this], [$args])
d2300 1
a2300 1
			BC_RETRY_CONFIGURE([$this], [$args])
@


14.164.2.6
log
@erp, previous commit included a conflicted merge from head .. unconflict
@
text
@d21 1
a21 1
dnl $Id$
d68 4
d74 1
d82 3
d86 1
d281 5
d292 1
d387 9
d406 1
d1353 4
d1366 10
d1378 4
d2357 27
d2409 1
@


14.163
log
@Needed an extern of strsep for Irix where we're using our own strsep
(hidden in libsysv)
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.162 2005/09/04 19:56:32 brlcad Exp $
d66 2
a67 2
AC_INIT(BRL-CAD, 7.5.0, [http://brlcad.org], brlcad)
AC_REVISION($Revision: 14.162 $)
d74 1
a74 1
MINOR_VERSION=5
@


14.162
log
@support systems that provide a prefix and datadir (e.g. /usr and /usr/share respectively)
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.161 2005/09/04 17:22:06 brlcad Exp $
d67 1
a67 1
AC_REVISION($Revision: 14.161 $)
d1584 4
a1587 1

@


14.161
log
@the default is still to build tk even if detected, so no sense in forcing the build on regardless of the configure argument.  it's close to working now if it's not already.
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.160 2005/09/04 16:14:40 brlcad Exp $
d67 1
a67 1
AC_REVISION($Revision: 14.160 $)
d167 2
@


14.160
log
@and Slonina conveniently also notices that the Tk test is now using the tcl interpreter, and thus needs the tcl header (sf patch 1281175)
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.159 2005/09/04 16:05:25 brlcad Exp $
d67 1
a67 1
AC_REVISION($Revision: 14.159 $)
a1958 1
build_brlcad_tk=yes
@


14.159
log
@Slonina (spell it right this time) provides a fix for the iwidgets test. a null result means failure (sf patch 1281175)
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.158 2005/09/04 16:00:11 brlcad Exp $
d67 1
a67 1
AC_REVISION($Revision: 14.158 $)
d1898 3
@


14.158
log
@slolina points out a bug in the iwidgets test, the package name is capitalized (sf patch 1281175)
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.157 2005/08/27 19:34:27 brlcad Exp $
d67 1
a67 1
AC_REVISION($Revision: 14.157 $)
d2075 1
a2075 1
    if (Tcl_Eval(interp, cmd) != TCL_OK || interp->result[0] != '\0') {
@


14.157
log
@use AC_MSG_RESULT for the starting message and summary results so that they are inserted into config.log, and so they will obey the --verbose and --quiet flags too.
@
text
@d21 1
a21 1
dnl $Id$
d67 1
a67 1
AC_REVISION($Revision$)
d2070 1
a2070 1
    const char *cmd = "package require iwidgets";
@


14.156
log
@call them dials and buttons
@
text
@d103 3
a105 3
echo "***${separator}***"
echo "*** ${title} ***"
echo "***${separator}***"
d2906 45
a2950 45
echo "Done."
echo
echo "BRL-CAD Release $BRLCAD_VERSION, Build $CONFIG_DATE"
echo
echo "             Prefix: ${prefix}"
echo "           Binaries: ${bindir}"
echo "Configuration files: ${sysconfdir}"
echo "       Manual pages: ${mandir}"
echo
echo "CC       = ${CC}"
echo "CFLAGS   = ${CFLAGS}"
echo "CPPFLAGS = ${CPPFLAGS}"
echo "LDFLAGS  = ${LDFLAGS}"
echo "LIBS     = ${LIBS}"
echo
echo Build Tcl ............................: $build_brlcad_tcl
echo Build Tk .............................: $build_brlcad_tk
echo Build Itcl/Itk .......................: $build_brlcad_itcl
echo Build IWidgets .......................: $build_brlcad_iwidgets
echo Build libpng .........................: $build_brlcad_png
echo Build libregex .......................: $build_brlcad_regex
echo Build zlib ...........................: $build_brlcad_zlib
echo Build termlib ........................: $build_brlcad_termlib
echo Build Utah Raster Toolkit.............: $build_brlcad_urt
echo Build jove ...........................: $bc_build_jove
echo 
echo ADRT support .........................: $build_brlcad_adrt
echo Java Developer Kit support ...........: $build_against_java
echo X11 support ..........................: $build_against_x11
echo OpenGL support .......................: $build_against_opengl
echo Enable run-time debugging ............: $bc_build_runtime_debug
echo
echo Build 64-bit release .................: $build_brlcad_64bit
echo Build optimized release ..............: $bc_use_optimized
echo Build debug release ..................: $bc_use_debug
echo Build profile release ................: $bc_use_profiling
echo Build static libraries ...............: $enable_static
echo Build shared/dynamic libraries .......: $enable_shared
echo Print verbose compilation warnings ...: $bc_use_warnings
echo
echo Only build benchmark suite ...........: $bc_only_benchmark
echo Only build librtserver ...............: $bc_only_rts
echo Generate doxygen documentation .......: $bc_use_doxygen
echo Install example geometry models ......: $bc_install_geometry
echo
d2952 1
a2952 1
echo Elapsed configuration time ...........: $time_elapsed
d2954 3
a2956 3
echo ---
echo "$0 complete, type 'make' to begin building"
echo
@


14.155
log
@knobs work
@
text
@d2442 2
a2443 2
knobs_work=no
AC_MSG_CHECKING(for SGI Knobs support)
d2455 1
a2455 1
	[knobs_work=yes]
d2457 1
a2457 1
if test "x$knobs_work" = "xyes" ; then
d2461 1
a2461 1
AC_MSG_RESULT($knobs_work)
@


14.154
log
@add a configure test for SGI knobs support, and define the IR_KNOBS and IR_BUTTONS if/when they are available.
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.153 2005/08/24 16:19:16 brlcad Exp $
d67 1
a67 1
AC_REVISION($Revision: 14.153 $)
d2461 1
a2461 1
AC_MSG_RESULT($knobs_available)
@


14.153
log
@ack, we're not 7.6.0 yet
@
text
@d21 1
a21 1
dnl $Id$
d67 1
a67 1
AC_REVISION($Revision$)
d2441 23
d2518 1
@


14.152
log
@Fixes for Release 7.6.0 build from distribution
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.151 2005/08/22 22:33:42 lbutler Exp $
d66 2
a67 2
AC_INIT(BRL-CAD, 7.6.0, [http://brlcad.org], brlcad)
AC_REVISION($Revision: 14.151 $)
d74 1
a74 1
MINOR_VERSION=6
@


14.151
log
@Patch for ADRT to build
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.150 2005/08/22 12:37:18 brlcad Exp $
d66 2
a67 2
AC_INIT(BRL-CAD, 7.5.0, [http://brlcad.org], brlcad)
AC_REVISION($Revision: 14.150 $)
d74 1
a74 1
MINOR_VERSION=5
d2481 1
a2481 1
AM_CONDITIONAL(BUILD_ADRT, [test "x$build_brlcad_adrt" = "xyes"])
@


14.150
log
@Put it all together: add the primary checks for building against X11, OpenGL, SDL, and Python.  Still vast room for improvement, but a step towards fully-uncoupled builds -- especially for the folks without X11 and OpenGL.  Summary no longer reports auto, it reports what it decided.
@
text
@d21 1
a21 1
dnl $Id$
d67 1
a67 1
AC_REVISION($Revision$)
d2481 1
a2481 1
AM_CONDITIONAL(BUILD_ADRT, [test "x$bc_build_adrt" = "xyes"])
@


14.149
log
@begin merging in the rest of the new checks -- check for a python interpreter and sdl-config.  move the display manager defines lower, soon to be killed.  move the CFLAGS override and LD sanity check to the beginning environment section.
@
text
@d344 1
a344 1
BC_ARG_WITH([with_phyton], [python], [Specify use of or path to python], [auto])
d766 2
a767 2
x11_link_works=no
AC_CHECK_LIB(X11, XCreateWindow, x11_link_works=yes)
d769 2
a770 2
xext_link_works=no
AC_CHECK_LIB(Xext, XShapeCombineMask, xext_link_works=yes)
d772 2
a773 2
xi_link_works=no
AC_CHECK_LIB(Xi, XGetExtensionVersion, xi_link_works=yes)
d1389 3
a1590 25
dnl *** SDL ***
AC_PATH_PROG(SDL_CONFIG_PROG, sdl-config)
if test "x$SDL_CONFIG_PROG" != "x" ; then
	AM_PATH_SDL(1.2.0,,AC_MSG_ERROR([Cannot find SDL.]))
fi
AC_SUBST(SDL_CFLAGS)
AC_SUBST(SDL_LIBS)


dnl *** java ***
if test "x$bc_only_rts" != "xno" ; then
	AC_MSG_CHECKING(if java seems to be available)
	if test "x$bc_with_java" = "xno" ; then
		AC_MSG_RESULT(no)
		BC_RETRY_CONFIGURE([$0])
		AC_MSG_NOTICE([}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}])
		AC_MSG_NOTICE([Try adding --with-jdk=/path/to/jdk to find jni.h])
		AC_MSG_ERROR([*** Cannot locate jni.h for building librtserver ***])
	else 
		AC_MSG_NOTICE([$bc_with_java ($bc_with_java_val)])
	fi
	AC_MSG_RESULT(yes)
fi


a2214 9
# XXX ugly hack that needs to die
X_PREFIX=/usr/X11R6
AC_SUBST(X_CFLAGS)
X_CFLAGS="-I${X_PREFIX}/include"
AC_SUBST(X_LIBS)
X_LIBS="-L${X_PREFIX}/lib -lX11 -lXi"
AC_SUBST(X_PREFIX)


d2293 129
d2424 1
d2426 2
a2427 2
if test "x$bc_with_python" = "xyes" ; then
	if test "x$bc_with_sdl" = "xyes" ; then
d2433 5
a2437 1
	build_brlcad_adrt="no (need python)"
d2484 3
a2486 5
AM_CONDITIONAL(WITH_JAVA, [test "x$bc_with_java" != "xno"])
AM_CONDITIONAL(WITH_X11, [test "x$bc_with_x11" != "xno"])
AM_CONDITIONAL(WITH_OPENGL, [test "x$bc_with_opengl" != "xno"])
AM_CONDITIONAL(WITH_SDL, [test "x$bc_with_sdl" != "xno"])
AM_CONDITIONAL(WITH_PYTHON, [test "x$bc_with_python" != "xno"])
d2909 3
a2911 3
echo Java Developer Kit support ...........: $bc_with_java
echo X11 support ..........................: $bc_with_x11
echo OpenGL support .......................: $bc_with_opengl
@


14.148
log
@make debug 'auto' by default instead of forced on to avoid aborting unnecessarily. move the pg test before the g test
@
text
@d110 13
a554 3
# !!! needs to go bye bye
AC_DEFINE(DM_X,1,[Display for X])
AC_DEFINE(DM_OGL,1,[yeah, GL])
d556 4
a581 12
# override the default autoconf cflags if user has not modified them
if test "x$CFLAGS" = "x" ; then
	# an unset CFLAGS var is set to "-O2 -g" during AC_PROG_CC, so
	# set it to something benign instead like whitespace
	CFLAGS=" "
fi

# cannot override LD directly, so warn about that (configure sets it)
if test "x$LD" != "x" ; then
	AC_MSG_WARN([LD cannot be set directly yet it seems to be set ($LD)])
fi

d689 1
a689 1
if test "x$bc_use_doxygen" = "xyes" ; then
d692 18
a709 3
		BC_RETRY_CONFIGURE([$0])
		AC_MSG_NOTICE([}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}])
		AC_MSG_ERROR([*** Unable to find doxygen ***])
a711 2
AC_MSG_CHECKING(whether to enable doxygen)
AC_MSG_RESULT($bc_use_doxygen)
d713 12
d2393 6
@


14.147
log
@if the user specifically requests profile or debug builds (i.e. not the 'auto' default), don't just warn -- abort.
@
text
@d304 1
a304 1
BC_ARG_ENABLE([use_debug], [debug], [Enable debug symbols], [yes])
d1317 24
a1364 24
dnl profile flags
if test "x$bc_use_profiling" != "xno" ; then
	pg_flag="-pg"
	AC_MSG_CHECKING([if the compiler understands $pg_flag])
	pg_flag_works=yes
	PRECFLAGS="$CFLAGS"
	PRELDFLAGS="$LDFLAGS"
	CFLAGS="$CFLAGS $pg_flag"
	LDFLAGS="$LDFLAGS $pg_flag"
	AC_TRY_COMPILE( [], [], [], [pg_flag_works=no])
	AC_MSG_RESULT($pg_flag_works)
	if test "x$pg_flag_works" = "xno" ; then
		if test "x$bc_use_profiling" = "xyes" ; then
			dnl profiling was requested, so abort
			AC_MSG_NOTICE([}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}])
			AC_MSG_NOTICE([Profiling was enabled but -pg does not work])
			AC_MSG_ERROR([*** Don't know how to profile with this compiler ***])
		fi			
		AC_MSG_WARN([Don't know how to profile with this compiler])
		CFLAGS="$PRECFLAGS"
		LDFLAGS="$PRELDFLAGS"
	fi
fi

@


14.146
log
@debug builds cannot omit the frame pointer, so don't add -fomit-frame-pointer when using --enable-optimized and --enable-debug together
@
text
@d1317 48
a1403 36
dnl debug flags
if test "x$bc_use_debug" != "xno" ; then
	g_flag="-g"
	AC_MSG_CHECKING([if the compiler understands $g_flag])
	g_flag_works=yes
	PRECFLAGS="$CFLAGS"
	PRELDFLAGS="$LDFLAGS"
	CFLAGS="$CFLAGS $g_flag"
	LDFLAGS="$LDFLAGS $g_flag"
	AC_TRY_COMPILE( [], [], [], [g_flag_works=no])
	AC_MSG_RESULT($g_flag_works)
	if test "x$g_flag_works" = "xno" ; then
		AC_MSG_WARN([Do not know how to debug with this compiler])
		CFLAGS="$PRECFLAGS"
		LDFLAGS="$PRELDFLAGS"
	fi
fi

dnl profile flags
if test "x$bc_use_profiling" != "xno" ; then
	pg_flag="-pg"
	AC_MSG_CHECKING([if the compiler understands $pg_flag])
	pg_flag_works=yes
	PRECFLAGS="$CFLAGS"
	PRELDFLAGS="$LDFLAGS"
	CFLAGS="$CFLAGS $pg_flag"
	LDFLAGS="$LDFLAGS $pg_flag"
	AC_TRY_COMPILE( [], [], [], [pg_flag_works=no])
	AC_MSG_RESULT($pg_flag_works)
	if test "x$pg_flag_works" = "xno" ; then
		AC_MSG_WARN([Don't know how to profile with this compiler])
		CFLAGS="$PRECFLAGS"
		LDFLAGS="$PRELDFLAGS"
	fi
fi

@


14.145
log
@add initial configuration options --with-opengl --with-sdl --with-python --with-x11 adding them to the output and minimal checks for the user's selection (though no meat yet)
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.144 2005/08/21 07:59:59 brlcad Exp $
d67 1
a67 1
AC_REVISION($Revision: 14.144 $)
d1335 7
a1341 1
	extra_optimization_flag="-ffast-math -fstrength-reduce -fexpensive-optimizations -fomit-frame-pointer -finline-functions"
@


14.144
log
@bump number post release to 7.5.0 in preparation for 7.6
@
text
@d21 1
a21 1
dnl $Id$
d67 1
a67 1
AC_REVISION($Revision$)
a232 3
AC_DEFINE(DM_X,1,[Display for X])
AC_DEFINE(DM_OGL,1,[yeah, GL])

d316 16
a331 1
BC_ARG_WITH([with_java], [jdk], [Specify path to the Java Development Kit], [no])
d521 25
d557 11
d571 1
a571 1
	# set it to something benign
d606 3
a608 3
# XXX libtool has a bug that causes a /lib/cpp sanity check failure if
# a C++ compiler is not installed.  This makes the sanity test pass
# regardless of whether there is a c++ compiler
d617 2
a618 2
# XXX libtool shouldn't be generated until after LD is set
# dnl went poof in libtool 1.9 -- AC_PROG_LIBTOOL
d643 2
a644 1
dnl XXX -- none of the tests should be compiler-specific, but it's good to know in the log
a896 1
AC_PATH_X
a980 2
# XXX cached opengl header checks cause bad things to happen without a configure ERROR halt

a2191 4
dnl *** X11 ***
AC_PATH_X
AC_PATH_XTRA

d2279 14
d2333 1
d2336 5
a2340 1
AM_CONDITIONAL(JAVA, [test "x$bc_with_java" != "xno"])
d2756 1
d2758 2
a2759 2
echo X11 support ..........................: yes
echo Open GL support ......................: yes
@


14.143
log
@merge version changes from 7.4.2 (from rel-7-4-branch)
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.142 2005/08/21 02:48:52 brlcad Exp $
d66 1
a66 1
AC_INIT(BRL-CAD, 7.4.2, [http://brlcad.org], brlcad)
d74 2
a75 2
MINOR_VERSION=4
PATCH_VERSION=2
@


14.142
log
@add LINK_STATIC_REQUIRED to handle the MIPSpro 7.3 linker bug where rpath lines longer than 255 causes the linker to crash, link [b]tclsh/[b]wish static for that compiler
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.141 2005/08/15 04:15:00 brlcad Exp $
d66 2
a67 2
AC_INIT(BRL-CAD, 7.4.1, [http://brlcad.org], brlcad)
AC_REVISION($Revision: 14.141 $)
d75 1
a75 1
PATCH_VERSION=1
@


14.141
log
@don't forget to add new directories to the top-level configure or their Makefile.in will not get generated (src/adrt/bench)
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.140 2005/08/06 05:46:13 twingy Exp $
d67 1
a67 1
AC_REVISION($Revision: 14.140 $)
d2371 4
a2374 9
# hack to work around the irix compiler crashing on the libtool btclsh
# relink attempt when we get to tclscripts.
BTCLSH_DEPENDENCY=""
if test "x$build_vendor" = "xsgi" ; then
    if test "x$compiler" = "xmipspro" ; then
	BTCLSH_DEPENDENCY=".libs/lt-btclsh"
    fi
fi
AC_SUBST(BTCLSH_DEPENDENCY)
@


14.141.2.1
log
@Add support for tkimg, blt, sdialogs, swidgets and archer
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.141 2005/08/15 04:15:00 brlcad Exp $
d67 1
a67 1
AC_REVISION($Revision: 14.141 $)
a278 3
# tkimg
BC_ARG_ENABLE([build_tkimg], [tkimg-build], [Build the included tkimg], [yes])

a284 3
# force enable/disable building of blt
BC_ARG_ENABLE([build_blt], [blt-build], [Build the included blt], [yes])

a419 6
# aliases to force building tkimg (help uses tkimg-build)
BC_ARG_ALIAS([build_tkimg], [tkimg])
BC_ARG_ALIAS([build_tkimg], [tkimg-build])
AC_MSG_CHECKING(whether to build the Tkimg library)
AC_MSG_RESULT($bc_build_tkimg)

a438 8
# aliases to force building blt (help uses blt-build)
BC_ARG_ALIAS([build_blt], [blt])
BC_ARG_ALIAS([build_blt], [libblt])
BC_ARG_ALIAS([build_blt], [blt-build])
BC_ARG_ALIAS([build_blt], [libblt-build])
AC_MSG_CHECKING(whether to build the Blt library)
AC_MSG_RESULT($bc_build_blt)

a1903 12
dnl figure out whether we need to build Tkimg
TKIMG_VERSION="1.3"
AC_SUBST(TKIMG_VERSION)
if test "x$bc_build_tkimg" = "xyes" ; then
   build_brlcad_tkimg=yes
   TKIMG='${top_builddir}/src/other/tkimg/tkimg${TKIMG_VERSION}.la'
   AC_MSG_RESULT(yes)
else
   build_brlcad_tkimg=no
   TKIMG=""
   AC_MSG_RESULT(no)
fi
a2043 14
dnl figure out whether we need to build Blt
BLT_VERSION="2.4"
AC_SUBST(BLT_VERSION)
BLT_LIBRARY='${prefix}/lib/blt${BLT_VERSION}'
AC_SUBST(BLT_LIBRARY)
if test "x$bc_build_blt" = "xyes" ; then
   build_brlcad_blt=yes
   BLT='${top_builddir}/src/other/blt/libblt${BLT_VERSION}.la'
   AC_MSG_RESULT(yes)
else
   build_brlcad_blt=no
   BLT=""
   AC_MSG_RESULT(no)
fi
a2267 1
AM_CONDITIONAL(BUILD_TKIMG, [test "x$build_brlcad_tkimg" = "xyes"])
a2269 1
AM_CONDITIONAL(BUILD_BLT, [test "x$build_brlcad_blt" = "xyes"])
a2469 1
	doc/html/manuals/archer/Makefile
a2513 5
	src/archer/Makefile
	src/archer/plugins/Makefile
	src/archer/plugins/Wizards/Makefile
	src/archer/plugins/Wizards/tankwizardIA/Makefile
	src/archer/plugins/Wizards/tankwizardIA/images/Makefile
a2615 9
	src/other/tkimg/Makefile
	src/other/tkimg/base/Makefile
	src/other/tkimg/png/Makefile
	src/other/tkimg/pngtcl/Makefile
	src/other/tkimg/zlibtcl/Makefile
	src/other/blt/Makefile
	src/other/blt/src/Makefile
	src/other/blt/library/Makefile
	src/other/blt/library/dd_protocols/Makefile
a2623 6
	src/tclscripts/archer/Makefile
	src/tclscripts/archer/images/Makefile
	src/tclscripts/archer/images/Themes/Makefile
	src/tclscripts/archer/images/Themes/Crystal/Makefile
	src/tclscripts/archer/images/Themes/Crystal_Large/Makefile
	src/tclscripts/archer/images/Themes/Windows/Makefile
a2637 5
	src/tclscripts/sdialogs/Makefile
	src/tclscripts/sdialogs/scripts/Makefile
	src/tclscripts/swidgets/Makefile
	src/tclscripts/swidgets/images/Makefile
	src/tclscripts/swidgets/scripts/Makefile
a2690 1
echo Build Tkimg ..........................: $build_brlcad_tkimg
a2692 1
echo Build Blt ..........................: $build_brlcad_blt
@


14.140
log
@added isst back into configure
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.139 2005/07/25 05:49:53 brlcad Exp $
d67 1
a67 1
AC_REVISION($Revision: 14.139 $)
d2495 1
@


14.139
log
@define IWIDGETS_VERSION
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.138 2005/07/17 06:31:30 brlcad Exp $
d67 1
a67 1
AC_REVISION($Revision: 14.138 $)
d2506 4
@


14.138
log
@add full checks for libtk including an enable-tk-build option
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.137 2005/07/17 00:59:37 brlcad Exp $
d67 1
a67 1
AC_REVISION($Revision: 14.137 $)
d1799 1
d1891 1
d2040 3
@


14.137
log
@generate the awf and brlman files from their respective templates
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.136 2005/07/13 04:40:26 brlcad Exp $
d67 1
a67 1
AC_REVISION($Revision: 14.136 $)
d276 3
d413 7
d754 11
d914 1
d1820 66
a1885 1
dnl make sure Tk is enabled (required for Bezier canvas modifications)
d1887 1
d1893 7
a1899 1
TK='${top_builddir}/src/other/libtk/libtk${TK_VERSION}.la'
d2680 1
a2680 2
# we have to build Tk as it's been customized with tkCanvBezier
# echo Build Tk .............................: $build_brlcad_tk
@


14.136
log
@cvs is tagged with rel-7-4-0 so bump to 7.4.1
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.135 2005/07/13 00:08:27 brlcad Exp $
d67 1
a67 1
AC_REVISION($Revision: 14.135 $)
d2411 2
@


14.135
log
@update version to 7.4.0
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.134 2005/07/12 14:45:55 brlcad Exp $
d66 2
a67 2
AC_INIT(BRL-CAD, 7.4.0, [http://brlcad.org], brlcad)
AC_REVISION($Revision: 14.134 $)
d75 1
a75 1
PATCH_VERSION=0
@


14.135.2.1
log
@merge in changes through Aug10 for 7.4.2 release
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.140 2005/08/06 05:46:13 twingy Exp $
d66 2
a67 2
AC_INIT(BRL-CAD, 7.4.1, [http://brlcad.org], brlcad)
AC_REVISION($Revision: 14.140 $)
d75 1
a75 1
PATCH_VERSION=1
a275 3
# force enable/disable building of Tk
BC_ARG_ENABLE([build_tk], [tk-build], [Build the included Tk], [yes])

a409 7
# aliases to force building tk (help uses tk-build)
BC_ARG_ALIAS([build_tk], [tk])
BC_ARG_ALIAS([build_tk], [libtk])
BC_ARG_ALIAS([build_tk], [libtk-build])
AC_MSG_CHECKING(whether to build the Tk library)
AC_MSG_RESULT($bc_build_tk)

a743 11
dnl check if libtk library links
tk_link_works=no
LIBTK=""
AC_CHECK_LIB(tk8.6, Tk_MainLoop, tk_link_works=yes ; LIBTK="-ltk8.6",
    [AC_CHECK_LIB(tk8.5, Tk_MainLoop, tk_link_works=yes ; LIBTK="-ltk8.5",
	[AC_CHECK_LIB(tk8.4, Tk_MainLoop, tk_link_works=yes ; LIBTK="-ltk8.4",
	    [AC_CHECK_LIB(tk, Tk_MainLoop, tk_link_works=yes ; LIBTK="-ltk")]
	)]
    )]
)

a892 1
	tk.h \
a1776 1
AC_DEFINE_UNQUOTED([TCL_VERSION], "$TCL_VERSION", "Version of Tcl")
d1798 1
a1798 66
dnl See if libtk seems to work
tk_works=no
AC_MSG_CHECKING(for Tk library functionality)
PRELIBS="$LIBS"
if test "x$tk_link_works" = "xyes" ; then
	LIBS="$LIBS $LIBTK $LIBTCL"
fi
AC_TRY_RUN([
#ifdef HAVE_TK_H
#  include <tk.h>
#endif
#ifndef TK_MAJOR_VERSION
#  error Unknown major version of Tk
#endif
#ifndef TK_MINOR_VERSION
#  error Unknown minor version of Tk
#endif
#include <stdio.h>
int main() {
    Tcl_Interp *interp;
    interp = Tcl_CreateInterp();
    if (Tcl_Init(interp) == TCL_ERROR) {
	fprintf(stderr, "Tcl_Init returned error\n");
	return 1;
    }
    if (Tk_Init(interp) == TCL_ERROR) {
	fprintf(stderr, "Tk_Init returned error\n");
	return 1;
    }

#if TK_MAJOR_VERSION < 8
    fprintf(stderr, "major version < 8\n");
    return 1;
#elif TK_MAJOR_VERSION == 8 && TK_MINOR_VERSION < 4
    fprintf(stderr, "minor version < 4\n");
    return 1;
#endif 
    return 0;
}
	],
	[tk_works=yes]
)
if test "x$tk_link_works" = "xyes" ; then
	LIBS="$PRELIBS"
fi
AC_MSG_RESULT($tk_works)

dnl figure out whether we need to build Tk
build_brlcad_tk="no (using system)"
if test "x$bc_build_tk" = "xyes" ; then
	build_brlcad_tk=yes
else
	if test "x$bc_build_tk" = "xno" ; then
		if test "x$tk_works" = "xno" ; then
			BC_RETRY_CONFIGURE([$0])
			AC_MSG_NOTICE([}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}])
			AC_MSG_NOTICE([Try adding --enable-tk-build])
			AC_MSG_ERROR([*** Tk was disabled, yet no usable libtk system library was found ***])
		fi
	else
		dnl automatic detection
		if test "x$tk_works" = "xno" ; then
			build_brlcad_tk=yes
		fi
	fi
fi
a1799 1
AC_MSG_CHECKING(whether to build Tk)
a1801 1
AC_DEFINE_UNQUOTED([TK_VERSION], "$TK_VERSION", "Version of Tk")
d1805 1
a1805 7
if test "x$build_brlcad_tk" = "xyes" ; then
	TK='${top_builddir}/src/other/libtk/libtk${TK_VERSION}.la'
	AC_MSG_RESULT(yes)
else
	TK="$LIBTK"
	AC_MSG_RESULT(no)
fi
a1943 3
IWIDGETS_VERSION="4.0.1"
AC_DEFINE_UNQUOTED([IWIDGETS_VERSION], "$IWIDGETS_VERSION", "Version of iWidgets")
AC_SUBST(IWIDGETS_VERSION)
a2406 4
	src/adrt/isst/Makefile
	src/adrt/isst/master/Makefile
	src/adrt/isst/observer/Makefile
	src/adrt/isst/slave/Makefile
a2410 2
	src/brlman/awf
	src/brlman/brlman
d2584 2
a2585 1
echo Build Tk .............................: $build_brlcad_tk
@


14.135.2.2
log
@bump the version up to 7.4.2 for release
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.135.2.1 2005/08/16 21:03:44 brlcad Exp $
d66 2
a67 2
AC_INIT(BRL-CAD, 7.4.2, [http://brlcad.org], brlcad)
AC_REVISION($Revision: 14.135.2.1 $)
d75 1
a75 1
PATCH_VERSION=2
@


14.134
log
@improve the path checking on the root and data directories, allowing for a full override if desired via --prefix and --datadir respectively
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.133 2005/07/12 05:05:11 brlcad Exp $
d66 2
a67 2
AC_INIT(BRL-CAD, 7.3.1, [http://brlcad.org], brlcad)
AC_REVISION($Revision: 14.133 $)
d74 2
a75 2
MINOR_VERSION=3
PATCH_VERSION=1
@


14.133
log
@ivat is removed for at least this iteration, probably to be reincarnated in a different for later when some details get worked out
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.132 2005/07/11 15:26:03 brlcad Exp $
d67 1
a67 1
AC_REVISION($Revision: 14.132 $)
d126 4
a129 1
	prefix="$ac_default_prefix"
d131 2
a132 2
AC_DEFINE_UNQUOTED([BRLCAD_ROOT], "${prefix}", "Location where BRL-CAD is installed")
AC_MSG_RESULT($prefix)
d138 1
a138 1
	if test "x$BRLCAD_ROOT" = "x$prefix" ; then
d145 1
a145 1
	BRLCAD_ROOT='${prefix}'
d152 5
a156 2
if test "x$pkgdatadir" = "xNONE" ; then
	pkgdatadir="${prefix}/share/brlcad"
d158 1
a158 2
bc_data_dir='${pkgdatadir}/${BRLCAD_VERSION}'
AC_DEFINE_UNQUOTED([BRLCAD_DATA], "${bc_data_dir}", "Location where BRL-CAD resources are installed")
@


14.132
log
@bah, BRLCAD_DATA_DIR is no more, BRLCAD_DATA is the shizzle
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.131 2005/07/11 05:12:33 brlcad Exp $
d67 1
a67 1
AC_REVISION($Revision: 14.131 $)
a2391 4
	src/adrt/ivat/Makefile
	src/adrt/ivat/master/Makefile
	src/adrt/ivat/observer/Makefile
	src/adrt/ivat/slave/Makefile
@


14.131
log
@woot, default the BRLCAD_DATA to $prefix/share/brlcad/VERSION.  aside from library/binary name collisions, this should now let brl-cad install into system paths such as /usr and /usr/local now though more work will need to occur to isolate the libs and headers better.
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.130 2005/07/11 03:51:37 brlcad Exp $
d67 1
a67 1
AC_REVISION($Revision: 14.130 $)
d2347 1
a2347 1
SAMPLE_APPLICATIONS_DIR='$(BRLCAD_DATA_DIR)/sample_applications'
@


14.130
log
@migration to BRLCAD_DATA complete, remove BRLCAD_DATA_DIR
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.129 2005/07/10 05:54:37 twingy Exp $
d67 1
a67 1
AC_REVISION($Revision: 14.129 $)
a146 1
# BRLCAD_DATA='${pkgdatadir}/${BRLCAD_VERSION}'
d152 3
a154 2
AC_DEFINE_UNQUOTED([BRLCAD_DATA], "${prefix}", "Location where BRL-CAD resources are installed")
AC_MSG_RESULT($prefix)
d160 1
a160 1
	if test "x$BRLCAD_DATA" = "x$prefix" ; then
d167 1
a167 1
	BRLCAD_DATA='${prefix}'
@


14.129
log
@IGVT->IVAT 100%
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.128 2005/07/10 04:29:11 brlcad Exp $
d67 1
a67 1
AC_REVISION($Revision: 14.128 $)
a169 2
BRLCAD_DATA_DIR="$BRLCAD_DATA"
AC_SUBST(BRLCAD_DATA_DIR)
@


14.128
log
@gotta generate the makefile for misc/win32-msvc
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.127 2005/07/07 06:02:54 brlcad Exp $
d67 1
a67 1
AC_REVISION($Revision: 14.127 $)
d2394 4
a2397 4
	src/adrt/igvt/Makefile
	src/adrt/igvt/master/Makefile
	src/adrt/igvt/observer/Makefile
	src/adrt/igvt/slave/Makefile
a2403 1
	src/adrt/misc/Makefile
d2409 1
@


14.127
log
@need to define BRLCAD_VERSION unquoted and add the quotes to get the proper shell variable expansion
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.126 2005/07/06 23:03:07 brlcad Exp $
d67 1
a67 1
AC_REVISION($Revision: 14.126 $)
d2388 1
@


14.126
log
@define BRLCAD_VERSION in brlcad_config.h and rename BRLCAD_DATA_DIR to BRLCAD_DATA (keeping prior until Makefile.am conversions are complete) performing the same protection checks done for BRLCAD_ROOT
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.125 2005/07/04 04:23:05 brlcad Exp $
d67 1
a67 1
AC_REVISION($Revision: 14.125 $)
d90 4
a106 5
AC_SUBST(CONFIG_DATE)
AC_SUBST(CONFIG_TIME)
AC_SUBST(BRLCAD_VERSION)
AC_DEFINE([BRLCAD_VERSION], $BRLCAD_VERSION, "Version of BRL-CAD")

@


14.125
log
@check for bsd libgen.h header for basename/dirname
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.124 2005/07/04 03:48:58 brlcad Exp $
d67 1
a67 1
AC_REVISION($Revision: 14.124 $)
d106 1
d142 2
d145 1
d148 24
a171 2
# BRLCAD_DATA_DIR='${pkgdatadir}/${BRLCAD_VERSION}'
BRLCAD_DATA_DIR='${prefix}'
@


14.124
log
@stray else removed
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.123 2005/07/01 00:51:48 brlcad Exp $
d67 1
a67 1
AC_REVISION($Revision: 14.123 $)
d817 1
@


14.123
log
@if we have CVS, enable dependency tracking and maintainer mode.  otherwise, disable them both for decreased compile times and simplified rebuilding.  users modifying code should be working from CVS.
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.122 2005/06/30 22:27:39 brlcad Exp $
d67 1
a67 1
AC_REVISION($Revision: 14.122 $)
a159 1
	else
@


14.122
log
@put the AUTOMAKE_OPTIONS into AM_INIT_AUTOMAKE to require 1.6 and make bzip2 and zip files when making a dist
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.121 2005/06/28 23:15:14 brlcad Exp $
d67 1
a67 1
AC_REVISION($Revision: 14.121 $)
a147 4
# init the venerable automake only _once_ or incur the wrath of
# several automake bugs (like "aclocal-" and install detection)
AM_INIT_AUTOMAKE([1.6 dist-zip dist-bzip2])

d156 4
a159 1
		AC_MSG_RESULT([yes])
d161 7
a167 1
		AC_MSG_RESULT([no (enable-maintainer-mode)])
a168 1
else
d170 1
d172 3
a174 3
	# would also like no-dependencies, but have not figured out
	# how to set dynamically without causing vast troubles.
fi
@


14.121
log
@AM_MAINTAINER_MODE cannot be in a conditional either, so let off be the default and auto-enable maintainer-mode if there is a CVS directory.
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.120 2005/06/28 20:51:28 brlcad Exp $
d67 1
a67 1
AC_REVISION($Revision: 14.120 $)
d150 1
a150 1
AM_INIT_AUTOMAKE
@


14.120
log
@get rid of the duplicate automake hacking and just resolve to use AM_MAINTAINER_MODE for now.  would also like no-dependencies but have not figured out how to dynamically set that option without causing vast troubles.  (including AM_INIT_AUTOMAKE multiple times is apparently buggy for at least several versions of automake resulting in incorrect expansions in the resultant configure script (aclocal- problem)).
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.119 2005/06/25 00:43:08 brlcad Exp $
d67 1
a67 1
AC_REVISION($Revision: 14.119 $)
d158 6
a163 1
	AC_MSG_RESULT(it should)
d165 1
a165 2
	AC_MSG_RESULT(it should not)
	AM_MAINTAINER_MODE
d169 5
a173 1
 fi
d175 1
@


14.119
log
@add src/adrt/scripts and src/adrt/misc to Makefile output, sort src/adrt alphabeticaly like everything else too
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.118 2005/06/23 01:42:10 brlcad Exp $
d67 1
a67 1
AC_REVISION($Revision: 14.118 $)
d148 4
d155 1
a155 1
# extra steps that would be necessary for making a proper diff.
a158 1
	AM_INIT_AUTOMAKE
d161 6
a166 2
	AM_INIT_AUTOMAKE([no-dependencies])
fi
@


14.118
log
@bump the revision up to 7.3.1 for a progress marking.  technically rtarea is an incompatible update, albeit not binary incompatible
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.117 2005/06/23 01:08:28 brlcad Exp $
d67 1
a67 1
AC_REVISION($Revision: 14.117 $)
d2346 5
a2350 2
	src/adrt/libtie/Makefile
	src/adrt/libtienet/Makefile
d2354 2
d2357 1
d2360 1
d2362 1
a2362 5
	src/adrt/rise/observer/Makefile
	src/adrt/igvt/Makefile
	src/adrt/igvt/master/Makefile
	src/adrt/igvt/slave/Makefile
	src/adrt/igvt/observer/Makefile
@


14.117
log
@complete the 'fix'/revert of the new installation directories back to prefix until mged is updated properly
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.116 2005/06/22 01:37:49 brlcad Exp $
d66 3
a68 2
AC_INIT(BRL-CAD, 7.3.0, [http://brlcad.org], brlcad)
AC_REVISION($Revision: 14.116 $)
d75 1
a75 1
PATCH_VERSION=0
@


14.116
log
@revert the new data directory location until mged is properly set to search there for the tclscripts and help files
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.115 2005/06/22 01:35:43 brlcad Exp $
d67 1
a67 1
AC_REVISION($Revision: 14.115 $)
d144 1
a144 1
BRLCAD_DATA_DIR='${datadir}'
@


14.115
log
@add configuration options to enable/disable the proe plugin
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.114 2005/06/21 07:00:44 brlcad Exp $
d67 1
a67 1
AC_REVISION($Revision: 14.114 $)
d143 2
a144 1
BRLCAD_DATA_DIR='${pkgdatadir}/${BRLCAD_VERSION}'
@


14.114
log
@provide the versions for the IRIX and IRIX64 defines, setting to just 6.5 for now until the defines disappear
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.113 2005/06/20 15:19:32 brlcad Exp $
d67 1
a67 1
AC_REVISION($Revision: 14.113 $)
d241 3
d395 8
d2126 1
@


14.113
log
@prefere -pthread over -lpthread on bsd if both are installed, prefer solis threading over pthreading too.  pthreading is good default.
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.112 2005/06/20 15:08:07 brlcad Exp $
d67 1
a67 1
AC_REVISION($Revision: 14.112 $)
d2080 1
a2080 1
		CFLAGS="$CFLAGS -DIRIX64"
d2082 1
a2082 1
		CFLAGS="$CFLAGS -DIRIX"
@


14.112
log
@slight reorder since a system rle library may depend on libm, so check for libm first
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.111 2005/06/17 21:39:49 erikgreenwald Exp $
d67 1
a67 1
AC_REVISION($Revision: 14.111 $)
d591 7
a597 7
    dnl check for pthreading as next best option
    dnl XXX need to test HPUX -- may require -lcma with pthreads
    [AC_CHECK_LIB(pthread, pthread_create, thread_link_works=yes ; LIBTHREAD="-lpthread",
    	dnl check if the BSD c_r threading library link works
	[AC_CHECK_LIB(c_r, pthread_create, thread_link_works=yes ; LIBTHREAD="-pthread",
	    dnl try solaris threading
	    [AC_CHECK_LIB(thread, thr_create, thread_link_works=yes ; LIBTHREAD="-lthread")]
@


14.111
log
@eh, we don't use config.h anymore, we use brlcad_config.h
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.110 2005/06/17 19:16:32 erikgreenwald Exp $
d67 1
a67 1
AC_REVISION($Revision: 14.110 $)
d656 5
d665 4
a668 2
AC_CHECK_LIB(utahrle, rle_getraw, utahrle_link_works=yes ; UTAHRLE="-lutahrle",
    [AC_CHECK_LIB(rle, rle_getraw, utahrle_link_works=yes ; UTAHRLE="-lrle")]
d670 1
a700 5
dnl check if a math library links
m_link_works=no
LIBM=""
AC_CHECK_LIB(m, cos, m_link_works=yes ; LIBM="-lm")

@


14.110
log
@add in adrt
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.109 2005/06/12 21:41:18 brlcad Exp $
d67 1
a67 1
AC_REVISION($Revision: 14.109 $)
d69 1
a69 1
AM_CONFIG_HEADER([config.h])
@


14.109
log
@add a BRLCAD_DATA_DIR that is $(prefix)/share/brlcad/VERSION and stuff the sample apps there for starters.  comment on the disable dependency tracking reason.
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.108 2005/06/10 17:35:08 brlcad Exp $
d67 1
a67 1
AC_REVISION($Revision: 14.108 $)
d69 1
d812 1
d1410 9
d2224 4
d2328 15
@


14.108
log
@bump the revision after release 7.2.6 to a minor increment release of 7.3.0 (directory reorganizations planned)
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.107 2005/06/09 03:49:09 brlcad Exp $
d58 2
a59 1
dnl to the AC_PREREQ version shown below.
d67 1
a67 1
AC_REVISION($Revision: 14.107 $)
d141 9
a149 1
AC_MSG_CHECKING([whether dependency tracking should be enabled])
d160 1
a160 1
# to an automake bug in older version, so restore those files if
d2271 1
a2271 1
SAMPLE_APPLICATIONS_DIR='${prefix}/sample_applications'
@


14.107
log
@bump revision to 7.2.6
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.106 2005/06/06 17:24:14 brlcad Exp $
d65 2
a66 2
AC_INIT(BRL-CAD, 7.2.6, [http://brlcad.org], brlcad)
AC_REVISION($Revision: 14.106 $)
d71 2
a72 2
MINOR_VERSION=2
PATCH_VERSION=6
@


14.106
log
@check for stat
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.105 2005/06/03 01:04:13 brlcad Exp $
d65 2
a66 2
AC_INIT(BRL-CAD, 7.2.5, [http://brlcad.org], brlcad)
AC_REVISION($Revision: 14.105 $)
d72 1
a72 1
PATCH_VERSION=5
@


14.105
log
@add a --enable-models-install option with aliases for conditionally installing the example geometry models.  benchmark geometry are still converted/installed as they are required for the installed benchmark tool
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.104 2005/05/30 20:13:15 brlcad Exp $
d66 1
a66 1
AC_REVISION($Revision: 14.104 $)
d1353 1
@


14.104
log
@check for sys/sysctl.h header and getenv and sysctl functions
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.103 2005/05/13 13:52:53 brlcad Exp $
d66 1
a66 1
AC_REVISION($Revision: 14.103 $)
d223 1
a223 1
use_doxygen=no
d231 3
d382 14
d2091 1
d2505 1
@


14.103
log
@clean up java checks so that they work on os x automatic
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.102 2005/05/12 01:12:24 brlcad Exp $
d66 1
a66 1
AC_REVISION($Revision: 14.102 $)
d784 1
d1303 1
d1352 1
@


14.102
log
@let the fun begin, bump to 7.2.5 now that 7.2.4 is tagged
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.101 2005/05/11 20:31:46 brlcad Exp $
d66 1
a66 1
AC_REVISION($Revision: 14.101 $)
d721 1
a721 1
		with_java=yes
d874 1
a874 1
		with_java=no
d885 1
a885 1
		with_java=yes
d909 1
a909 1
		with_java=yes
@


14.101
log
@Prepare for release 7.2.4, set the version. (release date 2005-05-11)
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.100 2005/05/11 02:24:23 brlcad Exp $
d65 2
a66 2
AC_INIT(BRL-CAD, 7.2.4, [http://brlcad.org], brlcad)
AC_REVISION($Revision: 14.100 $)
d72 1
a72 1
PATCH_VERSION=4
@


14.100
log
@prefix the ARG macro variables with bc_ so that they do not conflict with potential argument variables being tested (e.g. with_java was the var and java was an alias, causing an overwrite of with_java)
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.99 2005/05/09 18:47:32 brlcad Exp $
d65 2
a66 2
AC_INIT(BRL-CAD, 7.2.3, [http://brlcad.org], brlcad)
AC_REVISION($Revision: 14.99 $)
d72 1
a72 1
PATCH_VERSION=3
@


14.99
log
@print out the right results for the java test
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.98 2005/05/01 21:31:30 brlcad Exp $
d66 1
a66 1
AC_REVISION($Revision: 14.98 $)
d210 3
a221 3
# force enable/disable building of termlib
BC_ARG_ENABLE([build_termlib], [termlib-build], [Build the included termlib library], [auto])

d226 1
a226 1
#AC_MSG_RESULT($use_doxygen)
d266 1
a266 1
AC_MSG_RESULT($only_benchmark)
d275 1
a275 1
AC_MSG_RESULT($only_rts)
d282 1
a282 1
AC_MSG_RESULT($build_runtime_debug)
d291 1
a291 1
AC_MSG_RESULT($build_64bit)
d298 1
a298 1
AC_MSG_RESULT($build_regex)
d305 1
a305 1
AC_MSG_RESULT($build_png)
d312 1
a312 1
AC_MSG_RESULT($build_zlib)
d335 1
a335 1
AC_MSG_RESULT($build_urt)
d342 1
a342 1
AC_MSG_RESULT($build_tcl)
d355 1
a355 1
AC_MSG_RESULT($build_itcl)
d359 3
a361 2
AC_MSG_CHECKING(whether to build the Utah Raster Toolkit)
AC_MSG_RESULT($build_urt)
d372 1
a372 1
AC_MSG_RESULT($build_urt)
d377 1
a377 1
AC_MSG_RESULT($build_jove)
d384 1
a384 1
AC_MSG_RESULT($use_optimized)
d393 1
a393 1
AC_MSG_RESULT($use_warnings)
d398 1
a398 1
AC_MSG_RESULT($use_debug)
d404 1
a404 1
AC_MSG_RESULT($use_profiling)
d408 2
d413 2
a414 2
if test "x$only_benchmark" != "xno" ; then
	if test "x$only_rts" != "xno" ; then
d540 1
a540 1
if test "x$use_doxygen" = "xyes" ; then
d549 1
a549 1
AC_MSG_RESULT($use_doxygen)
d713 2
a714 2
if test "x$with_java" = "xyes" ; then
	JAVA_CFLAGS="-I$with_java_val/include -I$with_java_val/include/`uname | tr [A-Z] [a-z]`"
d873 1
a873 1
	if test "x$with_java" != "xno" ; then
d876 2
a877 2
		if test "x$only_benchmark" != "xno" ; then
			if test "x$only_rts" = "xno" ; then
d884 1
a884 1
	if test "x$only_rts" != "xno" ; then
d1059 1
a1059 1
if test "x$build_64bit" = "xyes" ; then
d1156 1
a1156 1
if test "x$use_optimized" != "xno" ; then
d1189 1
a1189 1
if test "x$use_debug" != "xno" ; then
d1207 1
a1207 1
if test "x$use_profiling" != "xno" ; then
d1225 1
a1225 1
if test "x$use_warnings" != "xno" ; then
d1379 1
a1379 1
if test "x$only_rts" != "xno" ; then
d1381 1
a1381 1
	if test "x$with_java" = "xno" ; then
d1388 1
a1388 1
		AC_MSG_NOTICE([$with_java ($with_java_val)])
d1413 1
a1413 1
if test "x$build_png" = "xyes" ; then
d1416 1
a1416 1
	if test "x$build_png" = "xno" ; then
d1469 1
a1469 1
if test "x$build_regex" = "xyes" ; then
d1472 1
a1472 1
	if test "x$build_regex" = "xno" ; then
d1518 1
a1518 1
if test "x$build_zlib" = "xyes" ; then
d1521 1
a1521 1
	if test "x$build_zlib" = "xno" ; then
d1573 1
a1573 1
if test "x$build_urt" = "xyes" ; then
d1576 1
a1576 1
	if test "x$build_urt" = "xno" ; then
d1652 1
a1652 1
if test "x$build_tcl" = "xyes" ; then
d1655 1
a1655 1
	if test "x$build_tcl" = "xno" ; then
d1745 1
a1745 1
if test "x$build_itcl" = "xyes" ; then
d1748 1
a1748 1
	if test "x$build_itcl" = "xno" ; then
d1819 1
a1819 1
if test "x$build_iwidgets" = "xyes" ; then
d1822 1
a1822 1
	if test "x$build_iwidgets" = "xno" ; then
d1912 1
a1912 1
if test "x$build_termlib" = "xyes" ; then
d1915 1
a1915 1
	if test "x$build_termlib" = "xno" ; then
d2002 1
a2002 1
if test "x$build_64bit" = "xyes" ; then
d2010 1
a2010 1
	if test "x$build_64bit" = "xno" ; then
d2070 1
a2070 1
AM_CONDITIONAL(BUILD_JOVE, [test "x$build_jove" = "xyes"])
d2072 1
a2072 1
AM_CONDITIONAL(JAVA, [test "x$with_java" != "xno"])
d2074 2
a2075 2
AM_CONDITIONAL(ONLY_BENCHMARK, [test "x$only_benchmark" != "xno"])
AM_CONDITIONAL(ONLY_RTS, [test "x$only_rts" != "xno"])
d2101 1
a2101 1
if test "x$build_runtime_debug" = "xno" ; then
d2466 1
a2466 1
echo Build jove ...........................: $build_jove
d2468 1
a2468 1
echo Java Developer Kit support ...........: $with_java
d2471 1
a2471 1
echo Enable run-time debugging ............: $build_runtime_debug
d2474 3
a2476 3
echo Build optimized release ..............: $use_optimized
echo Build debug release ..................: $use_debug
echo Build profile release ................: $use_profiling
d2479 1
a2479 1
echo Print verbose compilation warnings ...: $use_warnings
d2481 3
a2483 3
echo Only build benchmark suite ...........: $only_benchmark
echo Only build librtserver ...............: $only_rts
echo Generate doxygen documentation .......: $use_doxygen
@


14.98
log
@give our config.h a prefix of brlcad_ so that it may identify and differentiate itself better when installed amongst other config.h headers.  since only common.h should be used and not config.h directtly, it should be sufficient to just include it without checking PACKAGE
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.97 2005/05/01 19:48:22 brlcad Exp $
d66 1
a66 1
AC_REVISION($Revision: 14.97 $)
d1385 1
a1385 1
		AC_MSG_NOTICE([with-jdk: $with_java])
@


14.97
log
@check for io.h
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.96 2005/04/27 02:41:09 brlcad Exp $
d66 1
a66 1
AC_REVISION($Revision: 14.96 $)
d148 1
a148 1
AM_CONFIG_HEADER([include/config.h])
@


14.96
log
@and away the unused _DECL vars go for HAVE_STRDUP_DECL and HAVE_GETOPT_DECL
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.95 2005/04/27 02:29:21 brlcad Exp $
d66 1
a66 1
AC_REVISION($Revision: 14.95 $)
d747 1
@


14.95
log
@get rid of HAVE_POPEN_DECL since ansi compliant compilers are expected to have it.  when we find one that's not, we can add a better dynamic check.
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.94 2005/04/26 23:06:26 brlcad Exp $
d66 1
a66 1
AC_REVISION($Revision: 14.94 $)
a1365 4
# XXX duplicate for decl (needs to go away)
AC_CHECK_FUNC(getopt, AC_DEFINE(HAVE_GETOPT_DECL,1,getopt))
AC_CHECK_FUNC(strdup, AC_DEFINE(HAVE_STRDUP_DECL,1,strdup))

@


14.94
log
@might as well force tcl and iwidgets on too since they have the same problem.. need to determine/set TCL_LIBRARY inside of mged if it's not set.
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.93 2005/04/26 17:38:28 brlcad Exp $
d66 1
a66 1
AC_REVISION($Revision: 14.93 $)
a1365 2
AC_CHECK_FUNC(popen, AC_DEFINE(HAVE_POPEN_DECL,1,popen))

@


14.93
log
@print messages to stderr so they don't show up in the configure output (should still show up in config.log).
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.92 2005/04/26 17:35:14 brlcad Exp $
d66 1
a66 1
AC_REVISION($Revision: 14.92 $)
d211 1
a211 1
BC_ARG_ENABLE([build_tcl], [tcl-build], [Build the included Tcl], [auto])
d217 1
a217 1
BC_ARG_ENABLE([build_iwidgets], [iwidgets-build], [Install the included iwidgets], [auto])
@


14.92
log
@force itcl to on by default instead of auto until a suitable means to find the ITCL_LIBRARY can be found
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.91 2005/04/26 08:23:46 brlcad Exp $
d66 1
a66 1
AC_REVISION($Revision: 14.91 $)
d1630 1
a1630 1
	printf("Tcl_Init returned error\n");
d1636 1
a1636 1
    printf("major version < 8\n");
d1639 1
a1639 1
    printf("minor version < 4\n");
d1728 1
a1728 1
    printf("major version < 3\n");
d1731 1
a1731 1
    printf("minorversion < 2\n");
@


14.91
log
@make sure sys/types.h was found before using it
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.90 2005/04/26 01:37:26 brlcad Exp $
d66 1
a66 1
AC_REVISION($Revision: 14.90 $)
d214 1
a214 1
BC_ARG_ENABLE([build_itcl], [itcl-build], [Build the included incrTcl], [auto])
@


14.90
log
@check the term.h header with the other terminal library crew libraries to ensure compatibility when used together when multiple are available
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.89 2005/04/25 22:24:35 brlcad Exp $
d66 1
a66 1
AC_REVISION($Revision: 14.89 $)
d949 4
a952 1
    AC_TRY_LINK([#include <sys/types.h>
d1453 3
a1455 1
#include <sys/types.h>
@


14.89
log
@cygwin's pthread.h is not compatible with sched.h so make sure we try to use both in the sched.h test (so that it gets disabled)
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.88 2005/04/24 23:57:37 brlcad Exp $
d66 1
a66 1
AC_REVISION($Revision: 14.88 $)
d830 18
a847 2
#ifdef HAVE_CURSES_H
#  include <curses.h>
@


14.88
log
@Utilize the new BC_ARG_ENABLE, BC_ARG_ALIAS, BC_ARG_WTIH, BC_ARG_WITH_ALIAS macros.  This change simplifies argument/alias specifications, shortening the line count, making their logic more consistent and simple to maintain.  this change does add the new requirement of more strict yes/no argument value instead of the previous implicit 'not no means yes'
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.87 2005/04/22 20:07:40 brlcad Exp $
d66 1
a66 1
AC_REVISION($Revision: 14.87 $)
d807 3
@


14.87
log
@add checks for automatic termlib detection supplanting the need for the user to install a termlib/termcap/curses library so the build should no longer fail for that reason (since it will build it if it's not found).  rename the png and regex ac_subst defines while we're at it for consistency.  also force tk to on for real..
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.86 2005/04/22 06:14:33 brlcad Exp $
d66 1
a66 1
AC_REVISION($Revision: 14.86 $)
d184 1
a184 32
dnl Arguments that are auto should check both yes and no values,
dnl otherwise there only needs to be a check for not no to imply a yes
dnl value.  Arguments should only set their flag as to whether they
dnl are enabled -- usage of that flag should be handled by the 
dnl appropriate section further below.

# provides convenience argument handlers for specifying CFLAGS,
# LDFLAGS, CPPFLAGS, and LIBS using --with argument handlers.
BC_WITH_FLAG_ARGS

# use the jdk
JAVA_CFLAGS=
JAVA_LDFLAGS=
with_java=no
AC_ARG_WITH(jdk, AC_HELP_STRING(--with-jdk=path,
		[Specify location of Java Development Kit]),
	[
		JAVA_CFLAGS="-I$withval/include -I$withval/include/`uname | tr [A-Z] [a-z]`"
		with_java=yes
        ]
)

case "$target" in
	*-*-darwin*)
		JAVA_CFLAGS="-framework JavaVM"
		JAVA_LDFLAGS="-shrext .jnilib -framework JavaVM"
		with_java=yes
		;;
esac

AC_SUBST(JAVA_CFLAGS)
AC_SUBST(JAVA_LDFLAGS)
d187 1
a187 9
AC_MSG_CHECKING(whether to only build benchmark)
only_benchmark=no
AC_ARG_ENABLE(only-benchmark, AC_HELP_STRING(--enable-only-benchmark,
		[Only build the components necessary for the benchmark suite (default=no)]),
	[if test "x$enableval" != "xno" ; then
		only_benchmark=yes
	fi]
)
AC_MSG_RESULT($only_benchmark)
d190 1
a190 20
AC_MSG_CHECKING(whether to only build librtserver)
only_rts=no
warn_only_both=no
AC_ARG_ENABLE(only-rtserver, AC_HELP_STRING(--enable-only-rtserver,
		[Only build the components necessary for the raytrace server (default=no)]),
	[if test "x$enableval" != "xno" ; then
		only_rts=yes
		if test "x$only_benchmark" != "xno" ; then
			warn_only_both=yes
		fi
	fi]
)
AC_MSG_RESULT($only_rts)
if test "x$warn_only_both" != "xno" ; then
	AC_MSG_NOTICE([}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}])
	AC_MSG_WARN([Requesting BOTH benchmark and librtserver "only"?])
	AC_MSG_WARN([Building both benchmark and librtserver])
	AC_MSG_NOTICE([{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{])
fi

d193 1
a193 10
dnl has aliases
build_runtime_debug=yes
AC_ARG_ENABLE(runtime-debug, AC_HELP_STRING(--disable-runtime-debug,
		[disable runtime debug for performance (default=no)]),
	[if test "x$enableval" = "xno" ; then
		build_runtime_debug=no
	elif test "x$enableval" = "xyes" ; then
		build_runtime_debug=yes
	fi]
)
d196 1
a196 10
dnl has aliases
build_64bit=auto
AC_ARG_ENABLE(64bit-build, AC_HELP_STRING(--enable-64bit-build,
		[enable 64-bit compilation mode (default=auto)]),
	[if test "x$enableval" = "xno" ; then
		build_64bit=no
	elif test "x$enableval" = "xyes" ; then
		build_64bit=yes
	fi]
)
d199 1
a199 10
dnl build_regex has aliases
build_regex=auto
AC_ARG_ENABLE(regex-build, AC_HELP_STRING(--enable-regex-build,
		[Build the included regular expression library (default=auto)]),
	[if test "x$enableval" = "xno" ; then
		build_regex=no
	elif test "x$enableval" = "xyes" ; then
		build_regex=yes
	fi]
)
d202 1
a202 10
dnl build_png has aliases
build_png=auto
AC_ARG_ENABLE(png-build, AC_HELP_STRING(--enable-png-build,
		[Build the included Portable Network Graphics library (default=auto)]),
	[if test "x$enableval" = "xno" ; then
		build_png=no
	elif test "x$enableval" = "xyes" ; then
		build_png=yes
	fi]
)
d205 1
a205 10
dnl build_zlib has aliases
build_zlib=auto
AC_ARG_ENABLE(zlib-build, AC_HELP_STRING(--enable-zlib-build,
		[Build the included zlib compression library (default=auto)]),
	[if test "x$enableval" = "xno" ; then
		build_zlib=no
	elif test "x$enableval" = "xyes" ; then
		build_zlib=yes
	fi]
)
d208 1
a208 10
dnl build_urt has aliases
build_urt=auto
AC_ARG_ENABLE(urt-build, AC_HELP_STRING(--enable-urt-build,
		[Build the included Utah Raster Toolkit (default=auto)]),
	[if test "x$enableval" = "xno" ; then
		build_urt=no
	elif test "x$enableval" = "xyes" ; then
		build_urt=yes
	fi]
)
d211 1
a211 10
dnl build_tcl has aliases
build_tcl=auto
AC_ARG_ENABLE(tcl-build, AC_HELP_STRING(--enable-tcl-build,
		[Build the included Tcl (default=auto)]),
	[if test "x$enableval" = "xno" ; then
		build_tcl=no
	elif test "x$enableval" = "xyes" ; then
		build_tcl=yes
	fi]
)
d214 1
a214 10
dnl build_itcl has aliases
build_itcl=auto
AC_ARG_ENABLE(itcl-build, AC_HELP_STRING(--enable-itcl-build,
		[Build the included incrTcl (default=auto)]),
	[if test "x$enableval" = "xno" ; then
		build_itcl=no
	elif test "x$enableval" = "xyes" ; then
		build_itcl=yes
	fi]
)
d217 1
a217 10
dnl build_iwidgets has aliases
build_iwidgets=auto
AC_ARG_ENABLE(iwidgets-build, AC_HELP_STRING(--enable-iwidgets-build,
		[Build the included iwidgets (default=auto)]),
	[if test "x$enableval" = "xno" ; then
		build_widgets=no
	elif test "x$enableval" = "xyes" ; then
		build_widgets=yes
	fi]
)
d220 1
a220 10
dnl build_termlib has aliases
build_termlib=auto
AC_ARG_ENABLE(termlib-build, AC_HELP_STRING(--enable-termlib-build,
		[Build the included termlib library (default=auto)]),
	[if test "x$enableval" = "xno" ; then
		build_termlib=no
	elif test "x$enableval" = "xyes" ; then
		build_termlib=yes
	fi]
)
d222 1
a222 2
# doxygen
AC_MSG_CHECKING(whether to generate documentation with doxygen)
d224 3
a226 7
AC_ARG_ENABLE(doxygen, AC_HELP_STRING(--enable-doxygen,
		[enable documentation generation with doxygen (default=no)]),
	[if test "xenable_doxygen" != "xno" ; then
		use_doxygen=yes
	fi]
)
AC_MSG_RESULT($use_doxygen)
d229 1
a229 9
AC_MSG_CHECKING(whether to compile jove or not)
build_jove=no
AC_ARG_ENABLE(jove, AC_HELP_STRING(--enable-jove,
		[enable compilation of jove (default=no)]),
	[if test "x$enable_jove" != "xno" ; then
		build_jove=yes
	fi]
)
AC_MSG_RESULT($build_jove)
d232 1
a232 8
dnl optimized has aliases
use_optimized=no
AC_ARG_ENABLE(optimized, AC_HELP_STRING(--enable-optimized,
		[enable optimized compilation (default=no)]),
	[if test "x$enable_optimized" != "xno" ; then
		use_optimized=yes
	fi]
)
d235 1
a235 8
dnl warnings has aliases
use_warnings=no
AC_ARG_ENABLE(warnings, AC_HELP_STRING(--enable-warnings,
		[enable verbose compilation warnings (default=no)]),
	[if test "x$enable_warnings" != "xno" ; then
		use_warnings=yes
	fi]
)
d238 1
a238 8
dnl debug has aliases
use_debug=yes
AC_ARG_ENABLE(debug, AC_HELP_STRING(--disable-debug,
		[disable debug symbols (default=no)]),
	[if test "x$disable_debug" != "xno" ; then
		use_debug=no
	fi]
)
d241 10
a250 8
dnl profiling has aliases
use_profiling=no
AC_ARG_ENABLE(profiling, AC_HELP_STRING(--enable-profiling,
		[enable profiling (default=no)]),
	[if test "x$enable_profiling" != "xno" ; then
		use_profiling=yes
	fi]
)
d259 31
a289 45
# run-time debugging
AC_ARG_ENABLE(run-time-debug,,
	[if test "x$enable_run_time_debug" = "xno" ; then
		build_runtime_debug=no
	elif test "x$enable_run_time_debug" = "xyes" ; then
		build_runtime_debug=yes
	fi]
)
AC_ARG_ENABLE(runtime-debugging,,
	[if test "x$enable_run_time_debug" = "xno" ; then
		build_runtime_debug=no
	elif test "x$enable_run_time_debug" = "xyes" ; then
		build_runtime_debug=yes
	fi]
)
AC_ARG_ENABLE(run-time-debugging,,
	[if test "x$enable_run_time_debug" = "xno" ; then
		build_runtime_debug=no
	elif test "x$enable_run_time_debug" = "xyes" ; then
		build_runtime_debug=yes
	fi]
)

# 64-bit compilation
AC_ARG_ENABLE(64bit,,
	[if test "x$enable_64bit" = "xno" ; then
		build_64bit=no
	elif test "x$enable_64bit" = "xyes" ; then
		build_64bit=yes
	fi]
)
AC_ARG_ENABLE(64-bit,,
	[if test "x$enable_64bit" = "xno" ; then
		build_64bit=no
	elif test "x$enable_64bit" = "xyes" ; then
		build_64bit=yes
	fi]
)
AC_ARG_ENABLE(64-bit-build,,
	[if test "x$enable_64bit" = "xno" ; then
		build_64bit=no
	elif test "x$enable_64bit" = "xyes" ; then
		build_64bit=yes
	fi]
)
d293 4
a296 22
# alias to force building libregex
AC_ARG_ENABLE(regex,,
	[if test "x$enableval" = "xno" ; then
		build_regex=no
	elif test "x$enableval" = "xyes" ; then
		build_regex=yes
	fi]
)
AC_ARG_ENABLE(libregex,,
	[if test "x$enableval" = "xno" ; then
		build_regex=no
	elif test "x$enableval" = "xyes" ; then
		build_regex=yes
	fi]
)
AC_ARG_ENABLE(libregex-build,,
	[if test "x$enableval" = "xno" ; then
		build_regex=no
	elif test "x$enableval" = "xyes" ; then
		build_regex=yes
	fi]
)
d300 4
a303 22
# alias to force building libpng
AC_ARG_ENABLE(png,,
	[if test "x$enableval" = "xno" ; then
		build_png=no
	elif test "x$enableval" = "xyes" ; then
		build_png=yes
	fi]
)
AC_ARG_ENABLE(libpng,,
	[if test "x$enableval" = "xno" ; then
		build_png=no
	elif test "x$enableval" = "xyes" ; then
		build_png=yes
	fi]
)
AC_ARG_ENABLE(libpng-build,,
	[if test "x$enableval" = "xno" ; then
		build_png=no
	elif test "x$enableval" = "xyes" ; then
		build_png=yes
	fi]
)
d307 4
a310 22
# alias to force building zlib
AC_ARG_ENABLE(zlib,,
	[if test "x$enableval" = "xno" ; then
		build_zlib=no
	elif test "x$enableval" = "xyes" ; then
		build_zlib=yes
	fi]
)
AC_ARG_ENABLE(libz,,
	[if test "x$enableval" = "xno" ; then
		build_zlib=no
	elif test "x$enableval" = "xyes" ; then
		build_zlib=yes
	fi]
)
AC_ARG_ENABLE(libz-build,,
	[if test "x$enableval" = "xno" ; then
		build_zlib=no
	elif test "x$enableval" = "xyes" ; then
		build_zlib=yes
	fi]
)
d314 20
a333 50
# alias to force building urt
AC_ARG_ENABLE(urt,,
	[if test "x$enableval" = "xno" ; then
		build_urt=no
	elif test "x$enableval" = "xyes" ; then
		build_urt=yes
	fi]
)
AC_ARG_ENABLE(urtoolkit,,
	[if test "x$enableval" = "xno" ; then
		build_urt=no
	elif test "x$enableval" = "xyes" ; then
		build_urt=yes
	fi]
)
AC_ARG_ENABLE(rle,,
	[if test "x$enableval" = "xno" ; then
		build_urt=no
	elif test "x$enableval" = "xyes" ; then
		build_urt=yes
	fi]
)
AC_ARG_ENABLE(utah,,
	[if test "x$enableval" = "xno" ; then
		build_urt=no
	elif test "x$enableval" = "xyes" ; then
		build_urt=yes
	fi]
)
AC_ARG_ENABLE(utahrle,,
	[if test "x$enableval" = "xno" ; then
		build_urt=no
	elif test "x$enableval" = "xyes" ; then
		build_urt=yes
	fi]
)
AC_ARG_ENABLE(libutah,,
	[if test "x$enableval" = "xno" ; then
		build_urt=no
	elif test "x$enableval" = "xyes" ; then
		build_urt=yes
	fi]
)
AC_ARG_ENABLE(libutahrle,,
	[if test "x$enableval" = "xno" ; then
		build_urt=no
	elif test "x$enableval" = "xyes" ; then
		build_urt=yes
	fi]
)
d337 4
a340 22
# aliases to force building tcl
AC_ARG_ENABLE(tcl,,
	[if test "x$enableval" = "xno" ; then
		build_tcl=no
	elif test "x$enableval" = "xyes" ; then
		build_tcl=yes
	fi]
)
AC_ARG_ENABLE(libtcl,,
	[if test "x$enableval" = "xno" ; then
		build_tcl=no
	elif test "x$enableval" = "xyes" ; then
		build_tcl=yes
	fi]
)
AC_ARG_ENABLE(libtcl-build,,
	[if test "x$enableval" = "xno" ; then
		build_tcl=no
	elif test "x$enableval" = "xyes" ; then
		build_tcl=yes
	fi]
)
d344 10
a353 64
# aliases to force building itcl
AC_ARG_ENABLE(itcl,,
	[if test "x$enableval" = "xno" ; then
		build_itcl=no
	elif test "x$enableval" = "xyes" ; then
		build_itcl=yes
	fi]
)
AC_ARG_ENABLE(itk,,
	[if test "x$enableval" = "xno" ; then
		build_itcl=no
	elif test "x$enableval" = "xyes" ; then
		build_itcl=yes
	fi]
)
AC_ARG_ENABLE(itk-build,,
	[if test "x$enableval" = "xno" ; then
		build_itcl=no
	elif test "x$enableval" = "xyes" ; then
		build_itcl=yes
	fi]
)
AC_ARG_ENABLE(libitcl,,
	[if test "x$enableval" = "xno" ; then
		build_itcl=no
	elif test "x$enableval" = "xyes" ; then
		build_itcl=yes
	fi]
)
AC_ARG_ENABLE(libitk,,
	[if test "x$enableval" = "xno" ; then
		build_itcl=no
	elif test "x$enableval" = "xyes" ; then
		build_itcl=yes
	fi]
)
AC_ARG_ENABLE(libitcl-build,,
	[if test "x$enableval" = "xno" ; then
		build_itcl=no
	elif test "x$enableval" = "xyes" ; then
		build_itcl=yes
	fi]
)
AC_ARG_ENABLE(libitk-build,,
	[if test "x$enableval" = "xno" ; then
		build_itcl=no
	elif test "x$enableval" = "xyes" ; then
		build_itcl=yes
	fi]
)
AC_ARG_ENABLE(incrtcl,,
	[if test "x$enableval" = "xno" ; then
		build_itcl=no
	elif test "x$enableval" = "xyes" ; then
		build_itcl=yes
	fi]
)
AC_ARG_ENABLE(incrtcl-build,,
	[if test "x$enableval" = "xno" ; then
		build_itcl=no
	elif test "x$enableval" = "xyes" ; then
		build_itcl=yes
	fi]
)
d357 2
a358 8
# aliases to force building iwidgets
AC_ARG_ENABLE(iwidgets,,
	[if test "x$enableval" = "xno" ; then
		build_iwidgets=no
	elif test "x$enableval" = "xyes" ; then
		build_iwidgets=yes
	fi]
)
d362 8
a369 22
# aliases to force building termlib
AC_ARG_ENABLE(termlib,,
	[if test "x$enableval" = "xno" ; then
		build_termlib=no
	elif test "x$enableval" = "xyes" ; then
		build_termlib=yes
	fi]
)
AC_ARG_ENABLE(libtermlib,,
	[if test "x$enableval" = "xno" ; then
		build_termlib=no
	elif test "x$enableval" = "xyes" ; then
		build_termlib=yes
	fi]
)
AC_ARG_ENABLE(libterm,,
	[if test "x$enableval" = "xno" ; then
		build_termlib=no
	elif test "x$enableval" = "xyes" ; then
		build_termlib=yes
	fi]
)
d373 9
a381 11
# optimized alias
AC_ARG_ENABLE(optimization,,
	[if test "x$enable_optimization" != "xno" ; then
		use_optimized=yes
	fi]
)
AC_ARG_ENABLE(optimizations,,
	[if test "x$enable_optimizations" != "xno" ; then
		use_optimized=yes
	fi]
)
d385 11
a395 6
# debug alias
AC_ARG_ENABLE(debugging,,
	[if test "x$disable_debug" != "xno" ; then
		use_debug=no
	fi]
)
d399 3
a401 11
# profiling alias
AC_ARG_ENABLE(profile,,
	[if test "x$enable_profile" != "xno" ; then
		use_profiling=yes
	fi]
)
AC_ARG_ENABLE(profiled,,
	[if test "x$enable_profiled" != "xno" ; then
		use_profiling=yes
	fi]
)
d405 2
a406 13
# verbose warnings alias
AC_ARG_ENABLE(verbose-warnings,,
	[if test "x$enable_verbose_warnings" != "xno" ; then
		use_warnings=yes
	fi]
)
AC_ARG_ENABLE(warning,,
	[if test "x$enable_warning" != "xno" ; then
		use_warnings=yes
	fi]
)
AC_MSG_CHECKING(whether to enable verbose compilation warnings)
AC_MSG_RESULT($use_warnings)
d409 10
d707 17
d810 2
@


14.86
log
@more arg aliases for png, regex, tcl, itcl
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.85 2005/04/19 16:24:59 brlcad Exp $
d66 1
a66 1
AC_REVISION($Revision: 14.85 $)
d358 12
d718 25
d948 10
a957 9
dnl need curses, would prefer ncurses
curses_lib_works=no
CURSES=""
AC_CHECK_LIB(ncurses, tputs, curses_lib_works=yes ; CURSES="-lncurses",
    [AC_CHECK_LIB(curses, tputs, curses_lib_works=yes ; CURSES="-lcurses",
	[AC_CHECK_LIB(termlib, tputs, curses_lib_works=yes ; CURSES="-ltermlib",
	    [AC_CHECK_LIB(termcap, tputs, curses_lib_works=yes ; CURSES="-ltermcap",
	    	[AC_CHECK_LIB(terminfo, tputs, curses_lib_works=yes ; CURSES="-lterminfo",
		    [AC_CHECK_LIB(ocurses, tputs, curses_lib_works=yes ; CURSES="-locurses")]
d987 4
a990 5
regex_link_works=no
REGEX=""
AC_CHECK_LIB(c, regcomp, regex_link_works=yes ; REGEX="-lc",
    [AC_CHECK_LIB(regex, regcomp, regex_link_works=yes ; REGEX="-lregex",
	[AC_CHECK_LIB(compat, regcomp, regex_link_works=yes ; REGEX="-lcompat")]
d995 2
a996 2
png_link_works=no
AC_CHECK_LIB(png, png_access_version_number, png_link_works=yes)
d999 2
a1000 2
z_link_works=no
AC_CHECK_LIB(z, deflate, z_link_works=yes)
d1052 1
a1052 1
AC_CHECK_LIB(nsl, gethostbyaddr, nsl_link_works=yes)
d1148 1
d1151 1
d1153 1
d1734 2
a1735 4
if test "x$png_link_works" = "xyes" ; then
  PRELDFLAGS="$LDFLAGS"
  LDFLAGS="$LDFLAGS -lpng"
fi
d1745 1
a1745 3
if test "x$png_link_works" = "xyes" ; then
  LDFLAGS="$PRELDFLAGS"
fi
d1775 1
a1775 1
	PNG="-lpng"
d1785 2
d1799 1
d1822 1
d1824 1
a1824 1
	REGEX_LIBS='${top_builddir}/src/other/libregex/libregex.la'
d1827 1
d1830 1
a1830 1
AC_SUBST(REGEX_LIBS)
d1838 1
a1838 3
if test "x$z_link_works" = "xyes" ; then
	LDFLAGS="$LDFLAGS -lz"
fi
d1848 1
a1848 3
if test "x$z_link_works" = "xyes" ; then
	LDFLAGS="$PRELDFLAGS"
fi
d1876 1
a1876 3
	if test "x$z_link_works" = "xyes" ; then
		LIBZ='-lz'
	fi
d1959 1
d1966 2
d2026 2
a2027 2
dnl *** libtk ***
dnl forced to on for now since ours is modified with the Bezier Canvas support
d2029 7
d2201 75
a2302 5
dnl *** curses ***
AC_MSG_CHECKING(whether to link with the curses library)
AC_MSG_RESULT($curses_lib_works)
AC_SUBST(CURSES)

d2404 1
a2570 8
dnl tk
dnl Need to update version number(s) in src/other/libtk/Makefile.am
TK_VERSION="8.4"
AC_SUBST(TK_VERSION)
TK_LIBRARY='${prefix}/lib/tk${TK_VERSION}'
AC_SUBST(TK_LIBRARY)
TK='${top_builddir}/src/other/libtk/libtk${TK_VERSION}.la'
AC_SUBST(TK)
d2703 1
d2798 2
a2799 1
echo Build libz ...........................: $build_brlcad_zlib
@


14.85
log
@re-engrishify the comment
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.84 2005/04/18 23:36:49 brlcad Exp $
d66 1
a66 1
AC_REVISION($Revision: 14.84 $)
d483 14
d508 14
d604 7
d629 21
d657 7
d671 7
@


14.84
log
@oops, we need to look for itk too if we want it to link when we're using a system itcl
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.83 2005/04/18 23:01:48 brlcad Exp $
d66 1
a66 1
AC_REVISION($Revision: 14.83 $)
d424 1
a424 1
# blank line to exactly one line in the right place
@


14.83
log
@add output messages for the tcl/itcl functionality checks to know why it fails if it fails at run-time.  improve the itcl functionality check by decoupling the test from libtcl symbols -- this will let configure find a useable incrtcl even if the version of tcl/tk is too old (e.g. 8.3).  finally, make tk build again..
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.82 2005/04/18 18:49:23 brlcad Exp $
d66 1
a66 1
AC_REVISION($Revision: 14.82 $)
d914 1
a914 1
dnl check if libitcl library links (might want to check libitk too)
d923 9
@


14.82
log
@add a few more libraries to the search for a suitable termcap library including terminfo and ocurses (OpenBSD legacy lib)
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.81 2005/04/18 03:44:29 brlcad Exp $
d66 1
a66 1
AC_REVISION($Revision: 14.81 $)
d1843 1
d1848 1
d1852 1
d1855 1
d1909 4
d1915 1
a1915 1
dnl See if libitcl and libitk seem to work
d1919 1
d1921 2
a1922 1
	LIBS="$LIBS $LIBITCL"
d1925 1
a1925 3
#ifdef HAVE_ITCL_H
#  include <itcl.h>
#endif
d1927 1
a1927 1
#  error Unknown major version of Tcl
d1930 1
a1930 1
#  error Unknown minor version of Tcl
d1932 1
d1934 2
a1935 5
    Tcl_Interp *interp;
    interp = Tcl_CreateInterp();
    if (Itcl_Init(interp) == TCL_ERROR) {
	return 1;
    }
d1937 1
d1940 1
d1950 1
d1954 1
a1954 1
dnl figure out whether we need to build Tcl
@


14.81
log
@add Tcl, incrTcl, and IWidgets to the configure-time checks for an already installed useable system library version.  iwidgets could use a better functionality test, but it's a start.  throw in some extra lib cleanup while we're at it.
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.80 2005/04/17 05:58:23 brlcad Exp $
d66 1
a66 1
AC_REVISION($Revision: 14.80 $)
d847 5
a851 1
	    [AC_CHECK_LIB(termcap, tputs, curses_lib_works=yes ; CURSES="-ltermcap")]
@


14.80
log
@use BC_WITH_FLAG_ARGS to simplify
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.79 2005/04/17 04:59:45 brlcad Exp $
d66 1
a66 1
AC_REVISION($Revision: 14.79 $)
d275 1
a275 1
dnl build_regex has alias(es)
d287 1
a287 1
dnl build_png has alias(es)
d299 1
a299 1
dnl build_zlib has alias(es)
d311 1
a311 1
dnl build_urt has alias(es)
d322 36
d575 61
d899 20
d986 2
d999 1
d1026 1
d1137 1
d1167 1
a1167 1
WIFEXITED(x);           /* Generates an error if WIFEXITED
d1607 1
d1651 1
d1653 1
a1653 1
	LIBPNG='${top_builddir}/src/other/libpng/libpng.la'
d1656 1
a1656 1
	LIBPNG="-lpng"
d1659 2
a1660 1
AC_SUBST(LIBPNG)
d1708 1
d1763 1
d1773 3
a1775 1
#include <rle.h>
d1820 218
d2063 1
d2076 1
d2189 4
a2192 3
AM_CONDITIONAL(BUILD_JOVE, [test "x$build_jove" = "xyes"])
# XXX only irix can build libtkglx right now?
AM_CONDITIONAL(BUILD_LIBTKGLX, [test "x$host_os" = "xirix6.5"])
d2197 2
d2200 1
d2204 2
a2301 8
TCL_VERSION="8.4"
AC_SUBST(TCL_VERSION)
TCL_MAJOR_VERSION=8
AC_SUBST(TCL_MAJOR_VERSION)
TCL_MINOR_VERSION=4
AC_SUBST(TCL_MINOR_VERSION)
TCL_PATCH_LEVEL=".6"
AC_SUBST(TCL_PATCH_LEVEL)
a2305 2
TCL='${top_builddir}/src/other/libtcl/libtcl${TCL_VERSION}.la '"${SOCKET}"
AC_SUBST(TCL)
a2373 8
dnl itcl/itk
ITCL_VERSION="3.3"
AC_SUBST(ITCL_VERSION)
ITCL_LIBS='${top_builddir}/src/other/incrTcl/libitcl${ITCL_VERSION}.la'
AC_SUBST(ITCL_LIBS)
ITK_LIBS='${top_builddir}/src/other/incrTcl/libitk${ITCL_VERSION}.la'
AC_SUBST(ITK_LIBS)

d2590 1
a2590 3
echo Build IWidgets .......................: yes
echo Build Itcl/Itk .......................: yes
echo Build Tcl ............................: yes
d2592 3
a2594 1
# echo Build Tk .............................: yes
@


14.79
log
@BSD uses /usr/local for the ports system, and it's a common system path usually anyways so try searching it automatically by default.
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.78 2005/04/14 19:02:57 erikgreenwald Exp $
d66 1
a66 1
AC_REVISION($Revision: 14.78 $)
d190 3
a192 33
# Allow user to specify flags without relying on environment
AC_ARG_WITH(cflags, AC_HELP_STRING(--with-cflags,
		[Specify additional flags to pass to the C compiler]),
	[
		if test "x$withval" != "xno" ; then
			CFLAGS="$CFLAGS $withval"
		fi
	]	
)
AC_ARG_WITH(cppflags, AC_HELP_STRING(--with-cppflags,
		[Specify additional flags to pass to C preprocessor]),
	[
		if test "x$withval" != "xno"; then
			CPPFLAGS="$CPPFLAGS $withval"
		fi
	]
)
AC_ARG_WITH(ldflags, AC_HELP_STRING(--with-ldflags,
		[Specify additional flags to pass to linker]),
	[
		if test "x$withval" != "xno" ; then
			LDFLAGS="$LDFLAGS $withval"
		fi
	]	
)
AC_ARG_WITH(libs, AC_HELP_STRING(--with-libs,
		[Specify additional libraries to link against]),
	[
		if test "x$withval" != "xno" ; then
			LIBS="$LIBS $withval"
		fi
	]	
)
@


14.78
log
@utah has rle_getraw, not rle_get_raw
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.77 2005/04/14 05:17:47 brlcad Exp $
d66 1
a66 1
AC_REVISION($Revision: 14.77 $)
d161 3
a166 1
BC_RETRY_DIRECTORY([/usr/local])
@


14.77
log
@add a configure-time option to build the utah raster toolkit (and hence libutahrle) conditionally
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.76 2005/04/13 22:25:34 brlcad Exp $
d66 1
a66 1
AC_REVISION($Revision: 14.76 $)
d826 2
a827 2
AC_CHECK_LIB(utahrle, rle_get_raw, utahrle_link_works=yes ; UTAHRLE="-lutahrle",
    [AC_CHECK_LIB(rle, rle_get_raw, utahrle_link_works=yes ; UTAHRLE="-lrle")]
@


14.76
log
@move brlcad.spec.in from the top level to misc/
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.75 2005/04/11 21:27:09 brlcad Exp $
d66 1
a66 1
AC_REVISION($Revision: 14.75 $)
d306 1
a306 1
		[Build and use the included regular expression library (default=auto)]),
d318 1
a318 1
		[Build and use the included Portable Network Graphics library (default=auto)]),
d330 1
a330 1
		[Build and use the included zlib compression library (default=auto)]),
d338 12
d511 1
a511 1
AC_MSG_CHECKING(whether to build the data compression library)
d514 53
d814 4
d822 7
a828 3
dnl check if a png library links
png_link_works=no
AC_CHECK_LIB(png, png_access_version_number, png_link_works=yes)
d1615 4
d1628 3
d1665 54
d1874 1
a1946 3
RLE='${top_builddir}/src/other/libutahrle/libutahrle.la'
AC_SUBST(RLE)

d2289 1
@


14.75
log
@show how far along we are in the configuration process
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.74 2005/04/07 17:06:39 erikgreenwald Exp $
d66 1
a66 1
AC_REVISION($Revision: 14.74 $)
d1964 1
a2102 1
 	brlcad.spec
@


14.74
log
@JAVA_CFLAGS must be in the CPPFLAGS when the jni.h header is searched for...
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.73 2005/04/03 06:51:21 brlcad Exp $
d66 1
a66 1
AC_REVISION($Revision: 14.73 $)
d180 1
a180 1
AC_MSG_RESULT([])
d572 1
a572 1
AC_MSG_RESULT([])
d689 1
a689 1
AC_MSG_RESULT([])
d807 1
a807 1
AC_MSG_RESULT([])
d976 1
a976 1
AC_MSG_RESULT([])
d1022 1
a1022 1
AC_MSG_RESULT([])
d1322 1
a1322 1
AC_MSG_RESULT([])
d1423 1
a1423 1
AC_MSG_RESULT([])
d1732 1
a1732 1
AC_MSG_RESULT([])
@


14.73
log
@bump revision post tagging to 7.2.3
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.72 2005/04/03 06:36:32 brlcad Exp $
d66 1
a66 1
AC_REVISION($Revision: 14.72 $)
d906 3
d968 2
a969 1

@


14.72
log
@bump revision number to 7.2.2 for release
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.71 2005/04/02 20:55:17 brlcad Exp $
d65 2
a66 2
AC_INIT(BRL-CAD, 7.2.2, [http://brlcad.org], brlcad)
AC_REVISION($Revision: 14.71 $)
d72 1
a72 1
PATCH_VERSION=2
@


14.71
log
@hack to work around the irix compiler crashing on the libtool btclsh relink attempt when we get to tclscripts -- only do the hack for that os/compiler since it will cause link problems on other platforms
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.70 2005/04/01 23:05:50 brlcad Exp $
d65 2
a66 2
AC_INIT(BRL-CAD, 7.2.1, [http://brlcad.org], brlcad)
AC_REVISION($Revision: 14.70 $)
d72 1
a72 1
PATCH_VERSION=1
@


14.70
log
@customize the test for sys/sched.h to override the default header check that lets the unusable header pass on freebsd.
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.69 2005/03/28 23:34:57 brlcad Exp $
d66 1
a66 1
AC_REVISION($Revision: 14.69 $)
d1723 3
a1725 3
dnl ***************************
dnl *** Configure Makefiles ***
dnl ***************************
d1827 11
@


14.69
log
@search for srand48() function
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.68 2005/03/28 19:22:17 brlcad Exp $
d66 1
a66 1
AC_REVISION($Revision: 14.68 $)
a850 1
	sys/sched.h \
d873 7
@


14.68
log
@drand is bogus, check for dran48
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.67 2005/03/28 16:47:36 brlcad Exp $
d66 1
a66 1
AC_REVISION($Revision: 14.67 $)
d1364 1
@


14.67
log
@make HAVE_SYS_ERRLIST_DECL go away.  there's a better way to check for it, so fix when solaris returns to the rotation (where it'll probably be a problem).  windows gets _sys_errlist from stdlib.h so make sure that's included too.
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.66 2005/03/28 08:30:08 brlcad Exp $
d66 1
a66 1
AC_REVISION($Revision: 14.66 $)
d1324 1
a1324 1
	drand \
@


14.66
log
@if sproc() is available (e.g. on irix), do NOT try to link with pthreads as it will cause bad things to happen even if not explicitly using pthreading in the code.  add check for XQueryExtension and reinstate HAS_SGIGL define until the code that relies on it can be decoupled
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.65 2005/03/26 20:11:07 brlcad Exp $
d66 1
a66 1
AC_REVISION($Revision: 14.65 $)
a1000 4
AC_CHECK_DECL(sys_errlist, 
	      AC_DEFINE(HAVE_SYS_ERRLIST_DECL,1,sys_errlist[]),, 
	      [# include <stdio.h>])

@


14.65
log
@rename REVERSED_IEEE to REVERSE_IEEE so the name matches in length to NATURAL_IEEE
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.64 2005/03/24 07:32:30 brlcad Exp $
d66 1
a66 1
AC_REVISION($Revision: 14.64 $)
d691 1
a691 1
dnl check if pthread library link works
d694 11
a704 3
AC_CHECK_LIB(pthread, pthread_create, thread_link_works=yes ; LIBTHREAD="-lpthread",
    dnl check if the BSD c_r threading library link works
    [AC_CHECK_LIB(c_r, pthread_create, thread_link_works=yes ; LIBTHREAD="-pthread")]
d1320 1
d1624 4
a1627 1
dnl AC_DEFINE(HAS_SGIGL, 1, Irix GL is present.)
@


14.64
log
@make /usr/X11/ a retry directory instead of a search directory since it's where the o32 libraries are kept on irix -- there's a better way to deal with n32 vs. o32 vs. 64 but this'll have to do for now
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.63 2005/03/23 06:13:57 brlcad Exp $
d66 1
a66 1
AC_REVISION($Revision: 14.63 $)
d1275 1
a1275 1
	       AC_DEFINE(REVERSED_IEEE,,64b floating point storage technique),
@


14.63
log
@add checks for sys/sched.h sys/sysmp.h sys/wait.h ulocks.h headers as well as prtcl() and sysmp() functions
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.62 2005/03/23 05:55:30 brlcad Exp $
d66 1
a66 1
AC_REVISION($Revision: 14.62 $)
a159 1
BC_SEARCH_DIRECTORY([/usr/X11], [X11])
d167 1
@


14.62
log
@some systems (e.g. solaris) use /usr/X11 instead of /usr/X11R6, so be sure to go there too
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.61 2005/03/21 04:31:14 brlcad Exp $
d66 1
a66 1
AC_REVISION($Revision: 14.61 $)
d843 1
d847 1
d852 1
d858 1
d1348 1
d1375 1
@


14.61
log
@massive library detection reworking, add new tests for GL and X11 libraries -- almost ready to get rid of the X11 hack.  get rid of GL_* flag hacks, add /opt/X11R6 to retry search list.
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.60 2005/03/20 00:55:21 brlcad Exp $
d66 1
a66 1
AC_REVISION($Revision: 14.60 $)
d160 1
d167 1
@


14.60
log
@add BC_SEARCH_DIRECTORY to find locations that should always be searched (e.g., for X11), remove the forced retry hack
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.59 2005/03/19 23:32:26 brlcad Exp $
d66 1
a66 1
AC_REVISION($Revision: 14.59 $)
d165 1
a170 4
GL_CFLAGS="-I/usr/X11R6/include"
AC_SUBST(GL_CFLAGS)
GL_LIBS="-L/usr/X11R6/lib -lGL"
AC_SUBST(GL_LIBS)
d690 6
a695 2
pthread_link_works=no
AC_CHECK_LIB(pthread, pthread_create, pthread_link_works=yes)
d697 7
a703 10
dnl check if the BSD c_r threading library link works
c_r_link_works=no
AC_CHECK_LIB(c_r, pthread_create, c_r_link_works=yes)

dnl need curses, would prefer ncurses  (XXX should look for tputs)
#LIBS=
AC_CHECK_LIB(ncurses, tputs, CURSES="-lncurses",
    [AC_CHECK_LIB(curses, tputs, CURSES="-lcurses",
	[AC_CHECK_LIB(termlib, tputs, CURSES="-ltermlib",
	    [AC_CHECK_LIB(termcap, tputs, CURSES="-ltermcap")]
a706 1
AC_SUBST(CURSES)
d708 21
a728 7
dnl X
X_PREFIX=/usr/X11R6
AC_SUBST(X_CFLAGS)
X_CFLAGS="-I${X_PREFIX}/include"
AC_SUBST(X_LIBS)
X_LIBS="-L${X_PREFIX}/lib -lX11 -lXi"
AC_SUBST(X_PREFIX)
d732 6
a737 7
AC_CHECK_LIB(c, regcomp, regex_link_works=yes)
if test "x$regex_link_works" = "xno" ; then
	AC_CHECK_LIB(regex, regcomp, regex_link_works=yes)
fi
if test "x$regex_link_works" = "xno" ; then
	AC_CHECK_LIB(compat, regcomp, regex_link_works=yes)
fi
d749 2
a750 1
AC_CHECK_LIB(m, cos, m_link_works=yes)
d754 2
a755 1
AC_CHECK_LIB(socket, socket, socket_link_works=yes)
d759 1
d764 4
a767 1
AC_CHECK_LIB(malloc, mallopt, malloc_link_works=yes)
d771 2
a772 1
AC_CHECK_LIB(mx, matherr, mx_link_works=yes)
d776 2
a777 1
AC_CHECK_LIB(dl, dlopen, dl_link_works=yes)
d781 9
a789 1
AC_CHECK_LIB(gl, getvideo, gl_link_works=yes)
a1400 5
dnl *** X11 ***

AC_PATH_X
AC_PATH_XTRA

a1401 1

a1415 13
dnl *** libm ***

AC_MSG_CHECKING(whether to link with the math library)
dnl See if libm library support works
LIBM=""
if test "x$m_link_works" = "xyes" ; then
   	LIBM="-lm"
	AC_MSG_RESULT(yes)
else
	AC_MSG_RESULT(no)
fi
AC_SUBST(LIBM)

a1416 2

dnl See if png library support works
a1468 1

a1514 1

a1560 1

a1561 2

LIBTHREAD=""
d1563 1
a1563 7
if test "xpthread_link_works" = "xyes" ; then
	LIBTHREAD="-lpthread"
else
	if test "xc_r_link_works" = "xyes" ; then
		LIBTHREAD="-pthread"
	fi
fi
d1566 1
d1586 32
a1619 2

LIBSOCKET=""
d1621 1
a1621 6
if test "x$socket_link_works" = "xyes" ; then
	LIBSOCKET="-lsocket"
	AC_MSG_RESULT(yes)
else
	AC_MSG_RESULT(no)
fi
a1623 1

a1624 2

LIBNSL=""
d1626 1
a1626 6
if test "x$nsl_link_works" = "xyes" ; then
	LIBNSL="-lnsl"
	AC_MSG_RESULT(yes)
else
	AC_MSG_RESULT(no)
fi
a1628 1

a1629 2

LIBMALLOC=""
d1631 1
a1631 6
if test "x$malloc_link_works" = "xyes" ; then
	LIBMALLOC="-lmalloc"
	AC_MSG_RESULT(yes)
else
	AC_MSG_RESULT(no)
fi
a1633 1

a1634 2

LIBMX=""
d1636 1
a1636 6
if test "x$mx_link_works" = "xyes" ; then
	LIBMX="-lmx"
	AC_MSG_RESULT(yes)
else
	AC_MSG_RESULT(no)
fi
a1638 1

a1639 2

LIBDL=""
d1641 1
a1641 6
if test "x$dl_link_works" = "xyes" ; then
	LIBDL="-ldl"
	AC_MSG_RESULT(yes)
else
	AC_MSG_RESULT(no)
fi
a1644 14
dnl *** libgl ***

LIBGL=""
AC_MSG_CHECKING(for graphics library availability)
if test "x$gl_link_works" = "xyes" ; then
	LIBGL="-lgl"
	AC_MSG_RESULT(yes)
	AC_DEFINE(HAS_SGIGL, 1, Irix GL is present.)
else
	AC_MSG_RESULT(no)
fi
AC_SUBST(LIBGL)


a1645 1

@


14.59
log
@search /usr/X11R6, obliterate USE_MESA_GL, search for some of the GL headers
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.58 2005/03/19 18:41:17 brlcad Exp $
d66 1
a66 1
AC_REVISION($Revision: 14.58 $)
d158 3
a163 1
BC_RETRY_DIRECTORY([/usr/X11R6], [X11])
a166 1
BC_RETRY_CONFIGURE
@


14.58
log
@consolidate the 3 restart macros from configure.ac to 2 in m4/retry.m4: BC_RETRY_DIRECTORY and BC_RETRY_CONFIGURE.  specified retry directories will get searched on a configure retry.  configure will restart once searching the extra locations if it ends up not finding some required component.
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.57 2005/03/19 02:13:58 brlcad Exp $
d66 1
a66 1
AC_REVISION($Revision: 14.57 $)
d161 1
d165 1
a167 1
AC_DEFINE(USE_MESA_GL,1,[Assume mesagl is always around (fixme)])
d777 2
d786 1
@


14.57
log
@remove the unnecessary possbilities
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.56 2005/03/18 23:38:10 brlcad Exp $
d66 1
a66 1
AC_REVISION($Revision: 14.56 $)
d158 6
a163 11
# define a function that can restart configure with a given set of flags
# BC_RESTART_CONFIGURE(CONFIGURE, FLAGS)
AC_DEFUN([BC_RETRY_CONFIGURE], [
	if test "x$RETRY" = "x" ; then
		RETRY=no
		AC_MSG_WARN([Restarting configure with additional flags])
		AC_MSG_NOTICE([Restarting with [$1] [$2]])
		exec [$1] [$2] RETRY=no
		exit $?
	fi
])
d165 7
a171 21
# load extra search paths for common locations
AC_DEFUN([BC_EXTRA_SEARCH_DIRS], [
	if test "x$ul_PATH" != "x" ; then
		PATH="$ul_PATH:$PATH"
	fi
	if test "x$sw_PATH" != "x" ; then
		PATH="$sw_PATH:$PATH"
	fi
	if test "x$ul_CPPFLAGS" != "x" ; then
		CPPFLAGS="$ul_CPPFLAGS $CPPFLAGS"
	fi
	if test "x$sw_CPPFLAGS" != "x" ; then
		CPPFLAGS="$sw_CPPFLAGS $CPPFLAGS"
	fi
	if test "x$ul_LDFLAGS" != "x" ; then
		LDFLAGS="$ul_LDFLAGS $LDFLAGS"
	fi
	if test "x$sw_LDFLAGS" != "x" ; then
		LDFLAGS="$sw_LDFLAGS $LDFLAGS"
	fi
])
a552 48
dnl XXX should only add to build paths when something fails that is
dnl necessary additionally, a compiler might complain if /usr/local or
dnl /sw are already in the system search path -- so need to try a
dnl compile test..

dnl autosearch /usr/local
AC_MSG_CHECKING([for /usr/local])
ul_CPPFLAGS=
ul_LDFLAGS=
ul_PATH=
if test -d /usr/local/include ; then
	if test -d /usr/local/lib ; then
		AC_MSG_RESULT([found])
		ul_CPPFLAGS=-I/usr/local/include
		ul_LDFLAGS=-L/usr/local/lib
		ul_PATH=/usr/local/bin
	fi
else
	AC_MSG_RESULT([not found])
fi

dnl autosearch fink paths
AC_MSG_CHECKING([for fink in /sw])
sw_CPPFLAGS=
sw_LDFLAGS=
sw_PATH=
if test -d /sw/include ; then
	if test -d /sw/lib ; then
		AC_MSG_RESULT([found])
		sw_CPPFLAGS=-I/sw/include
		sw_LDFLAGS=-L/sw/lib
		sw_PATH=/sw/bin
	fi
else
	AC_MSG_RESULT([not found])
fi

AC_DEFINE(DM_X,1,[Display for X])
AC_DEFINE(USE_MESA_GL,1,[Assume mesagl is always around (fixme)])
AC_DEFINE(DM_OGL,1,[yeah, GL])
GL_CFLAGS="-I/usr/X11R6/include"
AC_SUBST(GL_CFLAGS)
GL_LIBS="-L/usr/X11R6/lib -lGL"
AC_SUBST(GL_LIBS)

LEX_CFLAGS="-Dyylex=cmd_nop"
AC_SUBST(LEX_CFLAGS)

d674 1
a674 2
		BC_EXTRA_SEARCH_DIRS
		BC_RETRY_CONFIGURE([$0], [CPPFLAGS="$CPPFLAGS" LDFLAGS="$LDFLAGS" PATH="$PATH"])
d1381 1
a1381 2
		BC_EXTRA_SEARCH_DIRS
		BC_RETRY_CONFIGURE([$0], [CPPFLAGS="$CPPFLAGS" LDFLAGS="$LDFLAGS" PATH="$PATH"])
d1434 1
a1434 2
			BC_EXTRA_SEARCH_DIRS
			BC_RETRY_CONFIGURE([$0], [CPPFLAGS="$CPPFLAGS" LDFLAGS="$LDFLAGS" PATH="$PATH"])
d1484 1
a1484 2
			BC_EXTRA_SEARCH_DIRS
			BC_RETRY_CONFIGURE([$0], [CPPFLAGS="$CPPFLAGS" LDFLAGS="$LDFLAGS" PATH="$PATH"])
d1528 1
a1528 2
			BC_EXTRA_SEARCH_DIRS
			BC_RETRY_CONFIGURE([$0], [CPPFLAGS="$CPPFLAGS" LDFLAGS="$LDFLAGS" PATH="$PATH"])
a1871 2
AC_SUBST(CC_SEARCH_FLAGS)
AC_SUBST(LD_SEARCH_FLAGS)
@


14.56
log
@missing var init and output a label of output instead of Makefiles
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.55 2005/03/18 23:24:31 brlcad Exp $
d66 1
a66 1
AC_REVISION($Revision: 14.55 $)
a1847 22
dnl XXX - These defines are available but not presently necessary
dnl CALTECH_MALLOC
dnl DRAND
dnl DLOPEN
dnl GETHOSTNAME
dnl SHELL_ESCAPE
dnl VPRINTF
dnl SBRK
dnl VFORK
dnl SBRK_DECL
dnl POPEN_DECL
dnl GETOPT_DECL
dnl XOPEN
dnl BZERO
dnl STRCHR
dnl MATHERR
dnl UNIX_DOMAIN_SOCKETS
dnl FLOAT
dnl GETOPT
dnl OFF_T
dnl WRITEV
dnl BSDGETTIMEOFDAY
@


14.55
log
@separate out the tests for a clobbered INSTALL/COPYING file into their own m4/restore.m4 using a BC_RESTORE_CLOBBERED macro function.  it takes two optional arguments for the files to check and the directory off of the srcdir to find them in.  if the files have a revision id, those take precedence over a content difference in the backup.
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.54 2005/03/18 19:03:37 brlcad Exp $
d66 1
a66 1
AC_REVISION($Revision: 14.54 $)
d828 1
d1798 1
a1798 1
AC_MSG_CHECKING([... M a k e f i l e s ])
@


14.54
log
@separate out the configure cache check from configure.ac to it's own m4 file, m4/cache.m4.  takes one optional arg for the cache file name.  call it BC_CONFIG_CACHE.
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.53 2005/03/18 16:21:14 brlcad Exp $
d66 1
a66 1
AC_REVISION($Revision: 14.53 $)
d153 1
a153 34
for file in COPYING INSTALL ; do
	curr="$srcdir/$file"
	if ! test -f "$curr" ; then
		continue
	fi
	back="$srcdir/misc/${file}.backup"
	if ! test -f "$back" ; then
		continue
	fi

	AC_MSG_CHECKING([whether ${file} needs to be restored])
	current="`cat $curr`"
	backup="`cat $back`"
	if test "x$current" = "x$backup" ; then
		AC_MSG_RESULT(no)
	else
		current_rev=`grep '$Revision' "$curr" | awk '{print $2}' | sed 's/\.//g'`
		if test "x$current_rev" = "x" ; then
			current_rev=0
		fi
		backup_rev=`grep '$Revision' "$back" | awk '{print $2}' | sed 's/\.//g'`
		if test "x$backup_rev" = "x" ; then
			backup_rev=0
		fi
		if test "$current_rev" -ge "$backup_rev" ; then
			AC_MSG_RESULT(no, saving backup)
			# new version from cvs.. back it up
			cp -pr "$curr" "$back"
		else
			AC_MSG_RESULT(yes)
			cp -pr "$back" "$curr"
		fi
	fi
done
@


14.53
log
@removed obsolete comment
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.52 2005/03/18 14:15:53 brlcad Exp $
d66 1
a66 1
AC_REVISION($Revision: 14.52 $)
d189 1
a189 43
AC_MSG_CHECKING([whether a configure cache exists])
if test "x$cache_file" = "x/dev/null" ; then
	brlcad_cache="config.cache.${host_os}.${ac_hostname}"
	CONFIG_CACHE=""
	if test -f "$brlcad_cache"; then
		# if the configure script has been modified since
		# the last caching, assume it to be invalid.
		last_modified="`ls -Lt $brlcad_cache configure`"
		case "x$last_modified" in
			xconfigure*)
				AC_MSG_RESULT([found but out of date])
				rm -f $brlcad_cache
				;;
			*)
				AC_MSG_RESULT([found $brlcad_cache])

				dnl go ahead and load our cache
				case $brlcad_cache in
					[\\/]* | ?:[\\/]* )
						. $brlcad_cache
						;;
					*)
						. ./$brlcad_cache
						;;
				esac
		esac
	else
		AC_MSG_RESULT([not found])
	fi

	dnl if we are on sgi, bash may choke on sed syntax in the cache
	if test "x$host_os" != "xirix6.5" ; then
		AC_MSG_NOTICE([*** Automatically caching to $brlcad_cache ***])
		>$brlcad_cache
		cache_file="$brlcad_cache"
		CONFIG_CACHE="$cache_file"
	else
		AC_MSG_NOTICE([Automatic caching is unavailable on IRIX])
	fi
	AC_SUBST(CONFIG_CACHE)
else
	AC_MSG_RESULT($cache_file)
fi
@


14.52
log
@fix up the header line to be consistent with the others, s/\t/ /g for the itemized section list, add a paragraph on the difference between using enable and with arguments
@
text
@d21 1
a21 1
dnl $Id: configure.ac,v 14.51 2005/03/16 07:19:16 brlcad Exp $
d66 1
a66 1
AC_REVISION($Revision: 14.51 $)
a68 3
dnl If any of the version numbers are incremented up to a 2-digit
dnl number, remember to add an asterisk to both echo lines below.
dnl
@


14.51
log
@duplicate strerror and check for strerror_r
@
text
@d1 2
a2 1
dnl BRL-CAD		configure.ac
d21 1
a21 1
dnl $Id: configure.ac,v 14.50 2005/03/14 05:22:33 brlcad Exp $
d33 10
a42 10
dnl      0) information on the package
dnl	 1) check command-line arguments
dnl	 2) check programs
dnl	 3) check libraries
dnl	 4) check headers
dnl	 5) check types/structures
dnl      6) check compiler characteristics
dnl	 7) check functions
dnl	 8) check system services
dnl	 9) output a summary
d44 10
a53 4
dnl Any useful build arguments should be added to the output summary
dnl at the end.  Although it may be possible to check for certain
dnl features of command line arguments near the top, related tests
dnl should be delayed and placed into the appropriate test section.
d66 1
a66 1
AC_REVISION($Revision: 14.50 $)
@


14.50
log
@add threading library checks (pthreads) to the forray of proper library checks -- this will likely need more tweaking and testing for versatility for other pthread variants; more work is still needed to allow different threading models too
@
text
@d20 1
a20 1
dnl $Id: configure.ac,v 14.49 2005/03/14 01:13:51 brlcad Exp $
d59 1
a59 1
AC_REVISION($Revision: 14.49 $)
a1435 1
	strerror \
d1465 1
@


14.49
log
@delineate each of the configuration steps with a checking line .. helps locate specific results
@
text
@d20 1
a20 1
dnl $Id: configure.ac,v 14.48 2005/03/13 23:27:26 brlcad Exp $
d59 1
a59 1
AC_REVISION($Revision: 14.48 $)
a642 11
# XXX pthread lib stuff should go away (and be made proper lib check)
case "$target" in
	*-*-linux*)
		PTHREAD_LIBS="-lpthread"
		;;
	*-*-*BSD*)
		PTHREAD_LIBS="-pthread"
		;;
esac
AC_SUBST(PTHREAD_LIBS)

d829 8
d1696 33
@


14.48
log
@announce that the backup is being made in the result, equal is probably modified locally
@
text
@d20 1
a20 1
dnl $Id: configure.ac,v 14.47 2005/03/13 20:51:42 brlcad Exp $
d59 1
a59 1
AC_REVISION($Revision: 14.47 $)
d268 3
d719 3
d837 3
d909 3
d1061 3
d1111 3
d1411 3
d1508 3
d1838 3
@


14.47
log
@rename INSTALL,COPYING check variables
@
text
@d20 1
a20 1
dnl $Id: configure.ac,v 14.46 2005/03/13 19:56:18 brlcad Exp $
d59 1
a59 1
AC_REVISION($Revision: 14.46 $)
d173 2
a174 2
		if test "$current_rev" -gt "$backup_rev" ; then
			AC_MSG_RESULT(no)
@


14.46
log
@improved/individual library checks across the board for gl, dl, mx, malloc, dl, nsl, and socket.  get rid of the 'bad' AC_SEARCH_LIBS.  improve the INSTALL and COPYING file bug check by comparing the rcs revision numbers.
@
text
@d20 1
a20 1
dnl $Id: configure.ac,v 14.45 2005/03/13 09:02:38 brlcad Exp $
d59 1
a59 1
AC_REVISION($Revision: 14.45 $)
d150 2
a151 1
	if ! test -f "$srcdir/$file" ; then
d154 2
a155 1
	if ! test -f "$srcdir/misc/${file}.backup" ; then
d160 3
a162 3
	content="`cat $srcdir/${file}`"
	backup="`cat $srcdir/misc/${file}.backup`"
	if test "x$content" = "x$backup" ; then
d165 3
a167 3
		content_rev="`grep \$Revision ${srcdir}/${file} | awk '{print $2}' | sed 's/\.//g'`"
		if test "x$content_rev" = "x" ; then
			content_rev=0
d169 1
a169 1
		backup_rev="`grep \$Revision ${srcdir}/misc/${file} | awk '{print $2}' | sed 's/\.//g'`"
d173 1
a173 1
		if test "$content_rev" -gt "$backup_rev" ; then
d176 1
a176 1
			cp -pr "$srcdir/${file}" "$srcdir/misc/${file}.backup"
d179 1
a179 1
			cp -pr "$srcdir/misc/${file}.backup" "$srcdir/${file}"
@


14.45
log
@zlib link naming consistency
@
text
@d20 1
a20 1
dnl $Id: configure.ac,v 14.44 2005/03/13 08:57:55 brlcad Exp $
d59 1
a59 1
AC_REVISION($Revision: 14.44 $)
d146 3
a148 1
# a secondary automated automake may blow away COPYING & INSTALL , so restore them
d150 22
a171 5
	if test -f "$srcdir/misc/${file}.backup" ; then
		AC_MSG_CHECKING([whether ${file} needs to be restored])
		content="`cat $srcdir/${file}`"
		backup="`cat $srcdir/misc/${file}.backup`"
		if test "x$content" = "x$backup" ; then
d173 2
d177 1
a177 1
			cp -pr $srcdir/misc/${file}.backup $srcdir/${file}
a828 2
SAVELIBS="${LIBS}"

a837 4
#AC_SEARCH_LIBS(initscr, ncurses curses termlib termcap,, 
#	       AC_MSG_NOTICE([}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}])
#	       AC_MSG_ERROR([*** Need curses! ***]) )
#CURSES="${LIBS}"
a839 20
LIBS=
AC_SEARCH_LIBS(getvideo, gl, AC_DEFINE(HAS_SGIGL, 1, Irix GL is present.))
SGIGL="${LIBS}"
AC_SUBST(SGIGL)

LIBS="${SAVELIBS}"

dnl XXX every binary doesn't need this so remove later
AC_SEARCH_LIBS(mallopt, malloc)

dnl XXX every binary doesn't need this so remove later
AC_SEARCH_LIBS(matherr, mx)

dnl XXX every binary doesn't need this so revert later
AC_SEARCH_LIBS(sqrt, m)

dnl XXX every binary doesn't need this so remove later
AC_SEARCH_LIBS(dlopen, [dl ldl], AC_DEFINE(HAVE_DLOPEN, 1, dlopen is available))
AC_SUBST(DL)

d876 16
a891 1
AC_CHECK_LIB(gethostbyaddr, nsl, nsl_link_works=yes)
d1699 53
@


14.44
log
@library link reworking, add libnsl check, clean up libsocket check
@
text
@d20 1
a20 1
dnl $Id: configure.ac,v 14.43 2005/03/13 07:30:13 brlcad Exp $
d59 1
a59 1
AC_REVISION($Revision: 14.43 $)
d864 2
a865 2
zlib_link_works=no
AC_CHECK_LIB(z, deflate, zlib_link_works=yes)
d1655 1
a1655 1
	if test "x$zlib_link_works" = "xyes" ; then
@


14.43
log
@s/SOCKET/LIBSOCKET/g
@
text
@d20 1
a20 1
dnl $Id: configure.ac,v 14.42 2005/03/13 06:54:24 brlcad Exp $
d59 1
a59 1
AC_REVISION($Revision: 14.42 $)
d863 1
a863 1
dnl check whether there is a useable zlib library
d867 1
a867 1
dnl detect a useable system png library
a868 1
dnl AC_CHECK_LIB(png, png_check_sig, png_link_works=yes)
d871 1
a871 1
 dnl check whether there is a useable math library
d875 8
d912 1
a1469 9
AC_CHECK_FUNCS(socket, LIBSOCKET="" ,
	       [AC_CHECK_LIB(socket, socket, LIBSOCKET="-lsocket", 
	       		BC_EXTRA_SEARCH_DIRS
			BC_RETRY_CONFIGURE([$0], [CPPFLAGS="$CPPFLAGS" LDFLAGS="$LDFLAGS" PATH="$PATH"])
			AC_MSG_NOTICE([}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}])
			AC_MSG_ERROR([*** No internet socket found ***]))
	       ])
AC_SUBST(LIBSOCKET)

d1663 26
@


14.42
log
@HAVE_ defines need to be undefined when false, not set to zero -- HAVE_SYS_ERRLIST_DECL needed fix'in
@
text
@d20 1
a20 1
dnl $Id: configure.ac,v 14.41 2005/03/13 01:20:39 brlcad Exp $
d59 1
a59 1
AC_REVISION($Revision: 14.41 $)
d1462 2
a1463 2
AC_CHECK_FUNCS(socket, SOCKET="" ,
	       [AC_CHECK_LIB(socket, socket, SOCKET="-lsocket", 
d1469 1
a1469 1
AC_SUBST(SOCKET)
@


14.41
log
@support the busted term.h header on solaris.  it requires curses.h, so check for an include it before the header check.
@
text
@d20 1
a20 1
dnl $Id: configure.ac,v 14.40 2005/03/11 02:49:11 brlcad Exp $
d59 1
a59 1
AC_REVISION($Revision: 14.40 $)
d1063 1
a1063 2
	      AC_DEFINE(HAVE_SYS_ERRLIST_DECL,1,sys_errlist[]), 
	      AC_DEFINE(HAVE_SYS_ERRLIST_DECL,0,don't have sys_errlist[]),
@


14.40
log
@build jove .. not use jove
@
text
@d20 1
a20 1
dnl $Id: configure.ac,v 14.39 2005/03/11 02:47:38 brlcad Exp $
d59 1
a59 1
AC_REVISION($Revision: 14.39 $)
a926 1
	term.h \
d950 9
@


14.39
log
@check for X11/Xlib.h .. start of support for X11 availability checks.
@
text
@d20 1
a20 1
dnl $Id: configure.ac,v 14.38 2005/03/05 08:48:38 brlcad Exp $
d59 1
a59 1
AC_REVISION($Revision: 14.38 $)
d414 1
a414 1
use_jove=no
d418 1
a418 1
		use_jove=yes
d421 1
a421 1
AC_MSG_RESULT($use_jove)
d1717 1
a1717 1
AM_CONDITIONAL(BUILD_JOVE, [test "x$use_jove" = "xyes"])
d2153 1
a2153 1
echo Build jove ...........................: $use_jove
@


14.38
log
@update the version to dev patch number 7.2.1
@
text
@d20 1
a20 1
dnl $Id: configure.ac,v 14.37 2005/02/28 06:09:18 brlcad Exp $
d59 1
a59 1
AC_REVISION($Revision: 14.37 $)
d886 1
@


14.37
log
@just need to include sys/param.h
@
text
@d20 1
a20 1
dnl $Id: configure.ac,v 14.36 2005/02/28 05:16:00 brlcad Exp $
d58 2
a59 2
AC_INIT(BRL-CAD, 7.2.0, [http://brlcad.org], brlcad)
AC_REVISION($Revision: 14.36 $)
d68 1
a68 1
PATCH_VERSION=0
@


14.36
log
@take care of the bsd sys/mount.h present but cannot be compiled problem by making the test account for the export symbol name (addresses sf bug 1109930)
@
text
@d20 1
a20 1
dnl $Id: configure.ac,v 14.35 2005/02/23 06:56:03 brlcad Exp $
d59 1
a59 1
AC_REVISION($Revision: 14.35 $)
a943 3
#ifdef HAVE_SYS_TYPES_H
#  include <sys/types.h>
#endif
a946 1
#define export export_hack
a947 1
#undef export
@


14.35
log
@substitute PACKAGE_NAME explicitly, make sure it's set just in case too
@
text
@d20 1
a20 1
dnl $Id: configure.ac,v 14.34 2005/02/21 20:58:48 brlcad Exp $
d59 1
a59 1
AC_REVISION($Revision: 14.34 $)
a915 1
	sys/mount.h \
d941 14
@


14.34
log
@remove old tcl ranlib hack and add comment about old cake 'ar ts' from ranlib5.sh
@
text
@d20 1
a20 1
dnl $Id: configure.ac,v 14.33 2005/02/21 18:08:43 brlcad Exp $
d59 1
a59 1
AC_REVISION($Revision: 14.33 $)
d73 4
@


14.33
log
@force locale setting to C so things like date output as expected
@
text
@d20 1
a20 1
dnl $Id: configure.ac,v 14.32 2005/02/21 16:52:43 brlcad Exp $
d59 1
a59 1
AC_REVISION($Revision: 14.32 $)
d729 3
a1870 2
RANLIB=ranlib
AC_SUBST(RANLIB)
@


14.32
log
@libtool has a bug that causes a /lib/cpp sanity check failure if a C++ compiler is not installed.  This makes the sanity test pass regardless of whether there is a c++ compiler by setting the c++ preprocessor to the c preprocessor.
@
text
@d20 1
a20 1
dnl $Id: configure.ac,v 14.31 2005/02/12 18:26:44 brlcad Exp $
d59 1
a59 1
AC_REVISION($Revision: 14.31 $)
d73 3
@


14.31
log
@substitute LIBTOOL_DEPS which may or may not happen for us automatically in AC_PROG_LIBTOOL
@
text
@d20 1
a20 1
dnl $Id: configure.ac,v 14.30 2005/02/11 18:24:39 brlcad Exp $
d59 1
a59 1
AC_REVISION($Revision: 14.30 $)
d686 2
d695 1
d704 11
@


14.30
log
@preparations for release 7.2.0
@
text
@d20 1
a20 1
dnl $Id: configure.ac,v 14.29 2005/02/11 18:23:09 brlcad Exp $
d59 1
a59 1
AC_REVISION($Revision: 14.29 $)
d705 1
@


14.29
log
@preparations for 7.2.0
@
text
@d20 1
a20 1
dnl $Id: configure.ac,v 14.28 2005/02/11 15:06:07 brlcad Exp $
d59 1
a59 1
AC_REVISION($Revision: 14.28 $)
d67 2
a68 2
MINOR_VERSION=0
PATCH_VERSION=5
@


14.28
log
@generate the m4 directory makefile
@
text
@d20 1
a20 1
dnl $Id: configure.ac,v 14.27 2005/01/30 20:30:08 brlcad Exp $
d58 2
a59 2
AC_INIT(BRL-CAD, 7.0.5, [http://brlcad.org], brlcad)
AC_REVISION($Revision: 14.27 $)
@


14.27
log
@update copyright to 2005
@
text
@d20 1
a20 1
dnl $Id: configure.ac,v 14.26 2005/01/29 04:32:01 brlcad Exp $
d59 1
a59 1
AC_REVISION($Revision: 14.26 $)
d1926 1
@


14.26
log
@fix problem where an unspecified prefix configure resulted in an INSTALL_DIRECTORY set to NONE, causing mged/libbu to not find it's resources.  rename INSTALL_DIRECTORY back to BRLCAD_ROOT, but perform checks and make warnings if it's set at the time of configure.  abort if both bc_root is set and --prefix mismatch.
@
text
@d3 1
a3 1
dnl Copyright (c) 2004 United States Government as represented by the
d20 1
a20 1
dnl $Id: configure.ac,v 14.25 2005/01/27 07:40:20 brlcad Exp $
d59 1
a59 1
AC_REVISION($Revision: 14.25 $)
@


14.25
log
@7.0.5 cvs revision begins
@
text
@d20 1
a20 1
dnl $Id: configure.ac,v 14.24 2005/01/26 15:26:11 brlcad Exp $
d59 1
a59 1
AC_REVISION($Revision: 14.24 $)
d106 2
d109 19
a127 1
AC_PREFIX_DEFAULT(/usr/brlcad)
a657 1
AC_DEFINE_UNQUOTED([INSTALL_DIRECTORY], "${prefix}", "Location where BRLCAD is installed")
d1856 1
a1856 1
TCL_INCLUDE_SPEC="-I${prefix}/include -I../../libtcl/generic"
d1873 1
a1873 1
TCL_STUB_LIB_PATH="${prefix}/lib/libtclstub8.4.a"
@


14.24
log
@get rid of the relative path and determination of PRO_ENGINEER_DIR from configure.ac and just wire the path in like everything else does.  this hopefully resolves the gentoo sandbox error.
@
text
@d20 1
a20 1
dnl $Id: configure.ac,v 14.23 2005/01/25 08:23:04 brlcad Exp $
d58 2
a59 2
AC_INIT(BRL-CAD, 7.0.4, [http://brlcad.org], brlcad)
AC_REVISION($Revision: 14.23 $)
d68 1
a68 1
PATCH_VERSION=4
@


14.23
log
@ready for 7.0.4 on 25 jan 2005
@
text
@d20 1
a20 1
dnl $Id: configure.ac,v 14.22 2005/01/25 04:35:37 brlcad Exp $
d59 1
a59 1
AC_REVISION($Revision: 14.22 $)
a1881 8
dnl pro-engineer plug-in (lib/.. is needed to fake out libtool)
if test "x${prefix}" = "xNONE" ; then
	PRO_ENGINEER_DIR="${ac_default_prefix}/lib/../pro-engineer"
else
	PRO_ENGINEER_DIR="${prefix}/lib/../pro-engineer"
fi
AC_SUBST(PRO_ENGINEER_DIR)

@


14.22
log
@automake 1.8 seems to have a bug that leaves MKDIR_P unset so even after AM_INIT_AUTOMAKE, so call AM_PROG_MKDIR_P explicitly.  failure to do so causes a failure on make install, of course, when trying to make the install directories
@
text
@d20 1
a20 1
dnl $Id: configure.ac,v 14.21 2005/01/24 05:24:46 brlcad Exp $
d58 2
a59 2
AC_INIT(BRL-CAD, 7.0, [http://brlcad.org], brlcad)
AC_REVISION($Revision: 14.21 $)
d68 1
a68 1
PATCH_VERSION=3
@


14.21
log
@add new URToolkit directories after unflattening for upgrade from 3.0 to 3.1b1
@
text
@d20 1
a20 1
dnl $Id: configure.ac,v 14.20 2005/01/19 08:58:50 brlcad Exp $
d59 1
a59 1
AC_REVISION($Revision: 14.20 $)
d680 1
@


14.20
log
@attempt to pull the revision back to 2.52 from 2.57 .. trying to find that convenient supportable version
@
text
@d20 1
a20 1
dnl $Id: configure.ac,v 14.19 2005/01/19 07:36:03 brlcad Exp $
d59 1
a59 1
AC_REVISION($Revision: 14.19 $)
d1970 6
@


14.19
log
@use AC_PROG_LIBTOOL (in our acinclude.m4); try a different approach on finding AR
@
text
@d20 1
a20 1
dnl $Id: configure.ac,v 14.18 2005/01/11 06:36:37 brlcad Exp $
d56 1
a56 1
AC_PREREQ(2.57)
d59 1
a59 1
AC_REVISION($Revision: 14.18 $)
@


14.18
log
@perform the substitutions of ECHO and ECHO_N regardless
@
text
@d20 1
a20 1
dnl $Id: configure.ac,v 14.17 2005/01/11 06:30:00 brlcad Exp $
d59 1
a59 1
AC_REVISION($Revision: 14.17 $)
d680 1
d684 1
a684 5
AM_PROG_LIBTOOL
#AC_PATH_PROG(LIBTOOL, libtool)
#AC_SUBST(LIBTOOL)
AC_PROG_RANLIB
AM_PROG_LEX
d686 8
a693 4
AN_MAKEVAR([AR], [BC_PROG_AR])
AN_PROGRAM([ar], [BC_PROG_AR])
AC_DEFUN([BC_PROG_AR], [AC_CHECK_TOOL(AR, ar, :)])
BC_PROG_AR
@


14.17
log
@diction on ECHO
@
text
@d20 1
a20 1
dnl $Id: configure.ac,v 14.16 2005/01/11 06:27:26 brlcad Exp $
d59 1
a59 1
AC_REVISION($Revision: 14.16 $)
a1648 1
	AC_SUBST(ECHO)
d1651 1
a1653 1
	AC_SUBST(ECHO_N)
d1655 1
@


14.16
log
@attempt to account for the unset ECHO variables in Makefile.am
@
text
@d20 1
a20 1
dnl $Id: configure.ac,v 14.15 2005/01/11 03:59:11 brlcad Exp $
d59 1
a59 1
AC_REVISION($Revision: 14.15 $)
d1650 1
a1650 1
	AC_MSG_NOTICE([echowas not defined by configure])
@


14.15
log
@add a BC_PROG_AR to check for ar as is needed (AC_PROG_RANLIB is NOT sufficient)
@
text
@d20 1
a20 1
dnl $Id: configure.ac,v 14.14 2005/01/11 00:06:52 brlcad Exp $
d59 1
a59 1
AC_REVISION($Revision: 14.14 $)
d1646 11
@


14.14
log
@damn automake and libtool incompatibilities, try AM_PROG_LIBTOOL (instead of reverting back to AC_PROG_LIBTOOL)
@
text
@d20 1
a20 1
dnl $Id: configure.ac,v 14.13 2005/01/09 18:19:37 brlcad Exp $
d59 1
a59 1
AC_REVISION($Revision: 14.13 $)
d689 5
@


14.13
log
@automake wants the lex check to be AM, not AC on some systems..
@
text
@d20 1
a20 1
dnl $Id: configure.ac,v 14.12 2005/01/09 00:29:48 brlcad Exp $
d59 1
a59 1
AC_REVISION($Revision: 14.12 $)
d683 3
a685 2
#AC_PROG_LIBTOOL
AC_PATH_PROG(LIBTOOL, libtool)
@


14.12
log
@check for lex/flex too
@
text
@d20 1
a20 1
dnl $Id: configure.ac,v 14.11 2005/01/07 15:39:39 brlcad Exp $
d59 1
a59 1
AC_REVISION($Revision: 14.11 $)
d678 1
a678 1
AC_PROG_LEX
@


14.11
log
@tagged so immediately bump to dev version
@
text
@d20 1
a20 1
dnl $Id: configure.ac,v 14.10 2005/01/07 13:09:58 brlcad Exp $
d59 1
a59 1
AC_REVISION($Revision: 14.10 $)
d678 1
@


14.10
log
@prepare for a tagged release of 7.0.2
@
text
@d20 1
a20 1
dnl $Id: configure.ac,v 14.9 2004/12/23 07:01:52 brlcad Exp $
d59 1
a59 1
AC_REVISION($Revision: 14.9 $)
d68 1
a68 1
PATCH_VERSION=2
d682 2
a683 2
AC_PROG_LIBTOOL
#AC_PATH_PROG(LIBTOOL, libtool)
@


14.9
log
@revert the java flag additions.. they don't need to get added for every binary (plus they broke the darwin build)
@
text
@d20 1
a20 1
dnl $Id: configure.ac,v 14.8 2004/12/21 03:32:04 morrison Exp $
d59 1
a59 1
AC_REVISION($Revision: 14.8 $)
d68 1
a68 1
PATCH_VERSION=1
@


14.8
log
@moved src/tools/ to src/other/URToolkit/ as the entire Utah Raster Toolkit is not ours but, rather, University of Utah codeage.
@
text
@d20 1
a20 1
dnl $Id: configure.ac,v 14.7 2004/12/21 01:07:59 butler Exp $
d59 1
a59 1
AC_REVISION($Revision: 14.7 $)
a277 5
if test "x$with_java" != "xno" ; then
	CPPFLAGS="$JAVA_CFLAGS $CPPFLAGS"
	LDFLAGS="$JAVA_LDFLAGS $LDFLAGS"
fi

a279 1
AC_SUBST(CPPFLAGS)
@


14.7
log
@Changes to move to the GPL license
@
text
@d20 1
a20 1
dnl $Id: configure.ac,v 14.6 2004/12/16 17:47:22 jlowens Exp $
d59 1
a59 1
AC_REVISION($Revision: 14.6 $)
d1956 1
a2029 1
	src/tools/Makefile
@


14.6
log
@Added JAVA_CFLAGS to CPPFLAGS for jni.h test
@
text
@d1 4
a4 3
dnl BRL-CAD
dnl Copyright (c) 2004 BRL-CAD Developers
dnl $Id: configure.ac,v 14.5 2004/12/16 15:04:42 erikg Exp $
d7 12
a18 2
dnl modify it under the terms of the appropriate license described in
dnl the file named COPYING that should have accompanied this file.
d20 1
a20 3
dnl This program is distributed in the hope that it will be useful,
dnl but WITHOUT ANY WARRANTY; without even the implied warranty of
dnl MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
d59 1
a59 1
AC_REVISION($Revision: 14.5 $)
@


14.5
log
@misspelled var
@
text
@d3 1
a3 1
dnl $Id: configure.ac,v 14.4 2004/11/29 19:49:15 morrison Exp $
d50 1
a50 1
AC_REVISION($Revision: 14.4 $)
d251 1
d260 1
d268 6
d276 1
d893 1
a893 1
		AC_DEFINE(HAVE_JAVAVM_JNI_H,1,[Define to 1 if you have the `<JavaVM/jni.h>' header file])
d896 1
a896 1
		AC_DEFINE(HAVE_JNI_H,1,[Define to 1 if you have the `<jni.h>' header file])
d932 1
a932 1
				  [Define to 1 if you have the `<jni.h>' header file])
d1420 2
@


14.4
log
@switch error delimiters from >< to }{
@
text
@d3 1
a3 1
dnl $Id: configure.ac,v 14.3 2004/11/29 17:44:09 morrison Exp $
d50 1
a50 1
AC_REVISION($Revision: 14.3 $)
d893 1
a893 1
		serach_for_jni_h_more=yes
@


14.3
log
@include leading/trailing whitespace in the title header
@
text
@d3 1
a3 1
dnl $Id: configure.ac,v 14.2 2004/11/16 19:51:07 morrison Exp $
d50 1
a50 1
AC_REVISION($Revision: 14.2 $)
d295 1
a295 1
	AC_MSG_NOTICE([>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>])
d298 1
a298 1
	AC_MSG_NOTICE([<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<])
d731 1
a731 1
		AC_MSG_NOTICE([>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>])
d755 1
a755 1
#	       AC_MSG_NOTICE([>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>])
d928 1
a928 1
		AC_MSG_NOTICE([>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>])
d933 1
a933 1
		AC_MSG_NOTICE([<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<])
d936 1
a936 1
		AC_MSG_NOTICE([>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>])
d938 1
a938 1
		AC_MSG_NOTICE([<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<])
d1261 1
a1261 1
	       AC_MSG_NOTICE([>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>])
d1282 1
a1282 1
		AC_MSG_NOTICE([>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>])
d1385 1
a1385 1
			AC_MSG_NOTICE([>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>])
d1408 1
a1408 1
		AC_MSG_NOTICE([>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>])
d1460 1
a1460 1
			AC_MSG_NOTICE([>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>])
d1511 1
a1511 1
			AC_MSG_NOTICE([>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>])
d1556 1
a1556 1
			AC_MSG_NOTICE([>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>])
d1587 1
a1587 1
		AC_MSG_NOTICE([>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>])
d1595 1
a1595 1
			AC_MSG_NOTICE([>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>])
d1663 1
a1663 1
	AC_MSG_NOTICE([>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>])
d1670 1
a1670 1
	AC_MSG_NOTICE([<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<])
@


14.2
log
@baby steps.. start with 7.0.1 for now instead of 7.1.0
@
text
@d3 1
a3 1
dnl $Id: configure.ac,v 14.1 2004/11/16 19:42:08 morrison Exp $
d50 1
a50 1
AC_REVISION($Revision: 14.1 $)
d70 1
a70 1
length="`echo $title | wc -c`"
d76 1
a76 1
echo "****${separator}****"
d78 1
a78 1
echo "****${separator}****"
@


14.1
log
@dawn of a new revision.  it shall be numbered 14 to match release 7.  begin the convergence by adding emacs/vi local variable footer blocks to encourage consistent formatting.
@
text
@d3 1
a3 1
dnl $Id: configure.ac,v 1.170 2004/11/10 00:57:24 morrison Exp $
d49 2
a50 2
AC_INIT(BRL-CAD, 7.1, [http://brlcad.org], brlcad)
AC_REVISION($Revision: 1.170 $)
d58 2
a59 2
MINOR_VERSION=1
PATCH_VERSION=0
@


1.170
log
@add --disable-runtime-debug option for the former NO_* "PRODUCTION" compilation options that disable the run-time debug flags on a slew of tools, but boost performance.
@
text
@d3 1
a3 1
dnl $Id: configure.ac,v 1.169 2004/11/09 20:32:47 morrison Exp $
d50 1
a50 1
AC_REVISION($Revision: 1.169 $)
@


1.169
log
@check for calloc
@
text
@d3 1
a3 1
dnl $Id: configure.ac,v 1.168 2004/11/01 19:06:30 morrison Exp $
d50 1
a50 1
AC_REVISION($Revision: 1.168 $)
a268 1

d301 13
d315 1
d385 1
a385 1
dnl optimized has alias(es)
d395 1
a395 1
dnl warnings has alias(es)
d405 1
a405 1
dnl debug has alias(es)
d415 1
a415 1
dnl profiling has alias(es)
d431 23
d1640 37
d2074 1
a2074 1
echo Enable run-time debugging ............: yes
@


1.168
log
@er, fuzzy brain.  head is now next incompatible release revision.
@
text
@d3 1
a3 1
dnl $Id: configure.ac,v 1.167 2004/11/01 18:59:52 morrison Exp $
d50 1
a50 1
AC_REVISION($Revision: 1.167 $)
d1263 1
@


1.167
log
@revert back to pre-libtool 1.9 support
@
text
@d3 1
a3 1
dnl $Id: configure.ac,v 1.166 2004/11/01 18:44:24 morrison Exp $
d49 2
a50 2
AC_INIT(BRL-CAD, 7.0, [http://brlcad.org], brlcad)
AC_REVISION($Revision: 1.166 $)
d58 2
a59 2
MINOR_VERSION=0
PATCH_VERSION=1
@


1.166
log
@merge from rel-6-0-branch; bump the revision number after tagging.
@
text
@d3 1
a3 1
dnl $Id: configure.ac,v 1.165.2.1 2004/11/01 18:42:53 morrison Exp $
d50 1
a50 1
AC_REVISION($Revision: 1.165.2.1 $)
d634 2
a635 1
AC_PATH_PROG(LIBTOOL, libtool)
@


1.165
log
@generate the pro-e makefile from the template.
@
text
@d3 1
a3 1
dnl $Id: configure.ac,v 1.164 2004/10/29 13:45:28 morrison Exp $
d50 1
a50 1
AC_REVISION($Revision: 1.164 $)
d59 1
a59 1
PATCH_VERSION=0
@


1.165.2.1
log
@don't forget to bump the revision number after tagging a release
@
text
@d3 1
a3 1
dnl $Id: configure.ac,v 1.165 2004/11/01 13:54:24 morrison Exp $
d50 1
a50 1
AC_REVISION($Revision: 1.165 $)
d59 1
a59 1
PATCH_VERSION=1
@


1.165.2.2
log
@revert back support to pre libtool 1.9 that snuck in
@
text
@d3 1
a3 1
dnl $Id: configure.ac,v 1.165.2.1 2004/11/01 18:42:53 morrison Exp $
d50 1
a50 1
AC_REVISION($Revision: 1.165.2.1 $)
d59 1
a59 1
PATCH_VERSION=0
d634 1
a634 2
AC_PROG_LIBTOOL
#AC_PATH_PROG(LIBTOOL, libtool)
@


1.164
log
@require autoconf 2.57.  a couple macros are in use that fail a miserably horrible death on pre 2.57.  newer versions of libtool obsoleted AC_PROG_LIBTOOL in favor of LT_INIT -- until tested, just check for the prog like any other.
@
text
@d3 1
a3 1
dnl $Id: configure.ac,v 1.163 2004/10/28 18:19:59 morrison Exp $
d50 1
a50 1
AC_REVISION($Revision: 1.163 $)
d1812 1
@


1.163
log
@check for ranlib to help maintain sanity on the irix and ibm b0xen.
@
text
@d3 1
a3 1
dnl $Id: configure.ac,v 1.162 2004/10/22 18:44:58 butler Exp $
d42 1
a42 1
dnl to autoconf 2.50.
d47 1
a47 1
AC_PREREQ(2.50)
d50 1
a50 1
AC_REVISION($Revision: 1.162 $)
d106 1
a106 1
	AM_INIT_AUTOMAKE(no-dependencies)
d108 1
a108 1
AM_CONFIG_HEADER(include/config.h)
d632 3
a634 1
AC_PROG_LIBTOOL
@


1.162
log
@changes to eliminate BRLCAD_ROOT
@
text
@d3 1
a3 1
dnl $Id: configure.ac,v 1.161 2004/10/22 04:32:24 morrison Exp $
d50 1
a50 1
AC_REVISION($Revision: 1.161 $)
d633 1
@


1.161
log
@added restoration check for INSTALL file too.  simplify the pro-engineer build by collapsing/reorganizing all into one directory.
@
text
@d3 1
a3 1
dnl $Id: configure.ac,v 1.160 2004/10/15 19:53:41 butler Exp $
d50 1
a50 1
AC_REVISION($Revision: 1.160 $)
d590 1
@


1.160
log
@added entries for the "regress" directory.
@
text
@d3 1
a3 1
dnl $Id: configure.ac,v 1.159 2004/10/15 17:15:33 morrison Exp $
d50 1
a50 1
AC_REVISION($Revision: 1.159 $)
d110 12
a121 10
# a secondary automated automake may blow away COPYING, so restore it
if test -f "$srcdir/misc/COPYING.backup" ; then
	AC_MSG_CHECKING([whether the COPYING file needs to be restored])
	copyingcontent="`cat $srcdir/COPYING`"
	backupcopying="`cat $srcdir/misc/COPYING.backup`"
	if test "x$copyingcontent" = "x$backupcopying" ; then
		AC_MSG_RESULT(no)
	else
		AC_MSG_RESULT(yes)
		cp -pr $srcdir/misc/COPYING.backup $srcdir/COPYING
d123 1
a123 1
fi
d1769 8
d1808 1
a1808 4
	misc/pro-engineer/resource/Makefile
	misc/pro-engineer/sgi_mips4/Makefile
	misc/pro-engineer/sgi_mips4/mk
	misc/pro-engineer/text/Makefile
@


1.159
log
@the tcl/tk/itcl/itk headers have specialized macros that need to be added to the manpages during post-installation, so make it do that.
@
text
@d3 1
a3 1
dnl $Id: configure.ac,v 1.158 2004/10/15 08:41:46 morrison Exp $
d50 1
a50 1
AC_REVISION($Revision: 1.158 $)
d1771 1
@


1.158
log
@refactor tickle tea que for the umpteenth time
@
text
@d3 1
a3 1
dnl $Id: configure.ac,v 1.157 2004/10/14 15:42:34 morrison Exp $
d50 1
a50 1
AC_REVISION($Revision: 1.157 $)
d1852 1
d1857 1
d1931 1
a2005 1

@


1.157
log
@note to self, libtool shouldn't be generated until after LD is set
@
text
@d3 1
a3 1
dnl $Id: configure.ac,v 1.156 2004/10/14 14:52:15 morrison Exp $
d50 1
a50 1
AC_REVISION($Revision: 1.156 $)
d1758 1
a1758 1
ITCL_LIBS='${top_builddir}/src/other/incrTcl/itcl/libitcl${ITCL_VERSION}.la'
d1760 1
a1760 1
ITK_LIBS='${top_builddir}/src/other/incrTcl/itk/libitk${ITCL_VERSION}.la'
@


1.156
log
@figure out what size pointesr the compiler is actually generating _after_ setting any 64bit compilation flags.  also try a lot harder to detect an invalid compiler option (via the AC_TRY_EVAL callback) for the 64bit flags by checking the actual compiler output since apples horridly returns a success on some invalid options.
@
text
@d3 1
a3 1
dnl $Id: configure.ac,v 1.155 2004/10/14 05:19:48 morrison Exp $
d50 1
a50 1
AC_REVISION($Revision: 1.155 $)
d628 1
@


1.155
log
@now the /usr/local and /sw directories are only searched if we end up at a failure point.  configure is rerun with the extra search paths if it would have therwise aborted.  to do this we add our first two funcs, BC_EXTRA_SEARCH_DIRS and BC_RETRY_CONFIGURE.
@
text
@d3 1
a3 1
dnl $Id: configure.ac,v 1.154 2004/10/07 18:21:01 morrison Exp $
d50 1
a50 1
AC_REVISION($Revision: 1.154 $)
a918 3
AC_CHECK_SIZEOF(void *, 4)
pointer_size="$ac_cv_sizeof_void_p"

d1028 2
a1038 1
	found_64bit_flag=no
d1047 4
a1050 1
		AC_TRY_COMPILE( [], [], [], [flag_64_works=no])
d1068 3
d1089 3
d1110 3
a1112 1
		AC_TRY_COMPILE( [], [], [], [q64_flag_works=no])
d1224 4
@


1.154
log
@libtkGLX needs to be an am_conditional so that the directory is included in the dist irrespectively.
@
text
@d3 1
a3 1
dnl $Id: configure.ac,v 1.153 2004/10/07 13:23:18 morrison Exp $
d50 1
a50 1
AC_REVISION($Revision: 1.153 $)
d168 34
d558 3
a561 2
	AC_MSG_RESULT([found, adding /usr/local to search paths])
	CPPFLAGS="$CPPFLAGS -I/usr/local/include"
d563 4
a566 1
		LDFLAGS="$LDFLAGS -L/usr/local/lib"
d574 3
a577 2
	AC_MSG_RESULT([found, adding /sw to search paths])
	CPPFLAGS="$CPPFLAGS -I/sw/include"
d579 4
a582 1
		LDFLAGS="$LDFLAGS -L/sw/lib"
d685 2
d793 1
d1325 4
a1328 2
			     AC_MSG_NOTICE([>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>])
			     AC_MSG_ERROR([*** No internet socket found ***]))
d1345 1
d1347 3
d1354 1
d1400 2
d1451 2
d1496 2
d1528 5
a1539 6
		fi
	elif test "x$build_64bit" = "xyes" ; then
		if test "x$pointer_size" != "x8" ; then
			AC_MSG_NOTICE([>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>])
			AC_MSG_NOTICE([Try removing --enable-64bit-build or modifying the CFLAGS/LDFLAGS])
			AC_MSG_ERROR([*** Building 64-bit was requested, yet the build seems to be non-64-bit ***])
@


1.153
log
@i'll get it right eventually i suppose.  only set IRIX if it's irix
@
text
@d3 1
a3 1
dnl $Id: configure.ac,v 1.152 2004/10/07 12:53:58 morrison Exp $
d50 1
a50 1
AC_REVISION($Revision: 1.152 $)
a1463 10
dnl *** libtkGLX ***

dnl See if we can build libtkGLX
# XXX need to test why the library fails on non-irix
TKGLX=
if test "x$host_os" = "xirix6.5" ; then
	TKGLX=libtkGLX
fi
AC_SUBST(TKGLX)

d1516 2
@


1.152
log
@bleh, extraneous test
@
text
@d3 1
a3 1
dnl $Id: configure.ac,v 1.151 2004/10/07 12:28:43 morrison Exp $
d50 1
a50 1
AC_REVISION($Revision: 1.151 $)
d1511 7
a1517 5
# XXX the code that relies on this will be going away, but until then..
if test "x$build_brlcad_64bit" = "xyes" -a "x$host_os" = "xirix6.5" ; then
	CFLAGS="$CFLAGS -DIRIX64"
else
	CFLAGS="$CFLAGS -DIRIX"
@


1.151
log
@whoopsie ; then
@
text
@d3 1
a3 1
dnl $Id: configure.ac,v 1.150 2004/10/07 12:09:59 morrison Exp $
d50 1
a50 1
AC_REVISION($Revision: 1.150 $)
d1512 1
a1512 1
if test "x$build_brlcad_64bit" = "xyes" -a test "x$host_os" = "xirix6.5" ; then
@


1.150
log
@set the IRIX and IRIX64 defines after we've verified how we're building for sure.  bring in TKGLX symbol from Makefile.am to here.
@
text
@d3 1
a3 1
dnl $Id: configure.ac,v 1.149 2004/10/07 10:53:50 morrison Exp $
d50 1
a50 1
AC_REVISION($Revision: 1.149 $)
d1469 1
a1469 1
if test "x$host_os" = "xirix6.5"
@


1.149
log
@s/{RT}/{LIBRT}/g so that we do not conflict with the benchmark suite's  RT environment variable.
@
text
@d3 1
a3 1
dnl $Id: configure.ac,v 1.148 2004/10/07 09:59:22 morrison Exp $
d50 1
a50 1
AC_REVISION($Revision: 1.148 $)
a513 8
	*-*-*irix*)
		is_irix=yes
		# XXX nasty temp hack for backwards cake compatibility
		CFLAGS="$CFLAGS -DIRIX"
		if test "x$build_64bit" = "xyes" ; then
			CFLAGS="$CFLAGS -DIRIX64"
		fi
		;;
d1464 13
d1510 9
a1526 1
AM_CONDITIONAL(IRIX, [test "x$is_irix" == "xyes" ])
@


1.148
log
@add -fPIC so that the shared libraries are built correctly -- altix is whining about relocations
@
text
@d3 1
a3 1
dnl $Id: configure.ac,v 1.147 2004/10/07 04:29:56 morrison Exp $
d50 1
a50 1
AC_REVISION($Revision: 1.147 $)
d1574 2
a1575 2
RT='${top_builddir}/src/librt/librt.la'
AC_SUBST(RT)
@


1.147
log
@apply the same logic from the main Makefile.am for dynamically sizing the header separator based on the length of the title line
@
text
@d3 1
a3 1
dnl $Id: configure.ac,v 1.146 2004/10/07 00:58:09 morrison Exp $
d50 1
a50 1
AC_REVISION($Revision: 1.146 $)
d965 15
d1095 1
a1095 1
	extra_optimization_flag="-fno-common -ffast-math -fstrength-reduce -fexpensive-optimizations -fomit-frame-pointer -finline-functions"
@


1.146
log
@use -fno-common if we can to get around a libtcl problem on darwin where it tries to put a dylib together from two static libtool convenience archives. (gives silly error: "ld: common symbols not allowed with MH_DYLIB output format with the -multi_module option")
@
text
@d3 1
a3 1
dnl $Id: configure.ac,v 1.145 2004/10/06 14:31:03 morrison Exp $
d50 1
a50 1
AC_REVISION($Revision: 1.145 $)
d67 13
a79 3
echo "*********************************************************"
echo "*** Configuring BRL-CAD Release $BRLCAD_VERSION, Build $CONFIG_DATE ***"
echo "*********************************************************"
@


1.145
log
@Major restructuring and fixes so that 'make distcheck' should now work and actually be close to correct.  i.e. the resultant generated tarball should contain contents similar to a CVS export.  This helps it generate a proper distribution and build, install, and uninstall cleanly off of that distribution.
@
text
@d3 1
a3 1
dnl $Id: configure.ac,v 1.144 2004/10/04 15:22:09 morrison Exp $
d50 1
a50 1
AC_REVISION($Revision: 1.144 $)
d936 15
@


1.144
log
@sample_applications dir no longer exists in src/ ; check whether COPYING needs to be restored
@
text
@d3 1
a3 1
dnl $Id: configure.ac,v 1.143 2004/10/02 00:10:28 morrison Exp $
d50 1
a50 1
AC_REVISION($Revision: 1.143 $)
d1732 1
d1734 1
d1738 1
d1741 1
@


1.143
log
@cleanup, consolidate am_conditionals to the makefile section
@
text
@d3 1
a3 1
dnl $Id: configure.ac,v 1.142 2004/09/27 20:03:11 morrison Exp $
d50 1
a50 1
AC_REVISION($Revision: 1.142 $)
d100 13
d1566 1
d1569 1
a1569 1
AC_SUBST(TCLSTUB)
a1590 1
dnl EXTRA_CFLAGS='-DMAC_OSX_TCL -DHAVE_CFBUNDLE -DUSE_VFORK -DTCL_DEFAULT_ENCODING=\"utf-8\"'
d1634 2
a1635 2
dnl TKSTUB='${top_builddir}/src/other/libtk/generic/libtkstub.la'
dnl AC_SUBST(TKSTUB)
a1778 1
	src/sample_applications/Makefile
@


1.142
log
@make the 64-bit flag really "auto" now.  it will test the size of a pointer, and if it doesn't match what was requested, it will halt.
@
text
@d3 1
a3 1
dnl $Id: configure.ac,v 1.141 2004/09/25 22:02:30 morrison Exp $
d50 1
a50 1
AC_REVISION($Revision: 1.141 $)
d158 1
a158 1
		    [Specify additional flags to pass to the C compiler]) ,
d166 1
a166 1
		      [Specify additional flags to pass to C preprocessor]) ,
d174 1
a174 1
		     [Specify additional flags to pass to linker]) ,
d182 1
a182 1
		  [Specify additional libraries to link against]) ,
d193 2
a194 2
AC_ARG_WITH(jdk, AC_HELP_STRING(--with-jdk=path, 
		 [Specify location of Java Development Kit]),
d214 1
a214 2
AC_ARG_ENABLE(only-benchmark,
	AC_HELP_STRING(--enable-only-benchmark,
a221 2
AM_CONDITIONAL(ONLY_BENCHMARK, [test "x$only_benchmark" != "xno"])

d226 1
a226 2
AC_ARG_ENABLE(only-rtserver,
	AC_HELP_STRING(--enable-only-rtserver,
a235 1
AM_CONDITIONAL(ONLY_RTS, [test "x$only_rts" != "xno"])
d245 1
a245 2
AC_ARG_ENABLE(64bit-build,
	AC_HELP_STRING(--enable-64bit-build,
d257 1
a257 2
AC_ARG_ENABLE(regex-build,
	AC_HELP_STRING(--enable-regex-build,
d269 1
a269 2
AC_ARG_ENABLE(png-build,
	AC_HELP_STRING(--enable-png-build,
d281 1
a281 2
AC_ARG_ENABLE(zlib-build,
	AC_HELP_STRING(--enable-zlib-build,
d293 1
a293 2
AC_ARG_ENABLE(doxygen,
	AC_HELP_STRING(--enable-doxygen,
d304 1
a304 2
AC_ARG_ENABLE(jove,
	AC_HELP_STRING(--enable-jove,
a310 1
AM_CONDITIONAL(BUILD_JOVE, [test "x$use_jove" = "xyes"])
d315 1
a315 2
AC_ARG_ENABLE(optimized,
	AC_HELP_STRING(--enable-optimized,
d325 1
a325 2
AC_ARG_ENABLE(warnings,
	AC_HELP_STRING(--enable-warnings,
d335 1
a335 2
AC_ARG_ENABLE(debug,
	AC_HELP_STRING(--disable-debug,
d345 1
a345 2
AC_ARG_ENABLE(profiling,
	AC_HELP_STRING(--enable-profiling,
a500 1
AM_CONDITIONAL(IRIX, [test "x$is_irix" == yes])
a1258 1
AM_CONDITIONAL(JAVA, [test "x$with_java" != "xno"])
a1324 1
AM_CONDITIONAL(BUILD_PNG, [test "x$build_brlcad_png" = "xyes"])
a1370 1
AM_CONDITIONAL(BUILD_REGEX, [test "x$build_brlcad_regex" = "xyes"])
a1417 1
AM_CONDITIONAL(BUILD_ZLIB, [test "x$build_brlcad_zlib" = "xyes"])
d1455 9
@


1.141
log
@we need to link against libmultispectral too
@
text
@d3 1
a3 1
dnl $Id: configure.ac,v 1.140 2004/09/24 23:17:28 morrison Exp $
d50 1
a50 1
AC_REVISION($Revision: 1.140 $)
d150 6
d377 3
a379 1
	[if test "x$enable_64bit" != "xno" ; then
d384 3
a386 1
	[if test "x$enable_64_bit" != "xno" ; then
d391 3
a393 1
	[if test "x$enable_64_bit_build" != "xno" ; then
d876 3
d1438 1
d1440 18
d1459 13
a1471 2
AM_CONDITIONAL(BUILD_ZLIB, [test "x$build_brlcad_zlib" = "xyes"])

d1853 4
a1856 4
echo Build libpng .........................: ${build_brlcad_png}
echo Build libregex .......................: ${build_brlcad_regex}
echo Build libz ...........................: ${build_brlcad_zlib}
echo Build jove ...........................: ${use_jove}
d1863 1
a1863 1
echo Build 64-bit release .................: $build_64bit
@


1.140
log
@add --enable-64bit-build flag with a variety of aliases so that we attempt to guess and use the proper compiler flags.  IRIX/IRIX64 hack is moved and modified to become enabled when that flag is given.  also, remove the Build Tk status line for now since for the forseeable future we need to always build it until someone decouples tkCanvBezier or they accept the patch.
@
text
@d3 1
a3 1
dnl $Id: configure.ac,v 1.139 2004/09/24 21:35:25 erikg Exp $
d50 1
a50 1
AC_REVISION($Revision: 1.139 $)
d1472 3
@


1.139
log
@test if char defaults to unsigned (for tcl)
@
text
@d3 1
a3 1
dnl $Id: configure.ac,v 1.138 2004/09/24 16:18:13 morrison Exp $
d50 1
a50 1
AC_REVISION($Revision: 1.138 $)
a137 2
		CFLAGS="$CFLAGS -mips4 -KPIC -G 7 -DIRIX=6 -DIRIX64=65"
		LDFLAGS="$LDFLAGS -mips4 -KPIC -G 7"
d242 12
d362 25
a386 1
# argument aliases go below here (they should all become a single blank line)
d497 5
d554 5
a558 1
AC_C_CHAR_UNSIGNED
d848 1
d941 85
d1803 2
a1804 1
echo Build Tk .............................: yes
d1815 1
@


1.138
log
@there is no spoon, nor is there an __INTADDR__
@
text
@d3 1
a3 1
dnl $Id: configure.ac,v 1.137 2004/09/24 14:51:28 morrison Exp $
d50 1
a50 1
AC_REVISION($Revision: 1.137 $)
d515 1
@


1.137
log
@help make distcheck get a whole lot farther ..
@
text
@d3 1
a3 1
dnl $Id: configure.ac,v 1.136 2004/09/23 23:18:46 butler Exp $
d50 1
a50 1
AC_REVISION($Revision: 1.136 $)
a1018 1
	__INTADDR__ \
@


1.136
log
@Needed to quote the flags being set on the IRIX systems.  Gack.
@
text
@d3 1
a3 1
dnl $Id: configure.ac,v 1.135 2004/09/23 22:48:14 butler Exp $
d50 1
a50 1
AC_REVISION($Revision: 1.135 $)
d1467 4
a1601 1
	src/sample_applications/mk
@


1.135
log
@added extra flags for compiling on IRIX in 64-bit mode
@
text
@d3 1
a3 1
dnl $Id: configure.ac,v 1.134 2004/09/23 20:32:14 morrison Exp $
d50 1
a50 1
AC_REVISION($Revision: 1.134 $)
d138 2
a139 2
		CFLAGS=$CFLAGS -mips4 -KPIC -G 7 -DIRIX=6 -DIRIX64=65
		LDFLAGS=$LDFLAGS -mips4 -KPIC -G 7
@


1.134
log
@couple the search_paths_first flag to a dynamic linker flag so as to avoid warnings on platforms where search_paths_first might mean something different.
@
text
@d3 1
a3 1
dnl $Id: configure.ac,v 1.133 2004/09/23 18:05:57 morrison Exp $
d50 1
a50 1
AC_REVISION($Revision: 1.133 $)
d138 2
d1019 1
@


1.133
log
@extra print statement
@
text
@d3 1
a3 1
dnl $Id: configure.ac,v 1.132 2004/09/23 18:01:01 morrison Exp $
d50 1
a50 1
AC_REVISION($Revision: 1.132 $)
d882 3
a884 3
dnl check for -search_paths_first linker flag
search_paths_first_flag="-Wl,-search_paths_first"
AC_MSG_CHECKING([if the linker understands $search_paths_first_flag])
@


1.132
log
@arrows in wrong direction, add comment
@
text
@d3 1
a3 1
dnl $Id: configure.ac,v 1.131 2004/09/23 17:47:01 butler Exp $
d50 1
a50 1
AC_REVISION($Revision: 1.131 $)
a661 1
AC_MSG_RESULT($png_link_works)
@


1.131
log
@fixes for libpng
@
text
@d3 1
a3 1
dnl $Id: configure.ac,v 1.130 2004/09/20 15:03:23 morrison Exp $
d50 1
a50 1
AC_REVISION($Revision: 1.130 $)
d663 1
d1106 1
a1106 1
			     AC_MSG_NOTICE([<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<])
d1180 1
a1180 1
		dnl automatic detection
@


1.130
log
@linker flag doesn't need to be added to cflags (causes slew of warnings)
@
text
@d3 1
a3 1
dnl $Id: configure.ac,v 1.129 2004/09/20 12:37:30 morrison Exp $
d50 1
a50 1
AC_REVISION($Revision: 1.129 $)
d660 4
a663 3
AC_CHECK_LIB(png, png_check_sig, png_link_works=yes)

dnl check whether there is a useable math library
d1149 4
d1155 3
a1157 3
int main () {
  char *pngver = PNG_LIBPNG_VER_STRING;
  return 0;
d1162 3
d1181 2
@


1.129
log
@add aliases for the the enable-\*-build targets to make the -build part optional.  have the compiler user -Wl,-search_paths_first if it's available since that will cause the (gnu) linker to use the first matching library instead of preferring any dylib first.
@
text
@d3 1
a3 1
dnl $Id: configure.ac,v 1.128 2004/09/20 06:34:24 morrison Exp $
d50 1
a50 1
AC_REVISION($Revision: 1.128 $)
d881 1
a881 1
dnl check for -Wl,-search_paths_first
d883 1
a883 1
AC_MSG_CHECKING([if the compiler understands $search_paths_first_flag])
a884 1
PRECFLAGS="$CFLAGS"
a885 1
CFLAGS="$CFLAGS $search_paths_first_flag"
d887 1
a887 1
AC_TRY_COMPILE( [], [], [], [search_paths_first_flag_works=no])
a889 1
	CFLAGS="$PRECFLAGS"
@


1.128
log
@ugh.. 1-char typo on enable-regex-build
@
text
@d3 1
a3 1
dnl $Id: configure.ac,v 1.127 2004/09/17 20:17:30 morrison Exp $
d50 1
a50 1
AC_REVISION($Revision: 1.127 $)
a241 1

d243 1
a243 1
AC_MSG_CHECKING(whether to build the regular expression library)
a253 1
AC_MSG_RESULT($build_regex)
d256 1
a256 1
AC_MSG_CHECKING(whether to build the PNG library)
a266 1
AC_MSG_RESULT($build_png)
d269 1
a269 1
AC_MSG_CHECKING(whether to build the data compression library)
a279 1
AC_MSG_RESULT($build_zlib)
d307 1
d318 1
d328 2
a329 2
# debugging
AC_MSG_CHECKING(whether to disable debug mode compilation)
a337 5
if test "x$use_debug" = "xyes" ; then
	AC_MSG_RESULT(no)
else
	AC_MSG_RESULT(yes)
fi
d340 1
d352 48
a399 1
# optimized
d413 9
a860 1

d876 4
d881 11
a891 1
if test "x$fno_strict_aliasing_flag_works" = "xno" ; then
a906 1

a922 1

a939 1

a957 1

a977 1

@


1.127
log
@not having curses doesn't need to be an absolute failure (only 4 tools or so use it).  check for various curses headers and various curses libraries.
@
text
@d3 1
a3 1
dnl $Id: configure.ac,v 1.126 2004/09/17 17:48:03 morrison Exp $
d50 1
a50 1
AC_REVISION($Revision: 1.126 $)
d1155 1
a1155 1
	build_brlcad_bregex=yes
@


1.126
log
@add a few more aliases of enable-optimization, enable-optimizations, enable-profiled, enable-warning; add -fomit-frame-pointer and -finline-functions to the extra (gcc) optimization flags
@
text
@d3 1
a3 1
dnl $Id: configure.ac,v 1.125 2004/09/13 21:04:35 morrison Exp $
d50 1
a50 1
AC_REVISION($Revision: 1.125 $)
d551 13
a563 6
dnl need curses, would prefer ncurses
LIBS=
AC_SEARCH_LIBS(initscr, ncurses curses,, 
	       AC_MSG_NOTICE([>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>])
	       AC_MSG_ERROR([*** Need curses! ***]) )
CURSES="${LIBS}"
d627 1
d638 1
d650 1
d666 1
@


1.125
log
@position the enable argument aliases so that there can be any arbitrary number of them (they all result in a single space in the help output).  add an alias for enable-warnings of enable-verbose-warnings.
@
text
@d3 1
a3 1
dnl $Id: configure.ac,v 1.124 2004/09/10 13:41:09 erikg Exp $
d50 1
a50 1
AC_REVISION($Revision: 1.124 $)
a310 1
AC_MSG_CHECKING(whether to enable optimized compilation)
a318 1
AC_MSG_RESULT($use_optimized)
d358 14
d378 5
d392 5
d841 1
a841 1
	extra_optimization_flag="-fno-common -ffast-math -fstrength-reduce -fexpensive-optimizations"
@


1.124
log
@test for strerror for solaris...
@
text
@d3 1
a3 1
dnl $Id: configure.ac,v 1.123 2004/09/08 14:35:52 morrison Exp $
d50 1
a50 1
AC_REVISION($Revision: 1.123 $)
d297 13
a322 1
AC_MSG_CHECKING(whether to enable verbose compilation warnings)
a330 1
AC_MSG_RESULT($use_warnings)
d348 1
a348 2
# profile
AC_MSG_CHECKING(whether to enable profile mode compilation)
d357 4
d366 1
d369 4
a372 7
AC_MSG_CHECKING(whether to compile jove or not)
use_jove=no
AC_ARG_ENABLE(jove,
	AC_HELP_STRING(--enable-jove,
		[enable compilation of jove (default=no)]),
	[if test "x$enable_jove" != "xno" ; then
		use_jove=yes
d375 3
a377 2
AC_MSG_RESULT($use_jove)
AM_CONDITIONAL(BUILD_JOVE, [test "x$use_jove" = "xyes"])
@


1.123
log
@instead of protecting the sys/select.h include from a panic symbol, make autoconf check for panic and avoid the #define in the first place if it's set
@
text
@d3 1
a3 1
dnl $Id: configure.ac,v 1.122 2004/09/07 17:29:00 erikg Exp $
d50 1
a50 1
AC_REVISION($Revision: 1.122 $)
d937 1
@


1.122
log
@all tcl stuff needs socket stuff... sun fix
@
text
@d3 1
a3 1
dnl $Id: configure.ac,v 1.121 2004/09/07 16:16:12 morrison Exp $
d50 1
a50 1
AC_REVISION($Revision: 1.121 $)
d948 1
@


1.121
log
@grr.  single char typo on the if statement is why -pipe did't work
@
text
@d3 1
a3 1
dnl $Id: configure.ac,v 1.120 2004/09/04 07:37:00 morrison Exp $
d50 1
a50 1
AC_REVISION($Revision: 1.120 $)
d1269 1
a1269 1
TCL='${top_builddir}/src/other/libtcl/libtcl${TCL_VERSION}.la'
@


1.120
log
@look for the basename function
@
text
@d3 1
a3 1
dnl $Id: configure.ac,v 1.119 2004/09/02 20:06:40 morrison Exp $
d50 1
a50 1
AC_REVISION($Revision: 1.119 $)
d766 1
a766 1
if test "$pipe_flag_works" = "xno" ; then
@


1.119
log
@look for strsep to replace strtok
@
text
@d3 1
a3 1
dnl $Id: configure.ac,v 1.118 2004/09/02 17:45:46 erikg Exp $
d50 1
a50 1
AC_REVISION($Revision: 1.118 $)
d918 1
@


1.118
log
@fix quoting...
@
text
@d3 1
a3 1
dnl $Id: configure.ac,v 1.117 2004/09/02 17:11:51 erikg Exp $
d50 1
a50 1
AC_REVISION($Revision: 1.117 $)
d967 1
@


1.117
log
@de-quote the tk library path, so it can resolve
@
text
@d3 1
a3 1
dnl $Id: configure.ac,v 1.116 2004/09/02 16:39:57 erikg Exp $
d50 1
a50 1
AC_REVISION($Revision: 1.116 $)
d1263 1
a1263 1
TCL_LIBRARY="'${prefix}/lib/tcl${TCL_VERSION}'"
@


1.116
log
@use libtool stub instead of trying to wire in the library by hand
@
text
@d3 1
a3 1
dnl $Id: configure.ac,v 1.115 2004/09/02 14:54:12 erikg Exp $
d50 1
a50 1
AC_REVISION($Revision: 1.115 $)
d1334 1
a1334 1
TK_LIBRARY="'${prefix}/lib/tk${TK_VERSION}'"
@


1.115
log
@generate libtk makefiles
@
text
@d3 1
a3 1
dnl $Id: configure.ac,v 1.114 2004/09/02 05:54:49 morrison Exp $
d50 1
a50 1
AC_REVISION($Revision: 1.114 $)
d1336 1
a1336 1
TK='-L${top_builddir}/src/other/libtk/build -ltk${TK_VERSION} -Wl,--rpath -Wl,${libdir}'
@


1.114
log
@oop, let the linker find it otherwise it's not relocateable
@
text
@d3 1
a3 1
dnl $Id: configure.ac,v 1.113 2004/09/02 04:20:16 morrison Exp $
d50 1
a50 1
AC_REVISION($Revision: 1.113 $)
d1461 7
d1469 1
@


1.113
log
@clarify the default cflags override.  search for a math library (which will need to be reverted at some point).  and, finally, add a big ol' compatiblity section for tcl so that the tclConfig.sh is generated in a way the tk build will eat.
@
text
@d3 1
a3 1
dnl $Id: configure.ac,v 1.112 2004/09/01 22:15:43 morrison Exp $
d50 1
a50 1
AC_REVISION($Revision: 1.112 $)
d1336 1
a1336 1
TK='${top_builddir}/src/other/libtk/build/libtk${TK_VERSION}.so -Wl,--rpath -Wl,${libdir}'
@


1.112
log
@make dependency tracking only occur on cvs checkouts by default (not exports).
make debug compilation the default.
override the default autoconf cflags.
remove all of the compiler-specific assumptions and perform build tests for the various flags.
@
text
@d3 1
a3 1
dnl $Id: configure.ac,v 1.111 2004/09/01 14:16:08 morrison Exp $
d50 1
a50 1
AC_REVISION($Revision: 1.111 $)
d414 1
a415 1
AC_SUBST(GL_CFLAGS)
d421 1
a421 2
# override the default autoconf "-O3 -g" cflags if user has not
# modified them
d423 2
d522 1
d531 1
d533 2
d536 5
d546 1
d548 1
a549 2
AC_SUBST(X_CFLAGS)
AC_SUBST(X_LIBS)
a1214 1
AC_SUBST(CURSES)
d1256 7
d1264 1
d1266 1
d1268 1
d1270 2
a1271 4
AC_SUBST(TCL_VERSION)
AC_SUBST(TCL_LIBRARY)
AC_SUBST(TCL_PACKAGE_PATH)
AC_SUBST(TCL)
d1273 56
d1333 1
d1335 1
d1337 1
a1338 3
AC_SUBST(TK_VERSION)
AC_SUBST(TK_LIBRARY)
AC_SUBST(TK)
d1343 1
d1345 1
a1346 2
AC_SUBST(ITCL_VERSION)
AC_SUBST(ITCL_LIBS)
@


1.111
log
@need the rpath for libtk
@
text
@d3 1
a3 1
dnl $Id: configure.ac,v 1.110 2004/08/31 07:18:37 morrison Exp $
a48 1

d50 1
a50 1
AC_REVISION($Revision: 1.110 $)
d90 8
a97 1
AM_INIT_AUTOMAKE
d322 2
a323 2
AC_MSG_CHECKING(whether to enable debug mode compilation)
use_debug=no
d325 4
a328 4
	AC_HELP_STRING(--enable-debug,
		[enable debug symbols (default=no)]),
	[if test "x$enable_debug" != "xno" ; then
		use_debug=yes
d331 5
a335 1
AC_MSG_RESULT($use_debug)
d381 4
a384 3
dnl XXX should only add to build paths when something fails that is necessary
dnl additionally, a compiler might complain if /usr/local or /sw are already
dnl in the system search path -- so need to try a compile test..
d421 6
d454 2
a455 1
dnl supported values include: gcc, mipspro, sunpro
d710 1
a710 2
dnl XXX - union wait testing from tcl8.4's configure.in, should be revamped?
dnl ============================================================
a722 1
dnl ============================================================
a731 1

d742 1
a742 1
dnl flags that should work across all known compilers
a744 7
dnl flags that are required but not tied to a compilation style
case "x$compiler" in
	xgcc*)
		CFLAGS="$CFLAGS -fno-strict-aliasing"
		;;
esac

d746 14
d761 4
a764 1
AC_MSG_CHECKING([if the compiler understands -pipe])
d766 10
a775 8
CFLAGS="$CFLAGS -pipe"
AC_TRY_COMPILE( [], [],
	[ AC_MSG_RESULT(yes) ], 
	[
		CFLAGS="$PRECFLAGS"
		AC_MSG_RESULT(no)
	]
)
d779 31
a809 16
	case "x$compiler" in
		xgcc*)
			CFLAGS="$CFLAGS -O3 -fno-common -ffast-math -fstrength-reduce -fexpensive-optimizations"
			LDFLAGS="$LDFLAGS -O3 -fno-common -ffast-math -fstrength-reduce -fexpensive-optimizations"
			;;
		xmipspro*)
			CFLAGS="$CFLAGS -O3"
			LDFLAGS="$LDFLAGS -O3"
			;;
		*)
			AC_MSG_WARN([Don't know how to compile optimized with this compiler])
			CFLAGS="$CFLAGS -O3"
			LDFLAGS="$LDFLAGS -O3"
			AC_MSG_NOTICE([Will try to use -O3 (use CFLAGS and LDFLAGS to override)])
			;;
	esac
d814 15
a828 16
	case "x$compiler" in
		xgcc*)
			CFLAGS="$CFLAGS -g"
			LDFLAGS="$LDFLAGS -g"
			;;
		xmipspro*)
			CFLAGS="$CFLAGS -g"
			LDFLAGS="$LDFLAGS -g"
			;;
		*)
			AC_MSG_WARN([Do not know how to debug with this compiler])
			CFLAGS="$CFLAGS -g"
			LDFLAGS="$LDFLAGS -g"
			AC_MSG_NOTICE([Will try to use -g (use CFLAGS and LDFLAGS to override)])
			;;
	esac
d833 15
a847 9
	case "x$compiler" in
		xgcc*)
			CFLAGS="$CFLAGS -pg"
			LDFLAGS="$LDFLAGS -pg"
			;;
		*)
			AC_MSG_WARN([Don't know how to profile with this compiler])
			;;
	esac
d852 17
a868 10
	case "x$compiler" in
		xgcc*)
			CFLAGS="$CFLAGS -W -Wall -Wundef -Wfloat-equal -Wshadow -Wunreachable-code -Winline -Wconversion"
			# XXX also of interest
			# -Wmissing-declarations -Wmissing-prototypes -Wstrict-prototypes -pedantic -ansi -Werror
			;;
		*)
			AC_MSG_WARN([Don't know how to output verbose warnings with this compiler])
			;;
	esac
d1500 1
@


1.110
log
@tk's binary is in the build dir
@
text
@d3 1
a3 1
dnl $Id: configure.ac,v 1.109 2004/08/31 06:50:56 morrison Exp $
d51 1
a51 1
AC_REVISION($Revision: 1.109 $)
d1207 1
a1207 1
TK='${top_builddir}/src/other/libtk/build/libtk${TK_VERSION}.so'
@


1.109
log
@fix tcl's build by generating the proper build defines.  deborgify tk until it decides to behave.
@
text
@d3 1
a3 1
dnl $Id: configure.ac,v 1.108 2004/08/25 22:07:04 morrison Exp $
d51 1
a51 1
AC_REVISION($Revision: 1.108 $)
d1207 2
a1208 2
TK='${top_builddir}/src/other/libtk/libtk${TK_VERSION}.la'
TKSTUB='${top_builddir}/src/other/libtk/generic/libtkstub.la'
d1212 1
a1212 1
AC_SUBST(TKSTUB)
@


1.108
log
@don't forget libtk's autogenerated little ones
@
text
@d3 1
a3 1
dnl $Id: configure.ac,v 1.107 2004/08/25 21:01:00 morrison Exp $
d51 1
a51 1
AC_REVISION($Revision: 1.107 $)
d704 1
a704 1
    AC_DEFINE(NO_UNION_WAIT,, Lacking a "union wait")
d717 6
d1193 1
a1193 1
TCL_LIBRARY="'${prefix}/tcl${TCL_VERSION}'"
d1196 1
d1201 1
d1206 1
a1206 1
TK_LIBRARY="'${prefix}/tk${TK_VERSION}'"
d1208 1
d1212 1
a1333 3
	src/other/libtk/doc/Makefile
	src/other/libtk/generic/Makefile
	src/other/libtk/library/Makefile
a1334 5
	src/other/libtk/library/demos/Makefile
	src/other/libtk/library/demos/images/Makefile
	src/other/libtk/library/images/Makefile
	src/other/libtk/library/msgs/Makefile
	src/other/libtk/unix/Makefile
@


1.107
log
@demos son non-singulari
@
text
@d3 1
a3 1
dnl $Id: configure.ac,v 1.106 2004/08/25 19:47:41 morrison Exp $
d51 1
a51 1
AC_REVISION($Revision: 1.106 $)
d1327 1
@


1.106
log
@revert back libtk's library inclusion too
@
text
@d3 1
a3 1
dnl $Id: configure.ac,v 1.105 2004/08/25 19:23:53 erikg Exp $
d51 1
a51 1
AC_REVISION($Revision: 1.105 $)
d1327 2
a1328 2
	src/other/libtk/library/demo/Makefile
	src/other/libtk/library/demo/images/Makefile
@


1.105
log
@itk library...
@
text
@d3 1
a3 1
dnl $Id: configure.ac,v 1.104 2004/08/25 18:30:58 erikg Exp $
d51 1
a51 1
AC_REVISION($Revision: 1.104 $)
d1326 5
@


1.104
log
@itcl library...
@
text
@d3 1
a3 1
dnl $Id: configure.ac,v 1.103 2004/08/25 15:03:12 morrison Exp $
d51 1
a51 1
AC_REVISION($Revision: 1.103 $)
d1299 1
@


1.103
log
@readd the tcl library makefiles
@
text
@d3 1
a3 1
dnl $Id: configure.ac,v 1.102 2004/08/03 07:56:11 morrison Exp $
d51 1
a51 1
AC_REVISION($Revision: 1.102 $)
d1296 1
@


1.102
log
@don't forget the case where the cache file doesn't exist
@
text
@d3 1
a3 1
dnl $Id$
d51 1
a51 1
AC_REVISION($Revision$)
d1310 9
@


1.101
log
@replace the wrapped config.h block with common.h
@
text
@d3 1
a3 1
dnl $Id: configure.ac,v 1.100 2004/08/02 06:45:48 morrison Exp $
d51 1
a51 1
AC_REVISION($Revision: 1.100 $)
d121 2
@


1.100
log
@We are Borg, resistance is futile, you will be assimilated.  Convert tcl/tk's build to ours instead of continuing to live with the build issues their build imposes.  Also, make the cache file really work automatically now -- if the configure script hasn't changed, it will utilize the cache.  Make usage of the lib var names be more consistent; check for -lz and -lm.
@
text
@d3 1
a3 1
dnl $Id: configure.ac,v 1.99 2004/07/28 19:25:51 morrison Exp $
d51 1
a51 1
AC_REVISION($Revision: 1.99 $)
d1309 1
d1314 1
@


1.99
log
@output the cvs revision number to configure to know which configure.ac it was made from
@
text
@d3 1
a3 1
dnl $Id: configure.ac,v 1.98 2004/07/27 05:34:52 morrison Exp $
d49 1
d51 1
a51 1
AC_REVISION($Revision: $)
d78 1
d94 42
d229 2
a230 2
	AC_MSG_WARN(Requesting BOTH benchmark and librtserver "only"?)
	AC_MSG_WARN(Building both benchmark and librtserver)
d413 4
a487 17
dnl now that the compiler is known, we can enable a compiler-specific cache file
dnl unless we are on sgi, where bash may choke on sed syntax in the cache
AC_MSG_CHECKING(what cache file is set to)
CONFIG_CACHE=""
if test "x$cache_file" = "x/dev/null" ; then
	if test "x$host_os" != "xirix6.5" ; then
		compsys="`echo $CC | awk '{print $1}' | tr -d '/'`"
		if test "x$compsys" = "x" ; then
			compsys="$compiler"
		fi
		cache_file="config.cache.${compsys}.${host_os}"
		CONFIG_CACHE="$cache_file"
	fi
fi
AC_MSG_RESULT($cache_file)
AC_SUBST(CONFIG_CACHE)

a521 40
dnl tcl
TCLVER=8.4
TCL=libtcl${TCLVER}
case "$target" in
	powerpc-apple-darwin*)
		TCL_LIBS='-L${top_builddir}/src/other/libtcl/unix -ltcl${TCLVER} ${DL} ${SOCKET} -lm'
dnl -compatibility_version 20 -current_version 20.1
		;;
	*)
		TCL_LIBS='-L${top_builddir}/src/other/libtcl/unix -ltcl${TCLVER} -Wl,-rpath,${libdir} -rdynamic ${DL} ${SOCKET} -lm'
esac
TCL_LIBRARY="$prefix/tcl${TCLVER}"
if test "x$FRAMEWORK_BUILD" = "x1" ; then
	dnl this may be wrong
	TCL_BUILD_CFLAGS="-DTCL_PACKAGE_PATH=\\\"$libdir/Resources/Scripts\\\" -DTCL_LIBRARY=\\\"$TCL_LIBRARY\\\""
else
	TCL_BUILD_CFLAGS="-DTCL_PACKAGE_PATH=\\\"$libdir\\\" -DTCL_LIBRARY=\\\"$TCL_LIBRARY\\\""
fi
AC_SUBST(TCL)
AC_SUBST(TCLVER)
AC_SUBST(TCL_BUILD_CFLAGS)
AC_SUBST(TCL_LIBRARY)
AC_SUBST(TCL_LIBS)

dnl tk
TKVER="8.4"
TK_LIBS='-L${top_builddir}/src/other/libtk/unix -ltk${TKVER} ${TCL_LIBS} ${X_LIBS}'
TK_LIBRARY="$prefix/tk${TKVER}"
AC_SUBST(TKVER)
AC_SUBST(TK_LIBRARY)
AC_SUBST(TK_LIBS)

dnl itcl
ITCL_VERSION="3.3"
ITCL_LIBS='${top_builddir}/src/other/incrTcl/itcl/libitcl${ITCL_VERSION}.la'
ITK_LIBS='${top_builddir}/src/other/incrTcl/itk/libitk${ITCL_VERSION}.la'
AC_SUBST(ITCL_LIBS)
AC_SUBST(ITCL_VERSION)
AC_SUBST(ITK_LIBS)

d532 1
a532 1
dnl detect a useable system zlib
d540 4
d679 2
d729 13
d908 1
d910 9
d937 2
d942 2
d953 13
d982 1
a982 1
dnl figure out whether we need to build libz
a996 2
		else
			PNG_LIBS="-lpng -lz"
d1002 1
a1002 1
	PNG_LIBS='${top_builddir}/src/other/libpng/libpng.la -lz'
d1005 1
d1008 1
a1008 1
AC_SUBST(PNG_LIBS)
d1093 1
d1095 1
a1095 1
	ZLIB_LIBS='${top_builddir}/src/other/libz/libz.la'
d1098 3
d1103 3
a1105 1
AC_SUBST(ZLIB_LIBS)
d1182 27
a1209 4
AC_CONFIG_SUBDIRS([ \
	src/other/libtcl/unix \
	src/other/libtk/unix \
])
d1306 3
d1310 3
@


1.98
log
@allow the whole path name and trim compiler options off for the cache file name
@
text
@d3 1
a3 1
dnl $Id: configure.ac,v 1.97 2004/07/27 05:05:20 morrison Exp $
d50 1
@


1.97
log
@Get things closer to working with the sun compiler.  Use test != instead of ! test; add check for sun compiler
@
text
@d3 1
a3 1
dnl $Id: configure.ac,v 1.96 2004/07/25 08:17:19 morrison Exp $
d445 1
a445 1
		compsys="`echo $CC | tr '/' ' ' | awk '{print $1}'`"
@


1.96
log
@make the build work with the irix mipspro compiler.  output elapsed build times via sh/elapsed.sh script
@
text
@d3 1
a3 1
dnl $Id: configure.ac,v 1.95 2004/07/22 23:46:34 morrison Exp $
d158 1
a158 1
	[if ! test "x$enableval" = "xno" ; then
d164 1
a164 1
AM_CONDITIONAL(ONLY_BENCHMARK, [! test "x$only_benchmark" = "xno"])
d173 1
a173 1
	[if ! test "x$enableval" = "xno" ; then
d175 1
a175 1
		if ! test "x$only_benchmark" = "xno" ; then
d181 2
a182 2
AM_CONDITIONAL(ONLY_RTS, [! test "x$only_rts" = "xno"])
if ! test "x$warn_only_both" = "xno" ; then
d238 1
a238 1
	[if ! test "xenable_doxygen" = "xno" ; then
d250 1
a250 1
	[if ! test "x$enable_optimized" = "xno" ; then
d262 1
a262 1
	[if ! test "x$enable_warnings" = "xno" ; then
d274 1
a274 1
	[if ! test "x$enable_debug" = "xno" ; then
d286 1
a286 1
	[if ! test "x$enable_profiling" = "xno" ; then
d291 1
a291 1
	[if ! test "x$enable_profile" = "xno" ; then
d302 1
a302 1
	[if ! test "x$enable_jove" = "xno" ; then
a351 1

d386 1
a386 1
dnl supported values include: gcc, mipspro, icc, sunw
d409 18
d444 6
a449 3
	if ! test "x$host_os" = "xirix6.5" ; then
		compiler="`echo $CC | awk '{print $1}'`"
		cache_file="config.cache.${compiler}.${host_os}"
d623 1
a623 1
	if ! test "x$with_java" = "xno" ; then
d626 1
a626 1
		if ! test "x$only_benchmark" = "xno" ; then
d634 1
a634 1
	if ! test "x$only_rts" = "xno" ; then
d638 1
a638 1
if ! test "x$search_for_jni_h_more" = "xno" ; then
d658 1
a658 1
	if ! test "x$found_jni_h" = "xno" ; then
d699 1
a699 1
WIFEXITED(x);           /* Generates compiler error if WIFEXITED
d721 1
a721 1
dnl flags that should work across any compiler
d732 1
a732 1
if ! test "x$use_optimized" = "xno" ; then
d752 1
a752 1
if ! test "x$use_debug" = "xno" ; then
d772 1
a772 1
if ! test "x$use_profiling" = "xno" ; then
d785 1
a785 1
if ! test "x$use_warnings" = "xno" ; then
d919 1
a919 1
if ! test "x$only_rts" = "xno" ; then
d926 1
a926 1
AM_CONDITIONAL(JAVA, [! test "x$with_java" = "xno"])
d950 1
a950 1
		if ! test "x$png_works" = "xyes" ; then
d999 1
a999 1
		if ! test "x$regex_works" = "xyes" ; then
d1043 1
a1043 1
		if ! test "x$zlib_works" = "xyes" ; then
d1345 1
a1345 1
if ! test "x$time_elapsed" = "xunknown" ; then
@


1.95
log
@comment on updating the version number
@
text
@d3 1
a3 1
dnl $Id: configure.ac,v 1.94 2004/07/22 20:03:41 morrison Exp $
d50 1
d59 3
d69 3
d84 4
a88 2
AC_CONFIG_AUX_DIR(.)
AC_CONFIG_SRCDIR([src/librt/bool.c])
a90 1
AC_PREFIX_DEFAULT(/usr/brlcad)
d386 9
d397 3
a399 3
   AC_MSG_CHECKING([whether we are using the MIPSpro compiler])
   using_mipspro=no
   AC_LINK_IFELSE([#if defined(sgi) && defined(_COMPILER_VERSION) && !defined(__GNUC__)
d403 5
a407 2
   ], [using_mipspro=no], [using_mipspro=yes])
   AC_MSG_RESULT($using_mipspro)
d425 1
d430 1
d434 1
d701 1
a701 1
# XXX some of these flags are presently GCC-specific
a702 1
CFLAGS="$CFLAGS -fno-strict-aliasing"
d704 8
d713 16
a728 2
	CFLAGS="$CFLAGS -O3 -fno-common -ffast-math -fstrength-reduce -fexpensive-optimizations"
	LDFLAGS="$LDFLAGS -O3 -fno-common -ffast-math -fstrength-reduce -fexpensive-optimizations"
d731 1
d733 16
a748 2
	CFLAGS="$CFLAGS -g"
	LDFLAGS="$LDFLAGS -g"
d751 1
d753 9
a761 2
	CFLAGS="$CFLAGS -pg"
	LDFLAGS="$LDFLAGS -pg"
d764 1
d766 10
a775 3
	CFLAGS="$CFLAGS -W -Wall -Wundef -Wfloat-equal -Wshadow -Wunreachable-code -Winline -Wconversion"
	# XXX also of interest
	# -Wmissing-declarations -Wmissing-prototypes -Wstrict-prototypes -pedantic -ansi -Werror
d1274 4
a1277 58
time_elapsed=""
pre_hour="`echo $CONFIG_TIME | awk '{print $1}'`"
pre_min="`echo $CONFIG_TIME | awk '{print $2}'`"
pre_sec="`echo $CONFIG_TIME | awk '{print $3}'`"
hour_seconds_before="`expr $pre_hour \* 60 \* 60`"
min_seconds_before="`expr $pre_min \* 60`"
total_pre="`expr $hour_seconds_before + $min_seconds_before + $pre_sec`"

post_conf_time="`date '+%H %M %S'`"
post_hour="`echo $post_conf_time | awk '{print $1}'`"
post_min="`echo $post_conf_time | awk '{print $2}'`"
post_sec="`echo $post_conf_time | awk '{print $3}'`"
hour_seconds_after="`expr $post_hour \* 60 \* 60`"
min_seconds_after="`expr $post_min \* 60`"
total_post="`expr $hour_seconds_after + $min_seconds_after + $post_sec`"

sec_elapsed="`expr $total_post - $total_pre`"
min_elapsed="0"
if ! test "x$sec_elapsed" = "x0" ; then
	min_elapsed="`expr $sec_elapsed / 60`"
	sec_elapsed2="`expr $min_elapsed \* 60`"
	sec_elapsed="`expr $sec_elapsed - $sec_elapsed2`"
fi
hour_elapsed="0"
if ! test "x$min_elapsed" = "x0" ; then
	hour_elapsed="`expr $min_elapsed / 60`"
	min_elapsed2="`expr $hour_elapsed \* 60`"
	min_elapsed="`expr $min_elapsed - $min_elapsed2`"
fi

if ! test "x$hour_elapsed" = "x0" ; then
	if test "x$hour_elapsed" = "x1" ; then
		time_elapsed="$hour_elapsed hour"
	else
		time_elapsed="$hour_elapsed hours"
	fi
fi
if ! test "x$min_elapsed" = "x0" ; then
	if ! test "x$time_elapsed" = "x" ; then
		time_elapsed="${time_elapsed}, "
	fi
	time_elapsed="${time_elapsed}${min_elapsed}"
	if test "x$min_elapsed" = "x1" ; then
		time_elapsed="${time_elapsed} minute"
	else
		time_elapsed="${time_elapsed} minutes"
	fi
fi
if ! test "x$sec_elapsed" = "x0" ; then
	if ! test "x$time_elapsed" = "x" ; then
		time_elapsed="${time_elapsed}, "
	fi
	time_elapsed="${time_elapsed}${sec_elapsed}"
	if test "x$sec_elapsed" = "x1" ; then
		time_elapsed="${time_elapsed} second"
	else
		time_elapsed="${time_elapsed} seconds"
	fi
d1285 1
d1287 1
a1287 1
echo BRL-CAD Release $BRLCAD_VERSION, Build $CONFIG_DATE
d1325 1
d1327 1
@


1.94
log
@ascii artify the start
@
text
@d3 1
a3 1
dnl $Id: configure.ac,v 1.93 2004/07/21 23:09:57 morrison Exp $
a49 1
dnl put configure stuff here
d51 4
d58 1
@


1.93
log
@Compute and display just how long this dang thing takes to configure.  Revert usage of the new abs_top_builddir variable since incrTcl was ripped a new one.
@
text
@d3 1
a3 1
dnl $Id: configure.ac,v 1.92 2004/07/21 13:37:13 morrison Exp $
d58 4
a61 2
echo "Configuring BRL-CAD Release $BRLCAD_VERSION, Build $CONFIG_DATE"
echo "=================================================="
@


1.92
log
@readd the generation of itcl/itk pkgIndex.tcl files
@
text
@d3 1
a3 1
dnl $Id: configure.ac,v 1.91 2004/07/19 13:36:36 erikg Exp $
d56 1
d59 1
a59 1

d865 1
a865 1
	PNG_LIBS='${abs_top_builddir}/src/other/libpng/libpng.la -lz'
d912 1
a912 1
	REGEX_LIBS='${abs_top_builddir}/src/other/libregex/libregex.la'
d956 1
a956 1
	ZLIB_LIBS='${abs_top_builddir}/src/other/libz/libz.la'
d1190 63
d1297 1
a1300 1

@


1.91
log
@AC_PROG_RANLIB is obsolete thanks to AC_PROG_LIBTOOL
@
text
@d3 1
a3 1
dnl $Id: configure.ac,v 1.90 2004/07/19 13:32:55 erikg Exp $
d1126 1
d1128 1
@


1.90
log
@simplified link flags
@
text
@d3 1
a3 1
dnl $Id: configure.ac,v 1.89 2004/07/19 13:23:01 erikg Exp $
a362 1
AC_PROG_RANLIB
@


1.89
log
@let the libraries know their own dependancies, simplifies link flags
@
text
@d3 1
a3 1
dnl $Id: configure.ac,v 1.88 2004/07/16 04:46:40 morrison Exp $
d998 1
a998 1
CURSOR='${top_builddir}/src/libcursor/libcursor.la ${CURSES}'
d1005 1
a1005 1
FB='${top_builddir}/src/libfb/libfb.la ${X_LIBS} ${PKG} ${BU} ${GL_LIBS}'
d1008 1
a1008 1
FFT='${top_builddir}/src/libfft/libfft.la -lm'
d1020 1
a1020 1
RLE='${top_builddir}/src/other/libutahrle/libutahrle.la -lm'
@


1.88
log
@merge in the items found by autoscan that are still not accounted for yet anyways.  this includes more type, function, program, and header checks and usage of latest AC_INIT/AM_INIT_AUTOMAKE calls.
@
text
@d3 1
a3 1
dnl $Id: configure.ac,v 1.87 2004/07/16 04:37:22 morrison Exp $
d992 1
a992 1
BN='${top_builddir}/src/libbn/libbn.la ${BU}'
d995 1
a995 1
BU='${top_builddir}/src/libbu/libbu.la ${TCL_LIBS} ${PTHREAD_LIBS}'
d1002 1
a1002 1
DM='${top_builddir}/src/libdm/libdm.la ${TK_LIBS} ${RT}'
d1023 1
a1023 1
RT='${top_builddir}/src/librt/librt.la ${BN} ${REGEX_LIBS}'
@


1.87
log
@oops, forgot to commit the incrTcl managment change.. incrTcl is now controlled by our build files, not relying on their rather busted build.
@
text
@d3 1
a3 1
dnl $Id: configure.ac,v 1.86 2004/07/13 22:23:37 morrison Exp $
d47 1
a47 1
AC_INIT(src/librt/bool.c)
d49 1
a50 3
dnl AC_CONFIG_AUX_DIR(config)

AC_PREREQ(2.50)
d52 2
a53 2
MAJOR_VERSION=6
MINOR_VERSION=1
d70 3
a72 1
AM_INIT_AUTOMAKE(brlcad, $BRLCAD_VERSION.$CONFIG_DATE)
d357 1
a357 1

d359 3
d363 1
d505 3
d509 1
d514 1
d516 2
a517 1
	limits.h \
d520 2
d523 1
d525 1
d528 1
d530 2
d535 2
d540 1
d542 1
d545 1
d547 1
d551 2
d554 1
d630 6
d637 5
a661 2
AC_CHECK_MEMBERS([struct stat.st_blksize],[AC_DEFINE(HAVE_ST_BLKSIZE, 1, [the old blksize define])])

d732 2
d737 3
d741 6
d749 20
d770 4
d777 1
d779 12
@


1.86
log
@placehold an idea on config_aux_dir
@
text
@d3 1
a3 1
dnl $Id: configure.ac,v 1.85 2004/07/13 17:43:45 morrison Exp $
d471 2
a472 2
ITCL_LIBS='-L${top_builddir}/src/other/incrTcl/itcl -litcl${ITCL_VERSION} -Wl,-rpath,${libdir}/itcl${ITCL_VERSION}'
ITK_LIBS='-L${top_builddir}/src/other/incrTcl/itk -litk${ITCL_VERSION} -Wl,-rpath,${libdir}/itk${ITCL_VERSION}'
a958 1
	src/other/incrTcl \
d1042 3
@


1.85
log
@give the linker something to link so it doesn't fail when testing mipspro
@
text
@d3 1
a3 1
dnl $Id: configure.ac,v 1.84 2004/07/13 15:54:11 morrison Exp $
d48 4
@


1.84
log
@Handle the inadequate /usr/brl/bin/install (requires root) by ignoring brl/bin
@
text
@d3 1
a3 1
dnl $Id: configure.ac,v 1.83 2004/07/08 17:09:11 morrison Exp $
d371 1
@


1.83
log
@rpath to the itcl and itk dirs is what was really needed
@
text
@d3 1
a3 1
dnl $Id: configure.ac,v 1.82 2004/07/07 18:01:55 morrison Exp $
d63 5
@


1.82
log
@need to use the absolute data path so that tcl/tk libraries are found for running asc2g prior to installation (since the relative paths are wrong from db/)
@
text
@d3 1
a3 1
dnl $Id: configure.ac,v 1.81 2004/06/22 17:38:55 morrison Exp $
d432 1
a432 1
		TCL_LIBS='-L${abs_top_builddir}/src/other/libtcl/unix -ltcl${TCLVER} ${DL} ${SOCKET} -lm'
d436 1
a436 1
		TCL_LIBS='-L${abs_top_builddir}/src/other/libtcl/unix -ltcl${TCLVER} -Wl,-rpath,${libdir} -rdynamic ${DL} ${SOCKET} -lm'
d453 1
a453 1
TK_LIBS='-L${abs_top_builddir}/src/other/libtk/unix -ltk${TKVER} ${TCL_LIBS} ${X_LIBS}'
d461 2
a462 2
ITCL_LIBS='-L${abs_top_builddir}/src/other/incrTcl/itcl -litcl3.3'
ITK_LIBS='-L${abs_top_builddir}/src/other/incrTcl/itk -litk3.3'
@


1.81
log
@check for basic shell facilities
@
text
@d3 1
a3 1
dnl $Id$
d432 1
a432 1
		TCL_LIBS='-L${top_builddir}/src/other/libtcl/unix -ltcl${TCLVER} ${DL} ${SOCKET} -lm'
d436 1
a436 2
		TCL_LIBS='-L${top_builddir}/src/other/libtcl/unix -ltcl${TCLVER} -Wl,-rpath,${libdir} -rdynamic ${DL} ${SOCKET} -lm'
		;;
d453 1
a453 1
TK_LIBS='-L${top_builddir}/src/other/libtk/unix -ltk${TKVER} ${TCL_LIBS} ${X_LIBS}'
d461 2
a462 2
ITCL_LIBS='-L${top_builddir}/src/other/incrTcl/itcl -litcl3.3'
ITK_LIBS='-L${top_builddir}/src/other/incrTcl/itk -litk3.3'
d772 1
a772 1
	PNG_LIBS='${top_builddir}/src/other/libpng/libpng.la -lz'
d819 1
a819 1
	REGEX_LIBS='${top_builddir}/src/other/libregex/libregex.la'
d863 1
a863 1
	ZLIB_LIBS='${top_builddir}/src/other/libz/libz.la'
@


1.80
log
@fixes to make 'build dir' compilation work (changing that h to an include)
fixes for the ITCL/ITK link lines... they may still need rpath for runtime
	convenience.
@
text
@d3 1
a3 1
dnl $Id: configure.ac,v 1.79 2004/06/14 18:44:38 erikg Exp $
d349 10
a368 4

AC_PROG_INSTALL
AC_PROG_LIBTOOL
AM_PROG_LEX
@


1.79
log
@eehhhhhhhhhh
@
text
@d3 1
a3 1
dnl $Id: configure.ac,v 1.78 2004/06/14 18:39:23 erikg Exp $
d456 2
a457 2
ITCL_LIBS='${top_builddir}/src/other/incrTcl/itcl/libitcl.la'
ITK_LIBS='${top_builddir}/src/other/incrTcl/itk/libitk.la'
d623 1
a623 1
CPPFLAGS="$CPPFLAGS -I\$(top_srcdir)/h"
@


1.78
log
@use m4 block quote instead of ugly \\ stuff\
remove duplicate strdup\
add test for strcpy
@
text
@d3 1
a3 1
dnl $Id: configure.ac,v 1.77 2004/06/14 18:18:19 erikg Exp $
d680 17
a696 17
AC_CHECK_FUNCS([
	access
	bzero
	dlopen
	drand
	fabs 
	gethostname
	getopt
	sbrk
	strcasecmp
	strchr
	strcpy
	strdup
	vfork
	vprintf
	writev
])
@


1.77
log
@look for math.h, and more specifically, the fabs function
@
text
@d3 1
a3 1
dnl $Id: configure.ac,v 1.76 2004/06/10 16:59:56 morrison Exp $
d680 17
a696 17
AC_CHECK_FUNCS( \
	access \
	bzero \
	dlopen \
	drand \
	fabs \ 
	gethostname \
	getopt \
	sbrk \
	strcasecmp \
	strchr \
	strdup \
	strdup\
	vfork \
	vprintf \
	writev \
)
@


1.76
log
@rename libitcl to incrTcl and add it to the config_subdirs
@
text
@d3 1
a3 1
dnl $Id$
d493 1
d685 1
@


1.75
log
@added -lz for local building too
@
text
@d3 1
a3 1
dnl $Id: configure.ac,v 1.74 2004/06/08 22:59:52 morrison Exp $
d456 2
a457 2
ITCL_LIBS='${top_builddir}/src/other/libitcl/itcl/libitcl.la'
ITK_LIBS='${top_builddir}/src/other/libitcl/itk/libitk.la'
d942 1
a1031 9
	src/other/libitcl/Makefile
	src/other/libitcl/itcl/Makefile
	src/other/libitcl/itcl/doc/Makefile
	src/other/libitcl/itcl/generic/Makefile
	src/other/libitcl/itcl/library/Makefile
	src/other/libitcl/itk/Makefile
	src/other/libitcl/itk/doc/Makefile
	src/other/libitcl/itk/generic/Makefile
	src/other/libitcl/itk/library/Makefile
@


1.74
log
@wrong checking statement .. zlib not png
@
text
@d3 1
a3 1
dnl $Id$
d765 1
a765 1
	PNG_LIBS='${top_builddir}/src/other/libpng/libpng.la'
@


1.73
log
@add checks for errno.h, fcntl.h, sys/errno.h, and access()
@
text
@d824 1
a824 1
AC_MSG_CHECKING(for portable network graphics functionality)
@


1.72
log
@add checks for the posix threading header instead of some umbrella define
@
text
@d487 2
d498 1
d680 1
@


1.71
log
@s/other\/liborle/liborle/g
@
text
@d492 1
d504 1
a585 3

AC_DEFINE(HAS_POSIX_THREADS,1,[Posix Threading API])

@


1.70
log
@set PNG_LIBS if using system png...
@
text
@d3 1
a3 1
dnl $Id: configure.ac,v 1.69 2004/06/07 20:26:33 erikg Exp $
d911 1
a911 1
ORLE='${top_builddir}/src/other/liborle/liborle.la'
d1007 1
a1036 1
	src/other/liborle/Makefile
@


1.69
log
@make use of jove optional
@
text
@d3 1
a3 1
dnl $Id: configure.ac,v 1.68 2004/06/07 18:42:06 morrison Exp $
d755 2
@


1.68
log
@the cache file is busted on irix due to invalid shell syntax so leave it disabled.
@
text
@d3 1
a3 1
dnl $Id$
d273 11
d1115 1
@


1.67
log
@allow explicit enabling/disabling of png and zlib too now, still defaulting to automatic detection and preference of a system library.  add checks to make sure the library actually minimally works when linked against and run.  finally, sort the summary alphabetically.
@
text
@d366 1
d369 4
a372 2
      compiler="`echo $CC | awk '{print $1}'`"
      cache_file="config.cache.${compiler}.${host_os}"
@


1.66
log
@look for regcomp in the std c library, also make the regex check actually be a program that will run..
@
text
@d171 1
a171 1
		[Build and use BRL-CAD's regular expression library (default=auto)]),
d185 1
a185 1
		[Build and use BRL-CAD's Portable Network Graphics library (default=auto)]),
d199 1
a199 1
		[Build and use BRL-CAD's zlib compression library (default=auto)]),
d459 2
a460 11
have_zlib=no
build_zlib=no
AC_CHECK_LIB(z, deflate, have_zlib=yes)
if test "x$have_zlib" == "xyes" ; then
	build_zlib="no (use native)"
	Z="-lz"
else
	build_zlib=yes
	Z='${top_builddir}/src/other/libz/libz.la'
fi
AM_CONDITIONAL(BUILD_ZLIB, [test "$have_zlib" == no])
d463 2
a464 12
have_png=no
build_png=no
AC_CHECK_LIB(png, png_check_sig, have_png=yes,,'-lz')
if test "x$have_png" = "xno" ; then
	build_png="no (use native)"
	PNG_LIBS='-lpng ${Z}'
else
	build_png=yes
	PNG_LIBS='${top_builddir}/src/other/libpng/libpng.la ${Z}'
fi
AM_CONDITIONAL(BUILD_PNG, [test "$have_png" == no])
AC_SUBST(PNG_LIBS)
d710 47
a756 1
dnl See if regular expression support is available
d774 1
a774 1
build_brlcad_regex=no
d781 1
a781 1
			AC_MSG_NOTICE([Try adding --enable-build-regex])
d791 8
a798 1
AC_MSG_CHECKING(whether to build BRL-CAD's included regular expression library)
d800 44
a843 1
AC_MSG_RESULT($build_brlcad_regex)
d904 1
a904 1
RT='${top_builddir}/src/librt/librt.la ${BN} ${REGEX_LIB}'
d1094 2
d1098 3
a1100 5
echo Build Itcl/Itk .......................: yes
echo Build IWidgets .......................: yes
echo Build libregex .......................: ${build_regex}
echo Build libpng .........................: ${build_png}
echo Build libz ...........................: ${build_zlib}
@


1.65
log
@s/NEED/BUILD/ no particular reason other than we might "need" it, but still not build it.. silly english
@
text
@d450 4
a453 1
AC_CHECK_LIB(regex, regcomp, regex_link_works=yes)
d731 1
a731 1
AC_MSG_CHECKING(for regular expression support)
d733 1
a733 3
#ifdef HAVE_SYS_TYPES_H
#  include <sys/types.h>
#endif
d735 6
a740 1
int main() { regex_t re; regcomp(&re, 0, 0); regexec(&re, 0, 0, 0, 0); }
d767 1
@


1.64
log
@added libregex to Makefile generation
@
text
@d466 1
a466 1
AM_CONDITIONAL(NEED_ZLIB, [test "$have_zlib" == no])
d479 1
a479 1
AM_CONDITIONAL(NEED_PNG, [test "$have_png" == no])
@


1.63
log
@don't configure enigma
@
text
@d938 1
@


1.62
log
@this is not complete, but need to start stabilizing..  added enable args for explicitly controlling regex, png, and zlib.  renamed rts to rtserver to be consistent.  added chech for mipspro (unused).  added a bunch of initial regular expression tests (they need more work still probably)
@
text
@a836 1
	misc/enigma \
@


1.61
log
@need pix/Makefile
@
text
@d3 1
a3 1
dnl $Id: configure.ac,v 1.60 2004/06/03 14:58:23 erikg Exp $
d133 1
a133 1
		[Only build the components necessary for the benchmark suite]),
d146 3
a148 3
AC_ARG_ENABLE(only-rts,
	AC_HELP_STRING(--enable-only-rts,
		[Only build the components necessary for librtserver]),
d166 42
a328 2
AC_DEFINE(USE_REGCOMP,1,new regex stuff)

d337 12
d388 1
a388 1
AC_SEARCH_LIBS(getvideo, gl, AC_DEFINE(HAS_SGIGL,1, Irix GL is present.))
d396 1
a396 1
AC_SEARCH_LIBS(dlopen, [dl ldl], AC_DEFINE(HAVE_DLOPEN,1,dlopen is available))
d422 1
a422 1
    TCL_BUILD_CFLAGS="-DTCL_PACKAGE_PATH=\\\"$libdir/Resources/Scripts\\\" -DTCL_LIBRARY=\\\"$TCL_LIBRARY\\\""
d424 1
a424 1
    TCL_BUILD_CFLAGS="-DTCL_PACKAGE_PATH=\\\"$libdir\\\" -DTCL_LIBRARY=\\\"$TCL_LIBRARY\\\""
d448 8
d459 1
a459 2
if test "$have_zlib" == yes
then
d468 1
d472 1
a472 2
if test "$have_png"
then
d515 5
a615 20
dnl XXX re_comp is old ..
AC_CHECK_DECL(re_comp, AC_DEFINE(HAVE_REGEX_DECL,, BSD regular expressions))

dnl See if regular expression support is available
have_regex=no
AC_MSG_CHECKING(for regular expression support)
AC_TRY_RUN([
#ifdef HAVE_SYS_TYPES_H
#  include <sys/types.h>
#endif
#include <regex.h>
int main() { regex_t re; regcomp(&re, 0, 0); regexec(&re, 0, 0, 0, 0); }
        ],
	[
		AC_MSG_RESULT(yes)
		have_regex=yes
	],
	[	AC_MSG_RESULT(no)]
)

a684 1
	regex \
a708 3
dnl AC_CHECK_FUNCS(re_comp, REGEX_LIB="", [AC_CHECK_LIB(compat, re_comp, REGEX_LIB="-lcompat",)])
AC_SUBST(REGEX_LIB)

d726 35
a766 1
dnl POSIX_REGEXEC
a777 1
dnl REGEX_DECL
a786 1
dnl REGEX
d1014 1
a1014 1
echo Build libregex .......................: yes
d1037 1
@


1.60
log
@doc/legal/Makefile needs to be generated
@
text
@d3 1
a3 1
dnl $Id: configure.ac,v 1.59 2004/05/27 20:25:41 erikg Exp $
d804 1
@


1.59
log
@only attempt libtkGLX on irix... serious breakage elsewhere?
@
text
@d3 1
a3 1
dnl $Id: configure.ac,v 1.58 2004/05/27 20:01:13 erikg Exp $
d791 1
@


1.58
log
@tcl/tk now builds in unix dir instead of build\
need db/include/Makefile ...
@
text
@d3 1
a3 1
dnl $Id: configure.ac,v 1.57 2004/05/27 18:59:39 erikg Exp $
d240 3
d245 1
@


1.57
log
@try to use existing libpng
@
text
@d3 1
a3 1
dnl $Id: configure.ac,v 1.56 2004/05/27 18:52:45 erikg Exp $
d356 1
a356 1
		TCL_LIBS='-L${top_builddir}/src/other/libtcl/build -ltcl${TCLVER} ${DL} ${SOCKET} -lm'
d360 1
a360 1
		TCL_LIBS='-L${top_builddir}/src/other/libtcl/build -ltcl${TCLVER} -Wl,-rpath,${libdir} -rdynamic ${DL} ${SOCKET} -lm'
d378 1
a378 1
TK_LIBS='-L${top_builddir}/src/other/libtk/build -ltk${TKVER} ${TCL_LIBS} ${X_LIBS}'
d770 1
@


1.56
log
@try to use existing zlib
@
text
@d3 1
a3 1
dnl $Id: configure.ac,v 1.55 2004/05/26 19:56:17 morrison Exp $
d405 12
a416 1
PNG_LIBS='${top_builddir}/src/other/libpng/libpng.la ${Z}'
d936 1
a936 1
echo Build libpng .........................: yes
@


1.55
log
@more testing of license header
@
text
@d3 1
a3 1
dnl $Id$
d392 14
a405 1
PNG_LIBS='${top_builddir}/src/other/libpng/libpng.la ${top_builddir}/src/other/libz/libz.la'
d926 1
a926 1
echo Build libz ...........................: yes
@


1.54
log
@add a license header and reformat to 70-chars
@
text
@a0 1
dnl $Id$
d3 1
@


1.53
log
@it's a template not a script
@
text
@d1 21
a21 10
dnl ****************************
dnl *** BRL-CAD configure.ac ***
dnl ****************************
dnl $Id: $
dnl
dnl Herein lies the venerable GNU Autotools configure template for BRL-CAD.
dnl As best is reasonably possible, proper ordering and separation of tests
dnl and settings should be maintained per the recommended standard layout.
dnl The tests should be added to the rather clearly labeled sections below so
dnl that they are as follows:
d34 9
a42 8
dnl Any useful build arguments should be added to the output summary at the
dnl end.  Although it may be possible to check for certain features of command
dnl line arguments near the top, related tests should be delayed and placed
dnl into the appropriate test section.
dnl
dnl Features of the GNU Autotools that would require an increase in the minimum
dnl version requirement are highly discouraged.  Likewise discouraged is
dnl rolling back support for versions released prior to autoconf 2.50.
@


1.52
log
@AC_CONFIG_SUBDIRS on the 3rd party configured stuff instead of managing our own Makefile.am stuff on them
@
text
@d4 1
a4 1
dnl $Id$
d6 1
a6 1
dnl Herein lies the venerable GNU Autotools configure script for BRL-CAD.
@


1.51
log
@ws
@
text
@d724 5
a728 3
AC_CONFIG_SUBDIRS([misc/enigma])
#	src/other/libtcl8.4/unix
#	src/other/libtk8.4/unix
@


1.50
log
@automatically enable a host and compiler specific cache file since we need to run configure many times for the various sub-projects
@
text
@d305 1
@


1.49
log
@configure engima as a separate source package
@
text
@d297 7
@


1.48
log
@missing src/other/Makefile output
@
text
@d56 1
d279 1
a283 1
AM_PROG_CC_STDC
d715 5
a741 1
	misc/enigma/Makefile
d851 1
a851 4
#AC_CONFIG_SUBDIRS([
#	src/other/libtcl8.4/unix
#	src/other/libtk8.4/unix
#])
@


1.47
log
@add dm_old
@
text
@d790 1
@


1.46
log
@add makefile generation in macosx/Resources dir
@
text
@d786 1
@


1.45
log
@bool.c is now in src/librt/bool.c
@
text
@d738 3
@


1.44
log
@reworked and cleaned up for the new source layout
@
text
@d35 1
a35 1
AC_INIT(librt/bool.c)
@


1.43
log
@update configure to new location of reorganized sources
@
text
@d4 1
a4 1
dnl $Id: configure.ac,v 1.42 2004/05/17 21:58:15 morrison Exp $
d52 1
a52 1
AM_CONFIG_HEADER(h/config.h)
d716 3
a746 1
	src/bench/Makefile
d750 1
a752 2
	src/db/Makefile
	src/doc/Makefile
a759 5
	src/iwidgets/Makefile
	src/iwidgets/doc/Makefile
	src/iwidgets/generic/Makefile
	src/iwidgets/iwidgets.tcl
	src/iwidgets/pkgIndex.tcl
d761 5
d773 1
a773 9
	src/libitcl/Makefile
	src/libitcl/itcl/Makefile
	src/libitcl/itcl/doc/Makefile
	src/libitcl/itcl/generic/Makefile
	src/libitcl/itcl/library/Makefile
	src/libitcl/itk/Makefile
	src/libitcl/itk/doc/Makefile
	src/libitcl/itk/generic/Makefile
	src/libitcl/itk/library/Makefile
a774 1
	src/liborle/Makefile
a775 1
	src/libpng/Makefile
a780 1
	src/libutahrle/Makefile
d787 17
d806 2
d810 1
d813 1
@


1.42
log
@typo and reposition regex check
@
text
@d4 1
a4 1
dnl $Id: configure.ac,v 1.41 2004/05/17 21:48:54 morrison Exp $
d335 1
a335 1
		TCL_LIBS='-L${top_builddir}/libtcl${TCLVER}/build -ltcl${TCLVER} ${DL} ${SOCKET} -lm'
d339 1
a339 1
		TCL_LIBS='-L${top_builddir}/libtcl${TCLVER}/build -ltcl${TCLVER} -Wl,-rpath,${libdir} -rdynamic ${DL} ${SOCKET} -lm'
d357 1
a357 1
TK_LIBS='-L${top_builddir}/libtk${TKVER}/build -ltk${TKVER} ${TCL_LIBS} ${X_LIBS}'
d365 2
a366 2
ITCL_LIBS='${top_builddir}/libitcl/itcl/libitcl.la'
ITK_LIBS='${top_builddir}/libitcl/itk/libitk.la'
d371 1
a371 1
PNG_LIBS='${top_builddir}/libpng/libpng.la ${top_builddir}/libz/libz.la'
d668 1
a668 1
BN='${top_builddir}/libbn/libbn.la ${BU}'
d671 1
a671 1
BU='${top_builddir}/libbu/libbu.la ${TCL_LIBS} ${PTHREAD_LIBS}'
d674 1
a674 1
CURSOR='${top_builddir}/libcursor/libcursor.la ${CURSES}'
d678 1
a678 1
DM='${top_builddir}/libdm/libdm.la ${TK_LIBS} ${RT}'
d681 1
a681 1
FB='${top_builddir}/libfb/libfb.la ${X_LIBS} ${PKG} ${BU} ${GL_LIBS}'
d684 1
a684 1
FFT='${top_builddir}/libfft/libfft.la -lm'
d687 1
a687 1
OPTICAL='${top_builddir}/liboptical/liboptical.la'
d690 1
a690 1
ORLE='${top_builddir}/liborle/liborle.la'
d693 1
a693 1
PKG='${top_builddir}/libpkg/libpkg.la'
d696 1
a696 1
RLE='${top_builddir}/libutahrle/libutahrle.la -lm'
d699 1
a699 1
RT='${top_builddir}/librt/librt.la ${BN} ${REGEX_LIB}'
d702 1
a702 1
SYSV='${top_builddir}/libsysv/libsysv.la'
d705 1
a705 1
TCLCAD='${top_builddir}/libtclcad/libtclcad.la'
d708 1
a708 1
TERMIO='${top_builddir}/libtermio/libtermio.la'
d711 1
a711 1
WDB='${top_builddir}/libwdb/libwdb.la'
d716 25
a740 83
	anim/Makefile
	awf/Makefile
	bench/Makefile
	brlman/Makefile
	burst/Makefile
	bwish/Makefile
	comgeom-g/Makefile
	conv/Makefile
	db/Makefile
	doc/Makefile
	fb/Makefile
	fbed/Makefile
	fbserv/Makefile
	gtools/Makefile
	h/Makefile
	halftone/Makefile
	html/Makefile
	html/ReleaseNotes/Makefile
	html/ReleaseNotes/Rel5.0/Makefile
	html/ReleaseNotes/Rel5.0/Summary/Makefile
	html/ReleaseNotes/Rel6.0/Makefile
	html/manuals/Anim_Tutorial/Makefile
	html/manuals/Makefile
	html/manuals/ReleaseNotes/Makefile
	html/manuals/cadwidgets/Makefile
	html/manuals/libbu/Makefile
	html/manuals/libdm/Makefile
	html/manuals/librt/Makefile
	html/manuals/mged/Makefile
	html/manuals/mged/animmate/Makefile
	html/manuals/shaders/Makefile
	iges/Makefile
	irprep/Makefile
	iwidgets4.0.1/Makefile
	iwidgets4.0.1/doc/Makefile
	iwidgets4.0.1/generic/Makefile
	iwidgets4.0.1/iwidgets.tcl
	iwidgets4.0.1/pkgIndex.tcl
	jack/Makefile
	lgt/Makefile
	libbn/Makefile
	libbu/Makefile
	libcursor/Makefile
	libdm/Makefile
	libfb/Makefile
	libfft/Makefile
	libitcl/Makefile
	libitcl/itcl/Makefile
	libitcl/itcl/doc/Makefile
	libitcl/itcl/generic/Makefile
	libitcl/itcl/library/Makefile
	libitcl/itk/Makefile
	libitcl/itk/doc/Makefile
	libitcl/itk/generic/Makefile
	libitcl/itk/library/Makefile
	liboptical/Makefile
	liborle/Makefile
	libpkg/Makefile
	libpng/Makefile
	librt/Makefile
	librtserver/Makefile
	libsysv/Makefile
	libtcl8.4/Makefile
	libtclcad/Makefile
	libtermio/Makefile
	libtk8.4/Makefile
	libutahrle/Makefile
	libwdb/Makefile
	libz/Makefile
	mged/Makefile
	mk/Makefile
	nirt/Makefile
	off/Makefile
	patch/Makefile
	pro-engineer/Makefile
	pro-engineer/resource/Makefile
	pro-engineer/sgi_mips4/Makefile
	pro-engineer/sgi_mips4/mk
	pro-engineer/text/Makefile
	remrt/Makefile
	rt/Makefile
	sample_applications/Makefile
	sample_applications/mk
d742 86
a827 24
	sig/Makefile
	tab/Makefile
	tclscripts/Makefile
	tclscripts/geometree/Makefile
	tclscripts/lib/Makefile
	tclscripts/mged/Makefile
	tclscripts/nirt/Makefile
	tclscripts/pl-dm/Makefile
	tclscripts/rtwizard/Makefile
	tclscripts/rtwizard/examples/Makefile
	tclscripts/rtwizard/examples/PictureTypeA/Makefile
	tclscripts/rtwizard/examples/PictureTypeB/Makefile
	tclscripts/rtwizard/examples/PictureTypeC/Makefile
	tclscripts/rtwizard/examples/PictureTypeD/Makefile
	tclscripts/rtwizard/examples/PictureTypeE/Makefile
	tclscripts/rtwizard/examples/PictureTypeF/Makefile
	tclscripts/rtwizard/lib/Makefile
	tclscripts/util/Makefile
	tools/Makefile
	unigraphics/Makefile
	util/Makefile
	vas4/Makefile
	vdeck/Makefile
	vfont/Makefile
d831 2
a832 2
#	libtcl8.4/unix
#	libtk8.4/unix
@


1.41
log
@also add /usr/local to the default search path -- probably need a means to only add the dir if it is needed for a required feature (also to prevent compiler from blathering a warning)
@
text
@d4 1
a4 1
dnl $Id: configure.ac,v 1.40 2004/05/17 19:57:47 morrison Exp $
d235 1
a235 1
AC_MSG_CHECK([for /usr/local])
d503 1
d506 17
a564 17

dnl See if regular expression support is available
have_regex=no
AC_MSG_CHECKING(for regular expression support)
AC_TRY_RUN([
#ifdef HAVE_SYS_TYPES_H
#  include <sys/types.h>
#endif
#include <regex.h>
int main() { regex_t re; regcomp(&re, 0, 0); regexec(&re, 0, 0, 0, 0); }
        ],
	[
		AC_MSG_RESULT(yes)
		have_regex=yes
	],
	[	AC_MSG_RESULT(no)]
)
@


1.40
log
@chop up the long line for sys_errlist decl check
@
text
@d4 1
a4 1
dnl $Id: configure.ac,v 1.39 2004/05/13 19:15:48 morrison Exp $
d230 16
d247 2
a248 2
AC_MSG_CHECKING([for fink])
if test -d /sw ; then
d251 3
a253 1
	LDFLAGS="$LDFLAGS -L/sw/lib"
d547 17
@


1.39
log
@if we find the jni.h header, go ahead and build anyways
@
text
@d4 1
a4 1
dnl $Id: configure.ac,v 1.38 2004/05/13 16:06:41 morrison Exp $
d480 5
a484 1
AC_CHECK_DECL(sys_errlist, AC_DEFINE(HAVE_SYS_ERRLIST_DECL,1,sys_errlist[]), AC_DEFINE(HAVE_SYS_ERRLIST_DECL,0,don't have sys_errlist[]),[# include <stdio.h>])
@


1.38
log
@damned x was missing
@
text
@d4 1
a4 1
dnl $Id: configure.ac,v 1.37 2004/05/13 15:24:37 morrison Exp $
d406 5
@


1.37
log
@std defines don't need to be expanded, and they might include automake stuff (and hence cannot be eval'd)
@
text
@d4 1
a4 1
dnl $Id: configure.ac,v 1.36 2004/05/13 15:19:33 morrison Exp $
d126 2
a127 1
AM_CONDITIONAL(ONLY_BENCHMARK, ! test "$only_benchmark" = "xno")
d144 1
a144 1
AM_CONDITIONAL(ONLY_RTS, ! test "$only_rts" = "xno")
d325 1
a325 1
if test "$FRAMEWORK_BUILD" = "1" ; then
d590 1
a590 1
AM_CONDITIONAL(JAVA, ! test "x$with_java" = "xno")
@


1.36
log
@-I options should be CPPFLAGS, not CFLAGS
@
text
@d4 1
a4 1
dnl $Id: configure.ac,v 1.35 2004/05/13 14:45:57 morrison Exp $
a796 5
CC=`eval "echo $CC"`
CFLAGS=`eval "echo $CFLAGS"`
CPPFLAGS=`eval "echo $CPPFLAGS"`
LDFLAGS=`eval "echo $LDFLAGS"`
LIBS=`eval "echo $LIBS"`
@


1.35
log
@s/debug mode compilation/debug symbols/
@
text
@d4 1
a4 1
dnl $Id: configure.ac,v 1.34 2004/05/13 14:36:49 morrison Exp $
a232 1
	CFLAGS="$CFLAGS -I/sw/include"
a408 1
	pre_cflags="$CFLAGS"
a413 1
				CFLAGS="-I$macjvmdir/$dir/Headers $CFLAGS"
a435 1
		CFLAGS="$pre_cflags"
d482 3
a484 2
# XXX these flags are presently GCC-specific
CFLAGS="$CFLAGS -I$(top_srcdir)/h -fno-strict-aliasing"
@


1.34
log
@add optimized arg setting to build summary
@
text
@d4 1
a4 1
dnl $Id: configure.ac,v 1.33 2004/05/13 12:17:14 morrison Exp $
d193 1
a193 1
		[enable debug mode compilation (default=no)]),
@


1.33
log
@slippy var missed .. stomp it
@
text
@d4 1
a4 1
dnl $Id: configure.ac,v 1.32 2004/05/13 04:46:28 morrison Exp $
d838 1
a838 1
echo Print verbose compilation warnings ...: $use_warnings
d843 1
@


1.32
log
@debug is not optimizing and even less when renaemd to optimized.
@
text
@d4 1
a4 1
dnl $Id: configure.ac,v 1.31 2004/05/13 03:39:20 morrison Exp $
d585 1
a585 1
if ! test "x$enable_only_rts" = "xno" ; then
@


1.31
log
@implement the guts to --enable-debug, --enable-profiling --enable-warnings, and add --enable-optimizations; put ac_init back where it goes; consolidate the compiler checks; get rid of auto doxygen in favor of simple yes/no; add check for inline and volatile
@
text
@d4 1
a4 1
dnl $Id: configure.ac,v 1.30 2004/05/12 20:46:11 morrison Exp $
d164 1
a164 1
# optimizations
d166 3
a168 3
use_optimizations=no
AC_ARG_ENABLE(debug,
	AC_HELP_STRING(--enable-debug,
d170 2
a171 2
	[if ! test "x$enable_optimizations" = "xno" ; then
		use_optimizations=yes
d174 1
a174 1
AC_MSG_RESULT($use_optimizations)
d489 1
a489 1
if ! test "x$use_optimizations" = "xno" ; then
@


1.30
log
@Be more loud on errors and warnings; try a lot harder to find jni.h in the mac os x frameworks automatically
@
text
@d1 4
a4 4
dnl **************************
dnl ** BRL-CAD configure.ac **
dnl **************************
dnl $Id: configure.ac,v 1.29 2004/05/12 17:24:21 morrison Exp $
d35 3
a44 3
AC_INIT(librt/bool.c)
AC_PREREQ(2.50)

d94 123
a216 2
# XXX these flags are GCC-specific -- perhaps should set after the compiler check
CFLAGS="$CFLAGS "'-I$(top_srcdir)/h -fno-strict-aliasing'
d234 1
a239 16
JAVA_CFLAGS=
with_java=no
AC_ARG_WITH(jdk,
        [  --with-jdk=path         Specify location of Java Development Kit],[
        JAVA_CFLAGS="-I$withval/include -I$withval/include/`uname | tr [A-Z] [a-z]`"
        with_java=yes
        ])
case "$target" in
	*-*-darwin*)
		JAVA_CFLAGS="-framework JavaVM"
		JAVA_LDFLAGS="-shrext .jnilib -framework JavaVM"
		with_java=yes
		;;
esac
AC_SUBST(JAVA_CFLAGS)
AC_SUBST(JAVA_LDFLAGS)
a251 6
AC_C_BIGENDIAN(AC_DEFINE(NATURAL_IEEE,,64b floating point storage technique), 
	       AC_DEFINE(REVERSED_IEEE,,64b floating point storage technique),
	       AC_MSG_NOTICE([>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>])
	       AC_MSG_ERROR([*** Don't know the endian of this machine! ***]) )

AC_DEFINE(USE_PROTOTYPES,1,heh)
a253 50
# debugging
AC_ARG_ENABLE(debug, AC_HELP_STRING(--enable-debug,
		     [enable debug mode compilation [default=no]]))

# profile
AC_ARG_ENABLE(profile, AC_HELP_STRING(--enable-profile,
		       [enable profiling [default=no]]))

# warnings
AC_ARG_ENABLE(warnings, AC_HELP_STRING(--enable-warnings,
			[enable verbose compilation warnings [default=automatic]]))

# doxygen
AC_ARG_ENABLE(doxygen, AC_HELP_STRING(--enable-doxygen,
		       [enable documentation generation with doxygen [default=automatic]]))

# only build benchmark
only_benchmark="no"
AC_ARG_ENABLE(only-benchmark, AC_HELP_STRING(--enable-only-benchmark,
		  [Only build the components necessary for benchmark]) ,
	[
		if ! test "x$enableval" = "xno" ; then
			only_benchmark="yes"
		fi
	]
)
AC_MSG_CHECKING(whether to only build benchmark)
AC_MSG_RESULT($only_benchmark)
AM_CONDITIONAL(ONLY_BENCHMARK, test "x$only_benchmark" = "xyes")

# only build librtserver
only_rts="no"
AC_ARG_ENABLE(only-rts, AC_HELP_STRING(--enable-only-rts,
		  [Only build the components necessary for librtserver]) ,
	[
		if ! test "x$enableval" = "xno" ; then
			only_rts="yes"
			if test "x$only_benchmark" = "xyes" ; then
				AC_MSG_NOTICE([>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>])
				AC_MSG_WARN(Requesting BOTH benchmark and librtserver "only"?)
				AC_MSG_WARN(Building both benchmark and librtserver)
				AC_MSG_NOTICE([<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<])
			fi
		fi
	]
)
AC_MSG_CHECKING(whether to only build librtserver)
AC_MSG_RESULT($only_rts)
AM_CONDITIONAL(ONLY_RTS, test "x$only_rts" = "xyes")

d264 1
a264 4

AM_C_PROTOTYPES

AC_DEFINE(HAS_POSIX_THREADS,1,[Posix Threading API])
d268 1
a268 1
if ! test "x$enable_doxygen" = "xno" ; then
d271 2
a272 5
		if test "x$enable_doxygen" = "xyes" ; then
			AC_MSG_NOTICE([>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>])
			AC_MSG_ERROR([*** Unable to find doxygen ***])
		fi
		enable_doxygen=no
d276 1
a276 14
AC_MSG_RESULT($enable_doxygen)

AC_MSG_CHECKING(compiler and flags for sanity)
AC_TRY_RUN([
#include <stdio.h>
int main(){exit(0);}
	],
	[	AC_MSG_RESULT(yes) ],
	[
		AC_MSG_RESULT(no)
		AC_MSG_NOTICE([>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>])
		AC_MSG_ERROR([*** compiler cannot create working executables, check config.log ***])
	]
)
d396 3
a398 2
if ! test "x$found_jni_h" = "xyes" ; then
	if test "x$with_java" = "xyes" ; then
d400 21
d422 7
a428 12
		# darwin systems may have a prior jni.h stashed away elsewhere
		pre_cflags="$CFLAGS"
		pre_cppflags="$CPPFLAGS"
		macjvmdir=/System/Library/Frameworks/JavaVM.framework/Versions
		if test -d "$macjvmdir"  ; then
			for dir in `ls $macjvmdir` ; do
				if test -d "$macjvmdir/$dir" ; then
					CFLAGS="-I$macjvmdir/$dir/Headers $CFLAGS"
					CPPFLAGS="-I$macjvmdir/$dir/Headers $CPPFLAGS"
				fi
			done
		fi
d430 14
a443 23
		# try one last time to find jni.h
		unset ac_cv_header_jni_h
		AC_CHECK_HEADER(jni.h,
				AC_DEFINE(HAVE_JNI_H,
					  1,
					  [Define to 1 if you have the `<jni.h>' header file])
				found_jni_h=yes )

		if test "x$found_jni_h" = "xyes" ; then
			with_java=yes
			AC_MSG_NOTICE([>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>])
			AC_MSG_WARN([jni.h was found by hunting through the JavaVM framework])
			AC_MSG_WARN([This means you probably need to install the latest Java SDK])
			AC_MSG_WARN([Build will try to use what it found, but you should update])
			AC_MSG_NOTICE([See http://developer.apple.com/java/ for updates])
			AC_MSG_NOTICE([<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<])
		else
			CFLAGS="$pre_cflags"
			CPPFLAGS="$pre_cppflags"
			AC_MSG_NOTICE([>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>])
			AC_MSG_WARN([Code dependant upon java and jni.h will not be built])
			AC_MSG_NOTICE([<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<])
		fi
a451 1
AC_C_CONST
d454 3
d486 50
a535 1
# nothing to do compiler-wise yet
d582 5
a586 2
if test "x$only_rts" = "xyes" ; then
	if ! test "x$with_java" = "xyes" ; then
d592 1
a592 1
AM_CONDITIONAL(JAVA, test "x$with_java" = "xyes")
d800 5
d838 3
a842 3
echo Build debug release ..................: $enable_debug
echo Build profile release ................: $enable_profile
echo Print verbose compilation warnings ...: $enable_warnings
d846 1
a846 1
echo Generate doxygen documentation .......: $enable_doxygen
d849 1
a849 1
echo "$0 complete, type \'make\' to begin building"
@


1.29
log
@add comments on the file structure standard layout; improve the java checks and blather/haltif we do not find what we need; add --enable-debug, --enable-profile, and --enable-warnings albeit without functionality yet
@
text
@d4 1
a4 1
dnl $Id: configure.ac,v 1.28 2004/05/12 04:10:20 morrison Exp $
a34 3
AC_INIT(librt/bool.c)
AC_PREREQ(2.50)

d42 3
d146 4
a149 1
AC_C_BIGENDIAN(AC_DEFINE(NATURAL_IEEE,,64b floating point storage technique), AC_DEFINE(REVERSED_IEEE,,64b floating point storage technique), AC_ERROR("Don't know the endian of this machine!"))
d192 1
d195 1
d225 2
a226 1
			AC_MSG_ERROR([cound not find doxygen])
d242 1
d256 3
a258 1
AC_SEARCH_LIBS(initscr, ncurses curses,, AC_MSG_ERROR([Need curses!]))
d367 38
a404 1
		AC_MSG_WARN([Code dependant upon java and jni.h will not be built])
a405 1
	with_java=no
d477 5
a481 1
AC_CHECK_FUNCS(socket, SOCKET="" ,[AC_CHECK_LIB(socket, socket, SOCKET="-lsocket", AC_MSG_ERROR([No internet socket found]))])
d494 1
d496 1
a496 1
		AC_MSG_ERROR([Cannot locate jni.h for building librtserver])
d751 1
a751 1
echo $0 complete, type \'make\' to begin building
@


1.28
log
@add comments on file organization for public consumption; clean up --enable messages; add --enable-only-benchmark for minimal benchmark builds
@
text
@d4 1
a4 1
dnl $Id: configure.ac,v 1.27 2004/05/11 19:13:04 morrison Exp $
d8 3
a10 2
dnl and settings should be maintained.  The tests should be added to the 
dnl rather clearly labeled sections below so that they are as follows:
d12 1
d17 5
a21 3
dnl	 5) check types
dnl	 6) check functions
dnl	 7) output a summary
d119 1
a119 1
have_java=no
d123 1
a123 1
        have_java=yes
d129 1
a129 1
		have_java=yes
a131 1
AM_CONDITIONAL(JAVA, test x$have_java = xyes)
a133 1
AC_SUBST(JAVARTSERVER)
d151 12
d165 1
a165 1
		       [enable documentation generation with doxygen \[default=automatic\]]))
a322 1
	JavaVM/jni.h \
a324 1
	jni.h \
d349 14
d364 3
a366 3
dnl ***********************
dnl *** Check for types ***
dnl ***********************
d396 7
d439 13
a527 1

d638 1
a638 1
	brlcad.spec
d640 4
d685 1
a685 1
echo Java Developer Kit support ...........: $have_java
d692 3
a694 3
echo Build debug release ..................: no
echo Build profile release ................: no
echo Print verbose compilation warnings ...: no
@


1.27
log
@check for jni.h header; clean up the output summary; and add librtserver-only build option to summary.
@
text
@d4 26
a29 1
dnl $Id: configure.ac,v 1.26 2004/05/11 14:48:46 erikg Exp $
a89 12
onlyrts="no"
AC_ARG_ENABLE(only-rts, AC_HELP_STRING(--enable-only-rts,
		  [Only build enough stuff to for (and including) librtserver (for muves3)]) ,
	[
		if test "x$enableval" != "xno"
		then
			onlyrts="yes"
		fi
	]
)
AM_CONDITIONAL(ONLYRTS, test "x$onlyrts" = xyes)

d151 34
a184 2
		       [enable documentation generation with doxygen (auto)]))
 
d211 2
a212 1
AM_CONDITIONAL(DOC, test "x$enable_doxygen" = "xyes")
d647 2
a649 2
echo Only build benchmark .................: no
echo Only build librtserver ...............: $onlyrts
@


1.26
log
@list base dir as prefix, and add bindir
@
text
@d4 1
a4 1
dnl $Id: configure.ac,v 1.25 2004/05/11 14:40:23 erikg Exp $
d263 1
d266 1
d551 12
d571 4
a574 4
echo              Prefix: ${prefix}
echo            Binaries: ${bindir}
echo Configuration files: ${sysconfdir}
echo        Manual pages: ${mandir}
d576 5
a580 5
echo CC       = ${CC}
echo CFLAGS   = ${CFLAGS}
echo CPPFLAGS = ${CPPFLAGS}
echo LDFLAGS  = ${LDFLAGS}
echo LIBS     = ${LIBS}
d602 2
a603 1
echo Run benchmark ........................: no
@


1.25
log
@space was breaking m4 macro...
@
text
@d4 1
a4 1
dnl $Id: configure.ac,v 1.24 2004/05/11 14:27:29 erikg Exp $
d557 2
a558 1
echo            Binaries: ${prefix}
@


1.24
log
@eliminate blabber
@
text
@d4 1
a4 1
dnl $Id: configure.ac,v 1.23 2004/05/11 14:12:58 erikg Exp $
d25 1
a25 1
AC_PREFIX_DEFAULT (/usr/brlcad)
@


1.23
log
@use framework for mac java stuff
@
text
@d4 1
a4 1
dnl $Id: configure.ac,v 1.22 2004/05/10 17:47:47 erikg Exp $
a74 1
echo "onlyrts: $onlyrts"
@


1.22
log
@default to /usr/brlcad instead of /usr/local
@
text
@d4 1
a4 1
dnl $Id: configure.ac,v 1.21 2004/05/10 13:43:26 erikg Exp $
d111 2
a112 2
		JAVA_CFLAGS=""
		JAVA_LDFLAGS="-shrext .jnilib"
@


1.21
log
@make the java shlib extention "jnilib" on darwin/macosX
@
text
@d4 1
a4 1
dnl $Id: configure.ac,v 1.20 2004/05/07 19:32:26 erikg Exp $
d25 1
@


1.20
log
@an --enable-only-rts argument that limits the build to muves3 required
stuff (namely librtserver and everything it depends on...)
@
text
@d4 1
a4 1
dnl $Id: configure.ac,v 1.19 2004/05/07 19:24:01 morrison Exp $
a83 1
		AC_SUBST(PTHREAD_LIBS)
a86 1
		AC_SUBST(PTHREAD_LIBS)
d89 1
d108 7
d117 1
@


1.19
log
@when building on nfs volumes, you can't sudo install files due to /usr/bin/install's behavior/need to read/write from the build location.  umask setting ensures files and dirs generated (Makefiles, config.h, etc) will be installable from an nfs volume without requiring the user to change their settings.
@
text
@d4 1
a4 1
dnl $Id: configure.ac,v 1.18 2004/04/20 13:50:43 morrison Exp $
d63 13
@


1.18
log
@hrm.. have not with
@
text
@d4 1
a4 1
dnl $Id$
d15 3
@


1.17
log
@unbreak the bogus GCC requirement
@
text
@d552 1
a552 1
echo Java Developer Kit support ...........: $with_jdk
@


1.16
log
@add options for the primary build flags via configure as well as via environment (mostly convenience), also make sure the compiler can compile.
@
text
@d61 2
a62 3
if test "$GCC" = "yes" || test "$GCC" = "egcs" ; then
	CFLAGS="$CFLAGS "'-I$(top_srcdir)/h -fno-strict-aliasing'
fi
@


1.15
log
@add check for fink to automatically add to the search and link path.  also, add an initial configuration report summary.
@
text
@d1 1
a1 1
 dnl **************************
d7 1
a7 1
AC_PREREQ(2.14)
d16 3
a18 1
AC_CANONICAL_TARGET([])
d27 37
a63 2
# XXX gcc-specific option
CFLAGS="$CFLAGS "'-I$(top_srcdir)/h -fno-strict-aliasing'
d146 12
d535 9
a543 2
echo CFLAGS  = $CFLAGS
echo LDFLAGS = $LDFLAGS
d553 3
a555 4
echo With Java Developer Kit support ......: $with_jdk
echo With X11 support .....................: yes
echo With Open GL support .................: yes
echo 
@


1.14
log
@put variable substitutions closer to the variable that was set
@
text
@d1 1
a1 1
dnl **************************
d25 1
d28 1
d40 10
d223 3
d255 18
d274 3
a277 1
AC_CHECK_FUNC(popen, AC_DEFINE(HAVE_POPEN_DECL,1,popen))
a279 2
AC_CHECK_FUNCS(drand gethostname vprintf sbrk vfork dlopen bzero strdup strcasecmp strchr getopt writev regex strdup)

d483 32
a514 2
dnl XXX - should report significant summary configuration details (what options
dnl and args are enabled, disabled, build settings, etc).
@


1.13
log
@added major.minor.patch version settings and build-stamping. made a clear separation in the different configuration sections to help maintain some organization.
@
text
@d1 3
d30 1
d34 1
d46 2
d54 2
d58 1
d65 4
d86 11
d112 1
d119 1
d125 3
d148 5
d158 3
d166 3
d171 1
d201 1
a201 1
	xosdefs.h
d244 1
d246 1
d248 2
d251 1
d285 2
d288 2
a290 15
DM='${top_builddir}/libdm/libdm.la ${TK_LIBS} ${RT}'
FB='${top_builddir}/libfb/libfb.la ${X_LIBS} ${PKG} ${BU} ${GL_LIBS}'
FFT='${top_builddir}/libfft/libfft.la -lm'
OPTICAL='${top_builddir}/liboptical/liboptical.la'
ORLE='${top_builddir}/liborle/liborle.la'
PKG='${top_builddir}/libpkg/libpkg.la'
RLE='${top_builddir}/libutahrle/libutahrle.la -lm'
RT='${top_builddir}/librt/librt.la ${BN} ${REGEX_LIB}'
SYSV='${top_builddir}/libsysv/libsysv.la'
TCLCAD='${top_builddir}/libtclcad/libtclcad.la'
TERMIO='${top_builddir}/libtermio/libtermio.la'
WDB='${top_builddir}/libwdb/libwdb.la'

AC_SUBST(BN)
AC_SUBST(BU)
d293 2
a294 1
AC_SUBST(DL)
d296 2
d299 2
d302 2
a303 8
AC_SUBST(GL_CFLAGS)
AC_SUBST(GL_LIBS)
AC_SUBST(ITCL_LIBS)
AC_SUBST(ITCL_VERSION)
AC_SUBST(ITK_LIBS)
AC_SUBST(JAVARTSERVER)
AC_SUBST(JAVA_CFLAGS)
AC_SUBST(LEX_CFLAGS)
d305 2
d308 2
d311 2
a312 3
AC_SUBST(PNG_LIBS)
AC_SUBST(PTHREAD_LIBS)
AC_SUBST(REGEX_LIB)
d314 2
d317 2
a318 2
AC_SUBST(SGIGL)
AC_SUBST(SOCKET)
d320 2
a321 1
AC_SUBST(TCL)
d323 2
a324 4
AC_SUBST(TCLVER)
AC_SUBST(TCL_BUILD_CFLAGS)
AC_SUBST(TCL_LIBRARY)
AC_SUBST(TCL_LIBS)
d326 2
a327 3
AC_SUBST(TKVER)
AC_SUBST(TK_LIBRARY)
AC_SUBST(TK_LIBS)
d329 1
a329 3
AC_SUBST(X_CFLAGS)
AC_SUBST(X_LIBS)
AC_SUBST(X_PREFIX)
@


1.12
log
@slightly better dlopen searching...
@
text
@d3 10
a12 1
AC_INIT
d14 1
a15 1
AM_INIT_AUTOMAKE(brlcad, 6.0)
a16 5
dnl progs
AC_PROG_CC
AC_PROG_INSTALL
AC_PROG_LIBTOOL
AM_PROG_LEX
d18 3
a20 1
AM_C_PROTOTYPES
d32 36
d72 5
a76 1
dnl libs
a87 1

d90 3
a92 3
AC_SEARCH_LIBS(mallopt,malloc)
AC_SEARCH_LIBS(matherr,mx)

d131 5
a135 1
dnl headers
d137 24
a160 1
AC_CHECK_HEADERS(float.h getopt.h limits.h limits.h memory.h stdarg.h stdlib.h string.h sys/ioctl_compat.h sys/machd.h sys/mman.h sys/select.h sys/socket.h sys/stat.h sys/time.h sys/types.h termcap.h termios.h time.h unistd.h varargs.h xosdefs.h)
a162 1
AC_CHECK_MEMBERS([struct stat.st_blksize],[AC_DEFINE(HAVE_ST_BLKSIZE, 1, [the old blksize define])])
a163 8
JAVA_CFLAGS=
have_java=no
AC_ARG_WITH(jdk,
        [  --with-jdk=path         Specify location of Java Development Kit],[
        JAVA_CFLAGS="-I$withval/include -I$withval/include/`uname | tr [A-Z] [a-z]`"
        have_java=yes
        ])
AM_CONDITIONAL(JAVA, test x$have_java = xyes)
d165 5
a170 1
dnl union wait testing from tcl8.4's configure.in, should be revamped?
d185 2
d188 1
a188 5
AC_DEFINE(DM_X,1,[Display for X])
AC_DEFINE(USE_MESA_GL,1,[Assume mesagl is always around (fixme)])
AC_DEFINE(DM_OGL,1,[yeah, GL])
GL_CFLAGS="-I/usr/X11R6/include"
GL_LIBS="-L/usr/X11R6/lib -lGL"
d190 2
a191 1
LEX_CFLAGS="-Dyylex=cmd_nop"
a192 2
dnl TODO
AC_DEFINE(HAVE_TM_ZONE,,string in time zone)
d194 3
a196 3
dnl typedefs
AC_CHECK_DECL(sys_errlist, AC_DEFINE(HAVE_SYS_ERRLIST_DECL,1,sys_errlist[]), AC_DEFINE(HAVE_SYS_ERRLIST_DECL,0,don't have sys_errlist[]),[# include <stdio.h>])
AC_CHECK_DECL(re_comp, AC_DEFINE(HAVE_REGEX_DECL,, BSD regular expressions))
a197 1
dnl functions
a205 2
AC_SEARCH_LIBS(dlopen, [dl ldl], AC_DEFINE(HAVE_DLOPEN,1,dlopen is available))
DL=""
d207 3
a209 1
AC_C_BIGENDIAN(AC_DEFINE(NATURAL_IEEE,,64b floating point storage technique), AC_DEFINE(REVERSED_IEEE,,64b floating point storage technique), AC_ERROR("Don't know the endian of this machine!"))
d211 1
a211 4
AC_DEFINE(USE_PROTOTYPES,1,heh)
AC_DEFINE(USE_REGCOMP,1,new regex stuff)

dnl === these are things that are defined, but don't seem to be necessary on the 4 supported platforms? ===
d408 8
@


1.11
log
@group X vars, use X_PREFIX in cflags and libs...
@
text
@a138 1
AC_CHECK_FUNCS(dlopen, DL="" ,[AC_CHECK_LIB(dl, dlopen, DL="-ldl", AC_CHECK_LIB(dld, dlopen, DL="-ldld", AC_MSG_ERROR([No dynamic loader found])))])
d142 3
@


1.10
log
@macosX fixes
@
text
@d1 1
a1 1
dnl $Id: configure.ac,v 1.9 2004/04/01 15:36:12 erikg Exp $
d51 2
a52 1
X_LIBS="-L/usr/X11R6/lib -lX11 -lXi"
a125 1
X_CFLAGS="-I/usr/X11R6/include"
@


1.9
log
@libfb needs gl now...
@
text
@d1 1
a1 1
dnl $Id$
d58 1
a58 1
		TCL_LIBS='-L${top_builddir}/libtcl${TCLVER}/build -ltcl${TCLVER} ${DL} ${SOCKET} -lm -dynamiclib -flat_namespace -undefined suppress -lc -install_name ${libdir}/libtcl${TCLVER}.dylib'
d147 1
@


1.8
log
@link gl libs
@
text
@d178 1
a178 1
FB='${top_builddir}/libfb/libfb.la ${X_LIBS} ${PKG} ${BU}'
@


1.7
log
@fixes for ogl (mandatory)option shtuff...
@
text
@d121 3
d198 2
@


1.6
log
@gl hack crud
@
text
@d119 2
a120 1
AC_DEFINE(USE_MESA_GL,1,[Assume mesagl is always around (fixme)]))
@


1.5
log
@use autoconf endian check instead of arch hack
@
text
@d119 1
a119 1
GL_CFLAGS="-DUSE_MESA_GL"
a193 1
AC_SUBST(GL_CFLAGS)
@


1.4
log
@build libtclcad
@
text
@d140 1
a140 10
dnl TODO this needs to be fixed to actually test...
case "$target" in
	i386-* | i686-* | alpha-*)
		AC_DEFINE(REVERSED_IEEE,,64b floating point storage technique)
		;;
	*)
		AC_DEFINE(NATURAL_IEEE,,64b floating point storage technique)
		;;
esac
		
@


1.3
log
@use native build system for tcl/tk
@
text
@d26 1
d56 9
a64 1
TCL_LIBS='-L${top_builddir}/libtcl${TCLVER}/build -ltcl${TCLVER} -Wl,-rpath,${libdir} -rdynamic ${DL} ${SOCKET} -lm'
d191 1
d207 1
a208 1
AC_SUBST(JAVARTSERVER)
d222 1
d301 1
@


1.2
log
@itcl version step
cleanup
@
text
@d1 1
a1 1
dnl $Id: configure.ac,v 1.1 2004/03/19 12:35:32 erikg Exp $
d49 1
a51 1

d55 1
a55 1
TCL_LIBS='${top_builddir}/${TCL}/${TCL}.la ${DL} ${SOCKET} -lm'
a63 1

d66 1
a66 1
TK_LIBS='${top_builddir}/libtk${TKVER}/libtk${TKVER}.la ${TCL_LIBS} ${X_LIBS}'
d171 1
a171 1
BU='${top_builddir}/libbu/libbu.la ${TCL_LIBS} ${PTHREAD_LIBS} -lm ${DL}'
d223 1
a289 13
	libtcl8.4/doc/Makefile
	libtcl8.4/generic/Makefile
	libtcl8.4/library/Makefile
	libtcl8.4/library/dde/Makefile
	libtcl8.4/library/encoding/Makefile
	libtcl8.4/library/http/Makefile
	libtcl8.4/library/http1.0/Makefile
	libtcl8.4/library/msgcat/Makefile
	libtcl8.4/library/opt/Makefile
	libtcl8.4/library/reg/Makefile
	libtcl8.4/library/tcltest/Makefile
	libtcl8.4/unix/Makefile
	libtcl8.4/unix/tclConfig.sh
a291 12
	libtk8.4/bitmaps/Makefile
	libtk8.4/doc/Makefile
	libtk8.4/generic/Makefile
	libtk8.4/library/Makefile
	libtk8.4/library/demos/Makefile
	libtk8.4/library/demos/images/Makefile
	libtk8.4/library/images/Makefile
	libtk8.4/library/msgs/Makefile
	libtk8.4/library/pkgIndex.tcl
	libtk8.4/unix/Makefile
	libtk8.4/unix/tkConfig.sh
	libtk8.4/xlib/Makefile
@


1.1
log
@moved configure.in to configure.ac (the "new" way...)
@
text
@d1 1
a1 1
dnl $Id$
d30 1
a32 1
SAVELIBS="${LIBS}"
a35 1
LIBS="${SAVELIBS}"
a36 1
SAVELIBS="${LIBS}"
d40 2
d51 2
d64 1
d70 2
a71 1
ITCL_VERSION="3.2"
d82 1
a82 9
AC_DIAGNOSE([obsolete],[AC_STRUCT_ST_BLKSIZE:
        your code should no longer depend upon `HAVE_ST_BLKSIZE', but
        `HAVE_STRUCT_STAT_ST_BLKSIZE'.  Remove this warning and
        the `AC_DEFINE' when you adjust the code.])
AC_CHECK_MEMBERS([struct stat.st_blksize],[AC_DEFINE(HAVE_ST_BLKSIZE, 1,
                            [Define to 1 if your `struct stat' has
                             `st_blksize'.  Deprecated, use
                             `HAVE_STRUCT_STAT_ST_BLKSIZE' instead.])])

d130 1
a130 1
AC_CHECK_FUNCS(re_comp, REGEX_LIB="", [AC_CHECK_LIB(compat, re_comp, REGEX_LIB="-lcompat",)])
@

