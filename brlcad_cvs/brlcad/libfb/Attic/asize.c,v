head	11.6;
access;
symbols
	ansi-20040405-merged:11.3.2.1
	postmerge-20040405-ansi:11.4
	premerge-20040404-ansi:11.3
	postmerge-autoconf:11.3
	autoconf-freeze:11.3
	premerge-autoconf:11.3
	ansi-20040316-freeze:11.3.2.1
	postmerge-20040315-windows:11.3
	premerge-20040315-windows:11.3
	windows-20040315-freeze:11.3
	autoconf-20031203:11.3
	autoconf-20031202:11.3
	autoconf-branch:11.3.0.10
	phong-branch:11.3.0.8
	photonmap-branch:11.3.0.6
	rel-6-1-DP:11.3
	windows-branch:11.3.0.4
	rel-6-0-2:11.1
	ansi-branch:11.3.0.2
	rel-6-0-1-branch:11.1.0.4
	hartley-6-0-post:11.2
	hartley-6-0-pre:11.1
	rel-6-0-1:11.1
	rel-6-0:11.1
	rel-5-4:11.1
	offsite-5-3-pre:11.1
	rel-5-3:11.1
	rel-5-2:11.1
	rel-5-1-branch:11.1.0.2
	rel-5-1:11.1
	rel-5-0:11.1
	rel-5-0-beta:11.1
	rel-4-5:11.1
	ctj-4-5-post:11.1
	ctj-4-5-pre:11.1
	rel-4-4:11.1
	rel-4-0:10.1;
locks; strict;
comment	@ * @;


11.6
date	2004.05.21.18.07.24;	author morrison;	state dead;
branches;
next	11.5;

11.5
date	2004.05.10.15.30.44;	author erikg;	state Exp;
branches;
next	11.4;

11.4
date	2004.04.05.07.44.42;	author morrison;	state Exp;
branches;
next	11.3;

11.3
date	2002.08.20.17.07.45;	author jra;	state Exp;
branches
	11.3.2.1;
next	11.2;

11.2
date	2002.08.15.20.54.59;	author hartley;	state Exp;
branches;
next	11.1;

11.1
date	95.01.04.09.52.26;	author mike;	state Rel4_4;
branches;
next	10.6;

10.6
date	94.10.13.20.33.19;	author mike;	state Exp;
branches;
next	10.5;

10.5
date	94.08.12.19.36.16;	author gdurf;	state Exp;
branches;
next	10.4;

10.4
date	93.03.06.04.33.24;	author mike;	state Exp;
branches;
next	10.3;

10.3
date	92.12.14.14.04.32;	author mike;	state Exp;
branches;
next	10.2;

10.2
date	92.11.16.22.24.51;	author mike;	state Exp;
branches;
next	10.1;

10.1
date	91.10.12.06.37.10;	author mike;	state Rel4_0;
branches;
next	1.5;

1.5
date	91.07.18.16.29.51;	author mike;	state Exp;
branches;
next	1.4;

1.4
date	91.01.11.03.26.34;	author butler;	state Exp;
branches;
next	1.3;

1.3
date	90.11.27.21.45.45;	author mike;	state Exp;
branches;
next	1.2;

1.2
date	90.11.04.09.42.14;	author mike;	state Exp;
branches;
next	1.1;

1.1
date	90.11.03.14.09.49;	author mike;	state Exp;
branches;
next	;

11.3.2.1
date	2002.09.19.18.01.18;	author morrison;	state Exp;
branches;
next	;


desc
@Subroutines to intuit image dimensions from file sizes
@


11.6
log
@moved to src/
@
text
@/*
 *			A S I Z E . C
 *
 * Image file AutoSizing code.
 *
 *  Author -
 *	Phil Dykstra
 *  
 *  Source -
 *	SECAD/VLD Computing Consortium, Bldg 394
 *	The U. S. Army Ballistic Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5066
 *  
 *  Distribution Status -
 *	Public Domain, Distribution Unlimitied.
 */

#ifndef lint
static char RCSid[] = "@@(#)$Header: /n/xoff/cvs/brlcad/libfb/asize.c,v 11.5 2004/05/10 15:30:44 erikg Exp $ (BRL)";
#endif

#ifdef HAVE_CONFIG_H
# include "config.h"
#endif



#include <stdio.h>
#include <math.h>
#include <sys/stat.h>
#ifdef USE_STRING_H
#include <string.h>
#else
#include <strings.h>
#endif

/* This table does not need to include any square sizes */
struct sizes {
	int	width;		/* image width in pixels */
	int	height;		/* image height in pixels */
};
struct sizes fb_common_sizes[] = {
	{  160,  120 },		/* quarter 640x480 */
	{  192,  128 },		/* Kodak Photo-CD, level 1, Base/16 */
	{  320,  200 },		/* PC screen format */
	{  320,  240 },		/* half 640x480 */
	{  384,  256 },		/* Kodak Photo-CD, level 2, Base/4 */
	{  640,  512 },		/* half 1280x1024 */
	{  640,  400 },		/* PC screen format */
	{  640,	 480 },		/* Common video format */
	{  640,	 485 },		/* Common video format, most correct */
	{  640,	 486 },		/* Common video format */
	{  720,	 485 },		/* Abekas video format, most correct */
	{  720,	 486 },		/* Abekas video format */
	{  768,  512 },		/* Kodak Photo-CD, level 3, Base */
	{ 1024,	 768 },		/* SGI-3D screen size */
	{ 1152,  900 },		/* Sun screen size */
	{ 1280,  960 },		/* twice 640x480 */
	{ 1280,	1024 },		/* SGI-4D screen size */
	{ 1440,  972 },		/* double Abekas video format */
	{ 1536, 1024 },		/* Kodak Photo-CD, level 4, 4*Base */
	{ 3072, 2048 },		/* Kodak Photo-CD, level 5, 16*Base */
	{ 3200, 4000 },		/* 8x10 inches, 400 dpi */
	{ 3400, 4400 },		/* 8.5x11 inches, 400 dpi */
	{ 4700, 3300 },		/* A4 size, 11.75x8.25 inches, 400 dpi */
	{    0,	   0 }
};

/*
 *			F B _ C O M M O N _ F I L E _ S I Z E
 *
 *  If the file name contains size information encoded in it,
 *  then that size is returned, even if it differs from the actual
 *  file dimensions.  (It might have been truncated).
 *  Otherwise, the actual file size is passed to fb_common_image_size()
 *  to see if this is a plausible image size.
 *
 *  Returns -
 *	0	size unknown
 *	1	width and height returned
 */
int
fb_common_file_size(int *widthp, int *heightp, char *filename, int pixel_size)
   	        		/* pointer to returned width */
   	         		/* pointer to returned height */
    	          		/* image file to stat */
   	           		/* bytes per pixel */
{
	struct	stat	sbuf;
	int	size;
	register char	*cp;

	*widthp = *heightp = 0;		/* sanity */

	if( filename == NULL || *filename == '\0' )
		return	0;

	/* Skip over directory names, if any */
	cp = strchr( filename, '/' );
	if( cp )
		cp++;			/* skip over slash */
	else
		cp = filename;		/* no slash */
	/* File name may have several minus signs in it.  Try repeatedly */
	while( *cp )  {
		cp = strchr( cp, '-' );		/* Find a minus sign */
		if( cp == NULL )  break;
		if( sscanf(cp, "-w%d-n%d", widthp, heightp ) == 2 )
			return 1;
		cp++;				/* skip over the minus */
	}

	if( stat( filename, &sbuf ) < 0 )
		return	0;

	size = sbuf.st_size / pixel_size;

	return fb_common_image_size( widthp, heightp, size );
}

/*
 *			F B _ C O M M O N _ I M A G E _ S I Z E
 *
 *  Given the number of pixels in an image file,
 *  if this is a "common" image size,
 *  return the width and height of the image.
 *
 *  Returns -
 *	0	size unknown
 *	1	width and height returned
 */
int
fb_common_image_size(int *widthp, int *heightp, register int npixels)
   	        		/* pointer to returned width */
   	         		/* pointer to returned height */
            	        	/* Number of pixels */
{
	register struct	sizes	*sp;
	int			root;

	if( npixels <= 0 )
		return	0;

	sp = fb_common_sizes;
	while( sp->width != 0 ) {
		if( npixels == sp->width * sp->height ) {
			*widthp = sp->width;
			*heightp = sp->height;
			return	1;
		}
		sp++;
	}

	/* If the size is a perfect square, then use that. */
	root = (int)(sqrt((double)npixels)+0.999);
	if( root*root == npixels )  {
		*widthp = root;
		*heightp = root;
		return	1;
	}

	/* Nope, we are clueless. */
	return	0;
}
@


11.5
log
@change conf.h to a wrapped config.h
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /cvs/brlcad/libfb/asize.c,v 11.4 2004/04/05 07:44:42 morrison Exp $ (BRL)";
@


11.4
log
@merge of ansi-6-0-branch into HEAD
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header$ (BRL)";
d22 5
a26 1
#include "conf.h"
@


11.3
log
@Restoration of entire source tree to Pre-Hartley state
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libfb/asize.c,v 11.1 1995/01/04 09:52:26 mike Rel4_4 $ (BRL)";
d79 5
a83 5
fb_common_file_size( widthp, heightp, filename, pixel_size )
int	*widthp;		/* pointer to returned width */
int	*heightp;		/* pointer to returned height */
char	*filename;		/* image file to stat */
int	pixel_size;		/* bytes per pixel */
d129 4
a132 4
fb_common_image_size( widthp, heightp, npixels )
int	*widthp;		/* pointer to returned width */
int	*heightp;		/* pointer to returned height */
register int	npixels;	/* Number of pixels */
@


11.3.2.1
log
@Initial ANSIfication
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libfb/asize.c,v 11.3 2002/08/20 17:07:45 jra Exp $ (BRL)";
d79 5
a83 5
fb_common_file_size(int *widthp, int *heightp, char *filename, int pixel_size)
   	        		/* pointer to returned width */
   	         		/* pointer to returned height */
    	          		/* image file to stat */
   	           		/* bytes per pixel */
d129 4
a132 4
fb_common_image_size(int *widthp, int *heightp, register int npixels)
   	        		/* pointer to returned width */
   	         		/* pointer to returned height */
            	        	/* Number of pixels */
@


11.2
log
@Converted from K&R to ANSI C - RFH
@
text
@d79 5
a83 5
fb_common_file_size(int *widthp, int *heightp, char *filename, int pixel_size)
   	        		/* pointer to returned width */
   	         		/* pointer to returned height */
    	          		/* image file to stat */
   	           		/* bytes per pixel */
d129 4
a132 4
fb_common_image_size(int *widthp, int *heightp, register int npixels)
   	        		/* pointer to returned width */
   	         		/* pointer to returned height */
            	        	/* Number of pixels */
@


11.1
log
@Release_4.4
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/libfb/RCS/asize.c,v 10.6 94/10/13 20:33:19 mike Exp $ (BRL)";
d79 5
a83 5
fb_common_file_size( widthp, heightp, filename, pixel_size )
int	*widthp;		/* pointer to returned width */
int	*heightp;		/* pointer to returned height */
char	*filename;		/* image file to stat */
int	pixel_size;		/* bytes per pixel */
d129 4
a132 4
fb_common_image_size( widthp, heightp, npixels )
int	*widthp;		/* pointer to returned width */
int	*heightp;		/* pointer to returned height */
register int	npixels;	/* Number of pixels */
@


10.6
log
@I added some code to fb_common_file_size() to "crack" the file name.
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/libfb/RCS/asize.c,v 10.5 94/08/12 19:36:16 gdurf Exp Locker: mike $ (BRL)";
@


10.5
log
@Added include of conf.h
@
text
@a5 3
 *  Currently #included by bw-fb, pix-fb, and others.
 *  Might want to go into a library (libfb?)
 *
d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/libfb/RCS/asize.c,v 10.4 1993/03/06 04:33:24 mike Exp gdurf $ (BRL)";
d27 5
d33 1
d61 1
d68 9
a76 1
 *  Returns non-zero if it finds a matching size
d87 1
d89 2
d93 16
@


10.4
log
@Added Kodak Photo-CD sizes
@
text
@d22 1
a22 1
static char RCSid[] = "@@(#)$Header: /m/cad/libfb/RCS/asize.c,v 10.3 92/12/14 14:04:32 mike Exp Locker: mike $ (BRL)";
d25 2
a28 1
#include <sys/types.h>
@


10.3
log
@Added checking for square sizes.
@
text
@d22 1
a22 1
static char RCSid[] = "@@(#)$Header: /m/cad/libfb/RCS/asize.c,v 10.2 92/11/16 22:24:51 mike Exp Locker: mike $ (BRL)";
a34 3
	{   50,	  50 },
	{   64,	  64 },
	{  128,	 128 },
d36 1
a36 1
	{  256,	 256 },
d39 1
a39 1
	{  512,	 512 },
d47 1
a49 1
	{ 1024,	1024 },
d53 2
a54 1
	{ 2048, 2048 },
a56 4
	{ 4096, 4096 },
	{ 8192, 8192 },
	{16386,16384 },
	{32768,32768 },
@


10.2
log
@Added several additional standard sizes
@
text
@d22 1
a22 1
static char RCSid[] = "@@(#)$Header: /m/cad/libfb/RCS/asize.c,v 10.1 91/10/12 06:37:10 mike Rel4_0 Locker: mike $ (BRL)";
d26 1
d109 1
d123 10
@


10.1
log
@Release_4.0
@
text
@d22 1
a22 1
static char RCSid[] = "@@(#)$Header: /m/cad/libfb/RCS/asize.c,v 1.5 91/07/18 16:29:51 mike Exp $ (BRL)";
d45 3
d56 2
d60 2
@


1.5
log
@lint
@
text
@d22 1
a22 1
static char RCSid[] = "@@(#)$Header: /m/cad/libfb/RCS/asize.c,v 1.4 91/01/11 03:26:34 butler Exp $ (BRL)";
@


1.4
log
@added 320x200 and 640x400 sizes
@
text
@d22 1
a22 1
static char RCSid[] = "@@(#)$Header: /m/cad/libfb/RCS/asize.c,v 1.3 90/11/27 21:45:45 mike Exp $ (BRL)";
d73 1
a73 1
	if( filename == NULL || *filename == NULL )
@


1.3
log
@Added double Abekas size.
@
text
@d22 1
a22 1
static char RCSid[] = "@@(#)$Header: /m/cad/libfb/RCS/asize.c,v 1.2 90/11/04 09:42:14 mike Exp $ (BRL)";
d39 1
d43 1
@


1.2
log
@Added one new entry, changed to let the computer do the multiplication.
@
text
@d22 1
a22 1
static char RCSid[] = "@@(#)$Header: /m/cad/libfb/RCS/asize.c,v 1.1 90/11/03 14:09:49 mike Exp $ (BRL)";
d49 1
@


1.1
log
@Initial revision
@
text
@d22 1
a22 1
static char RCSid[] = "@@(#)$Header$ (BRL)";
a31 1
	long	size;		/* total number of pixels */
d34 19
a52 18
	{   50,	  50,	    2500 },
	{   64,	  64,	    4096 },
	{  128,	 128,	   16384 },
	{  160,  120,	   19200 },	/* quarter 640x480 */
	{  256,	 256,	   65536 },
	{  320,  240,	   76800 },	/* half 640x480 */
	{  512,	 512,	  262144 },
	{  640,	 480,	  307200 },	/* Common video format */
	{  720,	 486,	  349920 },	/* Abekas video format */
	{ 1024,	 768,	  786432 },	/* SGI-3D screen size */
	{ 1152,  900,	 1036800 },	/* Sun screen size */
	{ 1024,	1024,	 1048576 },
	{ 1280,  960,	 1228800 },	/* twice 640x480 */
	{ 1280,	1024,	 1310720 },	/* SGI-4D screen size */
	{ 2048, 2048,	 4194304 },
	{ 4096, 4096,	16777216},
	{ 8192, 8192,	67108864},
	{    0,	   0,	0 }
d103 2
a104 2
	while( sp->size != 0 ) {
		if( sp->size == npixels ) {
@
