head	11.8;
access;
symbols
	ansi-20040405-merged:11.4.2.2
	postmerge-20040405-ansi:11.6
	premerge-20040404-ansi:11.5
	postmerge-autoconf:11.5
	autoconf-freeze:11.4.10.2
	premerge-autoconf:11.5
	ansi-20040316-freeze:11.4.2.1
	postmerge-20040315-windows:11.5
	premerge-20040315-windows:11.5
	windows-20040315-freeze:11.4.4.1
	autoconf-20031203:11.4
	autoconf-20031202:11.4
	autoconf-branch:11.4.0.10
	phong-branch:11.4.0.8
	photonmap-branch:11.4.0.6
	rel-6-1-DP:11.4
	windows-branch:11.4.0.4
	rel-6-0-2:11.2
	ansi-branch:11.4.0.2
	rel-6-0-1-branch:11.2.0.2
	hartley-6-0-post:11.3
	hartley-6-0-pre:11.2
	rel-6-0-1:11.2
	rel-6-0:11.2
	rel-5-4:11.1
	offsite-5-3-pre:11.2
	rel-5-3:11.1
	rel-5-2:11.1
	rel-5-1-branch:11.1.0.2
	rel-5-1:11.1
	rel-5-0:11.1
	rel-5-0-beta:11.1
	rel-4-5:11.1
	ctj-4-5-post:11.1
	ctj-4-5-pre:11.1
	rel-4-4:11.1
	rel-4-0:10.1
	rel-3-5:9.1
	rel-3-0:8.1
	rel-2-3:7.1
	rel-2-0:6.1
	rel-1-24:5.1
	rel-1-20:4.3
	rel-1-10:4.1;
locks; strict;
comment	@ * @;


11.8
date	2004.05.21.18.07.24;	author morrison;	state dead;
branches;
next	11.7;

11.7
date	2004.05.10.15.30.44;	author erikg;	state Exp;
branches;
next	11.6;

11.6
date	2004.04.05.07.44.42;	author morrison;	state Exp;
branches;
next	11.5;

11.5
date	2004.02.02.17.39.11;	author morrison;	state Exp;
branches;
next	11.4;

11.4
date	2002.08.20.17.07.46;	author jra;	state Exp;
branches
	11.4.2.1
	11.4.4.1
	11.4.10.1;
next	11.3;

11.3
date	2002.08.15.20.54.59;	author hartley;	state Exp;
branches;
next	11.2;

11.2
date	2000.07.12.01.33.30;	author cjohnson;	state Exp;
branches;
next	11.1;

11.1
date	95.01.04.09.52.31;	author mike;	state Rel4_4;
branches;
next	10.4;

10.4
date	94.08.12.20.22.18;	author gdurf;	state Exp;
branches;
next	10.3;

10.3
date	94.08.09.12.56.41;	author gdurf;	state Exp;
branches;
next	10.2;

10.2
date	93.09.25.08.38.01;	author mike;	state Exp;
branches;
next	10.1;

10.1
date	91.10.12.06.37.13;	author mike;	state Rel4_0;
branches;
next	9.3;

9.3
date	91.01.04.21.39.21;	author mike;	state Exp;
branches;
next	9.2;

9.2
date	89.09.01.01.31.42;	author phil;	state Exp;
branches;
next	9.1;

9.1
date	89.05.19.05.47.31;	author mike;	state Rel3_5;
branches;
next	8.2;

8.2
date	89.02.27.01.26.46;	author phil;	state Exp;
branches;
next	8.1;

8.1
date	88.10.05.00.27.18;	author mike;	state Rel3_0;
branches;
next	7.1;

7.1
date	87.11.02.23.26.07;	author mike;	state Rel;
branches;
next	6.1;

6.1
date	87.07.11.07.51.08;	author mike;	state Rel;
branches;
next	5.1;

5.1
date	87.06.24.21.51.07;	author mike;	state Rel;
branches;
next	4.3;

4.3
date	87.02.12.22.06.14;	author mike;	state Exp;
branches;
next	4.2;

4.2
date	87.02.11.00.09.20;	author mike;	state Exp;
branches;
next	4.1;

4.1
date	86.12.29.03.42.24;	author mike;	state Rel1;
branches;
next	1.6;

1.6
date	86.10.30.00.51.52;	author phil;	state Exp;
branches;
next	1.5;

1.5
date	86.10.29.02.48.52;	author phil;	state Exp;
branches;
next	1.4;

1.4
date	86.10.29.01.55.20;	author phil;	state Exp;
branches;
next	1.3;

1.3
date	86.10.25.10.47.28;	author phil;	state Exp;
branches;
next	1.2;

1.2
date	86.10.22.23.52.15;	author mike;	state Exp;
branches;
next	1.1;

1.1
date	86.10.02.02.17.19;	author mike;	state Exp;
branches;
next	;

11.4.2.1
date	2002.09.19.18.01.18;	author morrison;	state Exp;
branches;
next	11.4.2.2;

11.4.2.2
date	2004.03.17.21.16.59;	author morrison;	state Exp;
branches;
next	;

11.4.4.1
date	2004.03.11.23.42.06;	author morrison;	state Exp;
branches;
next	;

11.4.10.1
date	2004.02.12.19.48.11;	author erikg;	state Exp;
branches;
next	11.4.10.2;

11.4.10.2
date	2004.03.15.14.06.19;	author erikg;	state Exp;
branches;
next	;


desc
@FB disk I/O
@


11.8
log
@moved to src/
@
text
@/*
 *			F B _ P A G E D _ I O . C
 * 
 *  Buffered frame buffer IO routines:
 *    fb_ioinit( fbp )
 *    fb_seek( fbp, x, y )
 *    fb_tell( fbp )
 *    fb_rpixel( fbp, pixelp )
 *    fb_wpixel( fbp, pixelp )
 *    fb_flush( fbp )
 *
 *  Authors -
 *	Mike J. Muuss
 *	Douglas P. Kingston III
 *	Gary S. Moss
 *
 *  Source -
 *	SECAD/VLD Computing Consortium, Bldg 394
 *	The U. S. Army Ballistic Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5066
 *  
 *  Copyright Notice -
 *	This software is Copyright (C) 1986-2004 by the United States Army.
 *	All rights reserved.
 */
#ifndef lint
static const char RCSid[] = "@@(#)$Header: /n/xoff/cvs/brlcad/libfb/fb_paged_io.c,v 11.7 2004/05/10 15:30:44 erikg Exp $ (BRL)";
#endif

#ifdef HAVE_CONFIG_H
# include "config.h"
#endif



#include <stdio.h>

#include "machine.h"
#include "externs.h"
#include "fb.h"
#include "./fblocal.h"

#define PAGE_BYTES	(63*1024L)		/* Max # of bytes/dma. */
#define PAGE_PIXELS	(((PAGE_BYTES/sizeof(RGBpixel))/ifp->if_width)\
			 *ifp->if_width)
#define PAGE_SCANS	(ifp->if_ppixels/ifp->if_width)

/*_LOCAL_ int	_fb_pgin(), _fb_pgout();*/
 
/*
 *		F B _ I O I N I T
 *
 *  This initialization routine must be called before any buffered
 *  I/O routines in this file are used.
 */
int
fb_ioinit(register FBIO *ifp)
{
	if( ifp->if_debug & FB_DEBUG_BIO ) {
		fb_log( "fb_ioinit( 0x%lx )\n", (unsigned long)ifp );
	}

	ifp->if_pno = -1;		/* Force _fb_pgin() initially.	*/
	ifp->if_pixcur = 0L;		/* Initialize pixel number.	*/
	if( ifp->if_pbase == PIXEL_NULL ) {
		/* Only allocate buffer once. */
		ifp->if_ppixels = PAGE_PIXELS;	/* Pixels/page.	*/
		if( ifp->if_ppixels > ifp->if_width * ifp->if_height )
			ifp->if_ppixels = ifp->if_width * ifp->if_height;
		if( (ifp->if_pbase = (unsigned char *)malloc( ifp->if_ppixels * sizeof(RGBpixel) ))
			== PIXEL_NULL ) {
			Malloc_Bomb(ifp->if_ppixels * sizeof(RGBpixel));
			return	-1;
		}
	}
	ifp->if_pcurp = ifp->if_pbase;	/* Initialize pointer.	*/
	ifp->if_pendp = ifp->if_pbase+ifp->if_ppixels*sizeof(RGBpixel);
	return	0;
}

int
fb_seek(register FBIO *ifp, int x, int y)
{
	long	pixelnum;
	long	pagepixel;

	if( ifp->if_debug & FB_DEBUG_BIO ) {
		fb_log( "fb_seek( 0x%lx, %d, %d )\n",
			(unsigned long)ifp, x, y );
	}

	if( x < 0 || y < 0 || x >= ifp->if_width || y >= ifp->if_height ) {
		fb_log(	"fb_seek: illegal address <%d,%d>.\n", x, y );
		return	-1;
	}
	pixelnum = ((long) y * (long) ifp->if_width) + x;
	pagepixel = (long) ifp->if_pno * ifp->if_ppixels;
	if( pixelnum < pagepixel || pixelnum >= (pagepixel + ifp->if_ppixels) ) {
		if( ifp->if_pdirty )
			if( _fb_pgout( ifp ) == - 1 )
				return	-1;
		if( _fb_pgin( ifp, (int) (pixelnum / (long) ifp->if_ppixels)) <= -1 )
			return	-1;
	}
	ifp->if_pixcur = pixelnum;
	/* Compute new pixel pointer into page. */
	ifp->if_pcurp = ifp->if_pbase +
			(ifp->if_pixcur % ifp->if_ppixels)*sizeof(RGBpixel);
	return	0;
}

int
fb_tell(register FBIO *ifp, int *xp, int *yp)
{
	*yp = (int) (ifp->if_pixcur / ifp->if_width);
	*xp = (int) (ifp->if_pixcur % ifp->if_width);

	if( ifp->if_debug & FB_DEBUG_BIO ) {
		fb_log( "fb_tell( 0x%lx, 0x%x, 0x%x ) => (%4d,%4d)\n",
			(unsigned long)ifp, xp, yp, *xp, *yp );
	}

	return	0;
}

int
fb_wpixel(register FBIO *ifp, unsigned char *pixelp)
{
#ifdef NEVER
	if( ifp->if_debug & FB_DEBUG_BRW ) {
		fb_log( "fb_wpixel( 0x%lx, &[%3d,%3d,%3d] )\n",
			(unsigned long)ifp,
			(*pixelp)[RED], (*pixelp)[GRN], (*pixelp)[BLU] );
	}
#endif /* NEVER */

	if( ifp->if_pno == -1 )
		if( _fb_pgin( ifp, ifp->if_pixcur / ifp->if_ppixels ) <= -1 )
			return	-1;

	COPYRGB( (ifp->if_pcurp), pixelp );
	ifp->if_pcurp += sizeof(RGBpixel);	/* position in page */
	ifp->if_pixcur++;	/* position in framebuffer */
	ifp->if_pdirty = 1;	/* page referenced (dirty) */
	if( ifp->if_pcurp >= ifp->if_pendp ) {
		if( _fb_pgout( ifp ) <= -1 )
			return	-1;
		ifp->if_pno = -1;
	}
	return	0;
}

int
fb_rpixel(register FBIO *ifp, unsigned char *pixelp)
{
	if( ifp->if_pno == -1 )
		if( _fb_pgin( ifp, ifp->if_pixcur / ifp->if_ppixels ) <= -1 )
			return	-1;

	COPYRGB( pixelp, (ifp->if_pcurp) );
	ifp->if_pcurp += sizeof(RGBpixel);	/* position in page */
	ifp->if_pixcur++;	/* position in framebuffer */
	if( ifp->if_pcurp >= ifp->if_pendp ) {
		if( _fb_pgout( ifp ) <= -1 )
			return	-1;
		ifp->if_pno = -1;
	}

#ifdef NEVER
	if( ifp->if_debug & FB_DEBUG_BRW ) {
		fb_log( "fb_rpixel( 0x%lx, 0x%lx ) => [%3d,%3d,%3d]\n",
			(unsigned long)ifp, (unsigned long)pixelp,
			(*pixelp)[RED], (*pixelp)[GRN], (*pixelp)[BLU] );
	}
#endif /* NEVER */

	return	0;
}

int
fb_flush(register FBIO *ifp)
{
	_fb_pgflush(ifp);

	/* call device specific flush routine */
	if( (*ifp->if_flush)( ifp ) <= -1 )
		return	-1;

	return	0;
}

int
_fb_pgflush(register FBIO *ifp)
{
	if( ifp->if_debug & FB_DEBUG_BIO ) {
		fb_log( "_fb_pgflush( 0x%lx )\n", (unsigned long)ifp );
	}

	if( ifp->if_pdirty ) {
		if( _fb_pgout( ifp ) <= -1 )
			return	-1;
		ifp->if_pdirty = 0;
	}

	return	0;
}

int
_fb_pgout(register FBIO *ifp)
{
	int	scans, first_scan;

	/*fb_log( "_fb_pgout(%d)\n", ifp->if_pno );*/

	if( ifp->if_pno < 0 )	/* Already paged out, return 1.	*/
		return	1;

	first_scan = ifp->if_pno * PAGE_SCANS;
	if( first_scan + PAGE_SCANS > ifp->if_height )
		scans = ifp->if_height - first_scan;
	else
		scans = PAGE_SCANS;

	return	fb_write(	ifp,
				0,
				first_scan,
				ifp->if_pbase,
				scans * ifp->if_width
				);
}

int
_fb_pgin(register FBIO *ifp, int pageno)
{
	int	scans, first_scan;

	/*fb_log( "_fb_pgin(%d)\n", pageno );*/

	/* Set pixel pointer to beginning of page. */
	ifp->if_pcurp = ifp->if_pbase;
	ifp->if_pno = pageno;
	ifp->if_pdirty = 0;

	first_scan = ifp->if_pno * PAGE_SCANS;
	if( first_scan + PAGE_SCANS > ifp->if_height )
		scans = ifp->if_height - first_scan;
	else
		scans = PAGE_SCANS;

	return	fb_read(	ifp,
				0,
				first_scan,
				ifp->if_pbase,
				scans * ifp->if_width
				);
}
@


11.7
log
@change conf.h to a wrapped config.h
@
text
@d27 1
a27 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/libfb/fb_paged_io.c,v 11.6 2004/04/05 07:44:42 morrison Exp $ (BRL)";
@


11.6
log
@merge of ansi-6-0-branch into HEAD
@
text
@d27 1
a27 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
d30 5
a34 1
#include "conf.h"
@


11.5
log
@update copyright to include span through 2003
@
text
@d27 1
a27 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libfb/fb_paged_io.c,v 11.4 2002/08/20 17:07:46 jra Exp $ (BRL)";
d53 1
a53 2
fb_ioinit( ifp )
register FBIO	*ifp;
d78 1
a78 3
fb_seek( ifp, x, y )
register FBIO	*ifp;
int	x, y;
d109 1
a109 3
fb_tell( ifp, xp, yp )
register FBIO	*ifp;
int	*xp, *yp;
d123 1
a123 3
fb_wpixel( ifp, pixelp )
register FBIO	*ifp;
unsigned char 	*pixelp;
d150 1
a150 3
fb_rpixel( ifp, pixelp )
register FBIO	*ifp;
unsigned char	*pixelp;
d177 1
a177 2
fb_flush( ifp )
register FBIO	*ifp;
d189 1
a189 2
_fb_pgflush( ifp )
register FBIO	*ifp;
d205 1
a205 2
_fb_pgout( ifp )
register FBIO	*ifp;
d229 1
a229 3
_fb_pgin( ifp, pageno )
register FBIO	*ifp;
int	pageno;
@


11.4
log
@Restoration of entire source tree to Pre-Hartley state
@
text
@d23 1
a23 1
 *	This software is Copyright (C) 1986 by the United States Army.
d27 1
a27 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libfb/fb_paged_io.c,v 11.2 2000/07/12 01:33:30 cjohnson Exp $ (BRL)";
@


11.4.4.1
log
@sync to HEAD...
@
text
@d23 1
a23 1
 *	This software is Copyright (C) 1986-2004 by the United States Army.
d27 1
a27 1
static const char RCSid[] = "@@(#)$Header: /n/cad/c/CVS/brlcad/libfb/fb_paged_io.c,v 11.5 2004/02/02 17:39:11 morrison Exp $ (BRL)";
@


11.4.10.1
log
@merge from HEAD
@
text
@d23 1
a23 1
 *	This software is Copyright (C) 1986-2004 by the United States Army.
d27 1
a27 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libfb/fb_paged_io.c,v 11.5 2004/02/02 17:39:11 morrison Exp $ (BRL)";
@


11.4.10.2
log
@merge from head
@
text
@d27 1
a27 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libfb/fb_paged_io.c,v 11.4.10.1 2004/02/12 19:48:11 erikg Exp $ (BRL)";
@


11.4.2.1
log
@Initial ANSIfication
@
text
@d27 1
a27 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libfb/fb_paged_io.c,v 11.4 2002/08/20 17:07:46 jra Exp $ (BRL)";
d53 2
a54 1
fb_ioinit(register FBIO *ifp)
d79 3
a81 1
fb_seek(register FBIO *ifp, int x, int y)
d112 3
a114 1
fb_tell(register FBIO *ifp, int *xp, int *yp)
d128 3
a130 1
fb_wpixel(register FBIO *ifp, unsigned char *pixelp)
d157 3
a159 1
fb_rpixel(register FBIO *ifp, unsigned char *pixelp)
d186 2
a187 1
fb_flush(register FBIO *ifp)
d199 2
a200 1
_fb_pgflush(register FBIO *ifp)
d216 2
a217 1
_fb_pgout(register FBIO *ifp)
d241 3
a243 1
_fb_pgin(register FBIO *ifp, int pageno)
@


11.4.2.2
log
@sync branch with HEAD
@
text
@d23 1
a23 1
 *	This software is Copyright (C) 1986-2004 by the United States Army.
d27 1
a27 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
@


11.3
log
@Converted from K&R to ANSI C - RFH
@
text
@d53 2
a54 1
fb_ioinit(register FBIO *ifp)
d79 3
a81 1
fb_seek(register FBIO *ifp, int x, int y)
d112 3
a114 1
fb_tell(register FBIO *ifp, int *xp, int *yp)
d128 3
a130 1
fb_wpixel(register FBIO *ifp, unsigned char *pixelp)
d157 3
a159 1
fb_rpixel(register FBIO *ifp, unsigned char *pixelp)
d186 2
a187 1
fb_flush(register FBIO *ifp)
d199 2
a200 1
_fb_pgflush(register FBIO *ifp)
d216 2
a217 1
_fb_pgout(register FBIO *ifp)
d241 3
a243 1
_fb_pgin(register FBIO *ifp, int pageno)
@


11.2
log
@LINT from gcc -Wall.  Including some mods to h/pkg.h
@
text
@d27 1
a27 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libfb/fb_paged_io.c,v 11.1 1995/01/04 09:52:31 mike Rel4_4 $ (BRL)";
d53 1
a53 2
fb_ioinit( ifp )
register FBIO	*ifp;
d78 1
a78 3
fb_seek( ifp, x, y )
register FBIO	*ifp;
int	x, y;
d109 1
a109 3
fb_tell( ifp, xp, yp )
register FBIO	*ifp;
int	*xp, *yp;
d123 1
a123 3
fb_wpixel( ifp, pixelp )
register FBIO	*ifp;
unsigned char 	*pixelp;
d150 1
a150 3
fb_rpixel( ifp, pixelp )
register FBIO	*ifp;
unsigned char	*pixelp;
d177 1
a177 2
fb_flush( ifp )
register FBIO	*ifp;
d189 1
a189 2
_fb_pgflush( ifp )
register FBIO	*ifp;
d205 1
a205 2
_fb_pgout( ifp )
register FBIO	*ifp;
d229 1
a229 3
_fb_pgin( ifp, pageno )
register FBIO	*ifp;
int	pageno;
@


11.1
log
@Release_4.4
@
text
@d27 1
a27 1
static char RCSid[] = "@@(#)$Header: /m/cad/libfb/RCS/fb_paged_io.c,v 10.4 94/08/12 20:22:18 gdurf Exp $ (BRL)";
@


10.4
log
@Added includes
@
text
@d27 1
a27 1
static char RCSid[] = "@@(#)$Header: /m/cad/libfb/RCS/fb_paged_io.c,v 10.3 1994/08/09 12:56:41 gdurf Exp gdurf $ (BRL)";
@


10.3
log
@Factored ifdefs
@
text
@d27 1
a27 1
static char RCSid[] = "@@(#)$Header: /m/cad/libfb/RCS/fb_paged_io.c,v 10.2 1993/09/25 08:38:01 mike Exp gdurf $ (BRL)";
d33 3
@


10.2
log
@Converted to new fb.h
@
text
@d27 1
a27 1
static char RCSid[] = "@@(#)$Header: /m/cad/libfb/RCS/fb_paged_io.c,v 10.1 91/10/12 06:37:13 mike Rel4_0 Locker: mike $ (BRL)";
d29 2
@


10.1
log
@Release_4.0
@
text
@d27 1
a27 1
static char RCSid[] = "@@(#)$Header: /m/cad/libfb/RCS/fb_paged_io.c,v 9.3 91/01/04 21:39:21 mike Exp $ (BRL)";
d62 1
a62 1
		if( (ifp->if_pbase = (RGBpixel *)malloc( ifp->if_ppixels * sizeof(RGBpixel) ))
d69 1
a69 1
	ifp->if_pendp = ifp->if_pbase+ifp->if_ppixels;
d102 1
a102 1
			(ifp->if_pixcur % ifp->if_ppixels);
d125 1
a125 1
RGBpixel 	*pixelp;
d139 2
a140 2
	COPYRGB( *(ifp->if_pcurp), *pixelp );
	ifp->if_pcurp++;	/* position in page */
d154 1
a154 1
RGBpixel	*pixelp;
d160 2
a161 2
	COPYRGB( *pixelp, *(ifp->if_pcurp) );
	ifp->if_pcurp++;	/* position in page */
@


9.3
log
@Changed to accomodate error codes less than -1.
@
text
@d27 1
a27 1
static char RCSid[] = "@@(#)$Header: /m/cad/libfb/RCS/fb_paged_io.c,v 9.2 89/09/01 01:31:42 phil Exp $ (BRL)";
@


9.2
log
@Added device specific fb_flush routine and broke out paged I/O flush
into _fb_pgflush.  Lesson learned: a generic libfb routine should
never call another generic libfb routine!  Trust me.
@
text
@d27 1
a27 1
static char RCSid[] = "@@(#)$Header: fb_paged_io.c,v 9.1 89/05/19 05:47:31 phil Locked $ (BRL)";
d96 1
a96 1
		if( _fb_pgin( ifp, (int) (pixelnum / (long) ifp->if_ppixels)) == -1 )
d136 1
a136 1
		if( _fb_pgin( ifp, ifp->if_pixcur / ifp->if_ppixels ) == -1 )
d144 1
a144 1
		if( _fb_pgout( ifp ) == -1 )
d157 1
a157 1
		if( _fb_pgin( ifp, ifp->if_pixcur / ifp->if_ppixels ) == -1 )
d164 1
a164 1
		if( _fb_pgout( ifp ) == -1 )
d187 1
a187 1
	if( (*ifp->if_flush)( ifp ) == -1 )
d202 1
a202 1
		if( _fb_pgout( ifp ) == -1 )
@


9.1
log
@Release_3.5
@
text
@d27 1
a27 1
static char RCSid[] = "@@(#)$Header: fb_paged_io.c,v 8.2 89/02/27 01:26:46 phil Exp $ (BRL)";
d87 1
a87 1
		fb_log(	"fb_seek : illegal address <%d,%d>.\n", x, y );
d184 13
d198 1
a198 1
		fb_log( "fb_flush( 0x%lx )\n", (unsigned long)ifp );
d201 1
a201 1
	if( ifp->if_pdirty )
d204 2
a206 1
	ifp->if_pdirty = 0;
@


8.2
log
@#endif /* comment */
@
text
@d27 1
a27 1
static char RCSid[] = "@@(#)$Header: fb_paged_io.c,v 8.1 88/10/05 00:27:18 phil Locked $ (BRL)";
@


8.1
log
@Release_3.0
@
text
@d27 1
a27 1
static char RCSid[] = "@@(#)$Header: fb_paged_io.c,v 7.1 87/11/02 23:26:07 mike Rel $ (BRL)";
d133 1
a133 1
#endif NEVER
d175 1
a175 1
#endif NEVER
@


7.1
log
@Release 2.3
@
text
@d27 1
a27 1
static char RCSid[] = "@@(#)$Header: fb_paged_io.c,v 6.1 87/07/11 07:51:08 mike Rel $ (BRL)";
@


6.1
log
@Release 2.0
@
text
@d27 1
a27 1
static char RCSid[] = "@@(#)$Header: fb_paged_io.c,v 5.1 87/06/24 21:51:07 mike Rel $ (BRL)";
@


5.1
log
@Release 1.24
@
text
@d27 1
a27 1
static char RCSid[] = "@@(#)$Header: fb_paged_io.c,v 4.3 87/02/12 22:06:14 mike Exp $ (BRL)";
@


4.3
log
@Release 1.20 -- First Formal Release
@
text
@d27 1
a27 1
static char RCSid[] = "@@(#)$Header: fb_paged_io.c,v 4.2 87/02/11 00:09:20 mike Exp $ (BRL)";
@


4.2
log
@Release 1.18, shorted for UNICOS.
@
text
@d27 1
a27 1
static char RCSid[] = "@@(#)$Header: fb_paged_io.c,v 4.1 86/12/29 03:42:24 mike Locked $ (BRL)";
@


4.1
log
@BRL CAD Distribution Release 1.10
@
text
@d27 1
a27 1
static char RCSid[] = "@@(#)$Header: fb_paged_io.c,v 1.6 86/10/30 00:51:52 phil Exp $ (BRL)";
d39 1
a39 1
/*_LOCAL_ int	_fb_pagein(), _fb_pageout();*/
d55 1
a55 1
	ifp->if_pno = -1;		/* Force _fb_pagein() initially.	*/
d94 1
a94 1
			if( _fb_pageout( ifp ) == - 1 )
d96 1
a96 1
		if( _fb_pagein( ifp, (int) (pixelnum / (long) ifp->if_ppixels)) == -1 )
d136 1
a136 1
		if( _fb_pagein( ifp, ifp->if_pixcur / ifp->if_ppixels ) == -1 )
d144 1
a144 1
		if( _fb_pageout( ifp ) == -1 )
d157 1
a157 1
		if( _fb_pagein( ifp, ifp->if_pixcur / ifp->if_ppixels ) == -1 )
d164 1
a164 1
		if( _fb_pageout( ifp ) == -1 )
d189 1
a189 1
		if( _fb_pageout( ifp ) == -1 )
d197 1
a197 1
_fb_pageout( ifp )
d202 1
a202 1
	/*fb_log( "_fb_pageout(%d)\n", ifp->if_pno );*/
d222 1
a222 1
_fb_pagein( ifp, pageno )
d228 1
a228 1
	/*fb_log( "_fb_pagein(%d)\n", pageno );*/
@


1.6
log
@make pagein and pageout global for FB_WPIXEL macro.
@
text
@d27 1
a27 1
static char RCSid[] = "@@(#)$Header: fb_paged_io.c,v 1.5 86/10/29 02:48:52 phil Locked $ (BRL)";
@


1.5
log
@fb_log goof.
@
text
@d27 1
a27 1
static char RCSid[] = "@@(#)$Header: fb_paged_io.c,v 1.4 86/10/29 01:55:20 phil Locked $ (BRL)";
d39 1
a39 1
_LOCAL_ int	_pagein(), _pageout();
d55 1
a55 1
	ifp->if_pno = -1;		/* Force _pagein() initially.	*/
d94 1
a94 1
			if( _pageout( ifp ) == - 1 )
d96 1
a96 1
		if( _pagein( ifp, (int) (pixelnum / (long) ifp->if_ppixels)) == -1 )
d136 1
a136 1
		if( _pagein( ifp, ifp->if_pixcur / ifp->if_ppixels ) == -1 )
d144 1
a144 1
		if( _pageout( ifp ) == -1 )
d157 1
a157 1
		if( _pagein( ifp, ifp->if_pixcur / ifp->if_ppixels ) == -1 )
d164 1
a164 1
		if( _pageout( ifp ) == -1 )
d189 1
a189 1
		if( _pageout( ifp ) == -1 )
d196 2
a197 2
_LOCAL_ int
_pageout( ifp )
d202 1
a202 1
	/*fb_log( "_pageout(%d)\n", ifp->if_pno );*/
d221 2
a222 2
_LOCAL_ int
_pagein( ifp, pageno )
d228 1
a228 1
	/*fb_log( "_pagein(%d)\n", pageno );*/
@


1.4
log
@removed pbytes, added checks for end of screen, cosmetics.
@
text
@d27 1
a27 1
static char RCSid[] = "@@(#)$Header: fb_paged_io.c,v 1.3 86/10/25 10:47:28 phil Locked $ (BRL)";
d185 1
a185 1
		fb_flush( "fb_flush( 0x%lx )\n", (unsigned long)ifp );
@


1.3
log
@RGBpixel conversion
@
text
@d2 23
a24 25
		F B _ P A G E D _ I O . C
 
  Buffered frame buffer IO routines:
    fb_ioinit( fbp )
    fb_seek( fbp, x, y )
    fb_tell( fbp )
    fb_rpixel( fbp, pixelp )
    fb_wpixel( fbp, pixelp )
    fbflush( fbp )

  Authors -
	Mike J. Muuss
	Douglas P. Kingston III
	Gary S. Moss

  Source -
	SECAD/VLD Computing Consortium, Bldg 394
	The U. S. Army Ballistic Research Laboratory
	Aberdeen Proving Ground, Maryland  21005-5066
  
  Copyright Notice -
	This software is Copyright (C) 1986 by the United States Army.
	All rights reserved.

	$Header: fb_paged_io.c,v 1.2 86/10/22 23:52:15 phil Locked $ (BRL)
d27 1
a27 1
static char RCSid[] = "@@(#)$Header: fb_paged_io.c,v 1.2 86/10/22 23:52:15 phil Locked $ (BRL)";
d41 5
a45 3
/*	f b i o i n i t ( )
	This initialization routine must be called before any buffered
	I/O routines in this file are used.
d51 4
d60 3
a62 2
		ifp->if_pbytes = ifp->if_ppixels * sizeof(RGBpixel); /* Bytes/page.	*/
		if( (ifp->if_pbase = (RGBpixel *) malloc( ifp->if_pbytes ))
d64 1
a64 1
			Malloc_Bomb(ifp->if_pbytes);
d78 2
a79 2
	long	pos;
	long	pagepos;
d81 6
a86 2
	/* fb_log( "fb_seek( %d, %d )\n", x, y ); */
	if( x < 0 || y < 0 || x > 8*1024 || y > 8*1024 ) {
d90 4
a93 4
	pos = (((long) y * (long) ifp->if_width) + x) * sizeof(RGBpixel);
	pagepos = (long) ifp->if_pno * ifp->if_pbytes;
	if( pos < pagepos || pos >= (pagepos + ifp->if_pbytes) ) {
		if( ifp->if_pref )
d96 1
a96 1
		if( _pagein( ifp, (int) (pos / (long) ifp->if_pbytes)) == -1 )
d99 2
a100 2
	ifp->if_pixcur = ((long) y * (long) ifp->if_width) + x;
	/* Compute new pixel pointer into page.				*/
d113 6
d127 8
d142 1
a142 1
	ifp->if_pref = 1;	/* page referenced (dirty) */
d168 9
d184 5
a188 1
	if( ifp->if_pref )
d192 1
a192 1
	ifp->if_pref = 0;
d200 2
d203 1
d207 6
d215 1
a215 1
				ifp->if_pno * PAGE_SCANS,
d217 1
a217 1
				ifp->if_ppixels
d226 2
d233 1
a233 1
	ifp->if_pref = 0;
d235 6
d243 1
a243 1
				ifp->if_pno * PAGE_SCANS,
d245 1
a245 1
				ifp->if_ppixels
@


1.2
log
@Changed if_pcurpos to if_pixcur for non-FLEXNAME systems.
@
text
@d26 1
a26 1
	$Header: fb_paged_io.c,v 1.1 86/10/02 02:17:19 mike Locked $ (BRL)
d29 1
a29 1
static char RCSid[] = "@@(#)$Header: fb_paged_io.c,v 1.1 86/10/02 02:17:19 mike Locked $ (BRL)";
d36 3
d50 1
a50 1
	{
d52 7
a58 9
	ifp->if_pixcur = 0L;	/* Initialize pixel number.	*/
	if( ifp->if_pbase == PIXEL_NULL )
		{ /* Only allocate buffer once.				*/
		ifp->if_pbytes = MAX_BYTES_DMA;	/* Bytes/page.	*/
		ifp->if_ppixels = MAX_PIXELS_DMA;	/* Pixels/page.	*/
		if( (ifp->if_pbase = (Pixel *) malloc( ifp->if_pbytes ))
			== PIXEL_NULL
			)
			{
a60 1
			}
d62 1
d66 1
a66 1
	}
d72 4
a75 2
	{	long	pos;
		long	pagepos;
d77 2
a78 5
	if( x < 0 || y < 0 || x > 8*1024 || y > 8*1024 )
		{
		fb_log(	"fb_seek : illegal address <%d,%d>.\n",
				x, y
				);
d80 2
a81 2
		}
	pos = (((long) y * (long) ifp->if_width) + x) * sizeof(Pixel);
d83 1
a83 2
	if( pos < pagepos || pos >= (pagepos + ifp->if_pbytes) )
		{
d89 1
a89 1
		}
d95 1
a95 1
	}
d101 1
a101 1
	{
d105 1
a105 1
	}
d110 2
a111 2
Pixel 	*pixelp;
	{
d115 6
a120 5
	*(ifp->if_pcurp++) = *pixelp;
	ifp->if_pref = 1;
	ifp->if_pixcur++;
	if( ifp->if_pcurp >= ifp->if_pendp )
		{
d124 1
a124 1
		}
d126 1
a126 1
	}
d131 2
a132 2
Pixel			*pixelp;
	{
d136 5
a140 4
	*pixelp = *(ifp->if_pcurp++);
	ifp->if_pixcur++;
	if( ifp->if_pcurp >= ifp->if_pendp )
		{
d144 1
a144 1
		}
d146 1
a146 1
	}
d151 2
a152 2
	{
	if (ifp->if_pref)
d155 1
d158 1
a158 1
	}
d163 1
a163 1
	{
d167 1
d174 1
a174 1
	}
d179 2
a180 2
int			pageno;
	{	int	nread;
d183 1
a183 1
	/* Set pixel pointer to beginning of page.			*/
d186 2
a187 1
	ifp->if_pref = 0; 
d194 1
a194 1
	}
@


1.1
log
@Initial revision
@
text
@d26 1
a26 1
	$Header$ (BRL)
d29 1
a29 1
static char RCSid[] = "@@(#)$Header$ (BRL)";
d49 1
a49 1
	ifp->if_pcurpos = 0L;	/* Initialize pixel number.	*/
d74 1
a74 1
	if( x < 0 || y < 0 || x > 1024 || y > 4096 )
d91 1
a91 1
	ifp->if_pcurpos = ((long) y * (long) ifp->if_width) + x;
d94 1
a94 1
			(ifp->if_pcurpos % ifp->if_ppixels);
d103 2
a104 2
	*yp = (int) (ifp->if_pcurpos / ifp->if_width);
	*xp = (int) (ifp->if_pcurpos % ifp->if_width);
d114 1
a114 1
		if( _pagein( ifp, ifp->if_pcurpos / ifp->if_ppixels ) == -1 )
d118 1
a118 1
	ifp->if_pcurpos++;
d134 1
a134 1
		if( _pagein( ifp, ifp->if_pcurpos / ifp->if_ppixels ) == -1 )
d137 1
a137 1
	ifp->if_pcurpos++;
@
