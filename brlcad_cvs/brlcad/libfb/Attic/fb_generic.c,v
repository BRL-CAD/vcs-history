head	11.19;
access;
symbols
	ansi-20040405-merged:11.14.2.2
	postmerge-20040405-ansi:11.17
	premerge-20040404-ansi:11.16
	postmerge-autoconf:11.16
	autoconf-freeze:11.14.10.3
	premerge-autoconf:11.16
	ansi-20040316-freeze:11.14.2.1
	postmerge-20040315-windows:11.16
	premerge-20040315-windows:11.15
	windows-20040315-freeze:11.14.4.2
	autoconf-20031203:11.14
	autoconf-20031202:11.14
	autoconf-branch:11.14.0.10
	phong-branch:11.14.0.8
	photonmap-branch:11.14.0.6
	rel-6-1-DP:11.14
	windows-branch:11.14.0.4
	rel-6-0-2:11.12
	ansi-branch:11.14.0.2
	rel-6-0-1-branch:11.12.0.2
	hartley-6-0-post:11.13
	hartley-6-0-pre:11.12
	rel-6-0-1:11.12
	rel-6-0:11.12
	rel-5-4:11.10
	offsite-5-3-pre:11.11
	rel-5-3:11.10
	rel-5-2:11.10
	rel-5-1-branch:11.10.0.2
	rel-5-1:11.10
	rel-5-0:11.10
	rel-5-0-beta:11.9
	rel-4-5:11.9
	ctj-4-5-post:11.8
	ctj-4-5-pre:11.8
	rel-4-4:11.1
	rel-4-0:10.1
	rel-3-5:9.1
	rel-3-0:8.1
	rel-2-3:7.1
	rel-2-0:6.1
	rel-1-24:5.1
	rel-1-20:4.2
	rel-1-10:4.1;
locks; strict;
comment	@ * @;


11.19
date	2004.05.21.18.07.24;	author morrison;	state dead;
branches;
next	11.18;

11.18
date	2004.05.10.15.30.44;	author erikg;	state Exp;
branches;
next	11.17;

11.17
date	2004.04.05.07.44.42;	author morrison;	state Exp;
branches;
next	11.16;

11.16
date	2004.03.16.19.59.34;	author morrison;	state Exp;
branches;
next	11.15;

11.15
date	2004.02.02.17.39.08;	author morrison;	state Exp;
branches;
next	11.14;

11.14
date	2002.08.20.17.07.45;	author jra;	state Exp;
branches
	11.14.2.1
	11.14.4.1
	11.14.10.1;
next	11.13;

11.13
date	2002.08.15.20.54.59;	author hartley;	state Exp;
branches;
next	11.12;

11.12
date	2001.04.20.22.29.12;	author morrison;	state Exp;
branches;
next	11.11;

11.11
date	2000.07.12.01.33.30;	author cjohnson;	state Exp;
branches;
next	11.10;

11.10
date	99.06.02.17.20.01;	author mike;	state Exp;
branches;
next	11.9;

11.9
date	97.09.23.21.36.46;	author bparker;	state Exp;
branches;
next	11.8;

11.8
date	95.06.30.14.42.04;	author cnuzman;	state Exp;
branches;
next	11.7;

11.7
date	95.06.23.20.24.11;	author cnuzman;	state Exp;
branches;
next	11.6;

11.6
date	95.06.16.15.39.06;	author butler;	state Exp;
branches;
next	11.5;

11.5
date	95.06.13.17.09.14;	author cnuzman;	state Exp;
branches;
next	11.4;

11.4
date	95.04.25.18.40.16;	author jra;	state Exp;
branches;
next	11.3;

11.3
date	95.01.09.13.29.46;	author cnuzman;	state Exp;
branches;
next	11.2;

11.2
date	95.01.05.20.29.51;	author cnuzman;	state Exp;
branches;
next	11.1;

11.1
date	95.01.04.09.52.29;	author mike;	state Rel4_4;
branches;
next	10.6;

10.6
date	94.11.18.20.56.33;	author mike;	state Exp;
branches;
next	10.5;

10.5
date	94.08.09.12.56.19;	author gdurf;	state Exp;
branches;
next	10.4;

10.4
date	93.09.25.08.51.52;	author mike;	state Exp;
branches;
next	10.3;

10.3
date	93.09.25.08.39.06;	author mike;	state Exp;
branches;
next	10.2;

10.2
date	93.07.20.22.27.33;	author mike;	state Exp;
branches;
next	10.1;

10.1
date	91.10.12.06.37.12;	author mike;	state Rel4_0;
branches;
next	9.11;

9.11
date	91.07.26.22.40.25;	author mike;	state Exp;
branches;
next	9.10;

9.10
date	91.06.22.22.24.58;	author mike;	state Exp;
branches;
next	9.9;

9.9
date	91.06.12.21.12.16;	author mike;	state Exp;
branches;
next	9.8;

9.8
date	91.01.08.22.58.25;	author mike;	state Exp;
branches;
next	9.7;

9.7
date	91.01.04.21.38.18;	author mike;	state Exp;
branches;
next	9.6;

9.6
date	90.12.19.04.59.48;	author phil;	state Exp;
branches;
next	9.5;

9.5
date	90.11.07.13.42.37;	author phil;	state Exp;
branches;
next	9.4;

9.4
date	90.11.03.15.43.17;	author mike;	state Exp;
branches;
next	9.3;

9.3
date	89.09.01.01.29.48;	author phil;	state Exp;
branches;
next	9.2;

9.2
date	89.07.27.03.58.26;	author mike;	state Exp;
branches;
next	9.1;

9.1
date	89.05.19.05.47.27;	author mike;	state Rel3_5;
branches;
next	8.5;

8.5
date	89.05.13.04.11.47;	author phil;	state Exp;
branches;
next	8.4;

8.4
date	89.03.01.03.40.38;	author mike;	state Exp;
branches;
next	8.3;

8.3
date	89.03.01.03.34.38;	author mike;	state Exp;
branches;
next	8.2;

8.2
date	89.02.27.01.26.39;	author phil;	state Exp;
branches;
next	8.1;

8.1
date	88.10.05.00.27.16;	author mike;	state Rel3_0;
branches;
next	7.6;

7.6
date	88.09.17.06.08.18;	author mike;	state Exp;
branches;
next	7.5;

7.5
date	88.09.10.06.35.59;	author stay;	state Exp;
branches;
next	7.4;

7.4
date	88.09.09.23.02.08;	author phil;	state Exp;
branches;
next	7.3;

7.3
date	88.07.14.21.04.36;	author phil;	state Exp;
branches;
next	7.2;

7.2
date	88.01.15.07.57.59;	author stay;	state Exp;
branches;
next	7.1;

7.1
date	87.11.02.23.25.59;	author mike;	state Rel;
branches;
next	6.2;

6.2
date	87.09.03.01.05.14;	author mike;	state Exp;
branches;
next	6.1;

6.1
date	87.07.11.07.51.04;	author mike;	state Rel;
branches;
next	5.1;

5.1
date	87.06.24.21.51.01;	author mike;	state Rel;
branches;
next	4.2;

4.2
date	87.02.12.22.06.09;	author mike;	state Exp;
branches;
next	4.1;

4.1
date	86.12.29.03.42.19;	author mike;	state Rel1;
branches;
next	1.14;

1.14
date	86.12.20.05.00.35;	author mike;	state Exp;
branches;
next	1.13;

1.13
date	86.11.28.20.28.52;	author phil;	state Exp;
branches;
next	1.12;

1.12
date	86.11.18.12.31.31;	author mike;	state Exp;
branches;
next	1.11;

1.11
date	86.11.14.23.22.02;	author mike;	state Exp;
branches;
next	1.10;

1.10
date	86.10.29.01.51.19;	author phil;	state Exp;
branches;
next	1.9;

1.9
date	86.10.28.18.31.00;	author phil;	state Exp;
branches;
next	1.8;

1.8
date	86.10.27.18.56.42;	author phil;	state Exp;
branches;
next	1.7;

1.7
date	86.10.25.10.46.33;	author phil;	state Exp;
branches;
next	1.6;

1.6
date	86.10.22.21.59.44;	author phil;	state Exp;
branches;
next	1.5;

1.5
date	86.10.12.01.03.38;	author mike;	state Exp;
branches;
next	1.4;

1.4
date	86.10.10.23.52.04;	author phil;	state Exp;
branches;
next	1.3;

1.3
date	86.10.06.21.29.21;	author mike;	state Exp;
branches;
next	1.2;

1.2
date	86.10.03.06.34.04;	author mike;	state Exp;
branches;
next	1.1;

1.1
date	86.10.02.02.17.08;	author mike;	state Exp;
branches;
next	;

11.14.2.1
date	2002.09.19.18.01.18;	author morrison;	state Exp;
branches;
next	11.14.2.2;

11.14.2.2
date	2004.03.17.21.16.59;	author morrison;	state Exp;
branches;
next	;

11.14.4.1
date	2002.09.26.23.03.54;	author morrison;	state Exp;
branches;
next	11.14.4.2;

11.14.4.2
date	2004.03.11.23.42.06;	author morrison;	state Exp;
branches;
next	;

11.14.10.1
date	2004.02.12.19.48.11;	author erikg;	state Exp;
branches;
next	11.14.10.2;

11.14.10.2
date	2004.03.15.14.06.19;	author erikg;	state Exp;
branches;
next	11.14.10.3;

11.14.10.3
date	2004.03.18.18.10.28;	author erikg;	state Exp;
branches;
next	;


desc
@Generic FB routines
@


11.19
log
@moved to src/
@
text
@/*
 *			F B _ G E N E R I C
 *
 *  Authors -
 *	Phil Dykstra
 *	Gary S. Moss
 *	Michael John Muuss
 *
 *  Source -
 *	SECAD/VLD Computing Consortium, Bldg 394
 *	The U. S. Army Ballistic Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5066
 *  
 *  Copyright Notice -
 *	This software is Copyright (C) 1986-2004 by the United States Army.
 *	All rights reserved.
 */
#ifndef lint
static const char RCSid[] = "@@(#)$Header: /n/xoff/cvs/brlcad/libfb/fb_generic.c,v 11.18 2004/05/10 15:30:44 erikg Exp $ (BRL)";
#endif

#ifdef HAVE_CONFIG_H
# include "config.h"
#endif



#include <stdio.h>
#ifdef USE_STRING_H
#include <string.h>
#else
#include <strings.h>
#endif

#include "machine.h"
#include "externs.h"
#include "fb.h"
#include "./fblocal.h"

static int fb_totally_numeric(register char *s);

/*
 * Disk interface enable flag.  Used so the the remote daemon
 * can turn off the disk interface.
 */
int _fb_disk_enable = 1;

/*
 *		f b _ n u l l
 *
 *  Filler for FBIO function slots not used by a particular device
 */
int fb_null(FBIO *ifp)
{
	return	0;
}

/*
 *			F B _ N U L L _ S E T C U R S O R
 *
 *  Used by if_*.c routines that don't have programmable cursor patterns.
 */
int fb_null_setcursor(FBIO *ifp, const unsigned char *bits, int xbits, int ybits, int xorig, int yorig)
{
	return	0;
}

#ifdef IF_REMOTE
extern FBIO remote_interface;	/* not in list[] */
#endif

#ifdef IF_ADAGE
extern FBIO adage_interface;
#endif
#ifdef IF_SUN
extern FBIO sun_interface;
#endif
#if defined(IF_SGI) || defined(IF_4D)
extern FBIO sgi_interface;
#endif
/* Carl Nuzman experimental version */
#ifdef IF_OGL
extern FBIO ogl_interface;
#endif
#ifdef IF_RAT
extern FBIO rat_interface;
#endif
#ifdef IF_UG
extern FBIO ug_interface;
#endif
#ifdef IF_X
#ifndef WIN32 
extern FBIO X24_interface;
extern FBIO X_interface;
#endif
#endif
#ifdef IF_PTTY
extern FBIO ptty_interface;
#endif
#ifdef IF_AB
extern FBIO abekas_interface;
#endif
#ifdef IF_TS
extern FBIO ts_interface;
#endif

/* Always included */
extern FBIO debug_interface, disk_interface, stk_interface;
extern FBIO memory_interface, null_interface;

/* First element of list is default device when no name given */
static
FBIO *_if_list[] = {
#ifdef IF_ADAGE
	&adage_interface,
#endif
#ifdef IF_SUN
	&sun_interface,
#endif
#if defined(IF_SGI) || defined(IF_4D) || defined(IF_5D)
	&sgi_interface,
#endif
/* Carl Nuzman experimental version */
#ifdef IF_OGL
	&ogl_interface,
#endif
#ifdef IF_RAT
	&rat_interface,
#endif
#ifdef IF_UG
	&ug_interface,
#endif
#ifdef IF_X
#ifndef WIN32
	&X24_interface,
	&X_interface,
#endif
#endif

	&debug_interface,
/* never get any of the following by default */
#ifdef IF_AB
	&abekas_interface,
#endif
#ifdef IF_TS
	&ts_interface,
#endif
#ifdef IF_PTTY
	&ptty_interface,
#endif
	&stk_interface,
	&memory_interface,
	&null_interface,
	(FBIO *) 0
};

/*
 *			F B _ O P E N
 */
FBIO *
fb_open(char *file, int width, int height)
{
	register FBIO	*ifp;
	int	i;

	if( width < 0 || height < 0 )
		return	FBIO_NULL;

	if( (ifp = (FBIO *) calloc( sizeof(FBIO), 1 )) == FBIO_NULL ) {
		Malloc_Bomb( sizeof(FBIO) );
		return	FBIO_NULL;
	}
	if( file == NULL || *file == '\0' )  {
		/* No name given, check environment variable first.	*/
		if( (file = getenv( "FB_FILE" )) == NULL || *file == '\0' )  {
			/* None set, use first device as default */
			*ifp = *(_if_list[0]);	/* struct copy */
			file = ifp->if_name;
			goto found_interface;
		}
	}
	/*
	 *  Determine what type of hardware the device name refers to.
	 *
	 *  "file" can in general look like: hostname:/pathname/devname#
	 *  If we have a ':' assume the remote interface
	 *    (We don't check to see if it's us. Good for debugging.)
	 *  else strip out "/path/devname" and try to look it up in the
	 *    device array.  If we don't find it assume it's a file.
	 */
	i = 0;
	while( _if_list[i] != (FBIO *)NULL ) {
		if( strncmp( file, _if_list[i]->if_name,
		    strlen(_if_list[i]->if_name) ) == 0 ) {
		    	/* found it, copy its struct in */
			*ifp = *(_if_list[i]);
			goto found_interface;
		}
		i++;
	}
	/* Not in list, check special interfaces or disk files */
	/* "/dev/" protection! */
	if( strncmp(file, "/dev/", 5) == 0 ) {
		fb_log(	"fb_open: no such device \"%s\".\n", file );
		free( (void *) ifp );
		return	FBIO_NULL;
	}
#ifdef IF_REMOTE
	if( fb_totally_numeric(file) || strchr( file, ':' ) != NULL ) {
		/* We have a remote file name of the form <host>:<file>
		 * or a port number (which assumes localhost) */
		*ifp = remote_interface;
		goto found_interface;
	}
#endif /* IF_REMOTE */
	/* Assume it's a disk file */
	if( _fb_disk_enable ) {
		*ifp = disk_interface;
	} else {
		fb_log(	"fb_open: no such device \"%s\".\n", file );
		free( (void *) ifp );
		return	FBIO_NULL;
	}

found_interface:
	/* Copy over the name it was opened by. */
	if( (ifp->if_name = malloc( (unsigned) strlen( file ) + 1 ))
	    == (char *) NULL
	    )
	{
		Malloc_Bomb( strlen( file ) + 1 );
		free( (void *) ifp );
		return	FBIO_NULL;
	}
	(void) strcpy( ifp->if_name, file );

	/* Mark OK by filling in magic number */
	ifp->if_magic = FB_MAGIC;

	if( (i=(*ifp->if_open)( ifp, file, width, height )) <= -1 )  {
		fb_log(	"fb_open: can not open device \"%s\", ret=%d.\n",
			file, i );
		ifp->if_magic = 0;		/* sanity */
		free( (void *) ifp->if_name );
		free( (void *) ifp );
		return	FBIO_NULL;
	}
	return	ifp;
}

int
fb_close(FBIO *ifp)
{
	int	i;

	FB_CK_FBIO(ifp);
	_fb_pgflush( ifp );
	if( (i=(*ifp->if_close)( ifp )) <= -1 )  {
		fb_log(	"fb_close: can not close device \"%s\", ret=%d.\n",
			ifp->if_name, i );
		return	-1;
	}
	if( ifp->if_pbase != PIXEL_NULL )
		free( (void *) ifp->if_pbase );
	free( (void *) ifp->if_name );
	free( (void *) ifp );
	return	0;
}

/*
 *  Generic Help.
 *  Print out the list of available frame buffers.
 */
int
fb_genhelp(void)
{
	int	i;

	i = 0;
	while( _if_list[i] != (FBIO *)NULL ) {
		fb_log( "%-12s  %s\n",
			_if_list[i]->if_name,
			_if_list[i]->if_type );
		i++;
	}

	/* Print the ones not in the device list */
#ifdef IF_REMOTE
	fb_log( "%-12s  %s\n",
		remote_interface.if_name,
		remote_interface.if_type );
#endif
	if( _fb_disk_enable ) {
		fb_log( "%-12s  %s\n",
			disk_interface.if_name,
			disk_interface.if_type );
	}

	return	0;
}

/* True if the non-null string s is all digits */
static int
fb_totally_numeric(register char *s)
{
	if( s == (char *)0 || *s == 0 )
		return	0;

	while( *s ) {
		if( *s < '0' || *s > '9' )
			return 0;
		s++;
	}

	return 1;
}

/*
 *			F B _ I S _ L I N E A R _ C M A P
 *
 *  Check for a color map being linear in the upper 8 bits of
 *  R, G, and B.
 *  Returns 1 for linear map, 0 for non-linear map
 *  (ie, non-identity map).
 */
int
fb_is_linear_cmap(register const ColorMap *cmap)
{
	register int i;

	for( i=0; i<256; i++ )  {
		if( cmap->cm_red[i]>>8 != i )  return(0);
		if( cmap->cm_green[i]>>8 != i )  return(0);
		if( cmap->cm_blue[i]>>8 != i )  return(0);
	}
	return(1);
}

/*
 *			F B _ M A K E _ L I N E A R _ C M A P
 */
void
fb_make_linear_cmap(register ColorMap *cmap)
{
	register int i;

	for( i=0; i<256; i++ )  {
		cmap->cm_red[i] = i<<8;
		cmap->cm_green[i] = i<<8;
		cmap->cm_blue[i] = i<<8;
	}
}
@


11.18
log
@change conf.h to a wrapped config.h
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/libfb/fb_generic.c,v 11.17 2004/04/05 07:44:42 morrison Exp $ (BRL)";
@


11.17
log
@merge of ansi-6-0-branch into HEAD
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
d22 5
a26 1
#include "conf.h"
@


11.16
log
@merge of windows-6-0-branch into head
@
text
@d36 1
a36 1
static int fb_totally_numeric();
d49 1
a49 2
int fb_null(ifp)
FBIO *ifp;
d59 1
a59 5
int fb_null_setcursor(ifp, bits, xbits, ybits, xorig, yorig )
FBIO		*ifp;
const unsigned char	*bits;
int		xbits, ybits;
int		xorig, yorig;
d157 1
a157 3
fb_open( file, width, height )
char	*file;
int	width, height;
d248 1
a248 2
fb_close( ifp )
FBIO	*ifp;
d271 1
a271 1
fb_genhelp()
d300 1
a300 2
fb_totally_numeric( s )
register char *s;
d323 1
a323 2
fb_is_linear_cmap(cmap)
register const ColorMap	*cmap;
d339 1
a339 2
fb_make_linear_cmap(cmap)
register ColorMap	*cmap;
@


11.15
log
@update copyright to include span through 2003
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libfb/fb_generic.c,v 11.14 2002/08/20 17:07:45 jra Exp $ (BRL)";
d93 1
d97 1
d135 1
d138 1
@


11.14
log
@Restoration of entire source tree to Pre-Hartley state
@
text
@d15 1
a15 1
 *	This software is Copyright (C) 1986 by the United States Army.
d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libfb/fb_generic.c,v 11.12 2001/04/20 22:29:12 morrison Exp $ (BRL)";
@


11.14.10.1
log
@merge from HEAD
@
text
@d15 1
a15 1
 *	This software is Copyright (C) 1986-2004 by the United States Army.
d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libfb/fb_generic.c,v 11.15 2004/02/02 17:39:08 morrison Exp $ (BRL)";
@


11.14.10.2
log
@merge from head
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libfb/fb_generic.c,v 11.14.10.1 2004/02/12 19:48:11 erikg Exp $ (BRL)";
@


11.14.10.3
log
@merge from head
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
a92 1
#ifndef WIN32 
a95 1
#endif
a132 1
#ifndef WIN32
a134 1
#endif
@


11.14.4.1
log
@Modifications (on a 6.0 source distribution) for initial port to windows (merged with sources close to 6.0.2)
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libfb/fb_generic.c,v 11.14 2002/08/20 17:07:45 jra Exp $ (BRL)";
a92 1
#ifndef WIN32 
a95 1
#endif
a132 1
#ifndef WIN32
a134 1
#endif
@


11.14.4.2
log
@sync to HEAD...
@
text
@d15 1
a15 1
 *	This software is Copyright (C) 1986-2004 by the United States Army.
d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /n/cad/c/CVS/brlcad/libfb/fb_generic.c,v 11.14.4.1 2002/09/26 23:03:54 morrison Exp $ (BRL)";
@


11.14.2.1
log
@Initial ANSIfication
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libfb/fb_generic.c,v 11.14 2002/08/20 17:07:45 jra Exp $ (BRL)";
d36 1
a36 1
static int fb_totally_numeric(register char *s);
d49 2
a50 1
int fb_null(FBIO *ifp)
d60 5
a64 1
int fb_null_setcursor(FBIO *ifp, const unsigned char *bits, int xbits, int ybits, int xorig, int yorig)
d158 3
a160 1
fb_open(char *file, int width, int height)
d251 2
a252 1
fb_close(FBIO *ifp)
d275 1
a275 1
fb_genhelp(void)
d304 2
a305 1
fb_totally_numeric(register char *s)
d328 2
a329 1
fb_is_linear_cmap(register const ColorMap *cmap)
d345 2
a346 1
fb_make_linear_cmap(register ColorMap *cmap)
@


11.14.2.2
log
@sync branch with HEAD
@
text
@d15 1
a15 1
 *	This software is Copyright (C) 1986-2004 by the United States Army.
d19 1
a19 1
static const char RCSid[] = "@@(#)$Header$ (BRL)";
a87 1
#ifndef WIN32 
a90 1
#endif
a127 1
#ifndef WIN32
a129 1
#endif
@


11.13
log
@Converted from K&R to ANSI C - RFH
@
text
@d36 1
a36 1
static int fb_totally_numeric(register char *s);
d49 2
a50 1
int fb_null(FBIO *ifp)
d60 5
a64 1
int fb_null_setcursor(FBIO *ifp, const unsigned char *bits, int xbits, int ybits, int xorig, int yorig)
d158 3
a160 1
fb_open(char *file, int width, int height)
d251 2
a252 1
fb_close(FBIO *ifp)
d275 1
a275 1
fb_genhelp(void)
d304 2
a305 1
fb_totally_numeric(register char *s)
d328 2
a329 1
fb_is_linear_cmap(register const ColorMap *cmap)
d345 2
a346 1
fb_make_linear_cmap(register ColorMap *cmap)
@


11.12
log
@CONST to const
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libfb/fb_generic.c,v 11.11 2000/07/12 01:33:30 cjohnson Exp $ (BRL)";
d36 1
a36 1
static int fb_totally_numeric();
d49 1
a49 2
int fb_null(ifp)
FBIO *ifp;
d59 1
a59 5
int fb_null_setcursor(ifp, bits, xbits, ybits, xorig, yorig )
FBIO		*ifp;
const unsigned char	*bits;
int		xbits, ybits;
int		xorig, yorig;
d153 1
a153 3
fb_open( file, width, height )
char	*file;
int	width, height;
d244 1
a244 2
fb_close( ifp )
FBIO	*ifp;
d267 1
a267 1
fb_genhelp()
d296 1
a296 2
fb_totally_numeric( s )
register char *s;
d319 1
a319 2
fb_is_linear_cmap(cmap)
register const ColorMap	*cmap;
d335 1
a335 2
fb_make_linear_cmap(cmap)
register ColorMap	*cmap;
@


11.11
log
@LINT from gcc -Wall.  Including some mods to h/pkg.h
@
text
@d19 1
a19 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libfb/fb_generic.c,v 11.10 1999/06/02 17:20:01 mike Exp $ (BRL)";
d62 1
a62 1
CONST unsigned char	*bits;
d329 1
a329 1
register CONST ColorMap	*cmap;
@


11.10
log
@
The X11 interface is good enough that we should prefer it over debug,
if nothing is specified.
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libfb/fb_generic.c,v 11.9 1997/09/23 21:36:46 bparker Exp $ (BRL)";
@


11.9
log
@*** empty log message ***
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/libfb/RCS/fb_generic.c,v 11.8 1995/06/30 14:42:04 cnuzman Exp bparker $ (BRL)";
a131 2
	&debug_interface,
/* never get any of the following by default */
d136 3
@


11.8
log
@opengl libfb turned on
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/libfb/RCS/fb_generic.c,v 11.7 1995/06/23 20:24:11 cnuzman Exp cnuzman $ (BRL)";
d83 1
a83 1
#if defined(IF_5D) && 1
d123 1
a123 1
#if defined(IF_5D) && 1
@


11.7
log
@if statement for experimental version
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/libfb/RCS/fb_generic.c,v 11.6 1995/06/16 15:39:06 butler Exp cnuzman $ (BRL)";
d83 1
a83 1
#if defined(IF_5D) && 0
d123 1
a123 1
#if defined(IF_5D) && 0
@


11.6
log
@removed ogl_interface so things would compile/link
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/libfb/RCS/fb_generic.c,v 11.5 1995/06/13 17:09:14 cnuzman Exp butler $ (BRL)";
d82 3
a84 2
#ifdef IF_5D
/* extern FBIO ogl_interface; */
d122 3
a124 2
#ifdef IF_5D
/*	&ogl_interface, */
@


11.5
log
@working on OpenGL framebuffer support
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/libfb/RCS/fb_generic.c,v 11.4 1995/04/25 18:40:16 jra Exp cnuzman $ (BRL)";
d83 1
a83 1
extern FBIO ogl_interface;
d122 1
a122 1
	&ogl_interface,
@


11.4
log
@Removed sg6_interface.
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/libfb/RCS/fb_generic.c,v 11.3 1995/01/09 13:29:46 cnuzman Exp jra $ (BRL)";
d79 1
a79 1
#if defined(IF_SGI) || defined(IF_4D) || defined(IF_5D)
d82 3
d120 3
@


11.3
log
@*** empty log message ***
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /n/wolf/m/cad/libfb/RCS/fb_generic.c,v 11.2 1995/01/05 20:29:51 cnuzman Exp cnuzman $ (BRL)";
d79 1
a79 1
#if defined(IF_SGI) || defined(IF_4D)
a81 3
#ifdef IF_5D
extern FBIO sg6_interface;
#endif
d115 1
a115 1
#if defined(IF_SGI) || defined(IF_4D)
a116 3
#endif
#ifdef IF_5D
	&sg6_interface,
@


11.2
log
@added if_5d
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /n/wolf/m/cad/libfb/RCS/fb_generic.c,v 11.1 1995/01/04 09:52:29 mike Rel4_4 cnuzman $ (BRL)";
d79 1
a79 1
#if defined(IF_SGI) || defined(IF_4D) || defined(IF_5D)
d82 3
d118 1
a118 1
#if defined(IF_SGI) || defined(IF_4D) || defined(IF_5D)
d120 3
@


11.1
log
@Release_4.4
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/libfb/RCS/fb_generic.c,v 10.6 94/11/18 20:56:33 mike Exp $ (BRL)";
d79 1
a79 1
#if defined(IF_SGI) || defined(IF_4D)
d115 1
a115 1
#if defined(IF_SGI) || defined(IF_4D)
@


10.6
log
@Added linkage for 24-bit X support
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/libfb/RCS/fb_generic.c,v 10.5 94/08/09 12:56:19 gdurf Exp Locker: mike $ (BRL)";
@


10.5
log
@Factored ifdefs
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/libfb/RCS/fb_generic.c,v 10.4 1993/09/25 08:51:52 mike Exp gdurf $ (BRL)";
d89 1
d125 1
a125 1
/* never get the following by default */
d127 1
@


10.4
log
@Sprinkled in another CONST to season.
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/libfb/RCS/fb_generic.c,v 10.3 93/09/25 08:39:06 mike Exp Locker: mike $ (BRL)";
d22 2
d25 3
a27 2

#ifdef BSD
a28 2
#else
#include <string.h>
@


10.3
log
@Added fb_null_setcursor(), for ANSI C purposes.
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/libfb/RCS/fb_generic.c,v 10.2 93/07/20 22:27:33 mike Exp Locker: mike $ (BRL)";
d317 1
a317 1
register ColorMap	*cmap;
@


10.2
log
@Made fb_null() take ifp.
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/libfb/RCS/fb_generic.c,v 10.1 91/10/12 06:37:12 mike Rel4_0 $ (BRL)";
d50 14
@


10.1
log
@Release_4.0
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/libfb/RCS/fb_generic.c,v 9.11 91/07/26 22:40:25 mike Exp $ (BRL)";
d48 2
a49 1
int fb_null()
@


9.11
log
@Added if_magic field, and FB_CK_FBIO() macro, to allow checking
FBIO pointers
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/libfb/RCS/fb_generic.c,v 9.10 91/06/22 22:24:58 mike Exp $ (BRL)";
@


9.10
log
@Added check for negative size opens.
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/libfb/RCS/fb_generic.c,v 9.9 91/06/12 21:12:16 mike Exp $ (BRL)";
d209 3
d215 1
d229 1
@


9.9
log
@lint
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/libfb/RCS/fb_generic.c,v 9.8 91/01/08 22:58:25 mike Exp $ (BRL)";
d127 3
d137 3
@


9.8
log
@Expanded error messages
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/libfb/RCS/fb_generic.c,v 9.7 91/01/04 21:38:18 mike Exp $ (BRL)";
d30 2
a34 1
extern char *getenv();
@


9.7
log
@Modified to handle errors less than -1
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/libfb/RCS/fb_generic.c,v 9.6 90/12/19 04:59:48 phil Exp $ (BRL)";
d202 3
a204 2
	if( (*ifp->if_open)( ifp, file, width, height ) <= -1 )  {
		fb_log(	"fb_open: can not open device \"%s\".\n", file );
d216 2
d219 3
a221 2
	if( (*ifp->if_close)( ifp ) <= -1 )  {
		fb_log(	"fb_close: can not close device \"%s\".\n", ifp->if_name );
@


9.6
log
@Added IF_TS
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/libfb/RCS/fb_generic.c,v 9.5 90/11/07 13:42:37 phil Exp $ (BRL)";
d202 1
a202 1
	if( (*ifp->if_open)( ifp, file, width, height ) == -1 )  {
d216 1
a216 1
	if( (*ifp->if_close)( ifp ) == -1 )  {
@


9.5
log
@Changed fb_make_linear_colormap() to fb_make_linear_cmap()
[fb_is_linear_cmap() was already named this way]
Changed _disk_enable to _fb_disk_enable.
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/libfb/RCS/fb_generic.c,v 9.4 90/11/03 15:43:17 mike Exp $ (BRL)";
d80 3
d113 3
@


9.4
log
@Added fb_is_linear_colormap() and fb_make_linear_colormap().
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: /m/cad/libfb/RCS/fb_generic.c,v 9.3 89/09/01 01:29:48 phil Exp $ (BRL)";
d40 1
a40 1
int _disk_enable = 1;
d176 1
a176 1
	if( _disk_enable ) {
d244 1
a244 1
	if( _disk_enable ) {
d293 1
a293 1
 *			F B _ M A K E _ L I N E A R _ C O L O R M A P
d296 1
a296 1
fb_make_linear_colormap(cmap)
@


9.3
log
@Added memory and null devices, "/dev/" prefix protection, new port
number syntax on remote open, [d]open and [d]close name change,
fb_flush change.
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: fb_generic.c,v 9.2 89/07/27 03:58:26 phil Locked $ (BRL)";
d34 1
a34 1
static int totally_numeric();
d168 1
a168 1
	if( totally_numeric(file) || strchr( file, ':' ) != NULL ) {
d255 1
a255 1
totally_numeric( s )
d268 38
@


9.2
log
@Added Abekas A60 support
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: fb_generic.c,v 9.1 89/05/19 05:47:27 mike Locked $ (BRL)";
d34 1
d78 1
a78 1
extern FBIO	abekas_interface;
d83 1
d115 2
d161 6
d168 3
a170 2
	if( strchr( file, ':' ) != NULL ) {
		/* We have a remote file name of the form <host>:<file>.*/
d179 1
a179 1
		fb_log(	"fb_open : no such device \"%s\".\n", file );
d196 2
a197 2
	if( (*ifp->if_dopen)( ifp, file, width, height ) == -1 )  {
		fb_log(	"fb_open : can not open device \"%s\".\n", file );
d209 3
a211 3
	fb_flush( ifp );
	if( (*ifp->if_dclose)( ifp ) == -1 )  {
		fb_log(	"Can not close device \"%s\".\n", ifp->if_name );
d251 17
@


9.1
log
@Release_3.5
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: fb_generic.c,v 8.5 89/05/13 04:11:47 phil Exp $ (BRL)";
d76 3
d105 3
@


8.5
log
@made fb_null take a void argument list for prototyping simplicity
(should probably really be varargs...)
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: fb_generic.c,v 8.4 89/03/01 03:40:38 phil Locked $ (BRL)";
@


8.4
log
@Oops, 2 places...
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: fb_generic.c,v 8.3 89/03/01 03:34:38 mike Locked $ (BRL)";
d46 1
a46 2
int fb_null( ifp )
FBIO *ifp;
@


8.3
log
@All SGI interfaces are now called "sgi_interface".
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: fb_generic.c,v 8.2 89/02/27 01:26:39 phil Exp $ (BRL)";
d90 1
a90 1
#ifdef IF_SGI
a91 6
#endif
#ifdef IF_4D
	&mips_interface,
#endif
#ifdef IF_GT
	& gt_interface,
@


8.2
log
@#endif /* comment */
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: fb_generic.c,v 8.1 88/10/05 00:27:16 phil Locked $ (BRL)";
d62 1
a62 1
#ifdef IF_SGI
a63 6
#endif
#ifdef IF_4D
extern FBIO mips_interface;
#endif
#ifdef IF_GT
extern FBIO gt_interface;
@


8.1
log
@Release_3.0
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: fb_generic.c,v 7.6 88/09/17 06:08:18 mike Exp $ (BRL)";
d170 1
a170 1
#endif IF_REMOTE
@


7.6
log
@Removed unused #include of <ctype.h>, for ardent.
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: fb_generic.c,v 7.5 88/09/10 06:35:59 mike Locked $ (BRL)";
@


7.5
log
@Added Silicon Graphics 4D GT support
which has real zoom and pan (finally) this is
considerably different than the regular 4D support.
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: fb_generic.c,v 7.4 88/09/09 23:02:08 stay Locked $ (BRL)";
d23 1
a23 1
#include <ctype.h>
@


7.4
log
@added fb_genhelp()
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: fb_generic.c,v 7.3 88/07/14 21:04:36 phil Exp $ (BRL)";
d68 3
d101 3
@


7.3
log
@added IF_X and IF_STACK hooks.  IF_PTTY is no longer a special case.
Devices are now selected by *prefix* (i.e. a non-alpha magic cookie
terminator is no longer needed).
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: fb_generic.c,v 7.2 88/01/15 07:57:59 phil Locked $ (BRL)";
d208 32
@


7.2
log
@ADded SGI clover
version. (4D/60T)
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: fb_generic.c,v 7.1 87/11/02 23:25:59 stay Locked $ (BRL)";
a54 3
#ifdef IF_PTTY
extern FBIO ptty_interface;	/* not in list[] */
#endif
d74 6
d81 2
a82 1
extern FBIO debug_interface, disk_interface;	/* Always included */
d106 8
a116 2
#define	DEVNAMLEN	80

d121 1
a121 1
{	
a123 2
	char	*cp;
	char	devnambuf[DEVNAMLEN+1];
d139 1
a139 1
	 * Determine what type of hardware the device name refers to.
d147 11
d159 1
a159 1
	if( (cp = strchr( file, ':' )) != NULL ) {
d165 7
a171 32
	cp = file;
	i = 0;
	while( *cp != NULL && !isdigit(*cp) && i < DEVNAMLEN ) {
		devnambuf[ i++ ] = *cp++;
	}
	devnambuf[i] = 0;

#ifdef IF_PTTY
	if( strncmp( devnambuf, "/dev/tty", 8 ) == 0 && devnambuf[8] != '\0' ) {
		/* We have a UNIX pseudo-tty presumably (tty[pqr]*).	*/
		*ifp = ptty_interface;
		goto found_interface;
	}
#endif IF_PTTY

	i = 0;
	while( _if_list[i] != (FBIO *)NULL ) {
		if( strcmp( &devnambuf[0], _if_list[i]->if_name ) == 0 )
			break;
		i++;
	}
	if( _if_list[i] != (FBIO *)NULL )
		*ifp = *(_if_list[i]);
	else {
		/* Assume it's a disk file */
		if( _disk_enable ) {
			*ifp = disk_interface;
		} else {
			fb_log(	"fb_open : no such device \"%s\".\n", file );
			free( (void *) ifp );
			return	FBIO_NULL;
		}
@


7.1
log
@Release 2.3
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: fb_generic.c,v 6.2 87/09/03 01:05:14 mike Exp $ (BRL)";
d68 3
d91 3
@


6.2
log
@Added Ultra Graphics device
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: fb_generic.c,v 6.1 87/07/11 07:51:04 mike Rel $ (BRL)";
@


6.1
log
@Release 2.0
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: fb_generic.c,v 5.1 87/06/24 21:51:01 mike Rel $ (BRL)";
d71 3
d91 3
@


5.1
log
@Release 1.24
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: fb_generic.c,v 4.2 87/02/12 22:06:09 mike Exp $ (BRL)";
@


4.2
log
@Release 1.20 -- First Formal Release
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: fb_generic.c,v 4.1 86/12/29 03:42:19 mike Rel1 $ (BRL)";
@


4.1
log
@BRL CAD Distribution Release 1.10
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: fb_generic.c,v 1.14 86/12/20 05:00:35 mike Exp $ (BRL)";
@


1.14
log
@Do default if given pointer to null as well as null pointer.
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: fb_generic.c,v 1.13 86/11/28 20:28:52 phil Exp $ (BRL)";
@


1.13
log
@removed default width/height code (now in if_ modules)
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: fb_generic.c,v 1.12 86/11/18 12:31:31 phil Locked $ (BRL)";
d109 1
a109 1
	if( file == NULL )  {
d111 1
a111 1
		if( (file = getenv( "FB_FILE" )) == NULL )  {
@


1.12
log
@Eliminated sgiw_interface.
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: fb_generic.c,v 1.11 86/11/14 23:22:02 mike Locked $ (BRL)";
a178 6

	/* set default width/height */
	if( width == 0 )
		width = ifp->if_width;
	if( height == 0 )
		height = ifp->if_height;
@


1.11
log
@Added sgiw_interface
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: fb_generic.c,v 1.10 86/10/29 01:51:19 mike Locked $ (BRL)";
d66 1
a66 1
extern FBIO sgi_interface, sgiw_interface;
a83 1
	&sgiw_interface,
@


1.10
log
@made fb_close call fb_flush first.
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: fb_generic.c,v 1.9 86/10/28 18:31:00 phil Locked $ (BRL)";
d66 1
a66 1
extern FBIO sgi_interface;
d84 1
@


1.9
log
@changed of plans: removed _fb_debug.
calloc FBIO struct, updated comment.
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: fb_generic.c,v 1.8 86/10/27 18:56:42 phil Locked $ (BRL)";
d199 1
@


1.8
log
@Added _fb_debug flag.
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: fb_generic.c,v 1.7 86/10/25 10:46:33 phil Locked $ (BRL)";
a41 7
 * Debug flag.  Needed globally so debug interface can catch the
 * buffered IO calls as well.  This is a level: the higher the
 * value the more verbose it is.
 */
int _fb_debug = 0;

/*
d105 1
a105 1
	if( (ifp = (FBIO *) malloc( sizeof(FBIO) )) == FBIO_NULL )  {
d123 2
a124 2
	 *    (should we check to see if it's us? XXX)
	 *  else strip out "devname" and try to look it up in the
a125 2
	 *
	 * XXX - devname can match a magic cookie regardless of pathname.
@


1.7
log
@removed shared fast DMA code
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: fb_generic.c,v 1.6 86/10/22 21:59:44 phil Locked $ (BRL)";
d40 7
@


1.6
log
@disk interface disable flag.
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: fb_generic.c,v 1.5 86/10/12 01:03:38 phil Locked $ (BRL)";
a208 28
	return	0;
}

/*	f a s t _ d m a _ b g
	Clear the frame buffer to the background color.
 */
int
fb_fast_dma_bg( ifp, bpp )
register FBIO	*ifp;
register Pixel	*bpp;
{	
	static Pixel	*pix_buf = NULL;
	register int	i, y, scans_per_dma;
	register Pixel	*pix_to;
	if( pix_buf == NULL )
		if( (pix_buf = (Pixel *) malloc(MAX_BYTES_DMA)) == PIXEL_NULL )
		{
			Malloc_Bomb(MAX_BYTES_DMA);
			return	-1;
		}
	/* Fill buffer with background color.				*/
	for( i = 0, pix_to = pix_buf; i < MAX_PIXELS_DMA; ++i )
		*pix_to++ = *bpp;
	/* Send until frame buffer is full.				*/
	scans_per_dma = MAX_PIXELS_DMA / ifp->if_width;
	for( y = ifp->if_height-1; y > 0; y -= scans_per_dma )
		if( fb_write( ifp, 0, y, pix_buf, (long) MAX_PIXELS_DMA	) == -1 )
			return	-1;
@


1.5
log
@Changed IF_REMOTE to hand host+path to if_remote open.
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: fb_generic.c,v 1.4 86/10/10 23:52:04 mike Locked $ (BRL)";
d36 6
d160 8
a167 1
		*ifp = disk_interface;
@


1.4
log
@Forced all interface routines to be given a /dev/xxx path,
to make regular files unambiguous.
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: fb_generic.c,v 1.3 86/10/06 21:29:21 phil Locked $ (BRL)";
a125 1
		file = cp+1;
@


1.3
log
@Improved comment.
@
text
@d19 1
a19 1
static char RCSid[] = "@@(#)$Header: fb_generic.c,v 1.2 86/10/03 06:34:04 mike Exp $ (BRL)";
d23 4
d28 1
a28 1
#include <ctype.h>
d119 1
a119 1
	 *    device array.  If we don't find it assume it's a file?
d131 1
a131 5
	/* NOTE: we are assuming no host names at this point		*/
	if( (cp = strrchr( file, '/' )) == NULL )
		cp = file;
	else
		cp++;	/* start just past the slash			*/
d139 1
a139 1
	if( strncmp( devnambuf, "tty", 3 ) == 0 && devnambuf[3] != '\0' ) {
d159 1
d170 6
d177 1
a177 3
		fb_log(	"fb_open : can not open device \"%s\".\n",
		file
		    );
d222 1
a222 1
	for( y = 0; y < ifp->if_height; y += scans_per_dma )
@


1.2
log
@Working version
@
text
@d2 15
a16 13
  Author -
	Gary S. Moss

  Source -
	SECAD/VLD Computing Consortium, Bldg 394
	The U. S. Army Ballistic Research Laboratory
	Aberdeen Proving Ground, Maryland  21005-5066
  
  Copyright Notice -
	This software is Copyright (C) 1986 by the United States Army.
	All rights reserved.

	$Header: fb_generic.c,v 1.1 86/10/02 02:17:08 mike Locked $ (BRL)
d19 1
a19 1
static char RCSid[] = "@@(#)$Header: fb_generic.c,v 1.1 86/10/02 02:17:08 mike Locked $ (BRL)";
d21 1
@


1.1
log
@Initial revision
@
text
@d14 1
a14 1
	$Header$ (BRL)
d17 1
a17 1
static char RCSid[] = "@@(#)$Header$ (BRL)";
d26 2
d39 23
d67 1
a67 1
#ifdef IF_SUN		/* XXX - perhaps the default should be the first one */
a75 1
#ifdef	IF_DEBUG
a76 1
#endif
a79 9
/* Default device name.	 Very BRL specific!	*/
#if defined( vax )
#define FB_DEFAULT_NAME	"/dev/ik0l"
#else
#if defined( gould ) || defined( sel )
#define FB_DEFAULT_NAME	"vgr:/dev/ik0l"
#endif
#endif

d98 6
a103 3
		if( (file = getenv( "FB_FILE" )) == NULL )
			/* None set, use this host's default device.	*/
			file = FB_DEFAULT_NAME;
a151 1
#ifdef IF_DISK
a152 5
#else
		fb_log( "fb_open : device type \"%s\" wrong.\n", file );
		free( (void *) ifp );
		return	FBIO_NULL;
#endif IF_DISK
@
