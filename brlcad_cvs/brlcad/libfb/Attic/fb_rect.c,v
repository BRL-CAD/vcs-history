head	11.13;
access;
symbols
	ansi-20040405-merged:11.9.2.2
	postmerge-20040405-ansi:11.11
	premerge-20040404-ansi:11.10
	postmerge-autoconf:11.10
	autoconf-freeze:11.9.10.2
	premerge-autoconf:11.10
	ansi-20040316-freeze:11.9.2.1
	postmerge-20040315-windows:11.10
	premerge-20040315-windows:11.10
	windows-20040315-freeze:11.9.4.1
	autoconf-20031203:11.9
	autoconf-20031202:11.9
	autoconf-branch:11.9.0.10
	phong-branch:11.9.0.8
	photonmap-branch:11.9.0.6
	rel-6-1-DP:11.9
	windows-branch:11.9.0.4
	rel-6-0-2:11.7
	ansi-branch:11.9.0.2
	rel-6-0-1-branch:11.7.0.2
	hartley-6-0-post:11.8
	hartley-6-0-pre:11.7
	rel-6-0-1:11.7
	rel-6-0:11.7
	rel-5-4:11.5
	offsite-5-3-pre:11.6
	rel-5-3:11.5
	rel-5-2:11.5
	rel-5-1-branch:11.5.0.2
	rel-5-1:11.5
	rel-5-0:11.5
	rel-5-0-beta:11.5
	rel-4-5:11.1
	ctj-4-5-post:11.1
	ctj-4-5-pre:11.1
	rel-4-4:11.1
	rel-4-0:10.1
	rel-3-5:9.1;
locks; strict;
comment	@ * @;


11.13
date	2004.05.21.18.07.24;	author morrison;	state dead;
branches;
next	11.12;

11.12
date	2004.05.10.15.30.44;	author erikg;	state Exp;
branches;
next	11.11;

11.11
date	2004.04.05.07.44.42;	author morrison;	state Exp;
branches;
next	11.10;

11.10
date	2004.02.02.17.39.11;	author morrison;	state Exp;
branches;
next	11.9;

11.9
date	2002.08.20.17.07.46;	author jra;	state Exp;
branches
	11.9.2.1
	11.9.4.1
	11.9.10.1;
next	11.8;

11.8
date	2002.08.15.20.54.59;	author hartley;	state Exp;
branches;
next	11.7;

11.7
date	2001.04.20.22.29.12;	author morrison;	state Exp;
branches;
next	11.6;

11.6
date	2000.07.12.01.33.30;	author cjohnson;	state Exp;
branches;
next	11.5;

11.5
date	99.02.08.20.57.25;	author mike;	state Exp;
branches;
next	11.4;

11.4
date	98.08.28.21.52.34;	author mike;	state Exp;
branches;
next	11.3;

11.3
date	98.08.25.00.27.52;	author mike;	state Exp;
branches;
next	11.2;

11.2
date	98.06.27.04.29.14;	author mike;	state Exp;
branches;
next	11.1;

11.1
date	95.01.04.09.52.31;	author mike;	state Rel4_4;
branches;
next	10.3;

10.3
date	94.08.12.20.22.48;	author gdurf;	state Exp;
branches;
next	10.2;

10.2
date	93.09.25.08.35.27;	author mike;	state Exp;
branches;
next	10.1;

10.1
date	91.10.12.06.37.14;	author mike;	state Rel4_0;
branches;
next	9.1;

9.1
date	89.05.19.05.47.34;	author mike;	state Rel3_5;
branches;
next	1.1;

1.1
date	89.03.03.05.53.34;	author mike;	state Exp;
branches;
next	;

11.9.2.1
date	2002.09.19.18.01.18;	author morrison;	state Exp;
branches;
next	11.9.2.2;

11.9.2.2
date	2004.03.17.21.16.59;	author morrison;	state Exp;
branches;
next	;

11.9.4.1
date	2004.03.11.23.42.06;	author morrison;	state Exp;
branches;
next	;

11.9.10.1
date	2004.02.12.19.48.11;	author erikg;	state Exp;
branches;
next	11.9.10.2;

11.9.10.2
date	2004.03.15.14.06.19;	author erikg;	state Exp;
branches;
next	;


desc
@Generic routines to simulate handling rectangles.
@


11.13
log
@moved to src/
@
text
@/*
 *			F B _ R E C T
 *
 *  Subroutines to simulate the fb_readrect() and fb_writerect()
 *  capabilities for displays that do not presently handle it.
 *
 *  Author -
 *	Michael John Muuss
 *  
 *  Source -
 *	The U. S. Army Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5068  USA
 *  
 *  Distribution Notice -
 *	Re-distribution of this software is restricted, as described in
 *	your "Statement of Terms and Conditions for the Release of
 *	The BRL-CAD Package" license agreement.
 *
 *  Copyright Notice -
 *	This software is Copyright (C) 1997-2004 by the United States Army
 *	in all countries except the USA.  All rights reserved.
 */
#ifndef lint
static const char RCSid[] = "@@(#)$Header: /n/xoff/cvs/brlcad/libfb/fb_rect.c,v 11.12 2004/05/10 15:30:44 erikg Exp $ (ARL)";
#endif

#ifdef HAVE_CONFIG_H
# include "config.h"
#endif



#include <stdio.h>

#include "machine.h"
#include "fb.h"
#include "./fblocal.h"

/*
 *			F B _ S I M _ R E A D R E C T
 *
 *  A routine to simulate the effect of fb_readrect() when a
 *  particular display does not handle it.
 */
int
fb_sim_readrect(FBIO *ifp, int xmin, int ymin, int width, int height, unsigned char *pp)
{
	register int	y;
	register int	tot;
	int		got;

	tot = 0;
	for( y=ymin; y < ymin+height; y++ )  {
		got = fb_read( ifp, xmin, y, pp, width );
		if( got < 0 )  {
			fb_log("fb_sim_readrect() y=%d unexpected EOF\n", y);
			break;
		}
		tot += got;
		if( got != width )  {
			fb_log("fb_sim_readrect() y=%d, read of %d got %d pixels, aborting\n",
				y, width, got );
			break;
		}
		pp += width * sizeof(RGBpixel);
	}
	return(tot);
}

/*
 *			F B _ S I M _ W R I T E R E C T
 *
 *  A routine to simulate the effect of fb_writerect() when a
 *  particular display does not handle it.
 *
 *  Returns number of pixels actually written.
 *  Clipping to the screen may reduce the total if caller was sloppy.
 */
int
fb_sim_writerect(FBIO *ifp, int xmin, int ymin, int width, int height, const unsigned char *pp)
{
	register int	y;
	register int	tot;
	int		got;
	int		xlen;

	xlen = width;
	if( xmin + width > fb_getwidth(ifp) )
		xlen = fb_getwidth(ifp) - xmin;

	tot = 0;
	for( y=ymin; y < ymin+height; y++ )  {
		got = fb_write( ifp, xmin, y, pp, xlen );
		tot += got;
		if( got != xlen )  break;
		pp += width * sizeof(RGBpixel);
	}
	return(tot);
}

/*
 *			F B _ S I M _ B W R E A D R E C T
 */
#define SIMBUF_SIZE	(24*1024)
int
fb_sim_bwreadrect(FBIO *ifp, int xmin, int ymin, int width, int height, unsigned char *pp)
{
	register int	y;
	register int	tot;
	int		got;
	unsigned char	buf[SIMBUF_SIZE*3];

	if( width > SIMBUF_SIZE )  {
		fb_log("fb_sim_bwreadrect() width of %d exceeds internal buffer, aborting\n", width);
		return -SIMBUF_SIZE;	/* FAIL */
	}

	tot = 0;
	for( y=ymin; y < ymin+height; y++ )  {
		register int	x;

		got = fb_read( ifp, xmin, y, buf, width );

		/* Extract green chan */
		for( x=0; x < width; x++ )
			*pp++ = buf[x*3+GRN];

		tot += got;
		if( got != width )  break;
	}
	return tot;
}

/*
 *			F B _ S I M _ B W W R I T E R E C T
 */
int
fb_sim_bwwriterect(FBIO *ifp, int xmin, int ymin, int width, int height, const unsigned char *pp)
{
	register int	y;
	register int	tot;
	int		got;
	int		xlen;
	unsigned char	buf[SIMBUF_SIZE];

	if( width > SIMBUF_SIZE )  {
		fb_log("fb_sim_bwwriterect() width of %d exceeds internal buffer, aborting\n", width);
		return -SIMBUF_SIZE;	/* FAIL */
	}

	xlen = width;
	if( xmin + width > fb_getwidth(ifp) )
		xlen = fb_getwidth(ifp) - xmin;

	tot = 0;
	for( y=ymin; y < ymin+height; y++ )  {
		register int	x;
		register unsigned char	*bp;

		/* Copy monochrome (b&w) intensity into all three chans */
		bp = buf;
		for( x=0; x < width; x++ )  {
			register unsigned char	c = *pp++;
			bp[0] = c;
			bp[1] = c;
			bp[2] = c;
			bp += 3;
		}

		got = fb_write( ifp, xmin, y, buf, xlen );
		tot += got;
		if( got != xlen )  break;
	}
	return tot;
}
@


11.12
log
@change conf.h to a wrapped config.h
@
text
@d24 1
a24 1
static const char RCSid[] = "@@(#)$Header: /cvs/brlcad/libfb/fb_rect.c,v 11.11 2004/04/05 07:44:42 morrison Exp $ (ARL)";
@


11.11
log
@merge of ansi-6-0-branch into HEAD
@
text
@d24 1
a24 1
static const char RCSid[] = "@@(#)$Header$ (ARL)";
d27 5
a31 1
#include "conf.h"
@


11.10
log
@update copyright to include span through 2003
@
text
@d24 1
a24 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libfb/fb_rect.c,v 11.9 2002/08/20 17:07:46 jra Exp $ (ARL)";
d42 1
a42 5
fb_sim_readrect( ifp, xmin, ymin, width, height, pp )
FBIO	*ifp;
int	xmin, ymin;
int	width, height;
unsigned char	*pp;
d76 1
a76 5
fb_sim_writerect( ifp, xmin, ymin, width, height, pp )
FBIO	*ifp;
int	xmin, ymin;
int	width, height;
const unsigned char	*pp;
d102 1
a102 5
fb_sim_bwreadrect( ifp, xmin, ymin, width, height, pp )
FBIO	*ifp;
int	xmin, ymin;
int	width, height;
unsigned char	*pp;
d134 1
a134 5
fb_sim_bwwriterect( ifp, xmin, ymin, width, height, pp )
FBIO	*ifp;
int	xmin, ymin;
int	width, height;
const unsigned char	*pp;
@


11.9
log
@Restoration of entire source tree to Pre-Hartley state
@
text
@d20 1
a20 1
 *	This software is Copyright (C) 1997 by the United States Army
d24 1
a24 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libfb/fb_rect.c,v 11.7 2001/04/20 22:29:12 morrison Exp $ (ARL)";
@


11.9.4.1
log
@sync to HEAD...
@
text
@d20 1
a20 1
 *	This software is Copyright (C) 1997-2004 by the United States Army
d24 1
a24 1
static const char RCSid[] = "@@(#)$Header: /n/cad/c/CVS/brlcad/libfb/fb_rect.c,v 11.10 2004/02/02 17:39:11 morrison Exp $ (ARL)";
@


11.9.10.1
log
@merge from HEAD
@
text
@d20 1
a20 1
 *	This software is Copyright (C) 1997-2004 by the United States Army
d24 1
a24 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libfb/fb_rect.c,v 11.10 2004/02/02 17:39:11 morrison Exp $ (ARL)";
@


11.9.10.2
log
@merge from head
@
text
@d24 1
a24 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libfb/fb_rect.c,v 11.9.10.1 2004/02/12 19:48:11 erikg Exp $ (ARL)";
@


11.9.2.1
log
@Initial ANSIfication
@
text
@d24 1
a24 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libfb/fb_rect.c,v 11.9 2002/08/20 17:07:46 jra Exp $ (ARL)";
d42 5
a46 1
fb_sim_readrect(FBIO *ifp, int xmin, int ymin, int width, int height, unsigned char *pp)
d80 5
a84 1
fb_sim_writerect(FBIO *ifp, int xmin, int ymin, int width, int height, const unsigned char *pp)
d110 5
a114 1
fb_sim_bwreadrect(FBIO *ifp, int xmin, int ymin, int width, int height, unsigned char *pp)
d146 5
a150 1
fb_sim_bwwriterect(FBIO *ifp, int xmin, int ymin, int width, int height, const unsigned char *pp)
@


11.9.2.2
log
@sync branch with HEAD
@
text
@d20 1
a20 1
 *	This software is Copyright (C) 1997-2004 by the United States Army
d24 1
a24 1
static const char RCSid[] = "@@(#)$Header$ (ARL)";
@


11.8
log
@Converted from K&R to ANSI C - RFH
@
text
@d42 5
a46 1
fb_sim_readrect(FBIO *ifp, int xmin, int ymin, int width, int height, unsigned char *pp)
d80 5
a84 1
fb_sim_writerect(FBIO *ifp, int xmin, int ymin, int width, int height, const unsigned char *pp)
d110 5
a114 1
fb_sim_bwreadrect(FBIO *ifp, int xmin, int ymin, int width, int height, unsigned char *pp)
d146 5
a150 1
fb_sim_bwwriterect(FBIO *ifp, int xmin, int ymin, int width, int height, const unsigned char *pp)
@


11.7
log
@CONST to const
@
text
@d24 1
a24 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libfb/fb_rect.c,v 11.6 2000/07/12 01:33:30 cjohnson Exp $ (ARL)";
d42 1
a42 5
fb_sim_readrect( ifp, xmin, ymin, width, height, pp )
FBIO	*ifp;
int	xmin, ymin;
int	width, height;
unsigned char	*pp;
d76 1
a76 5
fb_sim_writerect( ifp, xmin, ymin, width, height, pp )
FBIO	*ifp;
int	xmin, ymin;
int	width, height;
const unsigned char	*pp;
d102 1
a102 5
fb_sim_bwreadrect( ifp, xmin, ymin, width, height, pp )
FBIO	*ifp;
int	xmin, ymin;
int	width, height;
unsigned char	*pp;
d134 1
a134 5
fb_sim_bwwriterect( ifp, xmin, ymin, width, height, pp )
FBIO	*ifp;
int	xmin, ymin;
int	width, height;
const unsigned char	*pp;
@


11.6
log
@LINT from gcc -Wall.  Including some mods to h/pkg.h
@
text
@d24 1
a24 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libfb/fb_rect.c,v 11.5 1999/02/08 20:57:25 mike Exp $ (ARL)";
d84 1
a84 1
CONST unsigned char	*pp;
d150 1
a150 1
CONST unsigned char	*pp;
@


11.5
log
@Improved compat.  It didn't work properly on FreeBSD 3.0
@
text
@d24 1
a24 1
static char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libfb/fb_rect.c,v 11.4 1998/08/28 21:52:34 mike Exp $ (ARL)";
@


11.4
log
@sim_bw{read,write}rect() needed larger internal buffers.
Also got usable error message.
@
text
@d24 1
a24 1
static char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libfb/fb_rect.c,v 11.3 1998/08/25 00:27:52 mike Exp $ (ARL)";
d175 5
a179 1
			*bp++ = *bp++ = *bp++ = *pp++;
@


11.3
log
@Added additional error checking for simulation of fb_readrect().
Also added diagnostic printout
@
text
@d24 1
a24 1
static char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libfb/fb_rect.c,v 11.2 1998/06/27 04:29:14 mike Exp $ (ARL)";
d108 1
d119 1
a119 1
	unsigned char	buf[4096*3];
d121 4
a124 1
	if( width > 4096 )  return -4096;	/* FAIL */
d156 1
a156 1
	unsigned char	buf[4096*3];
d158 4
a161 1
	if( width > 4096 )  return -4096;	/* FAIL */
@


11.2
log
@Additions to LIBFB interface and remote framebuffer protocol to
read and write monochrome rectangles.
Particularly important for sending thermal images at high speed.
@
text
@d24 1
a24 1
static char RCSid[] = "@@(#)$Header$ (ARL)";
d55 4
d60 5
a64 1
		if( got != width )  break;
@


11.1
log
@Release_4.4
@
text
@d9 1
a9 1
 *
d11 2
a12 3
 *	SECAD/VLD Computing Consortium, Bldg 394
 *	The U. S. Army Ballistic Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5066
d14 5
d20 2
a21 2
 *	This software is Copyright (C) 1989 by the United States Army.
 *	All rights reserved.
d24 1
a24 1
static char RCSid[] = "@@(#)$Header: /m/cad/libfb/RCS/fb_rect.c,v 10.3 94/08/12 20:22:48 gdurf Exp $ (BRL)";
d67 3
d81 1
d83 4
d89 1
a89 1
		got = fb_write( ifp, xmin, y, pp, width );
d91 1
a91 1
		if( got != width )  break;
d95 73
@


10.3
log
@Added includes
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: /m/cad/libfb/RCS/fb_rect.c,v 10.2 1993/09/25 08:35:27 mike Exp gdurf $ (BRL)";
@


10.2
log
@Converted to new fb.h
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: /m/cad/libfb/RCS/fb_rect.c,v 10.1 91/10/12 06:37:14 mike Rel4_0 Locker: mike $ (BRL)";
d23 2
d27 1
@


10.1
log
@Release_4.0
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: fb_rect.c,v 9.1 89/05/19 05:47:34 mike Rel3_5 $ (BRL)";
d39 1
a39 1
RGBpixel	*pp;
d43 1
d47 4
a50 2
		tot += fb_read( ifp, xmin, y, pp, width );
		pp += width;
d66 1
a66 1
RGBpixel	*pp;
d70 1
d74 4
a77 2
		tot += fb_write( ifp, xmin, y, pp, width );
		pp += width;
@


9.1
log
@Release_3.5
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: fb_rect.c,v 1.1 89/03/03 05:53:34 mike Exp $ (BRL)";
@


1.1
log
@Initial revision
@
text
@d20 1
a20 1
static char RCSid[] = "@@(#)$Header: fb_generic.c,v 8.4 89/03/01 03:40:38 mike Exp $ (BRL)";
@
