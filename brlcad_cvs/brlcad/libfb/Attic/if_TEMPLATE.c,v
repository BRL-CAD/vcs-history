head	11.8;
access;
symbols
	ansi-20040405-merged:11.5.2.1
	postmerge-20040405-ansi:11.6
	premerge-20040404-ansi:11.5
	postmerge-autoconf:11.5
	autoconf-freeze:11.5
	premerge-autoconf:11.5
	ansi-20040316-freeze:11.5.2.1
	postmerge-20040315-windows:11.5
	premerge-20040315-windows:11.5
	windows-20040315-freeze:11.5
	autoconf-20031203:11.5
	autoconf-20031202:11.5
	autoconf-branch:11.5.0.10
	phong-branch:11.5.0.8
	photonmap-branch:11.5.0.6
	rel-6-1-DP:11.5
	windows-branch:11.5.0.4
	rel-6-0-2:11.3
	ansi-branch:11.5.0.2
	rel-6-0-1-branch:11.3.0.2
	hartley-6-0-post:11.4
	hartley-6-0-pre:11.3
	rel-6-0-1:11.3
	rel-6-0:11.3
	rel-5-4:11.2
	offsite-5-3-pre:11.2
	rel-5-3:11.2
	rel-5-2:11.2
	rel-5-1-branch:11.2.0.2
	rel-5-1:11.2
	rel-5-0:11.2
	rel-5-0-beta:11.2
	rel-4-5:11.1
	ctj-4-5-post:11.1
	ctj-4-5-pre:11.1
	rel-4-4:11.1
	rel-4-0:10.1
	rel-3-5:9.1
	rel-3-0:8.1
	rel-2-3:7.1
	rel-2-0:6.1
	rel-1-24:5.1
	rel-1-20:4.2
	rel-1-10:4.1;
locks; strict;
comment	@ * @;


11.8
date	2004.05.21.18.07.24;	author morrison;	state dead;
branches;
next	11.7;

11.7
date	2004.05.10.15.30.44;	author erikg;	state Exp;
branches;
next	11.6;

11.6
date	2004.04.05.07.44.42;	author morrison;	state Exp;
branches;
next	11.5;

11.5
date	2002.08.20.17.07.46;	author jra;	state Exp;
branches
	11.5.2.1;
next	11.4;

11.4
date	2002.08.15.20.55.00;	author hartley;	state Exp;
branches;
next	11.3;

11.3
date	2001.04.20.22.29.13;	author morrison;	state Exp;
branches;
next	11.2;

11.2
date	98.06.27.04.29.15;	author mike;	state Exp;
branches;
next	11.1;

11.1
date	95.01.04.09.52.40;	author mike;	state Rel4_4;
branches;
next	10.6;

10.6
date	94.11.10.15.53.53;	author jra;	state Exp;
branches;
next	10.5;

10.5
date	94.08.12.20.24.01;	author gdurf;	state Exp;
branches;
next	10.4;

10.4
date	94.08.09.12.57.20;	author gdurf;	state Exp;
branches;
next	10.3;

10.3
date	93.09.25.08.34.06;	author mike;	state Exp;
branches;
next	10.2;

10.2
date	93.09.25.00.46.01;	author cjohnson;	state Exp;
branches;
next	10.1;

10.1
date	91.10.12.06.37.18;	author mike;	state Rel4_0;
branches;
next	9.4;

9.4
date	91.07.26.22.40.55;	author mike;	state Exp;
branches;
next	9.3;

9.3
date	90.12.11.22.19.54;	author phil;	state Exp;
branches;
next	9.2;

9.2
date	89.09.01.01.36.04;	author phil;	state Exp;
branches;
next	9.1;

9.1
date	89.05.19.05.47.44;	author mike;	state Rel3_5;
branches;
next	8.2;

8.2
date	89.03.03.05.54.07;	author mike;	state Exp;
branches;
next	8.1;

8.1
date	88.10.05.00.27.25;	author mike;	state Rel3_0;
branches;
next	7.3;

7.3
date	88.09.09.23.03.33;	author phil;	state Exp;
branches;
next	7.2;

7.2
date	88.07.14.15.42.23;	author phil;	state Exp;
branches;
next	7.1;

7.1
date	87.11.02.23.26.17;	author mike;	state Rel;
branches;
next	6.1;

6.1
date	87.07.11.07.51.16;	author mike;	state Rel;
branches;
next	5.1;

5.1
date	87.06.24.21.51.14;	author mike;	state Rel;
branches;
next	4.2;

4.2
date	87.02.12.22.06.21;	author mike;	state Exp;
branches;
next	4.1;

4.1
date	86.12.29.03.42.32;	author mike;	state Rel1;
branches;
next	1.7;

1.7
date	86.11.14.04.35.28;	author phil;	state Exp;
branches;
next	1.6;

1.6
date	86.10.29.01.33.41;	author phil;	state Exp;
branches;
next	1.5;

1.5
date	86.10.28.17.59.13;	author phil;	state Exp;
branches;
next	1.4;

1.4
date	86.10.25.10.49.26;	author phil;	state Exp;
branches;
next	1.3;

1.3
date	86.10.06.22.37.07;	author phil;	state Exp;
branches;
next	1.2;

1.2
date	86.10.03.06.34.21;	author mike;	state Exp;
branches;
next	1.1;

1.1
date	86.10.02.02.17.27;	author mike;	state Exp;
branches;
next	;

11.5.2.1
date	2002.09.19.18.01.18;	author morrison;	state Exp;
branches;
next	;


desc
@Template for creating new FB interfaces
@


11.8
log
@moved to src/
@
text
@/*
 *  How to add a new device interface:
 *
 *  Copy this file to if_devname.c
 *  Do a global replace of DEVNAME with your devname.
 *   (In the interest of non-flexnames, DEVNAME should be no more
 *   than three characters; except perhaps for DEVNAME_interface)
 *  Fill in the device description, max width and height,
 *   default width and height, and shortname (what you will
 *   look it up as).
 *  Set the unimplemented functions to "fb_null"
 *   (and remove the skeletons if you're tidy)
 *  Set DEVNAME_readrect to fb_sim_readrect, and DEVNAME_writerect
 *   to fb_sim_writerect, if not implemented.
 *  Make DEVNAME_free call DEVNAME_close if not implemented.
 *  Go add an "ifdef IF_DEVNAME" to fb_generic.c (two places).
 *  Add defines to ../Cakefile.defs.
 *  Replace this header.
 */

#ifdef HAVE_CONFIG_H
# include "config.h"
#endif



#include <stdio.h>

#include "machine.h"
#include "fb.h"
#include "externs.h"
#include "./fblocal.h"

_LOCAL_ int	DEVNAME_open(FBIO *ifp, char *file, int width, int height),
		DEVNAME_close(FBIO *ifp),
		DEVNAME_clear(FBIO *ifp, unsigned char *pp),
		DEVNAME_read(FBIO *ifp, int x, int y, unsigned char *pixelp, int count),
		DEVNAME_write(FBIO *ifp, int x, int y, const unsigned char *pixelp, int count),
		DEVNAME_rmap(FBIO *ifp, ColorMap *cmp),
		DEVNAME_wmap(FBIO *ifp, const ColorMap *cmp),
		DEVNAME_view(FBIO *ifp, int xcenter, int ycenter, int xzoom, int yzoom),
		DEVNAME_getview(FBIO *ifp, int *xcenter, int *ycenter, int *xzoom, int *yzoom),
		DEVNAME_setcursor(FBIO *ifp, const unsigned char *bits, int xbits, int ybits, int xorig, int yorig),
		DEVNAME_cursor(FBIO *ifp, int mode, int x, int y),
		DEVNAME_getcursor(FBIO *ifp, int *mode, int *x, int *y),
		DEVNAME_readrect(FBIO *ifp, int xmin, int ymin, int width, int height, unsigned char *pp),
		DEVNAME_writerect(FBIO *ifp, int xmin, int ymin, int width, int height, const unsigned char *pp),
		DEVNAME_bwreadrect(),
		DEVNAME_bwwriterect(),
		DEVNAME_poll(FBIO *ifp),
		DEVNAME_flush(FBIO *ifp),
		DEVNAME_free(FBIO *ifp),
		DEVNAME_help(FBIO *ifp);

/* This is the ONLY thing that we normally "export" */
FBIO DEVNAME_interface =  {
	0,			/* magic number slot	*/
	DEVNAME_open,		/* open device		*/
	DEVNAME_close,		/* close device		*/
	DEVNAME_clear,		/* clear device		*/
	DEVNAME_read,		/* read	pixels		*/
	DEVNAME_write,		/* write pixels		*/
	DEVNAME_rmap,		/* read colormap	*/
	DEVNAME_wmap,		/* write colormap	*/
	DEVNAME_view,		/* set view		*/
	DEVNAME_getview,	/* get view		*/
	DEVNAME_setcursor,	/* define cursor	*/
	DEVNAME_cursor,		/* set cursor		*/
	DEVNAME_getcursor,	/* get cursor		*/
	DEVNAME_readrect,	/* read rectangle	*/
	DEVNAME_writerect,	/* write rectangle	*/
	DEVNAME_bwreadrect,	/* read bw rectangle	*/
	DEVNAME_bwwriterect,	/* write bw rectangle	*/
	DEVNAME_poll,		/* process events	*/
	DEVNAME_flush,		/* flush output		*/
	DEVNAME_free,		/* free resources	*/
	DEVNAME_help,		/* help message		*/
	"Device description",	/* device description	*/
	0,			/* max width		*/
	0,			/* max height		*/
	"/dev/shortname",	/* short device name	*/
	0,			/* default/current width  */
	0,			/* default/current height */
	-1,			/* select file desc	*/
	-1,			/* file descriptor	*/
	1, 1,			/* zoom			*/
	0, 0,			/* window center	*/
	0, 0, 0,		/* cursor		*/
	PIXEL_NULL,		/* page_base		*/
	PIXEL_NULL,		/* page_curp		*/
	PIXEL_NULL,		/* page_endp		*/
	-1,			/* page_no		*/
	0,			/* page_dirty		*/
	0L,			/* page_curpos		*/
	0L,			/* page_pixels		*/
	0			/* debug		*/
};

_LOCAL_ int
DEVNAME_open(FBIO *ifp, char *file, int width, int height)
{
	FB_CK_FBIO(ifp);
	return(0);
}

_LOCAL_ int
DEVNAME_close(FBIO *ifp)
{
	return(0);
}

_LOCAL_ int
DEVNAME_clear(FBIO *ifp, unsigned char *pp)
{
	return(0);
}

_LOCAL_ int
DEVNAME_read(FBIO *ifp, int x, int y, unsigned char *pixelp, int count)
{
	return(count);
}

_LOCAL_ int
DEVNAME_write(FBIO *ifp, int x, int y, const unsigned char *pixelp, int count)
{
	return(count);
}

_LOCAL_ int
DEVNAME_rmap(FBIO *ifp, ColorMap *cmp)
{
	return(0);
}

_LOCAL_ int
DEVNAME_wmap(FBIO *ifp, const ColorMap *cmp)
{
	return(0);
}

_LOCAL_ int
DEVNAME_view(FBIO *ifp, int xcenter, int ycenter, int xzoom, int yzoom)
{
	return(0);
}

_LOCAL_ int
DEVNAME_getview(FBIO *ifp, int *xcenter, int *ycenter, int *xzoom, int *yzoom)
{
	return(0);
}

_LOCAL_ int
DEVNAME_setcursor(FBIO *ifp, const unsigned char *bits, int xbits, int ybits, int xorig, int yorig)
{
	return(0);
}

_LOCAL_ int
DEVNAME_cursor(FBIO *ifp, int mode, int x, int y)
{
	return(0);
}

_LOCAL_ int
DEVNAME_getcursor(FBIO *ifp, int *mode, int *x, int *y)
{
	return(0);
}

_LOCAL_ int
DEVNAME_readrect(FBIO *ifp, int xmin, int ymin, int width, int height, unsigned char *pp)
{
	return( width*height );
}

_LOCAL_ int
DEVNAME_writerect(FBIO *ifp, int xmin, int ymin, int width, int height, const unsigned char *pp)
{
	return( width*height );
}

_LOCAL_ int
DEVNAME_poll(FBIO *ifp)
{
	return(0);
}

_LOCAL_ int
DEVNAME_flush(FBIO *ifp)
{
	return(0);
}

_LOCAL_ int
DEVNAME_free(FBIO *ifp)
{
	return(0);
}

_LOCAL_ int
DEVNAME_help(FBIO *ifp)
{
	fb_log( "Description: %s\n", DEVNAME_interface.if_type );
	fb_log( "Device: %s\n", ifp->if_name );
	fb_log( "Max width/height: %d %d\n",
		DEVNAME_interface.if_max_width,
		DEVNAME_interface.if_max_height );
	fb_log( "Default width/height: %d %d\n",
		DEVNAME_interface.if_width,
		DEVNAME_interface.if_height );
	return(0);
}
@


11.7
log
@change conf.h to a wrapped config.h
@
text
@@


11.6
log
@merge of ansi-6-0-branch into HEAD
@
text
@d21 5
a25 1
#include "conf.h"
@


11.5
log
@Restoration of entire source tree to Pre-Hartley state
@
text
@d30 14
a43 14
_LOCAL_ int	DEVNAME_open(),
		DEVNAME_close(),
		DEVNAME_clear(),
		DEVNAME_read(),
		DEVNAME_write(),
		DEVNAME_rmap(),
		DEVNAME_wmap(),
		DEVNAME_view(),
		DEVNAME_getview(),
		DEVNAME_setcursor(),
		DEVNAME_cursor(),
		DEVNAME_getcursor(),
		DEVNAME_readrect(),
		DEVNAME_writerect(),
d46 4
a49 4
		DEVNAME_poll(),
		DEVNAME_flush(),
		DEVNAME_free(),
		DEVNAME_help();
d96 1
a96 4
DEVNAME_open( ifp, file, width, height )
FBIO	*ifp;
char	*file;
int	width, height;
d103 1
a103 2
DEVNAME_close( ifp )
FBIO	*ifp;
d109 1
a109 3
DEVNAME_clear( ifp, pp )
FBIO	*ifp;
unsigned char	*pp;
d115 1
a115 5
DEVNAME_read( ifp, x, y, pixelp, count )
FBIO	*ifp;
int	x, y;
unsigned char	*pixelp;
int	count;
d121 1
a121 5
DEVNAME_write( ifp, x, y, pixelp, count )
FBIO	*ifp;
int	x, y;
const unsigned char	*pixelp;
int	count;
d127 1
a127 3
DEVNAME_rmap( ifp, cmp )
FBIO	*ifp;
ColorMap	*cmp;
d133 1
a133 3
DEVNAME_wmap( ifp, cmp )
FBIO	*ifp;
const ColorMap	*cmp;
d139 1
a139 4
DEVNAME_view( ifp, xcenter, ycenter, xzoom, yzoom )
FBIO	*ifp;
int	xcenter, ycenter;
int	xzoom, yzoom;
d145 1
a145 4
DEVNAME_getview( ifp, xcenter, ycenter, xzoom, yzoom )
FBIO	*ifp;
int	*xcenter, *ycenter;
int	*xzoom, *yzoom;
d151 1
a151 5
DEVNAME_setcursor( ifp, bits, xbits, ybits, xorig, yorig )
FBIO	*ifp;
const unsigned char *bits;
int	xbits, ybits;
int	xorig, yorig;
d157 1
a157 4
DEVNAME_cursor( ifp, mode, x, y )
FBIO	*ifp;
int	mode;
int	x, y;
d163 1
a163 4
DEVNAME_getcursor( ifp, mode, x, y )
FBIO	*ifp;
int	*mode;
int	*x, *y;
d169 1
a169 5
DEVNAME_readrect( ifp, xmin, ymin, width, height, pp )
FBIO	*ifp;
int	xmin, ymin;
int	width, height;
unsigned char	*pp;
d175 1
a175 5
DEVNAME_writerect( ifp, xmin, ymin, width, height, pp )
FBIO	*ifp;
int	xmin, ymin;
int	width, height;
const unsigned char	*pp;
d181 1
a181 2
DEVNAME_poll( ifp )
FBIO	*ifp;
d187 1
a187 2
DEVNAME_flush( ifp )
FBIO	*ifp;
d193 1
a193 2
DEVNAME_free( ifp )
FBIO	*ifp;
d199 1
a199 2
DEVNAME_help( ifp )
FBIO	*ifp;
@


11.5.2.1
log
@Initial ANSIfication
@
text
@d30 14
a43 14
_LOCAL_ int	DEVNAME_open(FBIO *ifp, char *file, int width, int height),
		DEVNAME_close(FBIO *ifp),
		DEVNAME_clear(FBIO *ifp, unsigned char *pp),
		DEVNAME_read(FBIO *ifp, int x, int y, unsigned char *pixelp, int count),
		DEVNAME_write(FBIO *ifp, int x, int y, const unsigned char *pixelp, int count),
		DEVNAME_rmap(FBIO *ifp, ColorMap *cmp),
		DEVNAME_wmap(FBIO *ifp, const ColorMap *cmp),
		DEVNAME_view(FBIO *ifp, int xcenter, int ycenter, int xzoom, int yzoom),
		DEVNAME_getview(FBIO *ifp, int *xcenter, int *ycenter, int *xzoom, int *yzoom),
		DEVNAME_setcursor(FBIO *ifp, const unsigned char *bits, int xbits, int ybits, int xorig, int yorig),
		DEVNAME_cursor(FBIO *ifp, int mode, int x, int y),
		DEVNAME_getcursor(FBIO *ifp, int *mode, int *x, int *y),
		DEVNAME_readrect(FBIO *ifp, int xmin, int ymin, int width, int height, unsigned char *pp),
		DEVNAME_writerect(FBIO *ifp, int xmin, int ymin, int width, int height, const unsigned char *pp),
d46 4
a49 4
		DEVNAME_poll(FBIO *ifp),
		DEVNAME_flush(FBIO *ifp),
		DEVNAME_free(FBIO *ifp),
		DEVNAME_help(FBIO *ifp);
d96 4
a99 1
DEVNAME_open(FBIO *ifp, char *file, int width, int height)
d106 2
a107 1
DEVNAME_close(FBIO *ifp)
d113 3
a115 1
DEVNAME_clear(FBIO *ifp, unsigned char *pp)
d121 5
a125 1
DEVNAME_read(FBIO *ifp, int x, int y, unsigned char *pixelp, int count)
d131 5
a135 1
DEVNAME_write(FBIO *ifp, int x, int y, const unsigned char *pixelp, int count)
d141 3
a143 1
DEVNAME_rmap(FBIO *ifp, ColorMap *cmp)
d149 3
a151 1
DEVNAME_wmap(FBIO *ifp, const ColorMap *cmp)
d157 4
a160 1
DEVNAME_view(FBIO *ifp, int xcenter, int ycenter, int xzoom, int yzoom)
d166 4
a169 1
DEVNAME_getview(FBIO *ifp, int *xcenter, int *ycenter, int *xzoom, int *yzoom)
d175 5
a179 1
DEVNAME_setcursor(FBIO *ifp, const unsigned char *bits, int xbits, int ybits, int xorig, int yorig)
d185 4
a188 1
DEVNAME_cursor(FBIO *ifp, int mode, int x, int y)
d194 4
a197 1
DEVNAME_getcursor(FBIO *ifp, int *mode, int *x, int *y)
d203 5
a207 1
DEVNAME_readrect(FBIO *ifp, int xmin, int ymin, int width, int height, unsigned char *pp)
d213 5
a217 1
DEVNAME_writerect(FBIO *ifp, int xmin, int ymin, int width, int height, const unsigned char *pp)
d223 2
a224 1
DEVNAME_poll(FBIO *ifp)
d230 2
a231 1
DEVNAME_flush(FBIO *ifp)
d237 2
a238 1
DEVNAME_free(FBIO *ifp)
d244 2
a245 1
DEVNAME_help(FBIO *ifp)
@


11.4
log
@Converted from K&R to ANSI C - RFH
@
text
@d30 14
a43 14
_LOCAL_ int	DEVNAME_open(FBIO *ifp, char *file, int width, int height),
		DEVNAME_close(FBIO *ifp),
		DEVNAME_clear(FBIO *ifp, unsigned char *pp),
		DEVNAME_read(FBIO *ifp, int x, int y, unsigned char *pixelp, int count),
		DEVNAME_write(FBIO *ifp, int x, int y, const unsigned char *pixelp, int count),
		DEVNAME_rmap(FBIO *ifp, ColorMap *cmp),
		DEVNAME_wmap(FBIO *ifp, const ColorMap *cmp),
		DEVNAME_view(FBIO *ifp, int xcenter, int ycenter, int xzoom, int yzoom),
		DEVNAME_getview(FBIO *ifp, int *xcenter, int *ycenter, int *xzoom, int *yzoom),
		DEVNAME_setcursor(FBIO *ifp, const unsigned char *bits, int xbits, int ybits, int xorig, int yorig),
		DEVNAME_cursor(FBIO *ifp, int mode, int x, int y),
		DEVNAME_getcursor(FBIO *ifp, int *mode, int *x, int *y),
		DEVNAME_readrect(FBIO *ifp, int xmin, int ymin, int width, int height, unsigned char *pp),
		DEVNAME_writerect(FBIO *ifp, int xmin, int ymin, int width, int height, const unsigned char *pp),
d46 4
a49 4
		DEVNAME_poll(FBIO *ifp),
		DEVNAME_flush(FBIO *ifp),
		DEVNAME_free(FBIO *ifp),
		DEVNAME_help(FBIO *ifp);
d96 4
a99 1
DEVNAME_open(FBIO *ifp, char *file, int width, int height)
d106 2
a107 1
DEVNAME_close(FBIO *ifp)
d113 3
a115 1
DEVNAME_clear(FBIO *ifp, unsigned char *pp)
d121 5
a125 1
DEVNAME_read(FBIO *ifp, int x, int y, unsigned char *pixelp, int count)
d131 5
a135 1
DEVNAME_write(FBIO *ifp, int x, int y, const unsigned char *pixelp, int count)
d141 3
a143 1
DEVNAME_rmap(FBIO *ifp, ColorMap *cmp)
d149 3
a151 1
DEVNAME_wmap(FBIO *ifp, const ColorMap *cmp)
d157 4
a160 1
DEVNAME_view(FBIO *ifp, int xcenter, int ycenter, int xzoom, int yzoom)
d166 4
a169 1
DEVNAME_getview(FBIO *ifp, int *xcenter, int *ycenter, int *xzoom, int *yzoom)
d175 5
a179 1
DEVNAME_setcursor(FBIO *ifp, const unsigned char *bits, int xbits, int ybits, int xorig, int yorig)
d185 4
a188 1
DEVNAME_cursor(FBIO *ifp, int mode, int x, int y)
d194 4
a197 1
DEVNAME_getcursor(FBIO *ifp, int *mode, int *x, int *y)
d203 5
a207 1
DEVNAME_readrect(FBIO *ifp, int xmin, int ymin, int width, int height, unsigned char *pp)
d213 5
a217 1
DEVNAME_writerect(FBIO *ifp, int xmin, int ymin, int width, int height, const unsigned char *pp)
d223 2
a224 1
DEVNAME_poll(FBIO *ifp)
d230 2
a231 1
DEVNAME_flush(FBIO *ifp)
d237 2
a238 1
DEVNAME_free(FBIO *ifp)
d244 2
a245 1
DEVNAME_help(FBIO *ifp)
@


11.3
log
@CONST to const
@
text
@d30 14
a43 14
_LOCAL_ int	DEVNAME_open(),
		DEVNAME_close(),
		DEVNAME_clear(),
		DEVNAME_read(),
		DEVNAME_write(),
		DEVNAME_rmap(),
		DEVNAME_wmap(),
		DEVNAME_view(),
		DEVNAME_getview(),
		DEVNAME_setcursor(),
		DEVNAME_cursor(),
		DEVNAME_getcursor(),
		DEVNAME_readrect(),
		DEVNAME_writerect(),
d46 4
a49 4
		DEVNAME_poll(),
		DEVNAME_flush(),
		DEVNAME_free(),
		DEVNAME_help();
d96 1
a96 4
DEVNAME_open( ifp, file, width, height )
FBIO	*ifp;
char	*file;
int	width, height;
d103 1
a103 2
DEVNAME_close( ifp )
FBIO	*ifp;
d109 1
a109 3
DEVNAME_clear( ifp, pp )
FBIO	*ifp;
unsigned char	*pp;
d115 1
a115 5
DEVNAME_read( ifp, x, y, pixelp, count )
FBIO	*ifp;
int	x, y;
unsigned char	*pixelp;
int	count;
d121 1
a121 5
DEVNAME_write( ifp, x, y, pixelp, count )
FBIO	*ifp;
int	x, y;
const unsigned char	*pixelp;
int	count;
d127 1
a127 3
DEVNAME_rmap( ifp, cmp )
FBIO	*ifp;
ColorMap	*cmp;
d133 1
a133 3
DEVNAME_wmap( ifp, cmp )
FBIO	*ifp;
const ColorMap	*cmp;
d139 1
a139 4
DEVNAME_view( ifp, xcenter, ycenter, xzoom, yzoom )
FBIO	*ifp;
int	xcenter, ycenter;
int	xzoom, yzoom;
d145 1
a145 4
DEVNAME_getview( ifp, xcenter, ycenter, xzoom, yzoom )
FBIO	*ifp;
int	*xcenter, *ycenter;
int	*xzoom, *yzoom;
d151 1
a151 5
DEVNAME_setcursor( ifp, bits, xbits, ybits, xorig, yorig )
FBIO	*ifp;
const unsigned char *bits;
int	xbits, ybits;
int	xorig, yorig;
d157 1
a157 4
DEVNAME_cursor( ifp, mode, x, y )
FBIO	*ifp;
int	mode;
int	x, y;
d163 1
a163 4
DEVNAME_getcursor( ifp, mode, x, y )
FBIO	*ifp;
int	*mode;
int	*x, *y;
d169 1
a169 5
DEVNAME_readrect( ifp, xmin, ymin, width, height, pp )
FBIO	*ifp;
int	xmin, ymin;
int	width, height;
unsigned char	*pp;
d175 1
a175 5
DEVNAME_writerect( ifp, xmin, ymin, width, height, pp )
FBIO	*ifp;
int	xmin, ymin;
int	width, height;
const unsigned char	*pp;
d181 1
a181 2
DEVNAME_poll( ifp )
FBIO	*ifp;
d187 1
a187 2
DEVNAME_flush( ifp )
FBIO	*ifp;
d193 1
a193 2
DEVNAME_free( ifp )
FBIO	*ifp;
d199 1
a199 2
DEVNAME_help( ifp )
FBIO	*ifp;
@


11.2
log
@Additions to LIBFB interface and remote framebuffer protocol to
read and write monochrome rectangles.
Particularly important for sending thermal images at high speed.
@
text
@d134 1
a134 1
CONST unsigned char	*pixelp;
d151 1
a151 1
CONST ColorMap	*cmp;
d177 1
a177 1
CONST unsigned char *bits;
d217 1
a217 1
CONST unsigned char	*pp;
@


11.1
log
@Release_4.4
@
text
@d44 2
d68 2
@


10.6
log
@changed typo ("unsinged" to "unsigned").
@
text
@@


10.5
log
@Added includes
@
text
@d213 1
a213 1
CONST unsinged char	*pp;
@


10.4
log
@Added #include "conf.h"
@
text
@d23 2
@


10.3
log
@Added CONST
@
text
@d21 2
@


10.2
log
@Change from RGBpixel to unsigned char.
@
text
@d21 1
d23 1
d126 1
a126 1
unsigned char	*pixelp;
d143 1
a143 1
ColorMap	*cmp;
d169 1
a169 1
unsigned char *bits;
d209 1
a209 1
unsinged char	*pp;
@


10.1
log
@Release_4.0
@
text
@d105 1
a105 1
RGBpixel	*pp;
d114 1
a114 1
RGBpixel	*pixelp;
d124 1
a124 1
RGBpixel	*pixelp;
d197 1
a197 1
RGBpixel	*pp;
d207 1
a207 1
RGBpixel	*pp;
@


9.4
log
@Added if_magic field, and FB_CK_FBIO() macro, to allow checking
FBIO pointers
@
text
@@


9.3
log
@if_ struct changes.  See fb.h.
@
text
@d45 1
d91 1
@


9.2
log
@fb_flush and fb_free.  Name changes, cleanup.
@
text
@a25 1
		DEVNAME_reset(),
d31 2
a32 3
		DEVNAME_viewport(),
		DEVNAME_window(),
		DEVNAME_zoom(),
d35 1
a35 1
		DEVNAME_scursor(),
d38 1
d45 18
a62 19
	DEVNAME_open,		/* open device	*/
	DEVNAME_close,		/* close device	*/
	DEVNAME_reset,		/* reset device	*/
	DEVNAME_clear,		/* clear device	*/
	DEVNAME_read,		/* read	pixels	*/
	DEVNAME_write,		/* write pixels */
	DEVNAME_rmap,		/* rmap - read colormap	*/
	DEVNAME_wmap,		/* wmap - write colormap */
	DEVNAME_viewport,	/* viewport set	*/
	DEVNAME_window,		/* window set	*/
	DEVNAME_zoom,		/* zoom set	*/
	DEVNAME_setcursor,	/* setcursor - define cursor	*/
	DEVNAME_cursor,		/* cursor - memory address	*/
	DEVNAME_scursor,	/* scursor - screen address	*/
	DEVNAME_readrect,	/* readrect - read rectangle	*/
	DEVNAME_writerect,	/* writerect - write rectangle	*/
	DEVNAME_flush,		/* flush output	*/
	DEVNAME_free,		/* free resources */
	DEVNAME_help,		/* help message	*/
d69 1
d71 3
a100 7
DEVNAME_reset( ifp )
FBIO	*ifp;
{
	return(0);
}

_LOCAL_ int
d145 1
a145 1
DEVNAME_viewport( ifp, left, top, right, bottom )
d147 2
a148 1
int	left, top, right, bottom;
d154 1
a154 1
DEVNAME_window( ifp, x, y )
d156 2
a157 1
int	x, y;
a162 8
DEVNAME_zoom( ifp, x, y )
FBIO	*ifp;
int	x, y;
{
	return(0);
}

_LOCAL_ int
d182 1
a182 1
DEVNAME_scursor( ifp, mode, x, y )
d184 2
a185 2
int	mode;
int	x, y;
d208 7
@


9.1
log
@Release_3.5
@
text
@d13 3
d24 18
a41 16
extern int	fb_sim_readrect(), fb_sim_writerect();

_LOCAL_ int	DEVNAME_dopen(),
		DEVNAME_dclose(),
		DEVNAME_dreset(),
		DEVNAME_dclear(),
		DEVNAME_bread(),
		DEVNAME_bwrite(),
		DEVNAME_cmread(),
		DEVNAME_cmwrite(),
		DEVNAME_viewport_set(),
		DEVNAME_window_set(),
		DEVNAME_zoom_set(),
		DEVNAME_curs_set(),
		DEVNAME_cmemory_addr(),
		DEVNAME_cscreen_addr(),
d46 34
a79 32
	DEVNAME_dopen,		/* device_open		*/
	DEVNAME_dclose,		/* device_close		*/
	DEVNAME_dreset,		/* device_reset		*/
	DEVNAME_dclear,		/* device_clear		*/
	DEVNAME_bread,		/* buffer_read		*/
	DEVNAME_bwrite,		/* buffer_write		*/
	DEVNAME_cmread,		/* colormap_read	*/
	DEVNAME_cmwrite,		/* colormap_write	*/
	DEVNAME_viewport_set,		/* viewport_set		*/
	DEVNAME_window_set,		/* window_set		*/
	DEVNAME_zoom_set,		/* zoom_set		*/
	DEVNAME_curs_set,		/* curs_set		*/
	DEVNAME_cmemory_addr,		/* cursor_move_memory_addr */
	DEVNAME_cscreen_addr,		/* cursor_move_screen_addr */
	fb_sim_readrect,		/* rectangle read */
	fb_sim_writerect,		/* rectangle write */
	DEVNAME_help,			/* help message		*/
	"Device description",		/* device description	*/
	0,				/* max width		*/
	0,				/* max height		*/
	"/dev/shortname",		/* short device name	*/
	0,				/* default/current width  */
	0,				/* default/current height */
	-1,				/* file descriptor	*/
	PIXEL_NULL,			/* page_base		*/
	PIXEL_NULL,			/* page_curp		*/
	PIXEL_NULL,			/* page_endp		*/
	-1,				/* page_no		*/
	0,				/* page_dirty		*/
	0L,				/* page_curpos		*/
	0L,				/* page_pixels		*/
	0				/* debug		*/
d83 1
a83 1
DEVNAME_dopen( ifp, file, width, height )
d92 1
a92 1
DEVNAME_dclose( ifp )
d99 1
a99 1
DEVNAME_dreset( ifp )
d106 1
a106 1
DEVNAME_dclear( ifp, pp )
d114 1
a114 1
DEVNAME_bread( ifp, x, y, pixelp, count )
d124 1
a124 1
DEVNAME_bwrite( ifp, x, y, pixelp, count )
d134 1
a134 1
DEVNAME_cmread( ifp, cmp )
d142 1
a142 1
DEVNAME_cmwrite( ifp, cmp )
d150 1
a150 1
DEVNAME_viewport_set( ifp, left, top, right, bottom )
d158 1
a158 1
DEVNAME_window_set( ifp, x, y )
d166 1
a166 1
DEVNAME_zoom_set( ifp, x, y )
d174 1
a174 1
DEVNAME_curs_set( ifp, bits, xbits, ybits, xorig, yorig )
d184 1
a184 1
DEVNAME_cmemory_addr( ifp, mode, x, y )
d193 1
a193 1
DEVNAME_cscreen_addr( ifp, mode, x, y )
d197 34
@


8.2
log
@Added support for fb_readrect() and fb_writerect().
@
text
@@


8.1
log
@Release_3.0
@
text
@d21 2
d55 2
@


7.3
log
@fbhelp() function
@
text
@@


7.2
log
@minor doc update
added return values
@
text
@d34 2
a35 1
		DEVNAME_cscreen_addr();
d53 1
d187 15
@


7.1
log
@Release 2.3
@
text
@d6 2
a7 2
 *   (In the interest of non-flexnames, DEVNAME should be
 *   about three characters; except for DEVNAME_interface)
d13 2
a14 2
 *  Go add an "ifdef IF_DEVNAME" to fb_generic.c.
 *  Fix Makefile.loc in 3 places.
d18 1
d75 1
d82 1
d89 1
d97 1
d107 1
d117 1
d125 1
d133 1
d141 1
d149 1
d157 1
d167 1
d176 1
d185 1
@


6.1
log
@Release 2.0
@
text
@@


5.1
log
@Release 1.24
@
text
@@


4.2
log
@Release 1.20 -- First Formal Release
@
text
@@


4.1
log
@BRL CAD Distribution Release 1.10
@
text
@@


1.7
log
@curs_set change.
@
text
@@


1.6
log
@removed pbytes
@
text
@d31 1
a31 1
		DEVNAME_cinit_bitmap(),
d48 1
a48 1
	DEVNAME_cinit_bitmap,		/* cursor_init_bitmap	*/
d149 1
a149 1
DEVNAME_cinit_bitmap( ifp, bitmap )
d151 3
a153 1
long	*bitmap;
@


1.5
log
@added if_debug
@
text
@d62 1
a62 1
	0,				/* page_ref		*/
a63 1
	0L,				/* page_bytes		*/
@


1.4
log
@RGBpixel conversion.
@
text
@d2 1
a2 1
 * How to add a new device interface:
d4 12
a15 9
 * Copy this file to if_devname.c
 * Do a global replace of DEVNAME with your devname.
 * Fill in the device description, max width and height, and
 *  shortname (what you will look it up as).
 * Set the unimplemented functions to "fb_null"
 *  (and remove the skeletons if you're tidy)
 * Go add an "ifdef IF_devname" to fb_generic.c.
 * Fix Makefile.loc in 3 places.
 * Replace this header.
d65 2
a66 1
	0L				/* page_pixels		*/
@


1.3
log
@added /dev/name convention.
@
text
@d88 1
a88 1
Pixel	*pp;
d96 1
a96 1
Pixel	*pixelp;
d105 1
a105 1
Pixel	*pixelp;
@


1.2
log
@Working version
@
text
@d51 3
a53 3
	"shortname",			/* short device name	*/
	0,				/* init/current width	*/
	0,				/* init/current height	*/
@


1.1
log
@Initial revision
@
text
@a9 1
 * Go add an "devname_interface" to fblocal.h.
d11 1
a11 1
 * Fix the Makefile.
@
