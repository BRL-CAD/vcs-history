head	11.8;
access;
symbols
	ansi-20040405-merged:11.4.2.2
	postmerge-20040405-ansi:11.6
	premerge-20040404-ansi:11.5
	postmerge-autoconf:11.5
	autoconf-freeze:11.4.10.2
	premerge-autoconf:11.5
	ansi-20040316-freeze:11.4.2.1
	postmerge-20040315-windows:11.5
	premerge-20040315-windows:11.5
	windows-20040315-freeze:11.4.4.1
	autoconf-20031203:11.4
	autoconf-20031202:11.4
	autoconf-branch:11.4.0.10
	phong-branch:11.4.0.8
	photonmap-branch:11.4.0.6
	rel-6-1-DP:11.4
	windows-branch:11.4.0.4
	rel-6-0-2:11.2
	ansi-branch:11.4.0.2
	rel-6-0-1-branch:11.2.0.4
	hartley-6-0-post:11.3
	hartley-6-0-pre:11.2
	rel-6-0-1:11.2
	rel-6-0:11.2
	rel-5-4:11.2
	offsite-5-3-pre:11.2
	rel-5-3:11.2
	rel-5-2:11.2
	rel-5-1-branch:11.2.0.2
	rel-5-1:11.2
	rel-5-0:11.2
	rel-5-0-beta:11.2
	rel-4-5:11.1
	ctj-4-5-post:11.1
	ctj-4-5-pre:11.1
	rel-4-4:11.1
	rel-4-0:10.1
	rel-3-5:9.1
	rel-3-0:8.1
	rel-2-3:7.1
	rel-2-0:6.1
	rel-1-24:5.1
	rel-1-20:4.2
	rel-1-10:4.1;
locks; strict;
comment	@ * @;


11.8
date	2004.05.21.18.07.25;	author morrison;	state dead;
branches;
next	11.7;

11.7
date	2004.05.10.15.30.45;	author erikg;	state Exp;
branches;
next	11.6;

11.6
date	2004.04.05.07.44.42;	author morrison;	state Exp;
branches;
next	11.5;

11.5
date	2004.02.02.17.39.12;	author morrison;	state Exp;
branches;
next	11.4;

11.4
date	2002.08.20.17.07.47;	author jra;	state Exp;
branches
	11.4.2.1
	11.4.4.1
	11.4.10.1;
next	11.3;

11.3
date	2002.08.15.20.55.01;	author hartley;	state Exp;
branches;
next	11.2;

11.2
date	98.06.27.04.29.16;	author mike;	state Exp;
branches;
next	11.1;

11.1
date	95.01.04.09.52.56;	author mike;	state Rel4_4;
branches;
next	10.2;

10.2
date	94.08.12.20.25.26;	author gdurf;	state Exp;
branches;
next	10.1;

10.1
date	91.10.12.06.37.27;	author mike;	state Rel4_0;
branches;
next	9.4;

9.4
date	91.07.26.22.41.07;	author mike;	state Exp;
branches;
next	9.3;

9.3
date	90.12.11.22.22.25;	author phil;	state Exp;
branches;
next	9.2;

9.2
date	89.09.01.01.44.33;	author phil;	state Exp;
branches;
next	9.1;

9.1
date	89.05.19.05.47.57;	author mike;	state Rel3_5;
branches;
next	8.2;

8.2
date	89.03.03.05.54.32;	author mike;	state Exp;
branches;
next	8.1;

8.1
date	88.10.05.00.27.37;	author mike;	state Rel3_0;
branches;
next	7.4;

7.4
date	88.09.09.23.19.13;	author phil;	state Exp;
branches;
next	7.3;

7.3
date	88.07.14.21.02.46;	author phil;	state Exp;
branches;
next	7.2;

7.2
date	88.05.13.21.42.35;	author mike;	state Exp;
branches;
next	7.1;

7.1
date	87.11.02.23.26.36;	author mike;	state Rel;
branches;
next	6.3;

6.3
date	87.10.15.16.02.23;	author moss;	state Exp;
branches;
next	6.2;

6.2
date	87.10.15.09.14.47;	author moss;	state Exp;
branches;
next	6.1;

6.1
date	87.07.11.07.51.32;	author mike;	state Rel;
branches;
next	5.1;

5.1
date	87.06.24.21.51.34;	author mike;	state Rel;
branches;
next	4.2;

4.2
date	87.02.12.22.06.36;	author mike;	state Exp;
branches;
next	4.1;

4.1
date	86.12.29.03.42.50;	author mike;	state Rel1;
branches;
next	1.10;

1.10
date	86.12.28.21.52.25;	author mike;	state Exp;
branches;
next	1.9;

1.9
date	86.11.28.20.17.31;	author phil;	state Exp;
branches;
next	1.8;

1.8
date	86.11.13.21.31.21;	author phil;	state Exp;
branches;
next	1.7;

1.7
date	86.10.29.01.35.00;	author phil;	state Exp;
branches;
next	1.6;

1.6
date	86.10.28.17.58.16;	author phil;	state Exp;
branches;
next	1.5;

1.5
date	86.10.25.11.28.17;	author phil;	state Exp;
branches;
next	1.4;

1.4
date	86.10.14.23.13.54;	author phil;	state Exp;
branches;
next	1.3;

1.3
date	86.10.06.21.30.44;	author mike;	state Exp;
branches;
next	1.2;

1.2
date	86.10.03.06.34.43;	author mike;	state Exp;
branches;
next	1.1;

1.1
date	86.10.02.02.18.01;	author mike;	state Exp;
branches;
next	;

11.4.2.1
date	2002.09.19.18.01.19;	author morrison;	state Exp;
branches;
next	11.4.2.2;

11.4.2.2
date	2004.03.17.21.17.00;	author morrison;	state Exp;
branches;
next	;

11.4.4.1
date	2004.03.11.23.42.07;	author morrison;	state Exp;
branches;
next	;

11.4.10.1
date	2004.02.12.19.48.12;	author erikg;	state Exp;
branches;
next	11.4.10.2;

11.4.10.2
date	2004.03.15.14.06.20;	author erikg;	state Exp;
branches;
next	;


desc
@FB to DMD (tty5620)
@


11.8
log
@moved to src/
@
text
@/*
  Author -
	Gary S. Moss

  Source -
	SECAD/VLD Computing Consortium, Bldg 394
	The U. S. Army Ballistic Research Laboratory
	Aberdeen Proving Ground, Maryland  21005-5066
  
  Copyright Notice -
	This software is Copyright (C) 1986-2004 by the United States Army.
	All rights reserved.

	$Header: /n/xoff/cvs/brlcad/libfb/if_ptty.c,v 11.7 2004/05/10 15:30:45 erikg Exp $ (BRL)
 */
#ifndef lint
static char RCSid[] = "@@(#)$Header: /n/xoff/cvs/brlcad/libfb/if_ptty.c,v 11.7 2004/05/10 15:30:45 erikg Exp $ (BRL)";
#endif

#ifdef HAVE_CONFIG_H
# include "config.h"
#endif



#include <stdio.h>
#include <fcntl.h>

#include "machine.h"
#include "fb.h"
#include "./dmdfb.h"
#include "./fblocal.h"

#define MAX_DIMENSION	256
#define CVT2DMD( _i )		((_i)/(ifp->if_width/MAX_DIMENSION)*3)
#define INTENSITY_FACTOR	(1.0/26.0)
#define R_NTSC			(0.35*INTENSITY_FACTOR)
#define G_NTSC			(0.55*INTENSITY_FACTOR)
#define B_NTSC			(0.10*INTENSITY_FACTOR)
static int	over_sampl;

_LOCAL_ int	ptty_open(FBIO *ifp, char *ptty_name, int width, int height),
		ptty_close(FBIO *ifp),
		ptty_clear(FBIO *ifp, RGBpixel (*bgpp)),
		ptty_read(FBIO *ifp, int x, int y, RGBpixel (*pixelp), long int ct),
		ptty_write(register FBIO *ifp, int x, int y, RGBpixel (*pixelp), long int ct),
		ptty_view(FBIO *ifp, int xcenter, int ycenter, int xzoom, int yzoom),
		ptty_window_set(FBIO *ifp, int x, int y),	/* OLD */
		ptty_zoom_set(FBIO *ifp, int x, int y),	/* OLD */
		ptty_cursor(FBIO *ifp, int mode, int x, int y),
		ptty_background_set(),
		ptty_animate(),
		ptty_setsize(FBIO *ifp, int width, int height),
		ptty_help(FBIO *ifp);

FBIO ptty_interface = {
	0,
	ptty_open,
	ptty_close,
	ptty_clear,
	ptty_read,
	ptty_write,
	fb_null,			/* read colormap */
	fb_null,			/* write colormap */
	ptty_view,
	fb_sim_getview,
	fb_null,			/* curs_set */
	ptty_cursor,
	fb_sim_getcursor,
	fb_sim_readrect,
	fb_sim_writerect,
	fb_sim_bwreadrect,
	fb_sim_bwwriterect,
	fb_null,			/* poll */
	fb_null,			/* flush */
	ptty_close,			/* free */
	ptty_help,
	"Unix pseudo-tty Interface",
	800,
	1024,
	"/dev/tty",
	800,			/* XXX - are these good defaults? */
	1024,
	-1,			/* select fd */
	-1,
	1, 1,			/* zoom */
	400, 512,		/* window center */
	0, 0, 0,		/* cursor */
	PIXEL_NULL,
	PIXEL_NULL,
	PIXEL_NULL,
	-1,
	0,
	0L,
	0L,
	0
};

_LOCAL_	int	output_Scan(FBIO *ifp, register RGBpixel (*pixels), int ct);
_LOCAL_ int	put_Run(register FBIO *ifp, register int ct, int val);
_LOCAL_ int	rgb_To_Dither_Val(register RGBpixel (*pixel));

/*ARGSUSED*/
_LOCAL_ int
ptty_open(FBIO *ifp, char *ptty_name, int width, int height)
{
	FB_CK_FBIO(ifp);

	/* Check for default size */
	if( width == 0 )
		width = ifp->if_width;
	if( height == 0 )
		height = ifp->if_height;

	ifp->if_width = width;
	ifp->if_height = height;
	over_sampl = ifp->if_width / MAX_DIMENSION;
	if( (ifp->if_fd = open( ptty_name, O_RDWR, 0 )) == -1 )
		return	-1;
	(void) ptty_setsize( ifp, width, height );
	return	ifp->if_fd;
}

_LOCAL_ int
ptty_close(FBIO *ifp)
{
	return	close( ifp->if_fd ) == -1 ? -1 : 0;
}

_LOCAL_ int
ptty_clear(FBIO *ifp, RGBpixel (*bgpp))
{
	static char	ptty_buf[2] = { PT_CLEAR, NULL };

	return	write( ifp->if_fd, ptty_buf, 1 ) < 1 ? -1 : 0;
}

_LOCAL_ int
ptty_write(register FBIO *ifp, int x, int y, RGBpixel (*pixelp), long int ct)
{
	static char	ptty_buf[10];
	register int	scan_ct;

/*	y = ifp->if_width-1-y;		/* 1st quadrant */
	(void) sprintf( ptty_buf, "%c%04d%04d", PT_SEEK, CVT2DMD( x ), CVT2DMD( y ));
	if( write( ifp->if_fd, ptty_buf, 9 ) < 9 )
		return	-1;
	for( ; ct > 0; pixelp += scan_ct, x = 0 )
		{
		if( ct > ifp->if_width - x )
			scan_ct = ifp->if_width - x;
		else
			scan_ct = ct;
		if( output_Scan( ifp, pixelp, scan_ct ) == -1 )
			return	-1;
		ct -= scan_ct;
		}
	return	0;
}

_LOCAL_ int
ptty_read(FBIO *ifp, int x, int y, RGBpixel (*pixelp), long int ct)
{
/*	y = ifp->if_width-1-y;		/* 1st quadrant */
#if 0 /* Not yet implemented. */
	if( read( ifp->if_fd, (char *) pixelp, (int)(sizeof(RGBpixel)*ct) )
		< sizeof(RGBpixel)*ct
		)
		return	-1;
#endif
	return	0;
}

_LOCAL_ int
ptty_setsize(FBIO *ifp, int width, int height)
{
	static char	ptty_buf[10];

	width = CVT2DMD( width );
	height = CVT2DMD( height );
	(void) sprintf( ptty_buf, "%c%04d%04d", PT_SETSIZE, width, height );
	return	write( ifp->if_fd, ptty_buf, 9 ) == 9 ? 0 : -1;
}

_LOCAL_ int
ptty_view(FBIO *ifp, int xcenter, int ycenter, int xzoom, int yzoom)
{
	fb_sim_view(ifp, xcenter, ycenter, xzoom, yzoom);
	ptty_window_set(ifp, xcenter, ycenter);
	ptty_zoom_set(ifp, xzoom, yzoom);
	return	0;
}

_LOCAL_ int
ptty_window_set(FBIO *ifp, int x, int y)
{
	static char	ptty_buf[10];

/*	y = ifp->if_width-1-y;		/* 1st quadrant */
	(void) sprintf(	ptty_buf, "%c%04d%04d", PT_WINDOW, CVT2DMD( x ), CVT2DMD( y ) );
	return	write( ifp->if_fd, ptty_buf, 9 ) == 9 ? 0 : -1;
}

_LOCAL_ int
ptty_zoom_set(FBIO *ifp, int x, int y)
{
	static char	ptty_buf[10];

	x /= over_sampl; /* Correct for scale-down.	*/
	y /= over_sampl;
	(void) sprintf( ptty_buf, "%c%04d%04d", PT_ZOOM, x, y );
	return	write( ifp->if_fd, ptty_buf, 9 ) == 9 ? 0 : -1;
}

_LOCAL_ int
ptty_cursor(FBIO *ifp, int mode, int x, int y)
{
	static char	ptty_buf[11];

/*	y = ifp->if_width-1-y;		/* 1st quadrant */
	fb_sim_cursor(ifp, mode, x, y);
	(void) sprintf(	ptty_buf,
			"%c%1d%04d%04d",
			PT_CURSOR, mode, CVT2DMD( x ), CVT2DMD( y )
			);
	return	write( ifp->if_fd, ptty_buf, 10 ) == 10 ? 0 : -1;
}

#ifdef never
_LOCAL_ int
ptty_animate( ifp, nframes, framesz, fps )
FBIO	*ifp;
int	nframes, framesz, fps;
{
	static char	ptty_buf[14];
	(void) sprintf(	ptty_buf,
			"%c%04d%04d%04d",
			PT_ANIMATE, nframes, framesz, fps
			);
	return	write( ifp->if_fd, ptty_buf, 13 ) == 13 ? 0 : -1;
}
#endif

/*	o u t p u t _ S c a n ( )
	Take care of conversion to monochrome image, and run-length encoding
	of 1 scan line of 'ct' pixels.
	Output to stdout.
 */
_LOCAL_ int
output_Scan(FBIO *ifp, register RGBpixel (*pixels), int ct)
{
	register int	i, j;
	static char	output_buf[MAX_DIMENSION+1];
	register char	*p = output_buf;
	static int	line_ct = 1;

	/* Reduce image through pixel averaging to 256 x 256.		*/
	for( i = 0; i < ct; i += over_sampl, p++ ) {
		register int	val;
		for( j = 0, val = 0; j < over_sampl; j++, pixels++ )
			val += rgb_To_Dither_Val( pixels );
		val /= over_sampl;	/* Avg. horizontal summation.	*/
		if( line_ct == 1 )
			*p = val;
		else
			*p += val;
		if( line_ct == over_sampl )
			*p /= over_sampl;	/* Avg. vertical sum.	*/
	}
	if( line_ct < over_sampl ) {
		line_ct++;
		return	0;
	}
	else
		line_ct = 1;
	*p = '\0';

	/* Output buffer as run-length encoded byte stream.		*/
	{
	register int	byte_ct;
	for( i = 0, p = output_buf, byte_ct = 1; i < 256; i++, p++ ) {
		if( *p == *(p+1) )
			byte_ct++;
		else {
			if( put_Run( ifp, byte_ct, (int) *p ) == -1 )
				return	-1;
			byte_ct = 1;
		}
	}
	if( byte_ct > 1 && put_Run( ifp, byte_ct, (int) p[-1] ) == -1 )
		return	-1;
	}
	return	write( ifp->if_fd, "\n", 1 );
}

_LOCAL_ int
put_Run(register FBIO *ifp, register int ct, int val)
{
	static char	ptty_buf[4];
/*	(void) fprintf( stderr, "put_Run( %d, %d )\n", ct, val ); */
	while( ct > 0 ) {
		(void) sprintf(	ptty_buf,
				"%c%c%c",
				PT_WRITE, (ct >= 64 ? 64 : ct ) + ' ',
				val+'0'
				);
		if( write( ifp->if_fd, ptty_buf, 3 ) < 3 )
			return	-1;
		ct -= 64;
	}
	return	0;
}

_LOCAL_ int
rgb_To_Dither_Val(register RGBpixel (*pixel))
{
	return	(R_NTSC * (*pixel)[RED] + G_NTSC * (*pixel)[GRN]
		+ B_NTSC * (*pixel)[BLU]);
}

_LOCAL_ int
ptty_help(FBIO *ifp)
{
	fb_log( "Description: %s\n", ptty_interface.if_type );
	fb_log( "Device: %s\n", ifp->if_name );
	fb_log( "Max width/height: %d %d\n",
		ptty_interface.if_max_width,
		ptty_interface.if_max_height );
	fb_log( "Default width/height: %d %d\n",
		ptty_interface.if_width,
		ptty_interface.if_height );
	return(0);
}
@


11.7
log
@change conf.h to a wrapped config.h
@
text
@d14 1
a14 1
	$Header: /cvs/brlcad/libfb/if_ptty.c,v 11.6 2004/04/05 07:44:42 morrison Exp $ (BRL)
d17 1
a17 1
static char RCSid[] = "@@(#)$Header: /cvs/brlcad/libfb/if_ptty.c,v 11.6 2004/04/05 07:44:42 morrison Exp $ (BRL)";
@


11.6
log
@merge of ansi-6-0-branch into HEAD
@
text
@d14 1
a14 1
	$Header$ (BRL)
d17 1
a17 1
static char RCSid[] = "@@(#)$Header$ (BRL)";
d20 5
a24 1
#include "conf.h"
@


11.5
log
@update copyright to include span through 2003
@
text
@d14 1
a14 1
	$Header: /c/CVS/brlcad/libfb/if_ptty.c,v 11.4 2002/08/20 17:07:47 jra Exp $ (BRL)
d17 1
a17 1
static char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libfb/if_ptty.c,v 11.4 2002/08/20 17:07:47 jra Exp $ (BRL)";
d38 9
a46 9
_LOCAL_ int	ptty_open(),
		ptty_close(),
		ptty_clear(),
		ptty_read(),
		ptty_write(),
		ptty_view(),
		ptty_window_set(),	/* OLD */
		ptty_zoom_set(),	/* OLD */
		ptty_cursor(),
d49 2
a50 2
		ptty_setsize(),
		ptty_help();
d95 3
a97 3
_LOCAL_	int	output_Scan();
_LOCAL_ int	put_Run();
_LOCAL_ int	rgb_To_Dither_Val();
d101 1
a101 4
ptty_open( ifp, ptty_name, width, height )
FBIO	*ifp;
char	*ptty_name;
int	width, height;
d121 1
a121 2
ptty_close( ifp )
FBIO	*ifp;
d127 1
a127 3
ptty_clear( ifp, bgpp )
FBIO	*ifp;
RGBpixel	*bgpp;
d135 1
a135 5
ptty_write( ifp, x, y, pixelp, ct )
register FBIO	*ifp;
int		x, y;
RGBpixel		*pixelp;
long		ct;
d158 1
a158 5
ptty_read( ifp, x, y, pixelp, ct )
FBIO	*ifp;
int	x, y;
RGBpixel	*pixelp;
long	ct;
d171 1
a171 3
ptty_setsize( ifp, width, height )
FBIO	*ifp;
int	width, height;
d182 1
a182 4
ptty_view( ifp, xcenter, ycenter, xzoom, yzoom )
FBIO	*ifp;
int	xcenter, ycenter;
int	xzoom, yzoom;
d191 1
a191 3
ptty_window_set( ifp, x, y )
FBIO	*ifp;
int	x, y;
d201 1
a201 3
ptty_zoom_set( ifp, x, y )
FBIO	*ifp;
int	x, y;
d212 1
a212 4
ptty_cursor( ifp, mode, x, y )
FBIO	*ifp;
int	mode;
int	x, y;
d246 1
a246 4
output_Scan( ifp, pixels, ct )
FBIO		*ifp;
register RGBpixel	*pixels;
int		ct;
d293 1
a293 4
put_Run( ifp, ct, val )
register FBIO	*ifp;
register int	ct;
int		val;
d311 1
a311 2
rgb_To_Dither_Val( pixel )
register RGBpixel	*pixel;
d318 1
a318 2
ptty_help( ifp )
FBIO	*ifp;
@


11.4
log
@Restoration of entire source tree to Pre-Hartley state
@
text
@d11 1
a11 1
	This software is Copyright (C) 1986 by the United States Army.
d14 1
a14 1
	$Header: /c/CVS/brlcad/libfb/if_ptty.c,v 11.2 1998/06/27 04:29:16 mike Exp $ (BRL)
d17 1
a17 1
static char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libfb/if_ptty.c,v 11.2 1998/06/27 04:29:16 mike Exp $ (BRL)";
@


11.4.4.1
log
@sync to HEAD...
@
text
@d11 1
a11 1
	This software is Copyright (C) 1986-2004 by the United States Army.
d14 1
a14 1
	$Header: /n/cad/c/CVS/brlcad/libfb/if_ptty.c,v 11.5 2004/02/02 17:39:12 morrison Exp $ (BRL)
d17 1
a17 1
static char RCSid[] = "@@(#)$Header: /n/cad/c/CVS/brlcad/libfb/if_ptty.c,v 11.5 2004/02/02 17:39:12 morrison Exp $ (BRL)";
@


11.4.10.1
log
@merge from HEAD
@
text
@d11 1
a11 1
	This software is Copyright (C) 1986-2004 by the United States Army.
d14 1
a14 1
	$Header: /c/CVS/brlcad/libfb/if_ptty.c,v 11.5 2004/02/02 17:39:12 morrison Exp $ (BRL)
d17 1
a17 1
static char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libfb/if_ptty.c,v 11.5 2004/02/02 17:39:12 morrison Exp $ (BRL)";
@


11.4.10.2
log
@merge from head
@
text
@d14 1
a14 1
	$Header: /c/CVS/brlcad/libfb/if_ptty.c,v 11.4.10.1 2004/02/12 19:48:12 erikg Exp $ (BRL)
d17 1
a17 1
static char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libfb/if_ptty.c,v 11.4.10.1 2004/02/12 19:48:12 erikg Exp $ (BRL)";
@


11.4.2.1
log
@Initial ANSIfication
@
text
@d14 1
a14 1
	$Header: /c/CVS/brlcad/libfb/if_ptty.c,v 11.4 2002/08/20 17:07:47 jra Exp $ (BRL)
d17 1
a17 1
static char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libfb/if_ptty.c,v 11.4 2002/08/20 17:07:47 jra Exp $ (BRL)";
d38 9
a46 9
_LOCAL_ int	ptty_open(FBIO *ifp, char *ptty_name, int width, int height),
		ptty_close(FBIO *ifp),
		ptty_clear(FBIO *ifp, RGBpixel (*bgpp)),
		ptty_read(FBIO *ifp, int x, int y, RGBpixel (*pixelp), long int ct),
		ptty_write(register FBIO *ifp, int x, int y, RGBpixel (*pixelp), long int ct),
		ptty_view(FBIO *ifp, int xcenter, int ycenter, int xzoom, int yzoom),
		ptty_window_set(FBIO *ifp, int x, int y),	/* OLD */
		ptty_zoom_set(FBIO *ifp, int x, int y),	/* OLD */
		ptty_cursor(FBIO *ifp, int mode, int x, int y),
d49 2
a50 2
		ptty_setsize(FBIO *ifp, int width, int height),
		ptty_help(FBIO *ifp);
d95 3
a97 3
_LOCAL_	int	output_Scan(FBIO *ifp, register RGBpixel (*pixels), int ct);
_LOCAL_ int	put_Run(register FBIO *ifp, register int ct, int val);
_LOCAL_ int	rgb_To_Dither_Val(register RGBpixel (*pixel));
d101 4
a104 1
ptty_open(FBIO *ifp, char *ptty_name, int width, int height)
d124 2
a125 1
ptty_close(FBIO *ifp)
d131 3
a133 1
ptty_clear(FBIO *ifp, RGBpixel (*bgpp))
d141 5
a145 1
ptty_write(register FBIO *ifp, int x, int y, RGBpixel (*pixelp), long int ct)
d168 5
a172 1
ptty_read(FBIO *ifp, int x, int y, RGBpixel (*pixelp), long int ct)
d185 3
a187 1
ptty_setsize(FBIO *ifp, int width, int height)
d198 4
a201 1
ptty_view(FBIO *ifp, int xcenter, int ycenter, int xzoom, int yzoom)
d210 3
a212 1
ptty_window_set(FBIO *ifp, int x, int y)
d222 3
a224 1
ptty_zoom_set(FBIO *ifp, int x, int y)
d235 4
a238 1
ptty_cursor(FBIO *ifp, int mode, int x, int y)
d272 4
a275 1
output_Scan(FBIO *ifp, register RGBpixel (*pixels), int ct)
d322 4
a325 1
put_Run(register FBIO *ifp, register int ct, int val)
d343 2
a344 1
rgb_To_Dither_Val(register RGBpixel (*pixel))
d351 2
a352 1
ptty_help(FBIO *ifp)
@


11.4.2.2
log
@sync branch with HEAD
@
text
@d11 1
a11 1
	This software is Copyright (C) 1986-2004 by the United States Army.
d14 1
a14 1
	$Header$ (BRL)
d17 1
a17 1
static char RCSid[] = "@@(#)$Header$ (BRL)";
@


11.3
log
@Converted from K&R to ANSI C - RFH
@
text
@d38 9
a46 9
_LOCAL_ int	ptty_open(FBIO *ifp, char *ptty_name, int width, int height),
		ptty_close(FBIO *ifp),
		ptty_clear(FBIO *ifp, RGBpixel (*bgpp)),
		ptty_read(FBIO *ifp, int x, int y, RGBpixel (*pixelp), long int ct),
		ptty_write(register FBIO *ifp, int x, int y, RGBpixel (*pixelp), long int ct),
		ptty_view(FBIO *ifp, int xcenter, int ycenter, int xzoom, int yzoom),
		ptty_window_set(FBIO *ifp, int x, int y),	/* OLD */
		ptty_zoom_set(FBIO *ifp, int x, int y),	/* OLD */
		ptty_cursor(FBIO *ifp, int mode, int x, int y),
d49 2
a50 2
		ptty_setsize(FBIO *ifp, int width, int height),
		ptty_help(FBIO *ifp);
d95 3
a97 3
_LOCAL_	int	output_Scan(FBIO *ifp, register RGBpixel (*pixels), int ct);
_LOCAL_ int	put_Run(register FBIO *ifp, register int ct, int val);
_LOCAL_ int	rgb_To_Dither_Val(register RGBpixel (*pixel));
d101 4
a104 1
ptty_open(FBIO *ifp, char *ptty_name, int width, int height)
d124 2
a125 1
ptty_close(FBIO *ifp)
d131 3
a133 1
ptty_clear(FBIO *ifp, RGBpixel (*bgpp))
d141 5
a145 1
ptty_write(register FBIO *ifp, int x, int y, RGBpixel (*pixelp), long int ct)
d168 5
a172 1
ptty_read(FBIO *ifp, int x, int y, RGBpixel (*pixelp), long int ct)
d185 3
a187 1
ptty_setsize(FBIO *ifp, int width, int height)
d198 4
a201 1
ptty_view(FBIO *ifp, int xcenter, int ycenter, int xzoom, int yzoom)
d210 3
a212 1
ptty_window_set(FBIO *ifp, int x, int y)
d222 3
a224 1
ptty_zoom_set(FBIO *ifp, int x, int y)
d235 4
a238 1
ptty_cursor(FBIO *ifp, int mode, int x, int y)
d272 4
a275 1
output_Scan(FBIO *ifp, register RGBpixel (*pixels), int ct)
d322 4
a325 1
put_Run(register FBIO *ifp, register int ct, int val)
d343 2
a344 1
rgb_To_Dither_Val(register RGBpixel (*pixel))
d351 2
a352 1
ptty_help(FBIO *ifp)
@


11.2
log
@Additions to LIBFB interface and remote framebuffer protocol to
read and write monochrome rectangles.
Particularly important for sending thermal images at high speed.
@
text
@d14 1
a14 1
	$Header: /c/CVS/brlcad/libfb/if_ptty.c,v 11.1 1995/01/04 09:52:56 mike Rel4_4 $ (BRL)
d17 1
a17 1
static char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/libfb/if_ptty.c,v 11.1 1995/01/04 09:52:56 mike Rel4_4 $ (BRL)";
d38 9
a46 9
_LOCAL_ int	ptty_open(),
		ptty_close(),
		ptty_clear(),
		ptty_read(),
		ptty_write(),
		ptty_view(),
		ptty_window_set(),	/* OLD */
		ptty_zoom_set(),	/* OLD */
		ptty_cursor(),
d49 2
a50 2
		ptty_setsize(),
		ptty_help();
d95 3
a97 3
_LOCAL_	int	output_Scan();
_LOCAL_ int	put_Run();
_LOCAL_ int	rgb_To_Dither_Val();
d101 1
a101 4
ptty_open( ifp, ptty_name, width, height )
FBIO	*ifp;
char	*ptty_name;
int	width, height;
d121 1
a121 2
ptty_close( ifp )
FBIO	*ifp;
d127 1
a127 3
ptty_clear( ifp, bgpp )
FBIO	*ifp;
RGBpixel	*bgpp;
d135 1
a135 5
ptty_write( ifp, x, y, pixelp, ct )
register FBIO	*ifp;
int		x, y;
RGBpixel		*pixelp;
long		ct;
d158 1
a158 5
ptty_read( ifp, x, y, pixelp, ct )
FBIO	*ifp;
int	x, y;
RGBpixel	*pixelp;
long	ct;
d171 1
a171 3
ptty_setsize( ifp, width, height )
FBIO	*ifp;
int	width, height;
d182 1
a182 4
ptty_view( ifp, xcenter, ycenter, xzoom, yzoom )
FBIO	*ifp;
int	xcenter, ycenter;
int	xzoom, yzoom;
d191 1
a191 3
ptty_window_set( ifp, x, y )
FBIO	*ifp;
int	x, y;
d201 1
a201 3
ptty_zoom_set( ifp, x, y )
FBIO	*ifp;
int	x, y;
d212 1
a212 4
ptty_cursor( ifp, mode, x, y )
FBIO	*ifp;
int	mode;
int	x, y;
d246 1
a246 4
output_Scan( ifp, pixels, ct )
FBIO		*ifp;
register RGBpixel	*pixels;
int		ct;
d293 1
a293 4
put_Run( ifp, ct, val )
register FBIO	*ifp;
register int	ct;
int		val;
d311 1
a311 2
rgb_To_Dither_Val( pixel )
register RGBpixel	*pixel;
d318 1
a318 2
ptty_help( ifp )
FBIO	*ifp;
@


11.1
log
@Release_4.4
@
text
@d14 1
a14 1
	$Header: /m/cad/libfb/RCS/if_ptty.c,v 10.2 94/08/12 20:25:26 gdurf Exp $ (BRL)
d17 1
a17 1
static char RCSid[] = "@@(#)$Header: /m/cad/libfb/RCS/if_ptty.c,v 10.2 94/08/12 20:25:26 gdurf Exp $ (BRL)";
d68 2
@


10.2
log
@Added includes
@
text
@d14 1
a14 1
	$Header: /m/cad/libfb/RCS/if_ptty.c,v 10.1 1991/10/12 06:37:27 mike Rel4_0 gdurf $ (BRL)
d17 1
a17 1
static char RCSid[] = "@@(#)$Header: /m/cad/libfb/RCS/if_ptty.c,v 10.1 1991/10/12 06:37:27 mike Rel4_0 gdurf $ (BRL)";
@


10.1
log
@Release_4.0
@
text
@d14 1
a14 1
	$Header: /m/cad/libfb/RCS/if_ptty.c,v 9.4 91/07/26 22:41:07 mike Exp $ (BRL)
d17 1
a17 1
static char RCSid[] = "@@(#)$Header: /m/cad/libfb/RCS/if_ptty.c,v 9.4 91/07/26 22:41:07 mike Exp $ (BRL)";
d20 2
d24 2
@


9.4
log
@Added if_magic field, and FB_CK_FBIO() macro, to allow checking
FBIO pointers
@
text
@d14 1
a14 1
	$Header: /m/cad/libfb/RCS/if_ptty.c,v 9.3 90/12/11 22:22:25 phil Exp $ (BRL)
d17 1
a17 1
static char RCSid[] = "@@(#)$Header: /m/cad/libfb/RCS/if_ptty.c,v 9.3 90/12/11 22:22:25 phil Exp $ (BRL)";
@


9.3
log
@if_ struct changes.  See fb.h.  Cosmetic code cleanup.
@
text
@d14 1
a14 1
	$Header: /m/cad/libfb/RCS/if_ptty.c,v 9.2 89/09/01 01:44:33 phil Exp $ (BRL)
d17 1
a17 1
static char RCSid[] = "@@(#)$Header: /m/cad/libfb/RCS/if_ptty.c,v 9.2 89/09/01 01:44:33 phil Exp $ (BRL)";
d49 1
d100 2
@


9.2
log
@fb_flush and fb_free hooks.
@
text
@d14 1
a14 1
	$Header: if_ptty.c,v 9.1 89/05/19 05:47:57 phil Locked $ (BRL)
d17 1
a17 1
static char RCSid[] = "@@(#)$Header: if_ptty.c,v 9.1 89/05/19 05:47:57 phil Locked $ (BRL)";
a25 2
extern int	fb_sim_readrect(), fb_sim_writerect();

d33 10
a42 9
_LOCAL_ int	ptty_device_open(),
		ptty_device_close(),
		ptty_device_clear(),
		ptty_buffer_read(),
		ptty_buffer_write(),
		ptty_viewport_set(),
		ptty_window_set(),
		ptty_zoom_set(),
		ptty_cmemory_addr(),
d48 39
a86 37
FBIO ptty_interface =
		{
		ptty_device_open,
		ptty_device_close,
		fb_null,			/* reset */
		ptty_device_clear,
		ptty_buffer_read,
		ptty_buffer_write,
		fb_null,			/* read colormap */
		fb_null,			/* write colormap */
		ptty_viewport_set,
		ptty_window_set,
		ptty_zoom_set,
		fb_null,			/* curs_set */
		ptty_cmemory_addr,
		fb_null,			/* screen addr cursor move */
		fb_sim_readrect,
		fb_sim_writerect,
		fb_null,			/* flush */
		ptty_device_close,		/* free */
		ptty_help,
		"Unix pseudo-tty Interface",
		800,
		1024,
		"/dev/tty",
		800,			/* XXX - are these good defaults? */
		1024,
		-1,
		PIXEL_NULL,
		PIXEL_NULL,
		PIXEL_NULL,
		-1,
		0,
		0L,
		0L,
		0
		};
d94 1
a94 1
ptty_device_open( ifp, ptty_name, width, height )
d98 1
a98 1
	{
d112 1
a112 1
	}
d115 1
a115 1
ptty_device_close( ifp )
d117 1
a117 1
	{
d119 1
a119 1
	}
d122 1
a122 1
ptty_device_clear( ifp, bgpp )
d125 3
a127 1
	{	static char	ptty_buf[2] = { PT_CLEAR, NULL };
d129 1
a129 1
	}
d132 1
a132 1
ptty_buffer_write( ifp, x, y, pixelp, ct )
d137 4
a140 2
	{	static char	ptty_buf[10];
		register int	scan_ct;
d156 1
a156 1
	}
d159 1
a159 1
ptty_buffer_read( ifp, x, y, pixelp, ct )
d164 1
a164 1
	{
d173 1
a173 1
	}
a175 13
ptty_viewport_set( ifp, l, t, r, b )
FBIO	*ifp;
int	l, r, t, b;
	{	static char	ptty_buf[18];
	l = CVT2DMD( l );
	t = CVT2DMD( t );
	r = CVT2DMD( r ) + LAYER_BORDER*2;
	b = CVT2DMD( b ) + LAYER_BORDER*2;
	(void) sprintf( ptty_buf, "%c%04d%04d%04d%04d", PT_VIEWPORT, l, t, r, b );
	return	write( ifp->if_fd, ptty_buf, 17 ) == 17 ? 0 : -1;
	}

_LOCAL_ int
d179 3
a181 1
	{	static char	ptty_buf[10];
d186 1
a186 1
	}
d189 12
d204 3
a206 1
	{	static char	ptty_buf[10];
d210 1
a210 1
	}
d216 3
a218 1
	{	static char	ptty_buf[10];
d223 1
a223 1
	}
d226 1
a226 1
ptty_cmemory_addr( ifp, mode, x, y )
d230 3
a232 1
	{	static char	ptty_buf[11];
d234 1
d240 1
a240 1
	}
d247 2
a248 1
	{	static char	ptty_buf[14];
d254 1
a254 1
	}
d267 6
a272 4
	{	register int	i, j;
		static char	output_buf[MAX_DIMENSION+1];
		register char	*p = output_buf;
		static int	line_ct = 1;
d274 2
a275 2
	for( i = 0; i < ct; i += over_sampl, p++ )
		{	register int	val;
d285 2
a286 3
		}
	if( line_ct < over_sampl )
		{
d289 1
a289 1
		}
d295 3
a297 3
	{	register int	byte_ct;
	for( i = 0, p = output_buf, byte_ct = 1; i < 256; i++, p++ )
		{
d300 1
a300 2
		else
			{
a303 1
			}
d305 1
d310 1
a310 1
	}
d317 2
a318 1
	{	static char	ptty_buf[4];
d320 1
a320 2
	while( ct > 0 )
		{
d329 1
a329 1
		}
d331 1
a331 1
	}
d336 1
a336 1
	{
d339 1
a339 1
	}
@


9.1
log
@Release_3.5
@
text
@d14 1
a14 1
	$Header: if_ptty.c,v 8.2 89/03/03 05:54:32 mike Exp $ (BRL)
d17 1
a17 1
static char RCSid[] = "@@(#)$Header: if_ptty.c,v 8.2 89/03/03 05:54:32 mike Exp $ (BRL)";
d67 2
@


8.2
log
@Added support for fb_readrect() and fb_writerect().
@
text
@d14 1
a14 1
	$Header: if_ptty.c,v 8.1 88/10/05 00:27:37 mike Locked $ (BRL)
d17 1
a17 1
static char RCSid[] = "@@(#)$Header: if_ptty.c,v 8.1 88/10/05 00:27:37 mike Locked $ (BRL)";
@


8.1
log
@Release_3.0
@
text
@d14 1
a14 1
	$Header: if_ptty.c,v 7.4 88/09/09 23:19:13 phil Exp $ (BRL)
d17 1
a17 1
static char RCSid[] = "@@(#)$Header: if_ptty.c,v 7.4 88/09/09 23:19:13 phil Exp $ (BRL)";
d26 2
d65 2
@


7.4
log
@fbhelp function
@
text
@d14 1
a14 1
	$Header: if_ptty.c,v 7.3 88/07/14 21:02:46 phil Locked $ (BRL)
d17 1
a17 1
static char RCSid[] = "@@(#)$Header: if_ptty.c,v 7.3 88/07/14 21:02:46 phil Locked $ (BRL)";
@


7.3
log
@Pruned name string so that is can now be selected by prefix and
no longer appear as a special case in fb_generic.c
@
text
@d14 1
a14 1
	$Header: if_ptty.c,v 7.2 88/05/13 21:42:35 phil Locked $ (BRL)
d17 1
a17 1
static char RCSid[] = "@@(#)$Header: if_ptty.c,v 7.2 88/05/13 21:42:35 phil Locked $ (BRL)";
d44 2
a45 1
		ptty_setsize();
d63 1
d320 15
@


7.2
log
@lint fix
@
text
@d14 1
a14 1
	$Header: if_ptty.c,v 7.1 87/11/02 23:26:36 mike Locked $ (BRL)
d17 1
a17 1
static char RCSid[] = "@@(#)$Header: if_ptty.c,v 7.1 87/11/02 23:26:36 mike Locked $ (BRL)";
d65 1
a65 1
		"/dev/tty...",
@


7.1
log
@Release 2.3
@
text
@d14 1
a14 1
	$Header: if_ptty.c,v 6.3 87/10/15 16:02:23 moss Exp $ (BRL)
d17 1
a17 1
static char RCSid[] = "@@(#)$Header: if_ptty.c,v 6.3 87/10/15 16:02:23 moss Exp $ (BRL)";
d79 3
d240 1
a240 1
_LOCAL_
d290 1
a290 1
_LOCAL_
d311 1
a311 1
_LOCAL_
@


6.3
log
@Fixed zoom factor to match scale-down.
@
text
@d14 1
a14 1
	$Header: if_ptty.c,v 6.2 87/10/15 09:14:47 moss Locked $ (BRL)
d17 1
a17 1
static char RCSid[] = "@@(#)$Header: if_ptty.c,v 6.2 87/10/15 09:14:47 moss Locked $ (BRL)";
@


6.2
log
@Code to handle switch to 1st quadrant (from 4th) taken out and
pushed down into the DMDFB program.  This module handles scaling
for the DMD, but not coordinate system transformation anymore.
@
text
@d14 1
a14 1
	$Header: if_ptty.c,v 6.1 87/07/11 07:51:32 moss Locked $ (BRL)
d17 1
a17 1
static char RCSid[] = "@@(#)$Header: if_ptty.c,v 6.1 87/07/11 07:51:32 moss Locked $ (BRL)";
d95 1
a125 1
	over_sampl = ifp->if_width / MAX_DIMENSION;
d189 1
a189 1
	(void) sprintf(	ptty_buf, "%c%04d%04d", PT_WINDOW, CVT2DMD( x ),	CVT2DMD( y ) );
d198 2
@


6.1
log
@Release 2.0
@
text
@d14 1
a14 1
	$Header: if_ptty.c,v 5.1 87/06/24 21:51:34 mike Rel $ (BRL)
d17 1
a17 1
static char RCSid[] = "@@(#)$Header: if_ptty.c,v 5.1 87/06/24 21:51:34 mike Rel $ (BRL)";
d124 1
a124 1
	y = ifp->if_width-1-y;		/* 1st quadrant */
d149 1
a149 1
	y = ifp->if_width-1-y;		/* 1st quadrant */
d188 1
a188 1
	y = ifp->if_width-1-y;		/* 1st quadrant */
d208 1
a208 1
	y = ifp->if_width-1-y;		/* 1st quadrant */
@


5.1
log
@Release 1.24
@
text
@d14 1
a14 1
	$Header: if_ptty.c,v 4.2 87/02/12 22:06:36 mike Exp $ (BRL)
d17 1
a17 1
static char RCSid[] = "@@(#)$Header: if_ptty.c,v 4.2 87/02/12 22:06:36 mike Exp $ (BRL)";
@


4.2
log
@Release 1.20 -- First Formal Release
@
text
@d14 1
a14 1
	$Header: if_ptty.c,v 4.1 86/12/29 03:42:50 mike Rel1 $ (BRL)
d17 1
a17 1
static char RCSid[] = "@@(#)$Header: if_ptty.c,v 4.1 86/12/29 03:42:50 mike Rel1 $ (BRL)";
@


4.1
log
@BRL CAD Distribution Release 1.10
@
text
@d14 1
a14 1
	$Header: if_ptty.c,v 1.10 86/12/28 21:52:25 mike Exp $ (BRL)
d17 1
a17 1
static char RCSid[] = "@@(#)$Header: if_ptty.c,v 1.10 86/12/28 21:52:25 mike Exp $ (BRL)";
@


1.10
log
@Switched to local copy of header file.
@
text
@d14 1
a14 1
	$Header: if_ptty.c,v 1.9 86/11/28 20:17:31 mike Locked $ (BRL)
d17 1
a17 1
static char RCSid[] = "@@(#)$Header: if_ptty.c,v 1.9 86/11/28 20:17:31 mike Locked $ (BRL)";
@


1.9
log
@open default width code
@
text
@d14 1
a14 1
	$Header: if_ptty.c,v 1.8 86/11/13 21:31:21 phil Locked $ (BRL)
d17 1
a17 1
static char RCSid[] = "@@(#)$Header: if_ptty.c,v 1.8 86/11/13 21:31:21 phil Locked $ (BRL)";
a21 1
#include "/vld/moss/src/dmdfb/dmdfb.h"		/* XXX */
d23 1
@


1.8
log
@curs_set name change.
@
text
@d14 1
a14 1
	$Header: if_ptty.c,v 1.7 86/10/29 01:35:00 phil Locked $ (BRL)
d17 1
a17 1
static char RCSid[] = "@@(#)$Header: if_ptty.c,v 1.7 86/10/29 01:35:00 phil Locked $ (BRL)";
d87 6
@


1.7
log
@removed pbytes
@
text
@d14 1
a14 1
	$Header: if_ptty.c,v 1.6 86/10/28 17:58:16 phil Locked $ (BRL)
d17 1
a17 1
static char RCSid[] = "@@(#)$Header: if_ptty.c,v 1.6 86/10/28 17:58:16 phil Locked $ (BRL)";
d59 1
a59 1
		fb_null,			/* initialize bitmap */
@


1.6
log
@added if_debug
@
text
@d14 1
a14 1
	$Header: if_ptty.c,v 1.5 86/10/25 11:28:17 phil Locked $ (BRL)
d17 1
a17 1
static char RCSid[] = "@@(#)$Header: if_ptty.c,v 1.5 86/10/25 11:28:17 phil Locked $ (BRL)";
a73 1
		0L,
@


1.5
log
@RGBpixel conversion (untested)
@
text
@d14 1
a14 1
	$Header: if_ptty.c,v 1.4 86/10/14 23:13:54 phil Locked $ (BRL)
d17 1
a17 1
static char RCSid[] = "@@(#)$Header: if_ptty.c,v 1.4 86/10/14 23:13:54 phil Locked $ (BRL)";
d76 2
a77 1
		0L
@


1.4
log
@/dev change
@
text
@d14 1
a14 1
	$Header: if_ptty.c,v 1.3 86/10/06 21:30:44 phil Locked $ (BRL)
d17 1
a17 1
static char RCSid[] = "@@(#)$Header: if_ptty.c,v 1.3 86/10/06 21:30:44 phil Locked $ (BRL)";
d105 1
a105 1
Pixel	*bgpp;
d114 1
a114 1
Pixel		*pixelp;
d140 1
a140 1
Pixel	*pixelp;
d145 2
a146 2
	if( read( ifp->if_fd, (char *) pixelp, (int)(sizeof(Pixel)*ct) )
		< sizeof(Pixel)*ct
d232 1
a232 1
register Pixel	*pixels;
d302 1
a302 1
register Pixel	*pixel;
d304 2
a305 1
	return	(R_NTSC*pixel->red + G_NTSC*pixel->green + B_NTSC*pixel->blue);
@


1.3
log
@Converted to 1st Quadrant
(Untested)
@
text
@d14 1
a14 1
	$Header: if_ptty.c,v 1.2 86/10/03 06:34:43 mike Exp $ (BRL)
d17 1
a17 1
static char RCSid[] = "@@(#)$Header: if_ptty.c,v 1.2 86/10/03 06:34:43 mike Exp $ (BRL)";
d65 1
a65 1
		"tty...",
@


1.2
log
@Working version
@
text
@d14 1
a14 1
	$Header: if_ptty.c,v 1.1 86/10/02 02:18:01 mike Locked $ (BRL)
d17 1
a17 1
static char RCSid[] = "@@(#)$Header: if_ptty.c,v 1.1 86/10/02 02:18:01 mike Locked $ (BRL)";
d118 1
d143 1
d182 1
d202 1
@


1.1
log
@Initial revision
@
text
@d14 1
a14 1
	$Header$ (BRL)
d17 1
a17 1
static char RCSid[] = "@@(#)$Header$ (BRL)";
d21 1
a24 12

#ifndef O_CREAT
#ifdef O_RDONLY
#undef O_RDONLY
#undef O_WRONLY
#undef O_RDWR
#undef O_NDELAY
#undef O_APPEND
#endif
#include <sys/types.h>
#include <sys/file.h>
#endif
@
