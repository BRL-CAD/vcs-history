head	11.5;
access;
symbols
	ansi-20040405-merged:11.4
	postmerge-20040405-ansi:11.4
	premerge-20040404-ansi:11.4
	postmerge-autoconf:11.4
	autoconf-freeze:11.4
	premerge-autoconf:11.4
	ansi-20040316-freeze:11.4
	postmerge-20040315-windows:11.4
	premerge-20040315-windows:11.4
	windows-20040315-freeze:11.4
	autoconf-20031203:11.4
	autoconf-20031202:11.4
	autoconf-branch:11.4.0.12
	phong-branch:11.4.0.10
	photonmap-branch:11.4.0.8
	rel-6-1-DP:11.4
	windows-branch:11.4.0.6
	rel-6-0-2:11.4
	ansi-branch:11.4.0.4
	rel-6-0-1-branch:11.4.0.2
	hartley-6-0-post:11.4
	hartley-6-0-pre:11.4
	rel-6-0-1:11.4
	rel-6-0:11.4
	rel-5-4:11.3
	offsite-5-3-pre:11.4
	rel-5-3:11.3
	rel-5-2:11.3
	rel-5-1-branch:11.3.0.2
	rel-5-1:11.3
	rel-5-0:11.3
	rel-5-0-beta:11.3
	rel-4-5:11.3
	ctj-4-5-post:11.3
	ctj-4-5-pre:11.3
	rel-4-4:11.1
	rel-4-0:10.1
	rel-3-5:2.0
	rel-3-0:2.0
	rel-2-3:2.0
	rel-2-0:2.0
	rel-1-24:2.0
	rel-1-20:2.0
	rel-1-10:2.0
	rt-2:2.0
	rt:1.2;
locks; strict;
comment	@ * @;


11.5
date	2004.05.21.17.48.33;	author morrison;	state dead;
branches;
next	11.4;

11.4
date	2000.08.24.23.12.24;	author mike;	state Exp;
branches;
next	11.3;

11.3
date	97.01.03.17.42.17;	author jra;	state Exp;
branches;
next	11.2;

11.2
date	95.06.21.03.43.22;	author gwyn;	state Exp;
branches;
next	11.1;

11.1
date	95.01.04.10.35.18;	author mike;	state Rel4_4;
branches;
next	10.2;

10.2
date	93.10.26.06.07.55;	author mike;	state Exp;
branches;
next	10.1;

10.1
date	91.10.12.06.54.01;	author mike;	state Rel4_0;
branches;
next	2.1;

2.1
date	91.08.30.17.54.36;	author mike;	state Exp;
branches;
next	2.0;

2.0
date	84.12.26.16.46.58;	author dpk;	state Exp;
branches;
next	1.2;

1.2
date	83.12.16.00.08.53;	author dpk;	state BRL;
branches;
next	1.1;

1.1
date	83.12.16.00.08.50;	author dpk;	state Exp;
branches;
next	;


desc
@Jove is an EMACS like screen editor which will fit on 11's and Vaxen
@


11.5
log
@moved to src/other/jove/
@
text
@/*
 *			J O V E _ M A R K S . C
 *
 * $Revision: 11.4 $
 *
 * $Log: jove_marks.c,v $
 * Revision 11.4  2000/08/24 23:12:24  mike
 *
 * lint, RCSid
 *
 * Revision 11.3  1997/01/03  17:42:17  jra
 * Mods for Irix 6.2
 *
 * Revision 11.2  1995/06/21  03:43:22  gwyn
 * Eliminated trailing blanks.
 *
 * Revision 11.1  95/01/04  10:35:18  mike
 * Release_4.4
 *
 * Revision 10.2  93/10/26  06:07:55  mike
 * ANSI C
 *
 * Revision 10.1  91/10/12  06:54:01  mike
 * Release_4.0
 *
 * Revision 2.1  91/08/30  17:54:36  mike
 * Changed #include directives to distinguish between local and system header
 * files.
 *
 * Revision 2.0  84/12/26  16:46:58  dpk
 * System as distributed to Berkeley 26 Dec 84
 *
 * Revision 1.2  83/12/16  00:08:53  dpk
 * Added distinctive RCS header
 *
 */
#ifndef lint
static const char RCSid[] = "@@(#)$Header: /n/xoff/cvs/brlcad/jove/jove_marks.c,v 11.4 2000/08/24 23:12:24 mike Exp $";
#endif

/*
   Jonathan Payne at Lincoln-Sudbury Regional High School 5-25-83

   jove_marks.c

   Creation of marks, and routines to adjust the marks after insertion
   or deletion.  */

#include "./jove.h"

void	PopMark();
void	ToMark();
void	DFixMarks();

MARK *
DoMakeMark(buf, line, column)
BUFFER	*buf;
register LINE	*line;
{
	register MARK	*newmark = (MARK *) emalloc(sizeof *newmark);

	MarkSet(newmark, line, column);
	newmark->m_next = buf->b_marks;
	buf->b_marks = newmark;
	return newmark;
}

MARK *
MakeMark(line, col)
LINE	*line;
{
	return DoMakeMark(curbuf, line, col);
}

void
DelMark(m)
MARK	*m;
{
	DoDelMark(curbuf, m);
}

void
DoDelMark(b, m)
BUFFER	*b;
register MARK	*m;
{
	register MARK	*mp = b->b_marks;

	if (m == mp)
		b->b_marks = m->m_next;
	else {
		while (mp != 0 && mp->m_next != m)
			mp = mp->m_next;
		if (mp == 0)
			complain("Trying to delete unknown mark!");
		mp->m_next = m->m_next;
	}
	free((char *) m);
}

void
AllMarkSet(b, line, col)
BUFFER	*b;
register LINE	*line;
{
	register MARK	*mp;

	for (mp = b->b_marks; mp; mp = mp->m_next)
		MarkSet(mp, line, col);
}

void
MarkSet(m, line, column)
MARK	*m;
LINE	*line;
{
	m->m_line = line;
	m->m_char = column;
}

void
PopMark()
{
	int	pmark;

	if (curmark == 0)
		return;
	if (curbuf->b_markring[(curbuf->b_themark + 1) % NMARKS] == 0) {
		pmark = curbuf->b_themark;
		do {
			if (--pmark < 0)
				pmark = NMARKS - 1;
		} while (curbuf->b_markring[pmark] != 0);

		curbuf->b_markring[pmark] = MakeMark(curline, curchar);
		ToMark(curmark);
		DelMark(curmark);
		curmark = 0;
	} else
		PtToMark();

	pmark = curbuf->b_themark - 1;
	if (pmark < 0)
		pmark = NMARKS - 1;
	curbuf->b_themark = pmark;
}

void
SetMark()
{
	if (exp_p)
		PopMark();
	else {
		curbuf->b_themark = (curbuf->b_themark + 1) % NMARKS;
		if (curmark == 0)
			curmark = MakeMark(curline, curchar);
		else
			MarkSet(curmark, curline, curchar);
		s_mess("Point pushed");
	}
}

/* Move point to mark */

void
ToMark(m)
MARK	*m;
{
	if (m == 0)
		return;
	DotTo(m->m_line, m->m_char);
}

MARK *
CurMark()
{
	if (curmark == 0)
		complain("No mark");
	return curmark;
}

void
PtToMark()
{
	LINE	*mline;
	int	mchar;
	MARK	*m = CurMark();

	mline = curline;
	mchar = curchar;

	ToMark(m);
	MarkSet(m, mline, mchar);
}

/* Fix marks for after a deletion */
void
DFixMarks(line1, char1, line2, char2)
register LINE	*line1,
		*line2;
{
	register MARK	*m;
	LINE	*lp = line1;

	if (curbuf->b_marks == 0)
		return;
	while (lp != line2->l_next) {
		for (m = curbuf->b_marks; m; m = m->m_next)
			if (m->m_line == lp)
				m->m_char |= (1 << 15);
		lp = lp->l_next;
	}
	for (m = curbuf->b_marks; m; m = m->m_next) {
		if ((m->m_char & (1 << 15)) == 0)
			continue;	/* Not effected */
		m->m_char &= ~(1 << 15);
		if (m->m_line == line1 && m->m_char < char1)
			continue;	/* This mark is not affected */
		if (line1 == line2) {
			if (m->m_char >= char1 && m->m_char <= char2)
				m->m_char = char1;
			else if (m->m_char > char2)
				m->m_char -= (char2 - char1);
			/* Same line move the mark backward */
		} else if (m->m_line == line2) {
			if (m->m_char > char2)
				m->m_char = char1 + (m->m_char - char2);
			else
				m->m_char = char1;
			m->m_line = line1;
		} else {
			m->m_char = char1;
			m->m_line = line1;
		}
	}
}

void
IFixMarks(line1, char1, line2, char2)
register LINE	*line1,
		*line2;
{
	register MARK	*m;

	for (m = curbuf->b_marks; m; m = m->m_next) {
		if (m->m_line == line1) {
			if (m->m_char > char1) {
				m->m_line = line2;
				if (line1 == line2)
					m->m_char += (char2 - char1);
				else
					m->m_char = char2 + (m->m_char - char1);
			}
		}
	}
}
@


11.4
log
@
lint, RCSid
@
text
@d4 1
a4 1
 * $Revision: 11.3 $
d7 4
d38 1
a38 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/jove/jove_marks.c,v 11.3 1997/01/03 17:42:17 jra Exp $";
@


11.3
log
@Mods for Irix 6.2
@
text
@d4 1
a4 1
 * $Revision: 11.2 $
d7 3
d34 1
a34 1
static char RCSid[] = "@@(#)$Header: /m/cad/jove/RCS/jove_marks.c,v 11.2 1995/06/21 03:43:22 gwyn Exp jra $";
@


11.2
log
@Eliminated trailing blanks.
@
text
@d4 1
a4 1
 * $Revision: 11.1 $
d6 4
a9 1
 * $Log:	jove_marks.c,v $
d31 1
a31 1
static char RCSid[] = "@@(#)$Header: /m/cad/jove/RCS/jove_marks.c,v 11.1 95/01/04 10:35:18 mike Rel4_4 $";
d68 1
d75 1
d94 1
d105 1
d141 1
d175 1
d231 1
@


11.1
log
@Release_4.4
@
text
@d2 1
a2 1
 *			J O V E _ M A R K S . C 
d4 1
a4 1
 * $Revision: 10.2 $
d7 3
d12 1
a12 1
 * 
d15 1
a15 1
 * 
d19 1
a19 1
 * 
d22 1
a22 1
 * 
d25 1
a25 1
 * 
d28 1
a28 1
static char RCSid[] = "@@(#)$Header: /m/cad/jove/RCS/jove_marks.c,v 10.2 93/10/26 06:07:55 mike Exp $";
d33 1
a33 1
  
d237 1
a237 1
		} 
@


10.2
log
@ANSI C
@
text
@d4 1
a4 1
 * $Revision: 10.1 $
d7 3
d25 1
a25 1
static char RCSid[] = "@@(#)$Header: /m/cad/jove/RCS/jove_marks.c,v 10.1 91/10/12 06:54:01 mike Rel4_0 Locker: mike $";
@


10.1
log
@Release_4.0
@
text
@d4 1
a4 1
 * $Revision: 2.1 $
d7 3
d22 1
a22 1
static char RCSid[] = "@@(#)$Header: /m/cad/jove/RCS/jove_marks.c,v 2.1 91/08/30 17:54:36 mike Exp $";
d35 4
d101 1
d144 1
d175 1
a175 1

@


2.1
log
@Changed #include directives to distinguish between local and system header
files.
@
text
@d4 1
a4 1
 * $Revision: 2.0 $
d7 4
d19 1
a19 1
static char RCSid[] = "@@(#)$Header: jove_marks.c,v 2.0 84/12/26 16:46:58 dpk Exp $";
@


2.0
log
@System as distributed to Berkeley 26 Dec 84
@
text
@d4 1
a4 1
 * $Revision: 1.2 $
d7 3
d15 1
a15 1
static char RCSid[] = "@@(#)$Header: jove_marks.c,v 1.2 83/12/16 00:08:53 dpk BRL $";
d26 1
a26 1
#include "jove.h"
@


1.2
log
@Added distinctive RCS header
@
text
@d4 1
a4 1
 * $Revision$
d6 4
a9 1
 * $Log$
d12 1
a12 1
static char RCSid[] = "@@(#)$Header$";
@


1.1
log
@Original 4.2 Distribution Source
@
text
@d2 11
@
