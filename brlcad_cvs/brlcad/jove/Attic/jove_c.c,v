head	11.5;
access;
symbols
	ansi-20040405-merged:11.4
	postmerge-20040405-ansi:11.4
	premerge-20040404-ansi:11.4
	postmerge-autoconf:11.4
	autoconf-freeze:11.4
	premerge-autoconf:11.4
	ansi-20040316-freeze:11.4
	postmerge-20040315-windows:11.4
	premerge-20040315-windows:11.4
	windows-20040315-freeze:11.4
	autoconf-20031203:11.4
	autoconf-20031202:11.4
	autoconf-branch:11.4.0.12
	phong-branch:11.4.0.10
	photonmap-branch:11.4.0.8
	rel-6-1-DP:11.4
	windows-branch:11.4.0.6
	rel-6-0-2:11.4
	ansi-branch:11.4.0.4
	rel-6-0-1-branch:11.4.0.2
	hartley-6-0-post:11.4
	hartley-6-0-pre:11.4
	rel-6-0-1:11.4
	rel-6-0:11.4
	rel-5-4:11.3
	offsite-5-3-pre:11.4
	rel-5-3:11.3
	rel-5-2:11.3
	rel-5-1-branch:11.3.0.2
	rel-5-1:11.3
	rel-5-0:11.3
	rel-5-0-beta:11.3
	rel-4-5:11.3
	ctj-4-5-post:11.3
	ctj-4-5-pre:11.3
	rel-4-4:11.1
	rel-4-0:10.1
	rel-3-5:2.0
	rel-3-0:2.0
	rel-2-3:2.0
	rel-2-0:2.0
	rel-1-24:2.0
	rel-1-20:2.0
	rel-1-10:2.0
	rt-2:2.0
	rt:1.2;
locks; strict;
comment	@ * @;


11.5
date	2004.05.21.17.48.31;	author morrison;	state dead;
branches;
next	11.4;

11.4
date	2000.08.24.23.12.22;	author mike;	state Exp;
branches;
next	11.3;

11.3
date	97.01.03.17.42.17;	author jra;	state Exp;
branches;
next	11.2;

11.2
date	95.06.21.03.39.14;	author gwyn;	state Exp;
branches;
next	11.1;

11.1
date	95.01.04.10.35.09;	author mike;	state Rel4_4;
branches;
next	10.1;

10.1
date	91.10.12.06.53.55;	author mike;	state Rel4_0;
branches;
next	2.3;

2.3
date	91.08.30.18.59.44;	author mike;	state Exp;
branches;
next	2.2;

2.2
date	91.08.30.18.46.02;	author mike;	state Exp;
branches;
next	2.1;

2.1
date	91.08.30.17.54.29;	author mike;	state Exp;
branches;
next	2.0;

2.0
date	84.12.26.16.45.11;	author dpk;	state Exp;
branches;
next	1.2;

1.2
date	83.12.16.00.07.20;	author dpk;	state BRL;
branches;
next	1.1;

1.1
date	83.12.16.00.07.17;	author dpk;	state Exp;
branches;
next	;


desc
@Jove is an EMACS like screen editor which will fit on 11's and Vaxen
@


11.5
log
@moved to src/other/jove/
@
text
@/*
 *			J O V E _ C . C
 *
 * $Revision: 11.4 $
 *
 * $Log: jove_c.c,v $
 * Revision 11.4  2000/08/24 23:12:22  mike
 *
 * lint, RCSid
 *
 * Revision 11.3  1997/01/03  17:42:17  jra
 * Mods for Irix 6.2
 *
 * Revision 11.2  1995/06/21  03:39:14  gwyn
 * Eliminated trailing blanks.
 *
 * Revision 11.1  95/01/04  10:35:09  mike
 * Release_4.4
 *
 * Revision 10.1  91/10/12  06:53:55  mike
 * Release_4.0
 *
 * Revision 2.3  91/08/30  18:59:44  mike
 * Modifications for clean compilation on the XMP
 *
 * Revision 2.2  91/08/30  18:46:02  mike
 * Changed from BSD index/rindex nomenclature to SYSV strchr/strrchr.
 *
 * Revision 2.1  91/08/30  17:54:29  mike
 * Changed #include directives to distinguish between local and system header
 * files.
 *
 * Revision 2.0  84/12/26  16:45:11  dpk
 * System as distributed to Berkeley 26 Dec 84
 *
 * Revision 1.2  83/12/16  00:07:20  dpk
 * Added distinctive RCS header
 *
 */
#ifndef lint
static const char RCSid[] = "@@(#)$Header: /n/xoff/cvs/brlcad/jove/jove_c.c,v 11.4 2000/08/24 23:12:22 mike Exp $";
#endif

/*
   Jonathan Payne at Lincoln-Sudbury Regional High School 5-25-83

   jove_c.c

   contains commands for C mode, paren matching routines are in here. */

#include "./jove.h"

BUFLOC *
m_paren(orig, stop)
char	orig;		/* One we are on */
LINE	*stop;
{
	char	*origs = "(){}",
		*matches = ")(}{",
		matcher;
	int	which,
		forward,
		count = 0;
	register LINE	*lp = curline;
	register char	*cp,
			c = '\0';
	int	c_char = curchar;
	static BUFLOC	ret;

	which = strchr(origs, orig) - origs;
	forward = (which % 2) == 0;
	matcher = matches[which];

	while (count >= 0) {
		if ((forward && lp == stop->l_next) ||
					(!forward && lp == stop->l_prev))
			return 0;
		if (forward) {
			cp = getright(lp, genbuf) + c_char;
			while (c = *++cp) {
				c_char++;
				if (c == matcher)
					count -= NotInQuotes(genbuf, c_char);
				else if (c == orig)
					count += NotInQuotes(genbuf, c_char);
				if (count < 0)
					goto done;
			}
			lp = lp->l_next;
			c_char = -1;
		} else {
			cp = getright(lp, genbuf);
			cp += (c_char >= 0 ? c_char : (c_char = strlen(genbuf)));
			while ((cp > genbuf) && (c = *--cp)) {
				--c_char;
				if (c == matcher)
					count -= NotInQuotes(genbuf, c_char);
				else if (c == orig)
					count += NotInQuotes(genbuf, c_char);
				if (count < 0)
					goto done;
			}
			c_char = -1;
			lp = lp->l_prev;
		}
	}
done:
	if (count >= 0)
		return 0;
	ret.p_line = lp;
	ret.p_char = forward ? (cp - genbuf) + 1 : (cp - genbuf);
	return &ret;
}

void
Fparen()
{
	FindMatch(1);
}

void
Bparen()
{
	FindMatch(-1);
}

/* Move to the matching brace or paren depending on the current position
 * in the buffer.
 */

void
FindMatch(dir)
{
	BUFLOC	*bp;
	char	c;

	bp = dosearch(dir > 0 ? "[{(]" : "[})]", dir, 1);
	if (bp == 0)
		complain((char *) 0);
	SetDot(bp);
	if (dir > 0)
		BackChar();
	c = linebuf[curchar];
	if (c == '\0' || strchr("){}(", c) == 0)
		complain((char *) 0);
	if (!NotInQuotes(linebuf, curchar))	/* If in quotes */
		complain("In quotes");
	else {
		bp = m_paren(c, dir > 0 ? curbuf->b_dol : curbuf->b_zero);
		if (bp)
			SetDot(bp);
		else
			complain("No match");
	}
}

/* Make sure character at c_char is not surrounded by double
 * or single quotes.
 */

char	quots[10];

int
NotInQuotes(buf, pos)
char	*buf;
{
	char	quotchar = 0,
		c;
	int	i;

	if (quots[0] == 0)
		return 1;	/* Not in quotes */
	for (i = 0; i < pos && buf[i]; i++) {
		if ((c = buf[i]) == '\\') {
			i++;
			continue;
		}
		if (!strchr(quots, c))
			continue;
		if (quotchar == 0)
			quotchar = c;
		else if (c == quotchar)
			quotchar = 0;	/* Terminated string */
	}
	return (quotchar == 0);
}
@


11.4
log
@
lint, RCSid
@
text
@d4 1
a4 1
 * $Revision: 11.3 $
d7 4
d41 1
a41 1
static const char RCSid[] = "@@(#)$Header: /c/CVS/brlcad/jove/jove_c.c,v 11.3 1997/01/03 17:42:17 jra Exp $";
@


11.3
log
@Mods for Irix 6.2
@
text
@d4 1
a4 1
 * $Revision: 11.2 $
d7 3
d37 1
a37 1
static char RCSid[] = "@@(#)$Header: /m/cad/jove/RCS/jove_c.c,v 11.2 1995/06/21 03:39:14 gwyn Exp jra $";
d159 1
@


11.2
log
@Eliminated trailing blanks.
@
text
@d4 1
a4 1
 * $Revision: 11.1 $
d6 4
a9 1
 * $Log:	jove_c.c,v $
d34 1
a34 1
static char RCSid[] = "@@(#)$Header: /m/cad/jove/RCS/jove_c.c,v 11.1 95/01/04 10:35:09 mike Rel4_4 $";
d108 1
d114 1
d124 1
@


11.1
log
@Release_4.4
@
text
@d2 1
a2 1
 *			J O V E _ C . C 
d4 1
a4 1
 * $Revision: 10.1 $
d7 3
d12 1
a12 1
 * 
d15 1
a15 1
 * 
d18 1
a18 1
 * 
d22 1
a22 1
 * 
d25 1
a25 1
 * 
d28 1
a28 1
 * 
d31 1
a31 1
static char RCSid[] = "@@(#)$Header: /m/cad/jove/RCS/jove_c.c,v 10.1 91/10/12 06:53:55 mike Rel4_0 $";
@


10.1
log
@Release_4.0
@
text
@d4 1
a4 1
 * $Revision: 2.3 $
d7 3
d28 1
a28 1
static char RCSid[] = "@@(#)$Header: /m/cad/jove/RCS/jove_c.c,v 2.3 91/08/30 18:59:44 mike Exp $";
@


2.3
log
@Modifications for clean compilation on the XMP
@
text
@d4 1
a4 1
 * $Revision: 2.2 $
d7 3
d25 1
a25 1
static char RCSid[] = "@@(#)$Header: /m/cad/jove/RCS/jove_c.c,v 2.2 91/08/30 18:46:02 mike Exp $";
@


2.2
log
@Changed from BSD index/rindex nomenclature to SYSV strchr/strrchr.
@
text
@d4 1
a4 1
 * $Revision: 2.1 $
d7 3
d22 1
a22 1
static char RCSid[] = "@@(#)$Header: /m/cad/jove/RCS/jove_c.c,v 2.1 91/08/30 17:54:29 mike Exp $";
d47 1
a47 1
			c;
@


2.1
log
@Changed #include directives to distinguish between local and system header
files.
@
text
@d4 1
a4 1
 * $Revision: 2.0 $
d7 4
d19 1
a19 1
static char RCSid[] = "@@(#)$Header: jove_c.c,v 2.0 84/12/26 16:45:11 dpk Exp $";
d48 1
a48 1
	which = index(origs, orig) - origs;
d119 1
a119 1
	if (c == '\0' || index("){}(", c) == 0)
d152 1
a152 1
		if (!index(quots, c))
@


2.0
log
@System as distributed to Berkeley 26 Dec 84
@
text
@d4 1
a4 1
 * $Revision: 1.2 $
d7 3
d15 1
a15 1
static char RCSid[] = "@@(#)$Header: jove_c.c,v 1.2 83/12/16 00:07:20 dpk BRL $";
d25 1
a25 1
#include "jove.h"
@


1.2
log
@Added distinctive RCS header
@
text
@d4 1
a4 1
 * $Revision$
d6 4
a9 1
 * $Log$
d12 1
a12 1
static char RCSid[] = "@@(#)$Header$";
@


1.1
log
@Original 4.2 Distribution Source
@
text
@d2 11
@
