head	1.2;
access;
symbols;
locks; strict;
comment	@ * @;


1.2
date	2007.03.29.13.54.32;	author erikgreenwald;	state Exp;
branches;
next	1.1;

1.1
date	2007.03.16.19.22.14;	author erikgreenwald;	state Exp;
branches;
next	;


desc
@@


1.2
log
@use linear fastf_t buf for tri data instead of typedef on typedef on typedef
@
text
@#ifndef TRI_H
#define TRI_H

struct tri_region_s {
	int magic;
	struct tri_region_s *next;	/* singly linked list */
	char *name;
	int ntri;
	fastf_t *t;
};

/* 
 * loads a linked list of regions with triangles. Triangles are CCW. Will use a
 * cache if available.
 */
struct tri_region_s *tri_load(const char *filename, int numreg, const char **regs);
int close_tris(struct tri_region_s *);

#endif
@


1.1
log
@beginning of triangle caching
@
text
@a3 2
typedef point_t tri_t[3];

d9 1
a9 1
	tri_t *t;
d16 1
a16 1
struct tri_region_s *load_tris(char *filename, int nreg, char **regs);
@

